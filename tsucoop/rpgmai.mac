Title	RPGMAIL	Mail Handling section of RPG

	Search	RPGUNV

	TWOSEG

	Entry	Send,Post,Mail,Opnotice
	Intern	RFLBLK				; ** NOTE ** used by LKLUD
						; and by RDBLK/WTBLK

	Extern	JOBFF,JOBREL
	Extern	BYENOW,CPOPJ,CPOPJ1,EX
	Extern	BUF,SHED,SBUF,NAMCT,NAMPT
	Extern	SVNAM,SVEXT,SVPPN,SVJBFF
	Extern	GETPAR,GETCH,GETNMS,GSTRN,GTUNO
	Extern	TPSIX,YN,PROMPT,OPUD,PRTIM1,TDATE
	Extern	RDBLK,WTBLK,LKLUD,LDPRV,LOGPPN

	Reloc	400000

COMMENT ! MAIL CODE

DEFINITIONS:
PACKET = 4-WORD MAIL-WAITING BLOCK,TELLS WHAT'S WAITING
	FOR (USERNAME).  FORMAT:
		USERNAME1 (SIXBIT)
		USERNAME2 (SIXBIT)
		POINTER,,POINTER
		POINTER,,POINTER
POINTER= MAIL NUMBER | 400000+CURSOR | 600000

MAIL NUMBER  = INDEX TO HELP FIND SPECIFIC MAIL PACKAGE WAITING
	FOR USERNAME.

CURSOR = POINTER TO PACKET
600000 = NULL MAIL NUMBER

CURSOR FORMAT :
	(<WORD NUMBER>LSH ^D9) + BLOCK NUMBER
	  (CODE SAYS LSH 11 OCTAL)
  PACKETS CONTAIN CURSORS IN CASE ANY GIVEN USER HAS MORE
  THAN 4 MAIL PACKAGES WAITING FOR HIM. 400000+CURSOR POINTS TO
  AN OVERFLOW PACKET CONTAINING ADDITIONAL <POINTER>'S

<MAIL PACKAGE> = 100 OCTAL WORD BLOCK CONTAINING MAIL TEXT
	PLUS SENDER NAME, TIME AND ADDRESSEE LIST. FORMAT:

0	SENDER1		(SIXBIT)
1	SENDER2		(SIXBIT)
2	SENDER PPN
3	DATE
4	TIME
5	CURSOR 1	BEGIN LIST OF ADDRESSEES
	CURSOR 2
	 ...
	 ...
	  -1		(TERMINATES LIST OF ADDRESSEES)
	/ASCIZ TEXT
	OF MESSAGE /

MAIL NUMBERS LOCATE MAIL PACKAGES AS FOLLOWS (ALL OCTAL):
(<MAIL NUMBER>/2)+210 = FILE BLOCK NUMBER OF PACKAGE
 IF <MAIL NUMBER> IS EVEN, PACKAGE LIVES IN WORDS 0-77 OF BLOCK
 IF ODD, PACKAGE LIVES IN WORDS 100-177 OF FILE BLOCK

PACKETS ARE INITIALLY FOUND BY HASHING USERNAME AS FOLLOWS,
ALL OCTAL:
	FILE BLOCK NUMBER = 1+
	 ((USERNAME1+USERNAME2) TLZ 1B0)/MBXHSH
 SEARCH THIS AND SUBSEQUENT BLOCKS FOR PACKETS WITH
 MATCHING USERNAME1,USERNAME2, QUITTING WHEN PACKET
 WITH 0 USERNAME1 IS FOUND.

OVERALL MAILBOX FILE ORGANIZATION
---------------------------------
BLOCK 0 NOT USED
BLOCKS 1-177 PACKETS
	WITHIN EACH BLOCK, PACKETS ARE PACKED FROM
	WORD 0 TOWARD WORD 200, FOLLOWED BY A PACKET
	WITH USERNAME = -1
BLOCKS 200-210 OVERFLOW AREA FOR PACKETS, SAME FORMAT AS 1-177
BLOCKS 210 - INF  MAIL PACKAGES
	WITHIN EACH BLOCK,
	WORDS 0-77  PACKAGE FOR EVEN MAILNUMBER
	WORDS 100-177 PACKAGE FOR ODD MAILNUMBER

--------

!
;NOTE: MAIL CODE HAS EVIDENTLY GONE THRU NUMEROUS HACKS; TERMINOLOGY
;IN COMMENTS ETC. IS NOT CONSISTENT; PARTICULARLY, A "MAIL INDEX"
;IS A CURSOR. A "MAIL PACKET" IS A MAIL PACKAGE. /AAA

SEND:	SETZM	NAMCT	;NAME COUNT
	SETZM	OLDJFF#		;USED AS PTR TO BOTTOM OF BUFFER
	SETZM	GEMUSR#		;0 SEZ NOT A GEMODE (JAPAN) USER
	MOVEI	T4,[ASCIZ /TO: /]
	PUSHJ	P,PROMPT
SN1:	PUSHJ	P,GTUNO	 ;CKS NAME IN LUD,SYNERR IF BAD
	MOVE T1,LDPRV(T1);GET HIS JBTPRV FROM LUD
	LDB T1,[POINT 2,T1,28]
	CAIE T1,GEMODE	;IF SENDING TO JAPAN-MODE USER,
	JRST SN1A	;(OK, NOT JAPAN)
	SETOM GEMUSR	;SET THIS FLAG FOR OPMBX & CODE BELOW
	HRROI T2,GETPRV	;TARGET USER IS GEMODE: SENDER
	GETTAB T2,	;MUST BE TYM PROPRIETARY
	HALT .
	TRNE T2,PVTYMP	;TO SEND TO HIM (I.E., SYSTEM OPERATOR)
	JRST SN1A	;HAS STATUS, OK TO SEND TO GEMODE
	MOVEI T1,T4	;SAY T4/USERNAME MAY NOT RECEIVE MAIL
	PUSHJ P,TPSIX	;TYPE SIXBIT AT (T1)
	OUTSTR [ASCIZ / MAY NOT RECEIVE MAIL/]
	JRST EX

SN1A:	PUSH	P,T4		;SIXBIT UN1
	PUSH	P,T5		;UN2, FROM GTUNO
	AOS	T1,NAMCT	;64-5-1 = 58 WDS IN PKG FREE FOR
	CAILE	T1,^D50		;CURSORLIST AND TEXT. MAKE SURE
	 MESS <NAMELIST TOO LONG> ;AT LEAST 8 WDS FOR TEXT.
	JUMPE	CS,SN1B		;DONE WITH NAMELIST ?
	JUMPLE	C,SN1B		;C NEG OR CS[0 ARE EOL CONDITIONS
	JRST	SN1		;MUST BE ANOTHER TOKEN, NO TERMINATOR

SN1B:	;NAME LIST PUSHED INTO PDL, TERMINATOR CHAR SEEN
	PUSHJ	P,GETCH		;EAT CHARS TO 177 IN CASE NOW READING
	CAIE	C,177		;CMD FILE, TO CLEAR INPUT FOR NEXT
	JRST	.-2		;FILENAME READ

	SKIPG	T7,NAMCT	;NUMBER OF NAMES WE PUSHED INTO PDL
	JRST	EX
	MOVE	T3,SVJBFF
	MOVEM	T3,OLDJFF	;THIS IS WHERE MESSAGE AREA BEGINS
	MOVE	T1,T7
	ASH	T1,1		;NAMCT*2 WORDS FOR NAMELIST SIXBIT
	ADDI	T1,100(T3)	;+100 WDS FOR PKG + OLDJFF =
	HRRZ T2,JOBREL		;END OF MESSAGE AREA
	CAMLE T2,T1
	JRST	SN1E		;DONT NEED ROOM
	ADDI	T2,2000		;GRAB A REAL HUNK
	CORE	T2,
	HALT 	.		;SHOULDNT HAPPEN
	
SN1E:	POP	P,T2		;SIXBIT UN2
	POP	P,T1		;UN1
	DMOVEM	T1,(T3)		;MOVE OUT OF PDL INTO MSG AREA
	ADDI	T3,2
	SOJG	T7,SN1E		;WHILE NAMCT HOLDS OUT
	SETOM	(T3)		;TERMINATE LIST WITH -1
	ADDI	T3,1
	MOVEM	T3,SVJBFF	;PROSPECTIVE PACKAGE BEGINS HERE
	AOS	JOBFF		;NOT SURE WHY WE DO THIS ! /AAA
	MOVEI	T1,1
	SKIPE	GEMUSR		;ALLOW ONLY 1 GEMODE USER 'CUZ
	CAML	T1,NAMCT	;SENDER MIGHT MIX GEMODE WITH NON-
			;NON-GEMODE USERS IN LIST, BUT WE HAVE NO
			;WAY OF FLAGGING INDIVIDUAL USERS IN LIST
			;TO DRIVE OPMBX; CANNOT MIX MAILBOX FILES.
	JRST SN1F
	MESS <SEND TO XEXECJ USERS ONE AT A TIME>




SN1F:	;(T3)/BEGINNING OF PACKAGE. PRECEDED BY SIXBIT NAMELIST,-1
	HRROI	T1,-22		;GET SENDER'S SIXBIT NAME
	GETTAB	T1,
	HALT	.
	MOVEM	T1,0(T3)
	HRROI	T1,-21		;LAST 6 CHARS OF NAME
	GETTAB	T1,
	HALT	.
	MOVEM	T1,1(T3)
	MOVE	T1,LOGPPN
	MOVEM	T1,2(T3)
	DATE	T1,
	MOVEM	T1,3(T3)
	TIMER	T1,		;TIME
	MOVEM	T1,4(T3)
	SETOM	100(T3)	 ;SET POSSIBLE OVERFLOW FLAG
	MOVEI	T1,5(T3)	;LOC. FOR NAME POINTERS
	MOVEM	T1,NAMPT
	MOVE	T1,NAMCT
	ADDI	T3,6(T1)	;FIND SPACE FOR MAIL AFTER NAME PTRS
	MOVE	T4,T3
	HRLI	T4,(POINT 7,0)	;BYTE PTR FOR MAIL
	MOVEM	T4,MALTXT#	;THIS IS WHERE CONTINUATION MAIL TEXT
				;WILL BEGIN, IF ANY
	PUSHJ	P,SMAL		;OPEN PRIVATE MAILBOX IF NECESSARY
	MOVE	T1,[INCHWL C]	;INITIALIZE TO GET CHARS FROM TTY
	MOVEM	T1,GETCHR#	;THIS WILL BE XCT'D
	OUTSTR	[ASCIZ /TYPE LETTER:
/]
COMMENT ! DATA STRUCTURE AT THIS POINT  LOOKS LIKE THIS:

USERNAME1			<--OLDJFF
USERNAME2 (SIXBIT) FIRST ADDRESSEE
USERNAME1
USERNAME2 2ND ADDRESSEE, IF ANY
.
.
-1	  END OF (SIXBIT) ADDRESSEE LIST NAMCT ENTRIES LONG
USERNAME1			<--SVJBFF/ BEGINNING OF PACKAGE
USERNAME2 (SIXBIT) SENDERS NAME
PPN OF SENDER
DATE
TIME
0				<--NAMPT/ 1ST CURSOR WILL GO HERE
0
.
. ENOUGH SPACE FOR NAMCT CURSORS AND A -1
0
0	TEXT SPACE		<--T4,MALTXT/ BEGINNING OF TEXT AREA
.
.
0 (SVJBFF)+77 = LAST WORD IN PACKAGE.

THE SIXBIT ADDRESSEE LIST WHICH PRECEEDS THE PACKAGE IS 
TRANSLATED INTO CURSORS FOR EACH PACKAGE WHICH IS TRANSCRIBED,
BECAUSE THE CURSORS MAY BE DIFFERENT AS PACKETS FILL UP.

!

	XCT	GETCHR		;C/FIRST THING HE TYPES
	CAIN	C,"@"		;DOES HE WANT TO SEND TEXT FROM FILE
	JRST	SND3
SND0:	MOVE	T4,MALTXT	;INIT'ZE BYTEPTR T4
SND1:	IBP	T4
SND1A:	HRRZ	T1,T4		;HAS INCREMENTED BP GONE TO
	MOVE	T6,SVJBFF	;LAST WORD OF PKG
	CAIL	T1,77(T6)	;
	JRST	SND2		;PKG FULL
	CAIN	C,002		;^B SEEN?
	JRST	SND4
	CAIE	C,004		;^D OR
	CAIN	C,032		;^Z SIGNAL END OF LETTER
	JRST	SNDX		;SAW ONE OF THEM
	CAIN	C,177		;EOF SIGNAL (FILE INPUT)
	JRST	SNDEOF		;DONE READING TEXT FROM FILE
	DPB	C,T4
	XCT	GETCHR
	JRST	SND1

SND2:	;HERE ON PKG FULL
	;T4/BP PTS AT LAST WORD IN PKG
	DPB	C,T4		;LAST REAL CHAR THIS PKG
	SETZ	C,
	IDPB	C,T4		;TERMINATE ASCIZ
	PUSHJ	P,MPUTIN	;PUT PKG IN MAILBOX FILE
	XCT	GETCHR
	JRST	SND0		;NEW PKG

SNDEOF:	;HERE ON 177 SEEN (MUST BE FROM FILE EOF)
	POP	P,JOBFF		;IN CASE MORE FILES TO OPEN LATER.
	POP	P,GETCHR	;RECOVER INCHWL [OR TRICKY HACK
				;WHICH CAUSES A JRST ]
	XCT	GETCHR		;INCHWL OR JRST
	JRST	SND1A		;CONTINUE TTY INPUT

SNDX:	;HERE ^Z OR ^D SEEN; CLOSE LETTER,EXIT
	SETZ	C,
	DPB	C,T4
	PUSHJ	P,MPUTIN
	PUSHJ	P,SMALC		;CLOSE SPECIAL BOX, IF ANY
	JRST	EX
SND3:	;HERE ON SAW INITIAL "@" IN TTY INPUT. SET UP TO COPY CONTENTS
	;OF FILE INTO PKGS AND THEN EXIT IMMEDIATELY.
	PUSH	P,[JRST SNDX]	;TRICKY HACK: THIS WILL BE POP'D AND
				;XCT'D AS GETCHR AFTER SN3
	PUSHJ	P,GMTFB	;GET MAIL TEXT FILE OPEN ON IFL
	JRST	SND3A	;ERROR CODE IN T1
	MOVE	T1,SVJBFF	;BEG OF PKG
	ADDI	T1,101		;PAST END OF PKG
	PUSH	P,JOBFF		;SAVE FOR RESTORE AT SNDEOF
	HRRM	T1,JOBFF	;FORCE BUFFER RING PAST PKG
	MOVE	T1,[PUSHJ P,GMTC]
	MOVEM	T1,GETCHR	;CALL GMTC TO GET FURTHER CHARS
	XCT	GETCHR		;REPL THE "@" WITH 1ST FILE CHAR
	JRST	SND0	;COMPOSE PKGS W/CHARS FROM IFL CHANNEL

SND3A:	;HERE ON GMTF FAILURE
	POP	P,T4	;THROW AWAY THE [JRST SNDX] PUSHED ABOVE
	SKIPE	T1	;ERR CODE
	MESS	<FILE TOO BIG TO SEND>
	MESS	<FILE NAME BAD, CAN'T FIND>

SND4:	;HERE ON ^B SEEN INSIDE LETTER BODY (OR EVEN AS INITIAL
	;CHAR).  SET UP TO COPY CONTENTS OF FILE INTO PKGS AND
	;THEN RETURN TO ACCEPTING TTY INPUT.

	PUSH	P,GETCHR	;SAVE FOR LATER USE AFTER EOF
	PUSH	P,T4		;CURRENT POSN IN PKG
	PUSHJ	P,GMTF		;READ FILE NAME, OPEN ON IFL
	JRST 	SND4A		;SOMETHING WRONG
	POP	P,T4		;RESTORE POSN IN PKG,
	MOVE	T1,SVJBFF	;BEGINNING OF PKG
	ADDI	T1,101		;PAST END OF PKG
	PUSH	P,JOBFF		;NOW SAVE THIS, AND FORCE
	HRRM	T1,JOBFF	;BUFFER RING PAST PKG
	MOVE	T1,[PUSHJ P,GMTC] ;NEW SOURCE OF CHARS
	MOVEM	T1,GETCHR	;FOR MAIN LOOP
	XCT	GETCHR		;REPLACE THE ^B WITH 1ST CHAR
				;OF FILE,
	JRST	SND1A		;AND CONTINUE COMPOSING PKGS.
;(NOTE THAT WHILE A ^B FILE IS BEING COPIED INTO PKGS, THE PDL
;IS PUSHED DOWN WITH GETCHR AND JOBFF IN IT.  THE EOF CAUSES
;IT TO GET POP'D UP)


SND4A:	;HERE FROM SND4 ON GMTF FAILURE. T1/ERR CODE
	POP	P,T4		;RESTORE POSN IN PKG
	POP	P,GETCHR
	SKIPE	T1
	SKIPA	T1,[[ASCIZ/
FILE NOT OPENED..TOO BIG. CONTINUE
/]]
	MOVEI	T1,[ASCIZ/
FILE NAME BAD, CAN'T FIND
/]
	OUTSTR	(T1)
	XCT	GETCHR
	JRST 	SND1A		;CONTINUE WITH TTY INPUT
COMMENT ! ROUTINE GMTF - GET MAIL TEXT FILE
FUNCTION: READ TTY FOR (UFD)FILE.EXT; OPEN IT UP ON IFL
RETURN: SKIP IF SUCCESS
	NOSKIP FAILURE T1/0 LOOKUP FAILED. T1/1 FILE TOO BIG
DESTROYS: T1-T6,C,CS..
!

	LICRMT==2000		;HOME FILES LICENSE
GMTF:	OUTSTR	[ASCIZ/
FILE: /]
	;ALTERNATE ENTRY POINT TO SUPPRESS PROMPT
GMTFB:	PUSHJ	P,GSTRN	;FILL TTYBUF
	PUSHJ	P,GETNMS;SCAN FOR FILENAME
	OPEN	IFL,[EXP 1,SIXBIT /DSK/
			XWD 0,SBUF]
	JRST	GMTFE0	;CAN'T INIT
	HRROI	T5,-20	;GETTAB LICENSE
	GETTAB	T5,
	HALT 	.
	MOVE	T6,T5
	TLZ	T5,LICRMT	;CLEAR HOME-FILES SO THAT
	SETLIC	T5,		;FILES IN (SYS) ARE NOT AVAIL
				;UNLESS RF IS SET
	MOVE	T1,SVNAM	;THESE ARE WHERE GETNMS LEAVES
	MOVE	T2,SVEXT	;ITS RESULTS
	MOVEI	T3,0
	MOVE	T4,SVPPN
	LOOKUP	IFL,T1		;SHORT LOOKUP BLOCK T1-T4
	TDZA	T1,T1		;FAILED
	MOVEI	T1,1		;SUCCEEDED
	SETLIC	T6,		;RESTORE LICENSE
	JUMPE	T1,CPOPJ	;FAIL RETURN
	HLRO	T1,T4		;T1/-1,,-WORDS IN FILE
	MOVNS	T1		;T1/WORDS
	CAIG	T1,^D511	;MORE THAN 1 PAGE OF CHARS
	JRST	CPOPJ1		;SKIP RTN, ALL GOOD
	SKIPA	T1,[1]
GMTFE0:	SETZ	T1,
	POPJ	P,		;FAIL RTN

COMMENT ! ROUTINE GMTC - GET MAIL TEXT CHAR
FUNCTION - GET CHARS FROM IFL FOR MAIL SENDER, DON'T RETURN
	NULLS OR 177'S, SEND 177 AND CLOSE FILE IF EOF SEEN.
RETURNS: C/CHAR
EXPECTS: FILE OPEN ON IFL BUFFER HEADER SBUF
!

GMTC:	SOSG	SBUF+2
	IN	IFL,
	JRST	GMTC1
	STATZ	IFL,740000	;WAS THE SKIPPING IN UUO DUE
	MESS	<INPUT ERROR>	;TO ERROR BITS. YES
	CLOSE	IFL,		;NO, MUST HAVE BEEN EOF
	MOVEI	C,177		;SIGNAL EOF
	POPJ	P,

GMTC1:	ILDB	C,SBUF+1
	JUMPE	C,GMTC		;DONT RETURN NULLS
	CAIN	C,177		;OR RUBOUTS
	JRST	GMTC
	POPJ	P,		;RETURN TEXT CHAR
COMMENT ! MPUTIN -- CREATE A MAIL PACKAGE OUT OF THE MESSAGE
 AND USERLIST FOLLOWING SVJBFF, AND COPY THIS INTO A MAILBOX
 FILE PACKAGE SLOT.

EXPECTS: SVJBFF/ BEGINNING OF PROSPECTIVE PACKAGE
	OLDJFF/ BEGINNING OF USERNAME LIST
	NAMPT/ BEGINNING OF AREA IN PACKAGE FOR CURSOR-LIST
		OF ADDRESSEES TO BE STORED
RETURNS: POPJ
DESTROYS: T1-T7,C,CS,..
!

MPUTIN:
	PUSHJ	P,OPMBX
	PUSHJ	P,FNXML	 ;FIND NEXT MAIL NO. (PUTS IN T7)
	MOVE	T6,OLDJFF	;SET LOC. FOR NEXT NAME
	PUSH	P,NAMPT		;LOC WHERE CURSOR-LIST BEGINS
SN4:	MOVE	T4,(T6)
	CAMN	T4,[-1]	 ;CK FOR END FLAG
	JRST	SN5		;END OF NAME LIST
	MOVE	T5,1(T6)
	MOVEI	T1,T4
	SETMAL	T1,		;SET MONITOR'S MAIL WAITING BIT
	PUSHJ	P,LKUP		;LOOK FOR NAME ALREADY IN MBX
	JRST	SN6		;FOUND, RETN T3,T2,C,CS
;NAME NOT THERE, RETURNS WITH T2 POINTING TO PKT
	MOVEM	T4,BUF(T2)
	MOVEM	T5,BUF+1(T2)
	HRLZM	T7,BUF+2(T2)
	SETZM	BUF+3(T2)
SN4A:	PUSHJ	P,WTBLK	 	;WRITE PACKET BLOCK OUT
	MOVEM	CS,@NAMPT	;CS SET BY LKUP WITH CURSOR
	AOS	NAMPT		;FOR NEXT INDEX
	ADDI	T6,2		;NEXT NAME
	JRST	SN4
;HIT END OF USERNAME LIST,TERMINATE CURSOR-LIST IN PACKAGE
SN5:	SETOM	@NAMPT		;SET END FLAG FOR SURE
	HRRZ	T6,SVJBFF	;SHOW SMALA WHERE PKG BEGINS
	PUSHJ	P,SMALA		; APPEND PACKET TO PRIVATE BOX (IF ANY)
	PUSHJ	P,GMBLK	 	;POSITION FILE TO T7/MAIL NUMBER,
				;RETURN T6,T3,C
	HRLZ	T1,SVJBFF
	HRR	T1,T6		;T6/CORE ADDR OF PACKAGE IN BUF
	BLT	T1,77(T6)	;MOVE MAIL INTO BUFFER
	PUSHJ	P,WTBLK
	POP	P,NAMPT		;RESET IN CASE MORE PACKAGES FOLLOW
	JRST	CLMBX		;CLOSE FILE & RETURN

SN6:	;FOUND NAME, ADD NEW MAIL NO.,T2 PTS TO PKT & NAME
	;C HAS CURSOR POS, CS HAS INDEX WORD THIS NAME
	PUSHJ	P,IMN		;INSERT MAIL NO.
	JRST	SN4A
COMMENT ! IMN -- INSERT MAIL NUMBER INTO PACKET,
 OR FIND NEW PACKET IF NECESSARY,INSERT MAIL NUMBER INTO
 THAT ONE.

EXPECTS: T7/ MAIL NO	CS/CURSOR	T2/ADDR OF PACKET TO TRY
DESTROYS: T1-T5,C

!

IMN:	ADDI	T2,2
	MOVEI	T4,4
SN9:	PUSHJ	P,FHOLE	 ;FIND HOLE FOR ENTRY
	JRST	[ DPB T7,T5	;FOUND HOLE THIS PKT
		  JRST WTBLK]	;WRITE,RETURN
	TRZN	T1,400000	;IS THERE A CHAIN PTR
	JRST	SN8		;NO, GO SET NEW PTR
	PUSHJ	P,GPKT		;GET PKT AND SETS T3
	MOVEI	T4,10
	JRST	SN9		;TO NXT PKT
SN8:	PUSH	P,T1		;SAVE OLD MAIL NO.
	PUSHJ	P,FEMT		;FINDS EMPTY PKT,RETURN T4/CURSOR
	 MESS <NO ROOM FOR THIS MSG. TRY AGAIN IN AWHILE>
	TRO	T4,400000
	DPB	T4,T5
	PUSHJ	P,WTBLK
	PUSHJ	P,GPKT
	POP	P,T1		;RECOVER OLD MAIL NO.
	MOVEM	T7,BUF(T2)
	HRLM	T1,BUF(T2)	;OLD NO.
	SETZM	BUF+1(T2)
	SETZM	BUF+2(T2)
	SETZM	BUF+3(T2)
	JRST	WTBLK

COMMENT ! FHOLE -- FINDS AN EMPTY (0) POINTER POSITION
	(IF ANY) IN THE PACKET IN T2
EXPECTS: T2/PACKET WORD POS IN BUF
	T4/ 4
RETURNS: SKIPPING..NO POINTER POSITION FREE
	NON-SKIP T5/ BYTE PTR TO FREE POSITION
DESTROYS: T1,T4
RESPECTS T3
!

FHOLE:	MOVEI	T5,BUF(T2)
	HRLI	T5,(POINT 18,0)
FHOLE1:	ILDB	T1,T5
	JUMPE	T1,CPOPJ
	SOJG	T4,FHOLE1
	JRST	CPOPJ1

COMMENT ! LKUP -- SEE IF A PACKET EXISTS FOR USERNAME
EXPECTS: T4,T5/ USERNAME1,USERNAME2 SIXBIT
RETURNS: SKIPPING IF PACKET NOT FOUND FOR USERNAME
NON-SKIP: T3/FILE BLOCK NUMBER
	T2/ WORD POSN OF PACKET WITHIN BUF
	C,CS/ CURSOR FOR PACKET
DESTROYS: T2,T3 FOR SURE, MAYBE OTHERS. RESPECTS T4,T5
!

LKUP:	MOVE	T2,T4
	ADD	T2,T5
	TLZ	T2,400000
	IDIVI	T2,MBXHSH
LKUP4:	AOS	T3		;SKIPS OVER FIRST BLK
	PUSHJ	P,RDBLK
	MOVEI	T2,0
LKUP3:	SKIPN	BUF(T2)
	JRST	LKUP1
	CAMN	T4,BUF(T2)
	JRST	LKUP2
LKUP5:	ADDI	T2,4
	CAIGE	T2,200
	JRST	LKUP3
	JRST	LKUP4
LKUP1:	AOS	(P)		;SET SKIP RETURN IF NAME NOT FND
	MOVE	CS,T2
	LSH	CS,11		;INDEX GOES IN LEFT HALF
	OR	CS,T3		;CUSOR IN RT HALF
	MOVE	C,CS		;CURRENT INDEX IN C
	POPJ	P,
LKUP2:	CAME	T5,BUF+1(T2)
	JRST	LKUP5
	JRST	LKUP1+1


COMMENT ! ROUTINE OPMBX
FUNCTION: OPEN MAIL BOX APPROPRIATE TO MODE OF USER TO WHOM
	MAIL IS BEING SENT OR WHO IS NOW GETTING MAIL OUT OF IT.
EXPECTS: GEMUSR/ 0 IF NON-GEMODE USER: OPEN "XOBLAM"
		 -1 IF GEMODE USER: OPEN "XOBNPO"
DESTROYS: T1-T5
NOTE: "XOB###" IS OPENED IN THE PROGRAM'S JBTFPN.
	IF NOT ALREADY THERE, THIS ROUTINE ATTEMPTS TO ENTER IT.
!
OPMBX:	MOVEI	T5,0		;USED FOR BUSY SW.
	INIT	RFL,17
	SIXBIT	/DSK/
	XWD	0,0
	HALT
	SETZM	RFLBLK#		;BLK POSN THIS CHANNEL..NO BLK YET
	SKIPE	GEMUSR
	SKIPA	T1,[SIXBIT/XOBNPO/] ;"OPNBOX"--OPNOTICE BOX
	MOVE	T1,[SIXBIT/XOBLAM/] ;"MALBOX"--MAIL COMMAND LOOKS HERE
	SETZB	T2,T3
	HRROI	T4,-25
	GETTAB	T4,		;GET PPN PROGRAM WAS RUN FROM
	HALT	.
	LOOKUP	RFL,T1
	JRST	NOMBX
	MOVEI	T3,0
	HRROI	T4,-25
	GETTAB	T4,		;DO IT AGAIN
	HALT	.
	ENTER	RFL,T1
	JRST	.+2
	POPJ	P,0
	JUMPE	T5,OPMBX1	;FIRST BUSY
	JUMPG	T5,OPMBX2	;LAST BUSY
	MOVEI	T5,5		;FOR 5 SEC SLEEP
	OUTSTR	[ASCIZ /BUSY, PLEASE STAND BY
/]
OPMBX2:	SLEEP	T5,	;SLEEP
	JRST	OPMBX+1
OPMBX1:	SETO	T5,
	MOVEI	T1,3		;3 SEC SLEEP ON FIRST TRY
	SLEEP	T1,
	JRST	OPMBX+1

NOMBX:	ENTER	RFL,T1
	HALT
	CLOSE	RFL,0
	JRST	OPMBX

CLMBX:	RELEAS	RFL,
	POPJ	P,
COMMENT ! FEMT -- FIND EMPTY POSITION FOR PACKET
EXPECTS: T3/ BLOCK NUMBER OF FILE BLOCK CURRENTLY IN BUFF
		WHICH IS THE BLOCK IN WHICH WE BEGIN TRYING
		TO FIND AN EMPTY POSITION FOR A PACKET
RETURNS: SKIPPING ON SUCCESS
		T3/UNCHANGED
		T1,T4/CURSOR TO PACKET POSITION FOUND
		T2/FILE BLOCK NUMBER OF PACKET POSITION
	NON-SKIP: NO POSITIONS OPEN
DESTROYS: T1

!

FEMT:	MOVE	T2,T3		;FOR POSS. NEW BUF
	MOVEI	T1,0
FEMT2:	SKIPN	T4,BUF(T1)
	JRST	FEMT5
	CAME	T4,[-1]
	JRST	FEMT1
FEMT5:	LSH	T1,11
	OR	T1,T2	;MERGE CURSOR
	MOVE	T4,T1
	JRST	CPOPJ1		;SKIP RTN SUCCESS
FEMT1:	ADDI	T1,4
	CAIGE	T1,200
	JRST	FEMT2
FEMT3:	AOS	T2
	CAIL	T2,10	;PREVENT PACKETS FROM OVERWRITING PACKAGES
	POPJ	P,	;CANNOT MAKE SPACE FOR NEW PACKET
	PUSHJ	P,RDSBLK
	MOVEI	T1,0		;START LOOKING SPEC. BUF
FEMT4:	SKIPN	SBUF(T1)
	JRST	FEMT5
	ADDI	T1,4
	CAIGE	T1,200
	JRST	FEMT4
	JRST	FEMT3

RDSBLK:	CAMN	T2,RFLBLK	;ALREADY IN POSN?
	POPJ	P,		;YUP
	HRRM	T2,RFLBLK	;NOTE NEW POSN
	USETI	RFL,1(T2)
	INPUT	RFL,SHED
	STATO	RFL,760000
	POPJ	P,
	OUTSTR	[ASCIZ/INPUT ERROR/]
	JRST	BYENOW

;FIND NEXT MAIL NO.
FNXML:	MOVEI	T7,1
	PUSHJ	P,GMBLK
	SKIPN	(T6)
	POPJ	P,
	DATE	T1,		;GET DATE
	SUBI	T1,75		;OVER 60 DAYS, DELETE
	CAMG	T1,3(T6)
	AOJA	T7,FNXML+1
	JRST	CMAIL1

COMMENT ! GMBLK -- GET MAIL BLOCK 
FUNCTION: GETS A MAIL PACKAGE INTO BUF AND POINTS T6 AT IT
EXPECTS: T7/ MAIL NUMBER
RETURNS: POPJ, T6/ ADDR OF PACKAGE C,T3/ BLOCK NUMBER
!

GMBLK:	MOVE	T3,T7
	LSH	T3,-1
	ADDI	T3,210
	PUSHJ	P,RDBLK
	MOVE	C,T3
	MOVEI	T6,BUF
	TRNE	T7,1
	ADDI	T6,100		;HI ADR. IF ODD MAIL NO.
	POPJ	P,

COMMENT ! GPKT -- GET PACKET
FUNCTION: GET FILE BLOCK CONTAINING PACKET INTO BUF, AND
	RETURN CURSOR TO IT.
EXPECTS: T1/ CURSOR OF DESIRED PACKET
	C/ CURSOR OF PRESENT POSITION
RETURNS: POPJ T2/WORD POSN OF PACKET IN BUF
		T1,C/ CURSOR TO PACKET
DESTROY: T3

!

GPKT:	MOVE	T2,T1
	XOR	T2,C
	TRNE	T2,777		;CK IF NEW IN SAME BLK
	JRST	GPKT1		;NO, GET NEW BLK
GPKT2:	MOVE	T2,T1
	LSH	T2,-11		;MAKE PTR
	MOVE	C,T1
	POPJ	P,
GPKT1:	MOVE	T3,T1
	ANDI	T3,777
	PUSHJ	P,RDBLK
	JRST	GPKT2
;GET EVERYTHING WAITING IN OPNOTICE MAILBOX OR MAIL MAILBOX.
;NOTE ONLY THOSE IN GEMODE CAN ISSUE OPNOTICE CMD.
;ONLY THOSE IN THE OTHER MODES CAN ISSUE MAIL CMD

MAIL:	TDZA T1,T1	;T1:=0 AND SKIP
OPNOTI:	SETO T1,
	MOVEM T1,GEMUSR	;TELLS OPMBX WHICH FILE TO OPEN
	SETLSW#
IFDEF	RPGDEBUG,<
	JRST	OPNBOX
> ; End IFDEF RPGDEBUG
MAIL1:	PUSHJ	P,OPUD		;CK FOR BROADCAST LTR
	SETZB	T3,T4
	ENTER	RFL,T1
	MESS <LUD busy, please try later>
	PUSHJ	P,GNAM
	PUSHJ	P,LKLUD
	HALT	.
	MOVE	T2,BUF+LBITS(T1)
	TRNE	T2,77000
	JRST	TBL		;FOUND 1 OR MORE LETTER BITS
	RELEASE RFL,0
OPNBOX:	PUSHJ	P,OPMBX
	PUSHJ	P,GNAM		;GET THIS USERS NAME
	PUSHJ	P,LKUP
	JRST	ML
	SKIPN	NMLSW
	JRST	EX
	SKIPE	GEMUSR	;SKIP IF NON-GEMODE
	MESS <No opnotice>
	MESS <No mail>
ML:	SETZM	BUF(T2)
	SETZM	BUF+1(T2)
	PUSHJ	P,GMLN		;STACKS ALL MAIL NO'S AND CLEANS
;REMOVE MAIL FROM STACK AND TYPE
;IN THE LOOP FROM ML2 TO ML3, T3/FILE BLOCK NO., T4/BYTEPTR,
;T5/CURSOR PTR, T6/PKG PTR; T7/MAIL NUMBER
;THESE ARE HOLY AC'S.
	SETOM	PREVPP#		;PPN OF SENDER OF PREVIOUS PKG
	SETOM	PREVDT#		;DATE,,TIME OF PREV PKG
	PUSHJ 	P,SMAL		; OPEN SPECIAL MAILBOX
ML2:	MOVE	T7,@SBUF
	AOS	SBUF
	JUMPLE	T7,ML3		;DONE IF NEG
	PUSHJ	P,LOCMAL	;LOCATE & SET UP PKG
	JRST	ML2		;PKG NULL OR NO CURSOR MATCH
	CAMN	T1,PREVPP	;SENDER AND TIME OF LAST
	CAME	T2,PREVDT	;PKG SAME AS ONE JUST FOUND?
	PUSHJ	P,TPMLHD	;NO, "FROM: NAME  DATE, TIME"
	MOVEM	T1,PREVPP
	MOVEM	T2,PREVDT
	PUSHJ	P,SMALA		;APPEND TO SPECIAL BOX, IF ANY
	Pushj	P,TypMai	;Type the mail packet
	SETZM	(T5)		;ZAP THIS CURSOR IN PKG, ALREADY SEEN
	MOVEI	T5,5(T6)	;BEGINNING OF CURSORLIST IN PKG
	SETZ	T1,
ML2A:	SKIPGE	T2,(T5)		;T5 POINT AT -1 LIST END YET?
	JRST	ML2B		;YUP
	IOR	T1,T2		;<OR> OF ALL CURSORS IN PKG
	AOJA	T5,ML2A
ML2B:	SKIPN	T1		;ALL CURSORS BEEN ZAPPED? (ALL HAVE
				;SEEN THIS PKG?)
	SETZM	(T6)		;YUP,ZAP PKG, NOW FREE FOR RE-USE
	PUSHJ	P,WTBLK		;UPDATE FILE, EXPECTS T3/BLOCK
	JRST	ML2		;MORE PKGS WAITING?

ML3:	PUSHJ P,SMALC		; CLOSE SPECIAL MAILBOX
	JRST EX

;GET THIS USERS NAME
GNAM:	HRROI	T4,-22
	GETTAB	T4,
	HALT	.
	HRROI	T5,-21
	GETTAB	T5,
	HALT	.
	POPJ	P,
;TypMai - routine to type out mail message cleaning funny characters
;
;call:
;	Movei	T4,[pointer to string]
;	Pushj	P,TypMai
;	  <only return>
;
TypMai:	Ildb	T1,T4		;Work hard at this -- one char at a time
	Jumpe	T1,Cpopj	;Done when find first null
	Cain	T1,177		;Rubout?
	  Hrroi	T1,"#"-100	;Type ^# for rubout
	Cain	T1,"~"		;Tilde?
	  Hrroi	T1,"%"-100	;Type ^% for rubout
	Cail	T1," "		;Control character?
	  Jrst	TypMa0		;No -- Go and print it.
	Cail	T1,"G"-100	;Allow Bell, Backspace, Tab, Line-Feed
	Caile	T1,"M"-100	; Vert-Tab, Form-Feed, and Carriage-Return
	  Caia			;Not quite!
	Jrst	TypMa0		;Yes -- Go print them
	Outchr	["^"]		;Print arrow
	Movei	T1,"@"(T1)	;Make understandable
TypMa0:	Outchr	T1		;Print what we have
	Jrst	TypMai		;Loop for all chars in message


COMMENT ! ROUTINE TBL -TYPE BROADCAST LETTER
ENTER :   FROM MAIL1+.. ONLY
EXIT: 	  TO MAIL1  ONLY
FUNCTION: TYPE A BROADCAST LETTER, REMOVE 1 LETTER BIT, IN LUD.
	UPDATE ALREADY-SENT COUNT FOR THE LETTER TYPED, IN 
	REGUALR SYSTEM MAILBOX FILE.
!
TBL:	MOVEI	C,1		;THE LETTER NO.
	MOVEI	T5,1000	 ;BIT FOR LETTER 1
TBL1:	TDZE	T2,T5
	JRST	TBL2		;FOUND A BIT
	LSH	T5,1		;TO NEXT LETTER
	AOJA	C,TBL1
TBL2:	MOVEM	T2,BUF+LBITS(T1)
	PUSHJ	P,WTBLK
	RELEASE RFL,0
	PUSH P,GEMUSR		;EVEN FOR GEMODE USERS,
	SETZM GEMUSR		;BROADCAST LETTERS ARE IN REGULAR
	PUSHJ P,OPMBX		;SYSTEM MAILBOX. OPN IT ON RFL
	POP P,GEMUSR		;
	MOVEI	T3,402(C)
	LSH	T3,-1
	PUSHJ	P,RDBLK
	MOVEI	T5,BUF
	TRNE	C,1
	ADDI	T5,100
	SKIPN	(T5)
	JRST	TBLE		;EMPTY LETTER SLOT
	DATE	T1,
	CAMGE	T1,4(T5)	;DONT TYPE EXPIRED LETTER
	JRST	TBL3
TBLE:	RELEASE RFL,0
	JRST	MAIL1
TBL3:	SOSGE	5(T5)		;DECREMENT COUNT, DONE IF ZERO
	JRST	TBLE
	PUSHJ	P,WTBLK
	RELEAS	RFL,0
	MOVE	T1,2(T5)
	PUSHJ	P,TDATE
	OUTSTR	[BYTE(7)15,12]
	OUTSTR	12(T5)		;TYPE LETTER
	OUTSTR	[BYTE(7)15,12]
	SETZM	NMLSW
	JRST	MAIL1
COMMENT ! LOCMAL-- GET MAIL PKG INTO BUF, SET UP AC'S
	TO POINT TO INTERESTING POSITIONS IN THE PKG,
	AND SKIP IF THE PKG IS GOOD.
EXPECTS:  T7/ MAIL NO.	CS/ CURSOR OF PACKET FOUND POINTING
				AT THIS PACKAGE
RETURNS: NON-SKIP IF PKG HAS BEEN ZAPPED OR IF NO MATCH
	FOR CS EXISTS IN CURSORLIST
	SKIP: T1/ PPN OF SENDER OF PKG
		T2/ DATE,,TIME OF PKG
		T3/ FILE BLOCK NO. PKG LIVES IN (FROM GMBLK)
		T4/ BYTEPTR TO TEXT 
		T5/ ADDR OF MATCHING CURSOR IN CURSORLIST
		T6/ ADDR OF BEG OF PKG
		T7/ UNCHANGED, MAIL NO.
!

LOCMAL:	PUSHJ	P,GMBLK	;RETURN T3/FILE BLK
	SKIPN	(T6)	;ZAPPED YET?
	POPJ	P,	;YES
	MOVE	T1,2(T6);PPN
	MOVE	T2,4(T6);TIME
	HRL	T2,3(T6);DATE,PERHAPS CLOBBER HIORDER TIME BITS
	MOVEI	T5,5(T6);START OF CURSORLIST
LOCM0:	SKIPGE	T4,(T5)	;HIT -1 END OF LIST YET
	JRST	CPOPJ	;YES, AND NO CURSOR MATCH
	CAME	CS,T4	;CURSOR MATCH?
	AOJA	T5,LOCM0;NO
	MOVEI	T4,1(T5);T5/ADDR OF MATCH
	SKIPL	(T4)
	AOJA	T4,.-1	;CONTINUE CURSORLIST SCAN WITH T4
	ADDI	T4,1	;UNTIL HIT -1 END OF LIST; TEXT STARTS
	HRLI	T4,(POINT 7,)	;IN NEXT WORD
	JRST	CPOPJ1	;SKIP

COMMENT ! TPMLHD -- TYPE MAIL PKG HEAD
EXPECTS: T6/ PKG ADDR
PRESERVES: T1,T2,T3,CS,T6
!

TPMLHD:	PUSH	P,T1
	PUSH	P,T2
	PUSH	P,T3
	PUSH	P,CS
	PUSH	P,T6
	OUTSTR	[ASCIZ /

From: /]
	MOVE	T1,(P)		;POINT AT SIXBIT SENDERNAME
	PUSHJ	P,TPSIX
	OUTSTR	[ASCIZ/, /]
	MOVE	T1,(P)
	MOVE	T1,3(T1)	;DATE
	PUSHJ	P,TDATE
	MOVE	T1,(P)
	MOVE	T1,4(T1)
	PUSHJ	P,PRTIM1	;TIME
	OUTSTR	[BYTE(7)15,12]
	POP	P,T6
	POP	P,CS
	POP	P,T3
	POP	P,T2
	POP	P,T1
	POPJ	P,
;STACKS ALL MAIL NOS. AND CLEARS LIST
;EXPECTS LOC. INDEX IN T2, CURSOR IN CS
;IGNORES MAIL NOS. GRTR THAN 777
GMLN:	HRLI	T2,-2		;SET CTR
	ADDI	T2,2		;ADJ ADR TO SKIP OVER NAME
	MOVEI	T1,SBUF+1
	MOVEM	T1,SBUF	 ;PTR FOR MAIL NO. STACK
	SETZM	SBUF+1		;END FLAG
GM:	HLRZ	T1,BUF(T2)	;GET MAIL NO.
	JUMPE	T1,GM1		;IGNORE BLANKS
	HLLM	T1,BUF(T2)	;CLEAR FROM BUFFER
	CAIG	T1,777		;IGNORE LARGE NUMBERS
	PUSHJ	P,GMSTK	 ;STACK MAIL NOS.
GM1:	HRRZ	T1,BUF(T2)	;TRY RIGHT HALF
	JUMPE	T1,GM2
	SETZM	BUF(T2)
	TRZE	T1,400000	;CK FOR INDEX LINK OR NULL
	JRST	GM3		;FOUND LINK OR NULL
	CAIG	T1,777
	PUSHJ	P,GMSTK
GM2:	AOBJN	T2,GM	;TO NEXT WORD
	PUSHJ	P,GBG		;CLEAR GARBAGE
	PUSHJ	P,WTBLK	 ;NO MORE, WRITE OUT BLK
	SETZM	@SBUF		;END FLAG
	MOVEI	T1,SBUF+1
	MOVEM	T1,SBUF
	POPJ	P,
GM3:	TRNE	T1,200000	;NULL FLAG
	JRST	GM2		;IGNORE NULL
	MOVE	T4,T1		;PREPARE TO TEST OF PKT IN CORE
	XOR	T4,C
	TRNE	T4,777
	JRST	GM4		;NOT IN CORE,CLEANUP BEFORE WRITE
	MOVE	T2,T1		;MAKE ADR. OF NEW PKT
	LSH	T2,-11
	HRLI	T2,-4		;SET WORD COUNT
	JRST	GM
GM4:	PUSHJ	P,GBG
	PUSHJ	P,WTBLK
	PUSHJ	P,GPKT
	HRLI	T2,-4
	JRST	GM

;PREPARES FOR GARBARGE COLLECTION BY FLAGGING EMPTY CELLS
GBG:	MOVEI	T2,174
	SKIPE	T4,BUF(T2)	;BACKUP TO FIRST NONZERO
	JRST	GBG1
GBG2:	SUBI	T2,4
	JUMPG	T2,GBG+1
	POPJ	P,0
GBG1:	CAME	T4,[-1]
	JRST	GBG3
	SETZM	BUF(T2)
	JRST	GBG2
GBG3:	SUBI	T2,4
	JUMPL	T2,CPOPJ
	SKIPN	BUF(T2)
	SETOM	BUF(T2)
	JRST	GBG3
GMSTK:	MOVEM	T1,@SBUF	;STACK MAIL NOS.
	AOS	SBUF
	POPJ	P,0
;CANCELS MAIL, GIVEN MAIL NO. IN T7
;ALSO REMOVES GARBAGE ON LIST
CMAIL:	PUSHJ	P,GMBLK
CMAIL1:	SETZM	(T6)
	JSP	T2,GIXN ;GET INDEX NUMBERS
	PUSHJ	P,WTBLK
	MOVEM	T7,NAMCT	;SAVE FOR RETURN
CM:	POP	P,T1		;RECOVER MAIL INDICES
	JUMPE	T1,CM6
	MOVE	CS,T1
	PUSHJ	P,GPKT
	SKIPN	T1,BUF(T2)
	JRST	CM		;PKT ALREADY EMPTY
	CAMN	T1,[-1]
	JRST	CM
	PUSHJ	P,GMLN		;GET ALL MAIL NO'S
CM1:	MOVE	T7,@SBUF	;RECOVER STACKED MAIL NO'S
	AOS	SBUF
	JUMPE	T7,CM3		;NO MORE, CLEAR MAIL LIST
	CAMN	T7,NAMCT	;IS THIS THE ONE TO CANCEL?
	JRST	CM1		;YES, IGNORE
CM2:	MOVE	T1,CS		;GO BACK TO START
	PUSHJ	P,GPKT
	PUSHJ	P,IMN		;INSERT MAIL BACK INTO LIST
	MOVE	T7,@SBUF	;RECOVER ANOTHER MAIL NO.
	AOS	SBUF
	JUMPE	T7,CM	;DONE INSERTING ON ZERO
	CAMN	T7,NAMCT	;COULD BE THE ONE BEING CANCELLED
	JRST	.-4
	JRST	CM2		;GO INSERT
CM3:	MOVE	T1,CS
	PUSHJ	P,GPKT
	SKIPE	T1,BUF+4(T2)	;IF NEXT ZERO,THAEN ZERO THIS ONE
	SETO	T1,
	MOVEM	T1,BUF(T2)
	PUSHJ	P,WTBLK
	JRST	CM
CM6:	MOVE	T7,NAMCT	;RECOVER SAVED MAIL NO.
	POPJ	P,0

COMMENT ! GIXN -- GETS CURSORS IN MAIL PACKAGE AT T6 INTO
 PDL FOLLOWED BY 0 FLAG
CALLED: JSP T2,GIXN
EXPECTS: T6/ ADDR OF MAIL PKG
RETURNS: NONSKIP ALWAYS
!

GIXN:	ADDI	T6,5		;GET INDEX NUMBERS
	MOVEI	T1,0
	PUSH	P,T1		;ZERO END FLAG
	SKIPGE	T1,(T6)
	JRST	(T2)		;REQUIRES RET. ADR. IN T2
	SKIPE	T1
	AOJA	T6,.-4
	AOJA	T6,.-4		;SKIP OVER ZERO, DONT PUSH

	Reloc	; 0
ARRAY	SMLBUF[200]
INTEGER	SMLPTR
	Reloc	; 400000

SMLIO1:	IOWD 100,SMLBUF
	Z
SMLIO2:	IOWD 200,SMLBUF
	Z

;CALL HERE TO SETUP A USER (SPECIAL) MAILBOX

SMAL:	MOVEI T1,P.MAIL		; SEE IF SPECIAL MAIL PROCESSING
	PUSHJ P,GETPAR
	  POPJ P,		; NO SPECIAL MAILBOX - JUST RETURN
	INIT SML,17		; OPEN MAILBOX
	  SIXBIT "DSK"
	  XWD 0,0
	  HALT .
	HRROI T2,GETAUN
	GETTAB T2,		; GET USER'S AUN AND FORCE MAILBOX THERE
	  HALT .
	MOVEM T2,1(T1)		; STORE AS PPN
	SETZ T2,		; FLAG IS 0 FOR UPDATE, -1 FOR CREATE
	LOOKUP SML,(T1)
	  SETO T2,
	ENTER SML,(T1)
	  MESS <?Can't enter special mailbox>
	SETZM SMLPTR
	JUMPN T2,SMAL1		; DO APPEND STUFF IF OLD FILE
	MOVE T3,5(T1)
	TRNN T3,100		; ODD NUMBER OF PACKAGES?
	  JRST SMAL2		;  NO - DON'T READ ANY
	LSH T3,-7		; GET BLOCK NUMBER TO READ
	USETI SML,1(T3)		; READ IT INTO BUFFER
	AOS SMLPTR		; SET FACT THAT BUFFER HAS PACKAGE
	IN SML,SMLIO1		; SKIP IF ERROR
	  JRST SMAL2+1
	MESS <?Can't read special mailbox>
SMAL2:	LSH T3,-7		; CONVERT TO BLOCK NUMBER
	USETO SML,1(T3)		; GET SET FOR OUTPUT
SMAL1:	POPJ P,

;CALL HERE TO SAVE A PACKAGE IN THE USER (SPECIAL) MAILBOX
;expects t6/addr of pkg
;destroys t1,t2   respects t3-t7
SMALA:	PUSH	P,T3		;SAVE FROM CLUTCHES OF GETPAR
	MOVEI	T1,P.MAIL	;SEE IF SPECIAL MAIL PROCESSING
	PUSHJ P,GETPAR
	 TDZA	T1,T1		;NOPE - SIGNAL GETPAR FAILURE
	MOVEI	T1,1		;GETPAR SKIPPED, SO MUST APPEND
	POP	P,T3		;RECOVER T3
	JUMPE	T1,CPOPJ	;RETURN DOING NOTHING IF NO SPECIAL MAIL
	MOVE T1,SMLPTR		; GET COUNT OF PACKAGES THERE
	IMULI T1,100		; CALC INDEX INTO BUF
	MOVEI T2,SMLBUF(T1)	; DESTINATION OF BLT
	MOVE T1,T2		; FOR DELETING WHO-TO'S IF NECESSARY
	HRL T2,T6		; BLT FROM ADDRESS
	BLT T2,77(T1)		; COPY 100 WORDS
	AOS T1,SMLPTR		; ADD 1 TO PACKAGE COUNT
	CAIE T1,2		; IF 2 PACKAGES, WRITE THEM
	  POPJ P,		; OTHERWISE ALL DONE FOR NOW
	SETZM SMLPTR		; RESET COUNT
	OUT SML,SMLIO2		; WRITE A NEW BLOCK
	  POPJ P,		; NORMAL RETURN
	OUTSTR [ASCIZ "?Can't save mail (1)
"]
	POPJ P,

;CALL HERE TO CLOSE SPECIAL MAILBOX

SMALC:	MOVEI T1,P.MAIL		; SEE IF SPECAIL MAIL PROCESSING
	PUSHJ P,GETPAR
	  POPJ P,
	SKIPE SMLPTR		; ANY PACKAGES?
	  OUT SML,SMLIO1	;  WRITE IT
	    JRST SMLAC1		;   OKAY
	OUTSTR [ASCIZ "?Can't save mail (2)
"]
SMLAC1:	CLOSE SML,
	RELEAS SML,
	POPJ P,
;POSTMAN, TYPES MAIL NOT REMOVED FROM BOX, ETC.
POST:	MOVEI	T7,1		;TRIAL MAIL NO.
POST1:	PUSHJ	P,OPMBX
	SETO	T1,
	PUSHJ	P,GMBLK
	JUMPE	T1,EX		;FLAG SET BY RDBLK ON END
	MOVE	T1,(T6)
	JUMPE	T1,POST1B+1	;EMPTY MAIL SLOT
	PUSHJ	P,GNAM		;GET THIS USERS NAME
POST1B:	CAME	T4,(T6)	 ;CK IF THIS USER
	AOJA	T7,POST1	;TO NEXT
	CAME	T5,1(T6)
	AOJA	T7,POST1
	OUTSTR	[ASCIZ /
MAIL SENT ON: /]
	MOVE	T1,3(T6)
	PUSHJ	P,TDATE
	MOVE	T1,4(T6)
	PUSHJ	P,PRTIM1
	OUTSTR	[ASCIZ /
TO:	/]
	JSP	T2,GIXN	 ;GET INDEX NUMBERS
	POP	P,T1		;RECOVER CURSOR
	JUMPE	T1,POST4	;ZERO FOR END OF LIST
	MOVEM	T1,NAMPT	;SAVE FOR TPMLX
POST3A:	PUSHJ	P,GPKT
	MOVEI	T1,BUF(T2)
	PUSHJ	P,TPSIX
	POP	P,T1
	JUMPE	T1,POST4
	OUTCHR	[":"]
	JRST	POST3A
POST4:	PUSHJ	P,CLMBX
	PUSHJ	P,TPOST
	JRST	.-1		;MUST HAVE TYPED -
	AOJA	T7,POST1

TPOST:	MOVEI	T1,[ASCIZ /
TYPE MAIL? /]
	PUSHJ	P,YN
	PUSHJ	P,TPMLX
	MOVEI	T1,[ASCIZ /
CANCEL MAIL? /]
	PUSHJ	P,YN
	JRST	.+2
	JRST	CPOPJ1
	PUSHJ	P,OPMBX
	PUSHJ	P,CMAIL
	PUSHJ	P,CLMBX
	JRST	CPOPJ1


TPMLX:	PUSHJ	P,OPMBX
	MOVE	CS,NAMPT	;RECOVER CURSOR TEMP
	PUSHJ	P,LOCMAL	;EXPECTS CS/CURSOR, T7/MAIL NO.
	SKIPA			;NO GOOD, DONT PRINT
	Pushj	P,TypMai	;Type mail message
	JRST	CLMBX		;CLOSE AND RETURN

	Reloc	; 0
	Var
	Reloc	; 400000

	End
    A#KT