
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
                               MAGNUM
 
                               and the
 
                            MAGNUM SCHEMA
 
                                 by
 

                             H. MORTENSEN
 
                             #143-42-7427
 
                             June 14, 1984      








     MAGNUM is the name of a relational data base management system
 
offered by Tymshare Inc. since 1975, and is now used by more than 200
 
organizations on their TOPS-20 and VAX/VMS systems.  MAGNUM is actually

more than just a data base, since MAGNUM also includes a complete oper-
 
ating system.
 


     MAGNUM is specially designed to collect, maintain, and report on
 
large volumns of data.  MAGNUM's data base approach to handling extensive
 
data provides an efficient and convenient tool with the following features:
 
     * Reduced storage space: MAGNUM integrates data from many
       sources into one central location and eliminates duplication.
 
     *  Reduced maintenance time: MAGNUM has built in commands
        for modifying and updating the data base.  User does
        not need special utility programs for maintenance.
 
     *  Greater flexibility: All the data is in one location
        and can be accessed by English-language commands.
        Procedures can be written in MAGNUM's own English-like
        language.
 
     *  Better accuracy: MAGNUM has built-in instructions to
        verify data as it is entered into the data base.
 
     *  Easier data collection: MAGNUM is designed to collect
        and verify original data as a primary function.
 
     *  Better reporting: MAGNUM's English-like report-writing
        language is designed to handle any report specification.


 
     MAGNUM's logical organization of data offers many advantages over
 
older approaches to data organization.  Data items under MAGNUM can be 
 
organized into logically related groups, groups which are much easier
 
to work with than to work with the data bases as a whole.
                                                                      2







     Within the MAGNUM environment, the SCHEMA governs data structure
 
and definitions and integrates data changes with existing data defin-
 
itions.  Surrounding the Schema are access controls for establishing

what different users are able to see and do with the system and the
 
data. All other parts of the system are directly integrated with the
 
Schema.  The following diagram illustrates how the MAGNUM system 
 
components are related and following that is a brief outline of the
 
functions of each of MAGNUM's components: 
 
 



                         COMMAND LANGUAGE



MQL                                                          SCREEN       
                                                             GENERATOR
                             ACCESS
                             CONTROL
 
                             SCHEMA

                              DATA




AUDIT AND                                                    ADL
RECOVERY





                       RUN TIME PROCESSOR
 
                                                                      3

 



 
 
SCHEMA
 
     *  is the core of each data base
          *  directory of components
          *  cross-reference index of component use
          *  user access rules

ACCESS CONTROL

     *  limits user access to any part of the system

AUDIT AND RECOVERY
 
     *  permits auditing by means of backups at set
          checkpoints
 
COMMAND LANGUAGE

     *  allows users to examine and manipulate the system
          environment
     *  allows users to examine and manipulate the data base
 
MQL  (MAGNUM QUERY LANGUAGE)

     *  permits direct data access in an interactive mode
     *  allows users to
          *  examine, manipulate and update data
          *  format and generate reports
 
ADL  (APPLICATION DEVELOPEMENT LANGUAGE)
 
     *  provides an application developement tool plus
          *  a compiler which resolves all data definitions
          *  I/O simplified
          *  comprehensive reporting capabilities
 
SCREEN GENERATOR
 
     *  an application tool to easily produce menus and
         fill-in-the-blanks screens for data entry
 
RUN TIME PROCESSOR
 
     *  performs data manipulation
          *  is the data manager
          *  performs I/O functions
          *  reclaims unused disk space
     *  provides dynamic file restructuring and I/O control
     *  allows concurrent updating while preventing deadlock
 
                                                                    4
 
 
 
 
     The Schema defines the data base in MAGNUM terms.   A schema
 
declaration appears as follows:
 
          SCHEMA schema name
          BEGIN
          field declarations
          [relation declarations]
          END
 
     The schema contains, first, the field declarations, where each
 
field is named and the picture is given.  Next come the relation dec-
 
larations.  They list the key fields and data fields in each relation.
 
A field declaration must precede the relation declarations in which it 
 
is used, this is because MAGNUM needs the information in the field
 
declarations prior to setting up the tables, which MAGNUM will do
 
when the relations are declared.


 
     A field is an assigned space in the computer into which data 
 
values can be stored.  The field declaration names a particular field
 
and the type of data which can be stored in that field.  This descrip-
 
tion is called the "picture" of the field.


 
     A field name can be up to 30 characters long.  It can contain
 
letters (A to Z), numbers (0 to 9) and periods (.).  The first char-
 
acter of the name must be an alphabetic character.  The name may not
 
be from MAGNUM's list of reserved words.
 
 
 
     Any name that conforms to the above rules is referred to as a
 
MAGNUM name.  All schema names are MAGNUM names.  Names should be
 
designed to be descriptive so that a user can determine from the name
 
what information is stored in the field.
                                                                    5



 
     Each field declared in a schema must include a picture which
 
describes the size of the field and the type of data that can be
 
stored in that field.  There are three types of data that can be
 
stored in a field:  character, date and numeric.  Data which does
 
not fall into the catagories date or numeric requires a character
 
picture.  The letter C is used to represent any character.  To desig-
 
nate the size of a character picture, the C can be repeated as many
 
times as there are character positions in the field.  For long
 
fields, a more efficient way to define the length of a character
 
field is to precede the C with a number.  The following are valid 
 
picture definitions:
 
          EMPLOYEE.NAME          40C
          EMPLOYEE.NUMBER        10C
          PAY.CODE              CCCC
 
A date picture contains the reserved word DATE and an optional
 
date specification.  The following are valid fields with date
 
pictures:
 
          DEL.DATE       DATE 'YYMMDD'
          ORD.DATE       DATE 'YYMMDD'
 
Numeric pictures are used for fields that will contain only numbers.
 
As in the character picture, the N can be repeated to indicate the
 
size of the field or a numbercan be placed in front of the N.  The
 
decimal point is used in a MAGNUM picture exactly as it is used in 
 
any numeric representation.  The following examples illustrate two
 
possible ways of defining the same field:
 
          NNNNNN.NN
          6N.2N
 
Commas can be included as follows:
 
          NNN,NNN.NN
          3N,3N.2N
                                                                    6





 
MAGNUM stores input values according to the field's picture.  Zeros 
 
are automatically inserted in the field positions not filled by the 
 
input value.  High order zeros can be supressed as follows:
 
          5ZN.NN
          6Z.NN  (these two pictures are identical)
 
A dollar sign ($) can be used as in COBOL to indicate a stationary
 
or a floating dollar sign when the field is displayed.
 
 
 
    Once the field pictures have been defined, the field must be
 
declared.  A field declaration includes the name of the field, the
 
reserved word AS and the pcture.  For example:
 
          FIELD.NAME AS "PICTURE"
 
A field declaration can also include some optional clauses.  The
 
VERIFY clause sets constraints on the field.  The VERIFY clause
 
includes a logical expression which MAGNUM will evaluate to true
 
or false.  The logical expression is made up of the field name,
 
a relational operator as in COBOL, and a constant value.  Here is 
 
an example of a VERIFY:
 
        PROD.NO        AS "8N'
                       VERIFY PROD.NO < 80000000

 A default value is a value that MAGNUM will automatically assign
 
to a field if no other value is input.  The default for character
 
pictures is all blanks.  The default for dates is day 1 (September
 
14, 1752).  The default for numeric pictures is O.  If the user
 
wishes another default specified for a field, a default clause
 
can be specified as follows:
 
          STATUS.CODE   AS 'N'  DEFAULT 5
                                                                    7
 




 
A second field with an exact same picture as a previous field 
 
can be declared as follows:
 
          SECOND.CODE  SAME AS STATUS.CODE
 
MAGNUM ignores indenting , leading spaces and carriage returns but
 
if there are more than one field declaration is listed, they must be
 
separated by commas.
 
 
 
     A RELATION is a group of related fields.  Relations organize the
 
fields into meaningful groups and provide for permanent storage of
 
data.  A relation declaration names the relation, specifies key
 
fields which will identify any data stored in that relation and then
 
lists fields that are related to those key fields.
 
 
 
     A relation name is a name that a user assigns to a relation.  A
 
MAGNUM name must begin with an alphabetic character and may contain
 
uppercase alphabetic characters, digits and periods.  The desired  
 
result of creating any data base is to store information in a way 
 
that the information can be easily accessed and manipulated.  In
 
MAGNUM, the field is the variable that tells MAGNUM what the data
 
should look like.  The relation is the vehicle MAGNUM uses to store
 
the information.  Each time a relation is declared MAGNUM creates
 
a table with a column for each field in that relation.  Then data 
 
can be permanently stored within those columns.  In MAGNUM, all
                                                                    8
 




 
data is stored as instances of a relation, and each relation
 
has a key field for unique identification.  Here is an example of
 
a MAGNUM relation:
 
          RELATION PART IS
             KEY PART.ID
             DATA
                    DESCRIPTION,
                    VENDOR.ID,
                    UNIT.COST,
                    QTY.ON.HAND
 
The indentation in the above example is purely for clarity.

    
 
 
     It is a good idea to provide documentation in the form of
 
comments within a schema, and this is accomplished by the use of 
 
the percent sign.  MAGNUM ignores anything which falls between two
 
percent (%) signs. The  user can include as many comments as desired
 
at any point in the file.
                                                                   9
 
 
 
     Now that I have shown the basics of the MAGNUM schema, here is
 
a sample of a complete MAGNUM schema:
 
          SCHEMA INVENTORY
 
          BEGIN
 
          FIELDS  % here begins the field declarations %
             PART.ID  AS '6C',
             DESCRIPTION  AS  '30C',
             VENDOR.ID  AS '6C',
             UNIT.COST  AS  '5Z.4Z',
             QTY.ON.HAND  AS  '7N',
             NAME  SAME AS DESCRIPTION,
             STREET  SAME AS DESCRIPTION,
             CITY  AS '15C',
             STATE AS '2C'
 
          RELATION PART IS % here begins a relation declaration %
               KEY PART.ID
               DATA
                    DESCRIPTION,
                    VENDOR.ID,
                    UNIT.COST,
                    QTY.ON.HAND
 
          RELATION VENDOR IS
               KEY VENDOR.ID
               DATA
                    NAME,
                    STREET,
                    CITY,
                    STATE
 
END
 
 
 
 
     The schema simply defines the structure of the data base in
 
MAGNUM terms.  It consists of all of the field and relation declar-
 
ations put together, with the field declarations always listed first, 
 
followed by the relation declarations.  Since a MAGNUM data base
 
is defined in a schema, and data values are stored and used according
 
to the schema definition, a clear understanding of schemas is fund-
 
amental to using the MAGNUM relational data base management system
 
effectively.
 
 
 
 
 





          REFERENCES
 
          1.  GETTING STARTED WITH MAGNUM 
              Copyright 1983, Tymshare, Inc.
 
          2.  BEGINNING TO WORK WITH YOUR MAGNUM SCHEMA
              Copyright 1977, Tymshare, Inc.
 
          3.  MAGNUM, A NEW GENERATION DATA BASE
                MANAGEMENT SYSTEM
              Copyright 1983, Tymshare, Inc.
 
          4.  MAGNUM REFERENCE MANUAL, Version 14
              Copyright 1983, Tymshare, Inc.
 
   