ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982








                               - SUMMARY -                                 



A brief look into the deferred command file processing capabilities on
Tops-20 and a comparison with the Tymcom-X DEFER/PERP and PCOM systems
indicates that most of the necessary functionality exists.  There is a
definite difference, however, in the "philosophy" of user capabilities.

Philosophy:

The Tops-10/20 BATCH system environment is completely defined by the
internal commands to BATCON and the external interfaces to the EXEC and
spooling queues.  In particular, error handling and flow control is quite
specific and automatic due to the integration of standard error formats
for all DEC products.  Levels of control can be regulated by the user, but
the definition of those levels is non extensible.

The Tymcom-X DEFER/PERP system provides the user with the capability to
build a complete environment for each application.  The definition of
program level as well as system level error trapping and flow control is
extremely flexible.  However, the user must define this environment again
and again for each application, in each command file.

Capabilities:

All submission, modification and cancellation of deferred processing
requests on Tops-20 are handled through the EXEC.  The BATCON program
reads the input queues and then processes whatever jobs are currently able
to be scheduled to run depending upon the limits set by the operator.
BATCH scheduling parameters are set and modified via OPR, the operator
interface.

The major deficiencies are that batch requests may be submitted for only
one instantiation of the deferred job, flow control is limited to the
detection of specific types of job conditions (including errors), and
there are no parameter or variable capabilities such as those in the
Tymcom-X DEFER/PERP and PCOM systems.  However, limited periodic
processing may be achieved by having the batch job re-submit or requeue
itself for a later date or time each time it is run.

The advantages are the many additional capabilities such as:  control over
error handling, interaction with the operator if necessary or desired,
automatic spooling of batch output, control over command processing (as
program data or EXEC commands), checkpointing the command file at user
defined labels, and variable restarting due to program errors, system
errors or user option.



                                    1
ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982


Comparison of TYMCOM-IX/X DEFER/PERP and PCOM with TOPS-20 BATCH (BATCON)         

                           by Carl A Baltrunas
                             October 1, 1982


                    Section I - Functionality Overview                        



DEFER/PERP

The Tymcom-X DEFER/PERP system is used to submit a file of EXEC or program
commands to be processed by the master DEFER controller at a later date
and time.  PERP is also used to have a commands file re-submitted
periodically, allowing a very intricate list of date and time
specifications.  For example, a request may be submitted for the third
Monday of every month starting after a specified date, or every Wednesday,
or even daily.  Submissions may be made to run on any system on which the
user has an account, however DEFER/PERP will default to the system on
which the user is currently on.

Deferred execution and various submission requirements may be modified
between the time of submission and before processing of the requested job.
However, there is no facility for modification or cancellation of a job
while the job is in the processing state.  Cancellation will only prevent
further future submissions.

DEFER/PERP allows the user to enter any of the EXEC commands currently
available, as well as a small list of special internal "DEFER" commands.
These internal commands allow for flow control based upon the evaluation
of variable expressions, escaping out of user run programs, pausing the
processing for specified periods of time, and limiting the length of
various procedures.  Little or no error control is possible, except for
searching for known output strings and declaring conditional expressions
based upon the occurrance of such strings.



PCOM

The Tymcom-X PCOM program is similar to the DEFER/PERP system in that it
provides a mechanism for a file of commands to be processed by another
controlling job, leaving the user free to run other programs or perform
other tasks.  PCOM, however, submits the job for immediate processing and
gives the user only minimal control over the processing.

A PCOM job run in "NODETACH" mode may be closely watched, and cancelled by
the user at the processing terminal.  PCOM only allows submission for
processing on the same system.

All Tymcom-X EXEC commands are legal within a PCOM control file, and like
DEFER/PERP, a limited set of internal "PCOM" commands are also allowed.



                                    2
ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982


These commands currently take the same format as most internal DEFER
commands, with a few exceptions.  The capabilities of PCOM include only
minimal flow control (:GOTO label), escaping out of user run programs, and
limiting the processing time and TRU limits for various procedures.  PCOM
also has the capability of nesting command files within command files and
for passing parameters from each command level into the next lower command
level.



BATCON

The Tops-20 BATCH system provides the mechanism to process command files
containing Tops-20 EXEC commands and a small set of internal commands.
BATCH jobs are submitted to an input request queue and then processed by
the master BATCH controller program BATCON.  Requests have the option of
being processed immediately or at a future specified date and time.  The
format for future specification allows for a simple date expression and
only allows for a single instantiation of the job.  However, the job may
re-submit itself for future running and thus provide some of the PERP-
style periodic processing.

The BATCH request, once submitted, may be modified or cancelled by the
user utilizing the appropriate Tops-20 EXEC commands.  If desired, the job
itself may be terminated during processing by either the operator or the
user.

All Tops-20 EXEC commands except those which prevent BATCON from having
complete control over the BATCH job are allowed.  The list of illegal
commands consists of:  ATTACH, SET CONTROL-C CAPABILITY, SET TIME LIMIT,
and TALK.  In addition, BATCH has a small set of internal commands which
provide general flow control, some minimal system operator communication,
resubmission of the current job from a particular re-entry point, a
checkpoint capability at labelled breakpoints so that the job may be
restarted, some minimal error handling and control of whether each data
line is to be passed as program or EXEC commands.  Note that this last
capability is lacking in both DEFER/PERP and in PCOM.  There is no known
capability for passing parameters or for nesting command files, other than
what is allowed via the Tops-20 "TAKE" command.

The work involved in adding the missing capabilities has not yet been
researched, but would involve changes to the Tops-20 EXEC (for periodic
re-submission), minor restructuring of the queue information sent to
QUASAR, changes to the entire Galaxy queue interface including:  BATCON,
ORION, SPRINT, SPROUT and LPTSPL (in order of percentage of work needed).
The EXEC and BATCON would take the major portion of work with moderate
changes to the other modules, possibly only re-assembly with the newest
version of the galaxy library routines in GLXLIB.








                                    3
ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982


               Section II - Comparison of Internal Commands                     

  DEFER/PERP                          BATCON/EXEC                            

    DATES   enter the date expression   /AFTER: simple-date-time                                   
            dialogue.                          specify submission date.

    DISPLAY show dates calculated       -- not necessary --    
            by DATES command.

    INSERT  enter job in the queue.     @SUBMIT job /option-switches                                   

    STATUS  print info on this job.     @INFORMATION BATCH-REQUESTS                                   
    LIST    print info on all jobs          ... /USER: user-name    
            for this user.                  ... other option switches

    DELETE  remove a job from the       @CANCEL job                                   
            queue for any future        @MODIFY job /option-switches                                         
            submissions.

    :FILENAME                           @SUBMIT jobname=job/options                                
            Specify the logfile name.       ... /LOGNAME: filename

    ::label define a label.             label:: define a label.                                 

    :variable=val assign a val of       -- no capability --    
            0 or 1 to a user variable.

    :AFTER n THEN c wait for n          @SUBMIT job /AFTER:+n                              
            minutes then do c.              requeue another job for later

    :CONTINUE deactivate the            -- not necessary --    
            automatic pauses between
            specific commands.

    :DEFINE list allow users defined    -- no capability --     
            strings and expressions to
            be used by :FIND, :LOOK, etc.

    :ESCAPE return user to EXEC         @   preceeding any command                                 
            level from inside any           waits for EXEC level.
            program.                    ^C  forces user to EXEC level.                                        

    :FIND variable list searches the    -- no capability --      
            user's output for a match   -- See @IF (exp) --
            with defined variables.

    :GO label transfer control to the   @GOTO label transfer control                                 
            specified label anywhere        forward to label.
            in the command file.        @BACKTO label transfer control                                         
                                            backward to label.





                                    4
ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982


    :IF exp THEN c perform c if the     @IF (exp) @command                               
            expression is true (or 1).      perform command depending if
                                            the limited expression value
                                            is true.

    :LOOK exp search for string         -- no capability --     
            expression in user output.  -- See @IF (exp) --

    :PAUSE  reenable pauses between     -- not necessary --    
            specific commands, e.g.
            :LOOK, :IF and :UNLESS.

    :QUIT   terminate processing        @GOTO %FIN or some label at the                                    
    :STOP   terminate processing            end of the command file.    
                                            SPRINT automatically puts in
                                            a label %FIN for all jobs on
                                            cards.

    :TIME n specify time limit for      @SUBMIT job /TIME:nnn                                    
            a segment of a job.             specify time limit for the
                                            entire job.

    :UNLESS exp THEN c (See :IF).       @IF (exp) @command                           

    :WAIT   wait for output to          -- not necessary --    
            synchronize with the
            command file input.

-- no capability --                     @CHKPNT label remember label                                         
                                            for any future restart if it
                                            becomes necessary or desired.

-- no capability --                     @ERROR char specify a character                                         
(possible using a combination of            for error flagging for
 commands, :DEFINE, :LOOK, :FIND)           trapping via @IF (ERROR).
                                        @NOERROR disable any error                                        
                                            trapping, if enabled.

-- no capability --                     @OPERATOR char enable trapping                                         
                                            of messages to be sent to the
                                            OPR from this job.
                                        @NOOPERATOR disable any trapping                                        
                                            of messages for OPR.

-- done via PERP scheduling --          @REQUEUE label re-enter this job                                         
                                            into the batch queue to be
                                            restarted at (optional) label
                                            in approximately 10 minutes.

-- no capability --                     @SILENCE  disable logging.                                        

-- no capability --                     @REVIVE   re-enable logging.                                        




                                    5
ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982


                Section III - Tops-20 BATCH Documentation                     


USER DOCUMENTATION:


Tops-20 User's Guide (Tops-20 Notebook 4)     

  Chapter 10, Using BATCH
  o Submitting a Batch Job
  o Creating a Control File
  o Submitting a Control File to BATCH
  o Setting Defaults for the SUBMIT Command
  o Checking a Batch Job
  o Examining the Output from a Batch Job
  o Modifying a Batch Job
  o Canceling a Batch Job


Tops-20 Commands Reference Manual (Tops-20 Notebook 7)      
(See also Tops-10 Commands Manual, Tops-10 Notebook 2)

This manual describes all operating system commands available to the
non-privileged user of Tops-20 in alphabetical order.

  o  CANCEL - p. 38, for cancelling BATCH or other queued requests.
  o  INFORMATION - p. 156, for obtaining info on BATCH requests, etc.
  o  MODIFY - p. 188, for modifying input and output queue requests.
  o  SET - p. 269, for setting job and directory options.
  o  SUBMIT - p. 288, for submitting BATCH requests into the queue.
  o  TAKE - p. 307, for executing a file of commands on your terminal.


Tops-10/Tops-20 BATCH Reference Manual (Tops-20 Notebook 7)      
(See also Galaxy Reference Manual, Tops-10 Notebook 4)

This manual extensively describes user procedures for using the BATCH
system under both Tops-10 and Tops-20.  It describes Galaxy version 4
under Tops-10 version 7.01 and Tops-20 release 4.

  o  Introduction
  o  The BATCH Control File
  o  Job Control
  o  Submitting a Job from a Terminal
  o  Submitting a Job from Cards
  o  BATCH System Output
  o  App-A Commands
  o  App-B Switches
  o  App-C Card Codes
  o  App-D Batch Components






                                    6
ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982


DECsystem-20 User's Guide (DECsystem-20 Notebook 1)     

  o  Part I - Chapter 3, "JOBS", has a brief section on creating
     control files and using the BATCH system.
  o  Part II - "Command and program descriptions" has various
     descriptions throughout about BATCH and how to use it.
    > BATCH  - pp. II-26 thru II-28, use of internal BATCH commands.
    > CANCEL - p. II-30, cancelling BATCH and PRINT requests.
    > INFORMATION - p. II-161, information about BATCH requests.
    > MODIFY - p. II-192, modification of BATCH and PRINT requests.
    > PLEASE - p. II-192.2, communication with the operator.
    > SUBMIT - pp. II-232 thru II-236, submitting BATCH requests.


Getting Started With BATCH (DECsystem-20 Notebook 3)      
(See also Getting Started with BATCH, Tops-10 Notebook 1)

Gives an overview of the BATCH system from a beginning user's viewpoint.
Tells how to get started and what to expect from each individual session
in terms of input and output.

  o  What is BATCH
  o  Entering a job from Cards
  o  Entering a job from a Terminal
  o  Interpreting your Printed Output
  o  Performing Common Tasks with BATCH


BATCH Reference manual (DECsystem-20 Notebook 3)     

Gives a more in-depth overview of the BATCH system.  It describes all
of the user commands needed to submit, modify and cancel requests.  It
details each of the options and internal BATmmands the user might
use, and provides information useable to "debug" problems which could
occur due to system or program errors.

  o  Introduction
  o  Submitting a job on Cards
  o  Submitting a job from a Terminal
  o  BATCON - The BATCH Controller
  o  Examining and Modifying jobs in the Queues
  o  Error Messages
  o  App-A Commands and Switches
  o  App-B Monitor Error Codes
  o  App-C Card Codes











                                    7
ANALYSIS OF TOPS-20 BATCH PROCESSING USING BATCON          October 1, 1982


OPERATOR DOCUMENTATION:


BATCH Operator's Guide (DECsystem-20 Notebook 3)     
(See also Galaxy Reference Manual, Tops-10 Notebook 4)

This manual describes the Galaxy system running under the PTYCON program
which controlls all CTY job activity.  (See below for docmentation on
BATCH under OPR).

  o  PTYCON - (The CTY or OPR-Terminal interface program)
  o  BATCON - (The system BATCH-JOB controller)
  o  LPTSPL - (The system LINE-PRINTER output spooler)
  o  SPRINT - (The system CARD-READER input spooler)
  o  QUASAR - (The system QUEUE administrator program)
  o  Examining and Modifying jobs in the Queues
  o  Error Messages
  o  Crash Procedures and Stop Codes
  o  App-A Switches


Tops-20 Operator's Guide (Tops-20 Notebook 1)     

Apparently, a thorough guide for the operator in the use and operation of
a typical Tops-20 system.  The chapters related to BATCH are minimal, but
thorough, (if not redundant in sections).  All operator interaction to
BATCH is through OPR under Tops-20 release 4 and later.

  o  Part V - Software Tasks
  o  Chapter 1, The Operator Interface, OPR
  o  Chapter 2, BATCH Software Tasks


Tops-20 Operator's Command Language Reference Manual     
(Tops-20 Notebook 6, see also Tops-10 Notebook 15)

Describes all operator commands that use the Operator Interface Command
Language (OPR), Privileged Commands, and PTYCON commands.

  o  The Operator Interface, OPR
  o  OPR Command Descriptions
  o  ^E Privileged Commands
  o  PTYCON Command Language
  o  App-A Comparison of Release 3A and Release 4 Operator Commands












                                    8
   mF8