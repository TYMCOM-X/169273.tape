    SUBTTL	PRTADR.601 - HANDLES ADDRESSED PORTS
: ******************************************************************
: **                  PROPRIETARY INFORMATION                     **
: **                                                              **
: **  This  source code listing constitutes the proprietary pro-  **
: **  perty of TYMNET, Incorporated. The recipient, by receiving  **
: **  this program listing, agrees that neither this listing nor  **
: **  the   information  disclosed herein nor any  part  thereof  **
: **  shall be  reproduced or transferred to other documents  or  **
: **  used  or  disclosed to others for manufacturing or for any  **
: **  other purpose except as specifically authorized in writing  **
: **  by  TYMNET, Incorporated.                                   **
: ******************************************************************
: **                   MODULE IDENTIFICATION                      **
: **                                                              **
: **  File Name          :  PRTADR.601      last change: 09/03/86 **
: **                                                              **
: **  File Description   :  At sysgen time, the addressable ports **
: **			    and their associated target host No.  **
: **			    have been included. PA.HS checks if   **
: **			    any activity for the target host.     **
: **			    PA.FP try to find the addressable port**
: **			    and also record the port status. When **
: **			    the port is addressed (seized), PA.SP ** 
: **			    outputs message to the terminal con-  **
: **			    nected to this port. While in "limbo" **
: **			    state, the port can have the circuit  **
: **			    build to it.                          **
: **			                                          **
: **  File Abstract      :  Port addressability permits user de-  **
: **			    liver data from one port through net- **
: **			    work circuit to a specific port which **
: **			    is addressed or receive data via this **
: **			    circuit.                              **
: **                                                              **
: ******************************************************************
: **                    CHANGE LOG                                **
: **                                                              **
: **  Ver   Date    By   PIR/NSR  Changes (most recent at top)    **
: ** ----- -------- ---  -------- ------------------------------- **
: ** 06.01 09/03/86 LH            Set "vanilla" for SIO ports to  **
: **				  be able to build ckt thr. gateway*
: ** 06.01 08/18/86 LH	 NSR  872 Made originating addressable    **
: **				  ports have IIX capability.      **
: ** 06.00 05/29/86 LH 		  Change RX1 to RX3		  **
: ** 04.02 01/07/86 LH   PIR 1869 Check if output "addressable    **
: **			          port seized" message.           **
: **  ''      ''    ''            Add proprietary banner.         **
: **								  **
: ******************************************************************
	SUBTTL  (PRTADR) Port Addressing

	IF	NPAPRT

:			****   ***  ****  *****
:			*   * *   * *   *   *
:			****  *   * ****    *
:			*     *   * *  *    *
:			*      ***  *   *   *

:	  *   ****  ****  ****  *****  ****  **** ***** *   *  ***
:	 * *  *   * *   * *   * *     *     *       *   **  * *   *
:	***** *   * *   * ****  ****   ***   ***    *   * * * *
:	*   * *   * *   * *  *  *         *     *   *   *  ** *  **
:	*   * ****  ****  *   * ***** ****  ****  ***** *   *  ****

:	Port addressing permits the assignment of HOST.ADDR identifiers to
:	specific physical ports, to permit external addressing of these ports,
:	by building a circuit to an identifier (port).
:	A single port may be assigned one or more unique identifiers, and
:	a single identifier may be assigned to one or more ports.
:	If addressing occurs in the form HOST. (i.e. without address), there
:	may be several options available, based upon the Attribute assigned
:	to that host:  Null addresses may be disallowed, assigned to address
:	0, or assigned to ANY address.

	SEG	A.CODE
	MO	.,PRTADR
	LO	DATA

	IF	PVC
	GL	POTXT
	EI	:PVC

	GL	PA.FP,PA.HS,PA.SP	:declarations
	GL	PA.SL,PA.CL
	GL	ORIGID			:references
	SUBTTL  (PRTADR) Port-addressing...data structures

:	Create the data structures:
:	LIST(i) is a list of halfwords, specifying the address/port
:	relationship for each host(i).
:	The list ends with a halfword set to -1.
	D.STRU(0)			:declare data structure for list element
LI.A	BS	1			:byte containing address
LI.P	BS	1			:byte containing port number
LI.SIZ	HS	0			:size of element
	D.STRU(-1)
Q1	EQ	0
	RE	NHOST
	 IF	\H.AD|Q1|		:only for hosts with addressible ports
LIST|Q1|  HS	0
Q2	  EQ	0
	  RE	NPAPRT
	   IF	1-((PAC|Q2|/10000)%HOST|Q1|)
	    HC	PAC|Q2|&0FFFF		:generate halfword with ADDR.8|PORT.8
	   EI
Q2	   EQ	Q2+1
	  ER	:NPAPRT
	  HC	-1			:terminate list
	 EI	\H.AD
Q1	 EQ	Q1+1
	ER	:NHOST

:	Now build a structure of data for each host with addressible ports:
:	each element consists of:
	D.STRU(0)			:declare data structure for host element
HS.P	WS	1			:Pointer to corresponding list
HS.PT	WS	NGRP/2			:bit array of such ports
HS.H	HS	1			:Host number
HS.A	HS	1			:Host attribute (for null sub-address):
:					<0 -	NULL...disallowed
:					=0 -	ZERO...maps to address 0
:					>0 -	ANY....maps to ANY address
HS.TXT  HS      1                       :host message location
HS.SIZ	WS	0			:size of element
	D.STRU(-1)
HSTRU	WS	0			:force to nice boundary
Q1	EQ	0
	RE	NHOST
	 IF	\H.AD|Q1|
	  WC	LIST|Q1|
	  KILBIT(PAHP,NPORT)
	  DEFBIT(PAHP,NPORT)		:temp array for host-port bits
Q2	  EQ	0
	  RE	NPAPRT
	   IF	1-((PAC|Q2|/10000)%HOST|Q1|)
Q3	    EQ	PAC|Q2|&0FF		:extract port number
	    .S1BIT(PAHP,Q3)		:use it
	   EI
Q2	   EQ	Q2+1
	  ER	:NPAPRT
	  BARRAY(PAHP,NPORT)		:place into memory
	  HC	HOST|Q1|,H.AD|Q1|,H.MS|Q1|-BASE
	 EI
Q1	 EQ	Q1+1
	ER	:NHOST
	HC	-1			:this terminates list
	KILL	Q1,Q2,Q3
	SUBTTL  (PRTADR) Port-addressing...Code

:	PA.FP -	Port-Addressing -- Find Port
:	Registers:
:	R3 -	Target address (-1 if null)
:	R4 -	Target Host number
:	R5 -	Link Register
:	Returns:
:	R0 -	port number if non-negative, else
:		-1 -	No addressable ports on host specified
:		-2 -	not a valid address
:		-3 -	addressed port not in use
:		-4 -	addressed port busy (not in limbo-state)
:       R15 = message-BASE for this port to be sent to origination port
PA.FP	LA	R2,HSTRU-HS.SIZ		:set host-structure start address
PAFP1	AHI	R2,HS.SIZ		:next entry
	LH	R0,HS.P,R2		:check for end-of-list (-1)
	JLR	R5			:couldn't find it...return -1
	CH	R4,HS.H,R2		:this host?
	JNBS	PAFP1			:no...keep searching

:	We've found the right host
        LHL     R15,HS.TXT,R2           :get pointer to output message
	LCS	R0,2			:init error to "not a valid address"
	LR	R3,R3			:check target address
	JGEFS	PAFP2			:skip if non-null
	LH	R1,HS.A,R2		:else check attribute
	JGFS	PAFP2			:accept any port
	LR	R3,R1			:check if to use "0"
	JLR	R5			:don't default to "0", error exit

:	Now search LIST for this address
:	R3 is negative if any address accepted, else contains address
PAFP2	L	R2,HS.P,R2		:get pointer to list
PAFP3	LH	R1,0,R2			:check for end-of-list
	AIS	R1,1
	JER	R5			:end-of-list...return error
	LR	R3,R3			:Check for null address
	JLFS	PAFP5			:yes...accept any port available
	CLB	R3,LI.A,R2		:no...check for specific address
	JEFS	PAFP5			:possible match...check it out

:	end of loop
PAFP4	AIS	R2,LI.SIZ		:else continue search
	JBS	PAFP3

:	possible match...check out the port
PAFP5	LB	R1,LI.P,R2		:get port number
	TBT	R1,C.ACP			:is port active?
	JNFS	PAFP6			:yes...check further
	CHI	R0,-4			:did we find a busy port already?
	JEBS	PAFP4			:yes...just proceed
	LCS	R0,3			:no...set "not in use"
	JBS	PAFP4			:and proceed

:	at least one port is active...check further
PAFP6	LCS	R0,4			:set "busy"
	TBT	R1,LIMBO		:can port accept call?
	JEBS	PAFP4			:no...search further
	LR	R0,R1			:yes...return port number
	JR	R5


:	PA.HS -	Port-Addressing -- Host Status
:	Given a host number, this routine determines if any ports
:	are active, to permit soft-answer/shut status to be generated.
:	Registers:
:	R5 -	Link Register
:	R4 -	Target Host number
:	uses R1, R2 for scratch
:	all other registers preserved

:	Returns:
:	R0 -	<0 -	 if not a PA host,
:		0 -	no ports active (soft-shut)
:		>0 -	ports are active (soft answer)
PA.HS	LA	R2,HSTRU-HS.SIZ		:set host-structure start address
PAHS1	AHI	R2,HS.SIZ		:next entry
	LH	R0,HS.P,R2		:check for end-of-list (-1)
	JLR	R5			:couldn't find it...return -1
	CH	R4,HS.H,R2		:this host?
	JNBS	PAHS1			:no...keep searching

:	We've found the right host
	LHI	R1,(NGRP-1)*2		:scan index
PAHS2	LHL	R0,LIMBO,R1		:find limbo ports
	NH	R0,HS.PT,R1,R2		:check if any active for this host
	JGR	R5			:got one...return
	SIS	R1,2			:keep scanning
	JGEBS	PAHS2
	JR	R5			:none found...R0 = 0


:	PA.SP -	Port-Addressing -- Seize Port
:	Cancel "limbo", output "port seized" message
:		Format:	"Port Seized at HH:MM (GMT) by USER:HHHH"
:	Registers:
:	RLINK -	Link Register
PA.SP	RBT	RP,LIMBO		:turn off "limbo"
	IF	PVC			:** 4.02 LH
	L	R6,.PVCX,RPI		:PVC exception
	TI	R6,POTXT		:text-output permitted?
	JNR	RLINK			:exception - no text output
	EI	:PVC			:default - text output
	L	RBP,.TTBUF,RPI		:set to-terminal buffer
	LA	R6,PASPM1		:set "port seized" message
	JAL	R9,MSG
	L	R1,GMT,,		:get time
	LIS	R0,0			:...double precision
	LI	R4,$A 24*60*60		:extract seconds of day
	DR	R0,R4
	LHI	R1,$A 60*60		:extract hour of day
	DHR	R0,R1
	LR	R0,R1			:quotient is hours
	LIS	R4,2			:set two digits
	JAL	R9,ODN			:output-decimal-number
	LHI	RBC,3A			:":"
	JAL	RCH,PUTCHR,,
	L	R0,GMT,,
	LHI	R1,$A 60*60		:extract seconds of hour
	DHR	R0,R1
	LHI	R1,$A 60		:extract minute
	DHR	R0,R1
	LR	R0,R1			:quotient is minutes
	LIS	R4,2			:set two digits
	JAL	R9,ODN			:output-decimal-number
	LA	R6,PASPM2		:" (GMT), at "
	JAL	R9,MSG
	LA	R6,ORIGID,,		:origination I.D.
	JAL	R9,MSG
	LA	R6,PASPM3		:"CR LF"
	JAL	R9,MSG
	JR	RLINK			:and exit

PASPM1	AC	'"8D"8A"85Port Seized at "00'
PASPM2	AC	' (GMT), by "00'
PASPM3	AC	'"85"8D"8A"00'


:	PA.SL - Port-addressing -- Set Limbo
:	Registers:
:	R0 -	Link register
:	Returns with LIMBO set if addressible port.
PA.SL	TBT	RP,AD.PRT,,		:is this an addressible port?
	JER	R0			:no
	SBT	RP,LIMBO		:yes..set it
	JR	R0			:and return


:	PA.CL - Port-addressing -- Cancel Limbo
:	Registers:
:	RP -	port number
:	RLINK -	link register
:	exits via ESTPRT if LIMBO was set.
PA.CL	RBT	RP,LIMBO		:cancel it
	JER	RLINK			:wasn't set...just return
	LHI	R5,2+SPECFE		:**6.01 LH, set IIX 
	CLHI	RP,.SPORT		:check if SIO ports
	JLFS	PA.CL1			:no, skip
	LHI	R5,2			:don't set IIX capable
	JFS	PA.CL2			:for SIO ports
PA.CL1	 IF	X3ON&PVC
	TBT	RP,PVCARY,,		:if pvc port
	JNFS	PA.CL2			:if not, get special features
	LHI	R5,SPECFE		:set "special features"
	 EI
PA.CL2	J	ESTPRT,,		:...and exit via ESTPRT

	FO	DATA
	EM
	EI	:NPAPRT
    