        TITLE   FDM     *** FILE DIRECTORY MANAGER ***

;       WILLIAM SOLEY   AUG 77

;       THIS PROGRAM WILL COMPRESS AND DECOMPRESS PORTIONS
;       OF A USER'S DIRECTORY IN ORDER TO CONSERVE STORAGE
;       ALLOCATIONS BY ELIMINATING RIB'S AND TRAILING EMPTY
;       BLOCKS IN A CLUSTER.

;       NO LIABILITY IS ASSUMED FOR THE OPERATION OF THIS PROGRAM.
;       THIS PROGRAM SHALL REMAIN THE PROPERTY OF TYMSHARE, INC.

        .JBVER==137

        LOC .JBVER
        XWD 3,1
        RELOC


        ON==777777              ; SWITCHES FOR CONDITIONAL ASSEMBLY
        OFF==0


   RESGFD==OFF     ; RESTRICT THE USE OF THE GFD COMMAND TO ONLY
                        ; ACCOUNT SUPERVISORS
   MSTPRO==ON      ; DO NOT ALLOW WRITE ACCESS TO A COMPRESSED
                        ; FILE BY ANYONE OTHER THAN THE AUTHOR AND
                        ; THE ACCOUNT SUPERVISOR (NOTE - THE AUTHOR
                        ; AND THE OWNER ARE NOT NECESSARILY THE SAME)
   MSTHOM==OFF     ; INSIST THAT THE MASTER FILE BEING ACCESSED BE
                        ; IN THE CURRENT DIRECTORY
   BULTIN==ON      ; LOOK FOR THE FILE "FDM.BUL" IN THE DIRECTORY
                        ; THE PROGRAM WAS RUN FROM AND IF FOUND, PRINT
                        ; IT THE TERMINAL
   AUTODL==ON      ; ALLOW THE /D SWITCH TO BE GIVEN WHEN DOING
                        ; A SAVE TO DELETE THE FILES AS THEY ARE
                        ; SAVED SUCCESFULLY
   MSTDEL==ON      ; ALLOW THE MASTER FILE TO BE DELETED BY THE
                        ; DELETE COMMAND (WARNING MESSAGE PRINTED)
   IGNPRO==ON      ; ALLOW PROTECTED FILES TO BE DELETED BY THE /D
                        ; AND DELETE COMMANDS AFTER THE USER CONFIRMS
                        ; A WARNING MESSAGE
   LOOKSZ==40      ; DEFINE NUMBER OF WORDS TO SAVE FROM EXTENDED LOOKUP
                        ; BLOCKS (EFFECTIVE ONLY DURRING SAVE)
   MFPROT==666     ; OCTAL PROTECTION CODE TO BE GIVEN TO THE COMPRESSED
                        ; FILE BY OPEN (LK LK LK)
   LKBMAX==100     ; SIZE OF LARGEST POSSIBLE EXT. LOOKUP BLOCK WHICH
                        ; MAY BE DECOMPRESSED
   UFDSIZ==^D1024  ; NUMBER OF FILES THAT MAY BE COMPRESSED WITH ONE
                        ; SAVE COMMAND
   CLUSTR==^D512   ; DEFINE THE SYSTEM CLUSTER SIZE IN WORDS
   CFDSIZ==^D1024  ; NUMBER OF FILES THAT MAY BE IN A COMPRESSED FILE


        SUBTTL  MODHIS  ; MODIFICATION HISTORY

;       VERSION 3.1     9/30/77         W.R.SOLEY
;
;       FIXES FOLLOWING BUGS:
;
;       1) DATES ARE NOW PRINTED CORRECTLY ACCOUNTING FOR DAYLIGHT
;               SAVINGS TIME AND USER TIME ZONE.
;
;       2) DIRECTORIES ARE NOW 1 PASS ELIMINATING PROBLEM WITH
;               MORE THAN 511 FILES.

; VERSION 3.0   9/12/77         W.R.SOLEY
;
;       FIXES FOLLOWING BUGS:
;       1) DELETES OR REUSES BUFFERS PROPERLY AFTER CLOSE <THIS BUG
;
;               WAS CAUSING THE JOB TO GROW AND GROW AS BUFFERS
;               ACCUMULATED UNTIL IT RAN OUT OF CORE>; THIS SHOULD
;               RESULT IN A SIGNIFICANT COST SAVINGS DUE TO THE
;               REDUCTION IN THE AMOUNT OF CORE REQUIRED.
;
;       2) THE SWITCHES UFDSIZ AND CFDSIZ NOW ARE IN NUMBER OF FILES
;               AS OPPOSED TO NO. OF WORDS
;
;       3) SWITCHES NOW ALL APPEAR ON FIRST PAGE OF SOURCE
;
;       4) THE DIRECTORY COMMAND NOW PRINTS THE NAME OF THE PROGRAM
;               THAT REALLY COMPRESSED THE FILE RATHER THAN THE
;               ONE THAT IS CURRENTLY RUNNING
;
;       5) THE %-AGE PRINTED BY THE SAVE COMMAND IS NOW FIXED FORMAT
;               SO THAT TEXT PRINTED AFTER IS LINED UP
;
;       6) THE CR LF PROBLEM WITH A BAD COMMAND HAS BEEN FIXED
;
;       7) THE PROGRAM NOW SETS .JBREN SO THAT IF IT IS STOPPED BY
;               AN ESCAPE OR TRANSMISSION FAILURE, IT MAY EITHER BE
;               CONTINUED WHERE IT LEFT OFF BY TYPEING 'CONTINUE' OR
;               RESTARTED AT COMAND LEVEL (ABORTING ANY COMMAND IN
;               PROCESS) BY TYPEING 'REENTER'


        SUBTTL  DEFINE  ; DEFINE MACROS AND SYMBOLS

; ACCUMULATOR DEFINITIONS

        A=1             ; GENERAL PURPOSE
        B=2             ; GENERAL PURPOSE
        C=3             ; NORMALLY LAST CHARACTER INPUT FROM TTY:
                        ; OR COMMAND FILE
        X=4             ; FOR USE LOCALLY IN UUO'S AND PUSHJ'S
        Y=5             ; FOR USE LOCALLY IN UUO'S AND PUSHJ'S
        Z=13            ; FOR USE LOCALLY IN UUO'S AND PUSHJ'S
                        ; ALSO USED TO STORE OP CODE DURRING UUO CALL!
        MSTAT=6         ; STORE STATUS OF MASTER FILES
        PTR=7           ; POINTER TO BYTES IN THINGS
        FILE=10         ; FILENAME (TEMP STORRAGE)
        EXT=11          ; EXTENSION (TEMP STORRAGE)
        PPN=12          ; PLACE TO STICK PPN OF FILE (TEMP STORRAGE)
        OP=13           ; FOR STORRING UUO OP CODE
        AC=14           ; FOR STORRING UUO AC FIELD
        SW=15           ; PLACE TO STORE CURRENT SWITCHES
        P=17            ; STACK POINTER

; SYMBOL DEFINITIONS

        EXTERN  NAMPPN
        .JBUUO=40
        .JBDDT=74
        .JBREN==124
        .RBPPN==1       ; LOOKUP BLOCK ADDRESS FOR PPN
        .RBNAM==2       ; EXT LOOKUP PLACE FOR FILENAME
        .RBEXT==3       ; EXT LOOKUP PLACE FOR EXTENSION
        .RBPRV==4       ; EXT LOOKUP ADDRESS OF CREATION DATA
        .RBSIZ==5       ; EXT LOOKUP ADDRESS OF FILE SIZE IN WORDS
        .RBVER==6       ; EXT LOOKUP ADDRESS TO STORE VERSION OF FDM
                        ; THAT WROTE MASTER FILE
        .RBFUT==7       ; LOCATION IN EXTENDED LOOKUP FOR NUMBER
                        ; OF GOOD FILES STORRED IN A COMPRESSED FILE
        .RBPOS==12      ; EXTENDED LOOKUP WORD IN COMPRESSED FILES
                        ; POINTING TO THE LAST WORD USED
        .RBFT1==13      ; A COUNT IS STORRED HERE THAT IS INCREMENTED
                        ; EVERY TIME A FILE IS RESTORRED TO DISK
        .RBAUT==26      ; ADDRESS OF AUTHOR PPN IN EX LOOKUP
        .RBUNM==27      ; ADDRESS OF USERNAME IN UFD EX LOOKUP
        .RBXT2==32      ; PLACE WHERE FDM STORES ITS NAME
        .RBALP==33      ; FILE ALLOCATION IN PAGES
        STACKL==100     ; DEFINE STACK LENGTH
STACK:  BLOCK   STACKL
CRLF:   BYTE(7)15,12    ; FOR SENDING <CR> <LF> TO TTY:
RB.PRV: POINT   9,FLOOK+4,8     ; POINT TO PROTECTION FIELD IN LOOKUP BLOCK
RB.MOD: POINT   4,FLOOK+4,12    ; POINT TO MODE FIELD IN LOOKUP BLOCK
LOGPPN: NILL
CURPPN: NILL
MYNAME: NILL            ; PLACE FOR CURRENT PROGRAM'S NAME (V 3.0)
        SIXBIT  .SAV.   

; MACRO DEFINITIONS

        DEFINE  MSG     (TEXT) <
                       OUTSTR [ASCIZ TEXT]>
        DEFINE  MMOVE   (E1,E2) <
                        MOVE    E2
                        MOVEM   E1>
        DEFINE  MMOVEI  (E1,E2) <
                        MOVEI   E2
                        MOVEM   E1>
        DEFINE  CMD     (TEXT,ADDR) <
                        CAIN TEXT
                          JRST ADDR>



; OPERATION DEFINITIONS

        OPDEF   NILL    [0,,0]

; ERROR DETECTION

        IFL     <LKBMAX-LOOKSZ>,<
                PRINTX  ERROR: LOOKSZ IS GREATER THAN LKBMAX
                END>

; REENTER CAPABILITY

        LOC     .JBREN
        Z       COMAND
        RELOC
        SUBTTL  UUO     ; DEFINE UUO'S

        LOC     .JBUUO+1
        PUSHJ   P,UUOH          ; MONITOR TO EXECUTE THIS ON UUO
        RELOC

        DEFINE  UUODEF  (NAME,ADDR)<
                        EXP ADDR
                        OPDEF   NAME    [BYTE(9).-HTAB]>

UUOH:   LDB     AC,[POINT 4,.JBUUO,12]  ; GET AC FIELD
        LDB     OP,[POINT 9,.JBUUO,8]   ; GET OP CODE
        CAILE   OP,UUOLIM                ; CHECK FOR IN RANGE
          PUSHJ P,FATAL
        JRST    @HTAB-1(OP)             ; BRANCH TO PROPER ROUTINE

HTAB:   UUODEF  ERROR,  ERRUUO
        UUODEF  YES.NO, YESUUO
        UUODEF  ZERO,   ZERUUO
        UUODEF  TYPEFN, TFNUUO
        UUODEF  TYPENO, TNOUUO
        UUODEF  BYTIN,  BTIUUO
        UUODEF  BYTOUT, BTOUUO
        UUODEF  CREDAT, CREUUO
        UUODEF  TYPEOC, TOCUUO
        UUODEF  TYPEDT, TDTUUO
        UUODEF  TYPEUN, TUNUUO
        UUOLIM==.-HTAB


        SUBTTL  TYPEOC  ; TYPE A VALUE IN FREEFORM OCTAL

        ; CALLING FORMAT:

        ;       TYPEOC  ADDR

TOCUUO: MOVE    PTR,[POINT 3]
        HRRI    PTR,@.JBUUO

        MOVEI   X,14

        JUMPN   AC,TOC2         ; IF FORMAT=1 THEN PRINT LEADING 0'S

TOC1:   SOJL    X,TOC3
        ILDB    Y,PTR
        JUMPE   Y,TOC1
        JRST    TOC2A

TOC2:   SOJL    X,TOC4
        ILDB    Y,PTR
TOC2A:  ADDI    Y,"0"
        OUTCHR  Y
        JRST    TOC2

TOC3:   OUTCHI  "0"
TOC4:   POPJ    P,
        SUBTTL  TYPEUN  ; TYPES A USERNAME FROM A PPN

        ; CALLING FORMAT:

        ;       TYPEUN  FORMAT,PPN-ADDRESS

TUNUUO: MMOVEI  ULOOK,LOOKSZ-1
        MMOVE   ULOOK+.RBPPN,<[1,,1]>   ; MFD PPN
        MMOVE   ULOOK+.RBNAM,@.JBUUO    ; ARGUMENT PPN
        MMOVE   ULOOK+.RBEXT,[SIXBIT .UFD.]
        CLOSE   UCHAN,
        LOOKUP  UCHAN,ULOOK             ; LOOKUP UFD
          ERROR 6,COMAND
        CLOSE   UCHAN,

        MOVE    PTR,[POINT 6,ULOOK+.RBUNM]      ; POINT TO USERNAME
        MOVEI   X,14

TUN1:   ILDB    Y,PTR
        JUMPE   Y,TUN2
        ADDI    Y,40
        OUTCHR  Y
        SOJG    X,TUN1

TUN2:   POPJ    P,
        SUBTTL  TYPEDT  ; TYPES A DATE ON THE TERMINAL

        ; CALLING FORMAT:

        ;       TYPEDT  OPTION,ADDRESS-OF-DATE

        ; DATE IS IN TYMSHARE FORMAT, LH IS DATE, RH IS TIME
        ; OPTION 0 PRINTS DATE ONLY, OPTION 1 PRINTS DAY AND DATE
        ; OPTION 2 PRINTS DAY AND DATE AND TIME,
        ; OPTION 3 PRINTS DAY AND DATE AND TIME AND SECONDS

        DEFINE  TABLE   (ARG) <
                IRP     ARG<
                ASCIZ   "'ARG'">>

DOW:    TABLE   <WED,THU,FRI,SAT,SUN,MON,TUE>
MONTH:  TABLE   <JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC>

DATBLK: BLOCK   3

TDTUUO: MOVE    X,@.JBUUO               ; GET DATES
        HLRZM   X,DATBLK                ; SAVE DATE
        HRRZM   X,DATBLK+1              ; SAVE TIME

        MOVE    X,[26,,11]      ; GET NUMBER OF JIFFIES PER SEC
        GETTAB  X,
          PUSHJ P,FATAL
        MOVEM   X,JIFFY#

        IMULM   X,DATBLK+1      ; MULTIPLY TIME TO GET JIFFIES

        HRROI   X,6             ; GET PRIV BITS
        GETTAB  X,
          SETZ  X,

        LDB     Y,[POINT 5,X,7] ; GET TIME ZONE
        LDB     X,[POINT 1,X,2] ; GET DAYLIGHT BIT
        SETZ    X,      ; (V 3.0) - SEEMS TO WORK OKAY NOW ????? <;>
        DPB     X,[POINT 1,Y,29]; PUT DAYLIGHT BIT
        TLO     Y,400020        ; SET NON-STANDARD BIT (TYMSHARE)

        MOVEM   Y,DATBLK+2
        MOVEI   X,DATBLK
        DATUUO  X,
          PUSHJ P,FATAL

        MMOVE   LDATE#,DATBLK   ; SAVE DATE
        MMOVE   LTIME#,DATBLK+1 ; AND TIME

        CAIGE   AC,1            ; TEST TO SEE IF HAVE TO PRINT DOW
          JRST  TDAT1
        MMOVEI  DATBLK+2,400000 ; CONVERT TO DAYS PAST JAN 1 64.
        MOVEI   X,DATBLK
        DATUUO  X,
          PUSHJ P,FATAL
        MOVE    X,DATBLK
        IDIVI   X,7             ; DAY OF WEEK IN Y
        OUTSTR  DOW(X+1)        ; TYPE IT
        MSG     " "

TDAT1:  MOVE    X,LDATE         ; GET DATE
        IDIVI   X,^D31          ; STRIP DAY
        ADDI    X+1,1           ; Y=DAY OF MONTH
        MOVEM   X+1,LDAY#
        IDIVI   X,^D12          ; STRIP MONTH
        MOVEM   X+1,LMONTH#     ; SAVE MONTH (0=JAN)
        ADDI    X,^D64          ; X=YEAR
        MOVEM   X,LYEAR#

        TYPENO  12,LDAY         ; TYPE DAY
        OUTCHI  "-"
        MOVE    X,LMONTH
        OUTSTR  MONTH(X)        ; TYPE MONTH
        OUTCHI  "-"
        TYPENO  12,LYEAR        ; TYPE YEAR
        OUTCHI  " "

        CAIGE   AC,2            ; SEE IF WE HAVE TO PRINT TIME
          JRST  TDAT2

        MOVE    X,LTIME
        IDIV    X,JIFFY         ; GET SECONDS
        IDIVI   X,^D60          ; PEEL OFF SECONDS
        MOVEM   X+1,TSEC#
        IDIVI   X,^D60          ; PEEL OFF MINUTES
        MOVEM   X+1,TMIN#
        MOVEM   X,THOUR#

        TYPENO  2,THOUR         ; TYPE HOURS
        OUTCHI  ":"
        TYPENO  12,TMIN         ; TYPE MINUTES
        CAIGE   AC,3            ; SEE IF HAVE TO PRINT SECONDS
          JRST  TDAT2
        OUTCHI  ":"
        TYPENO  12,TSEC         ; TYPE SECONDS

TDAT2:  MSG     "   "
        POPJ    P,
        SUBTTL  CREDAT  ; TAKES THE CREATION DATE AND RETURNS
                        ; IT IN LEFT HALF OF ACCUMULATOR WITH
                        ; CREATION TIME IN RIGHT HALF

        ; CALLING FORMAT:

        ;       CREDAT  AC,LOOKUP-BLOCK-ADDRESS

CREUUO: MOVEI   X,@.JBUUO
        LDB     Y,[POINT 12,.RBPRV(X),35] ; GET LOW ORDER CRE DATE
        LDB     Z,[POINT 2,.RBEXT(X),21]  ; GET HIGH ORDER CRE DATE
        LSH     Z,14                      ; SHIFT TO MAKE ROOM
        OR      Y,Z                       ; OR IN
        HRLM    Y,(AC)
        LDB     Y,[POINT 11,.RBPRV(X),23] ; GET CRE TIME IN MINUTES
        IMULI   Y,^D60          ; CONVERT TO SECONDS
        HRRM    Y,(AC)
        POPJ    P,
        SUBTTL  BYTIN   ; INPUTS ONE BYTE FROM SPECIFIED CHANNEL

        ; CALLING FORMAT:

        ;       BYTIN   CHANNEL,BYTE-ADDRESS
        ;         (EOF OR ERROR RETURN)
        ;       (NORMAL RETURN)

BTIUUO: MOVE    X,BUFIN(AC)             ; GET ADDRESS OF BUFFER HEADER
        SOSGE   2(X)            ; DECREMENT COUNT
          JRST  BTIGET
        ILDB    Z,1(X)
        MOVEM   Z,@.JBUUO
        AOS     (P)
        AOS     @LB.POS(AC)     ; INCREMENT WORD COUNT FOR CHAN
        POPJ    P,              ; SKIP RETURN

BTIGET: DPB     AC,[POINT 4,.+1,12]     ; SET CHANNEL NO
        IN                      ; GET A BUFFER
          JRST  BTIUUO
        POPJ    P,              ; NON-SKIP RETURN FOR EOF
        SUBTTL  BYTOUT  ; OUTPUTS ONE BYTE TO SPECIFIED CHANNEL

        ; CALLING FORMAT:

        ;       BYTOUT  CHANNEL,BYTE-ADDRESS
        ;         (ERROR RETURN)
        ;       (NORMAL RETURN)

BTOUUO: MOVE    X,BUFOUT(AC)
        SOSGE   2(X)
          JRST  BTOPUT
        MOVE    Z,@.JBUUO
        IDPB    Z,1(X)
        AOS     (P)
        AOS     @LB.POS(AC)     ; INCREMENT WORD COUNT FOR CHAN
        POPJ    P,              ; SKIP RETURN

BTOPUT: DPB     AC,[POINT 4,.+1,12]     ; SET CHANNEL NO
        OUT                     ; OUTPUT A BUFFER
          JRST  BTOUUO
        POPJ    P,
        SUBTTL  TYPENO  ; TYPES A DECIMAL NUMBER

        ; CALLING FORMAT:

        ;       TYPENO  FORMAT,ADDRESS

        ; TYPES THE NUMBER AT ADRESS IN THE FORMAT SPECIFIED.
        ; FORMATS ARE 0 FOR FREEFORM, 1-7 FOR I1 - I7, 11-17 FOR I1 - I7
        ; WITH LEADING ZEROS PRINTED.

TNOUUO: LDB     Y,[POINT 1,AC,32]
        LSH     Y,1
        DMOVE   X,ZEROS(Y)
        DMOVEM  X,STMP
        ANDI    AC,7            ; KEEP ONLY LENGTH
        MOVE    X,@40
        MOVEI   Z,7
TNO1:   SOJL    Z,TNO2
        IDIVI   X,^D10
        ADDI    Y,"0"
        DPB     Y,PTRS+1(Z)
        JUMPN   X,TNO1
TNO2:   MOVEI   Y,PTRS+7
        SUB     Y,AC
        MOVE    PTR,(Y)
        SKIPN   AC
          MOVE  PTR,PTRS(Z)
        OUTPTR  PTR
        POPJ    P,

PTRS:   POINT   7,STMP
        POINT   7,STMP,6
        POINT   7,STMP,13
        POINT   7,STMP,20
        POINT   7,STMP,27
        POINT   7,STMP,34
        POINT   7,STMP+1,6
        POINT   7,STMP+1,13
STMP:   BLOCK   2
ZEROS:  ASCIZ   .       .
        ASCIZ   .0000000.

        SUBTTL  ZERO    ; UUO TO ZERO A BLOCK OF CORE

        ; CALLING FORMAT:

        ;       ZERO [IOWD LENGTH,ADDRESS]

ZERUUO: MOVE    X,@.JBUUO
        AOJ     X,
        SETZM   (X)
        AOBJN   X,.-1
        POPJ    P,

        SUBTTL  TYPEFN  ; UUO TO TYPE A FILENAME AND EXTENSION

        ; CALLING FORMAT:

        ;       TYPEFN  OPTION,[ SIXBIT .FILENAME.
        ;                        SIXBIT .EXTENSION.]

        ; OPTION IS ZERO OR OMITTED TO NOT PRINT SPACES
        ; OPTION IS ONE TO PRINT FIXFORM IN A FIELD OF 13 CHARS

TFNUUO: MOVEI   X,@.JBUUO
        HLL     X,[POINT 6]     ; SIXBIT POINTER TO FN & EXT

        MOVEI   Y,^D9             ; CHARACTER COUNT (9)

TFNEXT: ILDB    C,X             ; GET NEXT CHARACTER
        ADDI    C,40            ; CONVERT TO ASCII

        SKIPN   AC              ; SKIP BLANKS IF OPTION 0
         CAIE   C," "
          OUTCHR C

        CAIN    Y,4               ; PRINT POINT AT APPROPRIATE PLACE
          OUTCHI "."

        SOJG    Y,TFNEXT          ; COUNT DOWN AND LOOP

        SKIPE   AC              ; IF OPTION 1 ...
          OUTSTR [BYTE(7)40,40,40] ; 3 TRAILING SPACES
        POPJ    P,

        SUBTTL  ERROR   ; UUO TO PRINT ERROR MESSAGES

        ; CALLING FORMAT:

        ;       ERROR   ERRNO,JUMP-ADDRESS

ERRUUO: OUTSTR  @ERRTAB(AC)     ; PRINT MESSAGE
        OUTSTR  CRLF
        PUSHJ   P,CRWAIT        ; ZAP REST OF LINE

        MOVEI   @.JBUUO
        SKIPE   
          MOVEM (P)
        POPJ    P,

        DEFINE  ER      (DUMMY,TEXT) <
                EXP [ASCIZ TEXT]>

ERRTAB: ER 0,"ILLEGAL SWITCH IN COMMAND STRING"
        ER 1,"ERROR: CAN NOT OPEN MASTER FILE"
        ER 2,"NO FILES SATISFYING REQUEST"
        ER 3,"USER NAME NOT IN LUD"
        ER 4,"NO MASTER FILE OPEN"
        ER 5,"SYNTAX ERROR IN COMMAND"
        ER 6,"ERROR: CAN NOT OPEN FILE"
        ER 7,"ERROR: CAN NOT EXECUTE COMMAND ON OLD FORMAT MASTER FILE"
        ER 10,"ERROR: SYSTEM I/O FAILURE ON DEVICE DSK:"
        ER 11,"ERROR: UNEXPECTED END OF FILE"
        ER 12,"NOT RESTORED - NEWER DISK VERSION"
        ER 13,"WARNING: DATA MAY BE LOST AT END OF FILE"
        ER 14,"ERROR: BAD FORMAT ON MASTER FILE"
        ER 15,"NOT SAVED - FILE EMPTY"
        ER 16,"ERROR: #16"
        ER 17,"ERROR: #17"

        SUBTTL  YES.NO  ; UUO TO ASK "OK?" AND TAKE A YES/NO ANSWER

        ; CALLING FORMAT:

        ;      NO  CONDITION,JUMP-ADDRESS

        ; WILL JUMP TO ADDRESS IF CONDITION MET, ELSE RETURN
        ; CONDITIONS ARE  Y  TO TEST FOR A "Y" RESPONSE,
        ;  N  TO TEST FOR A "N" RESPONSE.

        YES==1
        NO==2

YESUUO: MSG     " OK? "
        INCHRW  C
        CAIG    C,40    ; IGNORE CTRL CHARS
          JRST  YESUUO+1

        CAIN    C,"Y"
          JRST  YESREP
        CAIN    C,"N"
          JRST  NOREP

        OUTSTR  CRLF
        MSG     "Y/N ONLY PLEASE -"
        JRST    YESUUO

YESREP: CAIE    AC,YES
          POPJ  P,
        POP     P,X
        JRST    @40

NOREP:  CAIE    AC,NO
          POPJ  P,
        POP     P,X
        JRST    @40

        SUBTTL  CRWAIT  ; WAITS FOR A CR FROM TERMINAL

        ; CALLING FORMAT:

        ;       PUSHJ   P,CRWAIT

CRWAIT: CAIE    C,40            ; <CR> ALREADY THERE - IGNORE
          JRST  LFGET
        INCHWL  C
        CAIL    C,40
          JRST  CRWAIT+2
LFGET:  CAIN    C,15            ; IF <CR> READ <LF>
          INCHWL C
        POPJ    P,


        SUBTTL  OPNUFD  ; ROUTINE TO OPEN THE UFD

        ; CALLING FORMAT:

        ;       PUSHJ   P,OPNUFD
        ;         (ERROR RETURN)
        ;       (NORMAL RETURN)

        ; ERROR RETURN MAY BE TAKEN IF THE UFD CAN NOT BE READ
        ; OR IF THE FILE(S) IS NOT FOUND

OPNUFD: CLOSE   UCHAN,          ; MAKE SURE ITS CLOSED
        MMOVEI  ULOOK,3         ; ONLY 3 WORDS FOR UFD LOOKUP
        MMOVE   ULOOK+1,<[1,,1]>; MFD PPN
        MMOVE   ULOOK+.RBNAM,CURPPN  ; USER PPN
        MMOVE   ULOOK+3,[SIXBIT .UFD.]
        LOOKUP  UCHAN,ULOOK
          ERROR 6,OUFDER        ; CAN'T SO ERROR RETURN

        DMOVEM  FILE,UFD+1      ; SETUP CHANIO ARG BLOCK
        ZERO    [IOWD 4,UFD+4]
        MMOVEI  UFDPTR,UFDX     ; SETUP POINTER TO CURRENT FILE
        MMOVE   UFD,<[XWD -UFDSIZ,UFDX]>; SETUP POINTER TO ARGUMENT
        SETZM   UFDCNT          ; INITIALIZE FILE COUNT

OPNTRL: MOVE    X,[33,,UCHAN]     ; CALL CHANIO TO SEE IF ANY FILES
        CHANIO  X,UFD
          JRST  UFDEND

        MOVE    X,UFD+7         ; GET COUNT FROM CHANIO
        JUMPE   X,OPNTRL        ; SHORT CUT IF NOTHING

        ADDM    X,UFDCNT        ; UPDATE FILE COUNT
        LSH     X,1             ; MULTIPLY COUNT BY 2 FOR # WORDS
        HRLI    X,(X)           ; GET IT IN BOTH HALVES
        ADDM    X,UFD           ; ADD TO POINTER FOR CHANIO SO THAT
                                ; IT WILL PUT NEXT FILE AT END OF LIST
        JRST    OPNTRL          ; GO BACK TO TRY AND GET MORE

UFDEND: SKIPN   UFDCNT
          ERROR 2,OUFDER        ; NO FILES AT ALL - BAD REQUEST

        AOS     (P)             ; SKIP RETURN
OUFDER: POPJ    P,

UFD:    XWD     -UFDSIZ*2,UFDX  ; CHANIO DATA BLOCK
        BLOCK   2               ; SPACE FOR FILENAME
        NILL                    ; OPTION BITS - GET ONLY FILENAME 
        BLOCK   4               ; CHANIO SCRATCH SPACE

UFDCNT: NILL                    ; COUNT IS INITIALLY ZERO
UFDPTR: EXP     UFDX            ; POINTER TO NEXT FILE TO BE READ
UFDX:   BLOCK   UFDSIZ*2        ; UFD DATA BUFFER
        SUBTTL  RDUFD   ; SUBROUTINE TO READ UFD

        ; CALLING FORMAT:

        ;       PUSHJ   P,RDUFD
        ;         (ERROR RETURN)
        ;       (NORMAL RETURN)

        ; ERROR RETURN TAKEN ONLY IF END OF FILE LIST

RDUFD:  SOSGE   UFDCNT          ; DECREMENT COUNT
          POPJ  P,              ; END OF UFD
        DMOVE   FILE,@UFDPTR    ; GET FILENAME INTO FILE,EXT
        AOS     UFDPTR
        AOS     UFDPTR
        AOS     (P)
        POPJ    P,
        SUBTTL  APPEND  ; SETUP MASTER FILE TO BE APPENDED TO

        ; CALLING FORMAT:

        ;       PUSHJ   P,APPEND

APPEND: CLOSE   MCHAN,40
        TRNE    MSTAT,4         ; DO NOT ALLOW OLD FORMAT
          ERROR 7,COMAND
        TRNN    MSTAT,2         ; MAKE SURE WE HAVE WRITE ACCESS
          ERROR 4,COMAND
        LOOKUP  MCHAN,MLOOK
          ERROR 1,COMAND
        ENTER   MCHAN,MLOOK     ; DO THE ENTER
          ERROR 1,COMAND

        MOVE    A,MLOOK+.RBPOS  ; GET # WORDS USED IN FILE
        ADDI    A,177           ; ADD BLOCK SIZE
        IDIVI   A,200           ; DIVIDE INTO BLOCKS AND WORDS
        JUMPE   A,APPDON        ; IF NO FILE THERE, OKAY
        AOJ     A+1,            ; ADD ONE TO READ ALL WORDS
        USETI   MCHAN,(A)
        IN      MCHAN,
          SKIPA
        ERROR   11,COMAND       ; BAD IF EOF
        USETO   MCHAN,(A)
APPL:   SOJL    A+1,APPDON      ; KEEP COUNT
        BYTIN   MCHAN,C
          ERROR 11,COMAND
        BYTOUT  MCHAN,C
          ERROR 10,COMAND
        JRST    APPL

APPDON: SETZM   MPOS            ; ALL SET - NEXT IO WILL BE TO WORD
        POPJ    P,              ; FOLLOWING OLD EOF
        SUBTTL  FNDFIL  ; LOCATE THE FILE ON THE MASTER FILE

FNDFIL: CLOSE   MCHAN,50
        TRNN    MSTAT,1         ; MUST BE ABLE TO READ
          ERROR 4,COMAND
        LOOKUP  MCHAN,MLOOK
          ERROR 1,COMAND
        USETI   MCHAN,@BLCKNO           ; READ RIGHT BLOCK
FNDF1:  SOSGE   WORDNO          ; READ APPROPRIATE NUMBER OF WORDS
          JRST  FNDF2
        BYTIN   MCHAN,
          ERROR 11,COMAND
        JRST    FNDF1

FNDF2:  BYTIN   MCHAN,C         ; GET LOOKUP LENGTH
          ERROR 11,COMAND
        TRNE    MSTAT,4         ; SEE IF OLD FILE TYPE
          SUBI  C,1             ;   IF SO SUBTRACT ONE

        MOVEM   C,RLOOK         ; SAVE IN LOOKUP BLOCK
        MOVN    PTR,C
        MOVSS   PTR
        HRRI    PTR,RLOOK+1

FNDF3:  BYTIN   MCHAN,(PTR)
          ERROR 11,COMAND
        AOBJN   PTR,FNDF3

        POPJ    P,
        SUBTTL  OPNCFD  ; OPEN THE MASTER FILE FOR INPUT
                        ; AND SETUP FOR INPUTTING DIRECTORIES

        ; CALLING FORMAT:

        ;       PUSHJ   P,OPNCFD
        ;         (ERROR RETURN)
        ;       (NORMAL RETURN)

CFDX:   BLOCK   CFDSIZ*2        ; SPACE FOR CFD (2 WORDS EACH ENTRY)
CFDPTR: EXP     CFDX
CFDCNT: EXP     0

OPNCFD: CLOSE   MCHAN,50        ; MAKE SURE CLOSED
        TRNN    MSTAT,1         ; MUST BE ABLE TO READ FILE
          ERROR 4,OPNCFE
        LOOKUP  MCHAN,MLOOK     ; LOOKUP FOR FUTURE INPUT
          ERROR 1,OPNCFE

        MOVEI   PTR,CFDX-2      ; GET POINTER TO FIRST ARGUMENT

CFD1:   ADDI    PTR,2           ; POP POINTER
        CAML    PTR,CFDPTR      ; IF END OF LIST, ERROR RETURN
          ERROR 2,OPNCFE
        DMOVE   (PTR)           ; GET STRING
        DMOVEM  RLOOK+.RBNAM
        PUSHJ   P,COMPAR        ; SEE IF MATCH
          JRST  CFD1            ;   NOMATCH

        MMOVEI  PTRCFD#,CFDX-2  ; SETUP NEW POINTER
        SETZM   BLCKNO          ; RELATIVE BLOCK ZERO

        AOS     (P)
OPNCFE: POPJ    P,
        SUBTTL  COMPAR  ; COMPARES THE FILE IN CFDX TO THE FILE

        ; CALLING FORMAT:

        ;       PUSHJ   P,COMPAR
        ;         (NOMATCH)
        ;       (MATCH)

COMPAR: MOVE    X,[POINT 6,FILE]
        MOVEM   X,PTRA#
        MOVE    X,[POINT 6,RLOOK+.RBNAM]
        MOVEM   X,PTRB#
        CAMN    FILE,[SIXBIT .*.]
          MOVE  FILE,[SIXBIT .######.]
        CAMN    EXT, [SIXBIT .*.]
          MOVE  EXT, [SIXBIT .###.]
        MOVEI   Z,11

COMP1:  ILDB    X,PTRA
        ILDB    Y,PTRB
        CAIE    X,(Y)
         CAIN   X,'#'
          SKIPA
           POPJ P,
        SOJG    Z,COMP1
        AOS     (P)
        POPJ    P,
        SUBTTL  RDCFD   ; READS THE NEXT LOOKUP BLOCK FROM MASTER
                        ; FILE AND CHECKS IT AGAINST THE FILE SPECIFIED

        ; CALLING FORMAT:

        ;       PUSHJ   P,RDCFD
        ;         (ERROR RETURN - NONE LEFT)
        ;       ((NORMAL RETURN - EX LOOKUP IN CFDX)

BLCKNO: BLOCK   1
WORDNO: BLOCK   1

RDCFD:  MOVE    PTR,PTRCFD      ; GET CURRENT POINTER

CFD2:   ADDI    PTR,2           ; MOVE POINTER
        CAML    PTR,CFDPTR      ; TEST FOR END OF LIST
          POPJ  P,
        DMOVE   A,(PTR)         ; GET FILENAME
        MOVEM   A,RLOOK+.RBNAM
        HLLZM   A+1,RLOOK+.RBEXT
        LDB     [POINT 11,A+1,28]       ; GET RELATIVE BLOCK NUMBER
        ADDM    BLCKNO
        LDB     [POINT 7,A+1,35]        ; GET RELATIVE WORD NUMBER
        MOVEM   WORDNO
        PUSHJ   P,COMPAR        ; COMAPRE
          JRST  CFD2            ;   NOMATCH - TRY AGAIN
        MOVEM   PTR,PTRCFD      ; SAVE CURRENT POINTER
        AOS     (P)
        POPJ    P,
        SUBTTL  FATAL   ; ROUTINE TO "HANDLE" FATAL ERROR

        ; CALLING FORMAT:

        ;       PUSHJ   P,FATAL

FATAL:  OUTSTR  CRLF
        MSG     "FATAL ERROR AT USER LOCATION "
        TYPEOC  1,(P)
        EXIT    1,
        POPJ    P,
        SUBTTL  SWGET   ; GETS SWITCHES FROM TERMINAL

        ; CALLING FORMAT:

        ;       PUSHJ   P,SWGET

SWGET:  SETZ    SW,
        CAIGE   C,40
          POPJ  P,

        SKIPA
SWGETX: INCHWL  C
        CAIGE   C,40
          POPJ  P,
        CAIE    C,"/"
          JRST  SWGETX

        INCHWL  C
        CAIGE   C,40
          ERROR 0,COMAND
        MOVEI   X,1
        LSH     X,-"A"(C)
        OR      SW,X
        JRST    SWGETX

        SUBTTL  FNGET   ; GETS A FILENAME FROM THE TERMINAL

        ; CALLING FORMAT:

        ;       PUSHJ   P,FNGET

        ; FNAME RETURNED IN FILE
        ; EXT IN            EXT
        ; PPN IN            PPN

FNGET:  SETZ    PPN,
        SETZB   FILE,EXT
        CAIGE   C,40            ; SEE IF ANYTHING ON LINE
          POPJ  P,

        INCHWL  C
        CAIE    C,"("   ; IF NOT USER, TAKE AS FILE
          JRST  FNGFIL
        MOVE    PTR,[POINT 6,USERN]
        SETZM   USERN
        SETZM   USERN+1
FNG1:   INCHWL  C
        CAIN    C,")"
          JRST  FNG2
        CAIGE   C,40
          ERROR 5,CMNDX 
        SUBI    C,40
        IDPB    C,PTR
        JRST    FNG1
USERN:  BLOCK   2
FNG2:   JSA     16,NAMPPN
        ARG     00,USERN
        ARG     00,XPPN#
        ARG     00,XERR#
        MOVE    PPN,XPPN
        SKIPE   XERR
          ERROR 3,CMNDX         ; NAME NOT IN LUD

        INCHWL  C

FNGFIL: MOVE    PTR,[POINT 6,FILE]
        SKIPA           ; DON'T GET ANOTHER CHARACTER

FNG3:   INCHWL  C
        CAIN    C,"."
          JRST  FNGEXT
        CAIGE   C,40
          POPJ  P,
        CAIN    C,"/"
          POPJ  P,
        SUBI    C,40
        IDPB    C,PTR
        JRST    FNG3

FNGEXT: MOVE    PTR,[POINT 6,EXT]
FNG4:   INCHWL  C
        CAIGE   C,40
          POPJ  P,
        CAIN    C,"/"
          POPJ  P,
        SUBI    C,40
        IDPB    C,PTR
        JRST    FNG4

        SUBTTL  MAIN    ; MAIN ENTRY POINT - INITIALIZE THINGS

START:  MOVE    P,[IOWD STACKL,STACK]   ; INIT PUSHDOWN LIST

        OUTSTR  CRLF
        HRROI   FILE,3                  ; GET PROGRAM'S NAME
        GETTAB  FILE,
          PUSHJ P,FATAL
        MOVEM   FILE,MYNAME             ; SAVE NAME FOR LATER (V 3.0)
        TYPEFN  MYNAME                  ; TYPE PROGRAM NAME (V 3.0)
        MSG     "  V "
        HLRZ    A,.JBVER        ; GET MAJOR VERSION NUMBER
        TYPEOC  A
        MSG     <",,">
        HRRZ    A,.JBVER        ; GET MINOR VERSION NUMBER
        TYPEOC  A
        OUTSTR  CRLF

        IFN <RESGFD!MSTPRO>,<           ; GET AS LICENSE BIT IF NEEDED
        HRROI   6
        GETTAB
          PUSHJ P,FATAL
        ANDI    1B22
        SKIPE
          SETO
        MOVEM   PVACTS#>

        HRROI   2               ; GET USER PPN
        GETTAB
          PUSHJ P,FATAL
        MOVEM   CURPPN
        HRROI   -23             ; GET LOGIN PPN
        GETTAB
          PUSHJ P,FATAL
        MOVEM   LOGPPN

        SUBTTL  DISK    ; INITIALIZE ALL DISK CHANNELS

        DEFINE  DINIT   (PRE,CH,MO) <
                PRE'CHAN==CH
                JRST .+13+LOOKSZ
        PRE'POS:  BLOCK 1
        PRE'BUFI: BLOCK 3
        PRE'BUFO: BLOCK 3
        PRE'LOOK: BLOCK LOOKSZ
        PRE'OPEN: EXP   MO
                SIXBIT  .DSK.
                XWD  PRE'BUFO,PRE'BUFI
                OPEN  PRE'CHAN,PRE'OPEN
                  PUSHJ P,FATAL
>

        .IOASC==0
        .IOIMG=10
        .IODMP==17
        IO.SYN==1B30
        IO.EOF==1B22
        IO.BKT==1B21



        RESET
        DINIT   M,1,IO.SYN+.IOIMG       ; MASTER FILE
        DINIT   F,2,.IOIMG              ; UTILITY FILE
        DINIT   U,3,.IODMP              ; UFD FILE
        DINIT   L,4,.IODMP              ; LUD FILE

        INBUF   MCHAN,1                 ; (V 3.0)
        OUTBUF  MCHAN,1                 ; (V 3.0)
        INBUF   FCHAN,                  ; (V 3.0)
        OUTBUF  FCHAN,                  ; (V 3.0)
        INBUF   UCHAN,                  ; (V 3.0)
        INBUF   LCHAN,                  ; (V 3.0)

        JRST    DINITX
LB.POS: NILL            ; TABLE OF POS COUNTERS
        EXP     MPOS,FPOS,UPOS,LPOS
BUFIN:  NILL            ; TABLE OF INPUT BUFFER HEADERS
        EXP     MBUFI,FBUFI,UBUFI,LBUFI
BUFOUT: NILL            ; TABLE OF OUTPUT BUFFER HEADERS
        EXP     MBUFO,FBUFO,UBUFO,LBUFO
DINITX: JUMP
        SUBTTL  BULITN  ; CHECKS FOR A BULITEN IF REQUIRED

        IFN <BULTIN>,<
        HRROI   3               ; GETTAB TO GET PROGRAM NAME
        GETTAB
          PUSHJ P,FATAL
        MOVEM   LOOK

        INIT
        SIXBIT .DSK.
        XWD 0,IBUF
          PUSHJ P,FATAL
        HRROI   -25             ; GETTAB TO GET PROGRAMS HOME DIRECTORY
        GETTAB
          PUSHJ P,FATAL
        MOVEM   LOOK+3
        LOOKUP  LOOK
          JRST  NOBULT


BULIN:  IN
          OUTPTR IBUF+1

NOBULT: CLOSE
        RELEAS
        JRST    .+10
LOOK:   SIXBIT  .FDM.
        SIXBIT  .BUL.
        BLOCK   2
IBUF:   BLOCK   3>

        SUBTTL  COMAND  ; PROCESS COMMANDS - MAIN COMMAND LEVEL

        DEFINE  CMD     (TEXT,ADDR) <
                CAIN    TEXT
                  JRST  ADDR>

COMAND: MOVE    P,[IOWD STACKL,STACK]   ; REINITIALIZE THE STACK

        OUTSTR  [BYTE(7)15,12,"*"]      ; PROMPT

        INCHWL  C
        LSH     C,7
        INCHWL
        ADD     C               ; AC0 NOW CONTAINS FIRST TWO CHARACTERS
                                ; OF COMMAND RIGHT JUSTIFIED

BRWAIT: CAIG    C,40            ; (V 3.0)
          JRST  BRWDN           ; (V 3.0)
        INCHWL  C               ; WAIT FOR A SPACE OR TAB OR SOMETHING
        JRST    BRWAIT          ; (V 3.0)
BRWDN:  CAIN    C,15
          INCHWL C


        ; DEFINE COMMANDS HERE

        CMD     "GF",   GFD     ; GFD
        CMD     "OP",   COPEN    ; OPEN
        CMD     "SA",   SAVE    ; SAVE
        CMD     "RE",   RESTOR  ; RESTORE
        CMD     "DI",   DIRECT  ; DIRECTORY
        CMD     "FI",   FILES   ; FILES
        CMD     "DE",   DELETE  ; DELETE
        CMD     "IN",   INSTRU  ; INSTRUCTIONS
        CMD     "HE",   HELP    ; HELP
        CMD     "SW",   SWITCH  ; SWITCHES
        CMD     "QU",   QUIT    ; QUIT
        CMD     24215,  QUIT    ; Q<CR>
        CMD     3212,   COMAND  ; BLANK LINE
        MOVE    A,.JBDDT
        CMD     "DD",   (A)     ; DDT

WHAT:   PUSHJ   P,CRWAIT
        MSG     "WHAT?"
        JRST    COMAND



CMNDX:  PUSHJ   P,CRWAIT
        JRST    COMAND
        SUBTTL  QUIT    ; EXIT FROM THE PROGRAM

QUIT:   CLOSE   MCHAN,50
        CLOSE   FCHAN,50
        EXIT
        SUBTTL  HELP    ; TELL ABOUT THE INSTRUCTIONS

HELP:   MSG     <"VALID COMMANDS ARE:
  OPEN
  SAVE
  RESTORE
  DIRECTORY
  FILES
  DELETE
  INSTRCUTIONS
  HELP
  SWITCHES
  GFD
  QUIT
">
        JRST    COMAND

INSTRU: OUTSTR  INST
        JRST    COMAND
INST:   ASCIZ   "
OPEN (USERNAME)FILENAME         OPENS A COMPRESSED FILE FOR I/O
SAVE FILENAME                   SAVES FILENAME ON COMPRESSED FILE,
                        FILENAME MAY BE WILD (CONTAIN *'S AND #'S)
                        IF /D IS GIVEN, FILE IS DELETED AFTER IT
                        IS COMPRESSED.
RESTORE FILENAME                RESTORES THE NAMED FILE FROM THE
                        COMPRESSED FILE ONTO DISK.  A FILE WILL BE
                        SUPERCEEDED BY A VERSION THAT IS NEWER.
DIRECTORY                       GIVES CREATION AND SIZE FOR 
                        FILES THAT ARE IN THE MASTER FILE
FILES                           SAME AS DIRECTORY EXCEPT THAT 
                        ONLY THE FILE NAMES ARE GIVEN
DELETE FILENAME                 DELETES THE NAMED FILES FROM DISK.
                        IF THE FILE IS PROTECTED, THE USER MUST CONFIRM.
SWITCHES                        PRINT A LIST OF THE SWITCHES THAT WERE
                        SPECIFIED AT ASSEMBLE TIME.
GFD USERNAME                    FORCES ALL DELETE'S, SAVE'S,
                        DIRECTORY'S, FILES'S AND RESTORE'S TO
                        REFERENCE FILES ON THE NAMED USER'S DIRECTORY.
                        (LIKE TYMEX GFD COMMAND)
QUIT                            RETURNS USER TO MONITOR
"

        SUBTTL  SWITCH  ; PRINTS SWITCHES IN EFFECT
        DEFINE  OSW     (SWITCH) <
                MSG     " SWITCH'=="
                MOVEI   SWITCH
                TYPEOC
                OUTSTR  CRLF>

        DEFINE  DSW     (SWITCH) <
                MSG     " SWITCH'==^D"
                MOVEI   SWITCH
                TYPENO
                OUTSTR  CRLF>

        DEFINE  LSW     (SWITCH) <
                IFE <SWITCH>,< MSG " SWITCH'==OFF">
                IFN <SWITCH>,< MSG " SWITCH'==ON">
                OUTSTR CRLF>

SWITCH: PUSHJ   P,CRWAIT
        OUTSTR  CRLF
        MSG     "STATE OF OPTION SWITCHES AT ASSEMBLY:"
        OUTSTR  CRLF
        LSW     RESGFD
        LSW     MSTPRO
        LSW     MSTHOM
        LSW     BULTIN
        LSW     AUTODL
        LSW     MSTDEL
        LSW     IGNPRO
        OSW     LOOKSZ
        OSW     MFPROT
        OSW     LKBMAX
        DSW     UFDSIZ
        DSW     CLUSTR
        DSW     CFDSIZ
        JRST    COMAND

        SUBTTL  OPEN    ; OPENS A MASTER FILE

COPEN:  PUSHJ   P,FNGET         ; GET FILE NAME AND POSSIBLE USERNAME
        PUSHJ   P,SWGET
        PUSHJ   P,CRWAIT
        SKIPE   EXT
          MSG <"WARNING: FILE EXTENSION IGNORRED
">
        MOVE    EXT,[SIXBIT .CMP.]      ; MUST HAVE EXTENSION CMP
        IFN <MSTHOM>,<
          SKIPE PPN
            MSG <"WARNING: USER NAME IGNORRED
">
          SETZ  PPN,>
        TDNE    SW,[777777,,737777]     ; ERROR ON BAD SWITCH
          ERROR 0,COMAND
        MOVEI   MSTAT,3         ; INITIALIZE STATUS TO /R/W
        ZERO    [IOWD LOOKSZ,MLOOK]     ; ZERO THE LOOKUP BLOCK
        MOVEI   LOOKSZ-1        ; LENGTH OF BLOCK - NOT COUNTING COUNT
        MOVEM   MLOOK
        MOVEM   PPN,MLOOK+1
        MOVEM   FILE,MLOOK+.RBNAM
        MOVEM   EXT,MLOOK+3
        CLOSE   MCHAN,50        ; MAKE SURE THAT ITS CLOSED

        LOOKUP  MCHAN,MLOOK
          JRST  NEWFIL

        HLLZ    A,.JBVER        ; GET PROGRAM VERSION NUMBER
        HLLZ    B,MLOOK+.RBVER  ; GET MASTER FILE VERSION NUMBER
        CAMN    A,B             ; CHECK IF EQUAL
          JRST  OLDFI2          ; (V 3.0)
        MSG     "WARNING: "
        TYPEFN  MLOOK+.RBNAM
        MSG     " WRITTEN BY VERSION "
        HLRZ    A,MLOOK+.RBVER
        TYPEOC  A
        MSG     <",,">
        HRRZ    A,MLOOK+.RBVER
        TYPEOC  A
        OUTSTR  CRLF

OLDFI2: MOVE    A,MYNAME        ; COMPARE AUTHOR PROGRAM NAME (V 3.0)
        MOVE    B,MLOOK+.RBXT2  ; (V 3.0)
        CAMN    A,B             ; ALL DOWN TO NEXT BLANK LINE (V 3.0)
          JRST  OLDFIL
        MSG     "WARNING: "
        TYPEFN  MLOOK+.RBNAM
        MSG     " WRITTEN BY "
        DMOVE   A,MYNAME
        MOVE    A,MLOOK+.RBXT2
        SKIPN   A
          MOVE  A,[SIXBIT .?.]
        TYPEFN  A
        OUTSTR  CRLF

OLDFIL: MSG     "OLD FILE."
        OUTSTR  CRLF

        MOVE    MLOOK+.RBAUT    ; GET AUTHOR PPN
        CAMN    CURPPN          ; MATCH CURRENT?
          JRST  OPENOK
        CAMN    LOGPPN          ; MATCH LOGIN?
          JRST  OPENOK
        MSG     "WARNING: "
        TYPEFN  MLOOK+.RBNAM
        MSG     " WAS CREATED BY ANOTHER USER"
        OUTSTR  CRLF

        IFN     <MSTPRO>,<
        MOVE    PVACTS
        JUMPN   OPENOK          ; LET AS GET BY
        MSG     "WARNING: "
        TYPEFN  MLOOK+.RBNAM
        MSG     " FORCED READ ONLY DUE TO PROTECTION"
        OUTSTR  CRLF
        TRZ     MSTAT,2>        ; CLEAR WRITE BIT
        JRST    OPENOK

NEWFIL: MSG     "NEW FILE."
        OUTSTR  CRLF
        TRZ     MSTAT,1         ; CAN'T READ IF NEW FILE
        MMOVE   MLOOK+.RBVER,.JBVER     ; SET CURRENT FILE VERSION
        MMOVE   MLOOK+.RBXT2,MYNAME     ; SET CURRENT NAME (V 3.0)
        MMOVE   MLOOK+.RBPRV,[<MFPROT>B8]       ; SET PROTECTION

OPENOK: ENTER   MCHAN,MLOOK
          TRZ   MSTAT,2         ; CAN'T WRITE IF CAN'T ENTER

        SKIPN   MSTAT           ; TEST FOR ERROR
          ERROR 1,OPENEX

        TYPEFN  MLOOK+.RBNAM
        CAIN    MSTAT,3         ; TYPE THE FILE MODE
          MSG   " READ/WRITE."
        CAIN    MSTAT,2
          MSG   " WRITE ONLY."
        CAIN    MSTAT,1
          MSG   " READ ONLY."
        OUTSTR  CRLF

OPENEX: TRNE    SW,1B21         ; TEST FOR /O
          TRO   SW,4            ; SET OLD FORMAT BIT
        CLOSE   MCHAN,2         ; CLOSE OUTPUT SIDE OF MCHAN
;       THIS ROUTINE READS THE MASTER FILE AND CREATES AN IN CORE
;       DIRECTORY OF THE FILES CONTAINED IN IT

        TRNN    MSTAT,1         ; MUST BE ABLE TO READ FILE
          JRST  COMAND

        MMOVEI  CFDPTR,CFDX     ; START AT BEGINNING OF BUFFER
        SETZM   CFDCNT          ; ZERO FILE COUNT
        SETZM   MPOS            ; ZERO FILE WORD COUNT
        SETZM   BLCKNO          ; SETUP INITIAL BLOCK NUMBER
        MOVE    PTR,CFDPTR      ; INITIALIZE PTR

CFDG1:  SOSGE   MLOOK+.RBFUT    ; DECREMENT FILE COUNT
         TRNE   MSTAT,4         ; IF OLD FLAG, NEG COUNT OK
          SKIPA
           JRST  CFDGX
        BYTIN   MCHAN,C         ; GET A BYTE (1ST LOOKUP WORD)
          JRST  CFDGND
        JUMPE   C,.-2           ; WAIT FOR NON-ZERO

        CAIL    C,LKBMAX        ; MAKE SURE REASONALBE LOOKUP SIZE
          ERROR 14,CFDGE

        TRNE    MSTAT,4         ; IF OLD FORMAT, SUBTRACT ONE
          SUBI  C,1

        MOVE    A,MPOS          ; GET WORD COUNT
        ADDI    A,177           ; ADD BLOCKSIZE-1 TO CONVERT TO BLOCKS
        IDIVI   A,200           ; DIVIDE BY BLOCKSIZE
                                ; A = BLOCK NUMBER, B = WORD NO
        SUB     A,BLCKNO        ; CALCULATE RELATIVE BLOCK NUMBER
        ADDM    A,BLCKNO        ; STORE NEW BLOCK NUMBER
        DPB     A,[POINT 11,1(PTR),28]
        DPB     A+1,[POINT 7,1(PTR),35]

        MOVEI   B,1             ; READING RELATIVE WORD ZERO
CFDG2:  CAMLE   B,C             ; SEE IF MORE
          JRST  CFDG3
        BYTIN   MCHAN,A         ; GET BYTE
          ERROR 11,CFDGE
        CAIN    B,.RBNAM        ; IF NAME, STORE IT
          MOVEM A,(PTR)
        CAIN    B,.RBEXT        ; IF EXTENSION, STORE IT
          HLLM  A,1(PTR)
        CAIN    B,.RBSIZ        ; IF SIZE, STORE IT
          ADDM  A,C             ;   READ THAT MANY MORE WORDS
        AOJA    B,CFDG2

CFDG3:  AOS     CFDCNT          ; COUNT FILES
        ADDI    PTR,2           ; INCREMENT POINTER
        JRST    CFDG1

CFDGND: TRNN    MSTAT,4         ; TEST OLD FLAG
          ERROR 11,CFDGE        ; NEW FORMAT - EOF ILLEGAL
        JRST    CFDGX           ; OLD FORMAT - EOF LEGAL

CFDGE:  MSG     "WARNING: "
        TYPEFN  MLOOK+.RBNAM
        MSG     " FORCED TO READ ONLY BY ERROR"
        OUTSTR  CRLF
        TRZ     MSTAT,2

CFDGX:  MOVEM   PTR,CFDPTR      ; SAVE PTR
        CLOSE   MCHAN,          ; CLOSE THE FILE
        TYPENO  CFDCNT          ; TYPE FILE COUNT
        MSG     " FILES."
        OUTSTR  CRLF

        JRST    COMAND
        SUBTTL  SAVE    ; COMAND PROCESSOR TO SAVE FILES

SAVE:   PUSHJ   P,FNGET         ; GET FILENAME
        PUSHJ   P,SWGET         ; GET SWITCHES
        PUSHJ   P,CRWAIT
        SKIPE   PPN             ; PPN NOT ALLOWED HERE
          ERROR 5,COMAND

        TDNE    SW,[777777,,777767]     ; TEST FOR BAD SWITCHES
          ERROR 0,COMAND

        PUSHJ   P,OPNUFD                ; OPEN THE UFD
          JRST  COMAND


SAVEN:  PUSHJ   P,RDUFD                 ; READ THE UFD
          JRST  SAVED                   ;   IF DONE

        HLRZ    A,EXT                   ; GET EXTENSION
        CAIN    A,'TMP'                 ; NEVER SAVE TMP FILE
          JRST  SAVEN
        CAIN    A,'CMP'                 ; NEVER SAVE CMP FILE
          JRST  SAVEN

        ZERO    [IOWD LOOKSZ,FLOOK]     ; ZERO LOOKUP BLOCK
        MMOVEI  FLOOK,LOOKSZ-1
        MMOVE   FLOOK+1,CURPPN
        DMOVEM  FILE,FLOOK+.RBNAM
        CLOSE   FCHAN,
        TYPEFN  1,FILE
        LOOKUP  FCHAN,FLOOK
          ERROR 6,SAVEN


        MOVEI   B,.IOIMG                ; FORCE FILE MODE FOR FUTURE
        DPB     B,RB.MOD                ; SAVE IN LOOKUP BLOCK

        SKIPN   FLOOK+.RBSIZ            ; ERROR IF FILE EMPTY
          ERROR 15,SAVEN                ;   FILE NOT SAVED - EMPTY

        PUSHJ   P,APPEND                ; OPEN MASTER FILE TO APPEND

        MOVEI   B,FLOOK                 ; SAVE LOOKUP BLOCK
        HRLI    B,-LOOKSZ
        BYTOUT  MCHAN,(B)
          ERROR 10,COMAND
        AOBJN   B,.-2

        MOVE    B,FLOOK+.RBSIZ          ; GET FILE SIZE
SAVEL:  BYTIN   FCHAN,C                 ; GET BYTE (WORD)
          ERROR 11,SAVEN
        BYTOUT  MCHAN,C                 ; PUT BYTE (WORD)
          ERROR 10,SAVEN
        SOJG    B,SAVEL

SAVELD: MOVE    A,FLOOK+.RBSIZ  ; GET SIZE OF OLD FILE
        ADDI    A,CLUSTR*2-1    ; COMPUTE NO OF CLUSTERS
        IDIVI   A,CLUSTR
        IMULI   A,CLUSTR        ; ROUND UP TO NEXT CLUSTER
        MOVE    B,MPOS          ; GET WORD COUNT
        IMULI   B,^D100         ; FOR % SAKE
        IDIV    B,A
        MSG     "TO "
        TYPENO  2,B             ; (V 3.0)
        MSG     "% "

        CLOSE   MCHAN,          ; WRITE THE FILE
        LOOKUP  MCHAN,MLOOK     ; LOOKUP FOR THE RENAME
          ERROR 1,COMAND
        MOVE    A,MPOS          ; GET WORDS OUTPUT
        ADDM    A,MLOOK+.RBPOS  ; INCREMENT TO POINT TO NEW EOF
        MOVEI   A,1             ; GET NUMBER OF FILES APPENDED
        ADDM    A,MLOOK+.RBFUT  ; UPDATE FILE COUNT
        RENAME  MCHAN,MLOOK     ; DO RENAME TO SET NEW PARAMETERS
          ERROR 1,COMAND

        MOVE    PTR,CFDPTR      ; GET CFD POINTER TO NEXT ENTRY
        DMOVE   FLOOK+.RBNAM    ; GET AND STORE FILENAME
        DMOVEM  (PTR)
        MOVE    A,MLOOK+.RBPOS  ; GET EOF WORD NUMBER
        SUB     A,MPOS          ; SUBTRACT WORDS IN CURRENT FILE
        ADDI    A,200           ; ADD BLOCK SIZE
        IDIVI   A,200           ; A=BLOCKNO, B=WORDNO
        SUB     A,BLCKNO        ; A=RELATIVE BLOCKNO
        ADDM    A,BLCKNO        ; UPDATE CURRENT BLOCKNO
        DPB     A,[POINT 11,1(PTR),28]
        DPB     A+1,[POINT 7,1(PTR),35]
        MMOVEI  CFDPTR,2(PTR)   ; UPDATE POINTER
        AOS     CFDCNT          ; AND COUNT

SAVEDL: IFN     <AUTODL>,<
        SKIPN   SW              ; /D SWITCH ON?
          JRST  SAVELX

        LDB     A,RB.PRV        ; GET PROTECTION CODE
        CAIGE   A,100           ; PROTECTED AGAINST DELETE?
          JRST  DELOK
        MSG     " PROTECTED"

        IFN     <IGNPRO>,<
        MSG     <", DELETE">
        OUTCHI  7               ; RING BELL
        YES.NO  NO,SAVELX>       ; CHECK ANSWER

        IFE     <IGNPRO>,<
        JRST    SAVELX>

DELOK:  SETZM   FLOOK+.RBNAM
        SETZM   FLOOK+3
        MSG     "  ** "
        RENAME  FCHAN,FLOOK     ; TRY TO DELETE
          ERROR 6,SAVED
        MSG     " DELETED">

SAVELX: OUTSTR  CRLF
        CLOSE   FCHAN,10
        CLOSE   MCHAN,0
        TRO     MSTAT,1         ; SOMETHING THERE TO READ NOW
        JRST    SAVEN

SAVED:  CLOSE   FCHAN,50
        CLOSE   MCHAN,40
        CLOSE   UCHAN,
        JRST    COMAND

        SUBTTL  RESTOR  ; RESTORE FILES TO DISK

RLOOK:  BLOCK   LKBMAX+1

RESTOR: PUSHJ   P,FNGET         ; GET FILENAMES
        PUSHJ   P,SWGET         ; GET SWITCHES
        PUSHJ   P,CRWAIT        ; GET <CR>

        SKIPE   PPN             ; PPN NOT ALLOWED HERE
          ERROR 5,COMAND

        SKIPE   SW              ; TEST FOR ALLOWED SWITCHES
          ERROR 0,COMAND

        PUSHJ   P,OPNCFD        ; OPEN FOR INPUT
          JRST  COMAND

RESTN:  PUSHJ   P,RDCFD         ; READ COMPRESSED FILE DIRECTORY
          JRST  RESTD

        PUSHJ   P,FNDFIL        ; FIND THE FILE & GET LOOKUP BLOCK

        AOS     .RBFT1+RLOOK   ; INCREMENT RESTOR COUNTER

        MMOVE   RLOOK+.RBPPN,CURPPN             ; FORCE TO CURRENT PPN
        ZERO    [IOWD LOOKSZ,FLOOK]     ; ZERO LOOKUP BLOCK
        MMOVE   FLOOK,RLOOK
        MMOVE   FLOOK+.RBPPN,RLOOK+.RBPPN
        MMOVE   FLOOK+.RBNAM,RLOOK+.RBNAM
        MMOVE   FLOOK+.RBEXT,RLOOK+.RBEXT
        CLOSE   FCHAN,
        TYPEFN  1,RLOOK+.RBNAM
        LOOKUP  FCHAN,FLOOK
          JRST  RESTOK          ; FILE DOES NOT EXIST (YET) - GOOD!

        CREDAT  B,FLOOK
        CREDAT  A,RLOOK
        CAMG    A,B
          ERROR 12,RESTN        ; NEWER DISK VERSION

        LDB     A,RB.PRV        ; GET PROTECTION CODE
        CAIL    A,300           ; ALLOW UPDATE
          JRST  SUPOK
        MSG     "PROTECTED"

        IFN     <IGNPRO>,<
        MSG     <", DELETE OLD VERSION">
        YES.NO  NO,SUPDEC
        OUTSTR  CRLF
        TYPEFN  1,RLOOK+.RBNAM>

        IFE     <IGNPRO>,<
        OUTSTR  CRLF
        JRST    SUPDEC>

SUPOK:  MSG     <"OLD FILE, ">
RESTOK: CLOSE   FCHAN,
        ENTER   FCHAN,RLOOK
          ERROR 6,RESTN

        OUTBUF  FCHAN,

        MOVE    A,RLOOK+.RBSIZ
        SETZM   FPOS
RESTL:  SOJL    A,RESDON
        BYTIN   MCHAN,C
          ERROR 11,RESTN
        BYTOUT  FCHAN,C
          ERROR 10,RESTN
        JRST    RESTL

SUPDEC: MSG     "**  NOT "
        JRST    RESTDX

RESDON: MOVE    A,FPOS
        IMULI   A,5             ; CONVERT TO CHARACTERS
        TYPENO  A
        MSG     " CHARS "

RESTDX: MSG     "RESTORED"
        OUTSTR  CRLF
        CLOSE   FCHAN,10
        JRST    RESTN

RESTD:  CLOSE   MCHAN,
        JRST    COMAND
        SUBTTL  FILES   ; PRODUCES A LIST OF FILES

FILES:  PUSHJ   P,FNGET
        PUSHJ   P,SWGET
        PUSHJ   P,CRWAIT

        SKIPN   FILE
          DMOVE FILE,[SIXBIT "*     *"]

        PUSHJ   P,OPNCFD
          JRST  COMAND
FILOP:  PUSHJ   P,RDCFD
          JRST  COMAND
        TYPEFN  1,RLOOK+.RBNAM
        OUTSTR  CRLF

        JRST    FILOP

        SUBTTL  GFD     ; ALLOW GFD INTO ANOTHER ACCOUNT

GFD:    MOVE    PTR,[POINT 6,USERN]
        SETZM   USERN
        SETZM   USERN+1

        CAIGE   C,40
          JRST  GFD2

GFD1:   INCHWL  C       ; GET CHARACTER
        CAIGE   C,40    ; BREAK CHAR?
          JRST  GFD2
        SUBI    C,40
        IDPB    C,PTR
        JRST    GFD1

GFD2:   PUSHJ   P,CRWAIT

        IFN     <RESGFD>,<      ; IF GFD FOR A.S. ONLY
        SKIPE   PVACTS          ; TEST FOR A.S. LICENSE
          JRST  GFD2A           ;   GOT IT

        MSG     "ERROR: ACCOUNT SUPERVISOR LICENSE REQUIRED"
        OUTSTR  CRLF
        JRST    COMAND>

GFD2A:  SKIPE   USERN           ; IF NO USERNAME GIVEN, GO HOME
          JRST  GFD3

        MMOVE   CURPPN,LOGPPN
        JRST    COMAND

GFD3:   SETZM   XERR
        JSA     16,NAMPPN
        ARG     00,USERN
        ARG     00,XPPN
        ARG     00,XERR
        SKIPE   XERR
          ERROR 3,COMAND

        MMOVE   CURPPN,XPPN
        JRST    COMAND
        MOVEM   PPN,CURPPN
        JRST    COMAND

        SUBTTL  DIRECT  ; PRINT DIRECTORY OF COMPRESSED FILE

DIRECT: PUSHJ   P,FNGET
        PUSHJ   P,SWGET
        PUSHJ   P,CRWAIT

        SKIPN   FILE
          DMOVE FILE,[SIXBIT .*     *.]

        PUSHJ   P,OPNCFD
          JRST  COMAND

        CAME    FILE,[SIXBIT .######.]
          JRST  DIROP
        CAME    EXT,[SIXBIT .###.]
          JRST  DIROP

        OUTSTR  CRLF
        MSG     "DIRECTORY OF COMPRESSED FILE ("
        TYPEUN  MLOOK+.RBPPN
        MSG     ")"
        TYPEFN  MLOOK+.RBNAM
        MSG     " ON "

        MOVE    A,[11,,11]      ; GET DATE
        GETTAB  A,
          PUSHJ P,FATAL
        MOVE    B,[10,,11]      ; GET TIME IN JIFFIES
        GETTAB  B,
          PUSHJ P,FATAL
        MOVE    C,[26,,11]      ; GET JIFFIES PER SECOND
        GETTAB  C,
          PUSHJ P,FATAL
        IDIV    B,C             ; CONVERT TO SECONDS
        HRL     A
        HRR     B
        TYPEDT  3,              ; TYPE DATE
        OUTSTR  CRLF

        IFN     <MSTPRO>,<      ; TYPE AUTHOR IF PERTINENT
        MSG     "OWNED BY ("
        TYPEUN  MLOOK+.RBAUT
        MSG     <"); ">>

        TYPENO  MLOOK+.RBFUT
        MSG     " FILES REQUIRING "
        TYPENO  MLOOK+.RBALP
        MSG     " PAGES OF STORAGE"
        OUTSTR  CRLF

        MSG     "WRITTEN BY "
        DMOVE   A,MYNAME        ; GET PROGRAM NAME (V 3.0)
        SKIPE   MLOOK+.RBXT2    ; IF NAME ZERO, DON'T COPY IT (V 3.0)
          MOVE  A,MLOOK+.RBXT2  ; (V 3.0)
        SKIPN   MLOOK+.RBVER    ; IF VERSION ZERO, ASSUME DECOM (V 3.0)
          MOVE  A,[SIXBIT .DECOM.] ; (V 3.0)
        TYPEFN  A
        MSG     " VERSION "
        HLRZ    A,MLOOK+.RBVER
        TYPEOC  A
        MSG     <",,">
        HRRZ    A,MLOOK+.RBVER
        TYPEOC  A
        OUTSTR  CRLF
        OUTSTR  CRLF

        MSG     " FILENAME    PAGES   CREATION DATE  TIME   USERNAME"
        OUTSTR  CRLF
        OUTSTR  CRLF

DIROP:  PUSHJ   P,RDCFD
          JRST  COMAND

        PUSHJ   P,FNDFIL                ; RETRIEVE LOOKUP BLOCK

        TYPEFN  1,RLOOK+.RBNAM
        TYPENO  5,RLOOK+.RBALP
        MSG     "   "
        CREDAT  A,RLOOK
        TYPEDT  2,A             ; PRINT DAY, DATE, TIME
        TYPEUN  RLOOK+.RBPPN    ; TYPE USER NAME
        OUTSTR  CRLF

        JRST    DIROP
        SUBTTL  DELETE  ; DELETE FILES FROM DSK:

DELETE: PUSHJ   P,FNGET
        PUSHJ   P,SWGET
        PUSHJ   P,CRWAIT
        SKIPE   PPN
          ERROR 5,COMAND

        TDNE    SW,[777777,,777777]     ; CHECK FOR INVALID SWITCHES
          ERROR 0,COMAND

        PUSHJ   P,OPNUFD
          JRST  COMAND

DELNXT: PUSHJ   P,RDUFD
          JRST  COMAND

        ZERO    [IOWD LOOKSZ,FLOOK]
        MMOVEI  FLOOK,LOOKSZ-1
        MMOVE   FLOOK+.RBPPN,CURPPN
        DMOVEM  FILE,FLOOK+.RBNAM
        CLOSE   FCHAN,
        TYPEFN  1,FILE
        LOOKUP  FCHAN,FLOOK
          ERROR 6,DELNXT

        LDB     A,RB.PRV        ; GET PROTECTION
        CAIGE   A,100           ; PROTECTED AGAINST DELETE?
          JRST  GODEL
        MSG     " PROTECTED"

        IFN     <IGNPRO>,<
        MSG     <", DELETE">
        OUTCHI  7
        YES.NO  NO,DELETX>

        IFE     <IGNPRO>,<
        JRST    DELETX>

GODEL:  SETZM   FLOOK+.RBNAM
        SETZM   FLOOK+.RBEXT
        RENAME  FCHAN,FLOOK
          ERROR 6,DELETX
        SKIPA


DELETX: MSG     " ** NOT DELETED"
        OUTSTR  CRLF
        CLOSE   FCHAN,
        JRST    DELNXT

        SUBTTL  END     ; END OF PROGRAM

        END     START

;       WILLIAM R. SOLEY        AUGUST 1977
   *~(p	