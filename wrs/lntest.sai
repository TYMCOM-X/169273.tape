begin "lntest" 

require "(WRS)SAIL.DEF" source!file;
external integer !SKIP!;
integer	TestCnt,ErrCnt,I,RevXOn;
boolean !FLG!;
string S,S!;

simple string procedure cvcr(string X);
begin
    integer C;
    string S;
    S _ null;
    while length(X) do begin
	C _ lop(X);
	if C=cr or C=0 or C='177
	    then S_S&bel else S_S&C;
    end;
    return (S);
end;

integer Cnt;
print("How many tests? ");
Cnt _ cvd(inchwl);

TestCnt _ ErrCnt _ 0;
S _ null;
for I _ 32 upto 96 do S _ S & I;
auxcli(-1,'314,'64);		! turn off echo, full char set;
RevXOn _ auxclv(-1,0,'55);	! no reverse x-on;

for Cnt _ Cnt step -1 until 1 do begin
	ClrBuf;
	print(crlf,S,'33&"d");
	call(3,"SLEEP");
	S! _ null; do S! _ S! & auxclv(-1,0,1) until not !SKIP!;
	if not equ(S&cr&0,S!) then begin
	    if S!=" " then I_lop(S!);
	    print(
		cr,esc&"J",esc&"Y",
		bel,cvcr(S!),
		esc&"Z",bs,bs,esc&"J" );
	    ErrCnt _ ErrCnt + 1;
	end;
	TestCnt _ TestCnt + 1;
end;
ClrBuf;
setformat(0,2);
print(crlf,
    "Error summary:",crlf,
    "  Error count = ",ErrCnt," in ",TestCnt,crlf,
    "  Error rate = ",cvf(100.0*ErrCnt/TestCnt),"%" );
auxclv(-1,RevXOn,'55);		! restore RevXOn;

end "lntest"
$
