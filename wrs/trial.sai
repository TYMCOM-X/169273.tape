begin require "(SAILIB)SAIL.DEF" source!file;

real procedure Tryit(
	integer N1,N2;	! important ones;
	integer NK );	! number of links;
begin
    integer I, I1,I2, TOP,BOT;
    integer array LST[0:NK-1];
    if N1 > N2 then N1 swap N2;
    TOP := 0;
    BOT := 0;
    for I1 := 0 upto NK-1 do begin
	for I2 := 0 upto NK-1 do begin
	    if I1 = I2 then continue;
	    BOT := BOT + 1;
	    if ( if I1 < I2
		then I1 leq N1 and I2 = N2
		    or I1 = N1 and I2 geq N2
		else I2 leq N1 and I1 = N2
		    or I2 = N1 and I1 geq N2 ) then TOP := TOP + 1;
	end;
    end;
    return( TOP / BOT );
end;

ifcr false thenc
	real procedure Tryit(
	    integer N1,N2;	! important ones;
	    integer NK );	! number of links;
endc

real procedure TryAll(
	integer NK );
begin
    integer BOT, I1,I2;
    real P;
    P := 0.0; BOT := 0;
    for I1 := 0 upto NK-1 do begin
	for I2 := 0 upto NK-1 do begin
	    if I1 = I2 then continue;
	    P := P + Tryit( I1,I2, NK );
	    BOT := BOT + 1;
	end;
    end;
    return( P / BOT );
end;

integer NK;
real P;
setprint("TRIAL.RPT","B");
print("NK	P[1]		70%		80%		90%
");
for NK := 2 upto 24 do begin
    P := TryAll(NK);
    print( NK, #ht, P,
	#ht, if P=1 then 1.0 else log(0.3)/log(1-P),
	#ht, if P=1 then 1.0 else log(0.2)/log(1-P),
	#ht, if P=1 then 1.0 else log(0.1)/log(1-P),
	crlf );
end;

end $