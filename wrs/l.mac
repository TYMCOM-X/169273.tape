TITLE  L  This program will set (any) license on (any) job (always)

loc	137
exp	3


	PASWRD= 0	; initially - no password

	DEFLIC==GOD

WC==1B18
RC==1B19
OP==1B20
SY==1B21
GD==1B22
TD==1B23
ST==1B24
JL==1B26
AC==1B27
XC==1B28
RA==3B33
RF==2B33
RP==1B33
WA==3B35
WF==2B35
WP==1B35
GOD==WC!RC!OP!SY!GD!TD!ST!JL!AC!XC!RA!WA
LOOK==RC!SY!RA

T1=1
T2=2
T3=3
T4=4

NM1=7
NM2=10
DESLIC=11
ACCUM=12
T=13
C=14
F=15
PNTR=16
P=17

TTY==1

LICTAB==-20
JBTPRV==6
TYMEX==200

BFNM1==0
BFNM2==1
BFPSW==2
BFLIC==3

ARRAY PDL[40],BUF[1000],IBUF[3]

DEB==0



START:	TDZA	T1,T1
	SETO	T1,		;SET NEW PASSWORD FLAG.
	RESET
        MOVE P,[IOWD 40,PDL]
        INIT TTY,0
        SIXBIT /TTY/
        IBUF
        JRST GETOUT
	JUMPN	T1,GETNPS	;CCL ADDRESS, GET NEW PASSWORD.
        SETZB DESLIC,SAVCHR#
        RESCAN
        INPUT TTY,0     ;PRIME INPUT ROUTINE
        PJOB    T,
        MOVEM   T,JOBNO#

SEMLOK: PUSHJ   P,GNCH
        CAIGE   C," "
          JRST DEFALT
        CAIE    C,";"
         JRST   SEMLOK

SCNLIC: PUSHJ P,SCAN
          PUSHJ P,FNDLIC
	CAIN C,"?"
	  JRST HELPME
        CAIGE C," "
          JRST  ENDINS
        CAIN C,","
          PUSHJ P,COMMA
        JRST    SCNLIC
FNDLIC: MOVSI T,-TBLEN
        CAME ACCUM,LICABR(T)
        AOBJN T,.-1
        JUMPGE T,GETBAD         ;ERROR IF NOT FOUND
        LDB F,LICBP(T)  ;SEE WHAT CURRENT VAULUE IS
        CAMGE F,LICVAL(T)       ;IN CASE TYPES RF RP
        MOVE F,LICVAL(T)
        DPB F,LICBP(T)
        POPJ    P,
COMMA:  TLNE DESLIC,-1          ; ANYTHING IN LEFT HALF YET?
          JRST GETBAD
        MOVSS DESLIC
        POPJ P,
DEFALT: MOVEI DESLIC,DEFLIC
ENDINS: HRLZ    DESLIC
        ORM     DESLIC
	CAIE C,12 ; FOR A <LF> PROMPT, OTHERWISE ASSUME <ESC>
	  JRST NOPRMT
        OUTCHI  7
        PUSHJ P,PROMPT
NOPRMT:	SETSTS TTY,200
        INPUT TTY,0     ;NEXT LINE
        PUSHJ P,RDPAS
        MOVE T1,X
        CAME T1,PASCOD
        JRST GETBAD
NOPAS:  MOVE    2,JOBNO
        MOVE    1,[23,,23]
        GETTAB  1,
          JRST NEEDSY
        HRRZS   1
        SUBI    1,20
        PEEK    1,
        JUMPE   1,NEEDRC
        ADDI    2,(1)
        MOVE    1,DESLIC
        MOVEI   1
        MOVEM 1,VALUE#
        MOVEM 2,ADDR#
        POKE
          JRST  NEEDWC
        HRROI T,LICTAB
        HRL     T,JOBNO
        GETTAB T,
         JRST GETFIN    ;GET OUT NOW
        AND     T,DESLIC
        CAMN    T,DESLIC
          JRST  GETFIN
        OUTSTR [ASCIZ "?Did not set "]
        MOVSS   DESLIC          ; compare only process license
        MOVSS   T
        MOVSI T1,-TBLEN
        MOVEI T2,T
CHKLP:  LDB C,LICBP(T1)
        CAME C,LICVAL(T1)
        JRST NOCHK      ;DID NOT WANT THAT
        HLL T2,LICBP(T1)
        LDB C,T2
        CAME C,LICVAL(T1)
        OUTSTR LICFUL(T1)       ;DID NOT GET THAT
NOCHK:  AOBJN T1,CHKLP
GETFIN: SETSTS TTY,0
        OUTSTR [0]
        MOVEI   1
        MOVE    1,VALUE
        MOVE    2,ADDR
GETOUT: EXIT 1,
        JRST .-1

GETBAD: SETSTS TTY,0
        OUTSTR [ASCIZ "?"]
        JRST GETOUT
NEEDSY: OUTSTR  [ASCIZ "?SYstat license required"]
        JRST GETOUT
NEEDRC: OUTSTR  [ASCIZ "?Read Core license required"]
        JRST GETOUT
NEEDWC: OUTSTR  [ASCIZ "?Write Core license required"]
        JRST    GETOUT
CPOPJ1: AOS (P)
        POPJ P,

ARRAY X[5]

RDPAS:  MOVE T1,[555555555555]
        MOVEM T1,X
        MOVEM T1,X+2
        MOVEM T1,X+4
        MOVE T1,[361275431652]
        MOVEM T1,X+1
        MOVEM T1,X+3
        MOVEI T3,0
PSWLP:  PUSHJ P,GNCH
        CAIN C,12
        POPJ P,
        ADDM C,X
        ADDM C,X+3
        MOVEI T4,40
RAND:   MOVE T1,X(T3)
        MUL T1,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
        ADDM T2,X+1(T3)
        CAIE T3,3
        AOJA T3,RAND1
        MOVE T3,X+4
        ADDM T3,X
        LSH T3,-42
RAND1:  SOJG T4,RAND
        JRST PSWLP

PROMPT: HRROI T1,JBTPRV
        GETTAB T1,
         MOVEI T1,0
        TRNN T1,TYMEX
        JRST    [OUTSTR [ASCIZ /
./]
                POPJ P,]
        OUTSTR [ASCIZ /
-/]
        POPJ P,

SCAN:   PUSHJ P,GNCH
        CAIN C," "      ; IGNORE LEADING BLANKS
          JRST SCAN
        PUSHJ P,NUM     ; IF LEADING NUMBER, SCAN JOB NUMBER
          JRST SCNUM
        PUSHJ P,LET     ; IF LEADING LETTER, SCAN NAME
          JRST SCNAM
        AOS (P)         ; SKIP RETURN FOR ANYTHING ELSE
        POPJ P,
SCNAM:  SETZM ACCUM
        MOVE T,[POINT 6,ACCUM]
SCNAM1: SUBI C,40
        TLNE T,770000
        IDPB C,T
        PUSHJ P,GNCH
        PUSHJ P,LET
        JRST SCNAM1
        POPJ P,
SCNUM:  SETZ T,
        SKIPE   JOBFND#
          JRST  GETBAD
        SETOM   JOBFND
SCNUM1: IMULI T,^D10
        ADDI T,-"0"(C)
        PUSHJ P,GNCH
        PUSHJ P,NUM
        JRST SCNUM1
        MOVEM T,JOBNO
        AOS (P)
        POPJ P,
TSTJOB: MOVE    T,JOBNO
        JUMPLE  T,NOJOB
        MOVE [20,,12]   ; GET HIGHEST JOB NUMBER
        GETTAB
          JRST NEEDSY
        CAMGE T
          JRST NOJOB
        HRROI   T1,-23  ; GET OUR PPN
        GETTAB T1,
          JRST GETBAD
        HRRI T1,
        MOVEI   T2,-23  ; GET HIS PPN
        HRL T2,T
        GETTAB T2,
          JRST NEEDSY
        JUMPE T2,NOJOB
        HRRI T2,
        CAMN T1,T2      ; GAN'S MATCH?
          POPJ P,
        MOVEI T1,-22    ; GET HIS USER NAME
        HRL T1,T
        GETTAB T1,
          JRST NEEDSY
        MOVEI T2,-21
        HRL T2,T
        GETTAB T2,
          JRST GETBAD
        SETZ T3,
        MOVE T4,[POINT 6,T1]
        OUTSTR  [ASCIZ "%Warning: Job belongs to "]
TSTJB1: ILDB C,T4
        OUTCHI 40(C)
        JUMPN C,TSTJB1
        OUTSTR  [ASCIZ "
Okay to continue? "]
        OUTCHI  7       ; ring my chimes
        INCHRW  C
        OUTSTR  [BYTE(7)15,12]
        CAIN    C,"Y"
          POPJ P,
        CAIN    C,"y"
          POPJ P,
        JRST    GETBAD
NOJOB:  OUTSTR  [ASCIZ "?No such job"]
        JRST    GETOUT

NUM:    CAIL C,"0"
        CAILE C,"9"
        AOS (P)
        POPJ P,
LET:    CAIL C,"A"
        CAILE C,"Z"
        JRST NUM
        POPJ P,

GNCH:   SOSGE IBUF+2
        INPUT TTY,0
        ILDB C,IBUF+1
        JUMPE C,GNCH
	CAIN C,15	;IGNORE CR
	JRST GNCH
        CAILE C,137
        SUBI C,40       ;CONVERT TO UPPER CASE
        POPJ P,

        DEFINE LICENS
<       X GOD
	X LOOK
        X WC
        X RC
        X OP
        X SY
        X GD
        X TD
        X ST
        X JL
        X AC
        X XC
        X RP
        X RF
        X RA
        X WP
        X WF
        X WA
>
        DEFINE X(A)
<SIXBIT /A/>
LICABR: LICENS
TBLEN==.-LICABR
	DEFINE X(A)
<POINT ^L<'A&-'A>-^L<'A+1>+1,DESLIC,^L<'A&-'A>>
LICBP:  LICENS
	DEFINE X(A)
<'A_<^L<'A&-'A>-^D35>>
LICVAL: LICENS

	DEFINE X(A)
<ASCII / A/>
LICFUL: LICENS


HELPME:	OUTSTR HELPMS
	JRST GETOUT
HELPMS:	ASCIZ #
This program will set any license on any job always.
Command format is:
    .RUN L[;[<job-no>][<process-license>,][<job-license>]]<esc><password><cr>
where
    <job-no> ::= number of job to set license for
    <job-license> ::= <license> [<job-license>]
    <process-license> ::= <license> [<process-license>]
    <esc> ::= escape (in PDP-10 mode) or ^z (in TYMEX mode)
    <password> ::= the assembled in hashed pasword
    <cr> ::= carriage return
    <license> ::= GOD ! WC ! RC ! OP ! SY ! GD ! TD ! ST ! JL
	! AC ! XC ! WA ! WF ! WP ! RA ! RF ! RP
the effect of ommiting fields is
    <job-no> defaults to current job
    <job-license> defaults to zero
    <process-license> defaults to <job-license>
Note: if all fields are omitted as in
    .RUN L<esc><password><cr>
The effect will be to set god on the current job and process.
Note: if a <cr> is used in place of <esc>, the password will
be prompted for by a bell followed by the monitor prompt.

To change the password associated with the program, give the command
    .CTEST RUN L<cr>
(which starts it at START+1) and it will prompt you for the new
password.  When you are returned to the monitor, save the core image
    .SAVE L
and give it WC RC SY license.
#

;HERE TO GET NEW PASSWORD. HAVE TO TYPE IT TWICE . . .

GETNPS:	SETSTS	TTY,200		;TURN OFF ECHO
	OUTSTR	[ASCIZ/Password:/]
	PUSHJ	P,RDPAS		;GET IT
	PUSH	P,X		;SVE
	OUTSTR	[ASCIZ/
Again:/]
	PUSHJ	P,RDPAS		;MAKE SURE HE KNOWS WHAT HE'S DOING
	POP	P,T1		;GET FIRST HASH CODE
	CAME	T1,X		;OK
	JRST	[OUTSTR [ASCIZ/
Passwords do not match, try again.
/]
		 JRST GETNPS]
	MOVEM	T1,PASCOD	;OK,STORE NEW PASSWORD.
	MOVEI	START
	HRRM	120		; sure start at right place next time
	JRST	GETOUT		;BYE.

PASCOD:	PASWRD			;PLACE TO FIND HASHED PASSWORD.
END	START
  