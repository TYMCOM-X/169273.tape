begin	"TRSTAT - gather TRu STATistics from stream accounting"

require "(SAILIB)SAIL.DEF" source!file;
require "(MPL)STREAM.REQ" source!file;

string array ProgName[1:128];
long real array ProgTru[1:128];

procedure Account( integer Job );
begin
    print( "Account(",Job,") ",
	ProgName[Job]," ",S!Tru(Job)-ProgTru[Job],crlf );
end;

procedure UProc( integer array StreamRecord );
begin
    own integer Type,Job;
    Type := StreamRecord[0] lsh -27;
    Job := ldb(point( 9, StreamRecord[0], 17 ));
    if Job then case Type of begin
	['00] "RUN" begin
	    if length(ProgName[Job]) then Account(Job);
	    ProgName[Job] := cv6str(StreamRecord[5]);
	    ProgTru[Job] := S!Tru(Job);
	end;
	['40] "LOGIN" ProgName[Job] := null;
	[else] usererr(Type,2,"?UProc: unexpected type ","C")
    end;
end;

integer SM,SD,SY,SN;
SM_5; SD_1; SY_84;
S!Init;
S!BDate( SM,SD,SY );
S!IType( "RUN" );
S!IType( "LOGIN" );
S!Scan( UProc, false );

end	$
