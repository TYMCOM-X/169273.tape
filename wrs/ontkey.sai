begin	"ONTKEY"

require "(SAILIB)SAIL.DEF" source!file;
require "(WRS)AUXLIB.REQ" source!file;
require "(MPL)UUOSYM.SAI" source!file;
require 1 version;

simple string procedure GetLine(integer T(0));
begin	"GetLine"
    integer CH;
    string L;
    if T < 60 
	then T _ T * 1000
	else T _ T lor !bit(17);
    L _ null;
    do begin 
    	calli(AuxPort*!bit(8)+!hl('110)+T,calli!HIBER);
    	auxclv(AuxPort,0,!AXSIC);
    	if !SKIP! 
	    then case CH _ AuxIn land '177 of begin
		[#lf] done;
		['177] ;
		else L _ L & CH end
	    else begin !SKIP! _ false; return(L) end;
    end until !lh(AuxPort);
    !SKIP! _ true;
    if equ(L,"tc> host not responding"&#cr)
	then usererr(0,0,"?host not responding","X");
    return (L);
end	"GetLine";

procedure SendLine(string S);
begin
    integer C;
    if S[inf for 1] neq #cr then S _ S & #cr;
    while length(S) do AuxOut(lop(S));
    do C _ AuxIn land '177 until C = #lf;
end;

simple boolean procedure Index (string A,B);
begin
    integer I,X,LB;
    X _ length(A)-(LB_length(B))+1;
    for I _ 1 upto X do if equ(A[i for LB],B) then return(I);
    return(0);
end;

string procedure TryKeys (string ID; string procedure NextKey);
begin
    string KEY;
    KEY_"-not-null-";
    do begin "CREAUX"
        creaux("WRS:832;");
	if not !SKIP! then begin
	    print("%retrying CREAUX",crlf);
	    call(60,"SLEEP");
	    continue end;
	print("[CREAUX WRS:832]",crlf);
	do begin "PROMPT"
	    string S;
	    case S_GetLine(2) of begin
		["ID?"] begin
		    SendLine(ID);
		    SendLine(KEY_NextKey);
!		    print (KEY,crlf);
		end;
		["DROPPED"] done "PROMPT";
		["ACCEPTED"] done "CREAUX";
		[else]
	    end;
	end "PROMPT" until length(KEY)=0;
	AuxZap;
    end "CREAUX" until length(KEY)=0;
    AuxZap;
    return (KEY);
end;

begin	"MAIN"
    integer C,B,E;
    string ID,KEY;
    string procedure NextKey;
    begin
	string K;
	do K _ input(C,1) until E or length(K);
	return (K);
    end;
    AuxTrace _ true;
    ttyup(true);
    setbreak(1,#lf,#cr,"SINK");
    open(C_getchan,"DSK",0,4,0,40,B,E);
    print("ID: ");
    ID _ inchwl;
    do begin
	string KEYS;
	print("KEYS: ");
	KEYS _ inchwl;
	lookup(C,KEYS,E);
    end until not E;
    print("LOG: ");
    setprint(inchwl,"B");
    KEY _ TryKeys(ID,NextKey);	 
    print("ID: ",ID,crlf);
    if length(KEY) 
	then print("KEY: ",KEY,crlf)
	else print("?no key found",crlf);
end	"MAIN"
end
