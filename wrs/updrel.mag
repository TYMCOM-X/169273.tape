procedure UPD
begin

    fields
        TASKC as "5N", T as "30C",
	TASK1 as "30C", TASK2 as "30C", TASK3 as "30C", TASK4 as "30C",
	TASK5 as "30C", TASK6 as "30C", TASK7 as "30C", TASK8 as "30C",
	REL.NAME as "20C" default "DEFAULT"

    screen for "TYM425"
        abort.procedure @3
        function.separator @27
        function.length 2
        message.area 1 to 2

    frame.format LABEL.MASK
        "relation insert   delete   quit              key      previous next     data"
        %[------] [------] [------] [------]          [------] [------] [------] [------]%

    frame.format RESOURCE.MASK
%4%     "id: %%%%"
%5%	" "
%6%	"name: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
%7%	"user name: %%%%%%%%%%%%   manager: %%%%" 
%8%     "ext: %%%%   phone: %%%%%%%%%%%%"
%9%	" "
    	" "
    	" "
    	" "
    	" "
    	" "
    	" "
    	" "
    	" "
    	" "
    	" "
    	" "
    	" "
%22%	" "

    frame.format PROJ.MASK
%4%	"id: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"description:"
	"    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"remarks:"
	"    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"    %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	""
	"manager: %%%%   leader: %%%%   entered: %%%%%%"
	"priority: %%%   class: %%%%%%   cost center: %%%%%"
	""
%17%	"tasks: (task: resource hours)"
	"1: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   5: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"2: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   6: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"3: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   7: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
	"4: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   8: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
%22%	""
  	
    frame LABEL.FRAME
        from LABEL.MASK
        frame.area 24 to 24

    frame RESOURCE.FRAME
        from RESOURCE.MASK
        frame.area 4 to 22
        data.names
            RESOURCE.ID, RESOURCE.NAME,
            RESOURCE.UNAME, RESOURCE.MANAGER, 
	    RESOURCE.EXT, RESOURCE.PHONE
        field.control RESOURCE.ID help "3-4 character resource ID"
	field.control RESOURCE.NAME help "resource's full name"
	field.control RESOURCE.UNAME help "Tymnet user name"
	field.control RESOURCE.MANAGER help "manager's resource ID"
        field.control RESOURCE.EXT help "Tymshare extension"
        field.control RESOURCE.PHONE help "home telephone [###/###-####]"

    frame PROJ.FRAME
	from PROJ.MASK
	frame.area 4 to 22
	data.names
	    PROJ.ID, 
	    PROJ.DES1, PROJ.DES2, PROJ.DES3,
	    PROJ.REM1, PROJ.REM2, PROJ.REM3,
	    PROJ.MGR, PROJ.LDR, PROJ.DATE,
	    PRIORITY, CLASS, COST.CENTER,
	    TASK1, TASK5,
	    TASK2, TASK6,
	    TASK3, TASK7,
	    TASK4, TASK8
	field.control PROJ.ID help "1-12 character project ID"
	field.control PROJ.DES1 help "brief project description"
	field.control PROJ.DES2 help "brief project description"
	field.control PROJ.DES3 help "brief project description"
	field.control PROJ.REM1 help "brief remarks on project"
	field.control PROJ.REM2 help "brief remarks on project"
	field.control PROJ.REM3 help "brief remarks on project"
	field.control PROJ.MGR help "resource ID of project manager"
	field.control PROJ.LDR help "resource ID of project leader"
	field.control PRIORITY help "priority 0-99 (immediate) or 100-999 (deffered)"
	field.control PROJ.DATE help "date of entry"
	field.control CLASS help "one/more of Administrative, Capacity, Documentation, Functionality,",@cr,
		"Instruction, Maintenance, Performance, Reliability, Security"
	field.control COST.CENTER help "sponser's cost center code"
	field.control TASK1 help "taskid: resid esth/revh/acth"
	field.control TASK2 help "taskid: resid esth/revh/acth"
	field.control TASK3 help "taskid: resid esth/revh/acth"
	field.control TASK4 help "taskid: resid esth/revh/acth"
	field.control TASK5 help "taskid: resid esth/revh/acth"
	field.control TASK6 help "taskid: resid esth/revh/acth"
	field.control TASK7 help "taskid: resid esth/revh/acth"
	field.control TASK8 help "taskid: resid esth/revh/acth"

    % function keys 
	1 = relation
	2 = insert
	3 = delete
	4 = quit
	5 = key
	6 = previous
	7 = next
	8 = data
    %
	
    function.key F1 is "p"+@cr repeat REL.BLOCK
    function.key F4 is "s"+@cr finish REL.BLOCK


    % function keys for RESOURCE relation %

    function.key F2R is "q"+@cr finish RESOURCE.DATA
    function.key F3R is "r"+@cr begin
	select RESOURCE via key
	    then delete from RESOURCE via key
	    else type to message.area "?no instance to delete"
	repeat RESOURCE.DISPLAY
    end	
    function.key F5R is "t"+@cr repeat RESOURCE.BLOCK
    function.key F6R is "u"+@cr begin
	select largest RESOURCE 
	    via RESOURCE.ID < RESOURCE.ID of RESOURCE.FRAME
	    then move RESOURCE.ID to RESOURCE.ID of RESOURCE.FRAME
	    else type to message.area "?no previous instance"
	repeat RESOURCE.BLOCK
    end
    function.key F7R is "v"+@cr begin
	select smallest RESOURCE 
	    via RESOURCE.ID > RESOURCE.ID of RESOURCE.FRAME
	    then move RESOURCE.ID to RESOURCE.ID of RESOURCE.FRAME
	    else type to message.area "?no next instance"
	repeat RESOURCE.BLOCK
    end
    function.key F8R is "w"+@cr finish RESOURCE.KEY


    % function keys for PROJ relation %

    function.key F2P is "q"+@cr finish PROJ.DATA
    function.key F3P is "r"+@cr begin
	select PROJ via key
	    then begin
		delete from PROJ via key
		delete from TASK via PROJ.ID
	    end
	    else type to message.area "?no instance to delete"
	repeat PROJ.DISPLAY
    end	
    function.key F5P is "t"+@cr repeat PROJ.BLOCK
    function.key F6P is "u"+@cr begin
	select largest PROJ 
	    via (PROJ.ID < PROJ.ID of PROJ.FRAME)
	    then move PROJ.ID to PROJ.ID of PROJ.FRAME
	    else type to message.area "?no previous instance"
	repeat PROJ.BLOCK
    end
    function.key F7P is "v"+@cr begin
	select smallest PROJ 
	    via (PROJ.ID > PROJ.ID of PROJ.FRAME)
	    then move PROJ.ID to PROJ.ID of PROJ.FRAME
	    else type to message.area "?no next instance"
	repeat PROJ.BLOCK
    end
    function.key F8PK is "w"+@cr finish PROJ.KEY
    function.key F8PD is "w"+@cr finish PROJ.DATA

procedure LOAD.TASKS
begin
    move 0 to TASKC
    for each TASK via PROJ.ID begin
	add 1 to TASKC
	move
	    (TASK.ID as "4C") + ": " +
	    (RESOURCE.ID as "4C") + " " +
	    (EST.HOURS as "3C") 
	    to T
	if REV.HOURS ne default 
	    then move T + "/" + (REV.HOURS as "3C") to T
	if ACT.HOURS ne default 
	    then move T + "/" + (ACT.HOURS as "3C") to T
   	conditional on TASKC begin
	1: move T to TASK1  2: move T to task2  3: move T to TASK3
	4: move T to TASK4  5: move T to task5  6: move T to TASK6
	7: move T to TASK4  8: move T to task5  
	end
    end
    conditional on TASKC begin
	0: move default to TASK1,TASK2,TASK3,TASK4,TASK5,TASK6,TASK7,TASK8
	1: move default to TASK2,TASK3,TASK4,TASK5,TASK6,TASK7,TASK8
	2: move default to TASK3,TASK4,TASK5,TASK6,TASK7,TASK8
	3: move default to TASK4,TASK5,TASK6,TASK7,TASK8
	4: move default to TASK5,TASK6,TASK7,TASK8
	5: move default to TASK6,TASK7,TASK8
	6: move default to TASK7,TASK8
	7: move default to TASK8
	8: nothing
    end
end

procedure STORE.TASK(TASKi)
begin
    move upper.case(TASKi) to T,TASKi no echo
    move position(T," ") to TASKC
    move substr(T,1,TASKC-1) as TASK.ID to TASK.ID
    move substr(T,TASKC) to T
    while substr(T,1,1)=" " do 
	move substr(T,2) to T
    move position(T," ") to TASKC
    move substr(T,1,TASKC-1) as RESOURCE.ID to RESOURCE.ID
    move substr(T,TASKC) to T
    while substr(T,1,1)=" " do 
	move substr(T,2) to T
    move T + "/" to T
    move position(T,"/") to TASKC
    move substr(T,1,TASKC-1) as EST.HOURS to EST.HOURS 
    move substr(T,TASKC+1) to T
    move position(T,"/") to TASKC
    move substr(T,1,TASKC-1) as REV.HOURS to REV.HOURS 
    move substr(T,TASKC+1) to T
    move position(T,"/") to TASKC
    move substr(T,1,TASKC-1) as ACT.HOURS to ACT.HOURS 
    insert into TASK
end

procedure STORE.TASKS
begin
    delete from TASK via PROJ.ID
    apply STORE.TASK(TASK1)
    apply STORE.TASK(TASK2)
    apply STORE.TASK(TASK3)
    apply STORE.TASK(TASK4)
    apply STORE.TASK(TASK5)
    apply STORE.TASK(TASK6)
    apply STORE.TASK(TASK7)
    apply STORE.TASK(TASK8)
    apply LOAD.TASKS
end

    type @27,@27,"&jB"          % turn on function labels %
    REL.BLOCK: display LABEL.FRAME using F1,F4 begin
	type to message.area "relation name: "
	accept REL.NAME
	move upper.case(REL.NAME) to REL.NAME
	conditional on REL.NAME 
    	begin % conditional %

% clause of REL.BLOCK conditional %

"R" or "RES" or "RESOURCE":
RESOURCE.DISPLAY: display RESOURCE.FRAME begin
    type to message.area " "
    move default to RESOURCE.ID
    RESOURCE.BLOCK: begin
    RESOURCE.KEY: begin
	input RESOURCE.ID
	using F3R,F6R,F7R,F8R
    end
    move upper.case(RESOURCE.ID) to RESOURCE.ID
    select RESOURCE via key 
    then begin
    	type to message.area "[existing resource]"
	move RESOURCE.NAME to RESOURCE.NAME of RESOURCE.FRAME
	move RESOURCE.UNAME to RESOURCE.UNAME of RESOURCE.FRAME
	move RESOURCE.MANAGER to RESOURCE.MANAGER of RESOURCE.FRAME
	move RESOURCE.EXT to RESOURCE.EXT of RESOURCE.FRAME
	move RESOURCE.PHONE to RESOURCE.PHONE of RESOURCE.FRAME
    end
    else begin
	type to message.area "[new resource]"
	move default to RESOURCE.NAME, 
	    RESOURCE.UNAME, RESOURCE.MANAGER, 
	    RESOURCE.EXT, RESOURCE.PHONE
    end
    RESOURCE.DATA: begin 
	input RESOURCE.NAME,
	    RESOURCE.UNAME, RESOURCE.MANAGER, 
	    RESOURCE.EXT, RESOURCE.PHONE
	using F2R,F3R,F5R,F6R,F7R
    end
    end % RESOURCE.BLOCK %
    move upper.case(RESOURCE.UNAME) to RESOURCE.UNAME
    move upper.case(RESOURCE.MANAGER) to RESOURCE.MANAGER
    move substr(RESOURCE.PHONE,1,3) + "/" + substr(RESOURCE.PHONE,5,3) + "-" + substr(RESOURCE.PHONE,9,4) to RESOURCE.PHONE
    select RESOURCE via key
	then alter RESOURCE using (
	    RESOURCE.NAME of RESOURCE.FRAME for RESOURCE.NAME,
            RESOURCE.UNAME of RESOURCE.FRAME for RESOURCE.UNAME,
            RESOURCE.MANAGER of RESOURCE.FRAME for RESOURCE.MANAGER,
            RESOURCE.EXT of RESOURCE.FRAME for RESOURCE.EXT,
            RESOURCE.PHONE of RESOURCE.FRAME for RESOURCE.PHONE )
	else insert into RESOURCE
    repeat RESOURCE.DISPLAY
end % RESOURCE.DISPLAY %

% clause of REL.BLOCK conditional %

"P" or "PR" or "PRO" or "PROJ" or "PROJ":
PROJ.DISPLAY: display PROJ.FRAME begin
    type to message.area " "
    move default to PROJ.ID
    PROJ.BLOCK: begin
    PROJ.KEY: begin
	input PROJ.ID
	using F3P,F6P,F7P,F8PK
    end % .KEY %
    move upper.case(PROJ.ID) to PROJ.ID
    select PROJ via key 
    then begin
    	type to message.area "[existing project]"
	move PROJ.DES1 to PROJ.DES1 of PROJ.FRAME
	move PROJ.DES2 to PROJ.DES2 of PROJ.FRAME
	move PROJ.DES3 to PROJ.DES3 of PROJ.FRAME
	move PROJ.REM1 to PROJ.REM1 of PROJ.FRAME
	move PROJ.REM2 to PROJ.REM2 of PROJ.FRAME
	move PROJ.REM3 to PROJ.REM3 of PROJ.FRAME
	move PROJ.MGR to PROJ.MGR of PROJ.FRAME
	move PROJ.LDR to PROJ.LDR of PROJ.FRAME
	move PROJ.DATE to PROJ.DATE of PROJ.FRAME
	move PRIORITY to PRIORITY of PROJ.FRAME
	move CLASS to CLASS of PROJ.FRAME
	move COST.CENTER to COST.CENTER of PROJ.FRAME
	apply LOAD.TASKS 
    end
    else begin
	type to message.area "[new project]"
	move default to 
	    PROJ.DES1, PROJ.DES2, PROJ.DES3,
	    PROJ.REM1, PROJ.REM2, PROJ.REM3,
	    PROJ.MGR, PROJ.LDR,
	    PRIORITY, CLASS, COST.CENTER,
	    TASK1,TASK2,TASK3,TASK4,TASK5,TASK6,TASK7,TASK8
	move today to PROJ.DATE
    end
    PROJ.DATA: begin 
    	input 
	    PROJ.DES1, PROJ.DES2, PROJ.DES3,
	    PROJ.REM1, PROJ.REM2, PROJ.REM3,
	    PROJ.MGR, PROJ.LDR, PROJ.DATE,
	    PRIORITY, CLASS, COST.CENTER,
	    TASK1,TASK2,TASK3,TASK4,TASK5,TASK6,TASK7,TASK8
	using F2P,F3P,F5P,F6P,F7P,F8PD
    end
    move upper.case(PROJ.MGR) to PROJ.MGR
    move upper.case(PROJ.LDR) to PROJ.LDR
    move upper.case(CLASS) to CLASS
    select PROJ via key
    	then alter PROJ using (
	    PROJ.DES1 of PROJ.FRAME for PROJ.DES1,
	    PROJ.DES2 of PROJ.FRAME for PROJ.DES2,
	    PROJ.DES3 of PROJ.FRAME for PROJ.DES3,
	    PROJ.REM1 of PROJ.FRAME for PROJ.REM1,
	    PROJ.REM2 of PROJ.FRAME for PROJ.REM2,
	    PROJ.REM3 of PROJ.FRAME for PROJ.REM3,
	    PROJ.MGR of PROJ.FRAME for PROJ.MGR,
	    PROJ.LDR of PROJ.FRAME for PROJ.LDR,
	    PROJ.DATE of PROJ.FRAME for PROJ.DATE,
	    PRIORITY of PROJ.FRAME for PRIORITY,
	    CLASS of PROJ.FRAME for CLASS,
	    COST.CENTER of PROJ.FRAME for COST.CENTER )
	else insert into PROJ
    apply STORE.TASKS
    end % PROJ.BLOCK %
    repeat PROJ.DISPLAY
end % PROJ.DISPLAY %

	end % conditional %
	else repeat REL.BLOCK
    end % REL.BLOCK %

end % procedure %
    