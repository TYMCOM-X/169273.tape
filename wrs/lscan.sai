begin "LSCAN - look for potential license abuse"
require "(SAILIB)SAIL.DEF" source!file;
require "STREAM.REQ" source!file;
!get!definitions (ASSERT);
require 256 new!items;
require 128 buckets;

integer BT,LINEBRK;
simple procedure BTINI;
begin
    setbreak(BT_getbreak,#cr&":;"&0,null,"ZSINK");
    setbreak(LINEBRK_getbreak,#lf&#ff," "&#ht&#cr,"SINK");
end;
require BTINI initialization;

string array LOGINN[0:128];
string array TATTLE[0:128];
string array LASRUN[0:128];
integer array OPEROKAY[0:128];
integer array OPERFAIL[0:128];

procedure RECSVC (integer array REC);
begin
    integer T,I,J;
    itemvar IV;
    string S,USER;
    I _ true;
    T _ REC[0] lsh (8-35);
    J _ !lh(REC[0]) land '777;
    case T of begin
	['14] ! SETLIC; 
	    if REC[6] neq !xwd(1,4)
	    or ( REC[5] neq cvsix("OPER") and REC[5] neq cvsix("SETE") )
		then print (LOGINN[j], TATTLE[j], LASRUN[j], S!STR, crlf);
	['22] ! CREAUX; begin 
	    S _ null;
	    for I _ 6 upto 8 do S _ S& cvastr(REC[i]);
	    USER _ scan (S,BT,I);
	    IV _ cvsi (USER,I);
	    if not I then print (LOGINN[j], TATTLE[j], LASRUN[j], S!STR, crlf);
	end;
	['40] ! LOGIN;  begin 
	    LOGINN[j] _ S!STR; 
	    LASRUN[j] _ TATTLE[j] _ null;
	    OPEROKAY[j] _ OPERFAIL[j] _ 0;
	end;
	['42] ! LOGOUT; begin
	    if (OPERFAIL[j] > 2+2*OPEROKAY[j]) 
	    or (OPERFAIL[j] > 10)
	    or (OPERFAIL[j] and not OPEROKAY[j])
		then print (LOGINN[j], TATTLE[j], crlf);
	end;
	['17]
	['20] ! TATTLE; begin
	    TATTLE[j] _ TATTLE[j]& S!STR;
	    if equ("okay",TATTLE[j][inf-3 to inf])
	  	then OPEROKAY[j] _ OPEROKAY[j] +1
	  	else OPERFAIL[j] _ OPERFAIL[j] +1;
	end;
	['00] ! RUN;    LASRUN[j] _ S!STR;
	else print("?record type: '",cvos(T),crlf,"?",S!STR)
    end;
end;

integer YY,MM,DD;
string S;

S!INIT;
begin
    require "LSCAN.DIR" source!file;
    own string array GAN3[1:256];
    integer I;
    for I _ arrinfo(GAN3,1) upto arrinfo(GAN3,2) do if length(GAN3[i]) then begin
	S!XUSER (GAN3[i]);
	new!pname (new,GAN3[i]);
    end;
end;
print("enter start date MM,DD,YY: ");
S _ inchwl;
MM _ intscan(S,!SKIP!);
DD _ intscan(S,!SKIP!);
YY _ intscan(S,!SKIP!);
S!BDATE (MM,DD,YY);
S!XUSER ("OPER");		! ignore CRSHID circuits to M33;
assert (S!ITYPE ("RUN"   ));
assert (S!ITYPE ("SETLIC"));
assert (S!ITYPE ("TATTLE"));
assert (S!ITYPE ("LOGIN" ));
assert (S!ITYPE ("CREAUX"));
setprint("LSCAN.LOG","B");
S!SCAN (RECSVC,FALSE);

end $
