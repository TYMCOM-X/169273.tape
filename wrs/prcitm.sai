begin
require "(SAILIB)SAIL.DEF" source!file;

procedure PI ( string itemvar W,R );
!
	This is just a dumb procedure to illustrate the application.
	If W is not ANY, it stores datum(W) into Current!Value.
	If R is not ANY, it stores Current!Value into datum(R).
;
begin
    own string Current!Value;
    if W neq any 
	then Current!Value_ datum( W );
    if R neq any
	then datum( R )_ Current!Value;
end;

item $PI;
simple procedure $PIini;
assign( $PI, PI );				! assign procedure;
require $PIini initialization;

procedure EXAMPLE.1;
!
	Here I call the procedure items directly.  The problem with this
	is that I have to know they are procedure items and not string
	items or such.  This is shown to answer your question.  EXAMPLE.2
	is the prefered method.
;
begin
    string itemvar TMP;
    TMP_ new( "LEAP is wonderful!" );		! make up value to pass;
    apply( datum( $PI ), arg!list( TMP,any ) );	! write reference;
    datum(TMP)_ "It didn't work!";
    apply( datum( $PI ), arg!list( any,TMP ));	! read reference;
    print( datum( TMP ), crlf );
    delete( TMP );
end;

procedure EXAMPLE.2;
begin
!   
	The procedure MOV does all variable references with the 
	advantage that you don't have to know what type thay are.
;
    procedure MOV ( itemvar DST,SRC );
    begin
	string item TMP;
	own string itemvar SI;
	own integer itemvar II;
	own real itemvar RI;
	own integer BRK;
	case typeit(SRC) of begin
	    [3] "string   " datum(TMP)_ datum(SI_SRC);
	    [4] "real     " datum(TMP)_ cvf(datum(RI_SRC));
	    [5] "integer  " datum(TMP)_ cvs(datum(II_SRC));
	    [8] "procedure" apply( datum(SRC), arg!list(any,TMP) );
	    else usererr( typeit(SRC),2,"?MOV: can't coerce src type " )
	end;
	case typeit(DST) of begin
	    [3] "string   " datum(SI_DST)_ datum(TMP);
	    [4] "real     " datum(RI_DST)_ realscan(datum(TMP),BRK);
	    [5] "integer  " datum(II_DST)_ realscan(datum(TMP),BRK);
	    [8] "procedure" apply( datum(DST), arg!list(TMP,any) );
	    else usererr( typeit(DST),2,"?MOV: can't coerce dst type " )
	end;
    end;
!
	Use MOV to do same thing as EXAMPLE.1.
;
    string itemvar TMP;
    TMP_ new( "LEAP is wonderful!" );
    MOV( $PI,TMP );
    datum(TMP)_ "It didn't work!";
    MOV( TMP,$PI );
    print( datum(TMP),crlf );
    delete(TMP);
end;


EXAMPLE.1;
EXAMPLE.2;

end $
