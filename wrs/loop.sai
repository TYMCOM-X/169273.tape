begin

require "(SAILIB)SAIL.DEF" source!file;

define BIG = '377777777777;

integer C;	! cycle count;
integer X;	! result of current cycle;
integer array B[1:251];

simple procedure LinkIni;
begin
    arrclr(B,-1);
end;

define primes = {1,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251};

simple boolean procedure LinkTry;
begin ! return true if loop detected;
    integer I,J;
    for I _ primes do if I leq C then
	if C mod I = 0 then begin
	    for J _ primes do if J > I then
	    	if X = B[j] then return(true);
	    B[i] _ X;
	end;
    return(false);
end;

simple procedure LinkEnd;
begin
end;

integer P;	! period of loop;
integer D;	! delay;
boolean FLAG;	! detected flag;
integer	MIN!,MAX!;

setprint("LOOP.LOG","B");

for D _ 2 upto 300 do begin 
    print("delay = ",D,#ht);
    MIN! _ BIG; MAX! _ -BIG;
    for P _ 2 upto D do begin
	LinkIni;
	for C _ 0 upto P*D do begin
	    X _ if C < D
		then C
		else ((C-D) mod P) + D-P;
	    if FLAG _ LinkTry then begin
		if C<D then print(
		    "false detection for period = ",P,crlf,
		    "delay = ",D,#ht );
		done;
	    end;
	end "for C";
	LinkEnd;
	MIN! _ MIN! min C;
	MAX! _ MAX! max C;
    end "for P";
    print("max = ");
    if FLAG 
	then print(MAX!," "&#ht,"2D",(if MAX!=2*D then null else (if MAX!<2*D then null else "+")&cvs(MAX!-2*D)))
	else print("infinity");
    print(crlf);
end "for D";

end $
