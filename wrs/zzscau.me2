procedure NEWT
begin

    fields
        AMT as "9C",
        BUDGET.DESC as "28C",
        TDATE as date "ZMDDYY",
	ACCT2.CODE same as ACCT.CODE,
	ACCT2.NAME same as ACCT.NAME

    screen for "TYM420"
        message.area 1 to 2
        abort.procedure @3
        function.separator @27
        function.length 2

    frame.format TRANS.MASK
        "account:       [%%%%]    %%%%%%%%%%%%%%%%%%%%%%%%"
        "               [%%%%]    %%%%%%%%%%%%%%%%%%%%%%%%"
        "number:        [%%%%%%%%]"
        "date:          [%%%%%%]"
        ""
        "description:   [%%%%%%%%%%%%%%%%%%%%%%%%]"
        "vendor:        [%%%%%%%%%%%%%%%%%%%%%%%%]"
        "amount:        [%%%%%%%%%]"
        "budget:        [%%%%%]   %%%%%%%%%%%%%%%%%%%%%%%%%%%%"

    frame TRANS.FRAME from TRANS.MASK 
    frame.area 4 to 12
    data.names
        ACCT.CODE, ACCT.NAME,
	ACCT2.CODE, ACCT2.NAME,
        NUMBER,
        TDATE,
        DESC,
        VENDOR,
        AMT,
        BUDGET.ID, BUDGET.DESC

    frame.format LABEL.MASK
        "account  budget   pert     trans             key      insert   delete   quit"
	%[------] [------] [------] [------]          [------] [------] [------] [------]%

    frame LABEL.FRAME from LABEL.MASK
    frame.area 24 to 24

    function.key F1 is "p"+@cr type to message.area "not implimented"
    function.key F2 is "q"+@cr type to message.area "not implimented"
    function.key F3 is "r"+@cr type to message.area "not implimented"
    function.key F4 is "s"+@cr type to message.area "not implimented"

    function.key F5 is "t"+@cr repeat LABEL.BLOCK
    function.key F6 is "u"+@cr finish DATA.BLOCK
    function.key F7 is "v"+@cr begin
	select TRANS via key
	    then delete from TRANS via key 
	    else wait "?transaction not found [confirm]"
	repeat LABEL.BLOCK
    end
    function.key F8 is "w"+@cr finish LABEL.BLOCK

    type @27,@27,"&jB"
    TRANS.BLOCK: display TRANS.FRAME 
     LABEL.BLOCK: display LABEL.FRAME 
     using F1,F2,F3,F4,F8
      begin
	type to message.area " "
	move default to ACCT.CODE,ACCT2.CODE,NUMBER,TDATE 
        input ACCT.CODE,ACCT2.CODE,NUMBER,TDATE
        move upper.case(ACCT.CODE) to ACCT.CODE
        move upper.case(ACCT2.CODE) to ACCT2.CODE
        move upper.case(NUMBER) to NUMBER
        move TDATE to TRAN.DATE
        ACCOUNT.BLOCK: select ACCOUNT via key
            then move ACCT.NAME to ACCT.NAME of TRANS.FRAME
            else begin
                type to message.area "non-existant ACCT.CODE"
                input ACCT.CODE
                move upper.case(ACCT.CODE) to ACCT.CODE
                repeat ACCOUNT.BLOCK
            end
	ACCOUNT2.BLOCK: if length(ACCT2.CODE)>0 then 
	  select ACCOUNT via (ACCT.CODE=ACCT2.CODE)
            then begin
		move ACCT.NAME to ACCT2.NAME of TRANS.FRAME
		move "xfer "+trim(ACCT.CODE of TRANS.FRAME)+
		    " to "+ACCT2.CODE to DESC
		move ACCT.NAME of TRANS.FRAME to VENDOR
		move "MISC" to BUDGET.ID
		select TRANS via key then begin
		    wait '"buddy" transaction already exists [confirm]'
		    move default to ACCT2.CODE,ACCT2.NAME
		end
	    end
            else begin
                type to message.area "non-existant ACCT.CODE"
                input ACCT2.CODE
                move upper.case(ACCT2.CODE) to ACCT2.CODE
                repeat ACCOUNT2.BLOCK
            end

        select TRANS via key
            then begin
                type to message.area "[existing transaction]"
                move DESC to DESC of TRANS.FRAME
                move VENDOR to VENDOR of TRANS.FRAME
                move AMOUNT as AMT to AMT
                move BUDGET.ID to BUDGET.ID of TRANS.FRAME
                select BUDGET.TAB via key
                    then move trim(BUDGET.GROUP)+"; "+BUDGET.ITEM
                        to BUDGET.DESC
            end
	DATA.BLOCK: if length(ACCT2.CODE)>0 
	    then input AMT,BUDGET.ID
	    else input DESC,VENDOR,AMT,BUDGET.ID using F5,F6,F7
	move AMT as AMOUNT to AMOUNT of procedure
	move AMOUNT of procedure as AMT to AMT
        move upper.case(BUDGET.ID) to BUDGET.ID
        BUDGET.BLOCK: select BUDGET.TAB via key
            then move trim(BUDGET.GROUP)+"; "+BUDGET.ITEM to BUDGET.DESC
            else begin
                type to message.area "non-existant BUDGET.ID"
                input BUDGET.ID
                move upper.case(BUDGET.ID) to BUDGET.ID
                repeat BUDGET.BLOCK
            end
        select TRANS via key
            then alter TRANS using (
                DESC of TRANS.FRAME for DESC,
                VENDOR of TRANS.FRAME for VENDOR,
                AMOUNT of procedure for AMOUNT,
                BUDGET.ID of TRANS.FRAME for BUDGET.ID )
            else insert into TRANS 
	if length(ACCT2.CODE)>0 then 
	    select TRANS via (ACCT.CODE=ACCT2.CODE,TRAN.DATE,NUMBER)
		then wait "?existing ACCT2 TRANS instance ignorred [confirm]"
		else insert into TRANS using (
		    ACCT2.CODE for ACCT.CODE,
		    -AMOUNT of procedure for AMOUNT )
        type to message.area " "
        repeat TRANS.BLOCK
    end

end
