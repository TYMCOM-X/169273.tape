!! title Module Util ;
! *************************************************************************
************************************+**************************************
*                                                                         *
*                                                                         *
*                                 Util                                    *
*                                                                         *
*                                                                         *
************************************+**************************************


		 Last Modified: 7-November-82 22:56 (kmd)


	A set of generally usable procedures and functions which should
	be maintained independently.


**************************************************************************;


  redefine
    $F.ASCII         = '0,
    $F.ASCII.LINE    = '1,
    $F.KATAKANA      = '2,
    $F.IMAGE         = '10,
    $F.IMAGE.BINARY  = '13,
    $F.BINARY        = '14,
    $F.DUMP.RECORDS  = '16,
    $F.DUMP          = '17;

      ! Tymcom-X Data Modes - borrowed from Files.Da;



! ************************************************************************;
!! title Rtn Suppress.Echo ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			     Rtn Suppress.Echo				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Suppress echo-on-input to the terminal.


==========================================================================;


  simple procedure Suppress.Echo;
  begin "Suppress.Echo"
    start!code
      hrroi	1,'64;
      auxcal	1, '200;
    end;
  end "Suppress.Echo";


! ===================================+=====================================
==========================================================================;
!! title Rtn Restore.Echo ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			     Rtn Restore.Echo				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Restore echo-on-input to the terminal.


==========================================================================;


  simple procedure Restore.Echo;
  begin "Restore.Echo"
    start!code
      hrroi	1, '64;
      auxcal	1, 0;
    end;
  end "Restore.Echo";


! ===================================+=====================================
==========================================================================;
!! title Rtn Prompt.User ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                            Rtn Prompt.User                              =
=                                                                         =
=                                                                         =
====================================+======================================


	Prompt the terminal for a file name, and return the string
	provided.  If Silently is set, then suppress echo.

	Note that, irrespective of Silently, the prompt will end
	with a newline.


==========================================================================;


  simple string procedure Prompt.User (string Prompt;
      boolean Silently(false));

  begin "Prompt.User"
    string
      Str;


    print(Prompt);

    if (Silently) then
      Suppress.Echo;

    Str _ inchwl;

    if (Silently) then
    begin
      Restore.Echo;
      print(crlf);
    end;

    return(Str);
  end "Prompt.User";


! ==================================+======================================
==========================================================================;
!! title Rtn Substr ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=				Rtn Substr				  =
=                                                                         =
=                                                                         =
====================================+======================================


	Return true if, regardless of case, one string is a left-
	substring of the other (with a length >= Min.Len).


==========================================================================;


  simple boolean procedure Substr (string Str1, Str2;
      integer Min.Len(0));

  begin "Substr"
    return(length(Str1) and length(Str2) and
	kequ(Str1[1 for (length(Str2) max Min.Len)],
	Str2[1 for (length(Str1) max Min.Len)]));
  end "Substr";


! ==================================+======================================
==========================================================================;
!! title Rtn Starts.With ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=				Rtn Starts.With				  =
=                                                                         =
=                                                                         =
====================================+======================================


	Return true if, regardless of case, Str2 string is a left-
	substring of Str1.


==========================================================================;


  simple boolean procedure Starts.With (string Str1, Str2);
  begin "Starts.With"
    return(length(Str1) and length(Str2) and
	kequ(Str1[1 for length(Str2)], Str2));
  end "Starts.With";


! ==================================+======================================
==========================================================================;
!! title Rtn Scan.Token ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=			      Rtn Scan.Token				  =
=                                                                         =
=                                                                         =
====================================+======================================


	Note:  An analogue of this routine (named Input.Token()) resides
	in FILES.DA.


	! <<  What about returning Brk?


==========================================================================;


  string procedure Scan.Token (reference string Str);
  begin "Scan.Token"
    string
      TmpStr;
    integer
      Tok.Tbl,
      Brk;


    setbreak(Tok.Tbl  _ getbreak, (crlf & sp & ht), (crlf & sp & ht), "ISNT");
    TmpStr _ scan(Str, Tok.Tbl, Brk);
    relbreak(Tok.Tbl);
    return(TmpStr);
  end "Scan.Token";


! ==================================+======================================
==========================================================================;
!! title Rtn Is.Numeric ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                             Rtn Is.Numeric                              =
=                                                                         =
=                                                                         =
====================================+======================================


	! <<  Does not support floating-point numbers.


==========================================================================;


  simple boolean procedure Is.Numeric (string Str);
  begin "Is.Numeric"
    integer 
      Num.Tbl,
      Brk;
    boolean
      Bool;


    setbreak(Num.Tbl  _ getbreak, "0123456789", null, "XNR");
    Bool _ (length(Str) and
	length(Str) = length(scan(Str, Num.Tbl, Brk)));
    relbreak(Num.Tbl);
    return(Bool);
  end "Is.Numeric";


! ==================================+======================================
==========================================================================;
!! title Rtn Clean ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                               Rtn Clean                                 =
=                                                                         =
=                                                                         =
====================================+======================================


	Returns a copy of the argument string with leading and trailing
	control characters removed.


==========================================================================;


  simple string procedure Clean (string Str);
  begin "Clean"
    own integer
      I,
      J;


    for I _ 1 step 1 until length(Str) do
      if (Str[I for 1] > sp) then
	done;

    for J _ length(Str) step -1 until 1 do
      if (Str[J for 1] > sp) then
	return(Str[I to J]);

    return(null);
  end "Clean";


! ==================================+======================================
==========================================================================;
!! title Rtn GetTab ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=				Rtn GetTab				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


==========================================================================;


  simple integer procedure GetTab (integer Index, Table);
  begin "GetTab"
    own integer
      Val;


    start!code
      move	1, Table;
      hrl	1, Index;
      setom	!skip!;
      calli	1, '41;
       setzm	!skip!;
      movem	1, Val;
    end;

    return(Val);
  end "GetTab";


! ===================================+=====================================
==========================================================================;
!! title Rtn Logged.In.User.Name ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			  Rtn Logged.In.User.Name			  =
=                                                                         =
=                                                                         =
=====================================+=====================================


==========================================================================;


  simple string procedure Logged.In.User.Name;
  begin "Logged.In.User.Name"
    return(cv6str(GetTab(-1, -'22)) & cv6str(GetTab(-1, -'21)));
  end "Logged.In.User.Name";


! ===================================+=====================================
==========================================================================;
!! title Rtn Gfd.User.Name ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			     Rtn Gfd.User.Name				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


==========================================================================;


  simple string procedure Gfd.User.Name;
  begin "Gfd.User.Name"
    own integer array
      LkB [0:30];
    own integer
      Chan;


    LkB[0] _ 30;
    LkB[1] _ xwd(1, 1);
    LkB[3] _ cvsix("UFD");
    LkB[2] _ GetTab(-1, 2);

    open(Chan _ getchan, "DSK", $F.ASCII, 0, 0, 0, 0, 0);
    chnior(Chan, LkB[0], 4);

    release(Chan);
    return(cv6str(LkB['27]) & cv6str(LkB['30]));
  end "Gfd.User.Name";


! ===================================+=====================================
==========================================================================;

! **********************************+**************************************
**************************************************************************;
 