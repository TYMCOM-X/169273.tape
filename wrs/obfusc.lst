Message 37 (15130 chars): New
Received: from tymix.Tymnet by B39.Tymnet; Thu, 1 Oct 87 15:13:30 PDT
Received: by tymix.Tymnet (5.51/4.7) id AA23318; Thu, 1 Oct 87 14:29:16 PDT
Received: from tymix.Tymnet by hobbes.Tymnet.com (3.2/SMI-3.2) id AA20502; Thu,
	1 Oct 87 14:29:12 PDT
Received: by tymix.Tymnet (5.51/4.7) id AA23314; Thu, 1 Oct 87 14:29:04 PDT
Return-path: <feldman@tymix> 
From: feldman@tymix (Steve Feldman) 
Date: Thu, 1 Oct 87 14:29:04 PDT 
To: wrs@tymix 
Message-id: <8710012129.AA23314@tymix.Tymnet> 
Subject: "1987 International Obfuscated"... 



          1987 International Obfuscated C Code Contest Winners


Obfuscate:  tr.v.  -cated, -cating, -cates.  1. a.  To render obscure.
	b.  To darken.  2. To confuse:  his emotions obfuscated his
	judgement.  [LLat. obfuscare, to darken : ob(intensive) +
	Lat. fuscare, to darken < fuscus, dark.] -obfuscation n.
	obfuscatory adj.

We recommend that you first try to understand the program from just
reading the source and the comments above each entry.  Then you should
try running the program.  If you are still confused, try sending the
source through the C Preprocessor, or a good C beautifier, unlike the
BSD indent(1) program which dumped core processing some of the
entries.  Lastly, you might look at the clues given at the end of this
article.  Happy pondering.

Some categorizations are appropriately obfuscatory.

UTS (System V for Amdahl mainframes) lint is a stronger version of the
standard System V lint; it even works!  BSD lint was performed on a
Symmetric S/375.  In some cases, the lint library of standard
functions was ignored to avoid problems with conflicts between BSD and
System V.  Assume entries did not pass lint unless stated otherwise.

============================================================

Best Obfuscator of Programs

	Paul Heckbert
	...!ucbvax!pixar!ph
	Pixar
	System(s): vax 780, unix 4.3bsd

On SysV systems, compile with: -Dindex=strchr.
To compile on a 16 bit machine, change 300000's to 30000.
Passes BSD lint.

------------------------------------------------------------
#include <ctype.h>
#include <stdio.h>
#define _ define
#_ A putchar
#_ B return
#_ C index
char*r,c[300001],*d=">=<=!===||&&->++-->><<",*i,*l,*j,*m,*k,*n,*h,*y;e,u=1,v,w,
f=1,p,s,x;main(a,b)char**b;{p=a>1?atoi(b[1]):79;r=c+read(0,j=l=i=c,300000);v=g(
j,&m);for(k=m;v!=2;j=k,m=n,v=w,k=m){w=g(k,&n);if(v==1&&m-j==1&&*j==35)e&&A(10),
e=f=0;if(!f&&v==3&&(char*)C(j,10)<m)A(10),e=0,f=1;else if(v>2&&(u||w)&&(f||u)&&
(l-i>1||*i!=61||n-k>1||!C("-*&",*k)))continue;else if(v==3)if(f&&e+1+n-k>p&&e)A
(10),e=0;else A(32),e++;else{if(f&&e+m-j>p&&e)A(10),e=0;e+=m-j;k=j;while(k<m)A(
*k++);}i=j;l=m;u=v;}e&&A(10);}g(j,m)char*j,**m;{if(j>=r)B*m=j,2;s=isdigit(*j)||
*j==46&&isdigit(j[1]);for(h=j;h<r;h++)if(!isalnum(*h)&&*h!=95&&(!s||*h!=46)&&(!
s||h[-1]!=101&&h[-1]!=69||!C("+-",*h)))break;if(h>j)B*m=h,0;x=1;for(h=j;h<r&&C(
" \t\n",*h);h++);if(h>j)h--,x=3;if(*j==34||*j==39)for(h=j+1;h<r&&*h!=*j;h++)if(
*h==92)h++;for(y=d;*y&&strncmp(y,j,2);y+=2);if(*y)h=j+1;if(!strncmp("/*",j,2)){
h=j+2;while(*++h!=42||*++h!=47);x=4;}*m=h+1;B x;}
============================================================

Most Useful Obfuscation

	Larry Wall
	...!{allegra,burdvax,cbosgd,ihnp4}!sdcrdcf!lwall
	Unisys - System Development Group Santa Monica
	9132 Kester Ave
	Panorama City, CA  91402  USA
	System(s): 4.2bsd Vax 11/780, Sun 2/120

The last 13 lines should be joined into one single line.
Passes BSD and UTS lint.

------------------------------------------------------------
#define iv 4 
#define v ;(void
#define XI(xi)int xi[iv*'V'];
#define L(c,l,i)c(){d(l);m(i);}
#include <stdio.h>
int*cc,c,i,ix='\t',exit(),X='\n'*'\d';XI(VI)XI(xi)extern(*vi[])(),(*
signal())();char*V,cm,D['x'],M='\n',I,*gets();L(MV,V,(c+='d',ix))m(x){v)
signal(X/'I',vi[x]);}d(x)char*x;{v)write(i,x,i);}L(MC,V,M+I)xv(){c>=i?m(
c/M/M+M):(d(&M),m(cm));}L(mi,V+cm,M)L(md,V,M)MM(){c=c*M%X;V-=cm;m(ix);}
LXX(){gets(D)||(vi[iv])();c=atoi(D);while(c>=X){c-=X;d("m");}V="ivxlcdm"
+iv;m(ix);}LV(){c-=c;while((i=cc[*D=getchar()])>-I)i?(c?(c<i&&l(-c-c,
"%d"),l(i,"+%d")):l(i,"(%d")):(c&&l(M,")"),l(*D,"%c")),c=i;c&&l(X,")"),l
(-i,"%c");m(iv-!(i&I));}L(ml,V,'\f')li(){m(cm+!isatty(i=I));}ii(){m(c=cm
=++I)v)pipe(VI);cc=xi+cm++;for(V="jWYmDEnX";*V;V++)xi[*V^' ']=c,xi[*V++]
=c,c*=M,xi[*V^' ']=xi[*V]=c>>I;cc[-I]-=ix v)close(*VI);cc[M]-=M;}main(){
(*vi)();for(;v)write(VI[I],V,M));}l(xl,lx)char*lx;{v)printf(lx,xl)v)
fflush(stdout);}L(xx,V+I,(c-=X/cm,ix))int(*vi[])()={ii,li,LXX,LV,exit,l,
d,l,d,xv,MM,md,MC,ml,MV,xx,xx,xx,xx,MV,mi};
============================================================

Best Layout

	Brian Westley (aka Merlyn Leroy on usenet)
	...!rutgers!dayton!rosevax!rose3!starfire!merlyn
	Starfire Consulting
	1121 Hamline Ave. N. #17
	St. Paul, MN  55108  USA
	System(s): Sys V rel 2 & variant of Sys III

Putchar must exist in the C library and not just as a macro.
If it fails to compile, add the line:  #include <stdio.h>  at the
top of the program.
Passed BSD lint (probably due to a bug in BSD lint).

------------------------------------------------------------
				char rahc
				   [ ]
				    =
				  "\n/"
				    ,
				redivider
				   [ ]
				    =
		       "Able was I ere I saw elbA"
				    ,
				    *
			     deliver,reviled
				    =
				   1+1
				    ,
			       niam ; main
				   ( )
				  {/*\}
				   \*/
				 int tni
				    =
				   0x0
				    ,
			     rahctup,putchar
				   ( )
		           ,LACEDx0 = 0xDECAL,
				rof ; for
			     (;(int) (tni);)
			       (int) (tni)
			  = reviled ; deliver =
				redivider
				    ;
for ((int)(tni)++,++reviled;reviled* *deliver;deliver++,++(int)(tni)) rof
			            =
			     (int) -1- (tni)
		          ;reviled--;--deliver;
			     (tni)  =  (int)
			  - 0xDECAL + LACEDx0 -
				rof ; for
       (reviled--,(int)--(tni);(int) (tni);(int)--(tni),--deliver)
			    rahctup = putchar
			   (reviled* *deliver)
				    ;
			    rahctup * putchar
			    ((char) * (rahc))
				    ;
				   /*\
				  {\*/}
============================================================

Best One Liner

	David Korn
	...!ihnp4!ulysses!dgk
	AT&T Bell Labs
	MH 3C-526B, AT&T Bell Labs
	Murray Hill, NJ  07974  USA
	System(s):  UN*X

Passes BSD and UTS lint.

------------------------------------------------------------
	main() { printf(&unix["\021%six\012\0"],(unix)["have"]+"fun"-0x60);}
============================================================

Best Abuse Of The Rules

	Mark Biggar
	...!sdcrdcf!markb
	UNiSYS - System Development Group, Santa Monica
	2525 Colorado AV MD 91-01
	Santa Monica, CA 90406
	Generic UNIX

Compile with:
	cc -DC="R>0" -DI="if(T)O" -DO="c=write(1,&c,1);" -DP="main(){X}"\
	-DR="read(0,&c,1)" -DT="c!=015" -DW="while(C)I" -DX="char c;W" markb.c

Passes BSD and UTS lint.  At least one version of lint is thrown into
an infinite loop by this entry.

------------------------------------------------------------
P;
============================================================

Worst Style

	Spencer Hines
	avalon@grebyn.com, ...!seismo!decuac!grebyn!avalon
	OnLine Computer Systems
	4200 Farragut Street
	Hyattsville, MD  20781  USA
	System(s):  BSD 4.3, Microsoft C 4.0

------------------------------------------------------------
#include <stdio.h>
#include <malloc.h>
main(togo,toog)
int togo;
char *toog[];
{char *ogto,   tgoo[80];FILE  *ogot;  int    oogt=0, ootg,  otog=79,
ottg=1;if (    togo==  ottg)   goto   gogo;  goto    goog;  ggot:
if (   fgets(  tgoo,   otog,   ogot)) goto   gtgo;   goto   gott;
gtot:  exit(); ogtg: ++oogt;   goto   ogoo;  togg:   if (   ootg > 0)
goto   oggt;   goto    ggot;   ogog:  if (  !ogot)   goto   gogo;
goto   ggto;   gtto:   printf( "%d    goto   \'s\n", oogt); goto
gtot;  oggt:   if (   !memcmp( ogto, "goto", 4))     goto   otgg;
goto   gooo;   gogo:   exit(   ottg); tggo:  ootg=   strlen(tgoo);
goto   tgog;   oogo: --ootg;   goto   togg;  gooo: ++ogto;  goto
oogo;  gott:   fclose( ogot);  goto   gtto;  otgg:   ogto=  ogto +3;
goto   ogtg;   tgog:   ootg-=4;goto   togg;  gtgo:   ogto=  tgoo;
goto   tggo;   ogoo:   ootg-=3;goto   gooo;  goog:   ogot=  fopen(
toog[  ottg],  "r");   goto    ogog;  ggto:  ogto=   tgoo;  goto
ggot;}
============================================================

Grand Prize for Most Well Rounded Confusion

	Roemer B. Lievaart
	rblieva@cs.vu.nl, ...!seismo!mcvax!botter!rblieva
	VU Informatica
	Churchilllaan 173-IV
	Amsterdam, The Netherlands
	System(s):  Unix 4.1BSD

Passes BSD lint.

------------------------------------------------------------
#define D define
#D Y return
#D R for
#D e while
#D I printf
#D l int
#D C y=v+111;H(x,v)*y++= *x
#D H(a,b)R(a=b+11;a<b+89;a++)
#D s(a)t=scanf("%d",&a)
l V[1100],u,r[]={-1,-11,-10,-9,1,11,10,9},h[]={11,18,81,88},ih[]={22,27,72,77},
bz,lv=60,*x,*y,m,t;S(d,v,f,a,b)l*v;{l c=0,*n=v+100,bw=d<u-1?a:-9000,w,z,i,zb,q=
3-f;if(d>u){R(w=i=0;i<4;i++)w+=(m=v[h[i]])==f?300:m==q?-300:(t=v[ih[i]])==f?-50
:t==q?50:0;return w;}H(z,0){if(GZ(v,z,f,100)){c++;w= -S(d+1,n,q,-b,-bw);if(w>bw
){zb=z;bw=w;if(w>=b||w>=8003)Y w;}}}if(!c){bz=0;C;Y-S(d+1,n,q,-b,-bw);}bz=zb;Y
d>=u-1?bw+(c<<3):bw;}main(){R(;t<1100;t+=100)R(m=0;m<100;m++)V[t+m]=m<11||m>88
||(m+1)%10<2?3:0;V[44]=V[55]=1;V[45]=V[54]=2;I("Level:");s(u);e(lv>0){do{I("Yo\
u:");s(m);}e(!GZ(V,m,2,0)&&m!=99);if(m!=99)lv--;if(lv<15&&u<10)u+=2;I("Wait\n")
;I("Value:%d\n",S(0,V,1,-9000,9000));I("move: %d\n",(lv-=GZ(V,bz,1,0),bz));}}GZ
(v,z,f,o)l*v;{l*j,q=3-f,g=0,i,h,*k=v+z;if(*k==0)R(i=7;i>=0;i--){j=k+(h=r[i]);e(
*j==q)j+=h;if(*j==f&&j-h!=k){if(!g){g=1;C;}e(j!=k)*((j-=h)+o)=f;}}Y g;}
============================================================

Judges' Hints and Comments:

Note:  Programs are given names taken from the Author's login,
       and assumed to be compiled in the standard way.  See comments
       above each entry for special compilation instructions.

------------------------------------------------------------

Paul Heckbert <pixar!ph>: Best Obfuscator of Programs

Try: ph 40 < ph.c > foo.c; cc foo.c -o ph
     ph 20 < a_C_prog.c > bar.c; cc bar.c

Read and compile foo.c.  We used this program to help us examine contest
entries that caused BSD's fold(1) program to choke.  Thank you Paul,
I have added your program to our obfuscated C contest tool set.

------------------------------------------------------------

Larry Wall <sdcrdcf!lwall>:  Most Useful Obfuscation

Try:	lwall | bc | lwall
input:	x*x
input:	c^2

Also try:  lwall | bc   and   lwall | cat

For a good time, try to understand why Larry calls the signal routine
in this program.  Larry gives some credit to his brother-in-law, Mark Biggar,
for this crazy use of signals.

------------------------------------------------------------

Brian Westley <starfire!merlyn>:  Best Layout

Line by line symmetry performed better than any C beautifier.
Think of if it as a C Ink blot.  :-)

------------------------------------------------------------

David Korn <ulysses!dgk>:  Best One Liner

Compile on a UN*X system, or at least using a C implementation
that fakes it.  This program may not be valid under the proposed
ANSI C standard.  See if your can understand what is does before you
run the program.

Landon interviewed someone who claimed to be a hot C programmer.  After 
reviewing this little program, the person cooled his reputation a bit.  :-)

FYI: David Korn's /bin/ksh provides us with a greatly improved version of 
the /bin/sh.  The source for v7's /bin/sh greatly inspired this contest.

------------------------------------------------------------
Mark Biggar <sdcrdcf!markb>:  Best Abuse of the Rules

Try:  ... | markb | od -c	(remember to compile as indicated above)

By changing the compile line you can make this program do anything you
want.  This is a very efficient way to transfer source, though it
increases the size of Makefiles.

With only slight variations, this program can be set to many uses.
Consider how easy it would be to release Un*x source in this form;
so what if the make files increase a bit!  :-) 

One vendor's lint got hung in an infinite loop over this entry!

FYI:  We will let Mark get away with this truely sick entry this time, but 
      in the future on we have placed a limit on the size of a compile line.

Also see our comment on Larry Wall's entry.

------------------------------------------------------------

Spencer Hines <grebyn!avalon>:  Worst Style

Try:  avalon avalon.c

Specifically designed to maximize the bother function for structured
programmers.  This program takes goto statements to their logical
conclusion.  The layout and choice of names are classic.

We consider this to be a beautiful counter-example for Frank Rubin's
letter to ACM form titled: `` "GOTO Considered Harmful" Considered Harmful ''.
See the Communications of the ACM, March 1987, Page 195-196.

------------------------------------------------------------

Roemer B. Lievaart <botter!rblieva>:  Grand Prize

Sample session (user input surrounded by angle brackets `<' and `>'):

	Level:<2>		(value from 0 to 10)
	You:<34>		(value from 11 to 88)
	Wait
	Value:-16
	move:33
	You:<43>
	Wait
	Value:-32
	move:35
	You:<36>
	Wait
	Value:16
	move:64
	You:<65>
	Wait
	Value:0
	move:37
	...

Continue as needed, if you get stuck, try 99.

In case your are really stuck, rot13 the following from the Author.
That is, pass it thru:  tr 'a-zA-Z' 'n-za-mN-ZA-M'   -or on some systems-
                        tr '[a-zA-Z]' '[n-za-mN-ZA-M]'

Guvf Cynlf gur tnzr bs erirefv! (Bguryyb.) Pbzcvyr naq eha. Vg gura nfxf
sbe n cynlvat yriry. Ragre 0-10 (rnfl-uneq). Vg gura nfxf sbe lbhe
zbir. N zbir vf n ahzore jvguva 11-88, be n 99 gb cnff. Vyyrtny zbirf
(rkprcg sbe na vyyrtny cnff) ner erwrpgrq. Gura gur pbzchgre qbrf vgf
zbir (be n 0 gb cnff), hagvy gur obneq vf shyy. Vg cynlf engure tbbq,
sbe fhpu n fznyy cebtenz! V unq gb yrnir bhg gur obneq-cevagvat ebhgvar, 
fb lbh'yy unir gb gnxr n erny-tnzr obneq gb cynl vg. ...
Nyfb qhr gb fcnpr-yvzvgngvbaf, V gbbx bhg gur cnffvat-unaqyre,
juvpu znxrf vgf raqvat-tnzr engure cbbe. Ohg shegure vg xabjf nyy
gur ehyrf, hfrf nycun-orgn-cehavat, naq vg cynlf s.v. ba zbovyvgl(!).
Zbfg vzcbegnag: vg pna cynl n cerggl tbbq tnzr bs Erirefv!

This program is confusing in what it looks like, what is does and how
it does it.  This is yet another winner from The Netherlands!

============================================================

Thank you to all persons who entered the contest.  We hope you will try
again next year.

This years winning programs will be published in the Micro/Systems Journal
and perhaps in an up coming book.  See ...!seismo!nbs-amrf!libes for
details about the Journal.


Landon Curt Noll	seismo!amdahl!chongo
Larry Bassel		{hplabs,amdahl!unixprt}!oblio!lab
   