begin

require "(SAILIB)SAIL.DEF" source!file;
require "(WRS)AUXLIB.REQ" source!file;
require "(WRS)MAILIB.REQ" source!file;
!get!module(APPEND);

define XRAY!password = {"sexy tool;"};

string array KHOSTS[1:1000];
simple procedure KHOSTSini;
begin
    integer C,B,E,I,CRLFbreak;
    setbreak(CRLFbreak_getbreak,#lf&#ff,#cr,"SINK");
    open(C_getchan,"DSK",0,4,0,64,B,E);
    lookup(C,"XMON.KH",E);
    if E then usererr( E,2,"?no file XMON.KH: ","X" );
    for I := arrinfo(KHOSTS,1) upto arrinfo(KHOSTS,2) do begin
	if E then done;
	KHOSTS[i] := input(C,CRLFbreak);
	if length(KHOSTS[i]) = 0 then I := I - 1;
    end;
    release(C);
end;
require KHOSTSini initialization;

integer SemiBreak;
simple procedure BreakIni;
begin
    setbreak(SemiBreak_getbreak,";",null,"AI");
end;
require BreakIni initialization;

integer C;			! output channel;

define MS!DAY = 86400000;

simple integer procedure MS;
begin
    own integer THIS,LAST;
    LAST := THIS;
    THIS := calli(0,'23);
    return( if LAST > THIS then MS!DAY+THIS-LAST else THIS-LAST );
end;

integer array BuildTime[1:20];

integer procedure Connect( string LOGSTR );
begin
    string TXT,S,LS;
    integer B,N;
    simple string procedure LOGSTS;
    begin
	string STS;
	STS := LOGSTR[1 to inf-length(LS)-length(S)]
	    &  "<"
	    &  S
	    &  ">"
	    &  LS;
	return( STS& (#ht&#ht&#ht&#ht)[length(STS)%8+1 to inf] );
    end;
    LS := LOGSTR;
    ArrClr( BuildTime );
    MS;
    N := 1;
    S := scan( LS, SemiBreak, B );
    Creaux( S, true );
    if not !SKIP! then begin
	cprint( C, LOGSTS, auxError, crlf );
	return( n );
    end;
    BuildTime[n] := MS;    
    while true do case AuxRead( TXT, 30, 25 ) of begin
	[aux!zap] begin
	    cprint( C, LOGSTS, " lost circuit"& crlf );
	    return( n );
	end;
	[aux!timeout] begin
	    cprint( C, LOGSTS, " time out"& crlf );
	    return( n );
	end;
	[aux!prompt] begin
	    cprint( C, LOGSTS, " prompt """,TXT,""""& crlf );
	    return( n );
	end;
	[aux!line] begin
	    while length(TXT) and TXT < " " do lop(TXT);
	    if equ(TXT[1 to 14],"inter-link est") then begin
		S := scan( LS, SemiBreak, B );
		AuxOut( S );
		AuxOut( XRAY!password );
		BuildTime[n] := MS;
		N := N + 1;
	    end
	    else if equ(TXT[1 to 14],"please log in:") then MS
	    else if equ(TXT[1 to 9],"**X-RAY**") then begin
		BuildTime[n] := MS;
		AuxSync( ">" );
		S := null;
		cprint( C, LOGSTS );
		return( 0 );
	    end
	    else if length(TXT) then begin
		cprint( C, LOGSTS, TXT );
		return( n );
	    end;
	end
    end;
end;

procedure Measure;
begin
    integer MSmax, MSave, I;
    MSmax := MSave := 0;
    for I := 1 upto 100 do begin
	MS;
	AuxOut( #cr );
	if AuxSync( ">", 20 )
	    then begin
		integer !!;
		!! := MS;
		MSmax := MSmax max !!;
		MSave := MSave + !!;
	    end
	    else begin
		cprint( C, "lost circuit to X-RAY"& crlf );
		return;
	    end;
    end;
    cprint( C, "build= " );
    I := 1;
    while BuildTime[i] do begin
	cprint( C, BuildTime[i], " " );
	I := I + 1;
    end;
    cprint( C, "resp= ", MSave%100, " (ave) ", MSmax, " (max)"& crlf );
end;

begin	"MAIN"
    integer I,E;
    open( C := getchan, "DSK", 0,4,4, 2560,0,E );
    while true do begin
	append( C, "XMON.LOG", E );
	if E then begin
	    release( C );
	    usererr( E,2,"?append error: ","X" );
	end;
	cprint( C, "* ", maiDate, crlf );
	for I := arrinfo(KHOSTS,1) upto arrinfo(KHOSTS,2) do begin
	    if length(KHOSTS[i]) = 0 then done;
	    if Connect( KHOSTS[i] ) then continue;
	    Measure;
	    AuxZap;
	end;
	close( C );
	calli( 10, '31 );
    end;
end	"MAIN"
end $
