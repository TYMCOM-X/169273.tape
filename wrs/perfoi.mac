title	PERFOI - performance monitoring system for SAIL

T1=	1
T2=	2
T3=	3
T4=	4
P1=	5
P2=	6
P3=	7
PG=	10
;PG+1=	11	
F=	12			; don't touch this!!!
PD=	13
CP=	14
XX=	15			; only use in errors
SP=	16			; preserve integrity of this!!!
P=	17			; preserve integrity of this!!!

.AXPTR==5			; output string from pointer
.CHCFP==40			; create file page
.CHCLS==1			; close file
.CHDFP==36			; delete file page
.CHENT==5			; standard enter
.CHLK==4			; standard lookup
.CHMEN==41			; multiple enter
.CHMFP==35			; map file page
.CHOPN==13			; open channel
.CHREL==0			; release channel
.CHREN==11			; rename file
.GTFPN==-25			; file PPN
.GTNAM==3			; file name
.JBHRL==115			; length of hiseg,,highest adr in hiseg


subttl	PD.DEF - definitions for procedure descriptors

extern	PDLNK			; head of SAIL procedure descriptor list
PD.LNK==0			; link to next PD
PD.ENT==1			; entry address
PD.PN1==2			; procedure name string word 1
PD.PN2==3			; procedure name string word 2

entry	PERFOI ; internal procedure PerformanceIni;
intern	PERFOI
intern	PERFOA			; address of file pages

PERFOI:	SKIPE	PINITD		; don't init twice!
	  POPJ	P,
	SETOM	PINITD		; never do this again
	SETZM	PERFOA		; flag as no meters
	HRROI	T1,.GTFPN	; get file PPN
	GETTAB	T1,
	  JSR	ERRXIT
	MOVEM	T1,FILBLK+1	; save PPN
	HRROI	T1,.GTNAM	; get file name
	GETTAB	T1,
	  JSR	ERRXIT
	MOVEM 	T1,FILBLK+2	; save file name
	MOVEI	T1,1000/5	; count the header block, and round up
	SKIPA	PD,PDLNK
	 SKIPE	PD,(PD)
	  AOJA	T1,.-1		; and count PD's
	IDIVI	T1,1000/5	; compute number of pages needed
	MOVEM	T1,PCNT		; save pages needed
	MOVEI	T1,400000	; address to map at
	MOVEM	T1,PERFOA	; save for SAIL

	HRLOI	T1,.CHOPN	; open a channel
	CHANIO	T1,DEVBLK
	  JSR	ERRXIT
	MOVEM	T1,CHAN
	HRLI	T1,.CHLK	; lookup file
	CHANIO	T1,FILBLK
REBUIL:	  JSR	CREATE		; create the file
	HRLI	T1,.CHMEN	; multiple enter file
	CHANIO	T1,FILBLK
	  JSR	ERRXIT
	
	MOVEI	PG,400		; just the VP number
	HRL	PG,PCNT		; how many pages?
	TLO	PG,(3B7)	; writeable
	MOVEI	PG+1,1		; from file page 1, on
	HRLI	T1,.CHMFP	; map file pages
	CHANIO	T1,PG
	  JSR	ERRXIT

	MOVN	CP,PCNT		; make AOBJN pointer
	LSH	CP,^D27		; convert to words in LH
	HRR	CP,PERFOA	; get pointer to file pages
	ADD	CP,[5,,5]	; skip over header block
	SKIPA	PD,PDLNK	; get pointer to first PD
NEXTPD:	  MOVE	PD,PD.LNK(PD)	; follow link to next PD
	JUMPE	PD,ENDPD	; no more PD's (sigh)
	HRRZ	P1,PD.ENT(PD)	; get address of code of procedure
	MOVE	T1,1(CP)	; get "patched" instruction from file
	CAME	T1,0(P1)	; check it against the real thing
	  JUMPN	T1,REBUIL	;   wrong - rebuild the file
	HRRZ	T1,2(CP)	; get return address from file
	CAIE	T1,1(P1)	; is it correct?
	  JUMPN	T1,REBUIL	;   no - rebuild the file
	HRRZ	T1,0(CP)	; get the counter address from file
	CAIE	T1,4(CP)	; is it correct?
	  JUMPN	T1,REBUIL	;   no - rebuild the file
	MOVSI	T1,(AOS)	; compile the AOS instruction
	HRRI	T1,4(CP)
	MOVEM	T1,0(CP)
	MOVE	T1,0(P1)	; copy "patched" instruction
	MOVEM	T1,1(CP)
	MOVSI	T1,(JRST)	; compile JRST instructions...
	HRRI	T1,1(P1)	; for non-skip return
	MOVEM	T1,2(CP)
	HRRI	T1,2(P1)	; and for skip return
	MOVEM	T1,3(CP)
	MOVSI	T2,(JRST)	; compile JRST instruction
	HRRI	T2,(CP)
	MOVEM	T2,(P1)		; install patch
	ADD	CP,[5,,5]	; incriment pointer
	JUMPLE	CP,NEXTPD
FULL:	OUTSTR	[ASCIZ "?PERFORMANCEINI: too many SAIL procedures"]
	OUTSTR	[BYTE(7)15,12]
	JSR	ERRXIT

ENDPD:	MOVEI	T1,400000	; get address of performance array
	MOVEM	T1,PERFOA
	JRST	ENDIT
ERRXIT: Z
	OUTSTR	[ASCIZ "?PERFORMANCEINI: cant init performance meters"]
	OUTSTR	[BYTE(7)15,12]
ENDIT:	MOVE	T1,CHAN		; get channel number
	HRLI	T1,.CHREL	; release DSK and close file
	CHANIO	T1,0
	POPJ	P,		; return to caller

SUBTTL	CREATE	- create the file if it is empty

CREATE: Z
	HRROI	T2,.AXPTR	; send advisory message
	MOVE	T3,[point 7,[asciz "[initializing performance meters]
"]]
	AUXCAL	T2,T3
	MOVE	T1,CHAN		; get channel number
	HRLI	T1,.CHCLS	; close it 
	CHANIO	T1,0
	MOVEI	T2,400		; page number
	HRL	T2,PCNT		; count
	VCLEAR	T2,		; unmap them (if they exist)
	  JSR 	ERRXIT

	HRLI	T1,.CHENT	; create a new version
	CHANIO	T1,FILBLK
	  JSR  	ERRXIT
	HRLI	T1,.CHCFP	; create file pages
	MOVEI	PG,1		; starting at 1
	MOVE	T2,PCNT		; for PCNT pages
CPLOP:	CHANIO	T1,PG
	  JSR	ERRXIT
	ADDI	PG,1
	SOJG	T2,CPLOP
	HRLI	T1,.CHCLS	; close file
	CHANIO	T1,0

	HRLI	T1,.CHLK	; lookup file
	CHANIO	T1,FILBLK
	  JSR	ERRXIT
	JRSTF	@CREATE

SUBTTL	DATA - storrage of data and stuff

DEVBLK:	0,,0			; bits,,status
	SIXBIT "DSK"		; device name
	0,,0			; outring,,inring

FILBLK:	3			; extended lookup block for file
	Z			; PPN goes here
	Z			; name goes here
	SIXBIT "PFM"		; extension

DELBLK:	3			; extended lookup block for deleting
	Z
	0
	Z

CHAN:	Z			; channel number for file
PERFOA:	Z			; address of counter pages
PINITD:	0			; init flag - set by PERFOI
PCNT:	Z			; number of pages allocated

END	

