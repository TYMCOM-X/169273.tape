begin
require "(SAILIB)SAIL.DEF" source!file;
require "(WRS)ARGS.REQ" source!file;
require "(WRS)FLIB.REQ" source!file;

string item MAPFILE;

integer lineBreak;
simple procedure breakIni;
begin
	setbreak(lineBreak_getbreak,#lf,#cr,"SINK");
end;
require breakIni initialization;

procedure readMap( string NAME );
begin	"readMap"
	r!p(file) F;
	string S;
	integer nLink,nNode;
	F := fOpen( NAME, "br4E" );
	while not file:EOF[F] do begin
		S := input( file:Chan[F], lineBreak );
		case S of begin
		["Host"] ;
		["Link"] nLink := nLink + 1;
		["Node"] nNode := nNode + 1;
		["Sup"] print( "loading map from sup ",
			S[3 to inf],
			crlf );
		[0] ;
		[else] print( "Unknown record ID: ", S, crlf )
		end;
	end;
	print( nNode,
		" nodes, ",
		nLink,
		" links loaded from ",
		file:Name[f],
		crlf );
	fClose( F );
end	"readMap";

begin	"MAIN"
	datum(MAPFILE) := "SUPMAP.DAT";
	argparse( any, any, {MAPFILE}, args );
	readMap( datum(MAPFILE) );
end	"MAIN"
end
$
