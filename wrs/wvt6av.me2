procedure NEWTRAN
begin
  fields
    HAS.2.ACCTS as "1N",
    HAS.IMPLIED as "1N",
    HAS.SEARCH as "1N",
    HAS.FIND as "1N",
    ACCT.1 same as ACCT.CODE,
    ACCT.2 same as ACCT.CODE,
    L as "132C",
    T as "60C",
    F as "20C",
    V as "40C",
    I as "5N",
    NEW.OR.OLD as "3C"

source NEW.TRAN from "TERM" fixed form
   input L,@cr

% 	E X E C U T I O N   B E G I N S   H E R E       %

type "::"

NEWLINE: for each NEW.TRAN begin
  move 0 to HAS.2.ACCTS,HAS.IMPLIED,HAS.SEARCH,HAS.FIND
  move "ACCOUNT" to F
  move upper.case(L) to L
%
	try various commands
%
    if L = "Q" or "QUIT" then finish NEWLINE
    if L = "?" or "HELP" then begin type @cr,
	"One of the following:",@cr,
	"  account,number,date,desc,vendor,amount,budget",@cr,
	"  account>account,number,date,amount",@cr,
	"  field:value   - change value of field in transaction",@cr,
	"  DELETE        - deletes transaction",@cr,
	"  FIND,account,number,date",@cr,
	"  HELP          - prints this",@cr,
	"  QUIT          - returns to MAGNUM",@cr,
	"  SCAN,value,value...value",@cr,
	"  SCAN,field:value,field:value...field:value",@cr,
	"  VERIFY        - prints transaction",@cr,
	@cr,
	"::"	repeat NEWLINE end
    if L = "DEL" or "DELETE" then begin
	type "    are you sure? "
	accept T
	if upper.case(T) = "Y" or "YES"
	    then nothing
	    else begin
		type "[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	select TRANS via key
	    then delete from TRANS via key
	    else type "[no transaction]",@cr
	type "::"
	repeat NEWLINE
    end
    if L = "V" or "VER" or "VERIFY" or "LIST" or "PRINT" then begin
	select TRANS via key
	    then type
		"account:",@tab to 15,ACCT.CODE,@cr,
		"number:",@tab to 15,NUMBER,@cr,
		"date:",@tab to 15,TRAN.DATE as date "ZM/DD/YY",@cr,
		"desc:",@tab to 15,trim(DESC),@cr,
		"vendor:",@tab to 15,trim(VENDOR),@cr,
		"amount:",@tab to 15,AMOUNT,@cr,
		"budget:",@tab to 15,BUDGET.ID,@cr
	    else type "[no transaction]",@cr
	type "::"
	repeat NEWLINE
    end
%
	pick up a field at a time
%
  NEWFIELD: while length(L) > 0 do begin
    move position(L,",") to I
    if I = 0 then move length(L)+1 to I
    move substr(L,1,I-1) to T
    move substr(L,I+1) to L
%
	try CCCC>CCCC
%
    move position(T,">") to I
    if I > 0 then begin
	move upper.case(T) to T
	move substr(T,1,I-1) to ACCT.1
	move substr(T,I+1) to ACCT.2
	move ACCT.1 to ACCT.CODE
	select ACCOUNT via key
	    then nothing
	    else begin
		type "Invalid account code: ",ACCT.1,@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move ACCT.2 to ACCT.CODE
	select ACCOUNT via key
	    then nothing
	    else begin
		type "Invalid account code: ",ACCT.2,@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move "MISC" to BUDGET.ID
	move 1 to HAS.2.ACCTS
	move "NUMBER" to F
	repeat NEWFIELD
    end	% acct.code>acct.code %
%
	try other commands
%
    conditional on T begin
    "SCAN" or "SEARCH": begin
	move 1 to HAS.SEARCH
	move default to ACCT.CODE,NUMBER,TRAN.DATE,DESC,VENDOR,AMOUNT,BUDGET.ID
	repeat NEWFIELD
    end
    "FIND": begin
	move 1 to HAS.FIND
	repeat NEWFIELD
    end
    end % conditional %
%   
	try field:value
%
    move position(T,":") to I
    if I > 0 then begin
	move substr(T,1,I-1) to F
	move substr(T,I+1) to V
    end else begin
	move 1 to HAS.IMPLIED
	move T to V
    end
%
	do it for fields now
%
    conditional on F begin
    "AC" or "ACC" or "ACCT" or "ACCOUNT": begin
	select ACCOUNT via (ACCT.CODE=V)
	    then nothing
	    else begin
		type "Invalid account: ",trim(V),@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move V as ACCT.CODE to ACCT.CODE
	move "NUMBER" to F
	repeat NEWFIELD
    end
    "#" or "N" or "NO" or "NUM" or "NUMBER": begin
	if V is NUMBER
	    then nothing
	    else begin
		type "Invalid number: ",trim(V),@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move V as NUMBER to NUMBER
	move "DATE" to F
	repeat NEWFIELD
    end
    "DA" or "DAT" or "DATE": begin
	if V is date "ZMDDYY"
	    then nothing
	    else begin
		type "Invalid date: ",trim(V),@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move V as date "ZMDDYY" to TRAN.DATE
	if HAS.2.ACCTS = 0 
	    then move "DESC" to F
	    else move "AMOUNT" to F
	repeat NEWFIELD
    end
    "DE" or "DES" or "DESC": begin
	if V is DESC
	    then nothing
	    else begin
		type "Invalid desc: ",trim(V),@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move V as DESC to DESC
	if HAS.2.ACCTS = 0 
	    then move "VENDOR" to F
	    else move "AMOUNT" to F
	repeat NEWFIELD
    end
    "V" or "VEN" or "VEND" or "VENDOR": begin
	if V is VENDOR
	    then nothing
	    else begin
		type "Invalid vendor: ",trim(V),@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move V as VENDOR to VENDOR
	if HAS.2.ACCTS = 0 
	    then move "AMOUNT" to F
	    else move "AMOUNT" to F
	repeat NEWFIELD
    end
    "AM" or "AMT" or "AMOUNT": begin
	if V is AMOUNT
	    then nothing
	    else begin
		type "Invalid amount: ",trim(V),@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move V as AMOUNT to AMOUNT
	if HAS.2.ACCTS = 0 
	    then move "BUDGET" to F
	    else move default to F
	repeat NEWFIELD
    end
    "B" or "BUD" or "BUDG" or "BUDGET": begin
	select BUDGET.TAB via (BUDGET.ID = V)
	    then nothing
	    else begin
		type "Invalid budget: ",trim(V),@cr,
		"[line flushed]",@cr, "::"
		repeat NEWLINE
	    end
	move V as BUDGET.ID to BUDGET.ID
	if HAS.2.ACCTS = 0 
	    then move default to F
	    else move default to F
	repeat NEWFIELD
    end
    end
    else begin
	type "Invalid field name: ",trim(F),@cr,
	"[line flushed]",@cr, "::"
	repeat NEWLINE
    end
    end	% NEWFIELD %
  if HAS.SEARCH =1 then begin
    move 0 to I
    for each TRANS where (
	(ACCT.CODE of NEWTRAN = default or ACCT.CODE) and
	(NUMBER of NEWTRAN = default or NUMBER) and
	(TRAN.DATE of NEWTRAN = default or TRAN.DATE) and
	(DESC of NEWTRAN = default or position(DESC,DESC of NEWTRAN)>0) and
	(VENDOR of NEWTRAN = default or position(VENDOR,VENDOR of NEWTRAN)>0) and
	(AMOUNT of NEWTRAN = default or AMOUNT) and
	(BUDGET.ID of NEWTRAN = default or BUDGET.ID) 
	) begin add 1 to I type
	trim(ACCT.CODE),", ",
	trim(NUMBER),", ",
	TRAN.DATE as date "MMDDYY",", ",
	trim(DESC),", ",
	trim(VENDOR),", ",
	AMOUNT,", ",
	BUDGET.ID,@cr
    end
    type "[",I,"]",@cr, "::"
    repeat NEWLINE
  end % SEARCH %
  if HAS.FIND =1 then begin
    select TRANS via key
	then type "[found]",@cr
	else type "[not found]",@cr
    type "::"
    repeat NEWLINE
  end % FIND %
  if HAS.2.ACCTS =1 then begin
    move "MISC" to BUDGET.ID
    select ACCOUNT via (ACCT.CODE=ACCT.2)
	then begin
	    move ACCT.1 to ACCT.CODE
	    move "xfer to " + ACCT.NAME to DESC
	    move BANK.NAME to VENDOR
	    select TRANS via key
		then type "[duplicate 'from' record exists -- ignored]",@cr
		else insert into TRANS
	end
	else type "['to' account ",ACCT.2," not found]",@cr
    select ACCOUNT via (ACCT.CODE=ACCT.1)
	then begin
	    move ACCT.2 to ACCT.CODE
	    move "xfer from " + ACCT.NAME to DESC
	    move BANK.NAME to VENDOR
	    move -AMOUNT to AMOUNT
	    select TRANS via key
		then type "[duplicate 'to' record exists -- ignored]",@cr
		else insert into TRANS
	end
	else type "['from' account ",ACCT.1," not found]",@cr
  end else begin
    select TRANS via key
	then if HAS.IMPLIED =1
	    then type "[duplicate instance ignored]",@cr
	    else alter TRANS
	else if HAS.IMPLIED =1
	    then insert into TRANS
	    else type "[no record to alter]",@cr
  end
  type "::"
end 	% NEWLINE %

end 	% NEWTRAN %
