begin

require "(SAILIB)SAIL.DEF" source!file;

record!class orgrec (
    integer	CostC;
    string	Name;
    integer	Up );

r!p(orgrec) array ORG[0:9999];

integer procedure ReadOrgStr( string FileName );
begin
    integer C,B,E,BT,N;
    setbreak( BT_getbreak, #lf,#cr,"SINK" );
    open( C_getchan, "DSK", 1,4,0, 196,B,E );
    lookup( C, FileName, E );
    if E then begin
	release( C );
	print( "?ReadOrgStr: file not found: ", FileName, crlf );
	return( 0 );
    end;
    print( "[", input( C, BT ), "]"& crlf );
    while not E do begin
	string S;
	r!p(orgrec) R;
	S := input( C, BT );
	if length(S)=0 then continue;
	R := new!record(orgrec);
	orgrec:CostC[R] := cvd(S[5 to 8]);
	orgrec:Name[R] := S[28 to 60];
	orgrec:Up[R] := cvd(S[67 to 70]);
	ORG[orgrec:CostC[R]] := R;
	N := N +1;
    end;
    release( C );
    return( N );
end;

recursive procedure printOrg( integer CostC );
begin
    r!p(orgrec) R;
    if R := ORG[CostC] then begin
	printOrg( orgrec:Up[R] );
	print( CostC, "  ", orgrec:Name[R], crlf );
    end;
end;

integer C,B,E,brkLine;

setbreak( brkLine_getbreak,#lf,#cr,"SINK" );
ReadOrgStr( "OrgStr.Dat" );
setprint( "D25ORG.RPT", "F" );
open( C_getchan,"DSK",0,4,0, 40,B,E );
lookup( C,"D25COS.RPT",E );
if E then usererr(0,0,"?D25COS.RPT not found","X");
while not E do begin
    string S;
    integer CostCode;
    own integer LastCode;
    S := input( C,brkLine );
    if E then done;
    CostCode := cvd(S[29 to 32]);
    if CostCode neq LastCode then begin
	outstr( S[29 to inf] );
	outstr( crlf );
	if LastCode then print( #ff );
	print( crlf&crlf&"cost  organization"&crlf&crlf );
	printOrg( CostCode );
	print( crlf&crlf&"username               gan  cost"&crlf&crlf );
	LastCode := CostCode;
    end;
    print( S&crlf );
end;

end $
