	Search	RPGUNV		; Get macro definitions from UNV file.

TYMSPC==150	;TYMSHARE SPEC NO. (bumped once per transmittal)
TYMREL==0	;TYM RELEASE NO. (bump this for bugfixes)
JOBVER==137	; address of where to put version number

TITL(\TYMSPC,\TYMREL)

	TWOSEG		;SIGNAL LOADER FOR HIGH SEGMENT

IF2<PRINTX License required: HF>

	Subttl	Segmentation stuff -- Internals and Externals

Entry	SETRNF,TRANUN,GTUNO
Entry	TPSIX,YN,PROMPT,OPUD,PRTIM1,TDATE
Entry	RDBLK,WTBLK,LKLUD,LDPRV
Entry	COPY,CREATE,CREFIT
Entry	DECLAR,DIFFER,DODATE,DODEL,DOFL,DOREN
Entry	DOEDIT,DOEDT1,EDIT10,EDITOR,FDC,PFDC,HELP
Entry	LISTR,MAKE,MODIFY,PDP10,PPN,PRINT,RUNCMD
Entry	SETRUN,TECO,TYMEX,TYPR,VUE

Intern	TMPFIL,JOBNAM,SVJBFF,CORTOP,SAVPPN,SAVCHR,PDP
Intern	SVDEV,SVNAM,SVEXT,SVPPN,ACCUM
Intern	BUF,HED,NAMCT,NAMPT

Extern	JOBFF,JOBREL,JOBSA,JOBSYM,JOBERR,JOBDDT		; Job Data area
Extern	SCAN,SCANS,SCANHW,SWSCAN,UNRECS,STARGS		; See RPGSCN.MAC
Extern	ALTLOD,LOGPPN,ALLDON,DONE,JDONE1,DONE1		;	"
Extern	FINPRS,LDBITS,LDPRV,LOKNAM,NAME,NAMES1,NAMES2
Extern	PCDEV,PCNAM,PCEXT,PCPPN,PERFLG,READER,RFLBLK
Extern	NUMAC,OUTER,OUTSIX,STTYMX,PPNS,UFDS,RUNBLK	;	"
Extern	CPOPJ,CPOPJ1,BYENOW,EX,XPAND,XIT,CHKRM,CMNO	;	"
Extern	GETCH,GETNAM,GETNMS,GSTRN,TMNER,SYNERR		;	"

	Subttl	Beginning of Code

;HANDLE THE DIFFERENCES COMMAND - DO GOOD STUFF AND CALL FILCOM

DIFFER:	MOVEI T1,FCMEOF		; LABEL FOR SPECIAL EXIT ROUTINE
	MOVEM T1,EOFLAB		; (EXIT LABEL REFERENCED IN RELTAB)
DIFFIT:	MOVEI T4,[ASCIZ/OUTPUT TO: /]
	PUSHJ P,PROMPT
	TRNE FL,PRMPTF	;IF PROMPTING
	JRST	[PUSHJ P,DIFINM	;READ NAME
		TLNE CS,TERMF
		JRST DIFOKO
		JRST SYNERR]	;OTHERWISE NEED _ OR = FOR OUTPUT
	PUSHJ P,DIFINM	;GET FIRST NAME - MIGHT BE INPUT OR OUTPUT
	CAIN C,","
	JRST DIFOKA	;COMMA SAYS IT WAS INPUT NAME
	CAIE C,"_"
	CAIN C,"="
	JRST DIFOKO	;CHECK FOR VALID OUTPUT NAME TERMINATORS
	JRST SYNERR
DIFOKO:	PUSHJ P,CKTTY	;ALLOW TEL FOR TTY: IN OUTPUT NAME
	PUSHJ P,DIFONM	;SEND OUTPUT NAME TO FILCOM
	MOVEI T4,[ASCIZ/INPUT FILE 1: /]
	PUSHJ P,PROMPT
	TRZN FL,PRMPTF
	PUSHJ P,SCAN
	PUSHJ P,DIFINM	;GET INPUT FILE 1
DIFOKA:	MOVEI T1,"_"
	PUSHJ P,OUTFCM	;DELIMIT OUTPUT NAME
	PUSHJ P,DIFONM	;SEND FILE NAME TO FILCOM
	MOVEI T1,","
	PUSHJ P,OUTFCM
	CAIE C,","
	TLNE CS,TERMF	;CHECK FOR VALID DELIMITERS
	SKIPA T4,[[ASCIZ/INPUT FILE 2: /]]
	JRST SYNERR
	PUSHJ P,PROMPT
	TRZN FL,PRMPTF
	PUSHJ P,SCAN
	PUSHJ P,DIFINM	;GET SECOND INPUT NAME
	PUSHJ P,DIFONM
	PUSHJ P,SCAN
	TLNN CS,TERMF
	JRST SYNERR
	MOVEI T3,OUTFCM
	PUSHJ P,OUCRLF
	JRST DIFFIT		; READ NEXT LINE (IN COMMAND FILE)


FCMEOF:	PUSHJ P,CHKFCM
	MOVE T1,[SIXBIT/FILCOM/]
	MOVEM T1,PCNAM
	JRST DONE1

DIFINM:	PUSHJ P,SCAN
	CAIN C,"/"	;CHECK FOR SWITCH BEFORE NAME
	PUSHJ P,DIFSW1	;YES, PROCESS IT
	PUSHJ P,GETNAM	;GET FILE NAME
	PUSHJ P,SCANS	;PEEK AT NEXT CHARACTER
	CAIN C,"/"	;CHECK FOR SWITCH AFTER NAME
	PUSHJ P,DIFSW	;YES, PROCESS IT
	POPJ P,

DIFSW:	PUSHJ P,SCAN	;THIS ENTRY SKIPS OVER THE /
DIFSW1:	HRREI T1,-3	;THIS ENTRY ASSUMES / HAS BEEN SCANNED
	ADDM T1,(P)	;RETURN TO CALLING LOC-2
	PUSHJ P,SCAN	;SCAN SWITCH NAME
	TRNN FL,IDF
	JRST SYNERR
	MOVSI T1,'RUN'
	CAMN T1,ACCUM
	JRST SETRNN	;HANDLE RUN SWITCH SPECIALLY TO AVOID GARBAGE
	MOVEI T1,"/"
	PUSHJ P,OUTFCM	;BEGINNING OF SWITCH FOR FILCOM
	MOVE T1,[-DIFLEN,,DIFTAB]
	PUSHJ P,SWSCAN
	JRST UNRECS
	JFCL
	XCT DIFT2-DIFTAB(T1)	;DO THE SWITCH
	PUSHJ	P,OUTFCM	; SEND SWITCH CHARACTER TO BUF
	MOVE	T3,[SIXBIT /HELP/]
	CAME	T3,ACCUM	; DID WE SCAN THE /HELP SWITCH?
	POPJ	P,		; RETURN
	SKIPE	SVNAM	;ANY NAMES SEEN YET?
	POPJ	P,		;YUP, BETTER GO BACK & WRITE THEM
	PUSHJ	P,SCANS		; ANYTHING ELSE IN THE STRING?
	TLNN	CS,TERMF	; A TERMINATOR?
	POPJ	P,		; NO THERE'S MORE (RETURN)
	PUSHJ	P,SCAN	; NO? WELL, GET TERMINATOR ANYWAY
	POP	P,T3		; RE-ADJUST THE STACK
	JRST	DIFFIT		;AND GO BACK TO THE BEGINNING

DIFONM:	MOVEI T3,OUTFCM
	MOVE T4,SVPT
	JRST CMNO

DIFLOW:	SKIPA T1,["L"]
DIFUP:	MOVEI T1,"U"
	PUSH P,T1
	PUSHJ P,STARGS
	TRNN FL,NUMFS	;ARGUMENT MUST BE NUMERIC
	JRST SYNERR
	MOVE T1,NUMAC
	MOVEI T3,OUTFCM
	PUSHJ P,OUTNUM	;SEND NUMBER TO FILCOM
	TLNN FL,PARFLG
	JRST DIFLU1	;IF NOT (ARG) THEN ALMOST DONE
	PUSHJ P,SCAN	;IF (ARG) THEN SCAN )
	CAIE C,")"
	JRST SYNERR	;MUST BE )
DIFLU1:	POP P,T1	;GET BACK SWITCH CHARACTER
	POPJ P,	;RETURN

DEFINE TABLE<
SWITCH ASCII,<MOVEI T1,"A">
SWITCH BINARY,<MOVEI T1,"W">
SWITCH BLANK,<MOVEI T1,"B">
SWITCH COMMENT,<MOVEI T1,"C">
SWITCH COREIMAGE,<MOVEI T1,"X">
SWITCH CASE,<MOVEI T1,"K">
SWITCH HELP,<MOVEI T1,"H">
SWITCH QUICK,<MOVEI T1,"Q">
SWITCH SPACING,<MOVEI T1,"S">
SWITCH SYMBOLIC,<MOVEI T1,"A">
SWITCH WORD,<MOVEI T1,"W">
SWITCH UPDATE,<MOVEI T1,"U">
SWITCH EXPAND,<MOVEI T1,"X">
SWITCH SMALL,<MOVEI T1,"N">
SWITCH LOWER,<PUSHJ P,DIFLOW>
SWITCH UPPER,<PUSHJ P,DIFUP>
>

TBGEN(DIFTAB,DIFLEN,DIFT2)
;HANDLE DIRECTORY-TYPE COMMANDS. ALL ARE ABOUT THE SAME EXCEPT FOR FLAGS


DODIR:	 TLO	FL2,SFLGD!CFLGD ;SET NORMAL DIR. BITS
	TLNE	FL,TYMX
	TLO	FL2,DFLGD!PFLGD!AFLGD
	JRST	DOFL+1
DODEL:	TLO FL,DELTSW	;JUST SET DELETE SWITCH
DOFL:	TLZ FL2,-1	;NO FLAGS
	TRO FL,PIPF
	MOVEI	T1,DIREOF	;LOC OF EXIT ROUTINE CALL
	MOVEM	T1,EOFLAB	;EXIT LABEL REFERENCED BY RELTAB
DODIR1:	PUSHJ P,SCAN	;FIND OUT IF HE WANTS /L OR /F SWITCH
DODIR2:	TRNN FL,IDF	;WAS IT AN IDENT?
	CAIN C,"["
	JRST DIRNAM
	CAIN	C,"("
	JRST	DIRNAM
	CAIN C,"-"
	JRST MINAM
	CAIE C,"_"
	CAIN C,"="
	JRST DODIR1
	CAIE C,","
	CAIN C," "
	JRST DODIR1
	CAIE C,"#"
	CAIN C,")"
	JRST SYNERR	;JRST DODIR1 ALLOWS #,) AS SEPARATORS
	CAIE C,"]"
	SKIPN C		; WHERE SCAN PRODUCED AN IDF IN DISGUISE
	JRST DODIR1
	CAIE C,"/"
	JRST SYNERR
	PUSHJ P,SCAN	;WHICH ONE
	TRNN FL,IDF	;MUST SEEN AN IDENTIFIER
	JRST SYNERR
	MOVEI T1,"_"
	TLON FL,NEDCMA
	PUSHJ P,OUTDIR
	MOVE T1,[XWD -DIRLG,DIRTAB]
	PUSHJ P,SWSCAN
	JRST	SWHELP
	JFCL
	XCT DIRT2-DIRTAB(T1)
	JRST DODIR1
DIRNAM:	PUSHJ P,GETNAM
	SKIPN SVDEV(SVPT)
	SKIPE SVEXT(SVPT)
	JRST CMNM	;NO FUNNY STUFF IF DEV OR EXT GIVEN
	MOVSI T1,'NOT'
	CAMN T1,SVNAM(SVPT)
	JRST MINAM	;NOT IS THE SAME AS -
CMNM:	CAIE C,"="
	CAIN C,"_"	;NAME= OR NAME_ IS OUTPUT SPEC
	JRST [	TLNE FL,NEDCMA
		JRST SYNERR	;MUST NOT HAVE HAD ANY PREVIOUS NAMES
		MOVSI T1,'DSK'
		SKIPN SVDEV(SVPT)	;DIRIT DOESN'T HAVE DSK DEFAULT
		MOVEM T1,SVDEV(SVPT)
		JRST CMNM1]
	MOVEI T1,"_"	;JUST A REGULAR NAME, PRECEDE IT WITH
	TLOE FL,NEDCMA	;THE PROPER DELIMITER (_ IF FIRST,
	MOVEI T1,","	;ELSE COMMA)
	PUSHJ P,OUTDIR	;COMMA IF NOT FIRST
CMNM1:	MOVE T4,SVPT
	MOVEI T3,OUTDIR
	PUSHJ P,CMNO	;OUTPUT NAME TO DIRIT
	JRST DODIR1
MINAM:	PUSHJ P,GETNMS	;SKIP - AND SCAN NAME
	MOVSI T2,'_- '	;ARROW IF FIRST
	TLOE FL,NEDCMA
	MOVSI T2,',- '	;COMMA IF NOT FIRST
	MOVEI T3,OUTDIR
	PUSHJ P,OUTSIX	;OUTPUT COMMA (OR ARROW) AND -
	JRST CMNM1
DIREOF:	MOVEI T1,"_"
	TLNN FL,NEDCMA
	PUSHJ P,OUTDIR	;_ IF NO FILE SPECIFICATIONS YET
	PUSHJ	P,OUTSWD	; WRITE SWITCHES AND CRLF
DIROUT:	SKIPE PERFLG	; WERE WE CALLED BY PERFORM?
	PUSHJ	P,PERFOO	;YES, INDEED
	PUSHJ P,CHKDIR
	MOVE T1,[SIXBIT /DIRIT/]
	MOVEM T1,PCNAM
	JRST DONE1

OUTSWD:	MOVEI T3,OUTDIR
	MOVE T4,[XWD -DSBTL,DSBT]
	PUSHJ P,SWBITS
	TLNN FL2,(T2)
	MOVE T4,[XWD -D2SBTL,D2SBT]	;RAN OUT OF BITS IN 1 WORD
	PUSHJ P,SWBITS
	TLNN FL,(T2)	;SO USE ANOTHER
	PUSHJ	P,OUCRLF	; OUTPUT A CRLF
	POPJ	P,	; RETURN TO CALLING ROUTINE

SWHELP:	OUTSTR	SWHLPM
	JRST	EX
SWHLPM:	ASCIZ $
SORT SWITCHES ARE:
	/EXTENSION
	/ALPHABETICAL
	/STORAGE
	/REVERSE
ITEM SWITCHES ARE:
	/SIZE
	/CREATION
	/TIME (OF CREATION)
	/SECONDS (OF CREATION)
	/PROTECTION
	/ACCESS
	/LICENSE
	/UFDBITS
	/WORDS
	/STATUS
	/PROJECT
	/AUTHOR
	/PID
DELETE SWITCHES ARE:
	/BAD
	/ANY
	/SOFT
OTHER SWITCHES:
	/TODAY
	/AFTER
	/BEFORE
	/TOTAL
	/TEMPS (OR /K)
	/FAST
	/EVERYTHING
	/UNSORTED
	/NOPRINT
$
;SWITCH VALUES

EFLGD==1
RFLGD==2
TFLGD==4
SFLGD==10
CFLGD==20
DFLGD==40
JFLGD==100
NFLGD==200
BFLGD==400
PFLGD==1000
AFLGD==2000
MFLGD==4000
KFLGD==10000
VFLGD==20000
UFLGD==40000
HFLGD==100000
GFLGD==200000

;NOW BITS IN LH OF FL


PRMSW==1	;WANTS PROMPT ON DELETE, ENABLE /Q TO DIRIT
DELTSW==2	;THIS IS A DELETE
RENTSW==4	;THIS IS A RENAME
NEDCMA==10	;NEED TO OUTPUT COMMA BEFORE NAME
YFLGD==20
ZFLGD==40
SOONR==100	;1=/BEFORE	0=/AFTER
IFLGD==200
WFLGD==400	;PROJ CODE ENABLE /W TO DIRIT. AAA.
OFLGD==1000	; AUTHOR /AUTHOR TO RPG; /O TO DIRIT (OH - NOT ZERO)
FLGD1==2000	;PID REPORTING: /PID TO RPG, /1 TO DIRIT
FLGD2==4000	;BAD RIB FILE DEL: /BAD TO RPG, /2 TO DIRIT
FLGD3==10000	;DEL BY REN TO TMP FILE: /SOFT TO REP, /3 TO DIRIT

DEFINE TABLE <
SWITCH PROJECT,<TLO FL,WFLGD>
SWITCH LPT,<TLO FL,IFLGD>
SWITCH EXTENSION,<TLO FL2,EFLGD>
SWITCH REVERSE,<TLO FL2,RFLGD>
SWITCH ALPHABETIC,<TLO FL2,TFLGD>
SWITCH SIZE,<TLO FL2,SFLGD>
SWITCH CREATION,<TLO FL2,CFLGD>
SWITCH TIME,<TLO FL2,DFLGD>
SWITCH SECONDS,<TLO FL2,JFLGD>
SWITCH TOTAL,<TLO FL2,NFLGD>
SWITCH LICENSE,<TLO FL2,BFLGD>
SWITCH PROTECTION,<TLO FL2,PFLGD>
SWITCH ACCESS,<TLO FL2,AFLGD>
SWITCH MODE,<TLO FL2,MFLGD>
SWITCH TEMPS,<TLO FL2,KFLGD>
SWITCH K,<TLO FL2,KFLGD>
SWITCH FAST,<TLZ FL2,SFLGD!CFLGD!PFLGD!AFLGD>
SWITCH EVERYTHING,<PUSHJ P,EVRYTH>
SWITCH UNSORTED,<TLO FL2,UFLGD>
SWITCH STORAGE,<TLO FL2,HFLGD>
SWITCH UFDBITS,<TLO FL2,GFLGD>
SWITCH NOPRINT,<TLO FL2,VFLGD>
SWITCH WORDS,<TLO FL,YFLGD>
SWITCH STATUS,<TLO FL,ZFLGD>
SWITCH BEFORE,<JRST SOONER>
SWITCH AFTER,<JRST LATER>
SWITCH TODAY,<JRST TODAY>
SWITCH AUTHOR,<TLO FL,OFLGD>
SWITCH PID,<TLO FL,FLGD1>
SWITCH BAD,<PUSHJ P,SETBAD>
SWITCH ANY,<PUSHJ P,SETANY>
SWITCH SOFT,<PUSHJ P,SETSOF>
SWITCH WAIT,<TLO FL,PRMSW>
SWITCH RUN,<PUSHJ P,SETRNN>
>
TBGEN (DIRTAB,DIRLG,DIRT2)
DSBT:	SBTS E,EFLGD
	SBTS R,RFLGD
	SBTS T,TFLGD
	SBTS S,SFLGD
	SBTS C,CFLGD
	SBTS D,DFLGD
	SBTS J,JFLGD
	SBTS N,NFLGD
	SBTS B,BFLGD
	SBTS P,PFLGD
	SBTS A,AFLGD
	SBTS M,MFLGD
	SBTS K,KFLGD
	SBTS V,VFLGD
	SBTS U,UFLGD
	SBTS H,HFLGD
	SBTS G,GFLGD
DSBTL==.-DSBT

D2SBT:	SBTS X,DELTSW
	SBTS Q,PRMSW
	SBTS L,RENTSW
	SBTS Y,YFLGD
	SBTS Z,ZFLGD
	SBTS I,IFLGD
	SBTS W,WFLGD
	SBTS O,OFLGD
	SBTS 1,FLGD1
	SBTS 2,FLGD2
	SBTS 3,FLGD3
D2SBTL==.-D2SBT

EVRYTH:	TLO FL2,SFLGD!JFLGD!PFLGD!AFLGD!MFLGD!BFLGD!GFLGD
	TLO FL,YFLGD!ZFLGD!WFLGD!OFLGD
	POPJ P,

SETANY:	TLNN	FL,DELTSW
	JRST	SWHELP		;MUST BE A DEL FOR /ANY TO BE LEGAL
SETAN1:	TLO	FL,FLGD2
	POPJ	P,

SETBAD: TLZN	FL,DELTSW
	JRST	SWHELP		;MUST BE A DEL FOR /BAD TO BE LEGAL
	JRST	SETAN1

SETSOF:	TLNN	FL,DELTSW
	JRST	SWHELP		;MUST BE A DEL FOR /SOFT TO BE LEGAL
	TLO	FL,FLGD3
	POPJ	P,

SOONER:	TLOA FL,SOONR
LATER:	TLZ FL,SOONR
	MOVEI T1,"/"
	PUSHJ P,OUTDIR
	SETZM DIRDAT#
	DATE	T1,
	IDIVI T1,^D31
	MOVEM T2,DRDAY#
	IDIVI T1,^D12
	MOVEM T2,DRMON#
	MOVEM T1,DRYR#
	PUSHJ P,SCAN
	CAIN C,"."
	JRST CRDAGT
	TRNN FL,NUMFS
	JRST SYNERR
	SOS T1,NUMAC
	MOVEM T1,DRDAY
	PUSHJ P,SCAN
	CAIE C,"-"
	JRST CRDAGT
	PUSHJ P,SCAN
	TRNN FL,IDF	;MUST BE IDENT OR NUMBER
	JRST SYNERR
	TRNN FL,NUMFS
	JRST RMON	;FIND OUT WHICH MONTH (TYPE IN NAME)
	SOS T1,NUMAC
	MOVEM T1,DRMON
RDYRD:	PUSHJ P,SCAN
	CAIE C,"-"
	JRST CRDAGT
	PUSHJ P,SCAN
	TRNN FL,NUMFS
	JRST SYNERR
	MOVE T1,NUMAC
	SUBI T1,^D64
	MOVEM T1,DRYR
	PUSHJ P,SCAN
CRDAGT:	MOVE T1,DRYR
	IMULI T1,^D12
	ADD T1,DRMON
	IMULI T1,^D31
	ADD T1,DRDAY
	MOVEM T1,DIRDAT
	MOVEI T4,DODIR2
	CAIE C,"."
	JRST DODT2
	PUSHJ P,SCAN
	TRNN FL,NUMFS
	JRST SYNERR
	MOVE T1,NUMAC
	IDIVI T1,^D100
	IMULI T1,^D60
	ADD T1,T2
	IMULI T1,^D60
	DPB T1,[POINT 17,DIRDAT,21]
DODT1:	MOVEI T4,DODIR1
DODT2:	MOVE T1,DIRDAT
	MOVEI T3,OUTDIR
	PUSHJ P,OUTNUM	;OUTPUT DATE
	MOVEI T1,"<"
	TLNN FL,SOONR
	MOVEI T1,">"
	PUSHJ P,OUTDIR	;OUTPUT APPROPRIATE SWITCH
	JRST (T4)

TODAY:	TLZ FL,SOONR
	MOVEI T1,"/"
	PUSHJ P,OUTDIR
	DATE	T1,
	MOVEM T1,DIRDAT
	JRST DODT1


RMON:	MOVE T1,[XWD -MONLG,MONTAB]
	PUSHJ P,SWSCAN
	JRST SYNERR
	JFCL
	SUBI T1,MONTAB	;CONVERT TO NUMBER
	HRRZM T1,DRMON	;PUT IT IN
	JRST RDYRD	;DONE

DEFINE IR (A)
<IRP A <<SIXBIT /A/>>>
MONTAB:	IR <JANUARY,FEBRUARY,MARCH,APRIL,MAY,JUNE,JULY,AUGUST>
	IR <SEPTEMBER,OCTOBER,NOVEMBER,DECEMBER>
MONLG==.-MONTAB
;RENAME COMMAND - BOTH PDP10 AND TYMEX

DOREN:	MOVEI	T4,DIROUT	; SPECIAL RENAME EXIT ROUTINE
	MOVEM	T4,EOFLAB	; MOVE LABEL TO EXIT LOCATION
DORENM:	TRO FL,PIPF	;PERMIT * IN FILES
	MOVEI T4,[ASCIZ/OLD NAME: /]
	PUSHJ P,PROMPT	;PROMPT USER (MAYBE)
	PUSH P,FL	;SAVE FL BECAUSE GETNAM ZAPS NEEDED FLAG
	PUSHJ P,GETNMS	;SCAN FIRST FILE NAME
	CAIE C,"="	;HOW DID IT TERMINATE?
	CAIN C,"_"
	JRST PDPREN	; = OR _ MEANS PDP10-STYLE
	CAIE C,"<"	;AS DOES <
	JRST TYMREN	;ANYTHING ELSE IS TYMEX-STYLE
PDPREN:	POP P,T1	;GET BACK FLAG
	TRNE T1,PRMPTF
	JRST SYNERR	;BUT PDP10-STYLE CAN'T BE PROMPTED
	MOVE T1,USRPPN
	SKIPN SVPPN
	MOVEM T1,SVPPN	;USER'S PPN IF NONE GIVEN (BECAUSE OF DIRIT BUG)
	SKIPE SVNAM	;NO NAME, NO SCAN
	PUSHJ P,SCAN
	MOVEI T3,OUTDIR
	MOVE T4,SVPT
	PUSHJ P,CMNO	;OUTPUT NAME
	CAIE C,"<"	;IS THERE PROTECTION?
	JRST NORPRT
	PUSHJ P,SCAN
	TRNN FL,NUMFS
	PUSHJ P,TRYIDP	;TRY FOR NAMES ON PROTECTION
	MOVEI T1,"<"
	PUSHJ P,OUTDIR
	MOVE T2,NUMAC	;GET NUMBER
	PUSHJ P,DECOCT	;CONVET IT
	MOVEI T3,OUTDIR ;DESTROYED BY DECOCT
	PUSHJ P,OUTNUM
	MOVEI T1,">"
	PUSHJ P,OUTDIR
	PUSHJ P,SCAN
	CAIE C,">"
	JRST SYNERR
	PUSHJ P,SCAN
NORPRT:	TLO FL,RENTSW	;SET THE BIT
	CAIE C,"="
	CAIN C,"_"
	JRST DOFL
	JRST SYNERR

TYMREN:	AOBJP	SVPT,TMNER	;SAVE OLD NAME
	TLNN	CS,TERMF	;CARRIAGE RETURN
	CAIN	C,","		;OR COMMA
	JRST	TYMRNP		;IS OK
	JUMPN	C,SYNERR	;OR ELSE IT BETTER BE A SPACE
	PUSHJ	P,SCAN
	MOVSI	T1,'AS '	;FIRST NAME WAS FOLLOWED BY SPACE, NEXT
	CAME	T1,ACCUM	;WORD HAD BETTER BE "AS"
	JRST	SYNERR
	PUSHJ	P,SCANS
	CAIE	C,"("		;AND THAT HAD BETTER BE FOLLOWED BY AN
	JUMPN	C,SYNERR	;OPEN PAREN OR ANOTHER SPACE
	JRST TYMRNG		;FAR OUT! WE CAN SKIP THE PROMPTING
TYMRNP:	MOVEI	T4,[ASCIZ /NEW NAME: /]
	PUSHJ	P,PROMPT	;CK IF END OF STRING AND PROMPT REQ.
	TRZN	FL,PRMPTF	;TEST FLAG AND SKIP OVER SEP. IF SET
	PUSHJ	P,SCAN		;SKIP OVER SEPARATOR
TYMRNG:	PUSHJ	P,GETNMS	;GET NEW NAME
	MOVE T1,USRPPN
	SKIPN	SVPPN(SVPT)	;USE USER'S PPN IF NONE GIVEN
	MOVEM	T1,SVPPN(SVPT)	;TO GET AROUND DIRIT PROBLEM
	MOVEI	T3,OUTDIR
	MOVE	T4,SVPT
	PUSHJ	P,CMNO		;OUTPUT NEW NAME
	MOVEI	T1,"_"
	PUSHJ	P,OUTDIR
	MOVEI	T4,0
	PUSHJ	P,CMNO		;OUTPUT OLD NAME
	TLO	FL,RENTSW	;SET RENAME SW
RENM:	PUSHJ	P,SCAN		;LOOK FOR POSSIBLE SWITCHES
	TRNN	FL,IDF
	CAIE	C,"/"
	JRST	[TLNN	CS,TERMF	;A CRLF?
		JRST 	SYNERR	;NOPE, HE LOSES
		PUSHJ P,OUTSWD	;YES, WRITE OUT COMMAND
		MOVSI	SVPT,-NFILE ;RESET SVPT
		JRST 	DORENM]	; GO BACK AND CONTINUE READING
	PUSHJ	P,SCAN
	TRNN	FL,IDF
	JRST	SYNERR
	MOVE	T1,[XWD -DIRLG,DIRTAB]
	PUSHJ	P,SWSCAN
	JRST	SWHELP
	JFCL
	XCT	DIRT2-DIRTAB(T1)
	JRST	RENM

DECOCT:	MOVEI T1,0
	JUMPGE T2,DECO1
	HRRZ T1,T2
	POPJ P,	 ;NEG FLAG IS SET BY TRYIDP
DECO1:	IDIVI T2,^D10
	HRLM T3,(P)
	SKIPE T2
	PUSHJ P,DECO1
	HLRZ T3,(P)
	LSH T1,3
	ADDI T1,(T3)
	POPJ P,

TRYIDP:	MOVEI T5,3	;NUMBER OF PROTECTION FIELDS
	TDZA T4,T4	;ACCUMULATE PROTECTION
IDP1:	PUSHJ P,SCAN
	TRNN FL,IDF
	JRST SYNERR	;MUST BE A NAME
	MOVE T1,[XWD -10,PROTAB]	;ONLY A FEW POSSIBLE
	PUSHJ P,SWSCAN
	JRST SYNERR	;NOT A GOOD ONE
	JFCL
	SUBI T1,PROTAB	;CONVER TO	PROTECTION
	LSH T4,3
	IORI T4,(T1)	;PUT IT IN
	SOJG T5,IDP1	;IF MORE, TRY AGAIN
	HRROM T4,NUMAC	;SAVE FOR COMPRT
	MOVEI T3,OUTDIR ;THIS GOT LOST
	POPJ P,

PROTAB:	SIXBIT /ALL/
	SIXBIT /CP/
	SIXBIT /UPD/
	SIXBIT /AP/
	SIXBIT /RD/
	SIXBIT /RUN/
	SIXBIT /LK/
	SIXBIT /NO/
COPY:	MOVEI	T4,CPYEOF	; SPECIAL "COPY" EXIT ROUTINE
	MOVEM	T4,EOFLAB		;MOVE LABEL TO EXIT LOCATION
COPY2:	TRO	FL,PIPF	 ;SET PIP FLAG
	MOVEI	T4,[ASCIZ /FROM FILE: /]
	PUSHJ	P,PROMPT	;TYPE PROMPTING MSG IF REQ.
	PUSHJ	P,GNM	;GET OLD FILE NAME
	AOBJP	SVPT,TMNER
DOC2:	MOVEI	T4,[ASCIZ /TO: /]
	PUSHJ	P,PROMPT	;TYPE PROMPTING MSG IF REQ.
	TRZN	FL,PRMPTF	;AVOID SSCAN IF MSG. TYPED
	PUSHJ	P,SCAN		;IGNORE SEPARATOR
	CAIN	C,"+"
	JRST	[PUSHJ	P,GNM
		MOVE	T1,SVPPN-1(SVPT)
		SKIPN	SVPPN(SVPT)	;DEFAULT PPN FOR + IS
		MOVEM	T1,SVPPN(SVPT)	;WHATEVER PREVIOUS FILE HAD
		AOBJP	SVPT,TMNER
IFN PIP33,<
		SETOM	CONCAT#	;A FLAG TO SHOW CONCATENATION
>
	JRST	DOC2]
	PUSHJ	P,GNM	;GET NEW NAME
	TLNN CS,TERMF
	JRST SYNERR	;MUST HAVE TERMINATOR HERE
	MOVEI T3,OUTPIP
	MOVE T4,SVPT
IFN PIP33,<
	PUSHJ	P,WILDCH	;CONVERT "WILD" CHARACTERS
	PUSHJ P,CMNO	;OUTPUT NAME OF OUTPUT FILE
	MOVSI T2,'/X_'	;/X TO OUTPUT BUFFER
	MOVSI	T1,'TTY'	;UNLESS THE INPUT DEVICE
	CAME	T1,SVDEV-1(SVPT)	;IS A TTY: , OR HE'S
	SKIPE	CONCAT		;CONCATENATING, IN WHICH CASE
	MOVSI	T2,'_  '	;NO /X TO OUTPUT BUFFER
	PUSHJ P,OUTSIX	;OUTPUT /X_
	MOVEI T4,0
DOC3:	PUSHJ	P,WILDCH	;CONVERT "#" TO "?" FOR PIP
	PUSHJ P,CMNO	;OUTPUT AN INPUT FILE NAME
>
IFE PIP33,<
	PUSHJ P,CMNO	;OUTPUT NAME OF OUTPUT FILE
	MOVSI T1,'*.*'
	MOVSI T2,'_  '
	CAMN T1,SVNAM(SVPT)
	MOVSI T2,'/X_'	;/X IF COPYING TO *.*
	PUSHJ P,OUTSIX	;OUTPUT _ OR /X_
	MOVEI T4,0
DOC3:	PUSHJ P,CMNO	;OUTPUT AN INPUT FILE NAME
>
	CAIL T4,-1(SVPT)
	JRST CPYDON	;DONE, CHECK FOR ANOTHER (IN COMMAND FILE)
	MOVEI T1,","
	PUSHJ P,OUTPIP	;ELSE A COMMA BETWEEN THEM
	AOJA T4,DOC3

CPYDON:	PUSHJ P,OUCRLF	;TERMINATE THIS PIP COMMAND
	MOVSI SVPT,-NFILE	;RESET SVPT
	PUSHJ	P,SCAN		; EAT THAT CRLF !! (AND ITS TERMF)
	JRST COPY2	;KEEP ON TRUCKIN'

CPYEOF:	SKIPE	PERFLG		; WERE WE CALLED BY PERFORM?
	PUSHJ	P,PERFOO	; YES, QUITE
	PUSHJ P,CHKPIP
	MOVSI T1,(SIXBIT /PIP/)
	MOVEM T1,PCNAM	;LOAD THIS ONE
	JRST DONE1

;THIS ROUTINE SCANS A FILE NAME AND CHECKS FOR THE RESERVED
;WORDS TELETYPE AND TERMINAL AND THEIR SUBSTRINGS.

GNM:	PUSHJ P,GETNMS
CKTTY:	SKIPN SVEXT(SVPT)
	SKIPE SVDEV(SVPT)
	POPJ P,		;NO FUNNY STUFF IF DEV OR EXT GIVEN
	MOVE	T1,['TELETY']
	MOVE	T2,['TERMIN']
	MOVE	T4,SVNAM(SVPT)
	SETZ	T5,
CKT1:	ADDI	T5,6
	LSH	T4,6
	JUMPN	T4,CKT1
	SUBI	T5,6*6
	MOVE	T4,SVNAM(SVPT)
	LSH	T1,(T5)
	LSH	T2,(T5)
	LSH	T4,(T5)
	CAME	T2,T4
	CAMN	T1,T4		;LOOK FOR TELETYPE OR ANY PART
	JRST .+2
	POPJ P,
	MOVSI T2,'TTY'	;TELETYPE, CHANGE DEVICE TO TTY:
	MOVEM T2,SVDEV(SVPT)
	SETZM SVNAM(SVPT)
	POPJ P,

IFN PIP33,<

;THIS ROUTINE CONVERTS ALL OCCURENCES OF THE CHARACTER "#"
;IN INPUT OR OUTPUT FILE NAMES (AND EXTENSIONS) TO THE 
;CHARACTER "?".	THIS IS DONE TO MAINTAIN COMPATIBILITY WITH
;DEC'S VERSION OF "PWITH WILD-CHARACTER LOGIC.

WILDCH:	MOVE	T1,[POINT 6,SVNAM(T4)]	;PTR TO THE FILENAME
	PUSH	P,T3
	PUSH	P,T4		;SAVE THE ACCUMULATORS
	MOVEI	T2,6		;CHAR COUNT FOR FILENAMES
	PUSHJ	P,CONVRT	;CONVERTS "#" TO "?"
	POP	P,T4
	MOVE	T1,[POINT	6,SVEXT(T4)]	; PTR TO FILEXT
	PUSH	P,T4
	MOVE	T2,3		;CHAR COUNT FOR EXTENSIONS
	PUSHJ	P,CONVRT	;SAME CONVERSION AS ABOVE
	POP	P,T4
	POP	P,T3		;RESTORE ACCUMULATORS
	POPJ	P,		;AND RETURN

CONVRT:	ILDB	T3,T1		;T1 HAS POINTER, T5 HAS COUNT
	CAIN	T3,'#'		;IS THE CHAR A "#"?
	JRST	[MOVEI	T3,'?'	;YES!	CONVERT IT!
		DPB	T3,T1	;CHANGES BYTE IN SVNAM OR SVEXT
		JRST .+1]
	SOJG	T2,CONVRT	;CHECK THE CHARACTER COUNT
	POPJ	P,		;AND RETURN WHEN IT'S ZERO

>
HELP:	OUTSTR	HELPM
	JRST	EX

HELPM:	ASCIZ $
LIST OF SOME VALID COMMANDS:
	COMPILE
	CREATE
	DEBUG
	COPY
	TRY
	CROSS
	DELETE
	DIRECTORY
	EDITOR
	EXECUTE
	LOAD
	MAKE
	RENAME
	TECO
	TYPE
	PRINT
	FILES
	DECLARE
	HELP
	SYSNO
	DATE
	TIME
	WHO
$

TYMEX:	SKIPA	T2,[TRO T1,PVTYMX]
PDP10:	MOVE	T2,[TRZ T1,PVTYMX]
	HRROI	T1,GETPRV
	GETTAB	T1,		;GET CURRENT PRIVILEGE
	JRST	EX
	XCT	T2		;TURN TYMEX BIT ON OR OFF
	TRZ	T1,PVGEX	;MAKE SURE GE BIT IS OFF
	SETPRV	T1,		;SET NEW PRIVILEGE
	JRST	EX
;CHECKS IF END OF STORED STRING - IF SO TYPES STRING POINTED TO IN T4
;AND SETS PROMPT FLAG
PROMPT:	PUSHJ	P,SCANS	 ;GET TERM. CHAR.
	TRZ	FL,PRMPTF	;CLEAR FOR POS. PROMPT
	MOVE	T2,SAVCHR	;GET SAVED CHAR. TO CHECK FLAGS
	TLNN	T2,TERMF	;TERMINATION FLAG
	POPJ	P,		;NOT SET
	TRNE	IOPNT,-1
	JRST	SYNERR		;CAN'T PROMPT WITHIN COMMAND FILE
	OUTSTR	(T4)		;TYPE PROMPT MESSAGE
	PUSHJ	P,GSTRN	 ;GET NEW STRING
	TRO	FL,PRMPTF	;SET FLAG
	POPJ	P,
OCTTYP:	MOVEI	T3,10	;SET BASE TO EIGHT
	JRST	RDXTYP
RADX10:	MOVEI	T3,12	;BASE 10
RDXTYP:	PUSH	P,T2	;SAVE FOR TIME
	PUSHJ	P,PRTDIG
	POP	P,T2
	POPJ	P,0
PRTDIG:	IDIV	T1,T3
	HRLM	T2,0(P)	 ;SAVE DIGIT IN STACK
	SKIPE	T1		;CK IF DONE
	PUSHJ	P,PRTDIG	;NO, GET NEXT DIGIT
	HLRZ	T1,0(P)	 ;TAKE DIGITS OFF STACK
	ADDI	T1,"0"		;CHANGE TO ASCCI
	OUTCHR	T1
	POPJ	P,0
TPSIX:	PUSH	P,T3		;SAVE A COUPLE REG.
	PUSH	P,T2
	SKIPE	T3,1(T1)	;IF 0,TREAT 1ST AS LAST
	JRST	TPS1
	MOVE	T3,(T1)
TPS:	JUMPN	T3,TPS2
	POP	P,T2
	POP	P,T3
	POPJ	P,
TPS2:	MOVEI	T2,0
	LSHC	T2,6
	ADDI	T2,40
	OUTCHR	T2
	JRST	TPS
TPS1:	MOVEI	CS,6
	MOVE	T2,(T1)
TPS3:	MOVEI	T1,0
	LSHC	T1,6
	ADDI	T1,40
	OUTCHR	T1
	SOJG	CS,TPS3
	JRST	TPS2

CLUD:	CLOSE	RFL,		;CLOSE USER DIR. FILE
	STATZ	RFL,740000
	JRST	READER
	RELEAS	RFL,
	POPJ	P,0
DECLARE:	TRO	FL,PIPF	 ;SET PIP OUTPUT FLAG
	MOVEI	FLP,0		;USED FOR PROTECT BITS
	PUSHJ	P,SCANS	 ;CK IF PROMPTING DESIRED
	MOVE	CS,SAVCHR
	TLNN	CS,TERMF	;IF TERMF, THEN END AND NEED PROMPT
	JRST	DECL2		;NO PROMPT
	MOVE	T7,[12,,16]	;MONITOR TABLE 16, ENTRY 12
	GETTAB 	T7,		;GETS STANDARD FILE PROTECTION
	MOVE	T7,[047000,,0]	;JUST IN CASE OF FAILURE
	PUSHJ	P,GETPRT	; GET STD. PROTECTION FROM MONITOR
	MOVEI	T1,[ASCIZ /ALLOW PRIVATE:
/]
	PUSHJ	P,SDECL	 ;GET PRIVATE PROTECT BITS
	MOVE	T6,%PRPRT	;PRIVATE PROTECTION
	LSH	T6,6		;POS. FOR MERGE
	IOR	FLP,T6
	MOVEI	T1,[ASCIZ /ACCOUNT:
/]
	PUSHJ	P,SDECL
	MOVE	T6,%ACPRT	;STANDARD ACCT PROTECTION
	LSH	T6,3
	IOR	FLP,T6
	MOVEI	T1,[ASCIZ /PUBLIC:
/]
	PUSHJ	P,SDECL
	MOVE	T6,%PUPRT		;STND BITS FOR PUBLIC
	IOR	FLP,T6
	MOVSI	T1,TERMF
	MOVEM	T1,SAVCHR	;FAKE OUT PROMPT
DECL1:	MOVEI	T4,[ASCIZ /FILE(S): /]
	PUSHJ	P,PROMPT
	PUSHJ	P,SPREN
	TLO	FL,RENTSW	;SET RENAME SW
	PUSHJ	P,STTYMX	;SET TYMEX
	JRST	DOFL

SPREN:	MOVEI	T3,OUTDIR	;PREPARE TO OUTPUT IN RENAME FORMAT
	MOVEI	T1,"<"
	PUSHJ	P,OUTDIR
	MOVE	T1,FLP		;ACCUMULATED PROTECT BITS
	PUSHJ	P,OUTNUM	;OUTPUT IN DECIMAL FOR DIRIT
	MOVEI	T1,">"
	JRST	OUTDIR
DECL2:	MOVEI	T4,0		;ACCUM. BITS HERE
	MOVEI	T5,3		;3 FIELDS
	PUSHJ	P,IDP1		;GET PROT. BITS
	MOVE	FLP,T4
	JRST	DECL1

SDECL:	MOVEI	T6,7		;START WITH NOTHING
	OUTSTR	(T1)
	MOVEI	T1,[ASCIZ /	MODIFY? /]
	PUSHJ	P,YN
	JRST	SDM
	MOVEI	T1,[ASCIZ /	READ(RD)? /]
	PUSHJ	P,YN
	JRST	SD4
	MOVEI	T1,[ASCIZ /	RUN(RUN)? /]
	PUSHJ	P,YN
	JRST	SD5
	MOVEI	T1,[ASCIZ /	LOOKUP(LK)? /]
	PUSHJ	P,YN
	JRST	SD6
	OUTSTR	[ASCIZ /	NOTHING(NO)
/]
	JRST	CPOPJ1
SDM:	MOVEI	T1,[ASCIZ /	RENAME & DELETE(ALL)? /]
	PUSHJ	P,YN
	JRST	SD0
	MOVEI	T1,[ASCIZ /	CHANGE PROT.(CP)? /]
	PUSHJ	P,YN
	JRST	SD1
	MOVEI	T1,[ASCIZ /	UPDATE(UPD)? /]
	PUSHJ	P,YN
	JRST	SD2
	OUTSTR	[ASCIZ /	APPEND(AP)
/]
	JRST	SD3
SD0:	SUBI	T6,1
SD1:	SUBI	T6,1
SD2:	SUBI	T6,1
SD3:	SUBI	T6,1
SD4:	SUBI	T6,1
SD5:	SUBI	T6,1
SD6:	SUBI	T6,1
	JRST	CPOPJ1

YN:	OUTSTR	(T1)
YN4:	PUSHJ	P,GSTRN
YN1:	PUSHJ	P,GETCH
	JUMPE	CS,YN1
	CAIN	C,15
	JRST	YN1
	TLNE	CS,TERMF
	JRST	YN4		;END OF LINE, GET ANOTHER
	HRRZ	C,CS
	SETZB	CS,SAVCHR
	CAIN	C,56		;TEST FOR N
	JRST	CPOPJ1
	CAIN	C,71		;TEST FOR Y
	POPJ	P,0
	CAIE	C,"-"
	JRST	YN5
	POP	P,(P)		;MAKE RETURN GO ONE LOWER
	POPJ	P,0
YN5:	OUTSTR	[ASCIZ/WHAT? /]
	JRST	YN4


;PRINTS PROJECT-PROGRAMMER (ACCOUNT-PROG.) NO
PPN:	MOVEI	T4,[ASCIZ /USER NAME: /]
	PUSHJ	P,PROMPT	;CK IF PROMPT, THEN TYPE
	PUSHJ	P,GTUNO	 ;GET USER NO.
	PUSHJ	P,TPPPN	 ;GO TYPE
	SKIPE	PERFLG		;WERE WE CALLED BY PERFORM?
	OUTSTR	[ASCIZ /
/]
	JRST	EX
;GTUNO: TAKES NAME (read in with SCANW) AND VERIFIES IF VALID
;RETURNS: T3/ PPN
;	T4/ USERNAME PART 1
;	T5/ USERNAME PART 2
;	T1/NMLST INDEX
;	C/ TERMINATOR CHAR FROM SCAN CALL TO READ NAME
;	CS/ TABLE(C)

GTUNO:	MOVEI	T5,0		;IN CASE 6 OR LESS CHARS.
	PUSHJ	P,SCANW	 ;GET FIRST 6
	JRST	GTU1		;FOUND A TERMINATOR
	MOVE	T4,ACCUM	;SAVE FIRST WORD OF NAME
	PUSHJ	P,SCANW
	JRST	GTU2		;A TERM.CHAR.
	PUSHJ	P,GETCH	 ;CK. NEXT CHAR
	JUMPG	CS,SYNERR	;ERROR, MUST BE TERM.
GTU2:	SKIPA	T5,ACCUM	;2ND WORD OF NAME
GTU1:	MOVE	T4,ACCUM
	pushj	p,findun	;go try and find in current list
	 popj	p,		;found it (we just saved a lot of I/O)
	PUSHJ	P,OPUD		;NO MATCH ANYWHERE, HAVE TO TRY THE LUD
	PUSHJ	P,LKLUD	;T1/LOC OF LUD ENTRY NOW IN BUF
	JRST	BADNAM
	PUSHJ	P,CLUD	;CLOSE LUD
	PUSH P,T2
	MOVE T2,NMLSTP	; T2/NMLST INDEX LAST ENTRY PRESENT
	CAIG T2,NMLSTL-1	;SHOW NEW NMLST ENTRY UNLESS FULL
	AOS T2,NMLSTP
	MOVE T3,BUF+LPRV(T1)
	MOVEM T3,LDPRV(T2)
	MOVE T3,BUF+LBITS(T1)
	MOVEM T3,LDBITS(T2)
	MOVE T3,BUF+LDPPN(T1)
	MOVEM T3,PPNS(T2)
	SETZM UFDS(T2)
	MOVEM T4,NAMES1(T2)
	MOVEM T5,NAMES2(T2)
	POP P,T2
	MOVE T1,NMLSTP
	POPJ P,

;;findun: find a user name in in-core table
;;	takes name in t4,t5
;;	 success: direct return, t1=nmlst index, t3=PPN, other acs ok
;;	 failure: skip return, t1 trashed
findun:	move	t1,nmlstp	;get base of name list
	camn	t4,names1(t1)
	came	t5,names2(t1)
	 sojge	t1,.-2		;run along list looking for name
	jumpl	t1,cpopj1	;we didn't find one, skip return
	move	t3,ppns(t1)	;we found it, get return value set
	popj	p,		;return (no skip)

;;tranun: translate a user name into a PPN.
;;	takes name in t4,t5, returns PPN in t3, t1 trashed
;;	causes error on failure
tranun:	pushj	p,findun	;try and find it in table
	 popj	p,		;how about that, we did
	push	p,[3]		;make a lookup block
	push	p,[t4]		;this word points to the name
	push	p,[0]		;don't really want to look anything up
	push	p,[0]		;just want to use LOOKUP to find PPN
	INIT	LOOK,17
	SIXBIT	/DSK/
	XWD 0,0
	HALT	.		;DSK not available(?)
	lookup	look,-3(p)
	skipa	t3,-2(p)	;get converted PPN  (LOOKUP must fail)
	 halt	.		;found file with null name(?)
	sub	p,[xwd 4,4]	;remove the lookup block from the stack
	release	look,
	tlne	t3,-1		;check if ppn was changed
	 popj	p,		;it was, return with it

BADNAM:	OUTSTR	[ASCIZ /NO USER NAMED: /]
	MOVEI	T1,T4
	PUSHJ	P,TPSIX
	JRST	EX

;LOOK UP NAME IN LUD
;EXPECTS NAME IN T4,T5
;FILE MUST BE OPEN
;NO SKIP RETURN IF NOT IN LUD
;T1 RETURNS WITH INDEX INTO BUF
LKLUD:	MOVEM	FL2,SVAC	;SAVE SOME ACCUM.
	MOVE	FL2,[XWD FL2+1,SVAC+1]
	BLT	FL2,SVAC+6
	MOVEI	C,0
	MOVE	T1,[555555555555]
	MOVE	T2,[361275431652]
	MOVE	T3,[612754316523]
	PUSHJ	P,RND
	PUSHJ	P,RND
	PUSHJ	P,RND
	PUSHJ	P,RND
	XOR	T2,T3
	XOR	T1,T2
	TLZ	T2,400000
	IDIVI	T2,^D887
	MOVE	T2,T1
SRUS:	PUSHJ	P,RDBLK
	MOVEI	T1,0
SRUSR:	CAME	T2,BUF+LHUN(T1)
	JRST	NUSER
	AOS	0(P)
LKLUDE:	MOVE	C,[XWD SVAC,FL2]	;RESTORE ACCUM.
	BLT	C,C
	POPJ	P,0
NUSER:	SKIPG	T6,BUF+LDPPN(T1)
	JRST	BLKLNK
	MOVE	T6,BUF+LLINK(T1)
	ANDI	T6,177
	ADD	T1,T6
	JRST	SRUSR
BLKLNK:	JUMPE	T6,LKLUDE	
	MOVE	T3,T6
	JRST	SRUS

RND:	ADD	T2,T4
	ROTC	T4,-22
	MOVEI	CS,5
RND1:	MOVE	T6,T2(C)
	MUL	T6,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM	T7,T3(C)
	AOJE	C,RND2
	MOVNI	C,1
	TRNE	T2,1
	SKIPL	T3
	MOVEI	C,0
	EXCH	T1,T3
RND2:	SOJG	CS,RND1
	POPJ	P,0
TPPPN:	HLRZ	T1,T3		;TYPE NO. IN T3
	MOVE	T4,T3
	PUSHJ	P,OCTTYP
	OUTCHR	[","]
	HRRZ	T1,T4
	JRST	OCTTYP
;ROUTINE OPUD OPENS LUD. DESTROYS T1-T3

OPUD:	PUSH	P,T4
	INIT	RFL,17
	SIXBIT	/SYS/
	XWD	0,0
	EXIT
	MOVE	T1,[SIXBIT /LUD/]
	MOVSI	T2,(SIXBIT /SYS/)
	SETZB	T3,T4
	LOOKUP	RFL,T1
	MESS	<CAN'T OPEN LUD>
	POP	P,T4
	POPJ	P,0

COMMENT ! SCANW -- GET A SIXBIT WORD. USED ONLY BY GTUNO PRESENTLY
!

SCANW:	SETZM	ACCUM	;GATHERS 6 CHARS.
	MOVE	T1,[POINT 6,ACCUM]
	SKIPN	CS,SAVCHR	;USE SAVED CHAR IF ONE
	JRST	SCW1	;NO SAVED, GO GET ONE
	SETZM	SAVCHR	;DONT USE AGAIN
	JRST	.+2	;DONT GET ANOTHER
SCW1:	PUSHJ	P,GETCH
	JUMPLE	CS,SCW3	 ;TERM CHAR
SCW2:	IDPB	CS,T1
	TLNE	T1,770000	;CK IF 6 CHARS. STORED
	JRST	SCW1		;NOT YET
	JRST	CPOPJ1		;SKIP RETURN FOR NO TERM CHAR
SCW3:	CAIE	C,15		;CAR. RET. FOR TERM.
	CAMN	CS,CTBL+12		;CHECK CHAR IN CTBL FOR SPACE
	POPJ	P,0
	CAIE	C,":"
	CAIN	C,";"		;VALID TERMINATOR
	POPJ	P,0
	CAIE	C,","
	CAIN	C,")"
	POPJ	P,0
	SUBI	C,40		;CHANGE TO 6 BIT
	TRNE	C,100		;CK NO. OF BITS
	POPJ	P,0		;MUST BE FUNNY TERM.
	MOVE	CS,C
	JRST	SCW2

COMMENT ! WTBLK  -- FOR MAILBOX CODE. WRITE BLOCK
EXPECTS: T3/BLOCK TO USETO TO
	HED/ IOWD FOR BUF FULL OF OUTPUT STUFF
DESTROYS: NO AC
RETURNS: POPJ
! 

WTBLK:	HRRM	T3,RFLBLK	;NOTE NEW POSITION
	USETO	RFL,1(T3)
	OUTPUT	RFL,HED
	STATO	RFL,740000
	POPJ	P,0
	OUTSTR	[ASCIZ/OUTPUT ERROR/]
	JRST	BYENOW
COMMENT ! RDBLK -- FOR MAILBOX CODE. INPUT A BLOCK INTO BUF
EXPECTS: T3/BLOCK TO USETI TO
!

RDBLK:	CAMN	T3,RFLBLK	;DO WE ALREADY HAVE IT
	POPJ	P,		;YUP,NO WORK
	HRRM	T3,RFLBLK	;NO,NOTE NEW POSITION
	USETI	RFL,1(T3)
	INPUT	RFL,HED
	STATO	RFL,760000
	POPJ	P,0
	MOVSI	T1,-200
	SETZM	BUF(T1)
	AOBJN	T1,.-1
	MOVEI	T1,0		;SW
	POPJ	P,0
DODATE:	DATE	T1,		;GET DATE FROM MONITOR
	PUSHJ	P,TDATE
	TIMER	T1,		;RECOVER TIME IN MILLISEC
	PUSHJ	P,PRTIM1
	JRST	EX

TDATE:	IDIVI	T1,^D31	 ;GET MONTH
	MOVEI	T3,1(T2)
	MOVE	T2,T1
	MOVEI	T1,0
	DIVI	T1,^D12	 ;SEPARATE MONTH FROM YEAR
	OUTSTR	MONTH(T2)
	MOVE	T2,T1
	MOVE	T1,T3
	PUSHJ	P,RADX10	;TYPE DAY
	OUTSTR	[ASCIZ /, 19/]
	MOVEI	T1,^D64(T2)	;YEAR 64 IS 0
	PUSHJ	P,RADX10	;TYPE YEAR
	OUTSTR	[ASCIZ/	/]
	POPJ	P,
MONTH:	ASCIZ "JAN "
	ASCIZ "FEB "
	ASCIZ "MAR "
	ASCIZ "APR "
	ASCIZ "MAY "
	ASCIZ "JUN "
	ASCIZ "JUL "
	ASCIZ "AUG "
	ASCIZ "SEP "
	ASCIZ "OCT "
	ASCIZ "NOV "
	ASCIZ "DEC "

PRTIM1:	IDIVI	T1,^D3600		;CHANGE JIFFIES TO MINS.
	IDIVI	T1,^D60	 ;HRS IN T1, MIN IN T2
	PUSHJ	P,RADX10	;TYPE HOURS
	OUTCHR	[":"]
	CAIG	T2,11
	OUTCHR	["0"]
	MOVE	T1,T2
	JRST	RADX10		;TYPE MINUTES AND RETURN
;GET USER FILE DIRECTORY PROTECTION BITS
GETPRT:	LDB	T6,[POINT 3, T7, 2]	
	LSH	T6, 3		; SHIFT'EM INTO PLACE
	MOVEM	T6,%PRPRT#	; PRIVATE PROTECTION BITS
	LDB	T6,[POINT 3, T7, 5]	; NEXT 3 BITS
	MOVEM	T6,%ACPRT#	; ACCOUNT PROTECTION BITS
	LDB	T6,[POINT 3, T7, 8]	; LAST 3 BITS
	MOVEM	T6,%PUPRT#	; PUBLIC PROTECTION BITS
	POPJ	P,0
; SET FILE DIRECTORY CONTROLS
FDC:	MOVE	T7,[13,,16]	; MONITOR TABLE 16, ENTRY 13 
	GETTAB	T7,	;	GETS STANDARD UFD PROTECTION CODE
	MOVE	T7,[754000,,0]	; JUST IN CASE IT FAILS
	PUSHJ	P,GETPRT	;CF. MONITOR FOR UFD PROTECTIONS
	MOVE	T6,%PRPRT	; STANDARD PROTECTION, PRIVATE
	MOVEI	T1,[ASCIZ /ALLOW ACCOUNT:
/]
	PUSHJ	P,SFDC
	MOVE	T7,%ACPRT		;STANDARD OPTIONS
	OR	T6,T7
	LSH	T6,3
	MOVEI	T1,[ASCIZ /PUBLIC:
/]
	PUSHJ	P,SFDC
	MOVE	T7,%PUPRT		;STANDARD PUBLIC PROTECTION
	OR	T6,T7
	PUSHJ	P,OPMFD
	DPB	T6,[POINT 9,T3,8]
	MOVE	T4,[XWD 1,1]
	RENAME	RFL,T1
FDERR:	OUTSTR	[ASCIZ/FD ERROR/]
	JRST	EX

SFDC:	OUTSTR	(T1)
	MOVEI	T7,0
	MOVEI	T1,[ASCIZ /	SHARABLE? /]
	PUSHJ	P,YN
	TRO	T7,4
	MOVEI	T1,[ASCIZ /	NEW FILES? /]
	PUSHJ	P,YN
	TRO	T7,2
	MOVEI	T1,[ASCIZ /	LISTABLE? /]
	PUSHJ	P,YN
	TRO	T7,1
	JRST	CPOPJ1

;PRINT FILE DIRECTORY CONTROLS
PFDC:	PUSHJ	P,OPMFD
	MOVEI	T1,[ASCIZ /
ACCOUNT:	/]
	LSHC	T2,6
	PUSHJ	P,TFDC
	MOVEI	T1,[ASCIZ /
PUBLIC:	/]
	LSHC	T2,3
	PUSHJ	P,TFDC
	JRST	EX

TFDC:	TRNN	T2,7
	POPJ	P,
	OUTSTR	(T1)
	TRNE	T2,4
	OUTSTR	[ASCIZ/SHARABLE /]
	TRNE	T2,2
	OUTSTR	[ASCIZ/NEW FILES /]
	TRNE	T2,1
	OUTSTR	[ASCIZ/LISTABLE/]
	POPJ	P,0

OPMFD:	INIT	RFL,17
	SIXBIT	/DSK/
	0
	HALT
	MOVE	T1,USRPPN
	MOVSI	T2,(SIXBIT /UFD/)
	MOVEI	T3,0
	MOVE	T4,[XWD 1,1]
	LOOKUP	RFL,T1
	JRST	FDERR
	POPJ	P,
;HANDLE VARIOUS EDITOR-TYPE COMMANDS

EDITOR:	TLNN	FL,TYMX
	JRST	EDIT10		;IN PDP MODE, THIS CALLS EDIT10
	SETOM	EDCMND		;TYMEX MODE, START EDITOR AT NORMAL START ADDRESS
	PUSH	P,JDONE1	;DIDDLE RETURN ADDRESS TO AVOID PLAYING WITH ARGUMENTS
	JRST	MODIFY

VUE:	MOVSI	T1,'VUE'	;GET FILENAME TO RUN
	JRST	EDFIN		; AND ACT LIKE EVERYONE ELSE

MAKE:	TRO	FL,CREATF	;A CREATE-STYLE COMMAND
TECO:	MOVE	T1,[SIXBIT/TECO/] ;YES, SOME PEOPLE USE THIS EDITOR
	JRST	EDFIN

CREATE:	TRO	FL,CREATF
	TLNN	FL,TYMX	;CHOOSE APPROPRIATE EDITOR FOR MODE
EDIT10:	SKIPA	T1,[SIXBIT/EDIT10/] ;A PDP HACK OR 10EDIT COMMAND
MODIFY:	MOVE	T1,[SIXBIT/EDITOR/] ;A TYMHACK
EDFIN:	MOVEM	T1,PCNAM	;SAVE HIS EDITOR
	TRO	FL,EDITF
	POPJ	P,
;FLAGS IN LH OF FL FOR EDITING
SQFLG==1	;/S FOR EDIT10
RFLG==2	 ;READ ONLY (/R)

DOEDIT:	PUSHJ P,SCAN	;START ON THE FILE NAME
DOEDT1:	PUSHJ P,GETNAM
EDRS:	PUSHJ	P,SCAN
	CAIE	C,"/"
	JRST NOEDSW
	PUSHJ P,SCAN
	TRNN FL,IDF
	JRST SYNERR
	MOVE T1,[XWD -EDSWL,EDSWT]
	PUSHJ P,SWSCAN
	JRST UNRECS
	JFCL
	TLO FL,@EDSWT2-EDSWT(T1)
	JRST EDRS
NOEDSW:	SKIPE SVDEV	;DEVICE IS ILLEGAL
	JRST	SYNERR
	MOVEI	T3,OUTEDT
	MOVEI	T1," "		;COMMAND FOR DREDIT
	PUSHJ	P,OUTEDT	;OUTPUT THE S
	MOVEI T4,0
	PUSHJ P,CMNO	;OUTPUT THE NAME
	MOVE T4,[XWD -EDSBL,EDSBT]
	PUSHJ P,SWBITS
	TLNN FL,(T2)
	TRNE	FL,CREATF	;EDIT OR CREATE?
	JRST	DOEDT3		;CREATE (OR MAKE)
DOEDP:	PUSHJ	P,OUCRLF	;EDIT (OR TECO) - OUTPUT CRLF
DOEDT2:
	CAIE C,"%"
	JRST NOCOMS
RCOM:	PUSHJ P,GETCH
	TLNN CS,TERMF	;THE END, GET CRLF AND GO
	CAIN C,"%"	;START OF ANOTHER COMMAND
	JRST DOEDP	;THIS WILL PUT OUT CRLF AND READ MORE
	MOVE T1,C	;PUT IT OUT
	PUSHJ P,OUTEDT
	JRST RCOM
NOCOMS:	TLNN CS,TERMF
	JRST SYNERR
	MOVEI T1,0
	PUSHJ P,OUTEDT
	PUSHJ P,CHKEDT
		JRST DONE	;GO GET IT LOADED

DOEDT3:	MOVEI	T1,175		;OLD ALTMODE
	PUSHJ	P,OUTEDT	;ENDS CREATE OR MAKE COMMAND
	JRST	DOEDT2

DEFINE TABLE<
SWITCH SEQUENCE,SQFLG
SWITCH READ,RFLG
>
TBGEN (EDSWT,EDSWL,EDSWT2)
EDSBT:	SBTS R,RFLG
	SBTS S,SQFLG
EDSBL==.-EDSBT
;FLAGS IN LH OF FLP(PERM) AND LH OF FLT(TEMP)
;FOR SPECIAL LISTER SWITCHES
PFLG==1	 ;FOOTRAN TYPE OUTPUT /FOOTRAN
LFLG==2	 ;CASE CONTROL /CASE
QFLG==4	 ;QUESTION MARK CONTROL /QUESTION
HFLG==10	;HEADER CONTROL /HEADER
NFLG==20	;SEQUENCE NUMBER PRINTING /NOSEQUENCE
SFLG==40	;SKIP CONTROL CHRS. /NOSKIPCONTROL
DFLG==100	;MULTI LINE /DOUBLE /MULTILINE
MFLG==200	;SET M SWITCH(/LOL) 
JFLG==400	;SET J SWITCH(/NOFULL)
LIMSW==1000	;IMEDIATE MODE SWITCH
OFLG==2000	;SMALL PRINTER PAPER /SMALL
GFLG==4000	;PAGED TTY OUTPUT /PAGED
IFLG==10000	;CHEAP HEADING /CHEAD
EFLG==20000	;COUNT PAGES /COUNT
AFLG==40000	;ONE NUMBER PAGE SCHEME /ONENUM
%BFLG==100000	;SET PAGE SIZE /SIZE NN
KFLG==200000	;SET K SWITCH(/NOFULL)
REFLAG==400000	;SET R SWITHC (/RESTART)

;ENTRIES IN NUMBER TABLE
SIZEP==1
LOLS==2		;/LOL SWITCH
REST==3		;/RESTART SWITCH
LINES==4	;MUST BE LAST ENTRY
;NOTE THAT LINES MUST BE THE LAST ENTRY IN THE TABLE BECAUSE
;THE IDIOT WHO CODED THIS SECTION OF RPG USES LINES AS A 
;CONSTANT FOR A SCAN LOOP.....
;ALSO KEEP IN ORDER TABLE AT LOCATION	SPSTB

ARRAY PTAB,TTAB[LINES+1]

PRINT:	SKIPA T2,[SIXBIT /LPT/]
TYPR:	MOVSI T2,'TTY'
	MOVSI FLP,QFLG+HFLG
	JRST LSTST
LISTR:	MOVSI T2,'LPT'
	MOVSI FLP,QFLG
LSTST:	MOVEM T2,LISDEV#
	MOVE	T3,[SIXBIT/LISTER/]
	MOVEM	T3,PCNAM	;...
LSTLP1:	MOVSI T2,'DSK'
	MOVEM T2,LOKNAM
	TRO	FL,PIPF ;IF IT'S PIP, ALLOW *.MAC, ETC.
	MOVEI	T3,LSTEOF	;LOC OF LISTER EXIT ROUTINE
	MOVEM	T3,EOFLAB	;GOES TO INDIRECT PTR IN RELTAB
LSTLP:	PUSHJ P,SCAN	;GET NAME
	TLNE	FL,NEDCMA	; A COMMA TO SEPARATE FILES?
	PUSHJ	P,PUTCMA	;YES, WRITE IT OUT.
LSTLPP:	CAIN C,"/"
	JRST PLSTSW
	PUSHJ P,GETNAM
	MOVEI T3,OUTLST
	SKIPN T2,SVDEV
	MOVE T2,LOKNAM	;USE PREV NAME IF NO NEW NAME
	MOVEM	T2,LOKNAM	;KEEP DTA NAME AROUND FOR MORE FILES
	MOVEM T2,SVDEV
	MOVEI T4,0
	TLON FL,NEDCMA	;FIRST NAME?
	SKIPE OUTDEV	;NO, IS THERE A SPECIAL OUTPUT DEV?
	JRST LSTNF	;YES
	CAIE C,"_"	;NOT YET, CHECK FOR _ OR =
	CAIN C,"="
	JRST [	PUSHJ P,CMNO	;NAME FOLLOWED BY _ OR =, OUTPUT THE NAME
		MOVEI T1,"_"
		PUSHJ P,OUTLST	;AND A _
		PUSHJ P,SCAN	;SCAN PAST _ OR =
		SETOM	OUTDEV#	;SPECIAL OUTPUT DEVICE
		TLZ	FL,NEDCMA ;TURN OFF THE SPURIOUS BIT
		JRST LSTLP1]	;AND GO FOR NEXT NAME
	MOVE T2,LISDEV
	HRRI T2,':_ '	;FIRST NAME NOT FOLLOWED BY _ OR = SO MUST
	PUSHJ P,OUTSIX	;BE USING DEFAULT DEVICE - GIVE IT TO LISTER
LSTNF:	PUSHJ P,CMNO	;OUTPUT NAME
	MOVE FLT,FLP	;SET TEMPS FROM PERMS
	MOVE T1,[XWD PTAB,TTAB]
	BLT T1,TTAB+LINES
	PUSHJ P,SCAN
TSWRT:	CAIN C,"/"
	JRST TLSTSW
	MOVEI T3,OUTLST
	MOVE T4,[XWD -LSWBTL,LSWBTB]
	PUSHJ P,SWBITS
	TLNN FLT,(T2)
	MOVEI T4,LINES
NXSLC:	TLNN FLT,@SPSTB-1(T4)	;IS BIT ON
	JRST NOSPC	;NO
	MOVEI T1,"/"
	PUSHJ P,OUTLST
	MOVE T1,TTAB(T4)
	PUSHJ P,OUTNUM
	HLLZ T2,SPSTB-1(T4)
	PUSHJ P,OUTSIX	;THE SWITCH
NOSPC:	SOJG T4,NXSLC
	CAIE C,"("
	JRST ENDLST
	SKIPA	;PASS PAGE INFO
LST1:	PUSHJ P,GETCH
	MOVE T1,C
	PUSHJ P,OUTLST
	CAIE C,")"
	JRST LST1
	PUSHJ P,SCAN
ENDLST:	TLNE	CS,TERMF	;A LINE-FEED?
	JRST	LSTLP	;YES, START AGAIN FROM THE TOP
	CAIE	C,54	;NO, WELL THEN.. A COMMA?
	JRST	SYNERR	;NOPE.	HE LOSES.
	JRST	LSTLP	;START AGAIN
LSTEOF:	PUSHJ	P,OUCRLF	;ADD CRLF TO COMMAND
	SKIPE	PERFLG		;WERE WE CALLED BY PERFORM?
	PUSHJ	P,PERFOO	;YES, WRITE OUT PERFOR!

	PUSHJ	P,CHKLST
	JRST DONE1

PUTCMA:	MOVEI	T1,","
	JRST	OUTLST		;WRITE OUT A COMMA

DEFINE SPMK (A,B)
<<SIXBIT !A!>+B>
;THIS TABLE MUST BE IN THE SAME ORDER AS THE NUMBER TABLE
SPSTB:	SPMK B,%BFLG
	SPMK M,MFLG	;/LOL SWITCH(/M)
	SPMK R,REFLAG	;/RESTART SWITCH (/R)
	SPMK D,DFLG	;MUST BE LAST
	SPMK B,%BFLG	;/SIZE SWITCH

OUTNUM:	IDIVI T1,^D10	;RECOGNIZE THIS??
	HRLM T2,(P)
	SKIPE T1
	PUSHJ P,OUTNUM
	HLRZ T1,(P)
	ADDI T1,"0"
	JRST (T3)
PLSTSW:	PUSHJ P,LSTSW
	TLZ FLP,(T4)
	MOVSS T4
	TLO FLP,(T4)
	MOVEM T2,PTAB(T3)
	JRST LSTLPP

TLSTSW:	PUSHJ P,LSTSW
	TLZ FLT,(T4)
	MOVSS T4
	TLO FLT,(T4)
	MOVEM T2,TTAB(T3)
	JRST TSWRT

LSTSW:	PUSHJ P,SCAN
	TRNN FL,IDF
	JRST SYNERR
	MOVE T1,[XWD -LLG,LSTBL]
	PUSHJ P,SWSCAN
	JRST UNRECS
	JFCL
	SETZB T2,T3
	MOVE T4,LSTB2-LSTBL(T1)
	TLNE T4,LIMSW
	JRST (T4)
	JRST SCAN

DEFINE TABLE
<SWITCH FORTRAN,<XWD PFLG,0>
SWITCH NOFORTRAN,PFLG
SWITCH NOCASE,<XWD LFLG,0>
SWITCH FULLCHARACTERSET,<XWD JFLG,KFLG>
SWITCH NOFULLCHARACTERSET,<XWD KFLG,JFLG>
SWITCH NORMALCHARACTERSET,<XWD 0,JFLG+KFLG>
SWITCH CASE,LFLG
SWITCH NOQUESTION,<XWD QFLG,0>
SWITCH QUESTION,QFLG
SWITCH SINGLE,DFLG
SWITCH DOUBLE,<XWD LIMSW,DOUBLE>
SWITCH MULTISPACE,<XWD LIMSW,MULTI>
SWITCH HEADING,HFLG
SWITCH NOHEADING,<XWD HFLG,0>
SWITCH SEQUENCE,NFLG
SWITCH NOSEQUENCE,<XWD NFLG,0>
SWITCH SKIPCONTROL,<XWD SFLG,0>
SWITCH NOSKIPCONTROL,SFLG
SWITCH SMALL,<XWD OFLG,0>
SWITCH LARGE,OFLG
SWITCH PAGED,<XWD GFLG,0>
SWITCH NOPAGE,GFLG
SWITCH CHEAD,<XWD IFLG,0>
SWITCH NOCHEAD,IFLG
SWITCH COUNT,<XWD EFLG,0>
SWITCH NOCOUNT,EFLG
SWITCH ONENUM,<XWD AFLG,0>
SWITCH TWONUM,AFLG
SWITCH NOONENUM,AFLG
SWITCH SIZE,<XWD LIMSW,DSIZ>
SWITCH LOL,<XWD LIMSW,LOLER>
SWITCH RESTART,<XWD LIMSW,RESTER>
SWITCH RUN,<XWD LIMSW,SETRUN>
>
TBGEN (LSTBL,LLG,LSTB2)
LSWBTB:	SBTS P,PFLG
	SBTS L,LFLG
	SBTS Q,QFLG
	SBTS H,HFLG
	SBTS N,NFLG
	SBTS S,SFLG
	SBTS O,OFLG
	SBTS G,GFLG
	SBTS A,AFLG
	SBTS E,EFLG
	SBTS I,IFLG
	SBTS J,JFLG
	SBTS K,KFLG
LSWBTL==.-LSWBTB
DSIZ:	PUSHJ	P,STARGS
;ROUTINE FOR /SIZE SWITCH
	TRNN	FL,NUMFS
	JRST	SYNERR
	MOVE	T2,NUMAC
	MOVSI	T4,%BFLG
	MOVEI	T3,SIZEP
	JRST	FINPRS

MULTI:	PUSHJ P,STARGS
	TRNN FL,NUMFS
	JRST SYNERR
	MOVE T2,NUMAC
MULTIC:	MOVSI T4,DFLG
	MOVEI T3,LINES
	JRST FINPRS

DOUBLE:	MOVEI T2,1
	TLZ FL,PARFLG
	JRST MULTIC

;CODE TO HANDLE THE /LOL SWITCH
LOLER:	PUSHJ	P,STARGS	;SET UP ARGUMENTS
	TRNN	FL,NUMFS	;SAY WE ARE SCANNING FOR A NUMBER
	JRST	SYNERR		;NO -- BAD
	MOVE	T2,NUMAC
	MOVSI	T4,MFLG		;SAY WHICH FLAG TO SCAN FOR IN TBL
	MOVEI	T3,LOLS		;TABLE ENTRY #
	JRST	FINPRS		;FINISH NUMBER SCAN

;CODE TO HANDLE THE /RESTART SWITCH
RESTER:	PUSHJ	P,STARGS
	TRNN	FL,NUMFS
	JRST	SYNERR
	MOVE	T2,NUMAC
	MOVSI	T4,REFLAG
	MOVEI	T3,REST
	JRST	FINPRS
OUCRLF:	MOVEI	T1,15	;CARRIAGE RETURN
	PUSHJ	P,0(T3)	 ;TO CURRENT OUTPUT FILE
	MOVEI	T1,12		;LINE FEED
	JRST	0(T3)		;TO OUTPUT FILE
;DATA STORAGE ASSIGNMENTS

PDP:	IOWD	PDL,PDLB		;INITIAL PDL POINTER

INTEGER USRPPN,SAVPPN,SAVCHR,JOBNAM
INTEGER CORTOP,CORT1,NUMAT
INTEGER NAMCT,NAMPT,SVJBFF,NMLSTP,DEFPPN

array accum[2]			;we may collect two-word idents
ARRAY SVDEV,SVNAM,SVEXT,SVPPN[NFILE]
ARRAY PDLB[PDL+1],BUF[200],SVAC[20]
ARRAY TMPFIL[2]

	Reloc	; 0
	Var				; All variables defined by #
	Reloc	; 400000


	END
    d_ 3'