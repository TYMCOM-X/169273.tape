TITLE DISASM
NOLIT
XALL

F=0
F.NID==200000	F.FIRS==100000
A=1	B=2	C=3	D=4
T=5	T1=6
PT=7	PT1=10
R=11	S=12
CH=13
TOK=14
TYP=15
FS=16
P=17
OPDEF CALL [PUSHJ P,]
OPDEF RET [POPJ P,]

LOC 1000
EOFF:	0
IBUF:	BLOCK 3
OBUF:	BLOCK 3
LOC:	0
HPOS:	0
WDLEN== =120	;LENGTH OF WORD
LINLEN== =70	;NUMBER OF CHARACTERS TO PRINT PER OUTPUT LINE
ADRPTR:	0
FLDPTR:	BLOCK WDLEN
FLDLEN:	0
MAPTBL:	BLOCK	4000
MAPEND:
FLDBUF:	BLOCK 30
PDL:	-20,,.
	BLOCK 20
ZZ==<377777,,777777>
MASK:	-1
REPEAT 43,<
ZZ
ZZ==ZZ/2
>

REPEAT 0,<

THIS PROGRAM DISASSEMBLES MICROCODE ASSEMBLER OUTPUT.

THE ASSEMBLER OUTPUT IS ASSUMED TO CONSIST
OF TWO SECTIONS, THE FIRST BEING A LIST OF FIELD DEFINIIONS
AND SYMBOLIC NAMES FOR THE VALUES THE FIELD MAY ASSUME, THE SECOND
BEING THE ACTUAL MICROCODE.  THE HACKS IN THE SCANNER AND
PARSER ARE DUE TO THE FACT THAT THE LANGUAGE IS CONTEXT
SENSITIVE.

DATA STRUCTURES
  FIELD DESCRIPTORS, ONE PER FIELD:
  FLDPTR INDEXED BY THE LOWER BOUND OF A FIELD CONTAINS
  A LIST SORTED DE DECREASDEG ORDER OF UPPER FIELD BOUND OF
  FIELD DESCRIPTORS FOR ALL FIELDS WITH THE LOWER BOUND.
    WORD 0: BITS 0-8, LOWER BOUND OF FIELD
	    BITS 9-17, UPPER BOUND OF FIELD
	    RH: ADDRESS OF FIELD NAME
   WORD 1:  LH: NEXT FIELD DESCRIPTOR
	    RH: POINTER TO TREE OF FIELD VALUE DESCRIPTORS
  FIELD VALUE DESCRIPTOR, ONE PER EACH VALUE OF FIELD:
    WORD 0: LH: LINK TO TREE WITH VALUES GREATER THAN THIS
	    RH: LINK TO TREE WITH VALUES LESS THAN THIS
    WORD 1: LH: VALUE OF FIELD
	    RH: ADDRESS OF NAME

>

START:	RESET
	MOVE P,PDL
	SETZM	MAPTBL		;ZERO OUT THE MAPTABLE
	MOVE	T,[MAPTBL,,MAPTBL+1]
	BLT	T,MAPEND-1	;MAPEND-1 = LAST WORD OF MAPTBL
	OUTSTR	[ASCIZ /
KS-10 Microcode disassembler V1.0
/]
	CALL INI
	CALL PARFLD
	CALL PARCOD
	CALL PAREOF
	CALL DONE
	CALL MAPOUT
	EXIT

INPFIL:	'KS10  '
INPEXT:	'ULD   '
	OCT 0,0
OUTFIL:	'KS10  '
OUTEXT:	'MIC   '
	OCT 0,0

O6BIT:	PUSH	P,1		;PRINT SIXBIT CONTENTS OF 1
	PUSH	P,2
	PUSH	P,3
	MOVE	3,[POINT 7,O6TEXT]
O6LOOP:	MOVE	2,1
	LSH	1,6
	LSH	2,0-=30
	ADDI	2," "		;CONVERT TO ASCII
	IDPB	2,3
	SUBI	2," "
	JUMPN	2,O6LOOP	;IF NOT A 0 CONTINUE
	DPB	2,3
	OUTSTR	O6TEXT
	POP	P,3
	POP	P,2
	POP	P,1
	RET
O6TEXT:	ASCIZ /123456 /

G6BIT:	SETZ	1,
	MOVE	2,[POINT 6,1]
	MOVEI	3,6
G6LOOP:	INCHWL	4
	CAIN	4,12		;LINEFEED
	  JRST	CPOPJ1		;SKIP RETURN ON LINE FEED
	CAIGE	4," "
	  JRST	G6LOOP		;IGNORE CONTROL CHARS
	CAIN	4,"."
	  JRST	CPOPJ		;NON-SKIP RETURN ON "."
	CAIL	4,"a"		;CONVERT TO LOWER CASE
	  SUBI	4,<"a"-"A">
	SUBI	4," "		;CONVERT TO SIXBIT
	IDPB	4,2		;DEPOSIT IN T2
	SOJG	3,G6LOOP	;CONTINUE FOR 6 CHARS
	JRST	CPOPJ		;THEN NON-SKIP RETURN

TYIFIL:	PUSH	P,1
	MOVE	1,INPFIL
	CALL O6BIT
	OUTSTR	[ASCIZ /./]
	MOVE	1,INPEXT
	HLLZ	1,1
	CALL O6BIT
	POP	P,1
	RET

TYOFIL:	PUSH	P,1
	MOVE	1,OUTFIL
	CALL O6BIT
	OUTSTR	[ASCIZ /./]
	MOVE	1,OUTEXT
	HLLZ	1,1
	CALL O6BIT
	POP	P,1
	RET

EAT2LF:	PUSH	P,1
EAT1LF:	INCHWL	1
	CAIE	1,12
	  JRST	EAT1LF
	POP P,1
	RET

INI:
	OUTSTR	[ASCIZ /
File to disassemble [/]
	CALL	TYIFIL
	OUTSTR	[ASCIZ /]: /]
;	INCHWL	1
;	CALL EAT2LF
;	CAIN	1,"Y"
;	  JRST	GOUTFN
;	CAIN	1,"y"
;	  JRST	GOUTFN
;	OUTSTR	[ASCIZ /Enter new input filename: /]
	CALL G6BIT
	  CALL EAT2LF
	JUMPE	1,GOUTFN	;USE DEFAULT
	MOVEM	1,INPFIL
 	OUTSTR	[ASCIZ /Now enter the extention:  /]
	SETZM	INPEXT
	CALL	TYIFIL
	CALL G6BIT
	  CALL EAT2LF
	MOVEM	1,INPEXT
GOUTFN:
	OUTSTR	[ASCIZ /Output file [/]
	CALL	TYOFIL
	OUTSTR	[ASCIZ /]: /]
	CALL G6BIT
	  CALL EAT2LF
	JUMPE	1,GOTFNS	;USE DEFAULT
	MOVEM	1,OUTFIL
	OUTSTR	[ASCIZ /Now enter the extention:   /]
	SETZM	OUTEXT
	CALL	TYOFIL
	CALL G6BIT
	  CALL EAT2LF
	MOVEM	1,OUTEXT
GOTFNS:
	OUTSTR	[ASCIZ /
[/]
	CALL TYIFIL		;TYPE INPUT FILE
	OUTSTR	[ASCIZ / ==> /]
	CALL TYOFIL
	OUTSTR	[ASCIZ /]  Okay? /]
	INCHWL	1
	CALL EAT2LF
	CAIN	1,"Y"
	  JRST	GO
	CAIN	1,"y"
	  JRST	GO
	JRST INI
;-----------------------------------------------------------------------
GO:	OPEN [0'DSK   'IBUF]
	 JRST 4,.
	LOOKUP	INPFIL			;['KS10  ''ULD   '00]
	 JRST [OUTSTR [ASCIZ /
Can't find /]
		CALL TYIFIL
		OUTSTR [ASCIZ /.  Bye.../]
		EXIT]
	INBUF 2
;;;	OPEN 1,[0'TTY   'OBUF,,]
	OPEN 1,[0'DSK   'OBUF,,]
	 JRST 4,.
	ENTER 1,OUTFIL			;['KS10  ''MIC   '00]
	 JRST [OUTSTR [ASCIZ /
CAN'T ENTER OUTPUT FILE/]
		EXIT]
	OUTBUF 1,2
	MOVEI T,377777
	CORE T,
	 JRST 4,.
	MOVEI FS,20000
	SETZM ADRPTR
	SETZM EOFF
	MOVE T,[FLDPTR,,FLDPTR+1]
	SETZM -1(T)
	BLT T,FLDPTR+WDLEN-1
	CALL GETCH
	SETZ F,
	CALL SCAN
	RET

DONE:	OUT 1,
	RELEAS
	RELEAS 1,
	OUTSTR [ASCIZ/DONE/]
	RET

;SCANNER
GETCH:	SKIPE EOFF
	 JRST GETCH0
	SOSG IBUF+2
	 IN
	JRST GETCH1
GETCH0:	SETOM EOFF
	MOVEI CH,200
	RET
GETCH1:	ILDB CH,IBUF+1
	JUMPE CH,GETCH
	RET

SCNIGN:	CALL GETCH
SCAN:	JRST @SCNTBL(CH)
T.ID==0	T.NUM==1	T.LT==2	T.GT==3
T.EQL==4	T.OBR==5	T.CBR==6
T.COL==7	T.EOF==10

C.LET==400000	C.DIG==200000	C.BRK==100000
C.IGN==40000
SCNTBL:	REPEAT 40-0+1,<C.IGN,,SCNIGN>
	REPEAT "/"-41+1,<C.LET,,SCNID>
	REPEAT "9"-"0"+1,<C.DIG+C.LET,,SCNNUM>
	C.BRK,,SCNCOL
	C.LET,,SCNID
	C.BRK,,SCNLT
	C.BRK,,SCNEQL
	C.BRK,,SCNGT
	REPEAT "Z"-"?"+1,<C.LET,,SCNID>
	C.BRK,,SCNOBR
	C.LET,,SCNID
	C.BRK,,SCNCBR
	REPEAT 177-136+1,<C.LET,,SCNID>
	C.BRK,,SCNEOF

SCNID:	HRRZI TOK,(FS)
	TLO TOK,440700
SCNID1:	IDPB CH,TOK
	CALL GETCH
	HLL CH,SCNTBL(CH)
	JUMPL CH,SCNID1
	MOVEI TYP,T.ID
	SETZ T,
	IDPB T,TOK
	EXCH FS,TOK
	AOJ FS,
	RET

SCNGT:	SKIPA TYP,[T.GT]
SCNLT:	MOVEI TYP,T.LT
	JRST GETCH
SCNOBR:	SKIPA TYP,[T.OBR]
SCNCBR:	MOVEI TYP,T.CBR
	JRST GETCH
SCNEOF:	MOVEI TYP,T.EOF
	JRST GETCH
SCNCOL:	SKIPA TYP,[T.COL]
SCNEQL:	MOVEI TYP,T.EQL
	JRST GETCH
SCNNUM:	TLNE F,F.NID
	 JRST SCNID
	HRRZI TOK,(FS)
	HRLI TOK,440300
	SETZ T1,
SCNNU1:	IMULI T1,12
	ADDI T1,-"0"(CH)
	IDPB CH,TOK
	CALL GETCH
	MOVSI T,C.DIG
	TDNE T,SCNTBL(CH)
	 JRST SCNNU1
	EXCH FS,TOK
	HRLI TOK,(T1)
	AOJ FS,
	MOVEI TYP,T.NUM
	RET

;SET PT1 TO CONCATINATION OF PT1 AND R.
APPSTR:	JUMPN PT1,APPST1
	MOVEI PT1,(R)
	RET
APPST1:	MOVE T,[440700+FS,,]
	MOVE T1,[440700+PT1,,]
	CALL COPSTR
	MOVEI PT1,40
	IDPB PT1,T
	MOVE T1,[440700+R,,]
	CALL COPSTR
	MOVEI PT1,
	IDPB PT1,T
	MOVEI PT1,(FS)
	ADDI FS,1(T)
	RET
;COPY STRING POINTED AT BY T1 TO STRING POINTED AT BY T.
	IDPB A,T
COPSTR:	ILDB A,T1
	JUMPN A,.-2
	RET
;COMPARE STRINGS IN TOK AND PT, SKIP IF EQUAL
STRCMP:	MOVEI T,(PT)
	HRLI T,440700
	MOVEI T1,(R)
	HRLI T1,440700
STRCM1:	ILDB A,T
	ILDB B,T1
	CAIE A,(B)
	 RET
	JUMPN A,STRCM1
CPOPJ1:	AOS (P)
CPOPJ:	RET

;PARSER
;PARSE IDENTIFIER, EMBEDDED SPACES ALLOWED
PARID1:	SETZ PT1,
PARI10:	CALL PARID
	CALL APPSTR
PARI11:	CAIN TYP,T.ID
	 JRST PARI10
	SKIPE PT1
	 MOVEI R,(PT1)
	RET
;PARSE IDENTIFIER
PARID:	CAIE TYP,T.ID
	 JSP T,ERR
	MOVEI R,(TOK)
	JRST SCAN
;PARSE NUMBER
PARDEC:	CAIE TYP,T.NUM
	 JSP T,ERR
	HLRZ R,TOK
	JRST SCAN
PAROCT:	CAIE TYP,T.NUM
	 JSP T,ERR
	HRRZ R,TOK
	JRST SCAN
;PARSE SMALL OCTAL NUMBER
PAROC1:	CAIE TYP,T.NUM
	 JSP T,ERR
	HLRZ T,TOK
	SETZ R,
	PUSH P,[SCAN]
PARO10:	IDIVI T,12
	JUMPE T,PARO11
	HRLM T1,(P)
	CALL PARO10
	HLRZ T1,(P)
PARO11:	LSH R,3
	ORI R,(T1)
	RET
;PARSE FIELD DESCRIPTIONS
;RETURNS LINKED LIST OF FIELD DESCRIPTORS, SORTED ON ASCENDING
; VALUE OF THE LOWER BOUND OF THE FIELD
PARFLD:	CALL PARID
	CALL PARDEC
	CALL PARID
PARFD1:	CALL PARFL
	SKIPGE ADRPTR
	 HRRZM S,ADRPTR
	LDB B,[331100+S,,]
	MOVEI B,FLDPTR-1(B)
	LDB T,[221100+S,,]
	JRST PARFD3
PARFD0:	LDB T1,[221100+B,,]
	CAIL T,(T1)
	 JRST PARFD2
PARFD3:	MOVE C,B
	HLRZ B,1(B)
	JUMPN B,PARFD0
PARFD2:	HLRZ T,1(C)
	HRLM T,1(S)
	HRLM S,1(C)
	CAIN TYP,T.ID
	 JRST PARFD1
	RET
;PARSE SINGLE FIELD DESCRIPTION
PARFL:	MOVEI PT,[ASCIZ/FIELD/]
	CALL STRCMP
	 JRST [	MOVEI PT,[ASCIZ/ADDRESS/]
		CALL STRCMP
		 JSP T,ERR
		SETOM ADRPTR
		JRST .+1]
	CALL PARID1
	MOVEI S,(FS)
	ADDI FS,2
	HRRZM R,(S)
	CAIE TYP,T.EQL
	 JSP T,ERR
	CALL SCAN
	CAIE TYP,T.LT
	 JSP T,ERR
	CALL SCAN
	CALL PARDEC
	DPB R,[331100+S,,]
	CAIE TYP,T.COL
	 JSP T,ERR
	CALL SCAN
	CALL PARDEC
	DPB R,[221100+S,,]
	CAIE TYP,T.GT
	 JSP T,ERR
	TLO F,F.NID
	CALL SCAN
	TLZ F,F.NID
PARFL2:	CALL PARFV
	 RET
	CALL INSBIN
	JRST PARFL2
;PARSE SINGLE FIELD VALUE
PARFV:	CAIE TYP,T.ID
	 RET
	TLO F,F.NID
	CALL PARID
	TLZ F,F.NID
	MOVEI PT,[ASCIZ/FIELD/]
	CALL STRCMP
	 JRST [	MOVEI PT,[ASCIZ/ADDRESS/]
		CALL STRCMP
		 JRST .+2
		RET]
	 RET
	MOVEI PT1,(R)
	TLO F,F.NID
	CALL PARI11
	TLZ F,F.NID
	MOVEI C,(FS)
	ADDI FS,2
	HRRZM R,1(C)
	CAIE TYP,T.EQL
	 JSP T,ERR
	TLZ F,F.NID
	CALL SCAN
	TLO F,F.NID
	CALL PAROC1
	TLZ F,F.NID
	HRLM R,1(C)
	HRRZI R,(C)
	JRST CPOPJ1
;INSERT FIELD VALUE DESCRIPTOR POINTED AT BY C
;INTO BINARY TREE OF FIELD VALUES OF FIELD DESCRIPTOR S.
INSBIN:	SKIPN T,1(S)
	 JRST [	HRRZM C,1(S)
		SETZM (C)
		RET]
INSBI2:	MOVE T1,T
	HLRZ A,1(T)
	HLRZ B,1(C)
	CAMLE A,B
	 JRST INSBI1
	CAMN A,B
	 RET
	HRRZ T,(T)
	JUMPN T,INSBI2
	HRRM C,(T1)
	RET
INSBI1:	HLRZ T,(T)
	JUMPN T,INSBI2
	HRLM C,(T1)
	RET

;PARSE AND DISASSEMBLE THE CODE
PARCOD:	CAIE TYP,T.OBR
	 RET
	CALL SCAN
	CALL PAROC1
	MOVEM R,LOC
	CAIE TYP,T.CBR
	 JSP T,ERR
	CALL SCAN
	CAIE TYP,T.EQL
	 JSP T,ERR
	CALL SCAN
	CALL PAROCT
	PUSH P,CH
	CALL DOWD
	POP P,CH
	JRST PARCOD

;DISASSEMBLE ONE MICROWORD POINTED AT BY R.  ADDRESS
; OF WORD IS IN LOC.
DOWD:	TLZ F,F.FIRS
	SETZM HPOS
	MOVEI D,(R)
	CALL PRTORG
	CALL PRTDIS
	MOVEI PT,[BYTE (7) 15,12]
	CALL PRTSTR
	RET

PRTORG:	MOVE	T,LOC		;T<-LOC OF CURRENT UWORD
	SKIPE	MAPTBL(T)	;ERROR IF IT OCCUTED ALREADY
	  JRST	[OUTSTR	[ASCIZ/MAP ERROR/]
		 EXIT]
	SETOM	MAPTBL(T)	;SET THE MAP LOC TO ONES
	RET

MAPOUT:	OUTSTR	[ASCIZ /
Do you want to see the microcode memory use map? /]
	INCHWL 1
	CALL EAT2LF
	CAIN	1,"y"
	  JRST	YESMAP
	CAIN	1,"Y"
	  JRST	YESMAP
	RET
YESMAP:	HRLZI	T,MAPTBL-MAPEND	;RIGHT HALF=0,LEFT IS < 0
MAPLUP:	TRNN	T,77		;NOSKIP IF RIGHT 6 BITS ARE 0
	  OUTSTR	[BYTE	(7)	15,12,0]
	SKIPN	MAPTBL(T)	;PUTOUT "." IF UNUSED
	  OUTCHR ["."]
	SKIPE	MAPTBL(T)	;PUT OUT X IF USED
	  OUTCHR	["X"]
	AOBJN	T,MAPLUP
	RET


PRTDIS:	CALL PRTLOC
	CALL PRTWD
	RET
;PRINT LOCATION OF FIELD
PRTLOC:	HRRZ R,ADRPTR
	MOVE S,LOC
	CALL FNDVAL
	 JRST PRTLC1
	MOVEI	CH,";"		;MAKE THE LOC SYMBOL A COMMENT
	CALL PRTCH1
	HRRZ PT,1(R)
	CALL PRTSTR
	MOVEI	PT,[BYTE (7) 15,12]
	CALL PRTSTR
	SETZM	HPOS		;	AND START A NEW LINE
PRTLC1:	MOVE	T,LOC		;T=LOCATION OF UWORD
	MOVEI	CH,10		;CH=RADIX (8) IN CALLING PHASE
	PUSHJ	P,ANYRDX
	MOVEI	CH,":"		;STICK A COLON ON THE END
	CALL PRTCH1
	MOVEI	T,7
	ANDCM T,HPOS
	MOVEI CH,40
	CALL PRTCH1
	SOJGE T,.-1
	RET
	;-------------------------------------------------------
ANYRDX:	IDIV	T,CH		;DIVIDE NUM BY RADIX
	HRLM	T1,0(P)		;PUT REMAINDER NEXT TO RET ADDR
	SKIPE	T		;END CALLING PHASE WHEN NUM = 0
	PUSHJ	P,ANYRDX		;RECUR
	HLRZ	CH,0(P)		;CH=REMAINDERS IN RETURN PHASE
	ADDI	CH,"0"		;CH<=ASCII NUMERAL
	CALL PRTCH1		;PUT IT OUT
	POPJ	P,	;---------------------------------------


;DISASSEMBLE MICROWORD
PRTWD:	MOVSI A,-WDLEN
	CALL PRTFLD
	JUMPLE A,.-1
	RET

;DISASSEMBLE FIELD STARTING AT RH(A).
PRTFLD:	MOVE PT1,[440700,,FLDBUF]
	SETZM FLDLEN
	SKIPN R,FLDPTR(A)
	 AOBJN A,.-1
	JUMPGE A,CPOPJ
	HLRZS R
	LDB T,[221100+R,,]
	HRRZ B,A
	AOJ T,
	SUBI T,(A)
	CALL GETBYT
	HRLS T
	ADD A,T
	TRNN T,-2
	 JUMPE S,CPOPJ
	HRRZ PT,(R)
	CALL CPYSTR
	TRNN T,-2
	 JRST PRTFL2
	MOVEI CH,"/"
	CALL COPCH
	CALL FNDVAL
	 JRST PRTFL1
	HRRZ PT,1(R)
	CALL CPYSTR
PRTFL2:	MOVEI CH,
	IDPB CH,PT1
	MOVE T,FLDLEN
	ADD T,HPOS
	CAIGE T,LINLEN-1
	 JRST PRTFL3
	MOVEI PT,[BYTE (7) ",",15,12]
	CALL PRTSTR
	TLZ F,F.FIRS
	SETZM HPOS
	MOVEI CH,40
	MOVEI T,20
	CALL PRTCH1
	SOJG T,.-1
PRTFL3:	MOVEI CH,","
	TLOE F,F.FIRS
	 CALL PRTCH1
	MOVEI PT,FLDBUF
	JRST PRTSTR
PRTFL1:	MOVE B,S
	CALL COPOCT
	JRST PRTFL2

COPCH:	AOS FLDLEN
	IDPB CH,PT1
	RET
CPYSTR:	HRLI PT,440700
	JRST CPYST1
CPYST2:	AOS FLDLEN
	IDPB CH,PT1
CPYST1:	ILDB CH,PT
	JUMPN CH,CPYST2
	RET
COPOCT:	IDIVI B,10
	JUMPE B,COPOC1
	HRLM C,(P)
	CALL COPOCT
	HLRZ C,(P)
COPOC1:	MOVEI CH,"0"(C)
	AOS FLDLEN
	IDPB CH,PT1
	RET

;GET BYTE WHOSE LEFTMOST BIT IS IN B AND WHOSE
; WIDTH IS IN T FROM 3 WORD GROUP POINTED AT  ABY DA.
GETBYT:	IDIVI B,44
	MOVE T1,C
	ADDI B,(D)
	DMOVE B,(B)
	AND B,MASK(T1)
	ADDI T1,-=36(T)
	LSHC B,(T1)
	MOVE S,B
	RET

;RETURN IN R THE FIELD VALUE DESCRIPTOR FOR THE VALUE IN S
; OF THE FIELD WHOSE DESCRIPTOR IS IN T.
; SINGLE RETURN IF NOT FOUND.
FNDVAL:	HRRZ R,1(R)
	JUMPE R,CPOPJ
FNDVA1:	HLRZ T1,1(R)
	CAIN T1,(S)
	 JRST CPOPJ1
	CAIL T1,(S)
	 JRST FNDVA2
	HRRZ R,(R)
	JUMPN R,FNDVA1
	RET
FNDVA2:	HLRZ R,(R)
	JUMPN R,FNDVA1
	RET

PAREOF:	CALL PARID
	MOVEI PT,[ASCIZ/END/]
	CALL STRCMP
	 JSP T,ERR
	CALL PRTSTR
	RET

ERR:	OUTSTR [ASCIZ/
CAN'T PARSE INPRT FILE.
/]
	JRST DONE

;OUTPUT ROUTINES
PRTCH1:	AOS HPOS
PRTCHR:	SOSG OBUF+2
	 OUT 1,
	IDPB CH,OBUF+1
	RET

PRTOCT:	IDIVI B,10
	JUMPE B,PRTOC1
	HRLM C,(P)
	CALL PRTOCT
	HLRZ C,(P)
PRTOC1:	MOVEI CH,"0"(C)
	JRST PRTCH1

PRTSTR:	HRLI PT,440700
	JRST PRTST1
PRTST2:	AOS HPOS
	CALL PRTCHR
PRTST1:	ILDB CH,PT
	JUMPN CH,PRTST2
	RET

END START
    