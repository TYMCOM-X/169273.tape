require "{}()" delimiters;
define
  ! = {comment},
  nul = {(0&null)},
  stx = {(2&null)},
  etx = {(3&null)},
  eot = {(4&null)},
  enq = {(5&null)},
  ack = {(6&null)},
  bel = {(7&null)},
  bs = {('10&null)},
  ht = {('11&null)},
  lf = {('12&null)},
  vt = {('13&null)},
  ff = {('14&null)},
  cr = {('15&null)},
  so = {('16&null)},
  si = {('17&null)},
  dle = {('20&null)},
  dc1 = {('21&null)},
  dc2 = {('22&null)},
  dc3 = {('23&null)},
  dc4 = {('24&null)},
  nak = {('25&null)},
  syn = {('26&null)},
  etb = {('27&null)},
  can = {('30&null)},
  em = {('31&null)},
  esc = {('33&null)},
  fs = {('34&null)},
  gs = {('35&null)},
  rs = {('36&null)},
  us = {('37&null)},
  crlf = {('15&'12)},
  forever = {while true},
  never = {while false},
  nothing = {},
  upto = {step 1 until},
  downto = {step -1 until},
  repeat (foo) = {_(foo)-1 step -1 until 0},
  assert (be) = {if be then else usererr(0,1,cvps(be)&" failed")},
  ctrl (c) = {(((c) land '37)&null)},
  bit (i) = {(1 lsh (35-(i)))};
let
  r!p = record!pointer;
define
  auxcli (port,e,funct) = {auxclr(port,memory[e],funct)};
define
  lh (i) = {((I) lsh -18)},
  hl (i) = {((I) lsh 18)},
  rh (i) = {((I) land '777777)},
  hr (i) = {((I) land '777777)};

define SetVersion (V) = {
	require V version;
	define Version = {scanc(compiler!banner," "&9,null,"SINK")
		&" version "&cvs(V)}};

