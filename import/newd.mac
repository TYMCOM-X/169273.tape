	TITLE	NEWD UPDATED/REVISED REVERSE DIRECTORY PROGRAM
	SUBTTL	NEWD BY CARL BALTRUNAS     C.U.A. 74-75/GALLAUDET 1977+
	SUBTTL	REVISION HISTORY

;RE-VIZED & OVEHAULED FROM VERSION 3 TO VERSION 4 IN OCTOBER 1977
;ALL PREVIOUS SECTIONS WHICH HAD BEEN EDITED PREVIOUSLY HAD BEEN OBLITERATED
;THUS THE EDIT LEVEL WAS REDUCED TO 0.
;
;VERSION 4 INCLUDED THE ADDITION OF THE MODULE "SCANER" WHICH
;	ALLOWS FOR FULL FILE-SPECIFICATION SCANNING, MULTIPLE FILES, AND FULL
;	WILD-CARDING OF ALL PARTS OF THE FILE-SPEC. (INHIBIT WILD PPN HOWEVER)
;
;   1	NOVEMBER 22,1977 - FIX BUG WHERE  RETURN FROM PPN TYPOUT ROUTINE IN SCANNER
;   2	FIX LINER SO ONLY TYPES DEVICE WHEN NOT TYPING GRAND TOTALS
;   3	ADD BIT TESTING FOR SWITCHES(NOT IMP) HOOKS,  INSTALL DEFAULT OF
;	/NOSCAN SO ONLY CURRENT PATH IS SCANNNED.
;
	SUBTTL	AC DEFINITIONS, FLAGS & SWITCHES

	SEARCH	MACTEN,JOBDAT,UUOSYM
	SALL

	F==0			;AC TO HOLD USER FLAGS
	FS==16			;AC FOR SWITCHES/FLAGS
	T1==1			;SOME TEMPORY AC'S TO USE
	T2==T1+1		;ANOTHER
	T3==T2+1		;DITTO
	T4==T3+1		; "
	NFSTRS==5		;FILE STRUCTURE COUNTER
	PNT==6			;A POINTER TO THE FILE NAME.
	LEVEL==7		;LEVEL OF SFD'S
	USRLVL==10		;ACTUAL USER LEVEL INDEX FOR SFD'S
	NSETS==11		;NUMBER OF SETS TYPED
	NF==12			;NUMBER OF FILES
	NBW==13			;NUMBER OF BLOCKS WRITTEN
	NBA==14			;NUMBER OF BLOCKS ALLOCATED
	LUF==15			;LOOK-UP FAILURE COUNT
	P==17			;PDL POINTER

	CHAN==1		;USE A CHANNEL FOR DIRECTORY I/O

	EXTERNAL	SCANER,SCN$LK,GETWRD,OUTOCT,OUTSIX

;FLAGS USED

	RDP$AL==1B0			;DEVICE ALL: ONLY
	RDP$ED==1B1			;ERSATS DEVICE, ALL OR EQUIVILENT
	RDP$M==1B2			;A MATCH WAS FOUND!
	RDP$FB==1B3			;FIRST-LINE BANNER WANTED
	RDP$LK==1B4			;LOOKUP ERROR FLAG (SET = ERROR)

	RDP$DT==1B18			;DEVICE TYPED BY USER
	RDP$FT==1B19			;FILE TYPED
	RDP$ET==1B20			;EXTENSION
	RDP$ST==3B20			;FILE OR EXTENSION TYPED

	RDP$GT==1B24			;GRAND TOTAL FLAG


;SWITCH SETTINGS - CURRENTLY USE AC FS.

	SW$SCN==1B0			; DO FILESPEC-SCANNING
	SW$WRT==1B1			; BLOCKS WRITTEN
	SW$ALC==1B2			; BLOCKS ALLOCATED
	SW$FST==1B3			; /FAST
	SW$WID==1B4			; /WIDTH
	SW$SUM==1B5			; /SUMMARY

	SW$DFT==SW$WRT!SW$ALC		;DEFAULTS
	SUBTTL	MACRO DEFINITIONS

	VER==4		;VERSION 4
	EDIT==2		;EDIT NUMBER

DEFINE VERSION(VER,EDIT)<
	LOC 137
	BYTE	(3)0(9)<VER>(6)0(18)<EDIT>
	RELOC
>

	VERSION	VER,EDIT	;SETUP VERSION


DEFINE	INC(ADR)<	;;THIS IS AN INCREMENT ROUTINE
IFL	<ADR-20>,<AOJ	ADR,0>
IFG	<ADR-17>,<AOS	ADR>
>;;IF AN AC IT DOES AN AOJ IF A MEMORY IT DOES AN AOS


DEFINE DECR(ADR)<;;DECREMENT AN ADDRESS
IFL <ADR-20>,<SOJ	ADR,0>		;;DECREMENT AN AC HERE
IFG <ADR-17>,<SOS	ADR>		;;DECREMENT MEMORY HERE
>;;FINISH HERE

DEFINE XFR(TO,FROM)<;;ROUTINE TO TRANSFER ONE ADR TO ANOTHER
	MOVE	T1,FROM			;;GET WHERE IT'S FROM
	MOVEM	T1,TO			;;PUT IT WHERE IT GOES
>;;FINISH
	SUBTTL	Initialization section

NEWD:	RESET				;RESET ANY & ALL I/O LINES
	STORE	T1,T2,P,0		;CLEAR AC'S
	MOVE	P,[IOWD 100,PDL]	;SETUP PDL LIST
	SETZM	MORE			;NO-MORE FOR NOW
	SETOM	STRLST			;CLEAR STRLST ON 1ST TRY
	MOVE	FS,[SW$DFT]		;DEFAULT SWITCH SETTINGS

	RESCAN				;SETUP TO READ USER TYPED LINE
NEWD0:	SETZ	T1,			;MAKE SURE WE'RE READY HERE
	PUSHJ	P,GETWRD		;LOOK FOR A WORD (SOMETHING)
;	push	p,t1
;	exch	t1,t2
;	pushj	p,outsix
;	outstr	[asciz\
;\]
;	pop	p,t1
	JUMPL	T1,MAIN0		;HMM--RAN OUT BEFORE WE GOT ONE
	CAIE	T1,'('			;EITHER PAREN IS GOOD
	CAIN	T1,')'			;  FOR A STARTER
	  JRST	MAIN			;SO OFF WE GO.
	CAIE	T1,'-'			;ALSO A DASH OR A PER-CENT
	CAIN	T1,'%'			;  WILL DO.
	  JRST	MAIN			; ...
	HRROI	T1,.GTPRG		;THE PROGRAM NAME IS ALSO A HINT
	GETTAB	T1,			;  AS TO THE UPCOMING WORDS
	  JRST	NEWD0			;(OOPS LOOP AGAIN)
	CAME	T1,T2			;  SKIP IF HE TYPED MY NAME
	  JRST	NEWD0			;(NOTE: THIS WION'T WORK FOR "R","RU","RUN" .EXE)
	SUBTTL	Main Program loop

MAIN:	SETZ	T1,			;CLEAR INPUT FLAG (EOL),, SWITCHES
MAIN0:	PUSHJ	P,SCANER		;READ A FILE SPECIFICATION
	  PJRST	EXIT1.			;ERROR--FINISH UP (IF ANYTHING TO DO)
	MOVEM	T1,MORE			;SET THE MORE-TO-COME FLAG
	MOVE	T1,[35,,LOOK]		;LOOKUP BLOCK FOR FILE-SPEC IF ANY
	MOVE	T2,[^D9,,PATH]		;PATH. BLOCK FROM SCANER
	MOVE	T3,[4,,MASK]		;FILE MASKS
	MOVE	T4,[^D9,,PMASK]		;PATH MASKS
	PUSHJ	P,SCN$LK		;LOOK & SEE WHAT HE TYPED...
	SETZ	T1,			;CLEAR CHECK COUNTER
	MOVEI	T2,.PTMAX		;LENGTH OF PATH BLOCK
	IOR	T1,PMASK-1(T2)		;GET CONTENTS OF PATH MASK
	SOJG	T2,.-1			;LOOP TILL GOT ALL OF THEM
	JUMPN	T1,ERRWLD		;WILD CARDED PPN'S NOT SUPPORTED YET!!!
	MOVEI	T1,35			;GET SIZE OF LOOKUP BLOCK
	MOVEM	T1,DIRECT		;  FOR THE DIRECTORY TO READ
	MOVEI	USRLVL,.PTMAX-.PTPPN	;GET COUNT OF MAX # SFD'S WITH PPN==0
	SKIPN	PATH+.PTPPN(USRLVL)	;SEE HOW MANY BEFORE SFD NAME (IF ANY)
	  SOJG	USRLVL,.-1		;LOOP TILL DONE
	SETZB	NFSTRS,NFSTR		;CLEAR NUMBER OF STRUCTURES
	PUSHJ	P,GETSTR		;LOOP THROUGH UNTIL DONE THIS SET
	SOJ	NFSTRS,			;SUBTRACT ONE
	JUMPE	NFSTRS,EXIT1		;EXIT IF ONLY 1
	TXNE	F,RDP$DT!RDP$AL!RDP$ED	;SEE IF HE TYPED A STRUCTURE...
	  JRST	MAIN1			;YES--SO CANNOT GET SLE ERROR
	SKIPG	NFSTR			;SEE IF ANY STRS IN LIST
	  JRST	ERRSLE			;NO--SEARCH LIST EMPTY
MAIN1:	SKIPGE	NFSTR			;CHECK THIS FOR SINGLE STRS
	  JRST	EXIT1			;  BECAUSE IF NONE -- A MESSAGE WAS ALREADY TYPED
	SKIPG	NFSTRS			;SKIP IF GOOD
	  JRST	ERRNSF			;NO SUCH FILES AS ...

;ALL ERROR MESSAGES ETC, RETURN TO EXIT1 WHEN FINISHED ....

EXIT1:	SKIPE	MORE			;SEE IF ANY-MORE INPUT...
	  JRST	MAIN			;YES--SO TAKE CARE OF IT FIRST
EXIT1.:	SOJ	NSETS,			;ALLOW 1 SET TO BE IGNORED
	SKIPG	NSETS			;SKIP IF ANY FILES FOUND
	  JRST	EXIT2			;ELSE EXIT TO MONITOR WITHOUT MSG
	SKPINC				;DEFEAT ^O
	JFCL
	TXO	F,RDP$GT		;NOW DOING GRAND TOTAL
	OUTSTR	[ASCIZ\Grand \]	;PRINT FIRST PART
	MOVE	NF,TNF			;GET TOTALS
	MOVE	NBW,TNBW		;DITTO
	MOVE	NBA,TNBA		;DONE
	PUSHJ	P,LINER			;PRINT TOTAL ONE-LINER
	OUTSTR	[ASCIZ\

\]					;FINISH
EXIT2:	EXIT	1,			;EXIT TO MONITOR
	JRST	.-1			;KEEP IT UP
	SUBTTL	SECTION TO LOOP THROUGH FILE SPECS & TYPE OUT STUFF

GETSTR:	SETZ	F,			;CLEAR FLAGS IF ANY
	SKIPN	T1,LOOK+.RBDEV		;DID THE USER TYPE A DEVICE?
	  JRST	GETST4			;NO--SO LOOK ON ALL DEVS IN USR LIST
	CAMN	T1,[SIXBIT/ALL/]	;DID WE GEAT AN 'ALL' OR ERSATZ DEV?
	  JRST	GETST0			;SETUP 'ALL' PARAMETERS
	CAMN	T1,[SIXBIT/DSK/]	;S HE ASKING FOR GENERIC DSK?
	  JRST	GETST4			;YES--SO FOOL HIM!
	TXO	F,RDP$DT		;NO---SO SET FLAG
	DEVCHR	T1,			;SEE IF IT'S A DIRECTORY DEVICE
	TXNN	T1,DV.DSK		;   IE. LIKE A DISK DEVICE
	  PJRST	ERRNDD			;NOT A DISK DEVICE
	MOVE	T1,LOOK+.RBDEV		;GET DEVICE NAME
	JRST	GETST6			;AND SKIP TO FILE SETUP PROCEDURE

GETST0:	TXO	F,RDP$AL		;HE TYPED 'ALL:' OR AN ERSATS DEV
	SETZM	STRLST			;  SO CLEAR STARTING STUFF

GETST2:	TXNE	F,RDP$DT		;LOOK TO SEE IF SOMETHING TYPED
	  POPJ	P,			;SOMETHING! SO, HE TYPED ONE HIMSELF
	TXNN	F,RDP$ED!RDP$AL		;ARE WE USING SYSSTR?
	  JRST	GETST4			;NO--SO GO USE JOBSTR
	MOVE	T1,STRLST		;GET LAST SYSTEM STRUCTURE
	SYSSTR	T1,			;GET THE NEXT SYSTEM STRUCTURE
	  PJRST	ERRSUF			;SYSSTR UUO FAILURE
	MOVEM	T1,STRLST		;REMEMBER THIS FOR LATER
	JUMPE	T1,CPOPJ		;RETURN WHEN DONE WITH SYS:
	JRST	GETST5			;CLIP UNIT ID'S & GO
GETST4:	MOVE	T1,[XWD 3,STRLST]	;OPEN UP FOR STRLST/JOBSTR
	JOBSTR	T1,			;GET THE FIRST/NEXT STRUCTURE
	  PJRST	ERRJUF			;JOBSTR UUO FAILURE
	SKIPN	STRLST			;SKIP IF NON-ZERO
	  JRST	GETST2			;GET NEXT STRUCTURE
	SETOM	T1			;SET TO -1
	CAMN	T1,STRLST		;SEE IF -1
	  POPJ	P,			;DONE--OUT OF STRUCTURES
	MOVE	T1,STRLST		;GET THE STRUCTURE NAME
GETST5:	AOS	NFSTR			;COUNT STRUCTURES
	TRZ	T1,7777			;CLEAR ANY '0' "S
GETST6:	MOVEM	T1,DEVBLK		;PUT IT INTO THE DEVICE BLOCK
	MOVEM	T1,DIRECT+.RBDEV	;PUT IT INTO DIRECTORY BLOCK
	HRLZI	T1,(1B0)		;GET THE SIGN BIT
	TXNN	F,RDP$DT		;SEE IF THE USER TYPED A DEVICE
	  IORM	T1,OPNBLK		;NO--SET PHYSICAL BIT
	OPEN	CHAN,OPNBLK		;OPEN A CHANNEL
	  PJRST	ERROPN			;OPEN FAILURE ON DEVICE
	MOVEI	T1,PATH			;GET ADDRESS OF PATH
	MOVEM	T1,DIRECT+.RBPPN	;SET THIS AS DIRECTORY PATH
	MOVE	T1,PATH+.PTPPN(USRLVL)	;GET THIS ITEM
	MOVEM	T1,DIRECT+.RBNAM	;THIS IS THE FILE NAME
	MOVSI	T1,'UFD'		;ASSUME SFD LEVEL OF 0
	JUMPE	USRLVL,.+3		;SKIP NEXT 2 IF .UFD LEVEL
	  MOVSI	T1,'SFD'		;GET EXTENSION
	  SETZM	PATH+.PTPPN(USRLVL)	;   THEN DON'T ZERO THIS WORD!
	MOVEM	T1,DIRECT+.RBEXT	;SET EXTENSION NAME
	MOVE	T1,[1,,1]		;GET MFDPPN JUST IN CASE!
	SKIPN	USRLVL			;  WE NEED IT!
	  MOVEM	T1,PATH+.PTPPN		;SET  IT!
	LOOKUP	CHAN,DIRECT		;LOOKUP THE DIRECTORY
	  PJRST	ERRDNF			;DIRECTORY NOT FOUND ON THIS STRUCTURE
	SETZ	LEVEL,			;NO MATTER WHAT USRLVL, LEVEL=0
	JRST	SETIO			;SKIP INCREMENT ROUTINE
	SUBTTL	Fall through --- setup io & sfdlvl

SFDOPN:	INC	LEVEL			;INCREMENT THE LEVEL COUNTER
	INC	USRLVL			;INCREMENT THE USER LEVEL ALSO
	PUSH	P,PNT			;SAVE THE POINT
	PUSH	P,CMD+1			;PUT THIS AWAY
	PUSH	P,CMD			;SAVE THIS TOO
	PUSH	P,NF			;SAVE THE NUMBER OF FILES
	PUSH	P,NBW			;SAVE THE NUMBER OF BLKS WRIT
	PUSH	P,NBA			;SAVE THE # OF BLKS ALLOCATED
SETIO:	MOVE	T1,DIRECT+.RBNAM	;GET THE NAME FOR THE SFD
	MOVEM	T1,PATH+.PTPPN(USRLVL)	;   LEVEL--PUT SFD IN PATH
	SKIPG	DIRECT+.RBSIZ		;MAKE SURE THERE'S SUBSTANCE THERE
	  JRST	NXTFI1			;NO--SO FORGET ALL OF THIS
	TXO	F,RDP$FB		;SETUP SO FIRST LINE TYPES A BANNER
	MOVE	T1,PNT			;GET THE OLD POINTER VALUE	[10]
	ADDM	T1,.JBFF		;SET THE NEW BUFFER HERE	[10]
	MOVN	PNT,DIRECT+.RBSIZ	;GET THE -WORD COUNT
	HRLM	PNT,CMD			;SETUP BUFFER SPACE PART
	MOVE	PNT,DIRECT+.RBSIZ	;GET THE SIZE AGAIN
	HRRZ	T1,.JBFF		;GET THE ADDRESS FOR FIRST FREE
	HRRM	T1,CMD			;PUT IN THE BUFFER-THING
	MOVEM	T1,BUFLVL(LEVEL)	;PUT THIS ADDRESS HERE
	ADD	T1,PNT			;GET THE ADDITION OF CORE
;[10]	MOVEM	T1,.JBFF		;PUT THIS IN JBFF
	CORE	T1,			;GET THE NEEDED CORE
	  PJRST	ERRNEC			;NOT ENOUGH CORE???
	INPUT	CHAN,CMD		;GET THE UFD CONTENTS
	SUBI	PNT,2			;DECREMENT THE POINTER A BIT
	SETZB	NF,NBW			;CLEAR THE NUMBER OF FILES/BLKS
	SETZ	NBA,			;& NUMBER BLOCKS ALLOCATED
	CLOSE	CHAN,10			;CLOSE THE CHANNEL SO NO PROBLEMS
	AOJ	PNT,			;TEMP ADD TO TEST PNT
	SUBTTL	ROUTINE TO DO EACH FILE & THE ASSOCIATED TYPEOUT

DOFILE:	MOVE	T1,BUFLVL(LEVEL)	;GET THE LOCATION OF BUFFER
	ADD	T1,PNT			;GET THIS TOO
	SKIPN	(T1)			;NOW DO THE SKIP, ETC.
	  JRST	NXTFIL			;GET THE NEXT FILE
	MOVE	T2,(T1)			;GET THE FILE NAME
	MOVEM	T2,DIRECT+.RBNAM	;SAVE THE NAME
	HLLZ	T2,1(T1)		;GET THE EXTENSION
	MOVEM	T2,DIRECT+.RBEXT	;SAVE IT FOR LATER

	TXZ	F,RDP$M			;CLEAR THE MATCH FLAG
	MOVEI	T1,DIRECT		;GET THE NAME -ADDR- TO USE
	PUSHJ	P,CKMASK		;CHECK THE MASK!
	TXNE	F,RDP$M			;IF NO MATCH -- DON'T TYPE FILE
	PUSHJ	P,PRLINE		;PRINT A LINE
	TXZ	F,RDP$LK		;MAKE SURE LOOKUP FLAG IS OFF
	LOOKUP	1,(T1)			;LOOK & SEE IF THE FILE IS THERE
	  PUSHJ	P,[HRRZ	T1,DIRECT+.RBEXT;GET MONITOR ERROR CODE
		TXNE	F,RDP$M		;IF NO MATCH-- NO TYPEOUT
		OUTSTR	@LKPERR(T1)	;TELL WHY NOT FOUND
		TXO	F,RDP$LK	;IN ANY CASE SET LOOKUP ERROR
		POPJ	P,]		;THEN RETURN
	TXNN	F,RDP$M			;IF A MATCH -- SKIP & DO STUFF
	  JRST	SFDBLD			;  ELSE JUST CHECK FOR .SFD
	TXNN	F,RDP$LK		;IF A LOOKUP ERROR DON'T TYPE BLOCKS
	  PUSHJ	P,PBLOCK		;PRINT THE BLOCK SIZE INFO
	SKIPLE	T1,LEVEL		;GET THE LEVEL HERE
	 OUTSTR	[ASCIZ\ *\]		;PRINT THIS IF IN AN SFD
	SOJG	T1,.-1			;LOOP ON THE RIGHT LEVEL
	TXNE	F,RDP$FB		;SEE IF THIS IS FIRST ONE ON LINE
	  PUSHJ	P,FSTBAN		;YES--SO PRINT FIRST (FAST) BANNER
	TXZ	F,RDP$FB		;MAKE SURE IT GET'S CLOBBERED
	OUTSTR	CRLF			;PRINT A CRLF
SFDBLD:	TXNN	FS,SW$SCN		;DOES THE USER WANT TO SCAN?
	  JRST	SFDBL0			; NO--SO DON'T KEEP SCANNING
	TXNE	F,RDP$LK		;SEE IF LOOKUP ERROR
	  JRST	SFDBL0			;YES--SO DON'T TRY TO ACCESS FILE
	MOVSI	T1,'SFD'		;GET SFD IN LEFT HALF
	HLLZ	T2,DIRECT+.RBEXT	;GET THE FILE'S EXTENSION
	CAMN	T1,T2			;SEE IF EQUAL
	PUSHJ	P,SFDOPN		;GO TO SFD ROUTINE
SFDBL0:	CLOSE	CHAN,10			;CLOSE & INHIBIT ACCESSING FILE
NXTFIL:	SUBI	PNT,2			;DECREMENT POINTER
	JUMPGE	PNT,DOFILE		;IF ANOTHER FILE, GO TO IT
	SKPINL				;DEFEAT ^O
	JFCL				;DO IT
	JUMPE	NF,NXTFI1		;IF NONE--DON'T INCREMENT STRUCTURE
	AOJ	NFSTRS,			;ADD 1 TO TOTAL FILE STRS
	OUTSTR	CRLF			;PRINT A CRLF
	AOJ	NSETS,			;COUNT 1 FOR EACH SET
	CAILE	NF,1			;IF LESS THAN OR EQ 1 FILE -- NO ONE-LINER
	  PUSHJ	P,LINER			;PRINT THE ONE-LINER
	ADDM	NF,TNF			;ADD TO THE TOTAL # FILES
	ADDM	NBW,TNBW		;ADD TO TOTAL # BKS WRITTEN
	ADDM	NBA,TNBA		;ADD TO TOTAL # BKS ALLOCATED
NXTFI1:	JUMPN	LEVEL,DECSFD		;DROP A LEVEL ON THE SFD'S
	RELEAS	CHAN,			;RELEASE THE CHANNEL
	JRST	GETST2			;NO--SO LOOP TILL DONE
DECSFD:	SETZM	PATH+.PTPPN(USRLVL)		;KILL THIS LEVEL OF SFD'S
	DECR	USRLVL			;DECREMENT USER INDEX
	DECR	LEVEL
	POP	P,NBA			;RETURN THE BLOCKS ALLOCATED
	POP	P,NBW			;RETURN THE WRITTEN ONES TOO
	POP	P,NF			;ALSO THE NUMBER OF FILES
	POP	P,CMD			;RESTORE THE BUFFER COUNTER
	POP	P,CMD+1			;AND THE NEXT ONE
	POP	P,PNT			;RESTORE THE POINTER
	MOVE	T1,.JBFF		;GET THE BUFFER HEADING [10]
	CORE	T1,			;REDUCE CORE?		[10]
	  OUTSTR	[ASCIZ\
%RDPERC - Error reducing core - continuing
\]
	POPJ	P,			;RETURN TO THE PLACE WHERE


CKMASK:	MOVE	T2,.RBNAM(T1)		;GET THE NAME OF THE FILE
	IOR	T2,MASK+1		;AND USE MASK UPON IT.
	MOVE	T3,LOOK+.RBNAM		;GET NAME TYPED
	IOR	T3,MASK+1		;MASK OUT WORD
	CAME	T2,T3			;SEE IF THEY MATCH
	  POPJ	P,			;NO--SO RETURN
	HLLZ	T2,.RBEXT(T1)		;GET THE EXTENSION FROM THE FILE
	IOR	T2,MASK+2		;MASK OUT WILDCARDS STUFF?
	HLLZ	T3,LOOK+.RBEXT		;GET THE EXTENSION TYPED
	IOR	T3,MASK+2		;MASK OUT THE EXTENSION
	IOR	T3,MASK+2		;   WITH THE EXTENSION MASK
	CAME	T2,T3			;IF NO MATCH--BYE!
	  POPJ	P,			;NO-MATCH, SO RETURN
	TXO	F,RDP$M			;A MATCH! -- SET FLAG
CPOPJ:	POPJ	P,			;THEN RETURN
	SUBTTL	Routine to type out a file-specification

PRLINE:	MOVE	T4,T1			;COPY THE POINTER SO WE MIGHT USE
					;T1 FOR TYPEOUT ROUTINES
	MOVE	T1,.RBNAM(T4)		;GET THE NAME
	PUSHJ	P,OUTNAM		;PRINT THE FILE
	OUTCHR	[40]			;PRINT A SPACE
	OUTCHR	[40]			;PRINT A SPACE
	MOVE	T1,.RBEXT(T4)		;READY FOR PRINTING?
	PUSHJ	P,OUTEXT		;PRINT THE EXTENSION
	OUTCHR	[40]			;PRINT A SPACE
	OUTCHR	[40]			;PRINT A SPACE
	AOJ	NF,			;COUNT FILES ACCEPTED
	MOVE	T1,T4			;RESTORE T1 IN CASE PROGRAM NOT TOO SMART
	POPJ	P,			;RETURN FOR LOOKUP AT USER SITE

PBLOCK:	TXNN	FS,SW$WRT		;PRINT WRITTEN?
	  JRST	PBLOC0			; NO--SEE ABOUT ALLOCATED
	MOVE	T1,.RBSIZE(T4)		;GET THE FILE BLOCK-SIZE
	IDIVI	T1,200			;DIVIDE BY 200 /BLOCKSIZE
	SKIPE	T2			;SKIP IF T2 IS EMPTY
	AOJ	T1,			;INCREMENT FOR BLOCK PORTION
	ADD	NBW,T1			;ADD TO # OF WRITTEN BLOCKS
	MOVEI	T3,5			;WORK WITH 5 CHRS
	PUSHJ	P,OUTDEC		;PRINT A DECIMAL NUMBER
PBLOC0:	TXNN	FS,SW$ALC		;PRINT ALLOCATED?
	  POPJ	P,			;NO!! SO RETURN
	MOVE	T1,.RBALC(T4)		;GET HGHT REL ALLOC BLK
	ADD	NBA,T1			;GET TOTAL ALLOC BLKS
	MOVEI	T3,10			;GET IT WITHIN 10 SPACES
	PJRST	OUTDEC			;PRINT THE NUMBER & RETURN


FSTBAN:	OUTCHR	["	"]		;PRINT A TAB TO ADD SOME DIMENSION
	MOVE	T1,DEVBLK		;GET THE CURRENT DEVICE NAME
	PUSHJ	P,OUTSIX		;AND PRINT IT
	OUTSTR	[ASCIZ\:	\]	;COLON-TAB
	PJRST	PRTDIR			;AND THE USER'S DIRECTORY AT NOW
	SUBTTL	 One-Liner Totals for user

LINER:	OUTSTR	[ASCIZ\Total of \]	;PRINT TOTAL LINE
	MOVE	T1,NF			;GET THE NUMBER OF FILES
	SETZ	T3,			;CLEAR FILLER
	PUSHJ	P,OUTDEC		;PRINT THE FILE NUMBERS
	OUTSTR	[ASCIZ\ Files \]	;PRINT THE FILES
	MOVE	T1,NBW			;GET # BLKS WRITTEN
	SETZ	T3,			;CLEAR FILLER
	PUSHJ	P,OUTDEC		;PRINT THE NUMBER
	OUTSTR	[ASCIZ\ Blks Written \]	;PRINT WRITTEN
	MOVE	T1,NBA			;GET THE #BLKS ALLOC
	SETZ	T3,			;CLEAR FILLER
	PUSHJ	P,OUTDEC		;PRINT THE NUMBER
	OUTSTR	[ASCIZ\ Blks Allocated\];PRINT ALLOCATED
	TXNE	F,RDP$GT		;IF GRAND TOTAL -- NO SKIP
	  JRST	LINER1			;  JUMP TO CRLF INSTEAD
	JUMPE	USRLVL,LINER0		;SKIP IF NO SFD'S
	MOVE	T1,PATH+.PTPPN(USRLVL)	;GET THE SFD NAME
	OUTSTR	[ASCIZ\ in \]		;FOR SFD TELL WHERE
	PUSHJ	P,OUTSIX		;PRINT THE NAME
LINER0:	MOVE	T1,DEVBLK		;GET THE DEVICE NAME
	OUTSTR	[ASCIZ\ on \]		;PRINT THE INTERLUDE
	PUSHJ	P,OUTSIX		;PRINT THE NAME
LINER1:	OUTSTR	[ASCIZ\

\]					;FINISH UP
	POPJ	P,			;RETURN
	SUBTTL	NUMERIC & CHARACTER OUTPUT ROUTINES

OUTEXT:	SKIPA	T3,[EXP 3]		;GET 3 CHRS
OUTNAM:	MOVEI	T3,6			;GET 6 CHRS
	SETZ	T2,			;CLEAR RECIEVER
	EXCH	T1,T2			;SWAP SO SHIFTING WORKS
OUTNA0:	LSHC	T1,6			;GET SIX BITS
	MOVEI	T1," "-' '(T1)		;CONVERT SIX--> 7 BIT
	OUTCHR	T1			;PRINT THE CHARACTER
	SETZ	T1,			;CLEAR THE VEHICLE
	SOJG	T3,OUTNA0		;LOOP TILL OUT OF CHARS
	POPJ	P,			;RETURN

OUTDEC:	IDIVI	T1,^D10			;DIVIDE BY 10 DECIMAL
	HRLM	T2,(P)			;PUT THE LETTER AWAY
	SOJ	T3,			;DECREASE FILLER SIZE
	JUMPE	T1,FILLER		;FILL WHEN DONE
	PUSHJ	P,OUTDEC		;LOOP
DECOUT:	HLRZ	T2,(P)			;GET THE NUMBER
	ADDI	T2,60			;MAKE DECIMAL
	OUTCHR	T2			;PRINT IT
	POPJ	P,			;LOOP TILL DONE THEN RETURN

FILLER:	JUMPLE	T3,DECOUT		;RETURN IF ALREADY DONE
	OUTCHR	[40]			;PRINT A SPACE
	SOJG	T3,.-1			;LOOP & FILL
	JRST	DECOUT			;FINISH UP WITH NUMBER


PRTDIR:	OUTCHR	["["]			;OPEN BRACKET
	HLRZ	T1,PATH+.PTPPN		;GET THE PROJECT
	PUSHJ	P,OUTOCT		;PRINT IT
	OUTCHR	[","]			;FOLLOWED BY A COMMA
	HRRZ	T1,PATH+.PTPPN		;THEN PROGRAMMER #
	PUSHJ	P,OUTOCT		;...
	JUMPE	USRLVL,PRTDI2		;NOPE.
	PUSH	P,LEVEL			;SAVE THE CURRENT LEVEL
	MOVEI	LEVEL,1			;BEGIN AT BOTTOM
PRTDI0:	OUTCHR	[","]			;TYPE A COMMA
	MOVE	T1,PATH+.PTPPN(LEVEL)	;GET AN ITEM
	PUSHJ	P,OUTSIX		;OUTPUT 6 WITHOUT EXTRAS
	CAMGE	LEVEL,USRLVL		;SKIP IF LESS THAN USER'S
	  AOJA	LEVEL,PRTDI0		;LOOP!
	POP	P,LEVEL			;RESTORE LEVEL
;	SETZM	PATH+.PTPPN(USRLVL)	;CLEAR THIS ONE
PRTDI2:	OUTCHR	["]"]			;FINISH
	POPJ	P,			;RETURN
	SUBTTL	ERROR MESSAGES

ERRJUF:	OUTSTR	[ASCIZ\
%RDPJUF	JOBSTR UUO failure cannot check search-list
\]
	POPJ	P,			;ERROR!

ERRNDD:	OUTSTR	[ASCIZ\
%RDPNDD	Device \]
	MOVE	T1,LOOK+.RBDEV		;GET OFFENDING DEVICE
	PUSHJ	P,OUTSIX		;AND TYPE IT
	OUTSTR	[ASCIZ\ is not a DISK Device
\]
	SOS	NFSTR			;DON'T COUNT THIS AS A STRUCTURE
	POPJ	P,

ERROPN:	  OUTSTR	[ASCIZ\
%RDPIFS Illegal file structure name \]
	MOVE	T1,DEVBLK		;GET THE PACK NAME
ERRCOM:	PUSHJ	P,OUTSIX		;PRINT IT AND LEAVE
	OUTSTR	CRLF			;PRINT A CR-LF
	PJRST	GETST2			;LOOP BACK TO SEE IF MORE

ERRDNF:	MOVE	T1,DIRECT+.RBNAM	;GET THE DEVPPN OR WHATEVER
	MOVEM	T1,PATH+.PTPPN(USRLVL)	; & RESTORE THE PATH
	TXNN	F,RDP$DT		;SEE IF HE TYPED A DEV?
	  PJRST	GETST2			;RETURN TO CHECK ON MORE
	SOS	NFSTR			;COUNT STRUCTURES
	OUTSTR	[ASCIZ\%RDPUNF User file directory \]
	PUSHJ	P,PRTDIR		;PRURRENT DIRECTORY NAME
	OUTSTR	[ASCIZ\ not found on \]
	MOVE	T1,DIRECT+.RBDEV	;GET LOOKUP DEVICE
	PJRST	ERRCOM
ERRNEC:	OUTSTR	[ASCIZ\
?RDPNEC	Not enough core available for this job
\]
	JRST	EXIT1			;RETURN & DIE

ERRNSF:	OUTSTR	[ASCIZ\%RDPNSF	No such files as \]
	TXNE	F,RDP$DT		;IF NO DEVICE SPECIFICALLY TYPED USE DSK:
	SKIPN	T1,DEVBLK		;GET DEVICE IF ONE EXISTS
	  MOVSI	T1,'DSK'		;  ELSE USE "DSK:"
	TXNE	F,RDP$AL		;UNLESS USER TYPED'ALL OR OTHER ERSATZ
	  MOVE	T1,LOOK+.RBDEV		;THEN USE WHAT HE TYPED
	PUSHJ	P,OUTSIX		;TYPE THE DEVICE NAME
	OUTCHR	[":"]			;THEN THE COLON
	MOVE	T1,LOOK+.RBNAM		;GET FILE NAME
	IOR	T1,MASK+1		;AND THE MASK
	CAMN	T1,[-1]			;IF ALL SET THEN
	  MOVSI	T1,'*  '		;  CONVERT TO *
	PUSHJ	P,OUTSIX		;THEN PRINT THEM
	OUTCHR	["."]			;DOT
	MOVE	T1,LOOK+.RBEXT		;GET THE EXTENSION
	IOR	T1,MASK+2		;GET THE EXTENSION
	CAMN	T1,[-1]			;IF ALL SET THEN
	  MOVSI	T1,'*  '		;  CONVERT TO *
	HLLZS	T1			;THEN ALWAYS CLEAR OUT LOWER HALF
	PUSHJ	P,OUTSIX		;THEN PRINT IT TOO
	PUSHJ	P,PRTDIR		;PRINT A DIRECTORY PATTERN
	OUTSTR	CRLF			;NEXT LINE
	JRST	EXIT1

ERRSLE:	OUTSTR	[ASCIZ\%RDPSLE	Search list Empty
\]
	JRST	EXIT1

ERRSUF:	OUTSTR	[ASCIZ\
%RDPSUF	SYSSTR UUO failure cannot check search-list
\]
	POPJ	P,			;ERROR!

ERRWLD:	OUTSTR	[ASCIZ\
?RDPWLD	Wildcard Path Specifications NOT Supported
\]
	JRST	EXIT1
	SUBTTL	Headings for Monitor error codes for lookups


LKPERR:	[ASCIZ\File Not Found\]			;ERFNF%
	[ASCIZ\Incorrect PPN\]			;ERIPP%
	[ASCIZ\Protection Failure\]		;ERPRT%
	[ASCIZ\File Being Modified\]		;ERFBM%
	[ASCIZ\Already Existing File\]		;ERAEF%
	[ASCIZ\Illegal Sequence of UUO's\]	;ERISU%
	[ASCIZ\Transmission Error\]		;ERTRN%
	[ASCIZ\Not a Saved File\]		;ERNSF%
	[ASCIZ\Not Enough Core\]		;ERNEC%
	[ASCIZ\Device Not Available\]		;ERDNA%
	[ASCIZ\No such Device\]			;ERNSD%
	[ASCIZ\Illegal Monitor Call\]		;ERILU%
	[ASCIZ\No Room on Device\]		;ERNRM%
	[ASCIZ\Write Lock Error\]		;ERWLK%
	[ASCIZ\Not Enough Monitor School\]	;ERNET%
	[ASCIZ\Partial Allocation Only\]	;ERPOA%
	[ASCIZ\BLock not Free\]			;ERBNF%
	[ASCIZ\Cannot Supercede Directory\]	;ERCSD%
	[ASCIZ\Cannot Rename a NON-empty SFD\]	;ERDNE%
	[ASCIZ\Sub-Directory Not Found\]	;ERSNF%
	[ASCIZ\Search List Empty\]		;ERSLE%
	[ASCIZ\Cannot Create SFD too Deep\]	;ERLVL%
	[ASCIZ\No Create or Center\]		;ERNCE%
	[ASCIZ\Segment Not on Swapping space\]	;ERSNS%
	[ASCIZ\File Cannot be Updated\]		;ERFCU%
	[ASCIZ\Low Segment Overlaps High Segment\];ERLOH%
	[ASCIZ\Not Logged In\]			;ERNLI%
	[ASCIZ\File has Outstanding Locks set\];ERENQ%
	[ASCIZ\Bad EXE File Directory\]		;ERBED%
	[ASCIZ\Bad Extension for an EXE File\]	;ERBEE%
	[ASCIZ\EXE's Directory Too Big\]	;ERDTB%
	[ASCII\Network Capacity Exceeded\]	;ERENC%
	[ASCIZ\Task Not Availavle\]		;ERTNA%
	[ASCIZ\Unknow Network Node\]		;ERUNN%
	SUBTTL	DATA AREAS FOR DIRECTORY LOOKUPS & FILE LOOKUPS

LOOK:	BLOCK	36			;BLOCK FOR FILE-LOOKUP/ENTER FROM SCANER
PATH:	BLOCK	.PTMAX		;PATH BLOCK FROM SCANER
MASK:	BLOCK	4		;FILE-SPEC (DEV,FILE,EXT,PPN) MASKS
PMASK:	BLOCK	.PTMAX		;PATH BLOCK MASKS

DIRECT:	BLOCK	36		;SETUP BLOCK FOR DIRECTORIES

OPNBLK:	17				;SET MODE DUMP
DEVBLK:	BLOCK 1				;SIXBIT/DSK/
	XWD	0,0			;BUFFER SPACE
CRLF:	ASCIZ\
\

CMD:	BLOCK	2			;BUFFER HEADER - DUMP MODE	[10]
BUFLVL:	BLOCK	20			;UP TO 16

MORE:	BLOCK	1			;MORE-TO-COME FROM SCANER

PDL:	BLOCK	60		;SETUP PDL LIST
STRLST:	BLOCK	3		;STRLST BLOCK
NFSTR:	BLOCK	1		;HOLD # OF FILE STRS HERE
TNF:	BLOCK	1		;LOC TO HOLD TOTAL FILES
TNBW:	BLOCK	1		;LOC TO HOLD TOTAL BLOCKS WRITTEN
TNBA:	BLOCK	1		;LOC TO HOLD TOTAL BLOCKS ALLOCATED

	XLIST
	LIT
	VAR
	LIST

	END NEWD
    P)%~U