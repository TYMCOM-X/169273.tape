.TITLE BIGCAL %3(14) -- Big Calendar Program
.subtitle By Carl A. Baltrunas -- Gallaudet College
.lm 0.rm 72
#
.figure 5
.center 72;BIGCAL %3(14)
.center 72;Full Page Monthly Calendar Program
.sk
.center 72;By
.sk
.center 72;Carl A.#Baltrunas
.center 72;Computer Center, HMB 118
.center 72;Kendall Green
.center 72;Gallaudet College
.center 72;Washington, D.C. 20002
.sk 
.center 72;Modified By
.center 72;Francoise M.J.#Soudee
.sk
.center 72;Further Modified By
.center 72;Carl A.#Baltrunas
.sk 2
.note Abstract
BIGCAL is a program to produce large appointment style calendars
for a year, a month, or any span of months requested.  The calendars
appear one month per line-printer page with appropriate headings
for the year and month.  An additional feature was added late in
version 1 for reading an appointment file containing events to occur
on specific dates.  Up to seven lines of events may specified for a
particular day.  Version 2 supports multiple appointment files with
a complete refresh of date information at the beginning of each year.
This way date information can be different for the same month in two
separate years.
Version 3 supports appointment formats for cyclical events and
many small bug fixes.
.end note
.page
.hl 1 Introduction
.paragraph
BIGCAL was written to produce full year calendars which would leave space
for the user to write small notes, or keep important appointments listed
for easy reference.  An entire month of appointments can be seen at a time.
User suggestions and desires soon led to allowing the appointments to be
kept in a disk file for easy reproduction of event calendars.  A calendar
for just a single month was then requested, as well as for a span of
months, such as June through September.  These requests were saved and
version 2 was created.
.hl 1 Usage
.paragraph
The simplest use for the BIGCAL program is to produce a blank appointment or
events calendar for an entire year.  This is performed by running the
BIGCAL program and specifying the year for which you want the calendar.
BIGCAL will prompt for the "Calendar Year".  Next, the program will type out
information about the year to be produced, and will ask for a "Date file".
At this point you should reply "NONE" and the program will produce an output
file named "DSK:BIGCAL.DAT" which you should then send to the line-printer
using the monitor "PRINT" command.  The terminal dialogue will look similar
to the example below where the underlined text is typed by the user:
.sk
.indent 8;_.^&R PUB:BIGCAL\&
.indent 8;Calendar Year? ^&1979\&
.indent 8;Current Year: 1979
.indent 8;What date file? ^&NONE\&
.indent 8;No holidays will be marked on this calendar
.indent 8;END OF EXECUTION
.indent 8;CPU TIME: m.ss  ELAPSED TIME: mm.ss
.indent 8;EXIT
.indent 8;_.
.paragraph
If you prefer to use the system's list of holidays, which by the way are
arbitrarily determined by your systems' administrator, you would type
a carriage-return instead of "NONE" when the program asks for
"What date file?".  This is accomplished by pushing the key marked
"RETURN" or "CR" located on the lower right side of your terminal.
.paragraph
On the other hand, if you prefer to use your own appointment file, you
should type the name of your file at this point.  The computer understands
full SFD supported file names, thus a name like "FOO.FOO[204,1616,FOO]"
will be completely understood.  The program will ask a second time
for the date file, "What date file?" and you should enter the name of
a second file, or a carriage-return to indicate that you do not want
any more additional appointment files to be used.
An alternate command is to type "DONE" to say you are finished entering
file names.  This ensures that you are finished, and makes explaining
how to use BIGCAL a little easier to the novice.  Experienced users should
note that the DONE command does not substitute elsewhere.
.paragraph
Another feature is the single month calendar.  This is obtained by telling
the program the month and year that you wish the calendar to begin when
it asks for "Calendar Year?".  The current year is assumed if you type
just the name of the month, i.e.  "August" means "August 1979".  An example
showing both multiple date/appointment files and just a specific month
follows:
.tp 17
.sk
.indent 8;_.^&R PUB:BIGCAL\&
.indent 8;Calendar Year? ^&February 1979\&
.indent 8;Calendar Year? 	; type a carriage return here
.indent 8;Current Year: 1979
.indent 8;What date file? ^&PUB:BIGCAL.INF\&
.indent 8;What date file? ^&DSK:FEE.FIE[204,1616,FOE,FUM]\&
.indent 8;What date file? ^&DONE\&
.indent 8;END OF EXECUTION
.indent 8;CPU TIME: m.ss  ELAPSED TIME: mm.ss
.indent 8;EXIT
.indent 8;_.
.paragraph
The most complicated type of calendar you may ask for would include
asking for a span of months, and asking that this list of months go
into the next or succeeding years.  For instance, requesting the span
of months from "January 1979" to "July 1980".  This calendar would differ
from a calendar which began in "March 1979" and end in "September 1979"
in two ways.  First March-September is only a span of seven months, and
would be much shorter than the span from January to July of the next year,
by an entire year.  The second difference is, of course,  that the first
twelve months is in one year and the last seven months occur in another.
Because some dates are dependant upon the day of the week, or are not
always the same date, BIGCAL will request that the user supply the program
with a different set of appointment files for the second year.  This set of
files may be exactly the same as the first set, but to insure that users
can specify different dates for holidays, etc.#for the next year, this
small inconvenience is acceptable.  Besides, it makes it much easier to
keep your appointment files in order.
.paragraph
The following two examples show how to obtain a span of months, both
using appointment files, and the second one spanning multiple years.
A brief explanation follows:
.tp 18
.sk
.indent 8;_.^&R PUB:BIGCAL\&
.indent 8;Calendar Year? ^&March 1979\&
.indent 8;Calendar Year? ^&September 1979\&
.indent 8;Current Year: 1979
.indent 8;What date file? ^&PUB:BIGCAL.INF\&
.indent 8;What date file? ^&DSK:FEE.FIE[204,1616,FOE,FUM]\&
.indent 8;What date file? ^&DONE\&
.indent 8;END OF EXECUTION
.indent 8;CPU TIME: m.ss  ELAPSED TIME: mm.ss
.indent 8;EXIT
.indent 8;_.
.paragraph
Please notice the "Starting:" and "Ending:" parts of the terminal dialogue.
These were provided to emphasize that the calendar program was going to
create a calendar which began at a specified month and continued until the
second specified month was completed.  Since the span of months was within
a single year, there was no need for an special handling.  The next example,
however, spans more than a single year, and thus requires additional input.
In this example, notice that the last seven months, i.e. all of 1980, will
not have any appointments listed.  This method allows the user to add his
own hand-written appointments for the future.
.tp 21
.sk
.indent 8;_.^&R PUB:BIGCAL\&
.indent 8;Calendar Year? ^&January 1979\&
.indent 8;Calendar Year? ^&July 1980\&
.indent 8;Current Year: 1979
.indent 8;What date file? ^&PUB:BIGCAL.INF\&
.indent 8;What date file? ^&DSK:FEE.FIE[204,1616,FOE,FUM]\&
.indent 8;What date file? ^&DONE\&
.indent 8;Current Year: 1980
.indent 8;What date file? ^&NONE\&
.indent 8;No holidays will be marked on this calendar
.indent 8;END OF EXECUTION
.indent 8;CPU TIME: m.ss  ELAPSED TIME: mm.ss
.indent 8;EXIT
.indent 8;_.
.paragraph
These examples hopefully covered all the bases and showed how to create
any kind of calendar file desired.  Not all possible combinations were
demonstrated, but with a little ingenuity, users should be able to generate
any or all possible permutations of the above examples.
.page
.hl 1 Appointment files
.hl 2 Basic Format
.paragraph
Appointment files, sometimes referred to as "date files" or "event files"
are simple lists of dates which a user wishes to have printed on her
otherwize "blank" appointment calendars.  The basic format of these files
is straight forward and easy to comprehend.
.sk
	Day   Month   Year   Line   Message-event
.SK
.ls
.le;DAY is the numeric day of the month, 00-31, depending upon the month.
.le;MONTH is the three character abbreviation used by the computer
for the month. (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC)
.le;YEAR is the year in which the event occurred.  If this number is
positive, the event will only appear in a calendar for that year.  If
this number is negative, the event will appear in a calendar for that
year as well as any succeeding years.  If this number is ZERO (0), then
the event will appear in a calendar for every year.
.le;LINE is a number designating which line you would like to have the holiday
listed.  Acceptable values are 0 which means any line, and 1 through 7 to
specify that this should appear on a specific line.  If two or more names
are to appear on the same line, the second and succeeding occurances are
translated to zeroes and may appear on any line.  Of important note, you may
not have any more than seven listings for any specific date.
In version 3, the option was added to CENTER your message on the line.
This is accomplished by specifying the NEGATIVE line number for your message.
For messages to be centered on 'ANY' line, any negative number larger in
magnitude than minus seven (-7) will be considered as minus zero (-0).
.le;NAME-OF-DAY is the title which you would like to see printed on the
calendar.  NAME-OF-DAY may be from one to fifteen characters, with the
exception of line-1.  Line-1 has a maximum length of twelve, because it is
used to show the numeric DAY of the month.
.els
.paragraph
An example date file follows, showing most of the basics:
.literal

1	JAN	0	0	New Year's Day
14	FEB	0	1	Valentines
17	MAR	0	1	St. Patrick
21	MAR	0	0	Spring Begins
1	APR	0	0	April Fools
30	MAY	-1776	7	Memorial Day
14	JUN	1776	-4	Flag Day
21	JUN	0	3	Summer Begins
4	JUL	-1776	3	Independence
20	JUL	1969	2	1st Man on Moon
31	OCT	0	-3	Halloween
25	DEC	0	2	Christmas Day
31	DEC	0	7	New Year's Eve
.end literal
.page
.hl 2 Appointment file extensions
.paragraph
Two special option formats were implemented to add cyclic events to the
appointment files.  The same basic fields are utilized for data, but the
context is changed to mean something different.  The first of these options
allows a user to specify an event for 'EVERY' ocurrance of a specific
day of the week.  The format is as follows:
.sk
.literal
	Number   Weekday   Month   Line   Message-event
.end literal
.sk
.ls
.le;Number - The Nth occurrance of the specific weekday.  This can range
from minus five (-5) to five (5).  Positive numbers mean the Nth occurrance
during the course of a month.
Negative numbers indicate the Nth occurance from the end of the month, where
-1 means the last.
A zero (0) value means to mark every occurrance.
.le;Weekday - The three character mnemonic code for the day of the week,
(eg. SUN, MON, TUE, WED, THU, FRI and SAT).
.le;Month - The month marker.  If this number ranges from 1 to 12, then
the specified event will only appear in that specific numeric month.  If
this number is greater than 12 or less than 1, then the specified event
will appear in every month.
.le;Line - The line marker.  This item has the same meaning as LINE in the
basic format.
.le;Message-event - The message text.  This is the 12 or 15 character message
which you wish to have displayed in the appointment box.
.els
.paragraph
This format is most helpful for things which occur on a weekly of monthly
basis.  Some examples with explanations appear below:
.ls
.le;0###MON####0####0####Monday#Message - Print the message "Monday Message"
every monday of every month on any available line.
.le;2###FRI####0####2####Meeting#Night# - Print the message "Meeting Night"
on the second friday of every month on line two (2).
.le;4###SUN####3####1####Final#Exam#### - Print the message "Final Exam" on
the fourth sunday in March on line one (1).
.le;-1##THU###11####7####Thanksgiving## - Print the message "Thanksgiving"
on the last thursday in November on line number seven (7).
.le;-3##SAT####0###-4####Centered###### - Print the message "Centered" on the
second to last (or third if you count backwards) saturday of every month.
This message will appear on line four (4) and will be centered on the line.
.els
.paragraph
The second special option format attempts to continue to use the same
basic data format with one major exception.  Instead of one line of data,
each appointment entry consists of three lines.  The first line contains
the number of days between occurrances, the cyclic event descriptor 'DAY',
the line number and the appointment message:
.sk
	Days	Descriptor   Zero   Line   Message-event
.sk
.ls
.le;Days - is the positive number of days between events.
.le;Descriptor - is the actual text string 'DAY' (without the quotes).
.le;Zero - is a blank argument, but is required for consistancy.
.le;Line - has the connotation of LINE as above.
.le;Message-event - has the connotation as Message-event above.
.els
.paragraph
Lines two and three again follow the same typical format, but only contain
valid information in the first three fields.  These lines specify the
start and stop dates for the cyclic event.
 