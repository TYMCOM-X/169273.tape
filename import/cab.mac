	TITLE	CAB	SUBROUTINE LIBRARY
	SUBTTL	WRITTEN BY CARL A BALTRUNAS [GALLAUDET COLLEGE, 1978-79]

COMMENT	|


	_________________Table of Contents

	_______Routine		_______Purpose					_________AC's Used
  1.	YESNO		Obtain a YES or NO answer		C
  2.	INCHAR		Read a TTY character, UC & eol*		C
  3.	RANI		Initialize the random # routine		--NONE--
  4.	RAN		Return a random #, 0<-->(T1)-1		T1
  5.	OUTDEC		Type a decimal number (T1)		T1,T2,T3,C
  6.	OUTOCT		Type an Octal number  (T1)		T1,T2,T3,C
  7.	OUTNUM		Type (T1) in radix (T3)			T1,T2,T3,C
  8.	TIMOON		Type the current phase of the moon
  9.	PHASE		Type the moon phase (15bit date T1, MSTIME T2)


	|

		PRGEND
	TITLE	YESNO
	SEARCH	CARL
	SALL

	ENTRY	YESNO
	EXTERN	RAN,RANI,INCHAR

; YESNO - GETS A YES OR NO ANSWER FROM THE USER
;	  RETURNS ARE AS FOLLOWS:
;
;		CALL	YESNO
;		  "NO" RETURN
;		"YES" RETURN
;
;	  USES AC:   C

YESNO:	OUTSTR	[ASCIZ\ (Y or N): \]	; TYPE MESSAGE
YESNO0:	CALL	INCHAR			; GET A CHARACTER
	JUMPL	C,NOMSG		; IF NO ANSWER, ASSUME NO
	CAIE	C,40			; PLEASE IGNORE LEADING SPACE
	CAIN	C,11			; OR TAB... JUST
	  JRST	YESNO0			;   IGNORE THEM WHEREVER
	PUSH	P,C			; SAVE THIS FIRST CHARACTER
YNWAIT:	CALL	INCHAR			; AND WAIT TILL HE SHUTS UP
	SKIPL	C			; DID HE SHUT UP?
	  JRST	YNWAIT			; NOPE -- BE PATIENT
	POP	P,C			; FINALLY! GET THAT 1ST CHAR BACK
	CAIE	C,"Y"			; WAS IT "Y"?
	CAIN	C,"N"			; OR AN "N"?
	  CAIA				; YES... SKIP
	  JRST	YNMSG			;  GIVE A MESSAGE AND TRY AGAIN
	CAIN	C,"Y"			; WAS IT "Y"?
	  AOS	(P)			; YES -- GIVE A SKIP RETURN
YNDONE:	POPJ	P,			; RETURN!

YNMSG:	SKIPN	SETRAN			; SKIP IF ALREADY SETUP
	CALL	RANI			; MAKE SURE IT'S SETUP
	SETOM	SETRAN			; TELL THE WORLD IT'S SETUP
	PUSH	P,T1			; SAVE T1
	MOVEI	T1,MSGLEN		; GET THE MAX # OF MSGS
	CALL	RAN			; GET A RANDOM ONE
	OUTSTR	@YNMSGS(T1)		; TYPE THE MESSAGE
	POP	P,T1			; RESTORE T1
	OUTSTR	[ASCIZ\
Now Please type\]
	JRST	YESNO			; AND START OVER.

NOMSG:	SKIPN	SETRAN			; SKIP IF ALREADY SETUP
	CALL	RANI			; MAKE SURE IT'S SETUP
	SETOM	SETRAN			; TELL THE WORLD IT'S SETUP
	PUSH	P,T1			; SAVE T1
	MOVEI	T1,NOMSGL		; GET THE MAX # OF MSGS
	CALL	RAN			; GET A RANDOM ONE
	OUTSTR	@NOMSGS(T1)		; TYPE THE MESSAGE
	POP	P,T1			; RESTORE T1
	OUTSTR	[ASCIZ\
\]
	JRST	YNDONE			; NOW TAKE CARE OF THE EOL
	SUBTTL	ERROR MESSAGES???

YNMSGS:	[ASCIZ\Can't you read?  Type the letter "Y" or the letter "N"!!!\]
	[ASCIZ\Are you playing with a full deck?\]
	[ASCIZ\Is the English language that hard to comprehend?\]
	[ASCIZ\Where did you learn to read? Sears and Roebuck?\]
	[ASCIZ\Try again.\]
	[ASCIZ\Better Luck next time!!!\]
	[ASCIZ\Nimble fingers, aren't we?  Try Again!\]
	[ASCIZ\Weeeeee!  We can keep this up forever.\]
	[ASCIZ\I bet you say that to all the machines...\]
	[ASCIZ\Do you come here often?\]
	[ASCIZ\Nice weather we're having, Isn't it?\]
	[ASCIZ\Where did you learn to read?\]
	[ASCIZ\Type that again.\]
	[ASCIZ\My my, you listen quite well!\]
	[ASCIZ\Come again?\]
	[ASCIZ\What did you say?\]
	[ASCIZ\Do you really mean to say that?\]
	[ASCIZ\Oh No! Not you again!\]
	[ASCIZ\Go away!!!!\]
	[ASCIZ\Can't leave well enough alone... tsk. tsk.\]
	[ASCIZ\Do you really mean that?\]
	[ASCIZ\Say that again, it's music to my ears.\]
	[ASCIZ\In unison now, "Ole Mac Donald had a farm, ee aye ee aye oh!"\]
	[ASCIZ\Say that again!\]
	[ASCIZ\Oh my, I've found you at last, say that again, and again, and again\]
	[ASCIZ\Good Day!\]
	[ASCIZ\Goodbye!\]
	[ASCIZ\Hello there.\]
	[ASCIZ\Isn't it lovely here!\]
	[ASCIZ\Hello!\]
	[ASCIZ\I don't believe it!!! I really don't believe it!!!\]
	[ASCIZ\Do you expect me to believe that?\]
	[ASCIZ\Well!  I never!\]
	[ASCIZ\Can't you read!!!!!\]
	[ASCIZ\If you do that just ONE more time... why I'll,  I'll ...\]
	[ASCIZ\Alright!!! Alright already.  Do what the man tells you.\]
	[ASCIZ\Alright!!! Alright already.  Do what the computer says.\]
	[ASCIZ\For crying out loud!!!  Do what you were told to do!\]
	[ASCIZ\You can't be that dumb, just type "Y" or "N".\]
	[ASCIZ\Hey!!!  Look at the keyboard!!!  Now try again!\]
	[ASCIZ\Look between the "T" and the "U", or between "B" and "M".\]
MSGLEN=.-YNMSGS
	SUBTTL	NO-COMMENT MESSAGES


NOMSGS:	[ASCIZ\Are you saying that just to be negative?\]
	[ASCIZ\What's the matter, too lazy to type "N"!!!\]
	[ASCIZ\Next time, type "N" instead of <CR>.\]
	[ASCIZ\Go away...\]
	[ASCIZ\Can't you even type one lousy letter?\]
	[ASCIZ\Some people!!! I still think I perfer machines.\]
	[ASCIZ\Hey!! Type "NO" next time.\]
	[ASCIZ\Did you really meant to say NO?\]
	[ASCIZ\Hey! <CR> really means NO, I hope you know that!\]
	[ASCIZ\I really hope you meant that!\]
	[ASCIZ\No.   O.K.  That's what I thought you said!\]
	[ASCIZ\No.\]
	[ASCIZ\Not this time.\]
	[ASCIZ\No.  No.  No.\]
	[ASCIZ\Forget it.\]
	[ASCIZ\Not now!!! I have a headache!\]
	[ASCIZ\Not now!!!\]
	[ASCIZ\Later maybe, but not now.\]
	[ASCIZ\Never!\]
	[ASCIZ\Ask me again later.\]
	[ASCIZ\I really do understand, No. is what I meant.\]
	[ASCIZ\I'm not going to change my mind... N-O, No.\]
	[ASCIZ\What are you staring at, YOU said NO!!!\]
NOMSGL==.-NOMSGS

SETRAN:	BLOCK	1		;HOLDS RANDOM FLAG

	PRGEND
	TITLE	GETNUM	ROUTINE TO READ A NUMERIC (DECIMAL) INPUT
	SUBTTL	BY CARL A BALTRUNAS	GALLAUDET COLLEGE	1979

	SEARCH	CARL
	SALL

	ENTRY	GETNUM

	EXTERN	INCHAR, RAN, RANI

;GETNUM - ROUTINE TO READ A DECIMAL NUMBER INTO REGISTER N
;
;	CALL:
;		CALL	GETNUM		;OR PUSHJ P,GETNUM
;		  <RETURN>		;AC N CONTAINS THE NUMBER
;
;	AC'S USED:	N (RESULT), C (READIN AC)
;

GETNUM:	SETZ	N,			; CLEAR THE RESULT
	CALL	INCHAR			; GET A CHARACTER
	JUMPGE	C,.+2			; SKIP IF NOT EOL
	  POPJ	P,			; RETURN WITH CURRENT N
	CAIL	C,"0"			; SEE IF IN RANGE
	CAILE	C,"9"			; ... 0-9
	  JRST BADNUM			; BAD NUMBER ... TRY AGAIN
	MOVEI	C,-"0"(C)		; MAKE INTO A REAL #
	IMULI	N,^D10			; DECIMAL.
	ADD	N,C			; ADD IN THE NEW PART.
	JRST	GETNUM+1		; NEXT!!!!

BADNUM:	PUSH	P,T1			; DON'T DESTROY ME!!!!
	SKIPN	SETRAN			; SEE IF RANDOM # SET?
	CALL	RANI			; INITIALIZE IF NOT ALREADY!
	SETOM	SETRAN			; INTERNAL FLAG.
	MOVEI	T1,MSGLEN		; HOW MANY MESSAGES?
	CALL	RAN			; EVERYONE HAS TO BE A COMIC!
	OUTSTR	@MSGS(T1)		; TELLL ME A STOREY!
	OUTSTR	[ASCIZ\
Now! Please type a number: \]		; gotcha!
	POP	P,T1			; RESTORE SAVE'D AC
	CALL	INCHAR			; READ A CHARACTER
	JUMPL	C,GETNUM		; AT EOL, START OVER
	JRST	.-2			; ELSE KEEP READING
	SUBTTL	ERROR MESSAGES

MSGS:	[ASCIZ\Numbers are composed of the digits 0,1,2,3,4,5,6,7,8 and 9\]
	[ASCIZ\Please type a decimal number containing only 0-9\]
	[ASCIZ\Gee. I didn't know that was a number?\]
	[ASCIZ\Wheeeeeee!  Aren't numbers fun!!!\]
	[ASCIZ\Try again. That isn't a number.\]
	[ASCIZ\Try again.\]
	[ASCIZ\Oops!  I meant for you to type a number.\]
	[ASCIZ\Number Please!!!\]
	[ASCIZ\I'm sorry! I can't complete your call as dialed,
please hang up and dial again.  Only this time use numbers.\]
	[ASCIZ\I'm sorry! I don't accept credit cards!\]
	[ASCIZ\I'm sorry! I don't accept credit cards!  Only Numbers.\]
	[ASCIZ\A-B-C-D-E-F-G .. Oh?  You mean Numbers! 1-2-3-4\]
	[ASCIZ\A-B-C-D-E-F-G .. Oh?  You mean Numbers! 1-2-3-4 Now I got'cha!!!\]
	[ASCIZ\Isn't it lovely here?\]
	[ASCIZ\Do you come here often?\]
	[ASCIZ\Nice weather we're having, Isn't it?\]
	[ASCIZ\Hello.\]
	[ASCIZ\Good Day!\]
	[ASCIZ\Goodbye!\]
	[ASCIZ\Numbers! Numbers! Numbers!  Is that all you think I want?\]
	[ASCIZ\Number Please? ... Please give me your number.\]
	[ASCIZ\What's your telephone number?\]
	[ASCIZ\People!!! You think of nothing but numbers, gee!\]
	[ASCIZ\Enough is enough!  Just type your number!\]
	[ASCIZ\I don't have all day!\]
	[ASCIZ\I could keep this up all day!\]
	[ASCIZ\Can't you read???\]
	[ASCIZ\1. 2. 3. 4. 5. 6. 7. 8. 9. 10. (#$%&%$'!#%\]
	[ASCIZ\Number Please? \]
MSGLEN=.-MSGS

SETRAN:	BLOCK	1		; HOLD RANDOM NUMBER FLAG.

	PRGEND
	TITLE	MSGOUT	Message output from T1
	SUBTTL	Message output routine MSGOUT

	SEARCH	CARL,MACTEN,JOBDAT,UUOSYM
	SALL

	ENTRY	MSGOUT
	EXTERN	TYPOUC

;MSGOUT	- ROUTINE TO TYPEOUT THE TEXT POINTED AT BY T1, ASSUMES TO BE
;	  AN ASCIZ TYPE STRING.  THIS ROUTINE DOES NOT DO AN OUTSTR
;	  ALTHOUGH THAT MIGHT PROVE TO SPPED TERMINAL I/O.
;  CALL:
;		MOVE	T1,<ADDR OF ASCIZ STRING>
;		PUSHJ	 P,MSGOUT
;		 <ONLY RETURN>
;
;AC'S USED T1, RESTORED WITH ADDRESS
;

MSGOUT:	PUSH	P,T1			;SAVE ADDRESS
	HRLI	T1,(POINT 7)		;SETUP POINTER
	PUSH	P,T1			;USE STACK FOR POINTER
MSGOU0:	ILDB	T1,(P)			;GET A CHARACTER
	JUMPE	T1,MSGOU1		;SKIP WHEN DONE
	CALL	TYPOUC			;TYPE THE CHARACTER
	JRST	MSGOU0			;LOOP TILL DONE
MSGOU1:	POP	P,(P)			;FREE UP STACK
	POP	P,T1			;RESTORE DESTROYED AC
	POPJ	P,			;RETURN

	PRGEND
	TITLE	OUTPUT	NUMERIC OUTPUT ROUTINES
	SUBTTL	Numeric typeout routines

	SEARCH	CARL,MACTEN,JOBDAT,UUOSYM
	SALL

	ENTRY	OUTNUM,OUTDEC,OUTOCT,OUTSIX
	EXTERN	TYPOUC

;OUTNUM	- ROUTINE TO TYPE A NUMBER IN RADIX (T3)
;OUTDEC	- ROUTINE TO TYPE A NUMBER IN RADIX 10.
;OUTOCT	- ROUTINE TO TYPE A NUMBER IN RADIX 8.
;
;  CALL:	MOVE	T1,<NUMBER>
;		PUSHJ	 P,<ROUTINE>
;		  <ONLY RETURN>
;
;AC'S USED: T1-T2 (DESTROYED), T3 (CONTAINS RADIX)
;

OUTOCT:	SKIPA	T3,[10]			;SETUP FOR OCTAL (RADIX 8)
OUTDEC:	MOVEI	T3,12			;SETUP FOR DECIMAL (RADIX 10)
OUTNUM:	IDIV	T1,T3			;DIVIDE
	HRLM	T2,(P)			;SAVE A DIGIT
	SKIPE	T1			;SKIP WHEN FINISHED
	PUSHJ	P,OUTNUM		;NEXT DIGIT
	HLRZ	T1,(P)			;GET THE CHARACTER
	MOVEI	T1,"0"(T1)		;AND MAKE IT NUMERIC
	CALL	TYPOUC			;TYPEOUT THE CHARACTER
	POPJ	P,			;RETURN


	SUBTTL	Alphabetic typeout routines

;OUTSIX	- ROUTINE TO OUTPUT A WORD IN SIXBIT
;
;  CALL:	MOVE	T1,[SIXBIT/TEXT/]
;		PUSHJ	P,OUTSIX
;		  <ONLY RETURN>
;
;AC'S USED: T1,T2 (DESTROYED)
;

OUTSIX:	JUMPE	T1,CPOPJ		;RETURN IF NOTHING TO TYPE
	SETZ	T2,			;CLEAR RECIEVER
	EXCH	T1,T2			;SWAP SO SHIFTING WORKS
OUTSI0:	LSHC	T1,6			;GET SIX BITS
	MOVEI	T1," "-' '(T1)		;CONVERT SIX--> 7 BIT
	OUTCHR	T1			;PRINT THE CHARACTER
	SETZ	T1,			;CLEAR THE VEHICLE
	JUMPE	T2,CPOPJ		;RETURN
	JRST	OUTSI0			;  ELSE LOOP

CPOPJ:	POPJ	P,			;RETURN

	PRGEND
	TITLE	PPNOUT	Routine to type T1 as a PPN
	SUBTTL	PPN type out routine (PPNOUT)
	SEARCH	CARL,MACTEN,JOBDAT,UUOSYM
	SALL

	ENTRY	PPNOUT,OWNPPN
	EXTERN	TYPOUC,OUTOCT

;PPNOUT - ROUTINE TO TYPE THE CONTENTS OF T1 AS [...,...]
;	  SUBSTITUTING *'S WHERE APPLICABLE INSTEAD OF TYPING
;	  7777777.
;CALL:
;		MOVE	T1,<PPN>	;GET PPN TO TYPE
;		PUSHJ	P,PPNOUT	;TYPE IT
;		  <ONLY RETURN>		; RETURN
;
;AC'S USED --NONE--

;OWNPPN - SAME AS ABOVE, ONLY TYPE MY PPN USING GETPPN CALL.
;

OWNPPN:	PUSH	P,T1			;SAVE T1
	GETPPN	T1,			;GET PPN
	  JFCL				; CATCH SKIP IN PRIV. PROGRAM
	JRST	PPNOU0			; PRINT IT

PPNOUT:	PUSH	P,T1			;SAVE ENTIRE PPN
PPNOU0:	PUSH	P,T2			;AND 2 AC'S USED BY OUTOCT
	PUSH	P,T3			; ...
	MOVEI	T1,"["			;OPEN BRACKET
	CALL	TYPOUC			;  --TYPE IT
	HLRZ	T1,(P)			;GET PROJECT
	CAIN	T1,-1			;SEE IF *
	  CALL	PPNSTR			;TYPE A STAR (SKIP RETURN)
	CALL	OUTOCT			;  OR TYPE OCTAL # IF TAME
	MOVEI	T1,","			;COMMA REQUIRED
	CALL	TYPOUC			;  --TYPE IT
	HRRZ	T1,(P)			;GET PROGRAMMER
	CAIN	T1,-1			;SEE IF A *
	  CALL	PPNSTR			;  YES-- TYPE ONE (SKIP RETURN)
	CALL	OUTOCT			;ELSE NO-- TYPE OCTAL NUMBER
	MOVEI	T1,"]"			;CLOSE OFF BORDER
	CALL	TYPOUC			;FINISH UP .
	POP	P,T3			;RESTORE OUTOCT'S AC'S
	POP	P,T2			; ...
	POP	P,T1			;RESTORE PPN
	POPJ	P,			;RETURN


PPNSTR:	MOVEI	T1,"*"			;GET A WILD CARD
	CALL	TYPOUC			;TYPE THE CHARACTER
	AOS	(P)			;READY FOR SKIP RETURN
	POPJ	P,			; RETURN

	PRGEND
	TITLE	GETIT	ROUTINES TO GET WORDS IN SIXBIT & OCTAL
	SUBTTL	BY	Carl A. Baltrunas

	SEARCH	CARL,MACTEN,JOBDAT,UUOSYM
	SALL

	ENTRY	GETWRD
	ENTRY	OCTWRD
	ENTRY	CHKCHR

	EXTERN	TYPINC

;GETWRD	- ROUTINE RETURN CONTAINING A SIXBIT WORD IN T2 WITH A MASK IN T3
;	  THIS ROUTINE ALSO RETURNS THE BREAK CHARACTER IN T1
;	  IF EOL IS REACHED, AC WILL BE NEGATIVE. THUS IT IS WISE TO
;	  CLEAR T1, TO INSURE YOU WILL RETURN WITH A LEGAL CHARACTER.
;
;  CALL:	PUSHJ	P,GETWRD
;		  <ONLY RETURN>
;
;AC'S USED: T1-BREAK, T2-WORD, T3-MASK
;

;OCTWRD	- SIMILAR TO GETWRD, ONLY READS OCTAL NUMBERS
;
;  CALL:	<SAME AS FOR GETWRD>
;

;CHKCHR	- ROUTINE TO CHECK OVER INPUT CHARACTERS LOOKING FOR A BREAK OR
;	  AN EOL CHARACTER.  LOWER CASE IS ALSO CHECKED AS UPPER CASE
;
;  CALL:	PUSHJ	P,CHKCHR
;		  <BREAK RETURN>
;		<NON-BREAK RETURN>
;
;AC'S USED: T1, IF EOL == -1, IF ESC == -1, IF ^Z == -3, ELSE == CHAR
	SUBTTL	Get a Sixbit Word (GETWRD)

;GETWRD	- ROUTINE RETURN CONTAINING A SIXBIT WORD IN T2 WITH A MASK IN T3
;	  THIS ROUTINE ALSO RETURNS THE BREAK CHARACTER IN T1
;	  IF EOL IS REACHED, AC WILL BE NEGATIVE. THUS IT IS WISE TO
;	  CLEAR T1, TO INSURE YOU WILL RETURN WITH A LEGAL CHARACTER.
;
;  CALL:	PUSHJ	P,GETWRD
;		  <ONLY RETURN>
;
;AC'S USED: T1-BREAK, T2-WORD, T3-MASK
;

GETWRD:	SETZB	T2,T3			;CLEAR RESULTANT WORDS ALWAYS!
	SKIPGE	T1			;IF NEGATIVE, ALREADY AT EOL
	  POPJ	P,			;SO RETURN TO USER UNTOUCHED
	PUSH	P,[POINT 6,T3]		;POINTER FOR MASK
	PUSH	P,[POINT 6,T2]		;POINTER FOR WORD
	PUSH	P,[6]			;NUMBER OF LEGAL CHARACTERS
	SETOM	SPACES			;SET LEADING SPACES ON
	SETOM	STARS			;SET WILDCARD STARS OFF
GETWR0:	CALL	TYPINC			;READ A CHARACTER FROM THE TTY
	CALL	CHKCHR			;CHECK CHAR FOR BREAK
	  JRST	GETWR4			;--BREAK--
	JUMPE	T1,GETWR0		;IGNORE LEADING SPACES & TABS
	CAIE	T1,'*'			;SEE IF IT'S A WILD ONE
	  JRST	GETWR3			;IT'S A LEGAL CHARACTER - NOT *
	SETZM	STARS			;AH-HA, MUST BE A BREAK NEXT CHARACTER
	MOVEI	T1,77			;GET A QUESTION MARK
GETWR1:	SOSGE	(P)			;COUNT THE CHARACTERS
	  JRST	GETWR0			;NONE LEFT--SO IGNORE THEM
	IDPB	T1,-1(P)		;DEPOSIT WILDCARD CHARACTER
	IDPB	T1,-2(P)		; IN BOTH WORD & MASK
	JRST	GETWR1			;LOPP TILL ALL 6 CHARS DONE!

GETWR3:	SETZM	SPACES			;TELL USER: A SPACE IS A --BREAK--
	SOSGE	(P)			;SEE IF USED ALL SIX YET?
	  JRST	GETWR0			;YEP, SO WAIT TILL BREAK
	CAIN	T1,'?'			;IS IT A WILD CHARACTER?
	  MOVEI	T1,77			;YES--SO MAKE IT MASK ALL
	IDPB	T1,-1(P)		;DEPOSIT CHARACTER
	IBP	-2(P)			;MOVE POINTER ON MASK
	CAIN	T1,77			;WAS IT A WILD CHARACTER?
	  DPB	T1,-2(P)		;YES--SO PUT IT INTO MASK
	JRST	GETWR0			;LOOP TILL OUT OF CHARS

GETWR4:	POP	P,(P)			;ZAP COUNTER
	POP	P,(P)			;ZAP WORD POINTER
	POP	P,(P)			;ZAP MASK POINTER
	POPJ	P,			;RETURN TO CALLER, BREAK CHAR IN T1
					;  RESULT IN T2
					;  MASK IN T3
	SUBTTL	Input an Octal Word (OCTWRD)

;OCTWRD	- SIMILAR TO GETWRD, ONLY READS OCTAL NUMBERS
;
;  CALL:	<SAME AS FOR GETWRD>
;

OCTWRD:	SETZB	T2,T3			;ALWAYS CLEAR THE WORD & MASK
	SKIPGE	T1			;SEE IF ALREADY AT EOL?
	  POPJ	P,			;YEP, -- SO JUST RETURN
	SETOM	STARS			;A STAR IS BORN
OCTWR0:	CALL	TYPINC			;READ A CHARACTER FROM THE KEYBOARD
	CALL	CHKCHR			;MAKE SIXBIT & CHECK ON EOL STUFF
	  POPJ	P,			;FOUND A --BREAK-- SO RETURN
	JUMPE	T1,OCTWR0		;IGNORE LEADING SPACES & TABS
	CAIL	T1,'0'			;SEE IF IT'S A LEGAL
	CAILE	T1,'7'			;OCTAL CHARACTER?
	  CAIA				;NO--SO LOOK AT THIS FURTHER
	JRST	OCTWR4			;YES-- LEGAL NUMBER, GO TO WORK
	CAIE	T1,'?'			;SEE IF IT'S A WILD CARD
	  JRST	OCTWR1			;NO--SO SKIP THIS ROT
	ANDI	T1,7			;STRIP OFF TOP PART
	LSH	T2,3			;MAKE ROOM FOR DADDY
	IOR	T2,T1			;AND PUT THE NUMBER IN
	LSH	T3,3			;MAKE ROOM FOR MOMMY
	IOR	T3,T1			;AND SEE WHAT POPS UP
	JRST	OCTWR0			;LOOP THROUGH FOR NEXT

OCTWR1:	CAIE	T1,'*'			;SEE IF IT'S A WILD ONE
	  POPJ	P,			;OOPS, GUESS IT'S REALLY A BREAK
	SETZM	STARS			;AH-HA, MUST BE A BREAK NEXT CHARACTER
	EXCH	T1,T2			;ALLOW T2 TO BE CLOBBERED BY JFFO
	JFFO	T1,OCTWR3		;COUNT HOW FAR TO SHIFT
	SETOB	T2,T3			;ALL ZERO? -- MAKE *
	JRST	OCTWR0			;..DONE
OCTWR3:	PUSH	P,T3			;SAVE SO IDIVI WON'T DESTROY
	IDIVI	T2,3			;FIND OUT HOW MANY NUMERIC PLACES
	POP	P,T3			;RESTORE TEMP
	IMULI	T2,3			;CONVERT INTO BITS (MOD3)
	EXCH	T1,T2			;SWAP PLACES AGAIN WITH WORD
	LSH	T2,(T1)			;SHIFT THE WORD PROPERLY
	LSH	T3,(T1)			;AND THE MASK ALSO
	PUSH	P,T2			;SAVE THIS FROM WEAR & TEAR
	SETO	T2,			;THEN GET A ONE'S WORD
	LSH	T2,(T1)			;AND SHIFT OFF MASK
	SETCA	T2,			;COMPLEMENT MASK
	IORM	T2,T3			;SET THE MASK
	POP	P,T2			;RESTORE WORD
	LSH	T2,-^D18		;SHIFT TO HOLD HALF WORD QUANTITY
	LSH	T3,-^D18		;FOR BOTH THE WORD & MASK
	IORM	T3,T2			;SET MASK OVER WORD
	JRST	OCTWR0			;AND LOOP FOR NEXT CHARACTER

OCTWR4:	LSH	T2,3			;SHIFT TO RECIEVE RECRUIT
	LSH	T3,3			;SHIFT TO STAY IN STEP
	ANDI	T1,7			;STRIP OFF UNIFORM
	IOR	T2,T1			;AND COUNT OFF THE NUMBERS
	JRST	OCTWR0			;LOOP!
	SUBTTL	Check Input character for --BREAK-- (CHKCHR)

;CHKCHR	- ROUTINE TO CHECK OVER INPUT CHARACTERS LOOKING FOR A BREAK OR
;	  AN EOL CHARACTER.  LOWER CASE IS ALSO CHECKED AS UPPER CASE
;
;  CALL:	PUSHJ	P,CHKCHR
;		  <BREAK RETURN>
;		<NON-BREAK RETURN>
;
;AC'S USED: T1, IF EOL == -1, IF ESC == -1, IF ^Z == -3, ELSE == CHAR
;
CHKCHR:	CAIL	T1,40			;IS IT A CONTROL CHARACTER?
	  JRST	CHKCH0			;NO--SO SKIP NEXT PART
	CAIN	T1,15			;A CARRIAGE RETURN?
	  CALL	TYPINC			;YES-- READ THE LINE FEED & GO
	CAIE	T1,12			;LINE FEED?
	CAIN	T1,13			;  OR VERTICAL TAB?
	  JRST	CHKCH1			;YES-- SET TO -1 & RETURN
	CAIE	T1,14			;FORM FEED?
	CAIN	T1,7			;  OR BELL?
	  JRST	CHKCH1			;YES-- SET TO -1 & RETURN
	CAIN	T1,33			;ESCAPE?
	  JRST	CHKCH2			;YES-- SET TO -2 & RETURN
	CAIE	T1,175			;OLD ALTMODE?
	CAIN	T1,176			;EVEN OLDER ALTMODE?
	  JRST	CHKCH2			;YES-- SET TO -2 & RETURN
	CAIN	T1,32			; ^Z ???
	  JRST	CHKCH3			;YES-- SET TO -3 & RETURN
	CAIN	T1,11			;SEE IF A TAB
	  SKIPA	T1,[" "]		;YES--MAKE IT A SPACE
	MOVEI	T1,100(T1)		;MAKE OTHER CONTROL'S UPPER CASE
CHKCH0:	CAIL	T1,140			;SEE IF IT'S LOWER CASE?
	  MOVEI	T1,-40(T1)		;IF SO-- MAKE UPPER CASE
	MOVEI	T1,-40(T1)		;MAKE ALL CHARACTERS SIXBIT
	CAIL	T1,'0'			;SEE IF WITHIN NUMERIC RANGE
	CAILE	T1,'9'			;   FROM 0-9
	  CAIA				;NO-- SKIP
	JRST	CPOPJ1			;GOOD CHARACTER-- GIVE SKIP RETURN
	CAIL	T1,'A'			;SEE IF WITHIN ALPHA RANGE
	CAILE	T1,'Z'			;   FROM A-Z
	  CAIA				;NO-- SKIP
	JRST	CPOPJ1			;GOOD CHARACTER-- GIVE SKIP RETURN
	CAIE	T1,'*'			;SEE IF A WILD CARD CHARACTER
	CAIN	T1,'?'			;  --*-- OR  --?--
	  JRST	CPOPJ1			;GIVE SKIP RETURN
	SKIPN	SPACES			;SEE IF STILL IN LEADING SPACES?
	  POPJ	;NO--SO EVEN SPACE IS A BREAK
	JUMPE	T1,CPOPJ1		;YES-- A SPACE IS IGNORED
	  POPJ	P,			;--BREAK--

CHKCH1:	SETO	T1,			;TELL IT'S A NORMAL EOL
	POPJ	P,			;ACT AS  --BREAK--

CHKCH2:	SETO	T1,			;SETUP AS AN ESCAPE
	SOJ	T1,			; CHARACTER (-2)
	POPJ	P,			;THEN ACT AS  --BREAK--

CHKCH3:	MOVE	T1,[EXP -3]		;TELL IT'S A ^Z EXIT
	POPJ	P,			;ACT AS  --BREAK--

CPOPJ1:	AOS	(P)			;SETUP FOR SKIP RETURN
	POPJ	P,			; RETURN

STARS:	BLOCK	1			;LOCATION FOR STARS
SPACES:	BLOCK	1			;LOCATION FOR SPACES

	PRGEND
	TITLE	FILEIO	File I/O routines
	SUBTTL	I/O Substitution routines

	SEARCH	CARL,MACTEN,JOBDAT,UUOSYM
	SALL

	ENTRY	FILIN,FILOUT,FILINC,FILOUC
	EXTERN	MSGOUT,OUTOCT

	IN.CHN==1	;DEDICATED INPUT CHANNEL
	OUT.CHN==2	;DEDICATED OUTPUT CHANNEL

;FILIN	- USE SPECIFIED ROUTINE FOR FILE INPUT
;FILOUT	- USE SPECIFIED ROUTINE FOR FILE OUTPUT
;
;  CALL:	MOVE	T1,<ADDRESS OF ROUTINE>	; IF ZERO (0) USE DEFUALT
;		PUSHJ	 P,<SUBSTITUTON ROUTINE>; NAME OF ROUTINE ABOVE
;

FILIN:	EXCH	T1,FILICH		;SETUP NEW ADDRESS
	POPJ	P,			;THEN RETURN

FILOUT:	EXCH	T1,FILOCH		;SETUP NEW ADDRESS
	POPJ	P,			;THEN RETURN
	SUBTTL	File Input a Character Routine (External)

;FILINC	- ROUTINE TO READ A CHARACTER FROM A FILE
;	  IF FILICH IS NON-NULL (CALL TO FILIN, ABOVE) THEN
;	  DISPATCH IS MADE TO THE USER'S FILE-INPUT ROUTINE
;	  OTHERWISE THIS ASSUMES A FILE WAS OPENED USING THE
;	  DEFAULT OPEN ROUTINE.
;
;	--CURRENTLY NON-FUNCTIONAL
;

FILINC:	SKIPE	FILICH			;SEE IF USING EXTERNAL ROUTINE
	  PJRST	@FILICH			;YES--USE THEIR ROUTINE
FILIN0:	SOSGE	IBUF+2			;COUNT CHARACTERS READ
	  JRST	FILIN1			;NONE?, THEN GET NEW BUFFER
	ILDB	T1,IBUF+1		;READ FILE
	JUMPE	T1,FILIN0		;IGNORE NULLS IN ASCII FILE
CPOPJ1:	AOS	(P)			;SKIP RETURN SETUP
	POPJ	P,			;RETURN

FILIN1:	IN	IN.CHN,			;GET A BUFFER
	  JRST	FILIN0			;OK, GET YOUR CHARACTERS
	STATZ	IN.CHN,IO.ERR		;SEE IF AN ERROR?
	  CAIA				;SKIP IF ERROR
	PJRST	FILIN2			;SKIP DOWN TO CLOSE,RELEAS
	MOVEI	T1,[ASCIZ\
%FIOIRE	Input Read Error (\]		;FIRST PART OF MESSAGE
	CALL	MSGOUT			;PRINT MESSAGE
	GETSTS	IN.CHN,T1		;CHANNEL STATUS IN T1
	CALL	OUTOCT			;OCTAL OUTPUT ROUTINE (T1)
	MOVEI	T1,[ASCIZ\)
\]					;FINISH UP
FILIN2:	CLOSE	IN.CHN,			;CLOSE CHANNEL
	RELEAS	IN.CHN,			;DONE!
	POPJ	P,			;<ERROR RETURN>
	SUBTTL	File Output a Character Routine (Internal)

;FILOUC	- ROUTINE TO WRITE A CHARACTER TO A FILE
;	  IF FILOCH IS NON-NULL (CALL TO FILOUT, ABOVE) THEN
;	  DISPATCH IS MADE TO THE USER'S FILE-OUTPUT ROUTINE
;	  OTHERWISE THIS ASSUMES A FILE WAS OPENED USING THE
;	  DEFAULT OPEN ROUTINE.
;
;	--CURRENTLY NON-FUNCTIONAL
;

FILOUC:	SKIPE	FILICH			;SEE IF USING EXTERNAL ROUTINE
	  PJRST	@FILICH			;YES--USE THEIR ROUTINE
FILOU0:	SOSGE	OBUF+2			;COUNT CHARACTERS READ
	  JRST	FILOU1			;NONE?, THEN GET NEW BUFFER
	ILDB	T1,OBUF+1		;READ FILE
	JUMPE	T1,FILOU0		;IGNORE NULLS OUT ASCII FILE
	JRST	CPOPJ1			;RETURN WITH SKIP

FILOU1:	OUT	OUT.CHN,		;GET A BUFFER
	  JRST	FILOU0			;OK, GET YOUR CHARACTERS
	STATZ	OUT.CHN,IO.ERR		;SEE IF AN ERROR?
	  CAIA				;SKIP IF ERROR
	PJRST	FILOU2			;SKIP DOWN TO CLOSE,RELEAS
	MOVEI	T1,[ASCIZ\
%FIOOWE	Output Write Error (\]		;FIRST PART OF MESSAGE
	CALL	MSGOUT			;PRINT MESSAGE
	GETSTS	OUT.CHN,T1		;CHANNEL STATUS OUT T1
	CALL	OUTOCT			;OCTAL OUTPUT ROUTINE (T1)
	MOVEI	T1,[ASCIZ\)
\]					;FOUTISH UP
FILOU2:	CLOSE	OUT.CHN,		;CLOSE CHANNEL
	RELEAS	OUT.CHN,		;DONE!
	POPJ	P,			;<ERROR RETURN>
	SUBTTL	Data Storage locations

FILICH:	BLOCK	1		;STORAGE FOR INPUT CHARACTER ROUTINE
FILOCH:	BLOCK	1		;STORAGE FOR OUTPUT CHARACTER ROUTINE

IBUF:	BLOCK	3		;STORAGE FOR BUFFER HEADERS
OBUF:	BLOCK	3		;STORAGE FOR BUFFER HEADERS

	PRGEND
	TITLE	TTYCIO	I/O ROUTINES FOR TTY, USING T1
	SUBTTL	I/O Substitution routines

	SEARCH	CARL,MACTEN,JOBDAT,UUOSYM
	SALL

	ENTRY	TYPIN,TYPOUT,TYPINC,TYPOUC

;TYPIN	- USE SPECIFIED ROUTINE FOR TTY INPUT
;TYPOUT	- USE SPECIFIED ROUTINE FOR TTY OUTPUT
;
;  CALL:	MOVE	T1,<ADDRESS OF ROUTINE>	; IF ZERO (0) USE DEFUALT
;		PUSHJ	 P,<SUBSTITUTON ROUTINE>; NAME OF ROUTINE ABOVE
;

TYPIN:	EXCH	T1,TYPICH		;SETUP NEW ADDRESS
	POPJ	P,			;THEN RETURN

TYPOUT:	EXCH	T1,TYPOCH		;SETUP NEW ADDRESS
	POPJ	P,			;THEN RETURN


	SUBTTL	Teletype Input & Output Routines (Internal)

;TYPINC	- ROUTINE TO READ A CHARACTER FROM A USER'S TERMINAL
;TYPOUC	- ROUTINE TO TYPE A CHARACTER ON A USER'S TERMINAL
;
;	THIS ROUTINE IS IDENTICAL TO THE .TYOCH CALL IN DEC'S SCAN
;	MODULE, USED TO RE-DIRECT TERMINAL I/O TO A SPECIFIC ROUTINE
;	INSTEAD OF SIMPLY TYPING ON THE TERMINAL.  A CALL WITH T1
;	LOADED WITH AN ADDRESS DIRECTS I/O TO THE USER'S ROUTINE, AND
;	A NULL VALUE RESETS I/O BACK TO THE TERMINAL
;

TYPINC:	SKIPE	TYPICH			;SEE IF WE USE AN EXTERNAL ROUTINE
	  PJRST	@TYPICH			;YES--IT SEEMS SO
	INCHWL	T1			;NO---JUST USE SIMPLE TTCALL
	CAIE	T1,";"			;SEE IF A SEMI-COLON
	CAIN	T1,"!"			;OR AN EXCLAIMATION POINT.
	  JRST	TYPIN0			;YES--HANDLE IT.
	CAIN	T1,42			; OR MAYBE A (")
	  JRST	TYPIN2			;HANDLE THAT ALSO.
	POPJ	P,			;RETURN

TYPIN0:	SKIPE	$$$TYC			;IS GLOBAL COMMENT FLAG SET?
	  POPJ	P,			;YES--SO ALLOW IT TO PASS.
	SKIPE	QUOTE			;ARE WE INSIDE A QUOTE?
	  POPJ	P,			;YES!--SO ALLOW IT TO PASS.
TYPIN1:	INCHWL	T1			;READ A CHAR
	CAIE	T1,7			; BELL?
	CAIN	T1,33			;  OR ESC?
	  POPJ	P,			;YES--WE'RE DONE
	CAIL	T1,12			; LF? VT? FF? CR?
	CAILE	T1,15			;  "   "   "   "
	  JRST	TYPIN1			;NO--SO TRY AGAIN
	POPJ	P,			;ELSE LET IT THROUGH.

TYPIN2:	MOVN	T1,QUOTE		;GET QUOTE
	AOJ	T1,			;  AND PERFORM A
	MOVEM	T1,QUOTE		;   FLIP-FLOP ON IT 0 OR 1
	JRST	TYPINC			; GET ANOTHER CHARACTER


TYPOUC:	SKIPE	TYPOCH			;SEE IF WE USE AN EXTERNAL ROUTINE
	  PJRST	@TYPOCH			;YES--SO USE THEIR ROUTINE
	OUTCHR	T1			;NO--JUST TYPE IT
	POPJ	P,			;RETURN!


	SUBTTL	Data Storage locations

TYPICH:	BLOCK	1		;STORAGE FOR INPUT CHARACTER ROUTINE
TYPOCH:	BLOCK	1		;STORAGE FOR OUTPUT CHARACTER ROUTINE

$$$TYC::BLOCK	1		; IF 0, THEN DON'T ALLOW COMMENTS ! OR ;
COMENT:	BLOCK	1		; FLAG FOR COMMENT MODE
QUOTE:	BLOCK	1		; FLAG FOR QUOTE MODE. INITIALLY 0

	PRGEND
	TITLE	INCHAR ROUTINES TO READ CHARACTERS
	SUBTTL	SUBROUTINES	INCHAR

	SEARCH	CARL,MACTEN
	SALL

	ENTRY	INCHAR

;INCHAR - READS A CHARACTER FROM THE TERMINAL AND RETURNS IT IN C
;
;	EOL CHARACTERS RETURN AS -1,  LOWER CASE IS CONVERTED TO UPPER
;
;	AC'S USED:	C

INCHAR:	INCHWL	C			;READ A CHARACTER
	CAIE	C,7			; FUNNY PERSON WITH A BELL
	CAIN	C,33			; OR AN ALTMODE
	  JRST	EOL			; END OF LINE!
	CAIL	C,12			; SEE IF OTHER EOL?
	CAILE	C,15			; ...LF,VT,FF,CR
	  CAIA				; NO--
	JRST	EOL			; THESE ARE FINE.
	CAIL	C,"a"			; OR alpha IN lower case.
	CAILE	C,"z"			; ...
	  POPJ	P,			; RETURN.
	TXZ	C,40			; CLEAR LOWER CASE BIT
	POPJ	P,			; RETURN

EOL:	CAIE	C,15			; SEE IF A CR?
	OUTSTR	[ASCIZ\
\]					; HE DIDN'T TYPE IT, SO WE WILL
	CAIN	C,15			; IF IT WAS A CR, THEN...
	INCHRW	C			; YEP... SO GET LF
	SETO	C,			; SHOW UP FUNNY.
	POPJ	P,			; THEN RETURN TO USER

	PRGEND
	TITLE	RANDOM	-  RANDOM NUMBER ROUTINES
	SUBTTL	RAN	RANI
	SEARCH	CARL
	SALL

	ENTRY	RAN,RANI	;RANDOM #'S, AND RAN INITIALIZER

;RANI - INITIALIZE SEED FOR RAN
;

RANI:	PUSH	P,T1			; SAVE T1
	MSTIME	T1,			; GET THE TIME SINCE MIDNIGHT
	IMULI	T1,^D18			; MULTIPLY
	ADDI	T1,^D5			; ADD
	MOVEM	T1,SEED			; THEN SAVE IT.

	DATE	T1,			; GET THE DATE
	IDIVI	T1,^D1000		;  .MOD. 1000
	ADDI	T1,^D1000		; THEN ADD 1000 FOR LOOP
	MOVEM	T1,SEED+1		; THEN GO!
	POP	P,T1			; RESTORE TEMP AC.
	POPJ	P,


;RAN - RANDOM NUMBER ROUTINE, GRATIS GOES TO CROWTHIER & WOODS OF
;	ADVENTURE FAME, AL LA JIM BECKER & KNUTH VOL.2
;
;	USES RANGE FROM 0 TO (T1)-1
;	RETURNS RESULT IN T1.
;
;	AC'S USED:	T1

RAN:	SKIPN	SETRAN			; SEE IF WE'VE BEEN HERE BEFORE?
	  CALL	RANI			; NO!
	SETOM	SETRAN			; SET FLAG!
	PUSH	P,T2			; SAVE AC'S T2 THROUGH T4
	PUSH	P,T3
	PUSH	P,T4
	MOVE	T2,SEED			; GET THE PLANT.
	MOVEI	T4,1			; GET ONE TO START
	SKIPN	T2			; SKIP IF SEED NON-ZERO
	MOVE	T4,SEED+1		; GET NUMBER
RANLOP:	IMULI	T2,^D1021		; MULT BY LITTLE LESS THAN 1K
	IDIV	T2,[EXP ^D1048576]	; GET A FUNNY NUMBER
	SOJG	T4,RANLOP		; LOOP IF YOU THINK NECESSARY
	MOVEM	T3,SEED			; NEW SEED
	IMUL	T1,T3			; MULT SEED BY RANGE
	IDIV	T1,[EXP ^D1048576]	; AND DIVIDE AGAIN
	POP	P,T4			; RESTORE AC'S T4 THROUGH T2
	POP	P,T3
	POP	P,T2
	POPJ	P,			; RETURN VALUE IN SEED

SEED:	BLOCK	2			;NECESSARY SEEDLING
SETRAN:	BLOCK	1			;FLAG!

	PRGEND
	TITLE	OUTNUM
	SUBTTL	SUBROUTINES	OUTDEC, OUTOCT, OUTNUM

	SEARCH	CARL
	SALL

	ENTRY	OUTNUM,OUTDEC,OUTOCT

;OUTOCT - ROUTINE TO TYPE OUT A NUMBER IN OCTAL RADIX
;OUTNUM - ROUTINE TO TYPE OUT A NUMBER IN RADIX CONTAINED IN T3
;OUTDEC - ROUTINE TO TYPE OUT A NUMBER IN DECIMAL RADIX
;
;	MOVE	T1,NUMBER	; GET A NUMBER
;	CALL	OUTDEC		; ...
;	  <RETURN>
;
;	AC'S USED:	T1,T2,T3,C

OUTDEC:	SKIPA	T3,[^D10]	; SET RADIX 10
OUTOCT:	MOVEI	T3,10		; USE STANDARD OCTAL
OUTNUM:	IDIV	T1,T3		; DIVIDE
	HRLM	T2,(P)		; GET A REMAINDER
	SKIPE	T1		; SKIP WHEN 0
	PUSHJ	P,OUTNUM	; PRINT A NUMBER
	HLRZ	C,(P)		; GET A DIGIT
	MOVEI	C,"0"(C)	; MAKE IT PRINTABLE
	OUTCHR	C		; THEN PRINT IT.
	POPJ	P,		; RETURN.. THAT WAS QUICK.

	PRGEND
	TITLE	CNTDT
	SUBTTL	.CNTDT -- GENERALIZED DATE/TIME SUBROUTINE

	SEARCH	CARL,MACTEN,JOBDAT,UUOSYM
	SALL

	ENTRY	.CNTDT

;.CNTDT -- SUBROUTINE TO CONVERT FROM INTERNAL DATE/TIME FORMAT
;CALL:	MOVE	T1,DATE/TIME
;	PUSHJ	P,.CNTDT
;	RETURN WITH T1=TIME IN MS., T2=DATE IN SYSTEM FORMAT (.LT. 0 IF ARG .LT. 0)
;BASED ON IDEAS BY JOHN BARNABY, DAVID ROSENBERG, PETER CONKLIN
;USES T1-4

.CNTDT:PUSH	P,T1		;SAVE TIME FOR LATER
	JUMPL	T1,CNTDT6	;DEFEND AGAINST JUNK INPUT
	HLRZ	T1,T1		;GET DATE PORTION (DAYS SINCE 1858)

	RADIX	10		;**** NOTE WELL ****

	ADDI	T1,<1857-1500>*365+<1857-1500>/4-<1857-1500>/100+<1857-1500>/400+31+28+31+30+31+30+31+31+30+31+17
				;T1=DAYS SINCE JAN 1, 1501	[311]
	IDIVI	T1,400*365+400/4-400/100+400/400
				;SPLIT INTO QUADRACENTURY	[311]
	LSH	T2,2		;CONVERT TO NUMBER OF QUARTER DAYS  [311]
	IDIVI	T2,<100*365+100/4-100/100>*4+400/400
				;SPLIT INTO CENTURY		[311]
	IORI	T3,3		;DISCARD FRACTIONS OF DAY	[311]
	IDIVI	T3,4*365+1	;SEPARATE INTO YEARS		[311]
	LSH	T4,-2		;T4=NO DAYS THIS YEAR		[311]
	LSH	T1,2		;T1=4*NO QUADRACENTURIES	[311]
	ADD	T1,T2		;T1=NO CENTURIES		[311]
	IMULI	T1,100		;T1=100*NO CENTURIES		[311]
	ADDI	T1,1501(T3)	;T1 HAS YEAR, T4 HAS DAY IN YEAR	[311]

	MOVE	T2,T1		;COPY YEAR TO SEE IF LEAP YEAR
	TRNE	T2,3		;IS THE YEAR A MULT OF 4?	[311]
	JRST	CNTDT0		;NO--JUST INDICATE NOT A LEAP YEAR  [311]
	IDIVI	T2,100		;SEE IF YEAR IS MULT OF 100	[311]
	SKIPN	T3		;IF NOT, THEN LEAP		[311]
	TRNN	T2,3		;IS YEAR MULT OF 400?		[311]
	TDZA	T3,T3		;YES--LEAP YEAR AFTER ALL	[311]
CNTDT0:	MOVEI	T3,1		;SET LEAP YEAR FLAG		[311]
				;T3 IS 0 IF LEAP YEAR
	;UNDER RADIX 10 **** NOTE WELL ****

CNTDT1:	SUBI	T1,1964		;SET TO SYSTEM ORIGIN
	IMULI	T1,31*12	;CHANGE TO SYSTEM PSEUDO DAYS
	JUMPN	T3,CNTDT2	;IF NOT LEAP YEAR, PROCEED
	CAIGE	T4,31+29	;LEAP YEAR--SEE IF BEYOND FEB 29
	JRST	CNTDT5		;NO--JUST INCLUDE IN ANSWER
	SOS	T4		;YES--BACK OFF ONE DAY
CNTDT2:	MOVSI	T2,-11		;LOOP FOR 11 MONTHS

CNTDT3:	CAMGE	T4,CNTABL+1(T2)	;SEE IF BEYOND THIS MONTH
	JRST	CNTDT4		;YES--GO FINISH UP
	ADDI	T1,31		;NO--COUNT SYSTEM MONTH
	AOBJN	T2,CNTDT3	;LOOP THROUGH NOVEMBER

CNTDT4:	SUB	T4,CNTABL(T2)	;GET DAYS IN THIS MONTH
CNTDT5:	ADD	T1,T4		;INCLUDE IN FINAL RESULT

CNTDT6:	EXCH	T1,(P)		;SAVE ANSWER, GET TIME
	TLZ	T1,-1		;CLEAR DATE
	MUL	T1,[24*60*60*1000]	;CONVERT TO MILLI-SEC.
	ASHC	T1,17		;POSITION RESULT
	POP	P,T2		;RECOVER DATE
	POPJ	P,		;RETURN
	;UNDER RADIX 10 **** NOTE WELL ****

CNTABL:	EXP	0,31,59,90,120,151,181,212,243,273,304,334,365
	RADIX	8

		END
  q('m	