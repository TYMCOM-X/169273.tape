.C;SCOOP
.SP 1
.S 1
.C;MANAGEMENT SYSTEM FOR USER NOTICES
.b 2
.c;Clive B. Dawson
.c;U. T. Austin
.b 1
.c;July 14, 1978
.b 7
.title SCOOP
.nm 2
.hl 1 ^&INTRODUCTION\&
.par
The purpose of SCOOP is to provide users with news about the DEC-10
system.  In this role, it complements the functions of other information
distribution methods such as the newsletter, the MAIL system, and the
HLP files. SCOOP specializes in handling items of short-term importance, 
such as operation schedules, as opposed to information of a semi-permanent
or standing nature. Items can, of course, also serve to announce other
types of information by directing users to the appropriate source.
.par
The motivation for SCOOP's development arose from the inadequacies of
the NOTICE.TXT system.  NOTICE.TXT could not be allowed to grow too large,
since users would get the habit of suppressing its type-out. SCOOP
solves the problem by placing all the information into a file called
SCOOP.TXT and allowing access to individual items, rather than forcing the
user to look at the entire file whenever he needed only a portion of it.
The NOTICE.TXT file can then be restricted to a single line which simply
tells the user what the latest SCOOP item is.  If an item is deemed important
enough, there are facilities for displaying it in the NOTICE.TXT file, 
but this should happen only in rare cases.
.tp 18
.hl 1 ^&USAGE\&
.hl 2 ^&General\&
.par
SCOOP has two modes of operation: User Mode and Operator Mode.
When SCOOP is run by a normal user, its function is to display
the information SCOOP.TXT.  When SCOOP is run by an operator, its
function is to maintain SCOOP.TXT by allowing insertions, deletions,
etc.
.hl 2 ^&User Mode\& 
.hl 3 ^&Normal Run\&
To perform a normal SCOOP run, the user must type:
.br
.s 1
		.SCOOP <cr>
.br
.s 1
This will cause the all the items in SCOOP.TXT to be typed
out in reverse chronological order.  As each item appears, the user may:
.nap
.list
.le ;Type a _^O to skip to the start of the next item.
.le;Type two _^C's to abort the run when he has seen enough.
.els
.hl 3 ^&Quick Index Run\&
The user may obtain the title lines of all current SCOOP items
by typing:
.s 1
		.SCOOP Q <cr>
.s 1
Each title line contains the item number, creation date-time and
the title.
.hl 3 ^&Individual Item Run\&
To see a particular item, the user may type:
.s 1
		.SCOOP n <cr>
.s 1
where n is the item's unique number.
.hl 3 ^&Display of NOTICE.TXT\&
A user may easily examine the current NOTICE.TXT by typing:
.s 1
		.SCOOP N <cr>
.hl 2 ^&Operator Mode\&
.par
To run SCOOP, the operator must be logged into [1,2] and should
type:
.b 1
		.SCOOP <cr>
.b 1
SCOOP will then respond with an asterisk (*).  Any of the following
commands can be typed:
.tab stops 14
.list
.le ;<cr>	-##Type all current items.
.le;Q	-##Quick index.
.le;n	-##Type item _# n, where n is between 1 and 99.
.le;I	-##Insert an item.
.le;D	-##Delete an item.
.le;P	-##Purge an item.
.le;C	-##Clean up the SCOOP file.
.le;N	-##Type NOTICE.TXT.
.le;E	-##Exit.
.le;H	-##Help message.
.els
.par
Commands 1-3 are equivalent to the three user mode commands (see
2.2.1 - 2.2.3).  The only difference is that SCOOP will supply the operator with
one extra line of information per item consisting of the operator
ID, the expiration date, and flash status information if any.  The rest
of the operator commands are described below.
.hl 3 ^&Item Insertion\&
Typing an I will initiate the insertion dialogue.  The following parts of
the item will be asked for:
.list
.le;TITLE#-#This should be short but descriptive; it is the line which will
appear in the quick index type-out, as well as in NOTICE.TXT to initially
announce the item.  The title is limited to 40 characters.
.le;EXPIRATION#DATE#-#This will specify how long the item is to remain
in SCOOP.TXT as an active item. On expiration, it will be deleted and
transferred to SCOOP.OLD.  The default lifetime of an item is 2 weeks
which may be specified by replying with a <cr>.  Otherwise, the date
should be entered in the form DD-MMM-YY.  Note, however, that it is
usually not necessary to specify the entire date.  If, for example,
today's date is 19-OCT-75, the following table shows some possible
inputs and their results.
.bl 1
.tab stops 25,40
.no fill
.no justify
	19	19-OCT-75
	28	28-OCT-75
	9	 9-NOV-75
	23-DEC	23-DEC-75
	18-OCT	18-OCT-76
	<cr>	 2-NOV-75
.bl 1
.fill
.justify
In general, the next possible date which is consistent with the information
typed in will be used.  If this date is more than a month away, however, 
confirmation will be asked for.  If the operator types in a non-existent
date (e.g. 31-NOV) or uses an illegal format, an error message will
appear, and the date must be retyped.
.le;EXPIRATION#TIME#-#The default is 23:59 of the specified date, and
this may be specified by a <cr>. Otherwise, the format is HH:MM.
.le;OPERATOR#IDENTIFICATION#-#This will usually consist of the initials
of the person inserting the item.  The length is limited to 5 characters.
.le;FLASH#STATUS#-#The operator should reply with a Y if the item is
to be granted flash status, and with an N if it is not.  When an item is granted
flash status, it means that the entire text of the item will appear in
NOTICE.TXT.  In the affirmative
case, SCOOP will ask for the flash activation date and time. The default
case is for flash status to begin immediately.  Flash status will expire 24 hours from the time it is
activated, or when the item itself expires, whichever comes first.  
If flash status is not desired immediately, it can be set
to activate anytime during the life of the item, but in no case can it

last for more than 24 hours.  (There is also no way to get it to last
for ^&less\& than 24 hours, except to have the entire item expire.)
Furthermore, there can only be one flash item active at a time.  The way
this works is as follows:  Suppose that item 5 has flash status from 9:00
 on Thursday until 9:00 on Friday.  If item 6 is inserted at 10:00 on
Thursday and given flash status, then 6 will "bump"  5 out of
NOTICE.TXT since it is a more recent item.  Now assume that item 6 
expires at 18:00 on Thursday.  Item 5 will automatically regain its
flash status at this time, and keep it until 9:00 Friday, unless of
course, another flash item  comes along to bump it out.  To summarize,
then, several items can be given flash status during the same
period, but only the most recent item will prevail.
.le;PERMANENT#ITEM#-#SCOOP will next ask whether this item is to be
considered permanent.  A permanent item will be put into SCOOP.OLD
when it expires.  Non-permanent items will be thrown away entirely.
.le;ITEM#TEXT#-#Finally, SCOOP will ask for the actual text of the item.
At this time, SCOOP enters limited editor mode.  The following
characters can be used during text input:
.list
.le;RUBOUT#-#Deletes the last character typed in. The deleted character
will be echoed (without back slashes).
.le;##_^U###-#Deletes the current line, back to the last line feed.
.le;##_^R###-#Retypes the current line, from the last line feed.
.le;##_^G###-#Retypes the entire text, from the beginning.
.le;##_^H###-#Deletes the last character typed in by backspacing over it
and blanking it out.  USE ONLY FROM A CRT, or things will get very 
confusing.
.els
Note that text can be rubbed out back to the beginning, if necessary.
Remember that carriage-return and line-feed are characters in their
own right, and can be rubbed out to get to the previous line.
Liberal use of _^R is recommended, especially to clean up lines after
several deletions.  The situation gets confusing when _^H is used
to back up to a previous line, and so an automatic _^R is always
typed to show the previous line.  Also note that the only 
characters not allowed in the item text besides those above are
_^A, _^B, and _^E.  If typed, these characters behave the same as _^R.
When the entire text has been typed in, including the final carriage
return, an altmode (escape) should be typed to signal the end of the
text.
.sk
The insertion of a file of text is possible by
.br.indent 3;<ctrl F>file.ext<return>
.br;Indirect file access may be used as often as needed, mixed with regular type in, and may occur in mid-sentence as well as at the first of a line.
.els
.par
After the SCOOP item has been completely specified as described above,
SCOOP will then type the entire item exactly as it will appear  and 
ask the operator for an OK.  Note that the unique number assigned to 
the item is shown.
If the operator replies with a Y, the item will be inserted
into the SCOOP file at this time.  Also, NOTICE.TXT will be rewritten to include the title line
of the new item.
.hl 3 ^&Item Deletion\&
The D command should be used when an item needs to be deleted
before its expiration date.  SCOOP will simply ask for the number of
the doomed item.  It will then delete the item from SCOOP.TXT and,
if the item was specified as permanent, transfer it to SCOOP.OLD.  Also, if the item enjoyed flash status,
NOTICE.TXT will be rewritten to remove the flash.  If the item deleted
happens to be the most recent item in the SCOOP file, then the
next most recent item will now be the one announced in NOTICE.TXT.
.hl 3 ^&Purging an Item\&
The P command behaves exactly like the D command, except that the
doomed item will not be written into SCOOP.OLD, even if it is considered a permanent item.  This command is
useful whenever an item needs to be deleted and rewritten due to
a typographical error, inaccurate information, etc.
.hl 3 ^&Clean Up\&
The C command is used to perform maintenance on the SCOOP.TXT file.
The file will be read, expired items will be deleted, flashes will
be activated or deactivated, etc. Finally, NOTICE.TXT will be
written to reflect the current SCOOP file.  
.hl 3 ^&Type NOTICE.TXT\&
The N command can be used to examine NOTICE.TXT at any time.  This is
a convenient way to see what the most recent item is, as well as any
active flash item.
 
.hl 3 ^&Exit\&
The E command is used to exit from SCOOP.  IT SHOULD ALWAYS BE USED
IN PREFERENCE TO 2 CONTROL-C'S.  The reason is this:  While SCOOP
does its thing, it keeps track of the next time something is due to
happen, such as an item expiration, a flash activation, etc.  When the
E command is typed, SCOOP will figure out whether this time comes before
the next regular clean up run.  (These regular runs are currently performed
by OPSER when the SHIFT auto files are processed.) If SCOOP needs to 
do a clean up before an auto file is due, then it will submit a 
batch job to perform the clean up when needed.  At the same time, 
SCOOP will kill all previous requests in the batch queue.  If there
were no such requests, QUEUE will print a warning message:
.br
.bl 1
% Cant find request IN:SCOOP[1,2] in queue manager
.bl 1
This should be ignored.  If a batch request is submitted, SCOOP will
type "NEXT SCOOP CLEAN UP DUE AT HH:MM".
.hl 3 ^&Help message\&
The H command will provide a list of possible operator commands and
their purpose.
.hl 2 ^&Hints for the Operator\&
.list
.le;When inserting an item, remember to be as concise as possible.
Above all, NEVER use any "attention getting" techniques such as
lines of asterisks, or something like:
.center
NOTICE#NOTICE#NOTICE#NOTICE#NOTICE
This only serves to irritate the user, since he must sit there while
it types out.  This practice was fine with the 6600, since the notice
went on a printout and it ^&was\& necessary to catch the users' attention.  At 110 baud, it can be a pain.
.le;SCOOP will automatically insert a blank line between items, so try
not to leave blank lines in the text of the item.  This way, a uniform
appearance will be maintained.
.le;CHECK THE ITEM when SCOOP asks for the OK!  Look at the expiration date; 
is it what you want?  Are there any typographical errors?  This will save
you from having to purge the item later and reinsert it.
.le;This hint applies to items about system down time.  Let's say that
the system is due to be down from 14:00 to 18:00.  Rather than letting
the item expire at 18:00, give it an expiration time of, say, 14:30.
This way, if the system happens to come up before 18:00, the item will
be deleted, since SCOOP clean up always runs when the system comes up.
Also, be informative in the title of the item:  "System Down Time-
14:00 to 18:00 on Oct. 20" is much better than "System Down Time".
.le;If you do discover a typo in an item that is already inserted,
you may wish to consider fixing it with TECO.  Refer to section 3.0
to learn the format of the SCOOP file.  In general, any change can be
made to the text portion of the item, but BE CAREFUL if you change
either the title line or the operator information line.  Their format
must remain intact, down to the last space!  After the TECO session,
always run a SCOOP clean up.  If an item got messed up, you'll find out
quickly.  The alternative to all of this, of course, is to purge the
bad item and reinsert it.
.le;SCOOP was designed to be reasonably intelligent.  That is, it will
try to guess what you are trying to do before you even finish typing the
line.  Don't type a carriage return too fast!  Maybe SCOOP will do it for
you!
.le;Remember that flashes should be used VERY rarely.  The whole idea
behind SCOOP is to keep NOTICE.TXT short!
.le;A note on SCOOP clean ups:  In the ideal situation, BATCON 
would be running all the time, and would be able to process
the clean up runs at the exact time desired.  Since BATCON is
currently not up during the day, this means that items may still
appear after they were due to expire.  There are two solutions to
this problem. First, arrange to have items expire at the usual
23:59, since a SCOOP clean up is always run at midnight. Second,
if you see a message of the form "NEXT SCOOP CLEAN UP DUE AT ..."
and you know that BATCON will not be running at that time, then
you must do a SCOOP clean up on your own when it's due.
.le;Don't run SCOOP from OPSER unless you know what you're doing!
The output will be very confusing.  NEVER try to insert an item
from OPSER--that's the most confusing of all.
.els
.hl 1 ^&FILE FORMATS\&
.hl 2 SCOOP.TXT
SCOOP.TXT is the file which contains all current SCOOP items.  The
first line of this file is always of the form:
.bl 1
.br
	LATEST ITEM: n
.bl 1
.br
where n is the last unique number assigned to an item.  When a new
item is created, this number will be incremented to obtain the
item's unique number.  The SCOOP items begin on the second line of 
the file, and each one is made up of four parts:
.list
.le;The TITLE line, of the form:
.br
.no fill
.no just
.bl 1
.center
_^A[nn] dd-mmm-yy/hh:mm <TITLE> <cr> <lf>
.bl 1
.fill
.just
This line always starts with a control-A.
nn is the unique item number.  The date and time
tell when the item was created.  <TITLE> is a
short, descriptive title at most 40 characters long.
This line ends with a carriage return-line feed.
.le;The OPERATOR INFORMATION line, of the form:
.br
.bl 1
.center
_^B <ID> EXP: [dd-mmm-yy/hh:mm] <cr> <lf>
.bl 1
or, if the item has been given flash status, of the form:
.bl 1
.center
_^B <ID> EXP: [<exp>] FLASH: [<activate>]-[<deactivate>] <cr> <lf>
.bl 1
This line always starts with a control-B.  <ID> identifies the operator
who inserted the item.  This is followed by the expiration date and time.
If the item is considered permanent, there will be an astersik
in place of the blank after "EXP:".
If the item has been given flash status, the flash activation and
deactivation date-times will be shown.  <exp>, <activate>, and <deactivate>
are all of the form: "dd-mmm-yy/hh:mm".
  The line ends with a
carriage return-line feed. SCOOP will show this line only to operators.
.le;The TEXT, which starts immediately after the <cr>-<lf> of
the operator information line.  It is limited to 1500 characters.
.le;The END-OF-ITEM line, of the form:
.bl 1
.center
_^E <cr> <lf>
.bl 1
This line always signals the end of an item.  The following line
will be the title line of the next item, if any.
.els
.hl 2 SCOOP.OLD
.par
Whereas SCOOP.TXT contains items in reverse chronological order,
SCOOP.OLD contains items in order of deletion, which will turn
out to be roughly chronological.  When an item is transfered to 
SCOOP.OLD, the item number is removed, as well as the operator information
line.  The only other difference in the file format is that there
is no "LATEST ITEM: n" line at the beginning of the file.
.hl 2 NOTICE.TXT
.par
The NOTICE.TXT file will always contain a line of the form:
.bl 1
.center
LATEST SCOOP: <TITLE line of first item in SCOOP.TXT>
.bl 1
If there is a flash active, the above line will be preceded by:
.bl 1
.i 10
FLASH... 
.i 10
<TEXT of flash item>
.bl 1
