	UNIVERSAL	STUART	5-Jul-77/19-Oct-77

	.DIRECTIVE	.NOBIN

	F=0
	T1=1
	T2=T1+1
	T3=T2+1
	T4=T3+1

	P1=5
	P2=P1+1
	P3=P2+1
	P4=P3+1

	M1=11
	M2=M1+1
	M3=M2+1
	M4=M3+1

	C=15
	L=16
	P=17

	$PROJ==11
	$PROG==2013
	$PPN==11,,2013
	OPDEF	CALL	[PUSHJ	P,]
	OPDEF	RETURN	[POPJ	P,]
	OPDEF	GOTO	[JRST]
	OPDEF	NOP	[CAI]
	OPDEF	EXIT1	[EXIT	1,]

DEFINE	.RESET	<
	TDZA	F,F		;;SET OFFSET TO ZERO AND SKIP
	MOVEI	F,1		;;SET OFFSET TO ONE
	RESET			;;AND RESET I/O DEVICES
>

DEFINE	.EXIT(RESTAR),<
	EXIT	1,		;;EXIT TO MONITOR
IFNB	<RESTAR>,<	JRST	RESTAR>	;;JUMP TO STARTING POINT
IFB	<RESTAR>,<	JRST	.-1>	;;EXIT AGAIN IF CONTINUE
>	;;END OF .EXIT

DEFINE	TYPE(STRING),<
	OUTSTR	[ASCIZ\STRING\]
>	;;END OF TYPE

DEFINE	XCALL(ROUTIN),<
	PUSHJ	P,ROUTIN##
>	;;END OF XCALL

DEFINE	ERROR(CODE),<
	PUSHJ	P,E$$'CODE		;;JUMP TO ERROR ROUTINE
>	;;END OF ERROR


DEFINE	ERRSET(PRG),<

DEFINE	$FATAL(CODE,MSG),<
E$$'CODE:	TYPE	<?'PRG''CODE	MSG
>						;;TYPE OUT ERROR MESSAGE
>	;;END OF FATAL (IN ERRSET)


DEFINE	$WARN(CODE,MSG),<
E$$'CODE:	TYPE	<%'PRG''CODE	MSG
>						;;TYPE OUT WARNING MESSAGE
>	;;END OF $WARN
>	;;END OF ERRSET

DEFINE	.TWOSEG	<
	.SEG..==0		;;START IN HIGH SEG
	TWOSEG			;;OF A TWOSEGMENT PROG
	RELOC	400000		;;GO TO HIGH SEG
>

DEFINE	HISEG	<
IFN	.SEG..	<
	XLIST
	LIT
	LIST
	SALL
	RELOC>
	.SEG..=0>

DEFINE	LOWSEG	<
IFE	.SEG..	<
	XLIST
	LIT
	LIST
	SALL
	RELOC>
	.SEG..=-1>
DEFINE	TYPER(AC,NAME),<
	MOVE	M1,AC		;;GET THE VALUE
	MOVEI	M2,[ASCIZ/NAME/];;GET THE MESSAGE
	XCALL	M$TNUM		;;AND CALL THE ROUTINE
>	;;END OF TYPER

	END
