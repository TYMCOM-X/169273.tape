Procedure Enter.Item
Begin							% 0 procedure %

Fields
	L.name			as	'20c',
	L.name.u		as	'20c',
	L.length		as	'4zn',
	M.name			as	'30c',
	Phone.String		as	'20c',
	Number.found		as	'4zn',
	Count.item		as	'4zn',
	Count.phones		as	'4zn',
	Validation		as	'4zn',
	Yes.or.no		as	'10c',


% For Screens (in lieu of arrays) %

	Ref.00 as '5l',
	Ref.01 as '5l',  Ref.02 as '5l',  Ref.03 as '5l',
	Ref.04 as '5l',  Ref.05 as '5l',  Ref.06 as '5l',
	Ref.07 as '5l',  Ref.08 as '5l',  Ref.09 as '5l',
	Ref.10 as '5l',  Ref.11 as '5l',  Ref.12 as '5l',
	Ref.13 as '5l',  Ref.14 as '5l',  Ref.15 as '5l',
	Ref.16 as '5l',  Ref.17 as '5l',  Ref.18 as '5l',
	Ref.19 as '5l',  Ref.20 as '5l',  Ref.21 as '5l',
	Ref.22 as '5l',  Ref.23 as '5l',  Ref.24 as '5l',
	Ref.25 as '5l',  Ref.26 as '5l',  Ref.27 as '5l',
	Ref.28 as '5l',  Ref.29 as '5l',  Ref.30 as '5l',

	Name.00 as '30c',
	Name.01 as '30c',  Name.02 as '30c',  Name.03 as '30c',
	Name.04 as '30c',  Name.05 as '30c',  Name.06 as '30c',
	Name.07 as '30c',  Name.08 as '30c',  Name.09 as '30c',
	Name.10 as '30c',  Name.11 as '30c',  Name.12 as '30c',
	Name.13 as '30c',  Name.14 as '30c',  Name.15 as '30c',
	Name.16 as '30c',  Name.17 as '30c',  Name.18 as '30c',
	Name.19 as '30c',  Name.20 as '30c',  Name.21 as '30c',
	Name.22 as '30c',  Name.23 as '30c',  Name.24 as '30c',
	Name.25 as '30c',  Name.26 as '30c',  Name.27 as '30c',
	Name.28 as '30c',  Name.29 as '30c',  Name.30 as '30c',

	Name.of.person as '30c',

	Ref.1 as '5l',  Ref.2 as '5l',  Ref.3 as '5l',  Ref.4 as '5l',
	Ref.5 as '5l',  Ref.6 as '5l',  Ref.7 as '5l',  Ref.8 as '5l',

	Phone.1 as '20c', Phone.2 as '20c', Phone.3 as '20c', Phone.4 as '20c',
	Phone.5 as '20c', Phone.6 as '20c', Phone.7 as '20c', Phone.8 as '20c',

	Type.1 as '10c',  Type.2 as '10c',  Type.3 as '10c',  Type.4 as '10c',
	Type.5 as '10c',  Type.6 as '10c',  Type.7 as '10c',  Type.8 as '10c'


Screen for "TYM425"
	Line.Length 80  Screen.Size 24
	Message.Area 21 to 24
	Abort.Procedure @3


Frame.Format Name.List.Frame
"  Who: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% No.: %%%%%"
@CR
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
"  %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%% %%%%% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
" "

Frame Name.List.Screen from Name.List.Frame
	Frame.Area 1 to 20
	Data.Names
	    Name.00, Ref.00,
	    Ref.01,  Name.01,  Ref.02,  Name.02,  Ref.03,  Name.03,
	    Ref.04,  Name.04,  Ref.05,  Name.05,  Ref.06,  Name.06,
	    Ref.07,  Name.07,  Ref.08,  Name.08,  Ref.09,  Name.09,
	    Ref.10,  Name.10,  Ref.11,  Name.11,  Ref.12,  Name.12,
	    Ref.13,  Name.13,  Ref.14,  Name.14,  Ref.15,  Name.15,
	    Ref.16,  Name.16,  Ref.17,  Name.17,  Ref.18,  Name.18,
	    Ref.19,  Name.19,  Ref.20,  Name.20,  Ref.21,  Name.21,
	    Ref.22,  Name.22,  Ref.23,  Name.23,  Ref.24,  Name.24,
	    Ref.25,  Name.25,  Ref.26,  Name.26,  Ref.27,  Name.27,
	    Ref.28,  Name.28,  Ref.29,  Name.29,  Ref.30,  Name.30


    Procedure Init.Name.Screen
    begin
	Move default to
	    Ref.00,
	    Name.01, Ref.01,  Name.02, Ref.02,  Name.03, Ref.03,
	    Name.04, Ref.04,  Name.05, Ref.05,  Name.06, Ref.06,
	    Name.07, Ref.07,  Name.08, Ref.08,  Name.09, Ref.09,
	    Name.10, Ref.10,  Name.11, Ref.11,  Name.12, Ref.12,
	    Name.13, Ref.13,  Name.14, Ref.14,  Name.15, Ref.15,
	    Name.16, Ref.16,  Name.17, Ref.17,  Name.18, Ref.18,
	    Name.19, Ref.19,  Name.20, Ref.20,  Name.21, Ref.21,
	    Name.22, Ref.22,  Name.23, Ref.23,  Name.24, Ref.24,
	    Name.25, Ref.25,  Name.26, Ref.26,  Name.27, Ref.27,
	    Name.28, Ref.28,  Name.29, Ref.29,  Name.30, Ref.30
    end


    Procedure Name.Array.Values
    begin
	Conditional on Number.found
	begin
	   01: begin Let Ref.01 = Person.Number  Let Name.01 = M.name end
	   02: begin Let Ref.02 = Person.Number  Let Name.02 = M.name end
	   03: begin Let Ref.03 = Person.Number  Let Name.03 = M.name end
	   04: begin Let Ref.04 = Person.Number  Let Name.04 = M.name end
	   05: begin Let Ref.05 = Person.Number  Let Name.05 = M.name end
	   06: begin Let Ref.06 = Person.Number  Let Name.06 = M.name end
	   07: begin Let Ref.07 = Person.Number  Let Name.07 = M.name end
	   08: begin Let Ref.08 = Person.Number  Let Name.08 = M.name end
	   09: begin Let Ref.09 = Person.Number  Let Name.09 = M.name end
	   10: begin Let Ref.10 = Person.Number  Let Name.10 = M.name end
	   11: begin Let Ref.11 = Person.Number  Let Name.11 = M.name end
	   12: begin Let Ref.12 = Person.Number  Let Name.12 = M.name end
	   13: begin Let Ref.13 = Person.Number  Let Name.13 = M.name end
	   14: begin Let Ref.14 = Person.Number  Let Name.14 = M.name end
	   15: begin Let Ref.15 = Person.Number  Let Name.15 = M.name end
	   16: begin Let Ref.16 = Person.Number  Let Name.16 = M.name end
	   17: begin Let Ref.17 = Person.Number  Let Name.17 = M.name end
	   18: begin Let Ref.18 = Person.Number  Let Name.18 = M.name end
	   19: begin Let Ref.19 = Person.Number  Let Name.19 = M.name end
	   20: begin Let Ref.20 = Person.Number  Let Name.20 = M.name end
	   21: begin Let Ref.21 = Person.Number  Let Name.21 = M.name end
	   22: begin Let Ref.22 = Person.Number  Let Name.22 = M.name end
	   23: begin Let Ref.23 = Person.Number  Let Name.23 = M.name end
	   24: begin Let Ref.24 = Person.Number  Let Name.24 = M.name end
	   25: begin Let Ref.25 = Person.Number  Let Name.25 = M.name end
	   26: begin Let Ref.26 = Person.Number  Let Name.26 = M.name end
	   27: begin Let Ref.27 = Person.Number  Let Name.27 = M.name end
	   28: begin Let Ref.28 = Person.Number  Let Name.28 = M.name end
	   29: begin Let Ref.29 = Person.Number  Let Name.29 = M.name end
	   30: begin Let Ref.30 = Person.Number  Let Name.30 = M.name end
	end
    end


Frame.Format Phone.List.Frame
" "
"   Name: %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%"
" "
" "
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
"    %%%%% %%%%%%%%%%%%%%%%%%%% %%%%%%%%%%"
" "

Frame Phone.List.Screen from Phone.List.Frame
	Frame.Area 1 to 20
	Data.Names  Name.of.person,
	    Ref.1,  Phone.1,  Type.1,    Ref.2,  Phone.2,  Type.2,
	    Ref.3,  Phone.3,  Type.3,    Ref.4,  Phone.4,  Type.4,
	    Ref.5,  Phone.5,  Type.5,    Ref.6,  Phone.6,  Type.6,
	    Ref.7,  Phone.7,  Type.7,    Ref.8,  Phone.8,  Type.8


    Procedure Init.Phone.Screen
    begin
	Move default to
	    Name.of.person,
	    Ref.1,  Phone.1,  Type.1,    Ref.2,  Phone.2,  Type.2,
	    Ref.3,  Phone.3,  Type.3,    Ref.4,  Phone.4,  Type.4,
	    Ref.5,  Phone.5,  Type.5,    Ref.6,  Phone.6,  Type.6,
	    Ref.7,  Phone.7,  Type.7,    Ref.8,  Phone.8,  Type.8
    end


    Procedure Phone.Array.Values
    begin
	Conditional on Number.found
	begin
	   1: begin Let Ref.1   = telephone.count
		    Let Phone.1 = phone.string
		    Let Type.1  = telephone.type
	      end
	   2: begin Let Ref.2   = telephone.count
		    Let Phone.2 = phone.string
		    Let Type.2  = telephone.type
	      end
	   3: begin Let Ref.3   = telephone.count
		    Let Phone.3 = phone.string
		    Let Type.3  = telephone.type
	      end
	   4: begin Let Ref.4   = telephone.count
		    Let Phone.4 = phone.string
		    Let Type.4  = telephone.type
	      end
	   5: begin Let Ref.5   = telephone.count
		    Let Phone.5 = phone.string
		    Let Type.5   = telephone.type
	      end
	   6: begin Let Ref.6   = telephone.count
		    Let Phone.6 = phone.string
		    Let Type.6  = telephone.type
	      end
	   7: begin Let Ref.7   = telephone.count
		    Let Phone.7 = phone.string
		    Let Type.7  = telephone.type
	      end
	   8: begin Let Ref.8   = telephone.count
		    Let Phone.8 = phone.string
		    Let Type.8  = telephone.type
	      end
	end
    end


Begin							% 1 routine %

    Enter.your.name:
    Display Name.List.Screen
    do begin						% 2 enter.name %
	Apply Init.Name.Screen
	Let Name.00 = default
	Let Validation = 0				% start with false   %

	Input Name.00
	If Name.00 = default
	 then finish Enter.your.name

	Let L.Name = Upper.case(Name.00)
	Let L.length = Length(Name.00)

	For each Name
	 If L.Name = Upper.case(Substr(Last.name,1,L.length))
	 then begin					% 3 count.them %
	    Add 1 to Number.found
	    Let count.item = person.number
	 end						% 3 count.them %

	If Number.found > 1
	 then begin					% 3 multiples %

	    Let Number.found = 0
	    For each Name				% Look through them  %
	     If L.Name = Upper.case(Substr(Last.name,1,L.length))
	     then begin					% 4 get them %
		Add 1 to Number.found
		If Middle.name ne default
		 then Let M.name = " " + Trim(Middle.name)
		 else Let M.name = default
		Let M.name = Trim(First.Name) + Trim(M.name)
			   + " " + Trim(Last.Name)
		Apply Name.Array.Values
	    end						% 4 multiples %

	    If Number.found > 0
	     then do begin				% 4 matched some %

		If Number.found = 1
		 then Let person.number = count.item
		 else begin				% 5 choose one %
		    Let Ref.00 = default
		    Input Ref.00
		    Let person.number = Ref.00
		 end					% 5 choose one %

		If person.number ne default
		 then
		 Select Name Via key
		  then begin				% 5 select it %
		    Let M.name = " " + Trim(Middle.name)
		    Let Name.00 = Trim(First.Name) + Trim(M.name)
				+ " " + Trim(Last.Name)
		    Let count.item = person.number
		    Let Validation = 1
		  end					% 5 select it %
		  else Let Validation = 0

	     end while Validation ne 1 and person.number ne default
							% 4 matched some %

	    Apply Init.Name.Screen

	    If Validation = 0
	     then begin					% 4 not found %

		Type "New person? "	Accept Yes.or.no

		If Upper.Case(Substr(Yes.or.no,1,1)) = "Y"
		 then begin				% 5 new entry %

		    Select Largest Name
		     then Let count.item = person.number + 1
		     else Let count.item = 1

		    If Substr(Name.00,1,1) = Upper.case(Substr(Name.00,1,1))
		     then Let Last.name = Name.00
		     else begin				% 6 accept %
			Type "Last name: "  Accept Last.name
		     end				% 6 accept %

		    Type Trim(Last.name), ", First: "  Accept First.name
		    Type Trim(First.name), " Middle: " Accept Middle.Name

		    If Middle.name ne default
		     then Type ", ", Middle.name

		    Let person.number = count.item
		    Insert into Name
		    Let validation = 1

		 end					% 5 new entry %
	     end					% 4 not found %

	    % At this point						%
	    %	If Validation = 1 we have a person.number in count.item	%
	    %	If Validation = 0 we have decided no to go any further	%

	    Making.calls:
	    If Validation = 1		% Type all the known numbers %
	     then begin					% 4 found it %

		Let person.number = count.item
		Let count.phones = 0

		For each Phone Via person.number
		 begin					% 5 print numbers %

		    Let count.phones = Telephone.count

		    Type @CR, Trim(Telephone.Type), ": (", Telephone.area.code,
		    ") ", Telephone.Exchange, "-", Telephone.Number

		    If Telephone.Extension ne default
		     then Type "  x ", Telephone.Extension
		 end					% 5 print numbers %

		Do begin			% Insert new telephone numbers %

		    Type "Area Code: "	Accept Telephone.area.code
		    If Telephone.area.code = default
		     then finish making.calls

		    Type "(", Telephone.area.code, ") ", "Exchange: "
		    Accept Telephone.Exchange
		    Type " Number: " Accept Telephone.Number
		    Type "Type: " Accept Telephone.Type
		    If Upper.case(Telephone.Type) = "WORK"
		     then begin
			Type " Extension: "
			Accept Telephone.Extension
		     end
		     else Let Telephone.Extension = 0
		    Add 1 to count.phones
		    Let Telephone.Count = count.phones
		    Insert into Phone

		    Type Trim(Telephone.Type), ": (", Telephone.area.code,
		    ") ", Telephone.Exchange, "-", Telephone.Number
		    If Telephone.Extension ne default
		     then Type "  x ", Telephone.Extension

		 end while Telephone.area.code ne default

	    % add code for particular instances here %

	     end					% 4 found it %
	 end						% 3 multiples %
     end while Name.00 ne default			% 2 enter.name %

end							% 1 routine %

End							% 0 procedure %
   