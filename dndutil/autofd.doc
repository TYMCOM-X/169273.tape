                           Automated File Deployment               July 1, 1981












                                 *   ***** **** 
                                * *  *     *   *
                               ***** ****  *   *
                               *   * *     *   *
                               *   * *     **** 



                           Automated File Deployment

                             Written by Bill Euske
                      Documented by Sandy Ogg & John Kopf
                            DATA NETWORKS DIVISION
                                 July 1, 1981





                                   ABSTRACT

          Automated File Deployment  is a system of  programs, driven
          by  user-created  files, which  automatically  deploy files
          from an origination (master)  PDP-10 system to one  or more
          destination  (local) systems.   It also  performs a  set of
          directory maintainance functions, such as  providing backup
          for files replaced, and purging certain files from both the
          master and local systems, such as backup files more than 10
          days old.















                                                                            AFD
                           Automated File Deployment               July 1, 1981




                                   TABLE OF CONTENTS

        1.   INTRODUCTION                                                     1
          1.1   Overview                                                      1
          1.2   Constraints                                                   3
          1.3   Reliability                                                   3

        2.   MASTER SYSTEM PROCESSING                                         4

        3.   SLAVE SYSTEM PROCESSING                                          5

        4.   HISTORY FILES                                                    7
          4.1   AFD History Files                                             7
          4.2   PERP History Files                                            8

        5.   USER SPECIFICATION FILES                                        10
          5.1   AFDMAS.SPC -- Master System Number Specification             10
          5.2   AFDCLN.SPC -- Housecleaning Specifications                   10
          5.3   AFDNCP.SPC -- Distribution Specifications                    11
          5.4   AFDAGE.SPC -- Ageing Specifications                          11

        6.   INITIATING AND RUNNING AFD                                      13
          6.1   Command Files for Master System Processing                   13
                AFDPT0                                                       13
                AFTPT1                                                       14
                AFDPRP.Dnn                                                   14
          6.2   Command Files for Slave System Processing                    15
                AFDGT1                                                       15
                AFDGT3                                                       15
          6.3   Initiating AFD                                               16

        7.   AN EXAMPLE                                                      19
          7.1   Master files                                                 19
          7.2   Slave Files                                                  20
          7.3   Initiating PERP                                              22

















                                                                            AFD
                           Automated File Deployment               July 1, 1981







                               Automated File Deployment


                                        CAUTION

                The AFD system reserves files with names of the form:

                                      AFD???.???

                for itself  -- the  occurance of user  files with  names of
                this form can cause unpredictable results to the user!






                                   1.   INTRODUCTION



              Automatic File Deployment (AFD) is used to distribute  files from
        a selected PDP10  system to one or  more other PDP10  systems.  Because
        AFD automates the running of  programs such as TELECOPY and  CKSUM, the
        possibility  of  errors  is  reduced,  thus  assuring  the   user  that
        directories on multiple systems are consistent.




                                     1.1  Overview

              The concept of master and slave systems is basic to the  logic of
        AFD.  The user must select one PDP10 system as a master system.

              All other  systems to  be processed by  AFD are  considered slave
        systems, and are updated based on the contents of the directory  on the
        master system.

              AFD  begins  running  shortly  after  midnight,   processing  the
        previous day's  work.  Four programs  perform the basic  AFD functions.
        CKSUM is  run against the  entire directory on  the master  system, and
        against  the  directories  on the  slave  systems.   The  checksums are
        compared, and  when differences are  found, TELECOPY command  files are
        submitted as PERP jobs, containing the commands appropriate  for moving
        the necessary files.



                                       1                                    AFD
                                 INTRODUCTION                      July 1, 1981


              The criteria used to determine  which files are to be  moved from
        the master system to a slave system are as follows:

            1.  AFD checks to see if files on the master directory exist on
                the slave.  Optional user specifications determine kinds of
                files  that  need  not  be  present  on  the  slave system.
                Subject to these specifications, a file which exists on the
                master but not  on the slave  is telecopied from  master to
                slave.

            2.  A file  which exists  on the  slave but  not the  master is
                deleted,  unless  user  specifications  indicate  the  file
                should be aged.  The  ageing process renames the file  in a
                format  based  on the  current  date.   User specifications
                determine how long an aged file will be retained  before it
                is deleted by AFD.

            3.  If  a  file  exists  on  both  master  and  slave,  but the
                checksums do not match, the file from the master is assumed
                to be the most recent version.  The slave copy of  the file
                is   either   deleted   or   aged,   according    to   user
                specifications, and  the master copy  is telecopied  to the
                slave.

              The user specifications  described in these criteria  are entered
        into files which are read by the AFD system.  There are  separate files
        for defining ageing periods, and for defining types of files  that need
        not be distributed from master to slave systems.

              In addition to the  distribution of files over  multiple systems,
        AFD  can  perform   housecleaning  functions.   The  user   may  create
        specification files to  define housecleaning functions  either globally
        over all AFD controlled systems, or on a system by system basis.

              User  specification  files   are  described  in  detail   in  the
        appropriate sections.

              AFD provides  two types of  built-in safeguards.  The  first type
        takes the form of history files, which AFD creates to provide  a record
        of the actions  taken in every AFD  run.  History files are  created on
        each slave system to record the following:

            1.  Files    renamed   or    deleted   according    to   ageing
                specifications,

            2.  Telecopy commands  produced by  the comparison  of checksum
                files,

            3.  CKSUM discrepancies or errors encountered on the master and
                slave systems,

            4.  Copies of the master system checksum file,


                                       2                                    AFD
                                 INTRODUCTION                      July 1, 1981


            5.  Copies of the slave system checksum file, and

            6.  Terminal output from PERP jobs.

              The second type of safeguard is designed to protect AFD from PERP
        failure.  Use of PERP relies on conditions outside the  user's control.
        Among these conditions are the  availability of the PERP 940  host, and
        the speed at which that host operates.  If a PERP job is submitted, and
        the 940 host is unavailable, the  job is ignored.  If the PERP  host is
        heavily loaded, and does not  have time to complete the  submitted job,
        the job is arbitrarily terminated.  If a circuit built by PERP  is lost
        because of network failure, the remainder of the job is  not performed.
        AFD is designed to  detect incomplete processing, for  whatever reason,
        and resume processing until processing is complete.




                                   1.2  Constraints

              AFD  can  run  on  one  directory  name  only.   Therefore,  each
        directory name to be processed by AFD must be processed separately.

              The maximum number of files that can be present in a directory to
        be processed by AFD is 5,000.

              A constraint implicit in the concept of master and  slave systems
        is that files  created on slave systems  are deleted, or aged  and then
        deleted, by  AFD.  This  constraint is necessary  to ensure  that slave
        directories contain only those  files which are essential to  the slave
        system.




                                   1.3  Reliability

              AFD's  reliability  depends  on  the  number  of  runs  per  day.
        Checksum files are created only  once per day.  The checksum  files are
        used to  determine whether  or not  processing for  the current  day is
        complete.  If all processing has been completed during a prior run, AFD
        logs itself off when a subsequent run detects no work to be done.

              AFD  is designed  to  run several  times  each day,  in  order to
        prevent incomplete processing caused  by down time on the  PERP system,
        or on the master or slave PDP10 systems.  PERP command  files determine
        the  hours at  which AFD  is run.   The master  system is  processed at
        midnight, and again at 5:00 A.M.  Slave systems are processed  at 2:00,
        4:00, and 6:00 A.M.





                                       3                                    AFD
                           MASTER SYSTEM PROCESSING                July 1, 1981






                             2.   MASTER SYSTEM PROCESSING



              Processing on the master system consists of six steps:

            1.  AFD  checks to  see if  an earlier  AFD job  is  running in
                detached  mode.  If  there is  a job  already  running, the
                current AFD job logs itself out.

            2.  AFD then checks to see if a history file and  checksum file
                exist for  the current  date.  The  presence of  these file
                indicates that  AFD has already  run (or attempted  to run)
                for this date.

            3.  If no history files exist, AFD begins building them for the
                current date.  These files  will contain an audit  trail of
                actions taken in steps 4 and 5.

            4.  Next,  AFD  deletes  obsolete history  files.   If  no user
                specifications are present, history files are deleted after
                ageing for the default period of 10 days.

            5.  Subject to user specifications, AFD  performs housecleaning
                functions.

            6.  The last step performed is the creation of a  checksum file
                of the directory for the current date.






















                                       4                                    AFD
                            SLAVE SYSTEM PROCESSING                July 1, 1981






                             3.   SLAVE SYSTEM PROCESSING



              Processing on a slave system is somewhat more complex.  The first
        six steps are similar to those performed on the master system.

            1.  AFD  checks to  see  if another  AFD job  is  still running
                detached.  If so, the current job logs off.

            2.  AFD checks for the  presence of history and  checksum files
                for the current date.

            3.  If no history files are present, AFD begins  building them.
                They will record actions taken in steps 4 through 9.

            4.  History files  older than 10  days are deleted,  unless the
                user specifies otherwise.

            5.  Optional housecleaning functions are performed.

            6.  AFD checksums the local directory.

            7.  AFD fetches the checksum  file from the master  system.  If
                none  exists for  the current  date, AFD  assumes  that the
                master system has not yet been processed, and logs off.

            8.  The master and local checksum files are compared.  Based on
                criteria  defined  in the  user's  distribution  and ageing
                specification files,  AFD deletes or  renames files  on the
                slave which do not match those on the master, and creates a
                TELECOPY command file that will fetch the appropriate files
                from the master.

            9.  AFD runs telecopy in detached mode and executes the command
                file.   In addition  to  retrieving files  from  the master
                system,  the command  file sends  two slave  system history
                files to the master.   When the command file  has completed
                execution, AFD logs itself off.

              In particular, during step 8, both the master and  local checksum
        files are  "filtered" via the  distribution file  specifications.  File
        names which  remain after  "filtering" are subject  to update  -- those
        which have been  excluded from the master  file will not  be candidates
        for use;  those which have  been excluded from the local file  will not
        be touched!

              Those  files  remaining  on the  local  system  are  then matched


                                       5                                    AFD
                            SLAVE SYSTEM PROCESSING                July 1, 1981


        against  those on  the master  -- no  action is  taken if  the checksum
        matches.   All others  will  be renamed  or deleted,  according  to the
        ageing specification.  These  will then be  copied from the  master, as
        will any additional files which appear on the master system, but not on
        the local system.

















































                                       6                                    AFD
                                 HISTORY FILES                     July 1, 1981






                                  4.   HISTORY FILES



              AFD generates two  types of history  files that provide  the user
        with an audit trail.  These history files record actions taken  by AFD,
        and terminal output from PERP jobs.




                                4.1  AFD History Files

              AFD history files are named as follows:

                                       AFDxnn.mdd


              where:
                 x = type of history file (described below)
                nn = system number
                 m = month (in hex, from 1 to C)
                dd = day (in decimal, from 1 to 31)

              Type of file (x) will be one of the following:

            R:  Rename file.  This file  contains a  record of  renames and
                deletions  performed.  Rename  file entries  beginning with
                the letter  "D" indicate files  that have been  deleted off
                the master but remain on the slave, and qualify  for ageing
                rather than deletion.  The letter "R" indicates  files that
                have been  altered on  the master  system, and  qualify for
                ageing rather than deletion  on the slave.  When a  file is
                deleted, whether because it  is not a candidate  for ageing
                or  because it  has aged  for the  specified  interval, the
                deletion is indicated as "FILE DELETED:  nnnnnn.nnn", where
                nnnnnn.nnn is  the file name  and extension.   Rename files
                created  on  slave  systems are  telecopied  to  the master
                system.

            C:  Telecopy command file.  This  file  contains  a  record  of
                TELECOPY commands  produced by  the comparison  of checksum
                files.   It is  read by  AFD to  see if  all  commands were
                completed  successfully during  the previous  run;  if not,
                another  command file  is created  containing  the commands
                necessary to complete the job.  Telecopy command  files are
                created only on slave systems.



                                       7                               AFD
                                 HISTORY FILES                     July 1, 1981


            E:  Checksum error file.  This    file   reports    errors   or
                discrepancies encountered by  CKSUM.  The first  two digits
                of an  error entry  are the system  number, so  that master
                checksum  errors may  be distinguished  from  slave errors.
                The rest of the entry describes the error and indicates the
                fileid that produced it.  Empty files are the most frequent
                cause of CKSUM errors.   Errors could also be  generated if
                file  protection  prevents  CKSUM  from  reading   a  file.
                Checksum  error   files  created   on  slave   systems  are
                telecopied to the master system.

            M:  Master checksum file.  This file is produced by CKSUM as it
                runs against the master directory.  It is replaced with the
                current  day's checksum  file  each day  AFD  runs.  Master
                checksum files exist both on master and slave systems.

            L:  Local (slave) checksum file.  This  file  is   produced  by
                CKSUM  as it  runs against  the slave  directory.   A slave
                checksum file will  exist only on  the system where  it was
                generated.

              Rename files,  telecopy command files,  and checksum  error files
        are aged by AFD  according to user specification.  If  no specification
        is present, the default value of 10 days is assumed.

              Master  and slave  checksum files  are not  aged, since  they are
        replaced with the current copy each day AFD runs.




                                4.2  PERP History Files

              PERP history  files record the  terminal output generated  by the
        PERP processor.   The output is  written to a  filename specified  in a
        PERP command file.  The filenames are in the format:

                                      AFDPRP.xnn

              where:

                 x = type of file (described below)
                nn = hour of PERP job request (in decimal)

              The value of "nn" must be in the range 0 - 23.

              Type of file (x) will be one of the following:

            T:  Terminal output.  This   file   contains   terminal  output
                generated in the most recent PERP job.  It is replaced each
                time PERP runs at the hour indicated in the file extension.



                                       8                                    AFD
                                 HISTORY FILES                     July 1, 1981


            H:  Output history.  Each  time  a  terminal  output   file  is
                generated, a copy  is concatenated with  a  file containing
                terminal output from previous PERP jobs.   This file is not
                aged by  AFD.  To control  the size of  the file,  the user
                must edit it and delete old records.

            NOTE:  The PERP Terminal (AFDPRP.Txx) and  History (AFDPRP.Hxx)
                files must exist on the system, since PERP uses these in an
                "Append" mode.  The easiest way to create these files is to
                generate a file containing only a CR, using the editor.












































                                       9                                    AFD
                           USER SPECIFICATION FILES                July 1, 1981






                             5.   USER SPECIFICATION FILES



              The following sections  describe specification files  which allow
        the user to tailor AFD processing to suit his needs.

              AFD file specifications allow the crosshatch ("#" --  any digit),
        asterisk ("*" -- any field), and question mark ("?" -- any alphanumeric
        character) conventions  to be used  in file names.   Thus, "??####.CMD"
        would specify any file whose name contains two  (optional) alphanumeric
        characters, exactly four numeric characters, and an extension of CMD.




                 5.1  AFDMAS.SPC -- Master System Number Specification

              Each slave system must  retrieve a checksum file from  the master
        system.  The file AFDMAS.SPC must be present on each slave defining the
        master  system  number.  AFDMAS.SPC  contains  one entry:  a  two digit
        system number, in decimal.




                    5.2  AFDCLN.SPC -- Housecleaning Specifications

              Housecleaning functions can be performed on both master and slave
        systems.   These   specifications  are  entered   into  a   file  named
        AFDCLN.SPC.  The format for specifications is:
                                         nncmd

        where:         nn = a two digit system number, or "00"
                       cmd = a PDP10 command

              If nn  is zero, the  specified command will  be performed  on all
        systems.  If nn is not zero, the command will be performed only  on the
        specified system.  This allows the user to specify actions to  be taken
        selectively  by system  number.   Commands used  might  include DELETE,
        RENAME, or DECLARE.

              The housecleaning file may contain a maximum of 300 characters of
        PDP10 commands (including  blanks, C/R, and L/F)  if "nn" is  zero.  If
        "nn"  is not  zero,  300 characters  (total) are  permitted  per system
        number specified.




                                      10                                    AFD
                           USER SPECIFICATION FILES                July 1, 1981


                    5.3  AFDNCP.SPC -- Distribution Specifications

              An optional nocopy  file on a  slave system is  named AFDNCP.SPC.
        It is used to specify distribution constraints.

              Distribution specifications define  the kinds of files  that need
        not (or should not) be  telecopied to slave systems.  Files  defined by
        these  "nocopy"  specifications will  be  ignored when  a  slave system
        telecopies files from the master.

              Specifications are entered into the file in the format:

                           [q1]spec1,[q2]spec2,...,[qn]specn

              "Qn" is an optional qualifier;  it is a single  character, either
        "+"  or "-"  (if present).   "+"  is the  default;  it  means  that the
        specified file  name is to  be "not copied".   "-" means  the converse;
        the specified file is to be explicitly copied, even if it is  a special
        case of subsequent general "don't copy" specifications.

              To  prevent  listing files  from  being telecopied  to  the slave
        system, the user could  specify "*.LST".  To prohibit  telecopy command
        files, specify "0##TEL.COM".

              Note that  files specified  for "no copy"  will also  be excluded
        from deleting or ageing.  Thus if the files "*.LST" are specified, they
        will neither be copied, nor will they be automatically removed!

              To  copy a  subset of  files, but  not the  entire set,  the user
        specifies the subset with  "-", followed by the  general specification.
        For example, if the slave system  is to contain only files of  the form
        "file.DOC"  but   not  any   other  "file.*",   he  could   specify  "-
        FILE.DOC,+FILE.*".

              Note...specifications should contain no imbedded blanks.

              Two nocopy files are  hard-coded into AFD.  These  are "AFD???.*"
        and "*.TMP".  Thus, AFD command and history files, and  temporary files
        are never distributed.




                       5.4  AFDAGE.SPC -- Ageing Specifications

              The AFD system maintains a number of files with names of form:

                                      AFD???.mdd

              "mdd" is the  Month/Day of "creation"  of the file;   "Ageing" is
        the provision of  a "latancy" (timeout)  period before these  files are
        deleted.


                                      11                                    AFD
                           USER SPECIFICATION FILES                July 1, 1981


              On  the Master  system, all  files of  this form  are  classed as
        "History" files, and the substring "???" has the form "tss",  where "t"
        is the file type, and "ss" is the originating system (master or slave).

              On  the slave  systems, files  may also  have "???"  of  the form
        "nnn", where  "nnn" distinguishes various  files;  Thus slave  files of
        the form "AFDnnn.mdd" are  the renamed (superceeded) slave  system user
        files.  The ageing criteria for renamed slave files causes a name to be
        generated  such  that  these  files  are  deleted  after  the  standard
        ("history") ageing period  -- the "creation"  date is thus  relative to
        the actual renaming  date in order to  cause the ageing  ("timeout") to
        expire on the proper date.

              Ageing  specifications   determine  what   kinds  of   files  are
        candidates for ageing rather than outright deletion on a slave system.

              If a file  exists on the  slave but not  the master, or  has been
        updated on the master but not the slave, AFD checks to see if the slave
        file matches  any criteria  specified in the  file AFDAGE.SPC.   If the
        file does match, it is aged (renamed to the above form); if not,  it is
        deleted.

              These specifications are entered in the format:

                       n0
                       n1spec,spec,...,spec
                       n2spec,spec,...,spec
                        .
                        .
                        .
                       nnspec,spec,...,spec

              where:

            n0:    ageing factor (in days) for all "history" files,

            n1-nn: ageing factor (in days)  for slave files that  match the
                specifications following the number.

              The ageing factor may be any (two-digit) value between 01 and 99.

              If the file AFDAGE.SPC is not present, the default value  of "n0"
        is  10.  "History"  files  are the  only  files with  a  default ageing
        factor.  With the  exception of AFD and  PERP command files,  all other
        files on a slave  system that differ from  files on the master  will be
        deleted unless they match specifications defined in AFDAGE.SPC.








                                      12                                    AFD
                          INITIATING AND RUNNING AFD               July 1, 1981






                            6.   INITIATING AND RUNNING AFD



              The following  sections describe the  command files that  must be
        present on  master and slave  systems to be  processed by AFD,  and the
        steps necessary to initiate AFD processing.

              Certain  of the  commands in  the command  files  invoke programs
        which expect  arguments in the  invocation;  these argument  fields are
        seperated from the command (and from one another, if more than  one) by
        the semicolon (";") character.  Every character in fields  delimited by
        semicolon is a  part of that  field, even if  the usage is  to seperate
        sub-fields (e.g. "username:NN" is a single field; "username"  and ":NN"
        are sub-fields).




                    6.1  Command Files for Master System Processing

              The files that must be present on a master system are:

                AFDCOM.SAV
                AFDPUT.SAV      AFDPT0          AFDPRP.D00      [AFDCLN.SPC]
                AFDAUX.SAV      AFDPT1          AFDPRP.D05      [AFDAGE.SPC]

              These files may  be found in (DNDUTIL:39).   Sample specification
        files are also available on that directory.


        AFDPT0

              The file AFDPT0 contains:

                GO (DNDUTIL)AFDPUT
                GO (DNDUTIL)AFDCOM;AFDPUT.TMP

            NOTE...AFDPUT creates the new command file AFDPUT.TMP, which in
                turn will again run AFDCOM -- AFDCOM is specified to be run
                from the  same directory as  AFDPUT!  In the  example, this
                will  be  (DNDUTIL).   Thus  you  need  not  have  your own
                personal copy of AFDCOM.







                                      13                                    AFD
                          INITIATING AND RUNNING AFD               July 1, 1981




        AFTPT1

              The file AFDPT1 contains:

                GO (DNDUTIL)AFDAUX;DNDUTIL:31;AFDGT1;
                GO (DNDUTIL)AFDAUX;:33;AFDGT1;
                GO (DNDUTIL)AFDAUX;:34;(DNDUTIL);AFDGT1;


                                         NOTES

            The first parameter to AFDAUX (following the ";") may  have two
                forms, illustrated by  example lines 1  and 2 --  the first
                explicitly  calls  out  the  destination  DNDUTIL:31;   the
                second specifies only :33...the execution username  is used
                by default!

            The second  parameter is optional  -- if present,  it specifies
                the  directory  from  which  to  run  AFDCOM;   It  must be
                surrounded by parenthesis (see example line 3).

            The third  parameter specifies the  initial command file  to be
                executed by AFDCOM on the target system.

            The fourth parameter is  optional;  if present, it  specifies a
                file to record output on,  and run detached -- if  the file
                name = "T", output to terminal.

            The fifth parameter is optional;  if present, it  specifies the
                time  (in  hours)  that aux  circuit  may  be  connected --
                default is 1 hour.




        AFDPRP.Dnn

              The file AFDPRP.D00 (typically) contains:

                :AFDPRP.T00
                :TIME 300
                DAY
                MAIL
                COPY AFDPRP.T00+AFDPRP.H00 TO AFDPRP.H00
                GO (DNDUTIL)AFDCOM;AFDPT0

              (The "COPY" command line appends the PERP History file  (.Hxx) to
        the Terminal file, and places  the result back into the history  -- the
        Terminal file is rewritten upon each execution.  This may or may not be
        desired for a specific usage...it is the ONLY usage of AFDPRP.Hxx!)


                                      14                                    AFD
                          INITIATING AND RUNNING AFD               July 1, 1981


              The  file AFDPRP.D05  is (normally)  identical, except  that "05"
        replaces all occurances of "00".

              In  addition,  the PERP  history  files  (AFDPRP.T00, AFDPRP.T05,
        AFDPRP.H00, and AFDPRP.H05) must be present initially (as empty files).




                    6.2  Command Files for Slave System Processing

              The files that must be present on a slave system are:

                AFDCOM.SAV                                       AFDMAS.SPC
                AFDGT2.SAV      AFDGT1          [AFDPRP.D02]    [AFDCLN.SPC]
                AFDGT4.SAV      AFDGT3          [AFDPRP.D04]    [AFDAGE.SPC]
                AFDGT6.SAV      AFDGT5          [AFDPRP.D06]    [AFDNCP.SPC]

              These files may  be found in (DNDUTIL:39).   Sample specification
        files are also available on that directory.


        AFDGT1

              The file AFDGT1 contains:

                GO (DNDUTIL)AFDGT2
                GO (DNDUTIL)AFDCOM;AFDGET.TMP

            NOTE...AFDGT2 creates the new command file AFDGET.TMP, which in
                turn will again run AFDCOM -- AFDCOM is specified to be run
                from the  same directory as  AFDGT2!  In the  example, this
                will  be  (DNDUTIL).   Thus  you  need  not  have  your own
                personal copy of AFDCOM.


        AFDGT3

              The file AFDGT3 contains:

                GO (DNDUTIL)AFDGT4
                GO (DNDUTIL)AFDCOM;AFDGET.TMP


            NOTE...AFDGT4 creates the new command file AFDGET.TMP, which in
                turn will again run AFDCOM  -- the same rule applies  as to
                origination directory as in AFDGT2, above!







                                      15                                    AFD
                          INITIATING AND RUNNING AFD               July 1, 1981



              The file AFDGT5 contains:

                GO (DNDUTIL)AFDGT6
                SET NOAT
                GET (SYS)TELECO
                REE



              The most time-consuming operation on a master-system  PERP-job is
        the creation of the daily (slave-system) checksum file by AFDGT2, since
        that operation is performed serially, one system at a time.  When using
        AFD to deploy files to a  large number of systems, it MAY  be desirable
        to create this file independently  of the normal PERP operation  on the
        master system.  In this  case, it may be  desirable to run PERP  on the
        slave system, independently of the master system.  In the list of files
        given  for  the  slave  system,  there  are  specified  optional  files
        "[AFDPRP.Dxx]" -- these are of form:

                :AFDPRP.Txx
                :TIME 3xx
                DAY
                MAIL
                COPY AFDPRP.Txx+AFDPRP.Hxx TO AFDPRP.Hxx
                GO (DNDUTIL)AFDCOM;AFDGT1

              Where "xx" is the hour; the sample list of files uses "02", "04",
        and "06".

              The  PERP  history  files  (AFDPRP.T02,  AFDPRP.T04,  AFDPRP.T06,
        AFDPRP.H02, AFDPRP.H04, and  AFDPRP.H06) must be present  initially (if
        used) as empty files.




                                  6.3  Initiating AFD

              Once the files described in  sections 6.1 and 6.2 are  present on
        the user's master and slave system directories, the user must  run PERP
        to submit  jobs to  be run  on a daily  basis.  The  PERP jobs  must be
        instructed to read command files named in the format:

                                      AFDPRP.Dnn

              where nn = hour of PERP job request, in the range 0 - 23.

              The  following  sample  demonstrates  a  PERP  run  in  which job
        requests are submitted for both a master system (39) and a slave system
        (28).  USER ENTRIES ARE UPPERCASE;  perp prompts are lowercase:

                        -R PERP

                                      16                                    AFD
                          INITIATING AND RUNNING AFD               July 1, 1981



                        :DATE

                        enter your date period
                        DAILY.

                        :INSERT

                        what hour (0 to 23) 0

                        computer 39

                        project code AFDMID

                        command file name AFDPRP.D00

                        building circuit to master perp system

                        :INSERT

                        what hour (0 to 23) 5

                        computer 39

                        project code AFD5AM

                        command file name AFDPRP.D05

                        :INSERT

                        what hour (0 to 23) 2

                        computer 28

                        project code AFD2AM

                        command file name AFDPRP.D02

                        :INSERT

                        what hour (0 to 23) 4

                        computer 28

                        project code AFD4AM

                        command file name AFDPRP.D04

                        :INSERT

                        what hour (0 to 23) 6

                        computer 28

                                      17                                    AFD
                          INITIATING AND RUNNING AFD               July 1, 1981



                        project code AFD6AM

                        command file name AFDPRP.D06

                        :QUIT

                        -














































                                      18                                    AFD
                                  AN EXAMPLE                       July 1, 1981






                                    7.   AN EXAMPLE



              This  example  demonstrates  the  use  of  AFD  for  the  ISISDOC
        directory.

              ISISDOC contains a number of documents;  These are  maintained on
        system 39, and copies of all documentation (but NOT maintainance files)
        are to be automatically copied  to all other systems (31, 33,  and 34).
        The deployment is non-critical, and may be one or two days  obsolete --
        thus the PERP job is run only once per day.




                                   7.1  Master files

              The following files exist on 39:

        AFDAGE.SPC:

                07


        AFDCLN.SPC:

                00DEL *.LST,*.CRF,###TEL.OUT,###TEL.COM
                00DEC ALL RD RD *.DOC


        AFDPT0:

                GO (DNDUTIL)AFDPUT
                GO (DNDUTIL)AFDCOM;AFDPUT.TMP



        AFDPT1:

                GO (DNDUTIL)AFDAUX;:31;(DNDUTIL);AFDGT1;
                GO (DNDUTIL)AFDAUX;:33;(DNDUTIL);AFDGT1;
                GO (DNDUTIL)AFDAUX;:34;(DNDUTIL);AFDGT1;







                                      19                                    AFD
                                  AN EXAMPLE                       July 1, 1981


        AFDPRP.D00:

                :AFDPRP.T00:
                :TIME 300
                DAY
                MAIL
                COPY AFDPRP.T00+AFDPRP.H00 TO AFDPRP.H00
                GO (DNDUTIL)AFDCOM;AFDPT0



        AFDPRP.H00

                {This file is initially empty.}


        AFDPRP.T00

                {This file is initially empty.}

                                        NOTES:

            AFD???.mdd files are to be deleted after 7 days.

            AFDCLN.SPC deletes a number of files, and makes all *.DOC files
                public.

            AFDPT1  specifies that  slave systems  are to  execute programs
                from (DNDUTIL).

            PERP runs at  midnight.  One operation  it performs is  to copy
                the file AFDPRP.T00 to  the head of AFDPRP.H00, as  it will
                be rewritten each time PERP runs.




                                   7.2  Slave Files

              The following files exist on EACH slave system (31, 33, 34):


        AFDMAS.SPC:

                39


        AFDAGE.SPC:

                02




                                      20                                    AFD
                                  AN EXAMPLE                       July 1, 1981


        AFDCLN.SPC:

                00DEL *.LST,*.CRF,###TEL.OUT,###TEL.COM
                00DEC ALL RD RD *.DOC




        AFDNCP.SPC:

                -*.DOC,+*.*


        AFDGT1:

                GO (DNDUTIL)AFDGT2
                GO (DNDUTIL)AFDCOM;AFDGET.TMP



        AFDGT3:

                GO (DNDUTIL)AFDGT4
                GO (DNDUTIL)AFDCOM;AFDGET.TMP



        AFDGT5:

                GO (DNDUTIL)AFDGT6
                SET NOAT
                GET (SYS)TELECO
                REE


                                        NOTES:

            All history files are to be deleted after 2 days.

            AFDCLN.SPC deletes a number of files, and makes all *.DOC files
                public.

            The master system is 39 (specified in AFDMAS.SPC).

            AFDNCP.SPC specifies that ONLY  files of the form *.DOC  are to
                be updated; ALL other files are left alone ("not copied").

              Note that the SLAVE system makes the decisions as to  which files
        are to  be updated!  If  the file AFDNCP.SPC  were deleted from  ANY of
        these  systems, that  slave system  would IMMEDIATELY  become  a backup
        system for ALL files occuring on system 39 (excluding, of course, files
        named *.TMP and AFD???.*).


                                      21                                    AFD
                                  AN EXAMPLE                       July 1, 1981


                                 7.3  Initiating PERP

              The following  PERP session was  then performed;   thereafter all
        operations are performed automatically!

              USER ENTRIES ARE UPPERCASE;  perp prompts are lowercase:

                        -R PERP

                        :DATE

                        enter your date period
                        DAILY.

                        :INSERT

                        what hour (0 to 23) 0

                        computer 39

                        project code AFDMID

                        command file name AFDPRP.D00

                        building circuit to master perp system

                        :QUIT

                        -

























                                      22                                    AFD
   _^DW4