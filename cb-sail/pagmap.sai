entry

	PageUp, PageDn, PageMp,
	PageOpen, PageClose

;
Begin "Page array routines"
require "(SAILIB)SAIL.DEF" source!file;
require "UUOSYM.DEF" source!file;
require "SAIARR" library;

External Integer SAIknt, SAIkmx;
External Safe Integer Array SAIadr[1:SAIknt];
External integer Pagadr;

Own Integer K, Base;
Own Integer Array Arg[0:1];

internal simple procedure PageUp;
! ----------------------------------------------------------------------;
!									;
!	PageUp	This procedure simply copies previously setup SAIL	;
!		array descriptors in load!module "SAIARR" into the	;
!		appropriate high-core private-virtual-pages leaving 	;
!		holes for the actual data-pages.  The SAIL array	;
!		descriptors are placed just prior to the data pages	;
!		with a SAIL core-allocation word following in the	;
!		"next" word after the data page.			;
!									;
! ----------------------------------------------------------------------;
begin
    For K _ 1 step 1 until SAIkmx
     do begin
	Base _ SAIadr[ K ];
	Calli( !Xwd( '2002, !rh( Base ) lsh -9), calli!VCLEAR );
	Calli( !Xwd( '6001, !rh( Base ) lsh -9), calli!VCREAT );
	If not !skip!
	 then usererr(0,1,"Startup Failure: Page("&Cvs(K)&")","X");
	If K > 1
	 then Memory[ (!rh(SAIadr[K-1]) lor '777) + '1001 ]
		_ !Xwd( '400000, !rh(SAIadr[K-1]) );
	begin!code
	    Move 1,Base;		! Get BLT word destination;
	    Hrrz 2,1;			! Copy destination address;
	    Iori 2,'777;		! Round up to page boundary;
	    Blt  1,(2);			! Copy array descriptor info;
	end;
     end;
    Calli( !Xwd( '2001, ((!rh( Base ) lsh -9) + 2)), calli!VCLEAR );
    Calli( !Xwd( '6001, ((!rh( Base ) lsh -9) + 2)), calli!VCREAT );
    If not !skip!
     then usererr(0,1,"Startup Failure: LastPage","X");
    Memory[(!rh(Base) lor '777)+'1001]_!Xwd('400000,!rh(SAIadr[K-1]));
end;
require PageUp initialization;

internal simple procedure PageDn;
! ----------------------------------------------------------------------;
!									;
!	PageDn	Unmaps the pages which were setup by PageUp.		;
!									;
! ----------------------------------------------------------------------;
begin
    For K _ 1 step 1 until SAIkmx
     do begin
	Base _ SAIadr[ K ];
	Calli( !Xwd( '2002, !rh( Base ) lsh -9), calli!VCLEAR );
     end;
    Calli( !Xwd( '2001, ((!rh( Base ) lsh -9) + 2)), calli!VCLEAR );
end;


internal simple boolean procedure PageMp( Integer Chan,FPage,MPage,FProt );
! ----------------------------------------------------------------------;
!									;
!	PageMp		Map page FPAGE from the file openned on		;
!			channel CHAN into memory page MPAGE with	;
!			the protection of FPROT (r/o, cow, r/w).	;
!									;
! ----------------------------------------------------------------------;
begin
    Calli( !Xwd('2001, MPage), Calli!VCLEAR );	! clear memory page;
    Arg[ 0 ]_ !Xwd((FProt lsh 10) lor 1,MPage);	! prot & count,,page;
    Arg[ 1 ]_ FPage;				! file-page;
    Chnior( Chan, Arg[0], !chMFP );		! map file page;
    Return( !skip! );				! status;
end;

internal simple boolean procedure PageOpen( Reference Integer Chn;
					    Integer Array Blk);
! ----------------------------------------------------------------------;
!									;
!	PageOpen	Open the file in BLK on the given channel	;
!			without allocating any input or output buffers.	;
!			This call is primarily for use in obtaining	;
!			a proper chanel for the designated file so	;
!			that the file may be MAPPED into memory via	;
!			other monitor calls.				;
!									;
! ----------------------------------------------------------------------;
begin
    Own Integer Eof, Idx;
    Idx_ Arrinfo( Blk, 1 );
    Open( Chn_getchan,"DSK",'17,0,0,0,0,Eof_-1 );
    Chnior( Chn, Blk[Idx], !chLK );
	If not !skip!
	 then Print("File ",Cv6str(Blk[Idx+!RBNAM]),".",
			CvXstr(Blk[Idx+!RBEXT])[1 for 3]," not found (",
			Cvos(!rh(Blk[Idx+!RBEXT])),")",crlf);
    Return( !skip! );
end;

internal simple procedure PageCl;
begin
    Calli( !Xwd('2001, (Pagadr lsh -9)), Calli!VCLEAR );
    Close( PagChn );	Release( PagChn );
end;


end "Page array routines";
