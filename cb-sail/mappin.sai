

BEGIN
REQUIRE "(SAILIB)SAIL.DEF" SOURCE!FILE;
EXTERNAL SIMPLE BOOLEAN PROCEDURE FPARSE(VALUE STRING PARSE!STRING;
                                         REFERENCE STRING USER,FILE,EXT);
REQUIRE "FPARSE" Library;

!GET!MODULE(MAPPING);

INTEGER IN!PARSE,OUT!PARSE,IN!LOOK,OUT!LOOK;

PRESET!WITH 0,CVSIX("DSK"),0;
Integer Array Open!Block[0:2];

INTEGER ARRAY INPUT!LOOKUP!BLOCK[0:'40],
              OUTPUT!LOOKUP!BLOCK[0:'40],
              INPUT!USER[0:1],OUTPUT!USER[0:1];
INTEGER PAGE!NUMBER,INCHAN,OUTCHAN,ECODE,CHAR;
STRING FILEIN,IN!USER,IN!FILE,IN!EXT;
STRING FILEOUT,OUT!USER,OUT!FILE,OUT!EXT;

R!P(MAP1)INHOLDER,OUTHOLDER;

INHOLDER_MAP1CR(0,511);
OUTHOLDER_MAP1CR(0,511);

 PRINT("INPUT FILE: ");
 FILEIN_INCHWL;
 PRINT("OUTPUT FILE: ");
 FILEOUT_INCHWL;

    IF IN!PARSE_ FPARSE(FILEIN, IN!USER, IN!FILE, IN!EXT) THEN
	IF LENGTH(IN!USER) THEN BEGIN
          INPUT!USER[0]_CVSIX(IN!USER[1 FOR INF]);
          INPUT!USER[1]_(IF LENGTH(IN!USER) > 6 THEN CVSIX(IN!USER[7 FOR INF])
                                                ELSE 0);
          INPUT!LOOKUP!BLOCK[1]_LOCATION(INPUT!USER[0]);
         END
         ELSE INPUT!LOOKUP!BLOCK[1]_0;

    IF OUT!PARSE_ FPARSE(FILEOUT, OUT!USER, OUT!FILE, OUT!EXT) THEN
	IF LENGTH(OUT!USER) THEN BEGIN
          OUTPUT!USER[0]_CVSIX(OUT!USER[1 FOR INF]);
          OUTPUT!USER[1]_(IF LENGTH(OUT!USER) > 6 THEN
				 CVSIX(OUT!USER[7 FOR INF])
                                 ELSE 0);
          OUTPUT!LOOKUP!BLOCK[1]_LOCATION(OUTPUT!USER[0]);
         END
         ELSE OUTPUT!LOOKUP!BLOCK[1]_0;
    IF IN!PARSE AND OUT!PARSE THEN BEGIN "DO EVERYTHING I'M SUPPOSED TO"

	INPUT!LOOKUP!BLOCK[0]_OUTPUT!LOOKUP!BLOCK[0]_'40;
	INPUT!LOOKUP!BLOCK[2]_CVSIX(IN!FILE);
	OUTPUT!LOOKUP!BLOCK[2]_CVSIX(OUT!FILE);
    !    INPUT!LOOKUP!BLOCK[2]_OUTPUT!LOOKUP!BLOCK[2]_CVSIX(IN!FILE);
 
	INPUT!LOOKUP!BLOCK[3]_CVSIX(IN!EXT);
	OUTPUT!LOOKUP!BLOCK[3]_CVSIX(OUT!EXT);
    !    INPUT!LOOKUP!BLOCK[3]_OUTPUT!LOOKUP!BLOCK[3]_CVSIX(IN!EXT);
 
	    INCHAN_OPFILE(FILEIN,"ROM",-1);
	    OUTCHAN_OPFILE(FILEOUT,"WVM",-1);
	    PAGE!NUMBER_1;
	    PRINT("Reading File: ",FILEIN," -- Page ");
	    WHILE 0 < PAGE!NUMBER_GETMAP(INHOLDER,"E",INCHAN,
					  PAGE!NUMBER) DO 
	  BEGIN
	    Print(Page!Number," ");
	    IF 0> ECODE_GETMAP(INHOLDER,"R",INCHAN,PAGE!NUMBER)
	    THEN USERERR(0,1,"MAP FAILURE ON PAGE:" & CVS(PAGE!NUMBER) &
			(CASE -ECODE OF ([1]"ARGUMENT ERROR",
					 [2]"SYSTEM CALL ERROR="&CVOS(!SKIP!),
					 [3]"COULD NOT ACCESS PAGE",
					 [ELSE]"?ERROR CODE="&CVS(ECODE) )) );
	    IF 0 >ECODE_GETMAP(INHOLDER,"P",INCHAN,PAGE!NUMBER)
	     THEN PRINT("ERROR PRE-REFERENCING PAGE ",Page!number);
	    IF 0 > ECODE_GETMAP(OUTHOLDER,"N",OUTCHAN,PAGE!NUMBER)
	     THEN PRINT("ERROR CREATING NEW PAGE ",Page!number);
 
	    ARRBLT(MAP1:A[OUTHOLDER][0],MAP1:A[INHOLDER][0],512);
	    IF 0 > ECODE_GETMAP(OUTHOLDER,"V",OUTCHAN,PAGE!NUMBER)
	     THEN PRINT("ERROR VALIDATING PAGE ",PAGE!NUMBER);
	 Page!number _ Page!Number + 1;
 
	  END;
	GETMAP(INHOLDER,"U",INCHAN,PAGE!NUMBER);
	GETMAP(OUTHOLDER,"U",OUTCHAN,PAGE!NUMBER);
	CHNIOV(INCHAN,0,0);
	CHNIOV(OUTCHAN,0,1);
	CHNIOV(OUTCHAN,0,0);
    
	IN!LOOK_CHNIOR(INCHAN_GETCHAN, OPEN!BLOCK[0], '13);
	IN!LOOK_CHNIOR(INCHAN,INPUT!LOOKUP!BLOCK[0],4);		! LOOKUP;
	OUT!LOOK_CHNIOR(INCHAN,OUTPUT!LOOKUP!BLOCK[0],4);	! LOOKUP;
	INPUT!LOOKUP!BLOCK[1]_OUTPUT!LOOKUP!BLOCK[1];		! "COPY PPN";
	INPUT!LOOKUP!BLOCK[2]_OUTPUT!LOOKUP!BLOCK[2];		! "COPY NAME";
	INPUT!LOOKUP!BLOCK[3]_!XWD(!LH(OUTPUT!LOOKUP!BLOCK[3]),
				!RH(INPUT!LOOKUP!BLOCK[3]));	! "COPY EXT";
	INPUT!LOOKUP!BLOCK[0]_INPUT!LOOKUP!BLOCK[0] LOR !BIT(19);! USE SIZE;
	INPUT!LOOKUP!BLOCK['11]_INPUT!LOOKUP!BLOCK['5];		! IN WORDS;
	CHNIOR(INCHAN,INPUT!LOOKUP!BLOCK[0],'11);		! RENAME;
	CHNIOV(INCHAN,0,0);					! RELEASE;
    END "DO EVERYTHING I'M SUPPOSED TO"
    ELSE PRINT("ERROR *** I DIDN'T DO ANYTHING");

END;
