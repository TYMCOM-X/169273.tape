

To:    Adele Newman

From:  Carl Baltrunas

Re:    COPY command Wildcard implementation options

----------------------------------------------------------------------

As there exist a variety of options for the implementation of DIRIT
style wildcarding for the COPY command.  The desired result is to
have a consistant set of wildcard features which work across all of
the file manipulation commands.  This set of commands is currently
defined as:  ( COPY, DECLARE, DELETE, DIRECTORY, EXPUNGE, FILES,
RENAME, and UNDELETE ).

These commands are handled by three separate programs with a fourth
program providing a common interface.  COPY is handled by PIP;
DECLARE, DELETE, DIRECTORY, FILES and RENAME are handled by DIRIT;
EXPUNGE and UNDELETE are handled by UNDEL.  The common interface
program is, of course, RPG, which performs the job of translating
usernames into PPNs and preparing the appropriate ccl-level command
files to pass to the processing programs.

Each program was implemented as an independent development project
and as such, there was no apparent concern for a consistant set of
rules for wildcarding file names.  In fact, the efforts to develop
each of these programs is historically split up among different
companies.  PIP was developed by Digital (DEC), DIRIT originated
out of compatibility with the XDS 940s by Tymshare, RPG came from
a program developed at the Stanford AI lab, and UNDEL recently was
written by Tymshare.  The wildcarding conventions are similar at
best, but not similar enough.

The original charter for the COPY wildcard fix project is to make
the COPY command allow the same wildcarding as the RENAME command.
The project extension discussed in this document merely folds the
changes needed for the COPY command onto the UNDELETE and EXPUNGE
commands in order to make "all" file operation commands consistant.



The potential solutions which have been considered to date are
as follows:

  o Modify the Tymshare version of PIP to accept the wildcarding
    scheme currently in use by DIRIT and teach RPG to pass the
    proper things to PIP.

    A)  PIP would require code to convert handle both "?"  and "#"
        in a similar manner so that programs which pass arguments
        to PIP would continue to work.  An option here would be to
        have the RPG program to translate both wildcard characters
        ("#", "?")  to a single wildcard character.

    B)  Some decision needs to be made about permitting the "+"
        and "-" options currently available.  This could cause a
        major revision or re-write of the command scanner built
        into PIP, which would require extensive testing.

    C)  The RPG changes are not yet clear and will depend upon the
        decisions about which characters should be used to wildcard
        entire fields as well as single character positions.



  o Modify the current version of PIP (with DEC's updates) to work
    under the TYMCOM-X operating system.

    A)  Add the Tymshare magtape features for 1600 and 6250 tape
        drives (density).

    B)  Install date fixups to set Tymshare format dates instead of
        the standard DEC format for both creation and access.

    C)  Install the .CHUFD chanio call to read the UFD instead of
        actually "reading" it by hand.  This will include enforcing
        the Tymshare "#" wildcard and converting the standard "?"
        wildcard used by DEC into a "#".

    D)  As above, some decision needs to be made about permitting
        the "+" and "-" options currently available.  This could
        cause a major revision or re-write of the command scanner.

    E)  As above, the RPG changes are not yet clear and will depend
        upon other decisions.  However, there should be less change
        needed to DEC PIP thean would be required for Tymshare PIP.


  o Modifying DIRIT to do all the PIP data copying functions.  This
    means magtape and other functionality not currently in DIRIT.
    Support for "other" non-disk devices could be ignored with the
    caution that users and operators that wish to perform copying
    to such devices (e.g. magtape) could always run PIP by hand.

    A)  Flagging the COPY, EXPUNGE and UNDELETE commands to act in
        the same manner as the RENAME command with the exception
        that different input/output procedures are implemented for
        the necessary command differences.

    B)  Actually implementing input/output routines which will work
        on a variety of devices as independently as is possible and
        return with an error where applicable (illegal functions
        for various devices).



  o Re-writing DIRIT and PIP (from Macro) into SAIL and merging the
    capabilities of UNDEL into the "new" program.  The functions
    performed by DIRIT, although varied, fall into the category of
    directory-device file lookup and rename functions.  These same
    functions are required by PIP and UNDELE with very little added
    functionality.  (DIRIT's main functionality is it's sorting and
    "+/-" chain capability;  PIP's main functionality is movement
    of data from one device to another;  UNDEL's main functionality
    consists of "temp"-ifying files instead of out-right deletion).

    A)  Permit directory device scanning of files with attention to
        user sort requirements (date, filename, extension, storage).

    B)  Permit multiple chains of file descriptors using + and -.

    C)  Permit "fast" data movement for data files on the same type
        of storage medium (disk to disk, tape to tape), with slower
        data movement (necessary because of variable buffer sizes)
        for unlike storage mediums (tape to disk, disk to tty, etc).

    D)  Permit data "munching" functions such as line blocking for
        various block sizes (PIP /W for FORTRAN), removal or adding
        of line numbers, compressing or expanding spaces and tabs
        and removing trailing whitespace.

    E)  Permit full rename/delete functionality with both /SOFT and
        /HARD capabilities.

    F)  [Extension of A] Permit file selection based upon "other"
        file attributes such as author, license, protection, size
        and others (as required).  Note:  This will allow for the
        elimination of programs such as LICRPT, LICENSE, etc.

    G)  [Other extensions] Permit setting file license, file status
        bits, project code, etc (users with appropriate license).



General observations and reccommendations:

  o All of the solutions will require some modification to RPG to
    redirect various commands to the appropriate processors and to
    pass the proper wildcard characters and commands to the new or
    existing processors such as PIP or DIRIT.

  o I feel that the "old" Tymshare version of PIP is so full of
    reliability problems that moving to DEC's slightly more recent
    version with retro-fitted Tymshare features would leave a much
    more stable product on the TYMCOM-X's.  (If indeed we decide
    to fit the DIRIT wildcard scheme into it).

  o I feel that the time required to make either version of PIP
    "smart" enough to understand multiple chains of data via the
    "+/-" scheme would probably introduce more problems which we
    would be required to painstakingly ferret out before we can
    consider "any" type of release to customers.

  o With the advent of some specific "SAIL" routines written by
    Dave Smith and myself within the last few months, it is my
    belief that completely re-writing DIRIT into SAIL with some
    "startcode" procedures in crucial high-density sections of
    code, and merging the functionality of PIP and UNDEL as well
    as "other" small programs into a single "new" program is in
    our best interests and would leave the most stable product
    on the TYMCOM-X's.

I make these reccommendations after much thought and peering into
the insides of Tymshare PIP, DEC's PIP, DIRIT and RPG.  I have been
toying with various phases of rewriting CKSUM, FNDFIL, DIRIT and
other small utilities and I believe that my next task should be to
write up a specifications document which covers the functionality
needed to replace each of the above mentioned programs.

My major concerns for this project are the time needed to actually
implement the new version of DIRIT as well as the time that will be
needed to run it.  Design specifications are outside the scope of
this text and will be documented separately.


    