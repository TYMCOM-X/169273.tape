

procedure checking
% CHECKING checks the integrity of the SOFTWARE data base. A list
  of conditions checked is the following (from CHECK.LST):

  - Descriptions without a corresponding PRODUCT or TSR;
  - Descriptions that include blank lines;
  - TESTINGS without a TRANSMITTAL;
  - PROGRAMMER and MANAGER of PRODUCT or PROGRAMMER of TSR not in
    PROGRAMMER.LIST;
  - PROGRAMMER.LIST instances without FIRST.NAME or LAST.NAME;
  - TSRs with DATE.OUT, PROGRAMMER, or TIME.SPENT but without DATE.IN or
    DATE.OUT;
  - TRANS.NO or SECOND.TRANS.NO of PRODUCT is not for a TRANSMITTAL with the
    proper PROD.NAME, PROD.VERSION, or OP.SYS;
  - TRANSMITTALs without a corresponding PRODUCT;
  - TRANS.NO of PRODUCT greater than 8009 and no TRANSMITTAL entry, (8009 is
    the transmittal number of the first transmittal entered into the new data
    base; therefore if a product has as its transmittal number a number
    greater than 8009, the transmittal should exist);
  - TRANS.DATE of PRODUCT later than 9/1/83 and no TRANS.NO, (the transmittal
    number should be known for any transmittal entered after 9/1/83);
  - An existing TRANSMITTAL but TRANS.NO or TRANS.DATE are missing or
    different in the corresponding PRODUCT;
  - SECOND.TRANS.NO of PRODUCT but no TRANS.NO of PRODUCT;
  - An Archive Only Transmittal with an INSTALL.DATE, MEMO.DATE, or TESTINGS;
  - Two TSRs with the same TSR.NO and PROD.NAME, but OP.SYS is default for one
    of the TSRs, (if the itsr is for any operating system type then delete the
    itsr that does not have the default op.sys, if the itsr is for one or more
    specific operating systems then they should be indicated).

%

  begin
  fields
    TEMP.TSR.NUM  same as TSR.NUM,
    TEMP.PROD.NAME same as PROD.NAME,
    TEMP.OP.SYS same as OP.SYS,
    TEMP.TRANS.NO same as TRANS.NO,
    TEMP.TRANS.DATE same as TRANS.DATE,
    HOURS as 'ZN',
    MINUTES as 'ZN',
    SECONDS as '4ZN'

  report SOFTCHECK.REP to file 'SOFTCHECK'
    page.size 0

  report PROD.REP append to file 'SOFTCHECK'
    page.size 0

  report PRODDES.REP append to file 'SOFTCHECK'
    page.size 0

  report PROGLIST.REP append to file 'SOFTCHECK'
    page.size 0

  report TRANS.REP append to file 'SOFTCHECK'
    page.size 0

  report ITSR.REP append to file 'SOFTCHECK'
    page.size 0

  report ITSRDES.REP append to file 'SOFTCHECK'
    page.size 0

  let SECONDS = (TIME as '4ZN')
  let HOURS =  SECONDS/3600
  let MINUTES = (SECONDS - (HOURS*3600))/60

  write report SOFTCHECK.REP
    print to SOFTCHECK.REP @cr, @cr,
         "ABNORMAL CONDITIONS IN SOFTWARE DATABASE    ",
        TODAY as date 'ZD-MMM-YY'," ",HOURS,":",MINUTES,
        @cr,72*'-',@cr,@cr


  for each PRODUCT 
    write report PROD.REP
    do begin  

% a SECOND.TRANS.NO exists for a PRODUCT, but a TRANS.NO does not  %

    if TRANS.NO = default and SECOND.TRANS.NO ne default
      then print to PROD.REP
      "PRODUCT---SECOND.TRANS.NO BUT NO TRANS.NO;",@cr,
      "  second trans.no: ",SECOND.TRANS.NO,
      "  prod.name: ",trim(PROD.NAME),@cr,"  op.sys: ",trim(OP.SYS),
      "  prod.version: ",trim(PROD.VERSION),@cr
    
% no TRANS.NO exists for PRODUCT where TRANS.DATE is later than 9/1/83 %

    if TRANS.DATE gt " 9/ 1/83" as DATE "zm/zd/yb" and TRANS.NO = default 
      then print to PROD.REP
      "PRODUCT---NO TRANS.NO AND TRANS.DATE > 9/ 1/83;",@cr,
      "  trans.date: ",TRANS.DATE,
      "  prod.name: ",trim(PROD.NAME),@cr,"  op.sys: ",trim(OP.SYS),
      "  prod.version: ",trim(PROD.VERSION),@cr

% no TRANSMITTAL exists for a PRODUCT with a TRANS.NO greater than 8009 %

    if TRANS.NO GT 8009 
      then
        select TRANSMITTAL where TRANS.NO = TRANS.NO of PRODUCT
          then nothing
      else 
          print to PROD.REP
          "PRODUCT---NO TRANSMITTAL FOR TRANS.NO GREATER THAN 8009;",@cr,
          "  trans.no: ",TRANS.NO of PRODUCT,
          "  prod.name: ",trim(PROD.NAME),@cr,"  op.sys: ",trim(OP.SYS),
          "  prod.version: ",trim(PROD.VERSION),@cr


% TRANS.NO of PRODUCT not alike TRANSMITTAL; PROD.NAME, PROD.VERSION, %
% and OP.SYS are equivalent                                           %

    select TRANSMITTAL where PROD.NAME = PROD.NAME of PRODUCT and
      PROD.VERSION = PROD.VERSION OF PRODUCT and OP.SYS = OP.SYS of PRODUCT
      then  
        if TRANS.NO ne TRANS.NO of Product
          then print to PROD.REP
          "PRODUCT---TRANS.NO DIFFERENT, PROD.NAME, OP.SYS,",
          " VERSION ALIKE IN TRANSMITTAL;",@cr,
          "  trans.no of product: ",TRANS.NO of PRODUCT,
          "  trans.no of transmittal: ",TRANS.NO,@cr,
          "  prod.name: ",trim(PROD.NAME),"  op.sys: ",trim(OP.SYS),
          "  prod.version: ",trim(PROD.VERSION),@cr
 

% PROGRAMMER and MANAGER of PRODUCT not in PROGRAMMER.LIST %

%    select PROGRAMMER.LIST where PROGRAMMER = PROGRAMMER of PRODUCT 
      then nothing
    else
      print to PROD.REP
        "PRODUCT---NO PROGRAMMER.LIST FOR THIS PROGRAMMER;",@cr,
        "  programmer: ", trim(PROGRAMMER of PRODUCT),
        "  prod.name: ",trim(PROD.NAME),@cr
%  end

  for each PRODUCT.DESC
    write report PRODDES.REP
      do begin

% PRODUCT.DESC does not have matching PRODUCT entries, or contains blank %
% line descriptions                                                      %  

      if LINE = default then
        print to PRODDES.REP
        "PRODUCT.DESC---BLANK LINE(S) IN PRODUCT DESCRIPTION;",@cr,
        "  prod.name: ",trim(PROD.NAME),"  op.sys: ",trim(OP.SYS),@cr

      select PRODUCT where PROD.NAME = PROD.NAME of PRODUCT.DESC and
        OP.SYS = OP.SYS of PRODUCT.DESC 

        then nothing
      else
        print to PRODDES.REP 
        "PRODUCT.DESC---NO PRODUCT FOR THIS PROD.NAME;",@cr,
        "  prod.name: ",trim(PROD.NAME),"  op.sys: ",trim(OP.SYS),@cr
  end


  for each PROGRAMMER.LIST
    write report PROGLIST.REP
    do begin

% PROGRAMMER.LIST without FIRST.NAME or LAST.NAME %

      if LAST.NAME = default or FIRST.NAME = default
        then
        print to PROGLIST.REP
        "PROGRAMMER.LIST---NO FIRST.NAME OR LAST.NAME FOR PROGRAMMER;",
        @cr,"  programmer: ",trim(PROGRAMMER),@cr
  end

for each TRANSMITTAL
  write report TRANS.REP
  do begin

% an ARCHIVE.ONLY exists in a TRANSMITTAL with an INSTALL.DATE or MEMO.DATE %

    if ARCH.ONLY = "Y"
      then
        if INSTALL.DATE ne default or MEMO.DATE ne default
        then print to TRANS.REP
        "TRANSMITTAL---ARCH.ONLY WITH INSTALL.DATE OR MEMO.DATE",@cr,
        "  install.date: ",INSTALL.DATE,"  memo.date: ",MEMO.DATE,
        "trans.no: ",TRANS.NO,@cr


% TRANSMITTALS without the corresponding PRODUCT %

    select PRODUCT where PROD.NAME = PROD.NAME of TRANSMITTAL and
      PROD.VERSION = PROD.VERSION of TRANSMITTAL and
      OP.SYS = OP.SYS of TRANSMITTAL 
      then nothing
    else
      print to TRANS.REP
      "TRANSMITTAL---NO PRODUCT FOR THIS TRANSMITTAL;",@cr,
        "  prod.name: ",trim(PROD.NAME),"  prod.version: ",
      trim(PROD.VERSION),@cr,"  op.sys: ",trim(OP.SYS),@cr


% TRANS.NO or TRANS.DATE of TRANSMITTAL are different or missing %
% in PRODUCT                                                     %


      let TEMP.TRANS.NO = TRANS.NO
      let TEMP.TRANS.DATE = TRANS.DATE
      select PRODUCT where PROD.NAME = PROD.NAME of TRANSMITTAL and
        PROD.VERSION = PROD.VERSION of TRANSMITTAL and
        OP.SYS = OP.SYS of TRANSMITTAL
        then
          if TRANS.NO ne TEMP.TRANS.NO or TRANS.DATE ne TEMP.TRANS.DATE
            then 
        print to TRANS.REP
        "TRANSMITTAL---TRANS.NO OR TRANS.DATE DIFFERS in PRODUCT;",@cr,
        "  trans.no of product: ",TRANS.NO,
        "  trans.date of product: ",TRANS.DATE,@cr,
        "  trans.no of transmittal: ",TEMP.TRANS.NO,
        "  trans.date of transmittal: ",TEMP.TRANS.DATE,@cr,
        "  prod.name: ",trim(PROD.NAME),@cr
  end


  for each TSR
    write report ITSR.REP
    do begin

  % TSR has DATE.OUT, PROGRAMMER, OR TIME.SPENT but lacks DATE.IN  %

    if DATE.OUT ne " 9/14/52" as DATE "zm/zd/yb" or PROGRAMMER ne 
      default or TIME.SPENT ne default
      then
        if DATE.IN = " 9/14/52" as DATE "zm/zd/yb"
          then print to ITSR.REP
          "TSR---NO DATE.IN;",@cr,"  tsr.num: ",TSR.NUM,"  prod.name: ",
          trim(PROD.NAME),@cr,"  date.out: ",DATE.OUT,"  programmer: ",
          trim(PROGRAMMER),"  time.spent: ",TIME.SPENT,@cr
 
% two TSRs with the same TSR.NUM  and PROD.NAME, but OP.SYS is " 9/14/52" as DATE "zm/zd/yb" for one %

    if OP.SYS = default then
      begin
      let TEMP.TSR.NUM  = TSR.NUM  of TSR
      let TEMP.PROD.NAME = PROD.NAME of TSR
      select TSR where TSR.NUM = TEMP.TSR.NUM and PROD.NAME = TEMP.PROD.NAME
        and OP.SYS ne default
        then print to ITSR.REP
        "TSR---TSRs WITH SAME TSR.NUM, PROD.NAME, ONE IS DEFAULT FOR OP.SYS;",
        @cr,"  tsr.num: ",TSR.NUM,"  prod.name: ",trim(PROD.NAME),@cr,
        "  op.sys : ",OP.SYS,@cr
      end


% PROGRAMMER of TSR not in PROGRAMMER.LIST %

%      select PROGRAMMER.LIST where PROGRAMMER = PROGRAMMER of TSR
        then nothing
      else
      print to ITSR.REP
      "TSR---NO PROGRAMMER.LIST FOR THIS PROGRAMMER;",@cr,
      "  programmer: ",trim(PROGRAMMER of TSR),@cr
%  end


  for each TSR.DESC
    write report ITSRDES.REP
      do begin

% TSR.DESC does not have matching TSR entry or contains a blank line %
% description                                                        %

      if LINE = default then
        print to ITSRDES.REP
        "TSR.DESC---BLANK LINE(S) IN DESCRIPTION FOR TSR.NUM;",@cr,
        "  tsr.num: ",TSR.NUM ,@cr
      select TSR where TSR.NUM  = TSR.NUM  of TSR.DESC
        then nothing
      else
        print to ITSRDES.REP
        "TSR.DESC---NO TSR FOR THIS TSR.NUM;",@cr,
        "  tsr.num: ",TSR.NUM of TSR.DESC,@cr
  end

end    