        TITLE   JOBSTT:  JOB STATUS PRINTOUT
        IF1, <PRINTX JOBSTT>
MAINSW==0               ;INDICATES NOT THE MAIN PROGRAM

;  EXTERNAL SUBROUTINES

        EXTERN  DECP2X  ;(IN SSIO)
        EXTERN  DULOUT  ;DUL READING SUBROUTINE (SSIO)
        EXTERN  FIELD   ;FIELD CONTROL SUBROUTINE (SSIO)
        EXTERN  INACTC  ;CHECK IF SEGMENT INACTIVE (SSIO)
        EXTERN  LOPSWP  ;PRINT MESSAGE AND ADD DSKUSE COUNT (SSIO)
        EXTERN  LUDCHK  ;LUD READING SUBROUTINE (SSIO)
        EXTERN  MSG     ;MESSAGE PRINTING (SSIO)
        EXTERN  OCTLRH  ;PRINT OCTAL AS UNSIGNED HALVES (SSIO)
        EXTERN  PNTPPN  ;PRINTS PROJECT-PROGRAMMER NUMBER (SSIO)
        EXTERN  PRNTRU  ;PRINTS TRU UNITS USED (SSIO)
        EXTERN  RDX10   ;DECIMAL OUTPUT - FREE FORM (SSIO)
        EXTERN  RDX10F  ;DECIMAL OUTPUT - FIXED FIELD (SSIO)
        EXTERN  RDXN    ;SPECIFIC RADIX OUTPUT (SSIO)
        EXTERN  TIME    ;PRINT TIME (SSIO)
        EXTERN  TYO     ;OUTPUT CHARACTER TO THE TERMINAL (SSIO)
        EXTERN  SEGSZ   ;COMPUTES SEGMENT SIZE (SSIO)
        EXTERN  SIXBP   ;PRINT SIXBIT MESSAGE (SSIO)
        EXTERN  SPACE   ;PRINTS A SPACE (SSIO)

;  EXTERNAL LOCATIONS

        EXTERN  ACTUSE  ;ACTIVE VIRTUAL CORE USED (SSLOW)
        EXTERN  CORUSE  ;TOTAL SWAP & CORE PAGES USED (SSLOW)
        EXTERN  LASPPN  ;LUDCHK PUTS PPN OF USER HERE (SSLOW)
        EXTERN  LOWUSE  ;TOTAL VIRT CORE IN LOW SEGS (SSLOW)
        EXTERN  LUDOPN  ;ONES IF LUD OPEN ON LUD CHANNEL (SSLOW)
        EXTERN  MYJOB   ;MY JOB NUMBER (SSLOW)
        EXTERN  NODIOWD ;I/O WORD FOR READING NODES.MAP (SSLOW)
        EXTERN  QTAB    ;(SSLOW)
        EXTERN  UNM1    ;USER IN LICENSE PRINT ROUTINE (SSLOW)
        EXTERN  %NODBU  ;NODE TABLE (SSLOW)

;  ALL THE FOLLOWING ARE FROM SSLOW

        EXTERN  .CHIO,.CON,.DSIO,.DVIOS,.FRM,.PPN,.PRG,.PRV,.SGN
        EXTERN  .TIM,.TTY,.TTYN,.TYM,.USRN1,.USRN2

;  GLOBAL SUBROUTINES

        INTERN  %CIO,%CON,%DIO,%FRM,%JOB,%LIC,%PPN
        INTERN  %PRG,%SIZ,%STT,%TRU,%TTY,%TYM,%WHO


;PRINT JOB NO.
;CALL AS:       PUSHJ   P,%JOB
%JOB:   MOVEI   CH,WD.JOB       ;SET UP WIDTH
        PUSHJ   P,FIELD         ;SET UP FIELD LENGTH
        HRRZ    N,J             ;JOB NUMBER
        PUSHJ   P,DECP2X        ;PRINT, LEAD WITH SP IF .LT. 10

;CHECK IF THIS IS MY JOB PRINT "*"
        MOVEI   CH,"*"          ;PREPARE TO PRINT *
        HRRZ    N,J             ;GET MY JOB NO.
        CAMN    N,MYJOB         ;ME TRULY?
        PUSHJ   P,TYO           ;YES, TYPE THE *
        POPJ    P,              ;RETURN...

;PRINT PPN
;CALL AS:       PUSHJ   P,%PPN
%PPN:   MOVEI   CH,WD.PPN       ;SET UP COLUMN WIDTH
        PUSHJ   P,FIELD         ;SET UP FIELD
        MOVE    A,@.PPN         ;GET THE PPN OF THIS LUSER.
        PUSHJ   P,PNTPPN        ;PRINT P,PN
        POPJ    P,              ;RETURN....

;PRINT TYMNET
;CALL AS:       PUSHJ   P,%TYM
%TYM:   MOVEI   CH,WD.TYM       ;SET UP FIELD WIDTH
        PUSHJ   P,FIELD         ;SET UP FIELD
        TLNE    F,FL.DTJ        ;NOSKIP IF DETACHED
        JRST    NODDET          ;THIS LUSER IS DETACHED.
        MOVE    INFO,@.TYM      ;RETRIEVE TYMNET INF.
        LDB     NODE,[POINT 6,INFO,27]  ;GET 1ST PART OF NODE #
        LDB     NODE1,[POINT 6,INFO,19] ;GET 2ND PART OF NODE #
        DPB     NODE1,[POINT 6,NODE,29] ;PUT 2ND PART WITH 1ST
        JRST    SRNODE          ;GO SEARCH FOR NODE NAME.

; SEARCH FOR A NODE
; THREE WORD ENTRIES IN %NODBUFF
;   1:NUMBER OF NODE
; 2,3:7-BIT ASCII
;  PRESENTLY, 3000 IS HIGHEST LEGAL NODE #.
;  NODES.MAP FILE TO BE CHANGED TO FLAG LAST ENTRY.
;
RFNODE: USETI   NOD,1           ;RESET TO BEGINNING OF FILE.
RNNODE: IN      NOD,NODIOWD     ;READ NEXT 3 BLOCKS OF NODE FILE.
        SKIPA                   ;THIS IS NORMAL RETURN.
        JRST    ILNODE          ;IF FAILED, TREAT AS NOT FOUND.

SRNODE: CAMGE   NODE,%NODBUFF   ;HAVE WE THE CORRECT BLOCKS OF NODE FILE?
        JRST    RFNODE          ;NO -- BACK TO BEGINNING.
        CAMLE   NODE,%NODBUFF+^D381     ;CHECK END OF BLOCK.
        JRST    RNNODE          ;MUST GET NEXT 3 BLOCKS.
        SETZ    N1,             ;SET UP INDEX ON %NODBUFF.
        MOVEI   M,3000          ;SEARCH THROUGH %NODBUFF FOR NODE #.
SNODE:  CAMN    NODE,%NODBUFF(N1)       ;COMPARE WITH CURRENT ENTRY.
        JRST    FNODE           ;FOUND IT.
        CAMG    M,%NODBUFF(N1)  ;ARE WE AT THE END OF NODE MAP?
        JRST    ILNODE          ;YES -- GIVE UP SEARCH.
        ADDI    N1,3            ;TO NEXT ENTRY
        JRST    SNODE           ;KEEP ON SEARCHING

;HERE ON ILLEGAL NODE
ILNODE: MOVEI   M,[ASCIZ /*/]   ;TYPE **NODE#**
        PUSHJ   P,MSG           ;TYPE THE FIRST PART, **
        MOVEI   R,^O10          ;RADIX OCTAL
        PUSHJ   P,RDXN  ;PRINT NODE NUMBER
        MOVEI   M,[ASCIZ /*/]   ;TYPE THE LAST **
        JRST    PNODE           ;AND PRINT **

;HERE WHEN FOUND NODE
FNODE:  MOVEI   M,%NODBUFF+1(N1) ;ADR OF MESSAGE

;HERE ON MESSAGE TO PRINT (DETACHED OR OTHERWISE)
PNODE:  PUSHJ   P,MSG           ;PRINT NODE NAME
        MOVEI   M,[ASCIZ/ #/]
        PUSHJ   P,MSG           ;TYPE ' T' FOLLOWED BY TTY#
        HRLZ    A,@.TTY         ;GET TTY #
        PUSHJ   P,SIXBP         ;WHICH IS SIXBIT(IE, TTY55)
        POPJ    P,              ;RETURN****

;HERE WHEN THIS TTY IS DETACHED
NODDET: MOVEI   M,[ASCIZ/DETACHED/]     ;SAY DETACHED
        PUSHJ   P,MSG           ;INSTEAD OF ANY TTY INFORMATION
        POPJ    P,              ;RETURN...

;PRINT TTY INFORMATION
;CALL AS:       PUSHJ   P,%TTY
%TTY:   MOVEI   CH,WD.TTY       ;FIELD WIDTH
        PUSHJ   P,FIELD         ;ADJUST
        MOVE    C,@.DVIOS       ;GET DVIOS WORD
        MOVEI   M,[ASCIZ / IM/] ;TEST FOR IMAGE INPUT
        TLNE    C,200000        ;IMAGE INPUT ?????
        PUSHJ   P,MSG           ;YES
        MOVEI   M,[ASCIZ / BK/] ;BREAK ON ALL CHARACTERS ??
        TLNE    C,100000        ; (DUE TO DDTIN/TTCALL?)
        PUSHJ   P,MSG           ;YES-SAY SO
        MOVEI   M,[ASCIZ / IX/] ;PASS ALTMODES TO PROGRAM?
        TRNE    C,2000          ; (IX=TYMCOM[IX]--940 MODE)
        PUSHJ   P,MSG           ;YES
        MOVEI   M,[ASCIZ / S$/] ;SUPRESSING $
        TRNE    C,400
        PUSHJ   P,MSG           ;YES
        MOVEI   M,[ASCIZ / NE/] ;NO ECHOING?
        TRNE    C,200
        PUSHJ   P,MSG           ;YES
        MOVEI   M,[ASCIZ / AC/] ;FULL CHARACTER TRANSMISSION SET
        TRNE    C,100
        PUSHJ   P,MSG           ;YES
        ANDI    C,17            ;GET THE MODE
        MOVE    N,C             ;SET UP FOR NUMBER PRINT
        PUSHJ   P,SPACE
        PUSHJ   P,OCTLRH        ;PRINT IT OUT
        PUSHJ   P,SPACE
        HRR     N,XTYLIN
        HRL     N,@.TTYN        ;CURRENT TTY LINE NO.
        GETTAB  N,              ;GET POSITION ON LINE
        SETZ    N,              ;FAILED.
        PUSHJ   P,RDX10 ;PRINT POS. ON LINE
        POPJ    P,              ;RETURN****

;PRINT PROGRAM NAME
;CALL AS:       PUSHJ   P,%PRG
%PRG:   MOVEI   CH,WD.PRG       ;SET WITDH OF COULMN
        PUSHJ   P,FIELD         ;SET UP FIELD
        MOVE    A,@.PRG         ;GET PROGRAM NAME.
        PUSHJ   P,SIXBP         ;TYPE SIXBIT PROGRAM NAME
        POPJ    P,              ;AND RETURN****

;PRINT SIZE(K)
;CALL AS:       PUSHJ   P,%SIZ
%SIZ:   MOVEI   CH,WD.SIZ       ;SET UP FIELD WIDTH
        PUSHJ   P,FIELD         ;SET UP FIELD WIDTH
        TLZ     F,FL.HSG        ;FLAG LOW SEGMENT
        PUSHJ   P,SEGSZ         ;COMPUTE SEGMENT SIZE
        MOVE    A,N             ;SAVE FOR LATER TEST
        PUSHJ   P,INACTC        ;SKIP IF JOB IS INACTIVE
        ADDM    N,ACTUSE        ;NO, ACTIVE, VIRT.CORE TEST
        ADDM    N,LOWUSE        ;COUNT OF LOW SEG. SIZE
        ADDM    N,CORUSE        ;COUNT OF TOTAL CORE IN USE.
        PUSHJ   P,RDX10 ;PRINT DEC. SIZE OF LOWSEG.
        PUSH    P,J             ;PRESERVE JOB NUMBER
        SKIPN   J,@.SGN         ;SEE IF HI-SEG
        JRST    SIZDON          ;NO
        JUMPL   J,SPYER         ;IN CASE SPYING
        TLO     F,FL.HSG        ;FLAG AS HI-SEG
        PUSHJ   P,SEGSZ         ;COMPUTE SIZE
        MOVEI   CH,"+"          ;OUTPUT A PLUS
        PUSHJ   P,TYO           ;OUTPUT +
        PUSHJ   P,RDX10 ;PRINT HI-SEG SIZE
        JRST    SIZDON          ;GO RESTORE JOB NUMBER
;HERE WHEN JOB IS DOING A SPY(HI MONITOR)
SPYER:  MOVE    A,[SIXBIT /+spy/] ;SPYING--PRINT INDICATION
        PUSHJ   P,SIXBP         ;SAY LUSER IS SPYING
;HERE WHEN DONE, RESTORE (J) SAVED FOR HI-SEG COMPUTE.
SIZDON: POP     P,J             ;RESTORE JOB NUMBER
        POPJ    P,              ;RETURN***

;PRINT STATE
;CALL AS:       PUSHJ   P,%STT
%STT:   MOVEI   CH,WD.STT       ;SET UP FIELD WIDTH
        PUSHJ   P,FIELD         ;SET UP FIELD WIDTH
        MOVSI   A,'^W '         ;PREPARE FOR COMMAND WAIT
        TLNE    JS,400000       ;SEE IF COMMAND TYPED
        MOVSI   A,'CM '         ; .
        TLNE    JS,CMWB         ; ..
        JRST    TSTATE          ;YES
        MOVSI   A,'OW '         ;SET IN CASE OPER WAIT
        TRNE    JS,JDCON        ;SEE IF DEVICE HOLDING IT UP
        JRST    TSTATE          ;YES--SEND IT
        MOVSI   A,(SIXBIT /^C/) ;PREPARE FOR ^C WAIT
        JUMPGE  JS,TSTATE       ;YES, ^C WAIT.
        LDB     B,[POINT 5,JS,14]       ;GO SEARCHING THROUGH QTAB
        IDIVI   B,3             ;3 QUEUES PER WORD.
        IMULI   C,^D12          ;GIVES OFFSET OF BYTES IN C(36/3)
        MOVE    A,QTAB(B)       ;GET QUEUE WORD
        LSH     A,(C)           ;SHIFT TO PROPER PLACE
        AND     A,[7777B11]     ;AND OUT ALL BUT GOOD BITS

;TYPE "TO" IF TTY OUTPUT STATE
        MOVSI   B,(SIXBIT /TI/) ;SEE IF TTY I/O WAIT STATE CODE
        CAMN    B,A             ;IS IT?
        SKIPN   B,@.DVIOS       ;AND IS IOS ZERO?
        JRST    TSTATE          ;NO, TI WAIT STATE
        JUMPGE  B,TSTATE        ;JUMP IF NOT OUTPUT
        MOVSI   A,(SIXBIT /TO/) ;TELETYPE OUTPUT WAIT
TSTATE: PUSHJ   P,LOPSWP        ;PRINT STATE AND "SW"/"SWF" IF SWAPPED/& FRAGMENTED
        POPJ    P,              ;RETURN****
IFN FTDSIO,<

;PRINT DSK IO COUNT
;CALL AS:       PUSHJ   P,%DIO
%DIO:   MOVEI   CH,WD.DIO       ;SET UP FIELD
        PUSHJ   P,FIELD         ;SET FIELD SPEC
        MOVE    N,@.DSIO        ;GET DSK IO COUNT
        MOVE    CH,[^D99999]
        PUSHJ   P,RDX10F
        POPJ    P,              ;RETURN..
>
IFN FTCHIO,<

;PRINT CHARACTER IO COUNT
;CALL AS:       PUSHJ   P,%CIO
%CIO:   MOVEI   CH,WD.CIO       ;GET FIELD LENGTH
        PUSHJ   P,FIELD         ;SET IT UP
        MOVE    N,@.CHIO        ;GET CHARACTER IO COUNT
        MOVE    CH,[^D999999]
        PUSHJ   P,RDX10F
        POPJ    P,              ;RETURN....
>
IFN FTUSIO,<

;PRINT USETIO COUNT
;CALL AS:       PUSHJ   P,%UIO
%UIO:   MOVEI   CH,WD.UIO       ;GET FIELD WIDTH
        PUSHJ   P,FIELD         ;SET UP FIELD
        MOVE    A,@.USIO        ;GET USETI/USETO COUNT
        MOVEI   CH,^D999999
        PUSHJ   P,RDX10F
        POPJ    P,              ;RETURN....
>

;PRINT TRU'S USED
;CALL AS:       PUSHJ   P,%TRU
%TRU:   MOVEI   CH,WD.TRU       ;SET UP COLUMN WIDTH
        PUSHJ   P,FIELD         ;SET UP
        MOVE    A,@.TIM         ;PRINT TRU'S USED
        PUSHJ   P,PRNTRU        ;AS SO
        POPJ    P,              ;AND RETURN...
IFN FTCONN,<

;PRINT CONNECT TIME USED
;CALL AS:       PUSHJ   P,%CON
%CON:   MOVEI   CH,WD.CON       ;WIDTH OF THIS FIELD
        PUSHJ   P,FIELD         ;EXPAND IT
        MOVE    A,@.CON         ;GET CONNECT TIME
        PUSHJ   P,TIME          ;OUTPUT THE TIME
        POPJ    P,              ;AND RETURN
>

;PRINT USER NAME
;CALL AS:       PUSHJ   P,%WHO
%WHO:   MOVEI   CH,WD.WHO       ;GET WIDTH OF WHO FIELD
        PUSHJ   P,FIELD         ;EXPAND FIELD
        MOVE    A,[SIXBIT/ ???/];WHEN NOT LOGGED IN,TYPE ???
        TLNN    JS,JLOG         ;IS THIS JOB LOGGED IN ?
        JRST    LASPRT          ;NO, TYPE ? AS USER NAME
        MOVE    A,@.USRN1       ;FIRST PART OF USER NAME
        PUSHJ   P,SIXBP         ;TYPE OUT NAME
        SKIPE   A,@.USRN2       ;IF NULL DONT PRINT
LASPRT: PUSHJ   P,SIXBP
IFN FTGFD,<
;CHECK TO SEE IF THIS LUSER IS ON A GFD
        TLNN    JS,JLOG         ;LOGGED IN ?
        POPJ    P,              ;NO, RETURN...
        PUSH    P,D             ;SAVE D
        PUSH    P,J             ;SAVE J
        MOVE    D,@.USRN1       ;GET FIRST PART OF USER NAME
        MOVE    J,@.USRN2       ;GET SECOND PART OF USER NAME
        SKIPE   LUDOPN          ;IF SKIP LUD NOT OPEN.
        PUSHJ   P,LUDCHK        ;LOOK IT UP IN THE LUD.
        JRST    NOTGFD          ;NOT IN A GFD.
        MOVE    J,(P)           ;GET BACK J
        SKIPE   A,@.PPN         ;GET THIS LUSERS PPN
        CAMN    A,LASPPN        ;DO THE PPNS MATCH ?
        JRST    NOTGFD          ;YES, NOT IN A GFD.
IFG FTGFD,<
;MUST BE IN MY GAN IN ORDER TO SEE THE GFD
        HLRZ    B,ME            ;GET THE PPN OF THIS JOB
        HLRZ    A,@.PPN         ;GET PPN OF JOB WE ARE LOOKING AT
        CAME    A,B             ;DO THEY MATCH ?
        JRST    NOTGFD          ;NO, FORGET GFD
>
; IN A GFD, SO GO TO DULOUT TO PRINT THE USER NAME.
        MOVEI   M,[ASCIZ/ (/]   ;ENCLOSE GFD NAME IN ()
        PUSHJ   P,MSG           ;TYPE MESSAGE
        PUSHJ   P,DULOUT        ;(A) HAS PPN, TYPE USER NAME
        MOVEI   CH,")"          ;CLOSE THE NAME
        PUSHJ   P,TYO           ;WITH A CLOSING )

;HERE WHEN NOT IN A GFD BUT (P) IS STACKED
NOTGFD: POP     P,J             ;GET BACK J
        POP     P,D             ;GET BACK D
>
        POPJ    P,              ;RETURN....
IFN FTFROM,<

;PRINT WHO OWNS THE PROGRAM
;CALL AS:       PUSHJ   P,%FRM
%FRM:   MOVEI   CH,WD.FRM       ;GET FIELD WIDTH
        PUSHJ   P,FIELD         ;AND SET IT UP
        SKIPN   A,@.FRM         ;GET FROM PPN, IF ZERO..
        MOVE    A,@.PPN         ;USE THE OWNER'S PPN.
        PUSHJ   P,DULOUT        ;TYPE OWNER
        POPJ    P,              ;RETURN***
>; ABOVE FOR PROGRAM-FROM-DIR TYPEOUT

;PRINT LICENSE
;CALL AS:       PUSHJ   P,%LIC
%LIC:   MOVEI   CH,WD.LIC       ;SET UP FIELD
        PUSHJ   P,FIELD
        MOVE    B,@.PRV         ;GET JBTPRV FOR THIS JOB
        MOVEI   M,[ASCIZ / TP/]
        TRNE    B,40000         ;TYMSHARE STATUS ?
        PUSHJ   P,MSG
        MOVEI   M,[ASCIZ / AS/]
        TRNE    B,20000         ;ACT.SUP ?
        PUSHJ   P,MSG
        LDB     B,[POINT 2,B,^D28]
        MOVEI   M,@MODTAB(B)
        PUSHJ   P,MSG
        HRL     B,J             ;SET UP FOR GET TAB
        HRR     B,XJBLIC        ;LICENSE
        GETTAB  B,              ;GET LICENSE
        SETZ    B,              ;NONE
        MOVEM   B,UNM1          ;SAVE JBTLIC
        HLRZ B,UNM1     ;GET PROCESS LICENSE
        HRLZ C,UNM1
        XOR C,UNM1      ;FIND OUT WHICH BITS OF FILES ARE SAME
        HRR C,UNM1      ;PREPARE TO FIND OUT DIFF BITS
        TLNN C,3
        TROA C,3
        TRZ C,3
        TLNN C,14
        TROA C,14
        TRZ C,14        ;ZERO ANY FILE DIFFERENT
        TDZ B,C         ;FIND DIFFERENT BITS
        PUSHJ P,LICPR
        HLRZ B,UNM1
        HRLZ C,UNM1     ;SAME
        XOR C,UNM1
        TLNN C,3
        TROA C,3
        TRZ C,3
        TLNN C,14
        TROA C,14
        TRZ C,14
        AND B,C         ;BUT NOW FIND BITS SAME
        JUMPE B,NBOTH
        MOVEI   M,[ASCIZ / (BH)/]
        PUSHJ   P,MSG
        PUSHJ P,LICPR
NBOTH:  HRRZ B,UNM1     ;NOW IN JOB BUT NOT PROC
        HRLZ C,UNM1
        XOR C,UNM1
        HLR C,UNM1
        TLNN C,3
        TROA C,3
        TRZ C,3
        TLNN C,14
        TROA C,14
        TRZ C,14
        TDZ B,C
        JUMPE B,NOLIC
        MOVEI   M,[ASCIZ / (JB)/]
        PUSHJ   P,MSG
        PUSHJ P,LICPR
        JRST NOLIC

LICPR:  LDB C,[POINT 2,B,33]
        MOVEI   M,RFTB(C)
        PUSHJ   P,MSG
        LDB C,[POINT 2,B,35]
        MOVEI   M,WFTB(C)
        PUSHJ   P,MSG
        TRZ B,17
        MOVEI C,0
LICLP:  MOVEI   M,LICTB(C)
        TRZE    B,400000
        PUSHJ   P,MSG
        LSH B,1
        ADDI C,1
        JUMPN B,LICLP
        POPJ P,

;HERE WHEN DONE WITH LICENSE PRINTING
NOLIC:  POPJ    P,              ;RETURN****

;  CONSTANTS

XJBLIC: XWD     0,-20   ;JBTLIC TABLE
XTYLIN: XWD     0,-32   ;POSITION ON LINE FOR TELETYPE

;  TABLES

; LICENSE BIT TABLE FOR USE ON /LICENSE COMMAND
; F0, F1, F2, F3, F4 ARE THE UNUSED LICENSE BITS
LICTB:  ASCIZ / WC/     ;WRITE IN CORE.
        ASCIZ / RC/     ;READ FROM CORE.
        ASCIZ / OP/     ;OPERATOR.
        ASCIZ / SY/     ;SYSTAT (RAH RAH!)
        ASCIZ / GD/     ;GET-DEVICES.
        ASCIZ / TD/     ;TRANSFER DEVICES.
        ASCIZ / ST/     ;FIDDLE WITH STRUCTURE.
        ASCIZ / HF/     ;HOME-FILES.
        ASCIZ / JL/     ;JAL-JACCT LICENSE.
        ASCIZ / AC/     ;AUX-CIRCUIT.
        ASCIZ / XC/     ;MODIFY CHARGES
        ASCIZ / F1/     ;;;START OF FAKE LIC'S, ADD AFT THIS;;;
        ASCIZ / F2/
        ASCIZ / F3/

MODTAB: [0]
        [ASCIZ / TY/]
        [ASCIZ / GE/]
        [ASCIZ / SD/]

; START OF LICENSE TABLES
RFTB:   0
        ASCIZ / RP/
        ASCIZ / RF/
        ASCIZ / RA/

WFTB:   0
        ASCIZ / WP/
        ASCIZ / WF/
        ASCIZ / WA/

        END
  