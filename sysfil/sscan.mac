	TITLE	SSCAN   SCANNER ROUTINES
	IF1, <PRINTX SSCAN>
MAINSW==0		;INDICATES NOT THE MAIN PROGRAM


;  EXTERNAL SUBROUTINES

	EXTERN	CPOPJ	;POP RETURN (SSIO)
	EXTERN	CPOPJ1	;SKIP RETURN (SSIO)
	EXTERN	CRLF	;OUTPUT CRLF SEQUENCE (SSIO)
	EXTERN	GETCHR	;GET CHARACTER FROM TTY (SSIO)
	EXTERN	GETRDC	;GET RADIX INPUT (SSIO)
	EXTERN	GETRDX	;GET RADIX INPUT (SSIO)
        EXTERN  HACKQ   ;RETURNS TO EXEC (SYSTAT)
	EXTERN	HELPM	;TELLS USER ABOUT HELP (SSHELP)
	EXTERN	LUDCHK	;LUD READING SUBROUTINE (SSIO)
	EXTERN	MSG	;MESSAGE PRINTING (SSIO)
	EXTERN	OCTLRH	;PRINT OCTAL AS UNSIGNED HALVES (SSIO)
	EXTERN	SIXBP	;PRINTS SIXBIT MESSAGE (SSIO)
	EXTERN	TYO	;OUT CHARACTER TO TERMINAL (SSIO)

;  EXTERNAL LOCATIONS (IN SSLOW)

	EXTERN	JOBN,JOBTBL,LASWT,LUDOPN,MYJOB,NOHEAD
	EXTERN	NUMAT,SVIND,.PPN,.PRG,.USRN1,.USRN2
	EXTERN	KY.PRG,KY.PPN,KY.TTN,KY.USN,CN.TIM

;  GLOBAL SUBROUTINES

	INTERN	CHGMOP,CHKNAM,CHKONC,CHKPPN,CHKPRG
	INTERN	CHKTTY,SCNSWT,CHKTIM
	INTERN	FNDPRG,FNDPPN,FNDTTN,FNDUSN
	SUBTTL	SEARCH KEY PROCESSING
;*****************************************
;*  CHECK FOR ONE JOB ONLY               *
;*****************************************

;CHGMOP -- CALL AS:
;	PUSHJ	P,CHGMOP
; WD HAS CURRENT CHARACTER FROM COMMAND LINE
; RETURNS NO-SKIPPING IF A JOB SPECIFICATION WAS FOUND
; RETURNS SKIPPING IF NOT FOUND, ALL AC'S UNCHANGED.
CHGMOP:	CAIN	WD,L.MYJ	;MY JOB ONLY?
	JRST	[MOVE	N,MYJOB	;GET MY JOB NUMBER
		SETOM	NOHEAD	;SET SWITCH TO SKIP HEADING OUTPUT
		JRST	GOTJOB]	;AND SET ENTRY IN JOB TABLE.
	CAIL	WD,"0"
	CAILE	WD,"9"
	JRST	CPOPJ1		;INVALID--RETURN SKIPPING
	SETOM	NOHEAD		;NO HEADING FLAG
	MOVEI	R,^D10		;DEC INPUT
	PUSHJ	P,GETRDX	;GET NUMBER
GOTJOB:	JUMPLE	N,HELPM		;ERROR IF JOB 0
	CAILE	N,MX.JOB	;AND ERROR IF JOB IS
	JRST	HELPM		;TOO LARGE ALSO
	SETOM	JOBTBL(N)	;SET LINE AS OK
	POPJ	P,		;RETURN NO-SKIPPING
;*****************************************
;*  SINGLE PROGRAM SEARCH                *
;*****************************************

;CHKPRG -- CALL AS:
;	PUSHJ	P,CHKPRG
; WD HAS CURRENT CHARACTER FROM COMMAND LINE
; RETURNS NO-SKIPPING IF A PROGRAM SEARCH CALLED
; RETURNS SKIPPING IF PROGRAM SEARCH NOT CALLED FOR
CHKPRG:	CAIE	WD,L.PRG	;SINGLE PROGRAM SEARCH?
	JRST	CPOPJ1		;NO, SKIP RETURN.
	SETOM	NOHEAD		;NO HEADING MODE
	MOVE	N,[POINT 6,A]	;6-BIT POINTER TP A REGISTER
	MOVEI	R,6		;MAX. 6 CHARS
	SETZB	A,B		;RESET THE STORE-INTO CELLS

CHKQ1:	PUSHJ	P,GETCHR	;GET CHARACTER
	JRST	CHKQ2		;END--SET JUNK
	CAIN	WD,L.PRE	;TERMINATOR?
	JRST	CHKQ2		;OK, SET JOB TABLE
	JUMPE	R,CHKQ1		;ONLY 6 CHARS
	JUMPE	WD,.+2		;NULL NOT CONVERTED.
	SUBI	WD,40		;TO SIX BIT WE GO
	IDPB	WD,N		;SAVE CHARACTER
	SOJA	R,CHKQ1		;ANOTHER ROUND
CHKQ2:	TLO	F,FL.PRG	;SET PROGRAM SEARCH FLAG.
	MOVEM	A,KY.PRG	;SAVE PROGRAM SEARCH KEY.

;FNDPRG -- CALL AS:
;	PUSHJ	P,FNDPRG
; FNDPRG SEARCHES THE JOB LIST FOR ONE USING THE SPECIFIED
; PROGRAM THAT IT FINDS IN THE A-REGISTER.  A MESSAGE IS PRINTED
; IF NO JOB EXIST WHICH SATISFIES THE CONDITION.
;LOOP TO SEARCH FOR JOB
FNDPRG:	MOVE	J,JOBN		;SET J UP
	SETZ	B,		;COUNTER OF # FOUND
CHKQ3:	CAME	A,@.PRG		;PROGRAM MATCH?
	JRST	CHKQ4		;NO, LOOP ON.
	SETOM	JOBTBL(J)	;YES-SET JOB TABLE
	AOS	B		;INCREMENT FOUND COUNTER
CHKQ4:	SOJGE	J,CHKQ3		;LOOP, CHECKING ALL JOBS

;CHECK TO SEE IF ANYONE FOUND
	JUMPG	B,CPOPJ		;YES, RETURN
	MOVEI	M,[ASCIZ /NO USER RUNNING </]
	PUSHJ	P,MSG		;SAY NO  ONE FOUND
	PUSHJ	P,SIXBP		;TYPE PROG NAME
	MOVEI	M,[ASCIZ />
/]
	PUSHJ	P,MSG		;ALL DONE
	POPJ	P,		;RETURN....

;*****************************************
;*  CHECK AND GET GAN - UUN              *
;*****************************************

;CHKPPN -- CALL AS:
;	PUSHJ	P,CHKPPN
; WD HAS CURRENT CHARACTER FROM COMMAND LINE
; RETURNS NO-SKIPPING IF A PPN SEARCH IS CALLED FOR
; RETURNS SKIPPING IF A PPN SEARCH NOT CALLED FOR
CHKPPN:	CAIE	WD,"["		;SEE IF PPN
	JRST	CPOPJ1		;NO, RETURN SKIPPING
	SETOM	NOHEAD		;DON'T LIST HEADING
	MOVEI	R,10		;SET FOR OCTAL INPUT
	PUSHJ	P,GETRDC	;GET PROJECT
	JUMPL	N,HELPM		;ERROR IF L 0
	PUSHJ	P,CHKWLD	;CHECK FOR WILD CARD
	HRLZ	A,N		;SAVE FOR LATER
	PUSHJ	P,GETCHR	;REEAT CHARACTER
	JRST	CHKONC		;IGNORE END
	CAIN	WD,"]"		;IF SINGLE NUM ASSUME 2ND *
	JRST	CHKP2		;YES--SEE WHAT WE HAVE GOT
	CAIE	WD,","		;DID HE TYPE A ,
	JRST	CHKONC		;NO-SCREW HIM UP
	PUSHJ	P,GETRDC	;GET PROGRAMMER
	JUMPL	N,HELPM		;ERROR IF L 0
	PUSHJ	P,CHKWLD	;CHECK FOR WILD CARD
	HRR	A,N		;ADD TO RESULT
CHKP2:	JUMPLE	A,HELPM		;ERROR IF LE 0
	TLO	F,FL.PPN	;SET PPN SEARCH FLAG.
	MOVEM	A,KY.PPN	;SAVE SEARCH KEY.

;CHKTIM -- CALL AS:
;	PUSHJ	P,CHKTIM
; WD HAS CURRENT CHARACTER FROM COMMAND LINE
; RETURNS NO-SKIPPING IF A TIME FOR CONTINUOUS SPECIFIED
; RETURNS SKIPPING IF NOT FOUND
CHKTIM:	CAIE	WD,":"  	;SEE IF TIME
	JRST	CPOPJ1		;NO, RETURN SKIPPING
	MOVEI	R,^D10		;DEC INPUT
	PUSHJ	P,GETRDC	;GET NUMBER
	JUMPLE	N,HELPM		;ERROR IF LE 0
	CAILE	N,MX.TIM	;AND ERROR IF TIME IS
	JRST	HELPM		;TOO LARGE ALSO
        MOVEM   N,CN.TIM        ;SAVE TIME
	POPJ	P,		;RETURN NO-SKIPPING

;FNDPPN -- CALL AS:
;	PUSHJ	P,FNDPPN
; FNDPPN TAKES A PROJECT-PROGRAMMER # ARGUMENT FROM THE
; A-REGISTER AND SEARCHES THE JOB LIST FOR JOBS WHICH
; ARE RUNNING UNDER THE SPECIFIED NUMBER(S).
FNDPPN:	MOVE	J,JOBN		;SET UP J
	SETZ	B,		;FOUND COUNTER
CHKP3A:	HRRZ	N,@.PPN		;GET PROG NO. THIS JOB
	HRRZ	N1,A		;AND PROG. NO WANTED
	SKIPE	N1		;ZERO IF WILD CARD
	CAMN	N1,N		;DO LEFT HALFS COMPARE?
	JRST	.+2		;YES, SO FAR SO GOOD
	JRST	CHKP4		;FAILURE
	HLRZ	N,@.PPN		;GET PROJ. NO. THIS JOB
	HLRZ	N1,A		;AND WANTED PROJ. NO.
	SKIPE	N1		;SKIP IF WILD CARD
	CAMN	N1,N		;DO PROJ#S MATCH?
	JRST	[SETOM JOBTBL(J) ;SUCCESS - SET JOB
		AOS B		;INC COUNTER
		JRST .+1]	;AND RETURN
CHKP4:	SOJGE	J,CHKP3A	;LOOP FOR ALL JOBS
	SKIPE	WD		;IF WD=0 GET NX CHAR
	CAIN	WD,L.WLD	;WILD CHARACTER?
	PUSHJ	P,GETCHR	;YES.
	 JFCL			;IGNORE THIS
; NOW, CHECK TO SEE IF WE FOUND ANY THING
	JUMPG	B,CPOPJ		;YES, RETURN****
	MOVEI	M,[ASCIZ/NO USER LOGGED IN UNDER [/]
	PUSHJ	P,MSG
	HLRZ	N,A		;N = PROJ. NO
	JUMPE	N,[MOVEI CH,"*"
		PUSHJ P,TYO
		JRST .+2]
	PUSHJ	P,OCTLRH
	MOVEI	CH,","
	PUSHJ	P,TYO		;TYPE COMMA
	HRRZ	N,A		;N = PROG. NO
	JUMPE	N,[MOVEI CH,"*"
		PUSHJ P,TYO
		JRST .+2]
	PUSHJ	P,OCTLRH
	MOVEI	M,[ASCIZ /]
/]
	PUSHJ	P,MSG
	POPJ	P,		;ALL DONE.

;CHECK FOR WILD CARD SPECIFICATION
CHKWLD:	SKIPN	N		;WAS A NUMBER INPUT?
	PUSHJ	P,GETCHR	;NO, RETRIEVE LAST CHARACTER
	CAIN	WD,L.WLD	;WAS A * TYPED?
	JUMPN	N,HELPM		;YES. IF = 0 THEN WILD CARD OK
	CAIE	WD,L.WLD	;IF A * WAS NOT TYPED
	JUMPE	N,HELPM		;A NUMBER MUST HAVE BEEN GIVEN
	POPJ	P,		;RETURN...

;*****************************************
;*  CHECK AND SET USER NAME SEARCH       *
;*****************************************

;CHKNAM -- CALL AS:
;	PUSHJ	P,CHKNAM
; WD HAS CURRENT CHARACTER FROM COMMAND LINE
; RETURNS NO-SKIPPING IF A NAME SEARCH IS FOUND AND DONE
; RETURNS SKIPPING IF NO NAME SEARCH IS FOUND
CHKNAM:	CAIE	WD,"("		;SPECIFY USER NAME ??
	JRST	CPOPJ1		;NO SUCH LUCK -- RETURN SKIPPING
	SETOM	NOHEAD		;DON'T LIST HEADING
	MOVE	N,[POINT 6,A]	;SET UP BYTEPOINTER
	SETZB	A,B		;ZEROUT USER NAME CELLS
	MOVEI	R,^D12		;MAX 12 CHARS
CHKIT:	PUSHJ	P,GETCHR	;GET CHAR
	JRST    CPOPJ1          ;IF BREAK, RETURN W/SKIP
	CAIE	WD,15
	CAIN	WD,12
	JRST	CHKIT		;IGNORE CR-LF
	CAIN	WD,")"
	JRST	CHKNFN		;DONE
	SOJL	R,CHKIT		;NO MORE THAN (R) CHARS ALLOWED
	JUMPE	WD,.+2
	SUBI	WD,40		;MAKE INTO SIX BIT
	IDPB	WD,N		;SAVE CHARACTER
	JRST	CHKIT		;AND GET NEXT CHAR
CHKNFN:	TLO	F,FL.USN	;SET USER NAME SEARCH FLAG.
	MOVEM	A,KY.USN	;SAVE USER NAME KEY.
	MOVEM	B,KY.USN+1	;SECOND HALF.

;FNDUSN -- CALL AS:
;	PUSHJ	P,FNDUSN
; THIS SUBROUTINE SEARCHES THE JOBS LIST FOR A USER NAME THAT
; IT FINDS IN THE A-REGISTER.
FNDUSN:	MOVE	D,A
	MOVE	J,B
	SKIPE	LUDOPN		;IF ZERO, LUD NOT OPEN, ERROR
	PUSHJ	P,LUDCHK	;CHECK AND SEE
	JRST	NONAME		;COPYRIGHT XDS-940
	MOVE	A,D
	MOVE	B,J		;GET NAMES BACK

CHKNME:	MOVE	J,JOBN		;SET UP J
	SETZ	C,		;# FOUND COUNTER
CHKNMX:	CAMN	B,@.USRN2	;SECOND HALF MATCH?
	CAME	A,@.USRN1	;FIRST HALF MATCH?
	JRST	CHKNMY		;NO USER NAME MATCH
; NOW, CHECK .PPN AND SEE IF THIS USER HAS ACCESS TO THIS
; PARTICULAR USER
	SKIPN	@.PPN		;USER NAME ACCESSABLE ?
	JRST	[MOVEI M,[ASCIZ /USER LOGGED IN BUT YOU CAN NOT ACCESS INFORMATION ON (/]
		JRST CHKNMZ]	;AND SAY YOU LOSE...
	SETOM	JOBTBL(J)	;OK-SET UP JOB TABLE
	AOS	C		;INC FOUND COUNTER
CHKNMY:	SOJGE	J,CHKNMX	;AND LOOP
; CHECK TO SEE IF A MATCH FOUND
	JUMPG	C,CPOPJ		;YES, RETURN......
	MOVEI	M,[ASCIZ /NO USER LOGGED IN UNDER (/]
CHKNMZ:	PUSHJ	P,MSG
	PUSHJ	P,SIXBP		;A HAS 1ST PART OF NAME
	SKIPE	A,B		;IF 0 DONT PRINT SECOND HALF
	PUSHJ	P,SIXBP
	MOVEI	M,[ASCIZ /)
/]
	PUSHJ	P,MSG
	POPJ	P,		;RETURN NOSKIPPING...

;HERE WHEN NAME NOT FOUND
NONAME:	MOVEI	M,[ASCIZ /User Name does not exist (/]
	PUSHJ	P,MSG
	PUSHJ	P,SIXBP
	SKIPE	A,B
	PUSHJ	P,SIXBP
	MOVEI	M,[ASCIZ /)
/]
	PUSHJ	P,MSG		;TYPE MESSAGE
        JRST    HACKQ           ;AND EXIT

;*****************************************
;*  CHECK AND SET UP TTY SCAN            *
;*****************************************

;CHKTTY -- CALL AS:
;	PUSHJ	P,CHKTTY
; WD HAS CURRENT CHARACTER FROM COMMAND LINE
; RETURNS NO SKIPPING IF A TTY SEARCH DONE
; RETURNS SKIPPING IF NO TTY SEARCH DONE
CHKTTY:	CAIE	WD,"#"		;IS THIS A TTY SEARCH REQUEST?
	JRST	CPOPJ1		;NO, RETURN SKIPPING...
	SETOM	NOHEAD		;DON'T LIST HEADING
	MOVEI	R,10		;RADIX 10--DECIMAL
	PUSHJ	P,GETCHR	;YES--GET WHICH TYPE
	JRST	HELPM		;END, FAILURE.
	CAIN	WD,"."		;SEE IF SELF
	JRST	[SETOM	A
		 GETLCH	A
		 JRST	GOTCT1]
	PUSHJ	P,GETRDX	;MUST BE JUST TTY NUMBER
	HRRZM	N,A		;STORE RESULT
	JRST	GOTJNK		;GO DO THE WORK
GOTCT1:	HRRZM	A,A		;STORE AWAY
	PUSHJ	P,GETCHR	;GET BREAK CHARACTER
	JFCL			;IGNORE END OF LINE
GOTJNK:	TLO	F,FL.TTN	;SET TTY # SEARCH FLAG.
	MOVEM	A,KY.TTN	;SAVE TTY # SEARCH KEY.

;FNDTTN -- CALL AS:
;	PUSHJ	P,FNDTTN
; THIS SUBROUTINE SEARCHES THE JOB LIST FOR THE ONE USING
; THE SPECIFIED TTY THAT IT FINDS IN THE A-REGISTER.
FNDTTN:	HRRZ	B,XJOBNO	;GETTAB LINE CONVERSION FUNCTION
	HRL	B,A		;GET LINE NUMBER
	GETTAB	B,
	JRST	NOSUTT		;NO SUCH TTY
	SETOM	JOBTBL(B)	;A RETURNS JOB NUMBER
	POPJ	P,		;RETURN...

; HERE WHEN NO SUCH LINE #
NOSUTT:	MOVEI	M,[ASCIZ /TTY/]
	PUSHJ	P,MSG
	PUSHJ	P,OCTLRH	;N HAS TTY NO. IN IT
	MOVEI	M,[ASCIZ / NOT ATTACHED TO A JOB
/]
	PUSHJ	P,MSG		;TELL USER HE DOESNT HAVE A JOB
	POPJ	P,		;AND RETURN


;HERE WHEN BAD CHARACTER IN "WD"
CHKONC:	OUTPUT	TTY,		;MAKE SURE TTY BUFFER EMPTY
	OUTSTR	[ASCIZ /
Not a legal character: /]
;DO PROPER CONVERSION SO CHARACTER IS PRINTABLE
	CAIE	WD,33
	CAIN	WD,175
	MOVEI	WD,"$"		;$ FOR ALT MODE
	CAIGE	WD,40		;SKIP IF NONCONTROL
	JRST	[OUTSTR [ASCIZ /^/]
		ADDI WD,100	;MAKE CONTROL
		JRST .+1]
	OUTCHR	WD
	PUSHJ	P,CRLF
	JRST	HELPM
	SUBTTL	SUBROUTINES -- SWITCH LOOKUP/EXECUTE ROUTINES

;SCNSWT
;SCANS FOR SWITCH AND EXECUTES SUBROUTINE FOR SWITCH
; W = FIRST 6 CHARS OF SWITCH
; WD = LOCATION OF BOTTOM OF FIRST PART OF TWO PART TABLE
; CH = NUMBER OF CELLS IN TABLE (OFFSET)
;
;WILL EFFECTIVELY DESTROY: M,BP,WD,CH
;WILL THROW UP IF SWITCH IS ILLEGAL
SCNSWT:	MOVEM	M,LASWT		;SAVE LAST SWITCH SCANNED FOR
	MOVNI	BP,1		;FULL MASK

SWSC1:	LSH	M,6		;UP A CHARACTER
	LSH	BP,-6		;DOWN THE MASK
	JUMPN	M,SWSC1
	SETOM	NUMAT		;NO MATCH YET
SWSC3:	MOVE	M,(WD)		;GET SWITCH NAME
	CAMN	M,LASWT		;EXACT MATCH ?
	JRST	SWSC4		;YES--GOOD FOR YOU !
	ANDCM	M,BP		;MASK THIS COMMAND
	CAME	M,LASWT		;MATCH NOW??
	JRST	SWSC2		;NO-CIRCULATE THROUGH
	AOS	NUMAT		;RECORD PARTIAL MATCH
	MOVEM	WD,SVIND	;SAVE MATCH INDEX
SWSC2:	AOS	WD		;INCREMENT PLACE
	SKIPE	@WD		;END OF TABLE ?
	JRST	SWSC3
	SKIPE	NUMAT		;JUST ONE MATCH ?
	JRST	SWSC6		;NO--TELL HIM WHERE TO GO
	MOVE	WD,SVIND	;GET LAST MATCH INDEX
SWSC4:	ADD	CH,WD		;GET LOCATION TO EXECUTE
	XCT	0(CH)		;EXECUTE ROUTINE
	POPJ	P,

SWSC5:	OUTPUT	TTY,		;CLEAN UP TTY
	OUTSTR	[ASCIZ /Invalid Command: /]
SWSC7:	MOVE	A,LASWT
	PUSHJ	P,SIXBP
	PUSHJ	P,CRLF
	JRST	HELPM

SWSC6:	SKIPG	NUMAT		;> 0 IF MORE THAN ONE MATCH
	JRST	SWSC5		;< 0 IF NO MATCH
	OUTPUT	TTY,		;CLEAN UP TTY
	OUTSTR	[ASCIZ /Ambiguous Command: /]
	JRST	SWSC7

;  CONSTANTS

XJOBNO:	XWD	0,-26		;GET JOB NO. GIVEN TTY NO.

	END
  