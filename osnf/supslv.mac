TITLE  SUPSLV
SUBTTL  Last Update:  2.12.82  kmd

REL= 4		;RELEASE 4
VER= 7
VERLOC=137
LOC VERLOC
XWD REL,VER
RELOC

        AC=0
        A=1
        B=2
        C=3
        D=4
        E=5
        F=6
        G=7
        CH=10
        WD=11
        TEMP=12
        TYMNET=13
        INDEX=14
        BPTR=15
        FLAG=16
        P=17

        DCH==1

ARRAY   PDL[50]

START:  RESET
	SETZM	QAFLG#
        MOVE    P,[IOWD 50,PDL]
        MOVEI   TYMNET,140
        MOVEI   AC,310
        SETMOD  AC,
        TTCALL  15,[160]
        TTCALL  15,[160]

SEND:   TTCALL  15,[141]
        TTCALL  15,[142]
        TTCALL  15,[143]
        TTCALL  15,[144]

RECEV:  TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,141
        JRST    ERRCOD
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,142
        JRST    ERRCOD
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,143
        JRST    ERRCOD
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,144
        JRST    ERRCOD
        TTCALL  15,[151]

;
;	GET CHANNEL AND FILE FOR SPOOL COUNT
;
	MOVEI	B,3		;MAX. TRIES IN CASE OF ERROR
SPLFIL: INIT	DCH,10		;GET A CHANNEL FOR THE FILE
	SIXBIT/DSK/
	XWD	IBUF
	JRST	SPLFIL
	SETZ	CH,		;IN CASE FILE NOT THERE
	MOVE	A,[1,,133677]   ;OWNER OF SPLCNT IS SPOOL
	MOVEM	A,SPLDEF+3	;STORE FOR LOOKUP
	LOOKUP	DCH,SPLDEF	;GO GET FILE
	JRST	ZILCH		;SEND MASTER THAT ZERO
	IN	DCH,		;READ SPL. CNT. BLK
	JRST	GETCNT		;GO GET SPOOL COUNT
;
;	CANT READ FILE, TRY 3 TIMES THENN GIVE UP
;
	RELEAS	DCH,		;RELEASE THE CHANNEL
	SOSLE	,B		;SKIP IF TRIED 3 TIMES
	JRST	SPLFIL		;TRY TIL LIMIT IS UP
	PUSHJ	P,ERROR		;TELL MASTER WE HAVE A ERROR
	TTCALL	15,[^D20]	;ERROR READING SPOOL CNT FILE
	TTCALL	15,[^D20]	;SAME
	EXIT			;LEAVE THE PROGRAM
;
;	GET THE SPOOL COUNT AND SEND TO MASTER
;
GETCNT: ILDB	CH,IBUF+1	;GET SPOOL COUNT
	CLOSE	DCH,		;CLOSE THE FILE
ZILCH:  RELEAS	DCH,		;RELEASE THE CHANNEL
;
;	ASK MASTER IF HE READY TO RECEIVE THE COUNT
;
SPLQRY: TTCALL	15,[153]	;YOU READY FOR SPL. CNT. ?
	TTCALL	0,A		;WAIT FOR REPLY
	ADDI	A,40		;CONVERT IT BACK
	CAIE	A,153		;SEE IF HE ANSWERS YES
	JRST	SPLQRY		;TRY TIL HE ANSWERS RIGHT
;
;	SEND MASTER THE COUNT, THEN GO DO THE BATCH REQ.
;
	TTCALL	15,CH		;SEND MASTER THE COUNT

OPENFI: INIT    DCH,0
        SIXBIT  /DSK/
        XWD     0,IBUF
        JRST    OPENFI
;
;	GET ANY SPOOL REQUEST WHICH MUST GO TO OPER
DONEWF: SETOM	NOTHING#		;SHOWS IF EMPTY BOTH FILE
;
	MOVEI	AC,4		;TIMES TO TRY ENTER
	DMOVE	B,SPOCLR	;DELETE OLD FILE
	DMOVE	D,SPOCLR+2
	LOOKUP	DCH,B		;GET OLD FILE IF EXISTS
	SKIPA		;SKIP IF CLR FILE NOT THERE
	JRST	REQSEN		;IF THERE, SEND CLEAR FILE
	SETZM	NOTHING		;SHOWS WORKING ON NEW FILE
	DMOVE	B,SPOTMP	;GET CURRENT FILE
	DMOVE	D,SPOTMP+2	;SAME
	LOOKUP	DCH,B		;GET FILE
	JRST	DOBATCH		;IF NOT THERE, GO DO BATCH
	HLRE	A,E		;GET FILE LENGTH
	MOVNS	,A		;MAKE POSITIVE
	JUMPE	A,DOBATCH	;IF ZERO, DONT FOOL WITH IT
SPOAGN: MOVE	C,SPOTMP+1	;GET EXT.
	MOVE	E,SPOTMP+3	;GET PPN
	ENTER	DCH,B		;GET IT
	JRST	[HRRZ	A,B	;GER ERROR CODE
		 CAIE	A,3
		 JRST	SPOERR
		 MOVEI	A,4
		 SLEEP	A,
		 SOJG	AC,SPOAGN
		 JRST	SPOERR]
	DMOVE	B,SPOCLR
	DMOVE	D,SPOCLR+2
	RENAME	DCH,SPOCLR	;RENAME FILE TO TMP AREA
	JRST	SPOERR
	CLOSE	DCH,		;CLOSE CLEAR FILE FOR NOW
	ENTER	DCH,SPOTMP	;CREATE NEW TMP FILE, 0 LENGTH
	JRST	SPOERR
	RELEAS	DCH,		;CREATED IT
	INIT	DCH,0
	SIXBIT/DSK/
	XWD IBUF
	JRST	.-3
	LOOKUP	DCH,B		;GET TEMP FILE
	JRST	SPOERR	
;
;	MOVE FILE ACROSS
;
REQSEN:	MOVEI	AC,166		;HERE THEY COME
	PUSHJ	P,SANDR		;SEND THEM OFF
SPOCHR: SOSGE	IBUF+2		;SEE IF HAVE SOMETHING
	JRST	SPOBLK		;GO GET SOME MORE
	ILDB	CH,IBUF+1	;GET A CHAR
	SKIPE	,CH		;SKIP NULLS
	CAIN	CH,12		;SKIP LF
	JRST	SPOCHR		;GET NEXT CHAR.
	CAIN	CH,15		;SEE IF CR
	MOVEI	CH,155+40
	SUBI	CH,40
	PUSHJ	P,SENCHR	;SEND IT OFF
	JRST	SPOCHR		;GET NEXT CHAR.
SPOBLK: IN	DCH,		;GET NEXT BLK
	JRST	SPOCHR
	STATZ	DCH,340000
	JRST	SPOERR
	MOVEI	AC,167		;SPOOL REQ. ALL DONE
	PUSHJ	P,SANDR		;SEND IT OFF
;
;	DELETE CLEAR FILE NOW WE ALL DONE WITH IT
;
	SETZB	B,C
	MOVE	E,SPOCLR+3
	RENAME	DCH,B
	JRST	SPOERR
	CLOSE	DCH,
	SKIPE	NOTHING		;SKIP IF ALL DONE
	JRST	DONEWF		;GO EMPTY NEW FILE
;
;	MAKE SURE PPRCLR.DAT DOESNT EXIST
;
DOBATCH:DMOVE	B,PPRCLR	;GET FILE AND EXT. NAMES
	DMOVE	D,PPRCLR+2	;GET REST OF DATA
	LOOKUP	DCH,B		;GET FILE
	JFCL
	SETZB	B,C		;FOR DELETE
	MOVE	E,PPRCLR+3	;GET PPPN
	RENAME	DCH,B		;DELETE OLD FILE
	JFCL
;
        MOVE    E,PPRTMP+1
        MOVE    F,PPRTMP+3
        LOOKUP  DCH,PPRTMP
        JRST    ERR11
        MOVEM   E,PPRTMP+1
        MOVEM   F,PPRTMP+3
        ENTER   DCH,PPRTMP
        JRST    ERR1
        MOVEM   E,PPRTMP+1
        MOVEM   F,PPRTMP+3
        INBUF   DCH,1
        INPUT   DCH,
        STATZ   DCH,340000
        JRST    ERR12
        MOVE    AC,IBUF+2
        CAIE    AC,^D40
        JRST    GETREQ

EMPTY:  CLOSE   DCH,
        RELEASE DCH,
        TTCALL  15,[146]
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,146
        JRST    EMPTY+2
        TTCALL  15,[145]
        EXIT

ERRCOD: SUBI    CH,40
        CAIE    CH,140
        JRST    .+3
        TTCALL  15,[140]
        JRST    SEND
        TTCALL  15,[140]
        TTCALL  0,CH
        CAIE    CH,140
        JRST    .-2
        JRST    SEND

GETREQ: RENAME  DCH,PPRCLR
        JRST    ERR13
        MOVEM   E,PPRCLR+1
        MOVEM   F,PPRCLR+3
        CLOSE   DCH,
        RELEASE DCH,
        INIT    DCH,0
        SIXBIT  /DSK/
        XWD     OBUF,0
        JRST    .-3
        ENTER   DCH,PPRTMP
        JRST    ERR14
        MOVEM   E,PPRTMP+1
        MOVEM   F,PPRTMP+3
        OUTBUF  DCH,1
        OUTPUT  DCH,
        MOVEI   INDEX,^D19
        MOVE    BPTR,[POINT 7,CLRMSG]
        ILDB    CH,BPTR
        IDPB    CH,OBUF+1
        SOJG    INDEX,.-2
        PUSHJ   P,GETDAT
        MOVE    BPTR,[POINT 7,EOFCHR]
        PUSHJ   P,PUTSTR
        OUTPUT  DCH,
        STATZ   DCH,340000
        JRST    ERR15
        CLOSE   DCH,
        RELEASE DCH,
        INIT    DCH,0
        SIXBIT  /DSK/
        XWD     0,IBUF
        JRST    .-3
        LOOKUP  DCH,PPRCLR
        JRST    ERR16
        MOVEM   E,PPRCLR+1
        MOVEM   F,PPRCLR+3

SENREQ: TTCALL  15,[147]
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,147
        JRST    SENREQ
        INBUF   DCH,1
        INPUT   DCH,
        STATZ   DCH,340000
        JRST    ERR17
        PUSHJ   P,GETCHR
        CAIE    CH,"D"
        JRST    .-2
        PUSHJ   P,GETCHR
        CAIN    CH,15
        JRST    .+4
        SUBI    CH,40
        PUSHJ   P,SENCHR
        JRST    .-5
        PUSHJ   P,PUTCR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,REQMSG]
        PUSHJ   P,PUTCHR

AGAIN:  SETOM	QAFLG
	PUSHJ	P,COPCHR
	SETZM	QAFLG
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,COMMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,DATMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,ENTMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        SOSGE   IBUF+2
        PUSHJ   P,NXTBLK
        ILDB    CH,IBUF+1
        SUBI    CH,60
        MOVE    TEMP,CH
        JUMPE   TEMP,HERE
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,CUSMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,USRMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR

HERE:   PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,PRJMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,TELMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,WHOMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        CAIE    TEMP,2
        JRST    HERE1
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,RECMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR

HERE1:  PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,GANMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,DISMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,DESMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,PUTCR
        PUSHJ   P,PUTCR
        PUSHJ   P,COPCHR
        MOVEI   INDEX,4
        PUSHJ   P,PUTCR
        SOJG    INDEX,.-1
        MOVE    BPTR,[POINT 7,DELMSG]
        PUSHJ   P,PUTCHR
        PUSHJ   P,PUTCR
        PUSHJ   P,PUTCR
        PUSHJ   P,COPCHR
        PUSHJ   P,PUTCR
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,MSG]
        PUSHJ   P,PUTCHR
        MOVEI   INDEX,5
        PUSHJ   P,PUTCR
        SOJG    INDEX,.-1
        PUSHJ   P,GETCHR
        CAIE    CH,20
        JRST    ERR18
        PUSHJ   P,GETCHR
        CAIE    CH,32
        JRST    SETUP
        TTCALL  15,[153]
        TTCALL  15,[153]
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,153
        JRST    .-5
        SETZ    AC,
        RENAME  DCH,AC
        JRST    ERR19
        RELEASE DCH,
        TTCALL  15,[145]
        EXIT

SETUP:  MOVE    WD,CH
        TTCALL  15,[156]
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,156
        JRST    SETUP+1
        PUSHJ   P,PUTCR
        MOVE    BPTR,[POINT 7,REQMSG]
        PUSHJ   P,PUTCHR
        SUBI    WD,40
        TTCALL  15,WD
        JRST    AGAIN

GETDAT: SETZB   A,B
        SETZB   C,CH
        CALLI   A,14
        IDIVI   A,^D31
        AOJ     B,
        PUSHJ   P,DECPRT
        MOVE    B,A
        SETZ    A,
        DIVI    A,^D12
        IMULI   B,2
        MOVE    WD,MONTH(B)
        MOVE    BPTR,[POINT 7,WD]
        PUSHJ   P,PUTSTR
        MOVEI   B,^D64(A)
        PUSHJ   P,DECPRT
        MOVEI   CH,40
        IDPB    CH,OBUF+1
        IDPB    CH,OBUF+1
        CALLI   A,22
        IDIVI   A,^D3600
        IDIVI   A,^D60
        MOVE    AC,B
        MOVE    B,A
        PUSHJ   P,DECPRT
        MOVEI   CH,":"
        IDPB    CH,OBUF+1
        MOVE    B,AC
        PUSHJ   P,DECPRT
        POPJ    P,

DECPRT: IDIVI   B,^D10
        ADDI    B,60
        IDPB    B,OBUF+1
        ADDI    C,60
        IDPB    C,OBUF+1
        POPJ    P,

PUTSTR: MOVEI   INDEX,5
        ILDB    CH,BPTR
        IDPB    CH,OBUF+1
        SOJG    INDEX,.-2
        POPJ    P,

GETCHR: SOSGE   IBUF+2
        PUSHJ   P,NXTBLK
        ILDB    CH,IBUF+1
        POPJ    P,

COPCHR: SOSGE   IBUF+2
        PUSHJ   P,NXTBLK
        ILDB    CH,IBUF+1
        CAIN    CH,30
        POPJ    P,
        CAIN    CH,15
        JRST    CR
        CAIN    CH,12
        JRST    COPCHR
        SUBI    CH,40
        PUSHJ   P,SENCHR
        JRST    COPCHR

CR:	SKIPN	QAFLG
	JRST	CRCONT
	MOVE	BPTR,[POINT 7,QAMSG]
	PUSHJ	P,PUTCHR
	SETZM	QAFLG
CRCONT: PUSHJ	P,PUTCR
        JRST    COPCHR

NXTBLK: INPUT   DCH,
        STATZ   DCH,340000
        JRST    ERR17
        SOS     IBUF+2
        POPJ    P,

PUTCHR: ILDB    CH,BPTR
        CAIN    CH,"$"
        POPJ    P,
        CAIN    CH,15
        JRST    CR1
        CAIN    CH,12
        JRST    PUTCHR
        SUBI    CH,40
        PUSHJ   P,SENCHR
        JRST    PUTCHR

CR1:    PUSHJ   P,PUTCR
        JRST    PUTCHR

PUTCR:  MOVEI   CH,155
        PUSHJ   P,SENCHR
        POPJ    P,

SENCHR: TTCALL  15,CH
        SOJE    TYMNET,.+2
        POPJ    P,
        TTCALL  15,[170]
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,170
        JRST    .-4
        MOVEI   TYMNET,140
        POPJ    P,

SANDR:	TTCALL	15,AC		;TELL WHAT WE TO DO
	TTCALL	0,CH		;WAIT FOR ANSWER
	ADDI	CH,40
	CAME	AC,CH		;SEE IF READY
	JRST	SANDR		;TRY AGAIN
	POPJ	P,

SPOERR: TTCALL	15,[165]	;ALL PURPOSE ERROR
	JRST	DOBATCH		;GO DO BATCH REQ.

ERR1:   PUSHJ   P,ERROR
        TTCALL  15,[1]
        TTCALL  15,[1]
        EXIT

ERR11:  PUSHJ   P,ERROR
        TTCALL  15,[^D11]
        TTCALL  15,[^D11]
        EXIT

ERR12:  PUSHJ   P,ERROR
        TTCALL  15,[^D12]
        TTCALL  15,[^D12]
        EXIT

ERR13:  PUSHJ   P,ERROR
        TTCALL  15,[^D13]
        TTCALL  15,[^D13]
        EXIT

ERR14:  PUSHJ   P,ERROR
        TTCALL  15,[^D14]
        TTCALL  15,[^D14]
        EXIT

ERR15:  PUSHJ   P,ERROR
        TTCALL  15,[^D15]
        TTCALL  15,[^D15]
        EXIT

ERR16:  PUSHJ   P,ERROR
        TTCALL  15,[^D16]
        TTCALL  15,[^D16]
        EXIT

ERR17:  PUSHJ   P,ERROR
        TTCALL  15,[^D17]
        TTCALL  15,[^D17]
        EXIT

ERR18:  PUSHJ   P,ERROR
        TTCALL  15,[^D18]
        TTCALL  15,[^D18]
        EXIT

ERR19:  PUSHJ   P,ERROR
        TTCALL  15,[^D19]
        TTCALL  15,[^D19]
        EXIT

ERROR:  TTCALL  15,[150]
        TTCALL  0,CH
        ADDI    CH,40
        CAIE    CH,150
        JRST    ERROR
        CLOSE   DCH,
        RELEASE DCH,
        POPJ    P,

CLRMSG: ASCIZ   /FILE LAST CLEARED  /

; Job-types 6 and 8 removed as obsolete - ITSR #900700 - 2.12.82 kmd

MSG:    ASCIZ/
1.------------PAGES-----PARTS TO LISTING-----LISTINGS DECOLLATED

2.------------CARDS TO DISC    3.------------DISC TO CARDS

4.------------FILES TAPE TO DISC

5.------------FILES DISC TO TAPE ------------TAPE CHARGE

7.------------TAPE CONVERSION

--------------COMPLETED BY     --------------DATE

--------------POSTAGE          --------------ENTERED INTO ACCT.
$/

REQMSG: ASCIZ   /REQUEST NUMBER          $/
QAMSG:	ASCIZ/     CONTROL # ------  QA BY:-------$/
COMMSG: ASCIZ   /COMPUTER NUMBER         $/
DATMSG: ASCIZ   /DATE AND TIME           $/
ENTMSG: ASCIZ   /ENTERED FROM            $/
CUSMSG: ASCIZ   /COMPANY NAME            $/
USRMSG: ASCIZ   /USER NAME               $/
PRJMSG: ASCIZ   /PROJECT CODE            $/
TELMSG: ASCIZ   /TELEPHONE NO. (EXT.)    $/
WHOMSG: ASCIZ   /REQUESTED BY            $/
RECMSG: ASCIZ   /RECEIVED BY             $/
GANMSG: ASCIZ   /GLOBAL ACCT. NO.        $/
DISMSG: ASCIZ   /DISTRICT NO.            $/
DESMSG: ASCIZ   /DESCRIPTION ON WORK$/
DELMSG: ASCIZ   /DELIVERY INSTRUCTIONS$/

MONTH:  ASCIZ /-JAN-/
        ASCIZ /-FEB-/
        ASCIZ /-MAR-/
        ASCIZ /-APR-/
        ASCIZ /-MAY-/
        ASCIZ /-JUN-/
        ASCIZ /-JUL-/
        ASCIZ /-AUG-/
        ASCIZ /-SEP-/
        ASCIZ /-OCT-/
        ASCIZ /-NOV-/
        ASCIZ /-DEC-/

SPLDEF: SIXBIT/SPLCNT/
	0
	0
	1,,133677

SPOTMP: SIXBIT/SSPOOL/
	SIXBIT/DAT/
	0
	1,,2

SPOCLR: SIXBIT/SSPOOL/
	SIXBIT/BAK/
	0
	1,,2

PPRTMP: SIXBIT  /PPRTMP/
        SIXBIT  /DAT/
        0
	1,,2

PPRCLR: SIXBIT  /PPRCLR/
        SIXBIT  /DAT/
        0
	1,,2

EOFCHR: BYTE    (7)15,12,32,15,12

OBUF:   BLOCK   3
IBUF:   BLOCK   3
        VAR
        END     START
   