
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15	 Page 1
IOCSU.SIM	 Created: 5-Oct-1976 9:51

     1	DEF ALT.NAME(A,B) AS B
     2	DEF ALT.ENTRY(A,B) AS \ENTRYNAME B
     3	!  IOCSU -- VERSION 16.5        5-19-76
     4	
     5	!  IOCS DEFS OF INTEREST TO USER
     6	
     7	!  FILE DESCRIPTORS PASSED TO %OPEN
     8	
     9	!MAINTAIN ORDER OF FILE TYPES (SEE %OPEN1)
    10	
    11	DEF INPUT AS 0
    12	DEF UPDATE AS 1
    13	DEF OUTPUT AS 2
    14	DEF OUTMSG AS 3
    15	
    16	!FILE TYPE MODIFIERS
    17	
    18	DEF NEW AS OCT 100
    19	DEF OLD AS OCT 200
    20	
    21	!FILE MODES
    22	
    23	DEF SEQUEN AS 0
    24	DEF DIRECT AS OCT 10
    25	
    26	!FILE ORGANIZATIONS
    27	
    28	DEF WORD AS 0
    29	DEF CHARACTER AS OCT 20
    30	DEF PACK AS OCT 40
    31	
    32	!  FILE NUMBERS  (FNMIN IS MIN CHANNEL WHICH WILL BE USED)
    33	
    34	DEF FNMIN AS 1            !MIN AND MAX FILE NUMBERS
    35	DEF FNMAX AS 15           !AVAILABLE, EXCLUDING TEL
    36	DEF TEL AS (FNMIN-1)        !FILE NO. INDICATING TERMINAL 
    37	
    38	!  ERROR NUMBERS (ERRNUM VALUES)
    39	
    40	DEF TMFERR AS 1     !TOO MANY FILES OPEN (OPEN)
    41	DEF FMDERR AS 2     !BAD FILE MODE OR TYPE FOR ATTEMPTED OPERATION
    42	                    !(OPEN SEQUEN UPDATE, SETCP OR ERASE SEQUEN,
    43	                    !WRITE OR ERASE INPUT, READ SEQUEN OUTPUT)
    44	DEF IFDERR AS 3     !ILLEGAL FILE IDENTIFIER (SETFID, OPEN, DELETE, RENAME)
    45	DEF CNFERR AS 4     !NEW/OLD FILE MESSAGE NOT CONFIRMED (OPEN OUTMSG)
    46	                    !OR TYPE MODIFIER CONFLICT - FILE NOT NEW/OLD (OPEN OUTPUT OR UPDATE)
    47	
    48	!ORDER OF FOLLOWING 5 NOS. SHALL BE MAINTAINED. (ALL BUT LAST MAY
    49	!OCCUR DURING OPEN, DELETE, OR RENAME)
    50	
    51	DEF FNFERR AS 5     !FILE NOT FOUND
    52	DEF IUSERR AS 6     !INVALID USER NAME (BAD PPN)
    53	DEF PRTERR AS 7     !PROTECTION VIOLATION ATTEMPT
    54	DEF FBSERR AS 8     !FILE BUSY

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:16	 Page 2
IOCSU.SIM	 Created: 5-Oct-1976 9:51

    55	DEF AEFERR AS 9     !NEW NAME BELONGS TO ALREADY EXISTING FILE  (RENAME)
    56	
    57	DEF EOFERR AS 10    !END OF FILE (R, RB, GETLINE)
    58	DEF LNGERR AS 11    !LINE TOO LONG (GETLINE FROM FILE)
    59	DEF TELERR AS 12    !ILLEGAL OPERATION ON TEL (OPEN, DELETE, RENAME,
    60	                    !CP, SIZE)
    61	DEF ARGERR AS 13    !BAD ARGUMENT VALUE - SUCH AS:
    62	                    !NEGATIVE CURSOR POSITION (SETCP, ERASE),
    63	                    !NEG. COUNT (RB, WB)
    64	DEF CORERR AS 14    !OUT OF CORE (OPEN, BLOCK, RELEASE)
    65	DEF DEVERR AS 15    !BAD MODE FOR DEVICE OR DEVICE DOES NOT EXIST (OPEN)
    66	                    !OR DEVICE BUFFER SIZE NOT 131.
    67	
    68	FIND ALT.NAME("$STS",STS)
    69	FIND ALT.NAME("$CFN",CFN)
    70	FIND ALT.NAME("$SETCF",%SETCFN)
    71	FIND ALT.NAME("$EXU",%EXU)
    72	FIND ALT.NAME("$EXUF",%EXUF)
    73	FIND ALT.NAME("$IOCS",%IOCS)
    74	FIND ALT.NAME("$OPEN",%OPEN)
    75	FIND ALT.NAME("$SETFI",%SETFID)
    76	FIND ALT.NAME("$TELCH",%TELCHK)
    77	FIND ALT.NAME("$WFID",%WFID)
    78	FIND ALT.NAME("$CLOSE",%CLOSE)
    79	FIND ALT.NAME("$CANCE",%CANCEL)
    80	FIND ALT.NAME("$BUFDU",%BUF.DUMP)
    81	FIND ALT.NAME("$OPENP",%OPENP)
    82	FIND ALT.NAME("$SETFP",%SETFIP)
    83	FIND ALT.NAME("$SETMO",%SETMODE)
    84	FIND ALT.NAME("$CLALL",%CLOSE.ALL)
    85	FIND ALT.NAME("$CAALL",%CANC.ALL)
    86	FIND ALT.NAME("$PLNCH",%PLNCHK)
    87	FIND ALT.NAME("$PLNW",%PLNW)
    88	FIND ALT.NAME("$SETTA",%SET.TAB)
    89	FIND ALT.NAME("$SETTE",%SET.TERM)
    90	FIND ALT.NAME("$SETPR",%SET.PRMPT)
    91	FIND ALT.NAME("$TABOF",%TAB.OFF)
    92	FIND ALT.NAME("$R",%R)
    93	FIND ALT.NAME("$GETLI",%GETLINE)
    94	FIND ALT.NAME("$W",%W)
    95	FIND ALT.NAME("$WX",%WX)
    96	FIND ALT.NAME("$ERASE",%ERASE)
    97	FIND ALT.NAME("$SETCP",%SETCP)
    98	FIND ALT.NAME("$CP",%CP)
    99	FIND ALT.NAME("$SIZE",%SIZE)
   100	FIND ALT.NAME("$WB",%WB)
   101	FIND ALT.NAME("$RB",%RB)
   102	FIND ALT.NAME("$GETMEM",%GETMEM)
   103	FIND ALT.NAME("$RLSMEM",%RLSMEM)
   104	FIND ALT.NAME("$BLOCK",%BLOCK)
   105	FIND ALT.NAME("$RELEA",%RELEASE)
   106	FIND ALT.NAME("$DELET",%DELETE)
   107	FIND ALT.NAME("$RENAM",%RENAME)
   108	FIND ALT.NAME("$CLIBU",%CLIBUF)

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:16	 Page 3
IOCSU.SIM	 Created: 5-Oct-1976 9:51

   109	FIND ALT.NAME("$CLOBU",%CLOBUF)
   110	FIND ALT.NAME("$TTYLE",%TTYLEN)
   111	FIND ALT.NAME("$GET",%GET)
   112	FIND ALT.NAME("$PUT",%PUT)
   113	FIND ALT.NAME("$PUTX",%PUTX)
   114	FIND ALT.NAME("$PUTC",%PUTC)
   115	FIND ALT.NAME("$PRINT",%PRINT)
   116	FIND ALT.NAME("$PRINC",%PRINTC)
   117	FIND ALT.NAME("$MSG",%MSG)
   118	FIND ALT.NAME("$SETRW",%SETRWE)
   119	FIND ALT.NAME("$FPMSG",%F.P.MSG)
   120	FIND ALT.NAME("$FPRNT",%F.P.PRINT)
   121	FIND ALT.NAME("$NOESC",%NOESC)
   122	FIND ALT.NAME("$YSESC",%YESESC)
   123	FIND ALT.NAME("$OFFAL",%OFFALT)
   124	FIND ALT.NAME("$ONALT",%ONALT)
   125	FIND ALT.NAME("$ONALC",%ONALT.C)
   126	FIND ALT.NAME("$ALTLO",ALTLOC)
   127	FIND ALT.NAME("$ERRNU",ERRNUM)
   128	
   129	DEF TO.TERM   AS 1
   130	DEF TO.TOUT   AS 2
   131	DEF TO.BOTH   AS 3
   132	DEF TO.NEITHER AS 4
   133	
   134	FIND ALT.NAME("$XTOUT",%EX.TOUT)
   135	FIND ALT.NAME("$EXCFN",%EX.CFN)
   136	FIND ALT.NAME("$TDEST",%TT.DEST)
   137	FIND ALT.NAME("$CECHO",%CF.ECHO)
   138	FIND ALT.NAME("$TECHO",%TT.ECHO)
   139	FIND ALT.NAME("$RSBRK",%RS.BRK)
   140	FIND ALT.NAME("$RSALT",%RS.ALT)
   141	FIND ALT.NAME("$DDOVR",%DDT.OVR)
   142	
   143	FIND ALT.NAME("$FIDP",FIDP())
   144	DEF LOCWPF AS 5
   145	DEF MAXARG AS 27
   146	DEF MINARG AS 5
   147	DEF WPF AS (LOCWPF+1+MINARG)
   148	DEF MAXWPF AS (LOCWPF+1+MAXARG)
   149	! EXTENDED ARGUMENT BLOCK:
   150	DEF ARGCNT(TBL) AS TBL(LOCWPF)
   151	DEF PPNARG(TBL) AS TBL(LOCWPF+1)
   152	DEF NAMARG(TBL) AS TBL(LOCWPF+2)
   153	DEF EXTARG(TBL) AS TBL(LOCWPF+3)
   154	DEF PRVARG(TBL) AS TBL(LOCWPF+4)
   155	DEF FILSIZ(TBL) AS TBL(LOCWPF+5)
   156	DEF EXTQ(TBL) AS TBL(0)
   157	DEF USRNAM(TBL) AS TBL(1)
   158	DEF DEVNAM(TBL) AS TBL(3)
   159	
   160	!  GETLINE 
   161	
   162	DEF LLEN AS 256                !MAX. LINE LENGTH

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:17	 Page 4
IOCSU.SIM	 Created: 5-Oct-1976 9:51

   163	DEF GLBCMX AS (LLEN+1)         !MAX. CHAR CAPACITY
   164	DEF CPW AS CHARS.PER.WORD
   165	DEF GLBSZ AS ((GLBCMX+CPW-1)/CPW)  !SIZE IN WORDS
   166	FIND ALT.NAME("$FREE",FREE(0:GLBSZ-1))   !GETLINE INTERNAL BUFFER (AVAILABLE
   167	                                         !BETWEEN GETLINE CALLS)
   168	FIND ALT.NAME("$IMAGE",IMAGE(0:GLBSZ-1)) !GETLINE IMAGE LINE BUFFER
   169	FIND ALT.NAME("$GLCNT",GLCNT)            !GETLINE CHAR COUNT
   170	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:17	 Page 5
IOCSU.SIM	 Created: 5-Oct-1976 9:51

   170	
   171	BASE 0
   172	
   173	!PROCEDURES
   174	
   175	GLOBAL %NONAME
   176	
   177	FIND %INITTTY, %QUERY, %GETNUM, %GETOCT, %GETTOKEN, %LISTABLE
   178	FIND %CHR.OUT, %OCTWD.OUT, %OCTOUT, %OUT, %NUMOUT, %SIXOUT, %MAKE.SIXBIT
   179	FIND %CHOOSE, %DATOUT, %SHORT.OUT, %SPOUT
   180	FIND %HASH, %GETULC
   181	
   182	LOCAL %INITNONAME, %HEADING
   183	LOCAL %OPEN.AND.LUD.LOOK, %LUD.LOOK, %LUD.OVERFLOW, %LUD.SEQ, %LUD.CHK
   184	LOCAL %OPEN.AND.DUL.LOOK, %DUL.LOOK, %DUL.OVERFLOW, %DUL.SEQ, %DUL.CHK
   185	LOCAL %DO.LIST, %DO.CHANGE, %DO.NAMES
   186	LOCAL %LIST.RECORD, %LIST.EACH, %LIST.ENTRY, %LIST.ALL.LISTS
   187	LOCAL %GET.CHANGE, %CHANGE.IT, %MAKE.ROOM, %KNOW.ACCT
   188	LOCAL %CALL.UUO, %ERROR, %CHK.IO.ERR
   189	
   190	DEF SIZE.BLK AS 128
   191	
   192	!ID'S
   193	FIND TOKEN(0)
   194	
   195	GLOBAL NUMBER, NAME.HASH, LOC.HASH, P, CH.OUT
   196	GLOBAL USER.NAME(2), LISTFLG
   197	
   198	GLOBAL GETCMD:, LUD.ERR:, CHK.ERR:, CK.DUL:
   199	
   200	LOCAL THIS.PPN, THIS.GAN, UUN, THIS.DIST, THIS.A.S, THIS.TYM, THIS.NAME(2)
   201	LOCAL GOD, OPER, C.SER.FLG, CAN.LOOK, THIS.AREA
   202	LOCAL DULFLG, SAVCP, BADBLK, BADFIL
   203	LOCAL OLDBLK, TYPE, GAN, DIST, SITE, K.ALL
   204	LOCAL CH.LUD, CH.DUL, IO.ADR, CMD, LIST
   205	LOCAL SEQ.FLG
   206	LOCAL D.INDEX, D.BLK(SIZE.BLK), D.BLKNO
   207	LOCAL L.INDEX, L.BLK(SIZE.BLK), L.BLKNO
   208	LOCAL LUD.SIZE, TEMP, TEMP1, CH.NUM, TEMP.INDEX, BUD.INDEX
   209	LOCAL A.S.SAV, TYM.SAV, SUP.SAV, I.BIT.SAV, I.FILE.SAV, I.USER.SAV(2)
   210	LOCAL ZONE.SAV, DAY.L.SAV, MODE.SAV
   211	LOCAL Q.IN.SAV, Q.OUT.SAV, CORE.SAV, GFD.SAV, PC.SAV
   212	LOCAL ATTLOG.SAV, MLJOB.SAV, NOLOG.SAV
   213	LOCAL AUTOLOG.SAV, STOPLOG.SAV
   214	
   215	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:18	 Page 6
NONAME.SIM	 Created: 6-Nov-1987 14:09

   215	
   216	!COMMANDS
   217	DEF CMD.LST    AS 1	! LIST
   218	DEF CMD.CHANGE AS 2	! CHANGE
   219	DEF CMD.NAMES  AS 3	! NAMES
   220	DEF CMD.HELP   AS 4	! HELP
   221	DEF CMD.INSTR  AS 5	! INSTRUCTIONS
   222	DEF CMD.ENDIT  AS 6	! QUIT
   223	DEF CMD.VERIFY AS 7	! VERIFY
   224	DEF CMD.USER   AS 8	! USER
   225	
   226	DEF N.CMDS     AS 8	!NUMBER OF PRIMARY COMMANDS
   227	DEF U.CMDS     AS 6	!NUMBER OF USER COMMANDS
   228	
   229	GLOBAL TABLE USER.CMDS(1:N.CMDS)['LIST','CHANGE','NAMES','HELP',&
   230	   'INSTRUCTIONS','QUIT','VERIFY','USER']
   231	
   232	
   233	!FLAGS IN LISTFLG
   234	DEF USER.LST AS 1
   235	DEF ACCT.LST AS 2
   236	DEF DIST.LST AS 3
   237	DEF CHANGE   AS 4
   238	DEF ALL.SET AS -1
   239	
   240	!LISTING COMMANDS
   241	DEF LST.USER AS 1	!LIST USER
   242	DEF LST.GAN  AS 2	!LIST GAN
   243	DEF LST.PPN  AS 3	!LIST PROJECT-PROGRAMMER
   244	DEF LST.LUD  AS 4	!LIST ALL USERS IN THE LUD
   245	DEF LST.RUB  AS 5	!LIST ALL USERS WITH RUB ON
   246	
   247	DEF N.LIST.CMDS AS 5	!NUMBER OF LIST COMMANDS
   248	DEF U.LIST.CMDS AS 2	!NUMBER OF USER LIST COMMANDS
   249	
   250	GLOBAL TABLE LIST.CMDS(1:N.LIST.CMDS)['USER','GAN','PPN','LUD','RUB']
   251	
   252	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:18	 Page 7
NONAME.SIM	 Created: 6-Nov-1987 14:09

   252	
   253	!CHANGES TO BE MADE
   254	
   255	DEF ENT.NAME AS  0	! User name - always seeable, never changeable
   256	DEF ENT.MIN  AS  1	! Minimum entry item to change
   257	DEF ENT.MAX  AS 18	! Maximum entry item to change
   258	
   259	! User changeable options
   260	DEF CH.MSG  AS  1	! Suppress loginn message
   261	DEF CH.MODE AS  2	! Mode: PDP, TYMEX [XEXEC], GE [XEXECJ], SUDS
   262	DEF CH.ZONE AS  3	! Time zone
   263	DEF CH.PC   AS  4	! Project-code required/omitted
   264	DEF CH.GFD  AS  5	! GFD allowed by others
   265	DEF CH.DET  AS  6	! Detach option: LOGOUT, DETACH, CONTINUE, TIMEOUT
   266	DEF CH.ATT  AS  7	! Attach option: ALLOW, FORCE, RESTRICT
   267	DEF CH.INIT AS  8	!*Init file
   268	
   269	! Supervisor changeable options
   270	DEF CH.LIC  AS  9	! License: TYM ACT.SUP
   271	DEF CH.MLJB AS 10	! Single/Multiple Job(s) for username
   272	DEF CH.NOLG AS 11	! Files-only/Login-allowed
   273	DEF CH.ALOG AS 12	! Autologout enable/disable
   274	DEF CH.SLOG AS 13	! Logout-on-stop enable/disable
   275	DEF CH.RCM  AS 14	! Restricted command mode
   276	
   277	! Validations changeable options
   278	DEF CH.STR  AS 15	!*Quota DSKB: in, out
   279	DEF CH.CORE AS 16	! Core limits (Settable and Maximum)
   280	DEF CH.RUB  AS 17	! Restricted user bit
   281	DEF CH.BUD  AS 18	!*Budget set
   282	
   283	!FLAGS IN STATUS
   284	DEF NO.CHG  AS 0
   285	DEF OLD.OUT AS 1	!OLD BLK WAS WRITTEN OUT.WITHOUT THIS USER
   286	
   287	LOCAL ATT.SAV		!ATTACH BITS
   288	DEF ATT.ALLOW AS 0	! Allow attach
   289	DEF ATT.FORCE AS 1	! Force attach
   290	DEF ATT.NONE  AS 2	! No attach allowed
   291	
   292	DEF N.ATT.OPTS AS 3	!Number of attach options
   293	GLOBAL TABLE ATT.OPTS(1:N.ATT.OPTS)['ALLOW','FORCE','NONE']
   294	
   295	LOCAL DET.SAV	  	!DETACH BITS
   296	DEF DB.LOG  AS 0	!LOGOUT ON DISCONNECT
   297	DEF DB.D    AS 1 	!DETACH ON DISCONNECT - NO TIMEOUT - STOP JOB
   298	DEF DB.CONT AS 2	!DETACH ON DISCONNECT - NO TIMEOUT - CONT RUNNING
   299	DEF DB.D.TO AS 3	!DETACH ON DISCONNECT - 15 MINUTE TIMEOUT
   300	
   301	DEF N.DET.OPTS AS 4	!Number of detach options
   302	GLOBAL TABLE DET.OPTS(1:N.DET.OPTS)['LOGOUT','DETACH','CONTINUE','TIMEOUT']
   303	
   304	!TABLES
   305	DEF N.MODES AS 4	!NUMBER OF MODES

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:19	 Page 8
NONAME.SIM	 Created: 6-Nov-1987 14:09

   306	GLOBAL TABLE MODES(1:N.MODES)['PDP10','XEXEC','XEXECJ','SUDS']
   307	
   308	DEF N.ZONES AS 26 	!NUMBER OF TIME ZONES
   309	GLOBAL TABLE ZONES(0:N.ZONES)[6(-1),'HAWAII AND ALASKA',-1,'PACIFIC',&
   310		'MOUNTAIN','CENTRAL','EASTERN','ATLANTIC',3(-1),'LONDON',&
   311		'WESTERN EUROPE',7(-1),'TOKYO','BRISBANE']
   312	
   313	!ERROR MESSAGES FOR READ DATA ERRORS
   314	DEF NODUL.BAD AS 1
   315	DEF HASH.BAD  AS 2
   316	DEF BLKNO.BAD AS 3
   317	DEF NOLUD.BAD AS 4
   318	DEF GARBAGE   AS 5
   319	DEF BAD.PPNS  AS 6
   320	DEF OVER.BAD  AS 7
   321	
   322	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:19	 Page 9
NONAME.SIM	 Created: 6-Nov-1987 14:09

   322	
   323	!MACRO'S
   324	
   325	DEF ACCT.GAN AS 4
   326	DEF JAPANESE AS 23
   327	DEF C.S.BIT(A) AS BYT(A,1,20)
   328	
   329	DEF L.GAN      AS HW(@LUD(0),0)		! Global account number {PROJ}
   330	DEF L.UUN      AS HW(@LUD(0),1)		! Universal user number {PROG}
   331	DEF OV.BLK     AS HW(@LUD(0),1)		! Overflow block pointer
   332	
   333	DEF DIST.BITS  AS BYT(LUD(1),8,0)	! (28-35) District
   334	
   335	DEF NOLOG.BIT  AS BYT(LUD(2),1,35)	!  (0) No logins allowed [Files only]
   336	DEF SUPMSG.BIT AS BYT(LUD(2),1,34)	!  (1) Suppress TYMSHARE message
   337	DEF RUB.BIT    AS BYT(LUD(2),1,33)	!  (2) Restricted user
   338	DEF GFD.BIT    AS BYT(LUD(2),1,32)	!  (3) GFD allowed by same GAN
   339	DEF TRU.BIT    AS BYT(LUD(2),1,31)	!  (4) TRU control if budget set
   340	DEF ATTLOG.BIT AS BYT(LUD(2),2,29)	!(5-6) Allow/Force/No Login-Attach
   341	DEF MLJOB.BIT  AS BYT(LUD(2),1,28)	!  (7) Single job per user
   342	DEF PC.BIT     AS BYT(LUD(2),1,27)	!  (8) Omit project code
   343	
   344	DEF INIT.BIT   AS BYT(LUD(2),1,8)	! (27) Init file entry exists
   345	DEF SIZE.LUD.ENT AS BYT(LUD(2),7,0)	! (29-35) Entry size in words
   346	
   347	DEF NAMOUT AS SIXOUT(@DUL(1),12)
   348	
   349	DEF STOPLOGOUT AS BYT(LUD(3),1,35)	!     (0) Logout on stop
   350	DEF DAYLIG.BIT AS BYT(LUD(3),1,33)	!     (2) Daylight saving applies
   351	DEF ZONE.BITS  AS BYT(LUD(3),5,28)	!   (3-7) User Time Zone
   352	DEF NEW.MAIL   AS BYT(LUD(3),1,27)	!     (8) "New" [mail waiting]
   353	DEF AUTOLOGOUT AS BYT(LUD(3),1,26)	!     (9) Default autologout enabled
   354	DEF SC.MODE    AS BYT(LUD(3),1,25)	!    (10) Special command mode
   355	DEF CORE2.LUD  AS BYT(LUD(3),7,18)	! (11-17) Maximum user core limit
   356	DEF ATTACH.BIT AS BYT(LUD(3),2,15)	! (19-20) Disconnect option
   357	DEF TYM.BIT    AS BYT(LUD(3),1,14)	!    (21) Tymshare proprietary bit
   358	DEF ACTSUP.BIT AS BYT(LUD(3),1,13)	!    (22) Account supervisor
   359	DEF RCM.BIT    AS BYT(LUD(3),1,9)	!    (26) Restricted command mode
   360	DEF MODE.BIT   AS BYT(LUD(3),2,7)	! (27-28) Mode (PDP,XEXEC,XEXECJ,SUDS)
   361	DEF CORE1.LUD  AS BYT(LUD(3),7,0)	! (29-35) Maximum core limit
   362	
   363	DEF BIG AS (LISTFLG = ACCT.LST OR LISTFLG = DIST.LST)
   364	
   365	DEF CR AS CHR.OUT(CARRET)
   366	DEF DASH AS CHR.OUT($-)
   367	DEF EQUALS AS CHR.OUT($=)
   368	DEF SP AS CHR.OUT(SPACE)
   369	DEF SPACE AS $ 
   370	DEF COLON AS MSG(': ')
   371	DEF COMMA AS MSG(', ')
   372	DEF DOTS AS OUT('...')
   373	DEF ENTER.NAME AS 'Enter user name: '
   374	
   375	DEF CHK.OPER AS [IF OPER = 0 THEN [MSG('$You may not execute this ');&

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:20	 Page 10
NONAME.SIM	 Created: 6-Nov-1987 14:09

   376	   MSG('command.'); GO GETCMD]]
   377	DEF CHECK.NO.MORE.IN(A) AS [IF TEMP_NCHV P=EOLIT OR TEMP=CARRET THEN A;&
   378		 PCHV P]
   379	
   380	DEF DISTOUT AS [SPOUT(DIST.BITS,4); NUMOUT(DIST.BITS)]
   381	DEF DUL(A) AS D.BLK(D.INDEX+A)
   382	DEF DUL.READ AS [RB(CH.DUL,SIZE.BLK,D.BLK); D.INDEX _ 0]
   383	DEF FIXCP(A) AS (A-1)*SIZE.BLK	!COMPUTE CURSOR POS. FROM BLK. NO.
   384	DEF GAN.OUT AS OCTOUT(L.GAN)
   385	DEF GET.GAN AS [CHECK.NO.MORE.IN(MSG('$Global account: ')); GAN _ GETOCT]
   386	DEF GET.UUN AS [CHECK.NO.MORE.IN(MSG('$UUN: ')); UUN _ GETOCT]
   387	DEF GET.NAME(A) AS [IF OPER=1 OR THIS.A.S=1 THEN [&
   388	   CHECK.NO.MORE.IN(A);GETTOKEN(2);MAKE.SIXBIT(TOKEN,USER.NAME,12)] ELSE [&
   389	   MOVE 72/CHARS.PER.WORD FROM ALL 0 TO IMAGE;&
   390	   USER.NAME(0) _ THIS.NAME(0); USER.NAME(1) _ THIS.NAME(1)]]
   391	DEF GET.PPN AS [GET.GAN; GET.UUN; HW(@TEMP,0) _ GAN;&
   392		HW(@TEMP,1) _ UUN]
   393	DEF INIT.LONG.LIST AS [HEADING; OPEN.LUD(INPUT); LUD.SEQ]
   394	DEF KEEP.CP AS [TEMP _ CP(CH.LUD); TEMP-_SIZE.BLK; SETCP(CH.LUD,TEMP)]
   395	DEF LEGAL.AS AS (OPER # 0 OR (THIS.A.S = 1 AND SAMACCT))
   396	DEF LEGAL AS LEGAL.AS OR SAMUSR
   397	DEF LEGAL.CH(A) AS (OCT 37 < A < OCT 133) OR A = 0
   398	DEF LITTLE AS NOT(BIG)
   399	DEF LUD(A) AS L.BLK(L.INDEX+A)
   400	DEF LUD.READ AS [RB(CH.LUD,SIZE.BLK,L.BLK); L.INDEX _ 0]
   401	DEF LUD.TEMP(A) AS LUD(TEMP.INDEX+A)
   402	DEF LUD.WRIT AS [KEEP.CP; WB(CH.LUD,SIZE.BLK,L.BLK)]
   403	DEF MOVE.DOWN AS [TEMP1_TRU.BIT;FOR TEMP_TEMP1+5 TO TEMP1+7 &
   404	    LUD(TEMP+3) _ LUD(TEMP)]
   405	DEF MSG.PAGES AS IF LITTLE THEN MSG('pages.')
   406	DEF N.LUD.BLKS AS SIZE(CH.LUD)/SIZE.BLK
   407	DEF NO AS 0
   408	DEF NOT.VALID AS [MSG('$not a valid user$'); GO GETCMD]
   409	DEF NO.ZONE.CHG AS [MSG('$OPER can not have its time zone changed.');GO GETCMD]
   410	DEF OPEN.LUD(A) AS CH.LUD _ OPEN('(SYS)LUD.SYS',DIRECT+A+WORD,LUD.ERR)
   411	DEF OPEN.TEL AS CH.OUT _ OPEN('TEL',SEQUEN+OUTPUT+CHARACTER,CHK.ERR,2)
   412	DEF OPEN.DUL AS CH.DUL _ OPEN('(SYS)DUL.SYS',DIRECT+INPUT+WORD,CHK.ERR)
   413	DEF OPER.PPN AS OCT 1000021
   414	DEF OUT.WHERE AS [MSG('Output to: '); GETTOKEN(0); &
   415		CH.OUT _ OPEN(TOKEN,SEQUEN+OUTPUT+CHARACTER,CHK.ERR,2)]
   416	DEF PPN.OUT AS OCTWD.OUT(LUD(0))
   417	DEF PROT.FAILURE AS [MSG('$You do not have access to that user name$' GETCMD]
   418	DEF SAMACCT AS THIS.GAN = L.GAN
   419	DEF SAMUSR AS THIS.PPN = LUD(0)
   420	DEF SET.TEMP AS [IF INIT.BIT = 1 THEN TEMP.INDEX _ 3;&
   421	   IF BUD.INDEX _ TRU.BIT = 1 THEN INC TEMP.INDEX]
   422	DEF SIZE.INC AS SIZE.LUD.ENT _ SIZE.LUD.ENT + 3
   423	DEF SIZE.DEC AS SIZE.LUD.ENT _ SIZE.LUD.ENT - 3
   424	DEF TYPSPACE(A) AS [REPEAT A SP]
   425	DEF USER.MISSING AS [PPN.OUT; OUT(' Missing from dul.$')]
   426	DEF UUN.OUT AS OCTOUT(L.UUN)
   427	DEF VERSION AS 42
   428	DEF WHAT AS [MSG('?'); GO GETCMD]
   429	DEF YES AS 1

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:21	 Page 11
NONAME.SIM	 Created: 6-Nov-1987 14:09

   430	
   431	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:21	 Page 12
NONAME.SIM	 Created: 6-Nov-1987 14:09

   431	
   432	%NONAME					! MAINLINE
   433	LOCAL ENDLUD:
   434	
   435	START: INITNONAME
   436	\\->START
   437	
   438	CR
   439	GETCMD: SEQ.FLG _ IO.ADR _ 0; CLOSE.ALL
   440	OPEN.TEL
   441	MSG(': '); P _ GETLINE(TEL); GETTOKEN(0)
   442	TEMP_ U.CMDS
   443	IF OPER # 0 THEN TEMP_ N.CMDS
   444	IF CMD _ CHOOSE(TEMP,USER.CMDS) = 0 THEN WHAT
   445	
   446	DO CMD OF 1:N.CMDS			! case 1:n.cmds of cmd
   447	
   448	CMD.LST:    DO.LIST
   449	CMD.CHANGE: DO.CHANGE
   450	CMD.NAMES:  DO.NAMES
   451	CMD.ENDIT:  CLOSE.ALL; EXIT
   452	
   453	CMD.HELP: MSG('$Legal commands are:$')
   454	    TEMP_ U.CMDS
   455	    IF OPER = 1 THEN TEMP_ N.CMDS
   456	    LISTABLE(TEMP,USER.CMDS); MSG('.$')
   457	
   458	CMD.INSTR: MSG('$SEE (SYS)NONAME.INF')
   459	    IF OPER = 1 OR THIS.GAN = ACCT.GAN THEN MSG('$ALSO (SYS)NONAME.OPR')
   460	
   461	CMD.VERIFY: OUT.WHERE; OPEN.LUD(INPUT); OPEN.DUL; LUD.CHK
   462	    CK.DUL: DUL.CHK
   463	
   464	
   465	CMD.USER: GET.PPN; CR
   466	    IF OPEN.AND.DUL.LOOK(TEMP) # 0 THEN [NAMOUT; CR] &
   467		ELSE [LUD(0) _ TEMP; USER.MISSING]
   468	
   469	END
   470	
   471	ENDLUD: ON.ALT;  LISTFLG _ 0;  GO GETCMD
   472	LUD.ERR: IF SEQ.FLG # 0 THEN GO GETCMD ELSE CHK.IO.ERR
   473	
   474	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:23	 Page 13
NONAME.SIM	 Created: 6-Nov-1987 14:09

   474	
   475	%LUD.SEQ				!READ NEXT SEQUENTIAL LUD ENTRY
   476	    TEMP.INDEX _ 0
   477	    LOOP DO
   478		L.INDEX+_SIZE.LUD.ENT
   479		IF LUD(0)<0 THEN LUD.OVERFLOW
   480		WHILE LUD(0) = 0 THEN LUD.READ
   481		IF LUD(4) # 0 THEN [SET.TEMP; RETURN]
   482	    END
   483	END LUD.SEQ
   484	
   485	
   486	
   487	%DUL.SEQ				!READ NEXT SEQUENTIAL DUL ENTRY
   488	    LOCAL J
   489	    D.INDEX + _ 3
   490	    WHILE DUL(0) = 0 THEN DO
   491		LOOP DO
   492		    FOR J _ 1 TO SIZE.BLK-1-D.INDEX &
   493		    IF DUL(J)#0 THEN [BADBLK_D.BLKNO; ERROR(GARBAGE); REPEAT 0]
   494		    REPEAT 0
   495		END
   496		INC D.BLKNO; DUL.READ
   497	    END
   498	    RETURN
   499	END DUL.SEQ
   500	
   501	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:24	 Page 14
NONAME.SIM	 Created: 6-Nov-1987 14:09

   501	
   502	%OPEN.AND.LUD.LOOK(MODE)
   503		!LOOK UP NAME IN ADR, ADR+1 IN LUD
   504	    OPEN.LUD(MODE)
   505	    RETURN LUD.LOOK(USER.NAME)
   506	END OPEN.AND.LUD.LOOK
   507	
   508	
   509	%LUD.LOOK(ADR)
   510	    TEMP.INDEX _ 0
   511	    HASH(^ADR,^(ADR+1))
   512	    OLDBLK _ LOC.HASH
   513	    SETCP(CH.LUD,FIXCP(LOC.HASH)); LUD.READ 
   514	    WHILE NAME.HASH # LUD(4) THEN DO	
   515		L.INDEX+_SIZE.LUD.ENT
   516		IF LUD(0)=0 THEN RETURN 0
   517		IF LUD(0)<0 THEN LUD.OVERFLOW
   518	    END
   519	    SET.TEMP
   520	    RETURN 1
   521	END LUD.LOOK
   522	
   523	
   524	%OPEN.AND.DUL.LOOK(PP)
   525		!LOOK UP PP IN DUL
   526	    OPEN.DUL
   527	    %%DUL.LOOK(PP)
   528	    IF PP < 0 THEN [MSG('$ILLEGAL PPN.$'); GO GETCMD]
   529	    SETCP(CH.DUL,FIXCP((PP MOD 101)+1)); DUL.READ
   530	    WHILE DUL(0) # PP THEN DO
   531		D.INDEX+_3
   532		IF DUL(0)=0 THEN RETURN 0
   533		IF DUL(0)<0 THEN DUL.OVERFLOW
   534	    END
   535	    RETURN 1
   536	END OPEN.AND.DUL.LOOK
   537	
   538	
   539	%LUD.OVERFLOW
   540		!READ LUD OVERFLOW BLOCK
   541	    SETCP(CH.LUD,OV.BLK*SIZE.BLK); OLDBLK _ OV.BLK
   542	    LUD.READ
   543	    RETURN
   544	END LUD.OVERFLOW
   545	
   546	
   547	%DUL.OVERFLOW
   548		!READ DUL OVERFLOW BLOCK
   549	    SETCP(CH.DUL,HW(DUL(0),1)*SIZE.BLK)
   550	    DUL.READ
   551	    RETURN
   552	END DUL.OVERFLOW
   553	
   554	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:25	 Page 15
NONAME.SIM	 Created: 6-Nov-1987 14:09

   554	
   555	%CHK.IO.ERR
   556		!TAKE CARE OF ALL I/O ERRORS FROM IOCS.
   557	CHK.ERR: IF ERRNUM=EOFERR AND IO.ADR # 0 THEN GO ^IO.ADR
   558	CLOSE.ALL; MSG('Error on '); WFID(FIDP); MSG('...$'); OPEN.TEL
   559	  DO ERRNUM OF TMFERR:CORERR
   560	TMFERR: MSG('Too many files open')
   561	FMDERR: MSG('Bad file mode or type')
   562	IFDERR: MSG('Illegal file identifier')
   563	FNFERR: MSG('File not found')
   564	IUSERR: MSG('Invalid user name')
   565	PRTERR: MSG('Protection failure')
   566	FBSERR: MSG('File busy')
   567	EOFERR: MSG('End of file')
   568	 END
   569	MSG('.$Error ');NUMOUT(ERRNUM);EXIT
   570	END CHK.IO.ERR
   571	
   572	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:26	 Page 16
NONAME.SIM	 Created: 6-Nov-1987 14:09

   572	
   573	%INITNONAME				!INIT PROGRAM
   574	DEF VALIDATE AS OCT 113407
   575	    LOCAL THIS.UUN
   576	    IOCS(2); INITTTY(GETCMD)
   577	    CMD _ 0
   578	    MSG('$User validation program - version %'); NUMOUT(VERSION)
   579	    TYPSPACE(5); DATOUT
   580	    MOVE 72/CHARS.PER.WORD FROM ALL 0 TO TOKEN
   581	    THIS.PPN _ CALL.UUO(-OCT 23 BAND OCT 777777 BOR (-1 SHL 18),OCT 41,1)
   582	 
   583	    OPEN.DUL
   584	    IF OPEN.AND.DUL.LOOK(THIS.PPN) = 0 THEN &
   585		[OCTWD.OUT(THIS.PPN); MSG(' Not in DUL'); EXIT]
   586	    THIS.NAME(0) _ DUL(1); THIS.NAME(1) _ DUL(2)
   587	    OPEN.LUD(INPUT); LUD.SIZE _ N.LUD.BLKS
   588	    IF LUD.LOOK(@DUL(1)) = 0 THEN [NAM.OUT; MSG(' Not in LUD'); EXIT]
   589	
   590	    THIS.DIST _ DIST.BITS; THIS.AREA _ THIS.DIST/10
   591	    THIS.A.S _ ACTSUP.BIT
   592	    THIS.TYM _ TYM.BIT
   593	    THIS.GAN _ HW(@THIS.PPN,0); THIS.UUN _ HW(@THIS.PPN,1)
   594	
   595	    OPER _ BYT(TEMP _ CALL.UUO(-OCT 20,OCT 41,1),1,15)
   596	    GOD _ IF THIS.UUN = VALIDATE OR &
   597			BYT(TEMP,1,9) = 1 THEN 1 ELSE 0	! (VALIDATE) or JL
   598	
   599	    IF GOD = 1 THEN OPER _ 1			! OP license or GOD
   600	    CAN.LOOK _ BYT(TEMP,1,3) BOR BYT(TEMP,1,1)	! 1 if RF/RA or WF/WA license
   601	
   602	    C.SER.FLG _ -1	!-1 MEANS FLAG NOT SET AS YET
   603				! 0 MEANS NOT C.SER
   604				! 1 MEANS C.SER
   605	
   606	    ALTLOC _ GETCMD; ONALT
   607	    RETURN
   608	END INITNONAME
   609	
   610	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:27	 Page 17
NONAME.SIM	 Created: 6-Nov-1987 14:09

   610	%DO.LIST
   611	    IF TEMP_NCHV P=EOLIT OR TEMP=CARRET THEN LIST.ALL.LISTS ELSE PCHV P
   612	    GETTOKEN(0)
   613	    TEMP1 _ U.LIST.CMDS
   614	    IF OPER # 0 OR CAN.LOOK # 0 THEN TEMP1_ N.LIST.CMDS
   615	    IF LIST_ CHOOSE(TEMP1,LIST.CMDS) = 0 THEN DO
   616		LIST.ALL.LISTS
   617	     END ELSE DO LIST OF LST.USER:LST.RUB
   618	
   619		LST.USER: GET.NAME(MSG(ENTER.NAME))
   620		    LIST.FLG _ USER.LST
   621	
   622		L.LUD: IF OPEN.AND.LUD.LOOK(INPUT) = 0 THEN NOT.VALID
   623		    IF LEGAL THEN LIST.RECORD(ALL.SET,OLD) ELSE PROT.FAILURE
   624	
   625		LST.PPN: LIST.FLG _ USER.LST
   626		    GET.PPN
   627		    IF OPEN.AND.DUL.LOOK(TEMP) # 0 THEN DO
   628			USER.NAME(0) _ DUL(1); USER.NAME(1) _ DUL(2)
   629			GO L.LUD
   630		     END ELSE [LUD(0) _ TEMP; USER.MISSING]
   631	
   632		LST.GAN: LISTFLG _ ACCT.LST
   633		    IF OPER # 0 THEN DO
   634			IF KNOW.ACCT = 1 THEN DO
   635			    CHECK.NO.MORE.IN(MSG('$Account: '))
   636			    GETOCT
   637			END
   638		     END ELSE NUMBER _ THIS.GAN
   639		    INIT.LONG.LIST; INC SEQ.FLG
   640		    LOOP DO
   641			IF LEGAL AND NUMBER = L.GAN THEN LIST.RECORD(ALL.SET,OLD)
   642			LUD.SEQ
   643		    END
   644	
   645		LST.RUB: CHK.OPER; IO.ADR _ ENDLUD
   646		    OUT.WHERE; OPEN.LUD(INPUT); INC SEQ.FLG; LUD.SEQ
   647		    LOOP DO
   648			IF OPEN.AND.DUL.LOOK(LUD(0)) # 0 AND RUB.BIT # 0 THEN DO
   649			    NAMOUT; SP
   650			    NUMOUT(TYM.BIT); CR
   651			END
   652			CLOSE(CH.DUL); LUD.SEQ
   653		    END
   654	
   655		LST.LUD: CHK.OPER; IO.ADR _ ENDLUD
   656		    OUT.WHERE
   657		    OPEN.LUD(INPUT); INC SEQ.FLG; LUD.SEQ
   658		    LOOP DO
   659			IF OPEN.AND.DUL.LOOK(LUD(0)) # 0 THEN DO
   660			    CLOSE(CH.DUL)
   661			    NAMOUT; SP
   662			    GAN.OUT; SP
   663			    DISTOUT; SP

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:31	 Page 18
NONAME.SIM	 Created: 6-Nov-1987 14:09

   664			    NUMOUT(TYM.BIT); CR
   665			 END
   666			LUD.SEQ
   667		    END
   668	     END				! end of DO LIST OF ...:...
   669	    RETURN
   670	END DO.LIST
   671	
   672	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:32	 Page 19
NONAME.SIM	 Created: 6-Nov-1987 14:09

   672	
   673	%DO.CHANGE
   674	    GETNAME(MSG(ENTER.NAME))
   675	    IF OPEN.AND.LUD.LOOK(INPUT) = 0 THEN NOT.VALID
   676	    IF NOT( LEGAL ) THEN PROT.FAILURE
   677	    LISTFLG _ CHANGE; LIST.RECORD(ALL.SET,OLD)
   678	    CLOSE(CH.LUD)
   679	    LOOP DO
   680		MSG('Change which item (number or 0 to quit): ')
   681		CH.NUM _ GETNUM
   682		IF GET.CHANGE = 1 THEN DO
   683		    OFF.ALT
   684		    OPEN.AND.LUD.LOOK(UPDATE)
   685		    CHANGE.IT
   686		    LUD.WRIT; CLOSE(CH.LUD)
   687		    ON.ALT
   688		    LIST.RECORD(CH.NUM,NEW)
   689		 END ELSE GO GETCMD
   690	    END
   691	    RETURN
   692	END DO.CHANGE
   693	
   694	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:33	 Page 20
NONAME.SIM	 Created: 6-Nov-1987 14:09

   694	
   695	%DO.NAMES
   696	    IO.ADR _ ENDLUD; OUT.WHERE
   697	    IF THIS.A.S # 0 THEN DO
   698		OPEN.LUD(INPUT); INC SEQ.FLG; LUD.SEQ
   699		LOOP DO
   700		   IF SAMACCT THEN DO
   701			IF OPEN.AND.DUL.LOOK(LUD(0)) = 0 THEN &
   702				USER.MISSING ELSE [NAMOUT; CR]
   703			CLOSE(CH.DUL)
   704		   END
   705		   LUD.SEQ
   706		END
   707	    END ELSE [SIXOUT(THIS.NAME,12); CR]
   708	    RETURN
   709	END DO.NAMES
   710	
   711	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:34	 Page 21
NONAME.SIM	 Created: 6-Nov-1987 14:09

   711	
   712	%LIST.ENTRY(LISTNUM,WHICH)
   713	
   714	LOCAL SAV.LST
   715	
   716	    IF LITTLE AND LISTNUM > ENT.NAME THEN DO
   717		SPOUT(LISTNUM,1); NUMOUT(LISTNUM); MSG('. ')
   718	    END
   719	
   720	    DO LISTNUM OF ENT.NAME:ENT.MAX
   721	
   722	ENT.NAME: IF LITTLE THEN DO
   723		MSG('User name: ');  NAMOUT
   724		MSG('  District: '); DISTOUT
   725		MSG('    Account: '); GAN.OUT; SP; UUN.OUT; CR
   726	    END ELSE DO
   727		NAMOUT
   728		DISTOUT
   729		IF  OPER = 0  OR  LISTFLG = ACCT.LST  THEN SP
   730		IF OPER # 0 THEN [IF LISTFLG = DISTLST THEN [GAN.OUT; SP]]
   731		UUN.OUT; SP
   732	    END
   733	
   734	CH.LIC: IF LITTLE THEN MSG('License: ')
   735	    SAV.LST _ IF WHICH = OLD THEN TYM.BIT ELSE TYM.SAV
   736	    IF SAV.LST = 1 THEN OUT('TYM. ') ELSE OUT('     ')
   737	    SAV.LST _ IF WHICH = OLD THEN ACTSUP.BIT ELSE A.S.SAV
   738	    IF SAV.LST = 1 THEN OUT('ACT.SUP.') ELSE OUT('        ')
   739	    IF BIG THEN SP ELSE CR
   740	
   741	CH.MSG: SAV.LST _ IF WHICH = OLD THEN SUPMSG.BIT ELSE SUP.SAV
   742	    IF LITTLE THEN DO
   743		IF SAV.LST = 1 THEN MSG('Suppress') ELSE MSG('Print')
   744		MSG(' Tymshare message at login.'); CR
   745	    END ELSE [IF SAV.LST=0 THEN OUT('TYP') ELSE OUT('SUP'); SP]
   746	
   747	CH.INIT: SAV.LST _ IF WHICH = OLD THEN INIT.BIT ELSE I.BIT.SAV
   748	    IF SAV.LST = 1 THEN DO
   749		IF LITTLE THEN MSG('Init file: ')
   750		IF WHICH = OLD THEN DO
   751		    IF LUD(6+BUD.INDEX)#0 OR LUD(7+BUD.INDEX)#0 THEN &
   752			[CHR.OUT($();SIXOUT(@LUD(6+BUD.INDEX),12); CHR.OUT($))]
   753		END ELSE DO
   754		    IF I.USER.SAV(0) # 0 OR I.USER.SAV(1) # 0 THEN &
   755			[CHR.OUT($(); SIXOUT(I.USER.SAV,12); CHR.OUT($))]
   756		END
   757		IF WHICH = OLD THEN  SIXOUT(@LUD(5+BUD.INDEX),6) ELSE &
   758		    SIXOUT(@I.FILE.SAV,6)
   759	
   760	    END ELSE IF LITTLE THEN MSG('No init file.')
   761	    IF BIG THEN [CR; NAMOUT; TYPSPACE(5)] ELSE CR	! 2nd line of listing
   762	
   763	CH.ZONE: SAV.LST _ IF WHICH = OLD THEN ZONE.BITS ELSE ZONE.SAV
   764	    IF LITTLE THEN DO

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:38	 Page 22
NONAME.SIM	 Created: 6-Nov-1987 14:09

   765		IF SAV.LST#0 THEN [MSG(ZONES(SAV.LST)); MSG(' time zone.')]&
   766		    ELSE MSG('Time zone not set.')
   767		SAV.LST _ IF WHICH = OLD THEN DAYLIG.BIT ELSE DAY.L.SAV
   768		IF SAV.LST = 1 THEN MSG('  subject to daylight savings.')
   769		CR
   770	    END ELSE DO
   771		IF ZONES(SAV.LST)=-1 OR SAV.LST=0 THEN OUT('Not set') ELSE DO
   772		    TEMP_CHPT(ZONES(SAV.LST),-1)
   773		    SHORT.OUT(TEMP,5); DASH
   774		    SAV.LST _ IF WHICH = OLD THEN DAYLIG.BIT ELSE DAY.L.SAV
   775		    IF SAV.LST = 1 THEN CHR.OUT($D) ELSE CHR.OUT($S)
   776		END
   777		TYPSPACE(4)
   778	    END
   779	
   780	CH.DET: SAV.LST _ IF WHICH = OLD THEN ATTACH.BIT ELSE DET.SAV
   781	    IF LITTLE THEN DO
   782		DO SAV.LST OF DB.LOG:DB.D.TO
   783		    DB.LOG:  MSG('Logout on disconnect.')
   784		    DB.D:    MSG('Detach on disconnect - stop running.')
   785		    DB.CONT: MSG('Detach on disconnect - continue running.')
   786		    DB.D.TO: MSG('Detach on disconnect - time out set.')
   787		END
   788		CR
   789	    END ELSE DO
   790		DO SAV.LST OF DB.LOG:DB.D.TO
   791		    DB.LOG:  OUT('Log    ')
   792		    DB.D:    OUT('Det-S  ')
   793		    DB.CONT: OUT('Det-C  ')
   794		    DB.D.TO: OUT('Det-T  ')
   795		END
   796	    END
   797	
   798	CH.MODE: IF LISTFLG # CHANGE OR (THIS.AREA#JAPANESE AND DIST.BITS/10#JAPANESE) THEN DO
   799		SAV.LST _ IF WHICH = OLD THEN MODE.BIT ELSE MODE.SAV
   800		IF LITTLE THEN DO
   801		    MSG('Mode: ')
   802		    MSG(MODES(SAV.LST+1))
   803		    CR
   804		END ELSE DO
   805		    TEMP_CHPT(MODES(SAV.LST+1),-1)
   806		    SHORT.OUT(TEMP,6)
   807		    SP
   808		END
   809	    END
   810	
   811	CH.STR: SAV.LST _ (IF WHICH = OLD THEN LUD.TEMP(6) ELSE Q.IN.SAV)/4
   812	    IF LITTLE THEN MSG('Quota in: '); SPOUT(SAV.LST,6)
   813	    NUMOUT(SAV.LST); SP; MSG.PAGES
   814	    SAV.LST _ (IF WHICH = OLD THEN LUD.TEMP(7) ELSE Q.OUT.SAV)/4
   815	    IF LITTLE THEN MSG('  out: '); SPOUT(SAV.LST,6)
   816	    NUMOUT(SAV.LST); SP; MSG.PAGES
   817	    IF LITTLE THEN CR
   818	

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:40	 Page 23
NONAME.SIM	 Created: 6-Nov-1987 14:09

   819	CH.CORE: SAV.LST _ IF WHICH = OLD THEN CORE1.LUD ELSE CORE.SAV
   820	    IF LITTLE THEN MSG('Amount of core: ')
   821	    IF TEMP _ SAV.LST = 0 THEN DO
   822		IF LITTLE THEN [MSG('System default'); CR] ELSE OUT('Def')
   823	    END ELSE DO
   824		TEMP _ (TEMP+1) * 2
   825		IF BIG THEN SPOUT(TEMP,3)
   826		NUMOUT(TEMP)
   827		IF LITTLE THEN CR
   828	    END
   829	
   830	CH.GFD: SAV.LST _ IF WHICH = OLD THEN GFD.BIT ELSE GFD.SAV
   831	    IF SAV.LST = 0 THEN DO
   832		IF LITTLE THEN MSG('No ') ELSE OUT(' No ')
   833	    END ELSE IF BIG THEN OUT(' Yes')
   834	    IF LITTLE THEN [MSG('GFD access by others in GAN'); CR]
   835	
   836	CH.PC: SAV.LST _ IF WHICH = OLD THEN PC.BIT ELSE PC.SAV
   837	    IF SAV.LST = 1 THEN DO
   838		IF LITTLE THEN MSG('No p') ELSE OUT(' No')
   839	    END ELSE IF BIG THEN OUT(' Yes') ELSE MSG('P')
   840	    IF LITTLE THEN [MSG('roject code required'); CR]
   841	
   842	CH.RUB: IF LITTLE THEN DO
   843		MSG('RUB: '); IF RUB.BIT # 1 THEN MSG('NOT '); MSG('SET'); CR
   844	    END
   845	
   846	CH.BUD: IF TYM.BIT AND LITTLE THEN DO
   847		MSG('Budget: ')
   848		IF TRU.BIT = 0 THEN MSG('NOT set') ELSE NUMOUT(LUD(5)/10000)
   849		CR
   850	    END
   851	
   852	CH.RCM: IF LITTLE THEN DO
   853		MSG('Restricted command mode ')
   854		IF RCM.BIT = 0 THEN MSG('NOT ')
   855		MSG('set'); CR
   856	    END
   857	
   858	CH.ATT: SAV.LST _ IF WHICH = OLD THEN ATTLOG.BIT ELSE ATTLOG.SAV
   859	    IF LITTLE THEN DO
   860		DO SAV.LST OF ATT.ALLOW:ATT.NONE
   861		    ATT.ALLOW: MSG('Allow')
   862		    ATT.FORCE: MSG('Force')
   863		    ATT.NONE:  MSG('No')
   864		END
   865		MSG(' attach on login.'); CR
   866	    END
   867	
   868	CH.MLJB: SAV.LST _ IF WHICH = OLD THEN MLJOB.BIT ELSE MLJOB.SAV
   869	    IF LITTLE THEN DO
   870		IF SAV.LST = 1 THEN MSG('Do NOT a') ELSE MSG('A')
   871		MSG('llow multiple jobs.'); CR
   872	    END

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:44	 Page 24
NONAME.SIM	 Created: 6-Nov-1987 14:09

   873	
   874	CH.NOLG: SAV.LST _ IF WHICH = OLD THEN NOLOG.BIT ELSE NOLOG.SAV
   875	    IF LITTLE THEN DO
   876		IF SAV.LST = 1 THEN MSG('Do NOT a') ELSE MSG('A')
   877		MSG('llow user to login.'); CR
   878	    END
   879	
   880	CH.ALOG: SAV.LST _ IF WHICH = OLD THEN AUTOLOGOUT ELSE AUTOLOG.SAV
   881	    IF LITTLE THEN DO
   882		IF SAV.LST = 1 THEN MSG('En') ELSE MSG('Dis')
   883		MSG('able default autologout.'); CR
   884	    END
   885	
   886	CH.SLOG: SAV.LST _ IF WHICH = OLD THEN STOPLOGOUT ELSE STOPLOG.SAV
   887	    IF LITTLE THEN DO
   888		IF SAV.LST = 1 THEN MSG('En') ELSE MSG('Dis')
   889		MSG('able logout-on-stop.'); CR
   890	    END
   891	
   892	END
   893	RETURN
   894	END LIST.ENTRY
   895	
   896	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:45	 Page 25
NONAME.SIM	 Created: 6-Nov-1987 14:09

   896	
   897	%LIST.EACH(NUMBER,TYPE)		! Listing: case out CHANGE flag items
   898	
   899	DO NUMBER OF ENT.NAME:ENT.MAX
   900	    ENT.NAME: &
   901	    CH.DET:  CH.ATT:  CH.MODE: CH.ZONE: &
   902	    CH.GFD:  CH.PC:   CH.MSG:  &
   903	    CH.INIT: &
   904		LIST.ENTRY(NUMBER,TYPE)
   905	
   906	    CH.LIC:  CH.MLJB: CH.NOLG: CH.ALOG: CH.SLOG: CH.RCM:  &
   907		IF LISTFLG#CHANGE OR LEGAL.AS THEN LIST.ENTRY(NUMBER,TYPE)
   908	
   909	    CH.CORE: CH.STR:  &
   910		IF LISTFLG#CHANGE OR OPER#0   THEN LIST.ENTRY(NUMBER,TYPE)
   911	
   912	    CH.RUB:  CH.BUD: &
   913		IF LISTFLG#CHANGE OR GOD#0    THEN LIST.ENTRY(NUMBER,TYPE)
   914	END
   915	
   916	RETURN
   917	END LIST.EACH
   918	
   919	
   920	%LIST.RECORD(LISTNUM,OLD.OR.NEW)
   921		!LIST RECORD POINTED TO BY L.INDEX...LIST ONLY
   922		!ITEMS THAT CAN BE CHANGED IF USER WANTS TO CHANGE...LIST ONLY
   923		!SELECTIVE ITEMS IF ALL DIST OR ALL ACCT. REQUESTED
   924	
   925	DEF LST.MAX AS ENT.MAX
   926	
   927	    IF OPEN.AND.DUL.LOOK(LUD(0))=0 THEN [CLOSE(CH.DUL);USER.MISSING;RETURN]
   928	    CLOSE(CH.DUL)
   929	
   930	    IF LISTNUM=ALL.SET THEN DO
   931		IF BIG THEN DO
   932		    FOR LISTNUM _ ENT.NAME, CH.LIC, CH.MSG, CH.INIT, &
   933			    CH.ZONE, CH.DET, CH.MODE, CH.STR, CH.CORE, CH.GFD, CH.PC &
   934			LIST.EACH(LISTNUM,OLD.OR.NEW); CR
   935		END ELSE DO
   936		    FOR LISTNUM _ ENT.NAME TO ENT.MAX LIST.EACH(LISTNUM,OLD.OR.NEW)
   937		    CR
   938		END
   939	    END ELSE LIST.EACH(LISTNUM,OLD.OR.NEW)
   940	
   941	RETURN
   942	END LIST.RECORD
   943	
   944	
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:46	 Page 26
NONAME.SIM	 Created: 6-Nov-1987 14:09

   944	
   945	%GET.CHANGE
   946	! CHANGE ITEM CH.NUM IN LUD
   947	
   948	LOCAL TMP1, C.CNT
   949	
   950	IF CH.NUM < ENT.MIN OR CH.NUM > ENT.MAX THEN RETURN 0
   951	
   952	DO CH.NUM OF ENT.MIN:ENT.MAX
   953	
   954	CH.LIC: IF OPER = 0 THEN RETURN 0
   955	   A.S.SAV _ QUERY('Account supervisor'); TYM.SAV _ QUERY('Tymshare')
   956	
   957	CH.MSG: SUP.SAV _ QUERY('Supress TYMSHARE message at login')
   958	
   959	CH.INIT: I.FILE.SAV _ I.USER.SAV(0) _ I.USER.SAV(1) _ 0
   960	IF I.BIT.SAV _ QUERY('Do you want to set an init file') = YES THEN DO
   961	   MSG('User file belongs to: '); GETTOKEN(2)
   962	   MAKE.SIXBIT(TOKEN,I.USER.SAV,12)
   963	   MSG('File name: '); GETTOKEN(0); C.CNT _ 0; P _ CHPT(TOKEN,-1)
   964	   WHILE TEMP _ NCHV P # $. AND TEMP # 0 THEN INC C.CNT
   965	   IF C.CNT > 6 THEN C.CNT _ 6
   966	   MAKE.SIXBIT(TOKEN,@I.FILE.SAV,C.CNT)
   967	END
   968	
   969	CH.ZONE: IF LUD(0) = OPER.PPN THEN NO.ZONE.CHG
   970	   LOOP DO
   971		MSG('Enter time zone: '); GETTOKEN(0)
   972		WHILE ZONE.SAV _ CHOOSE(N.ZONES,ZONES) = 0
   973		MSG('Valid time zones are '); LISTABLE(N.ZONES,ZONES); CR
   974	   END
   975	   DAY.L.SAV _ QUERY('Subject to daylight saving')
   976	
   977	CH.DET: LOOP DO
   978		MSG('Disconnect option (Logout,Detach,Continue,Timeout): ')
   979		GETTOKEN(0)
   980		WHILE DET.SAV _ CHOOSE(N.DET.OPTS,DET.OPTS) = 0
   981		MSG('Valid options are '); LISTABLE(N.DET.OPTS,DET.OPTS); CR
   982	    END
   983	    DET.SAV - _ 1
   984	
   985	CH.MODE: IF THIS.AREA = JAPANESE OR DIST.BITS/10 = JAPANESE THEN RETURN 0
   986	    LOOP DO
   987		MSG('Mode: '); GETTOKEN(0)
   988		WHILE MODE.SAV _ CHOOSE(N.MODES,MODES) = 0
   989		MSG('Valid modes are '); LISTABLE(N.MODES,MODES); CR
   990	    END
   991	    MODE.SAV - _ 1
   992	
   993	CH.STR:	IF TEMP _ GETULC < 0 THEN RETURN 0
   994	    IF C.S.BIT(TEMP) # 1 THEN RETURN 0		! Requires CS license
   995	    MSG('Quota in (in pages): '); Q.IN.SAV _ GETNUM*4
   996	    MSG('Quota out (in pages): '); Q.OUT.SAV _ GETNUM*4
   997	

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:48	 Page 27
NONAME.SIM	 Created: 6-Nov-1987 14:09

   998	CH.CORE: IF OPER = 0 THEN RETURN 0		! Must be OPER?
   999	    MSG('Enter amount of core: ')
  1000	    IF GETNUM > 256 THEN NUMBER _ 256
  1001	    TMP1 _ NUMBER/2
  1002	    IF TMP1 * 2 # NUMBER THEN DO
  1003		NUMBER+_1
  1004		MSG('Amount of core must be even.')
  1005	    END
  1006	    IF NUMBER # 0 THEN NUMBER _ (NUMBER/2)-1
  1007	    CORE.SAV _ NUMBER
  1008	
  1009	CH.GFD:   GFD.SAV     _ QUERY('Enable GFD access')
  1010	CH.PC:	  PC.SAV      _ (QUERY('Require project code')+1) BAND 1
  1011	
  1012	CH.ATT: LOOP DO
  1013		MSG('Attach on login (None,Allow,Force): '); GETTOKEN(0)
  1014		WHILE ATTLOG.SAV _ CHOOSE(N.ATT.OPTS,ATT.OPTS) = 0
  1015		MSG('Valid options are '); LISTABLE(N.ATT.OPTS,ATT.OPTS); CR
  1016	    END
  1017	    ATTLOG.SAV - _ 1
  1018	
  1019	CH.MLJB:  MLJOB.SAV   _ QUERY('Disable multiple jobs for username')
  1020	CH.NOLG:  NOLOG.SAV   _ QUERY('Disable login to username')
  1021	CH.ALOG:  AUTOLOG.SAV _ QUERY('Enable default autologout')
  1022	CH.SLOG:  STOPLOG.SAV _ QUERY('Enable logout on stop')
  1023	
  1024	END
  1025	RETURN 1
  1026	END GET.CHANGE
  1027	
  1028	
  1029	
  1030	%MAKE.ROOM
  1031		!MAKE ROOM FOR AN ADDITIONAL 3 WORD IN ENTRY...CREATE OVERFLOW
  1032		!BLOCK IF NECESSARY
  1033	LOCAL TMP,I,SAVENT(20)
  1034	TMP _ SIZE.LUD.ENT
  1035	MOVE TMP FROM @LUD(0) TO SAVENT
  1036	MOVE SIZE.BLK-L.INDEX-TMP FROM @LUD(TMP) TO @LUD(0)
  1037	WHILE LUD(0)#0 THEN L.INDEX+_SIZE.LUD.ENT
  1038	MOVE TMP FROM SAVENT TO @LUD(0)
  1039	IF L.INDEX+SIZE.LUD.ENT+3<SIZE.BLK THEN RETURN
  1040	HW(@LUD(0),0) _ -1; OV.BLK _ LUD.SIZE+ _ 1
  1041	LUD.WRIT; SETCP(CH.LUD,(LUD.SIZE+1)*SIZE.BLK)
  1042	L.INDEX _ 0
  1043	MOVE SIZE.BLK FROM ALL 0 TO LBLK
  1044	MOVE TMP FROM SAVENT TO @LUD(0)
  1045	RETURN
  1046	END MAKE.ROOM
  1047	
  1048	
  1049	%HEADING
  1050	OUT.WHERE
  1051	CR; DATOUT

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:49	 Page 28
NONAME.SIM	 Created: 6-Nov-1987 14:09

  1052	IF OPER # 0 THEN DO
  1053	   IF LISTFLG = ACCT.LST THEN [OUT('$Global account: ');&
  1054		OCTOUT(NUMBER)]
  1055	   IF LISTFLG = DIST.LST THEN [OUT('$District: ');NUMOUT(NUMBER)]
  1056	END ELSE [OUT('$Global account: '); OCTOUT(THIS.GAN)]
  1057	OUT('$$User         ')
  1058	IF OPER = 0 OR LISTFLG=ACCT.LST THEN OUT('Dist ')
  1059	IF OPER # 0 AND LISTFLG=DIST.LST THEN OUT('GAN    ')
  1060	OUT('UUN      License     Msg Init file$')
  1061	OUT('                   Zone     Disk    Mode    Q-in   Q-out  Core GFD  PC$')
  1062	OUT('                                             (in pages)$')
  1063	RETURN
  1064	END HEADING
  1065	
  1066	
  1067	
  1068	
  1069	%CHANGE.IT
  1070	
  1071	   DO CH.NUM OF ENT.MIN:ENT.MAX
  1072	
  1073	CH.LIC: ACTSUP.BIT _ A.S.SAV; TYM.BIT _ TYM.SAV
  1074	CH.MSG: SUPMSG.BIT _ SUP.SAV
  1075	
  1076	CH.INIT: IF I.BIT.SAV = 1 THEN DO
  1077	   IF INIT.BIT # 1 THEN [INIT.BIT _ 1; MAKE.ROOM; MOVE.DOWN; SIZE.INC]
  1078	   MOVE 2 FROM I.USER.SAV TO @LUD(TRU.BIT+6)
  1079	   LUD(BUD.INDEX+5) _ I.FILE.SAV
  1080	END ELSE DO
  1081	   IF INIT.BIT = 1 THEN DO
  1082		INIT.BIT _ 0; SIZE.DEC
  1083	   MOVE (SIZE.BLK-(L.INDEX+SIZE.LUD.ENT)) FROM &
  1084		@LUD(BUD.INDEX+8) TO @LUD(BUD.INDEX+5)
  1085	   MOVE 3 FROM ALL 0 TO L.BLK(126)
  1086	   END
  1087	END
  1088	
  1089	CH.ZONE: ZONE.BITS   _ ZONE.SAV; DAYLIG.BIT  _ DAY.L.SAV
  1090	CH.DET:  ATTACH.BIT  _ DET.SAV
  1091	CH.MODE: MODE.BIT    _ MODE.SAV
  1092	CH.STR:  LUD.TEMP(6) _ Q.IN.SAV; LUD.TEMP(7) _ Q.OUT.SAV
  1093	CH.CORE: CORE1.LUD   _ CORE.SAV; CORE.2.LUD  _ CORE.SAV
  1094	CH.GFD:  GFD.BIT     _ GFD.SAV
  1095	CH.PC:	 PC.BIT      _ PC.SAV
  1096	CH.ATT:  ATTLOG.BIT  _ ATTLOG.SAV
  1097	CH.MLJB: MLJOB.BIT   _ MLJOB.SAV
  1098	CH.NOLG: NOLOG.BIT   _ NOLOG.SAV
  1099	CH.ALOG: AUTOLOGOUT  _ AUTOLOG.SAV
  1100	CH.SLOG: STOPLOGOUT  _ STOPLOG.SAV
  1101	
  1102	END
  1103	RETURN 1
  1104	END CHANGE.IT
  1105	

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:52	 Page 29
NONAME.SIM	 Created: 6-Nov-1987 14:09

  1106	
  1107	%KNOW.ACCT
  1108		!SEE IF USER KNOWS ACCT.NO. OR ASK HIM NAME
  1109	IF QUERY('$DO YOU KNOW THE GLOBAL ACCOUNT NUMBER') = YES THEN RETURN 1
  1110	 MSG('$ENTER A USERS NAME FROM THE ACCOUNT: '); GETTOKEN(2)
  1111	MAKE.SIXBIT(TOKEN,USER.NAME,12)
  1112	IF OPEN.AND.LUD.LOOK(INPUT) = 0 THEN NOT.VALID ELSE NUMBER _ L.GAN
  1113	RETURN 0
  1114	END KNOW.ACCT
  1115	
  1116	
  1117	
  1118	%LIST.ALL.LISTS
  1119	    TEMP_ U.LIST.CMDS
  1120	    IF OPER = 1 THEN TEMP_ N.LIST.CMDS
  1121	    LISTABLE(TEMP,LIST.CMDS)
  1122	    COLON; P _ GETLINE(TEL)
  1123	    RETURN
  1124	END LIST.ALL.LISTS
  1125	
  1126	
  1127	
  1128	%CALL.UUO(AC,ADDR,SKPFLG)
  1129	LOCAL DIDIT:
  1130	^OCT 12 _AC
  1131	EXU(OCT 47, OCT 12, ADDR, DIDIT)
  1132	IF SKPFLG = 1 THEN [MSG('$UUO FAILED.'); EXIT]
  1133	DIDIT: RETURN ^OCT 12
  1134	END CALL.UUO
  1135	
  1136	
  1137	
  1138	%LUD.CHK
  1139		!READ THRU LUD, LOOKING UP AND VERIFYING EACH ENTRY IN DUL
  1140	LOCAL %CK.LUD.SEQ, %L.FIRST
  1141	LOCAL DULFLG, LP1:
  1142	IO.ADR _ CK.DUL
  1143	MSG('Verify LUD against DUL$')
  1144	SETCP(CH.LUD,0); L.BLKNO _ 1; LUD.READ; L.FIRST; GO LP1
  1145	LOOP DO
  1146	   LP1:WHILE LUD(4) = 0 THEN CK.LUD.SEQ
  1147	   IF DULFLG _ DUL.LOOK(LUD(0)) = 1 THEN DO
  1148		HASH(DUL(1),DUL(2))
  1149		IF NAME.HASH # LUD(4) THEN ERROR(HASH.BAD)
  1150		IF LOC.HASH # L.BLKNO THEN ERROR(BLKNO.BAD)
  1151	   END ELSE ERROR(NODUL.BAD)
  1152	   CK.LUD.SEQ
  1153	END
  1154	
  1155	%CK.LUD.SEQ
  1156	LOCAL J
  1157	L.INDEX + _ SIZE.LUD.ENT
  1158	%%L.FIRST
  1159	WHILE LUD(0) = 0 THEN DO

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:53	 Page 30
NONAME.SIM	 Created: 6-Nov-1987 14:09

  1160	   LOOP DO
  1161	   FOR J_1 TO SIZE.BLK-1-L.INDEX IF LUD(J)#0 THEN &
  1162		[BADBLK_L.BLKNO; ERROR(GARBAGE); REPEAT 0]
  1163	   REPEAT 0
  1164	   END
  1165	   INC L.BLKNO; LUD.READ
  1166	END
  1167	RETURN
  1168	END CK.LUD.SEQ
  1169	END LUDCHK
  1170	
  1171	
  1172	
  1173	%DULCHK
  1174		!READ THRU DUL, LOOKING UP ENTRY IN LUD
  1175	LOCAL ENDDUL:
  1176	IO.ADR _ ENDDUL
  1177	MSG('Verify DUL against LUD$')
  1178	DUL.READ; D.INDEX _ -3
  1179	LOOP DO
  1180	   DUL.SEQ
  1181	   IF LUD.LOOK(@DUL(1)) # 0 THEN DO
  1182		IF LUD(0) # DUL(0) THEN ERROR(BAD.PPNS)
  1183	   END ELSE ERROR(NOLUD.BAD)
  1184	END
  1185	ENDDUL: RETURN
  1186	END DULCHK
  1187	
  1188	
  1189	
  1190	%ERROR(ERR)
  1191		!TYPE OUT DATA ERRORS TO USER
  1192	DO ERR OF NODUL.BAD:OVER.BAD
  1193	   NODUL.BAD: OUT('NO DUL ENTRY FOR ');  PPN.OUT
  1194	   HASH.BAD: OUT('HASH OF '); PPN.OUT; EQUALS
  1195		OCTWD.OUT(NAME.HASH); CR; OUT('ENTRY IN LUD = ')
  1196		OCTWD.OUT(LUD(4))
  1197	   BLKNO.BAD: OUT('HASH BLK. NO. OF '); PPN.OUT; EQUALS
  1198		OCTOUT(LOC.HASH); CR; OUT('ENTRY IS IN BLK. NO. ')
  1199		NUMOUT(L.BLKNO); DOTS; NAM.OUT
  1200	   NOLUD.BAD: OUT('NO LUD ENTRY FOR '); OCTWD.OUT(DUL(0)); DOTS
  1201		NAM.OUT
  1202	   GARBAGE: OUT('GARBAGE IN BLOCK '); NUMOUT(BADBLK)
  1203		OUT(' NOT FOUND')
  1204	   BAD.PPNS: OUT('LUD PPN = '); PPN.OUT; DOTS
  1205		OUT('DUL PPN = '); OCTWD.OUT(DUL(0))
  1206	   OVER.BAD: OUT('OVERFLOW POINT IN '); OUT(BADFIL); OUT(' IS IN WORD ')
  1207		NUMOUT(BADBLK); OUT(' BLOCK '); NUMOUT(L.BLKNO)
  1208		CR; CLOSE.ALL; EXIT
  1209	END
  1210	CR
  1211	RETURN
  1212	END ERROR
  1213	

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:56	 Page 31
NONAME.SIM	 Created: 6-Nov-1987 14:09

  1214	END NONAME
Prog (Hi-seg) words used = 7444
Data (Lo-seg) words used = 635
No errors found

NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15


NONAME	PROGRAM
    NONAME        432
	LUDSEQ        475
	 LUDSEQ       483
	DULSEQ        487
	 DULSEQ       499
	UDLOOK        502
	 UDLOOK       506
	UDLOOK        509
	 UDLOOK       521
	ULLOOK        524
	 ULLOOK       536
	ERFLOW        539
	 ERFLOW       544
	ERFLOW        547
	 ERFLOW       552
	KIOERR        555
	 KIOERR       570
	NONAME        573
	 NONAME       608
	DOLIST        610
	 DOLIST       670
	CHANGE        673
	 CHANGE       692
	ONAMES        695
	 ONAMES       709
	TENTRY        712
	 TENTRY       894
	STEACH        897
	 STEACH       917
	RECORD        920
	 RECORD       942
	CHANGE        945
	 CHANGE      1026
	KEROOM       1030
	 KEROOM      1046
	EADING       1049
	 EADING      1064
	ANGEIT       1069
	 ANGEIT      1104
	OWACCT       1107
	 OWACCT      1114
	LLISTS       1118
	 LLISTS      1124
	ALLUUO       1128
	 ALLUUO      1134
	LUDCHK       1138
	    LUDSEQ       1155
	     LUDSEQ      1168
	 LUDCHK      1169
	DULCHK       1173
	 DULCHK      1186
	ERROR        1190
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15


	 ERROR       1212
     NONAME      1214
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

AC	  1128#	  1130
ACHBIT	   356#	   780	  1090
ADDR	  1128#	  1131
ADPPNS	   319#	  1182	  1204
ADR	   509#	   511
AEFERR	    55#
AILURE	   417#	   623	   676
ALLSET	   238#	   623	   641	   677	   930
ALLUUO	   188#	   581	   595	  1128#
ALTLOC	   126#	   606
AMACCT	   418#	   623	   641	   676	   700	   906
ANCALL	    85#
ANGEIT	   187#	   685	  1069#
ANLOOK	   201#	   600	   614
ARBAGE	   318#	   492	  1161	  1202
ARGCNT	   150#
ARGERR	    61#
ASHBAD	   315#	  1149	  1194
ASSAV	   209#	   737	   955	  1073
ATTSAV	   287#
AYLSAV	   210#	   767	   774	   975	  1089
BADBLK	   202#	   492	  1161	  1202	  1207
BADFIL	   202#	  1206
BIG	   363#	   398	   739	   761	   825	   833	   839	   931
BITSAV	   209#	   747	   960	  1076
BLOCK	   104#
CANCEL	    79#
CCNT	   948#	   963	   964	   965	   966
CCTGAN	   325#	   459
CCTLST	   235#	   363	   632	   729	  1053	  1058
CFECHO	   137#
CFN	    69#
CHALOG	   273#	   880	   906	  1021	  1099
CHANGE	   185#	   187#	   218#	   237#	   449	   673#	   677	   682	   798	   906	   909	   912	   945#
CHATT	   266#	   858	   900	  1012	  1096
CHBUD	   281#	   846	   912
CHCORE	   279#	   819	   909	   932	   998	  1093
CHDET	   265#	   780	   900	   932	   977	  1090
CHDUL	   204#	   461	   496	   526	   529	   549	   550	   583	   652	   660	   703	   927	   928	  1178
CHGFD	   264#	   830	   900	   932	  1009	  1094
CHINIT	   267#	   747	   900	   932	   959	  1076
CHKERR	   198#	   440	   461	   526	   557#	   558	   583	   646	   656	   696	  1050
CHLIC	   270#	   734	   906	   932	   954	  1073
CHLUD	   204#	   461	   480	   504	   513	   541	   542	   587	   639	   646	   657	   678	   686	   698
	  1041	  1144	  1165
CHMLJB	   271#	   868	   906	  1019	  1097
CHMODE	   261#	   798	   900	   932	   985	  1091
CHMSG	   260#	   741	   900	   932	   957	  1074
CHNOLG	   272#	   874	   906	  1020	  1098
CHNUM	   208#	   681	   688	   950	   952	  1071
CHOOSE	   179#	   444	   615	   972	   980	   988	  1014
CHOUT	   195#	   440	   461	   558	   646	   656	   696	  1050
CHPC	   263#	   836	   900	   932	  1010	  1095
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

CHRCM	   275#	   852	   906
CHROUT	   178#	   438	   465	   466	   579	   649	   650	   661	   662	   663	   664	   701	   707	   725
	   729	   730	   731	   739	   744	   745	   751	   754	   761	   769	   773	   775	   777	   788
	   803	   807	   813	   816	   817	   822	   827	   834	   840	   843	   849	   855	   865	   871
	   877	   883	   889	   932	   937	   973	   981	   989	  1015	  1051	  1194	  1195	  1197	  1198
	  1208	  1210
CHRUB	   280#	   842	   912
CHSLOG	   274#	   886	   906	  1022	  1100
CHSTR	   278#	   811	   909	   932	   993	  1092
CHZONE	   262#	   763	   900	   932	   969	  1089
CKDUL	   198#	   462#	  1142
CLIBUF	   108#
CLOBUF	   109#
CLOSE	    78#	   652	   660	   678	   686	   703	   927	   928
CMD	   204#	   444	   446	   577
CMDLST	   217#	   448
CNFERR	    45#
COLON	   370#	  1122
COMMA	   371#
CORERR	    64#	   559
CP	    98#	   686	  1041
CPW	   164#	   165
CR	   365#	   438	   465	   466	   650	   664	   701	   707	   725	   739	   744	   761	   769	   788
	   803	   817	   822	   827	   834	   840	   843	   849	   855	   865	   871	   877	   883	   889
	   932	   937	   973	   981	   989	  1015	  1051	  1195	  1198	  1208	  1210
CSBIT	   327#	   994
DASH	   366#	   773
DATOUT	   179#	   579	  1051
DBCONT	   298#	   785	   793
DBD	   297#	   784	   792
DBDTO	   299#	   782	   786	   790	   794
DBLK	   206#	   466	   490	   492	   496	   529	   530	   532	   533	   549	   550	   586	   588	   628
	   649	   661	   701	   723	   727	   761	  1148	  1178	  1181	  1182	  1199	  1200	  1201	  1205
DBLKNO	   206#	   492	   496
DBLOG	   296#	   782	   783	   790	   791
DDTOVR	   141#
DELETE	   106#
DENDIT	   222#	   451
DETSAV	   295#	   780	   980	   983	  1090
DEVERR	    65#
DEVNAM	   158#
DIDIT	  1129#	  1131	  1133#
DINDEX	   206#	   208#	   466	   481	   489	   490	   492	   496	   519	   529	   530	   531	   532	   533
	   549	   550	   586	   588	   628	   649	   661	   701	   723	   727	   751	   757	   761	  1079
	  1083	  1148	  1178	  1181	  1182	  1199	  1200	  1201	  1205
DINSTR	   221#	   458
DIRECT	    24#	   410	   412
DIST	   203#
DNAMES	   219#	   450
DOLIST	   185#	   448	   610#
DORNEW	   920#	   932	   936	   939
DOTS	   372#	  1199	  1200	  1204
DUL	   381#	   466	   490	   492	   530	   532	   533	   549	   586	   588	   628	   649	   661	   701
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

	   723	   727	   761	  1148	  1181	  1182	  1199	  1200	  1201	  1205
DULBAD	   314#	  1151	  1192	  1193
DULCHK	   184#	   462	  1173#
DULFLG	   202#	  1141#	  1147
DULSEQ	   184#	   487#	  1180
EADING	   182#	   639	  1049#
EGALAS	   395#	   396	   906
EGALCH	   397#
EITHER	   132#
ELEASE	   105#
ENDDUL	  1175#	  1176	  1185#
ENDLUD	   433#	   471#	   645	   655	   696
ENTMAX	   257#	   720	   899	   925	   936	   950	   952	  1071
ENTMIN	   256#	   950	   952	  1071
EOFERR	    57#	   557	   567
EQUALS	   367#	  1194	  1197
ERASE	    96#
ERCMDS	   229#	   444	   456
ERFLOW	   183#	   184#	   479	   517	   533	   539#	   547#
ERNAME	   196#	   373#	   505	   619	   628	   674	  1111
ERR	  1190#	  1192
ERRNUM	   127#	   557	   559	   569
ERROR	   188#	   492	  1149	  1150	  1151	  1161	  1182	  1183	  1190#
ERSION	   427#	   578
ETLINE	    93#	   441	  1122
ETMODE	    83#
ETNAME	   387#	   619	   674
ETOPTS	   301#	   302	   302#	   980	   981
ETTEMP	   420#	   481	   519
ETTERM	    89#
EWMAIL	   352#
EXCFN	   135#
EXTARG	   153#
EXTOUT	   134#
EXTQ	   156#
EXU	    71#	  1131
EXUF	    72#
FBSERR	    54#	   566
FIDP	   143#	   558
FILSIZ	   155#
FIXCP	   383#	   513	   529
FMDERR	    41#	   561
FNFERR	    51#	   563
FNMAX	    35#
FNMIN	    34#	    36
FPMSG	   119#
FREE	   166#
GAN	   203#	   465	   626
GANOUT	   384#	   662	   725	   730
GET	   111#
GETCMD	   198#	   439#	   444	   471	   472	   528	   576	   606	   622	   623	   645	   655	   675	   676
	   689	   969	  1112
GETGAN	   385#	   391
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

GETMEM	   102#
GETNUM	   177#	   681	   995	   996	  1000
GETOCT	   177#	   465	   626	   636
GETPPN	   391#	   465	   626
GETULC	   180#	   993
GETUUN	   386#	   391
GFDBIT	   338#	   830	  1094
GFDSAV	   211#	   830	  1009	  1094
GLBCMX	   163#	   165
GLBSZ	   165#	   166	   168
GLCNT	   169#
GOD	   201#	   596	   599	   912
GPAGES	   405#	   813	   816
HASH	   180#	   511	  1148
HISGAN	   200#	   459	   593	   623	   638	   641	   676	   700	   906	  1056
HISPPN	   200#	   581	   584	   593	   623	   641	   676
HISTYM	   200#	   592
HISUUN	   575#	   593	   596
HKOPER	   375#	   645	   655
I	  1033#
IFDERR	    44#	   562
ILESAV	   209#	   757	   959	   966	  1079
IMAGE	   168#	   619	   674
INPUT	    11#	   393	   412	   461	   587	   622	   646	   657	   675	   698	  1112
IOADR	   204#	   439	   557	   645	   655	   696	  1142	  1176
IOCS	    73#	   576
ISAREA	   201#	   590	   798	   985
ISDIST	   200#	   590
ISNAME	   200#	   586	   619	   674	   707
ISSING	   425#	   466	   630	   701	   927
ISTFLG	   196#	   471	   620	   625	   632	   677	   716	   722	   729	   730	   734	   739	   742	   749
	   760	   761	   764	   781	   798	   800	   812	   813	   815	   816	   817	   820	   822	   825
	   827	   832	   833	   834	   838	   839	   840	   842	   846	   852	   859	   869	   875	   881
	   887	   906	   909	   912	   931	  1053	  1055	  1058	  1059
ISTLST	   236#	   363	   730	  1055	  1059
ISTNUM	   712#	   716	   717	   720	   920#	   930	   932	   936	   939
ISTOUT	   380#	   663	   724	   728
IUSERR	    52#	   564
IZEBLK	   190#	   206	   207	   382	   383	   394	   400	   402	   406	   492	   541	   549	  1036	  1039
	  1041	  1043	  1083	  1161
IZEDEC	   423#	  1082
IZEINC	   422#	  1077
J	   488#	   492	  1156#	  1161
JOBBIT	   341#	   868	  1097
JOBSAV	   212#	   868	  1019	  1097
KALL	   203#
KEEPCP	   394#	   402
KEROOM	   187#	  1030#	  1077
KIOERR	   188#	   472	   555#
KNOBAD	   316#	  1150	  1197
LBLK	   207#	   466	   478	   479	   480	   481	   513	   514	   515	   516	   517	   519	   541	   542
	   590	   591	   592	   623	   630	   641	   648	   650	   659	   662	   663	   664	   676	   686
	   700	   701	   724	   725	   728	   730	   731	   735	   737	   741	   747	   751	   757	   763
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

	   767	   774	   780	   798	   799	   811	   814	   819	   830	   836	   843	   846	   848	   854	   858
	   868	   874	   880	   886	   906	   927	   969	   985	  1034	  1035	  1036	  1037	  1038	  1039
	  1040	  1041	  1043	  1044	  1073	  1074	  1077	  1078	  1079	  1081	  1082	  1083	  1085	  1089
	  1090	  1091	  1092	  1093	  1094	  1095	  1096	  1097	  1098	  1099	  1100	  1112	  1144	  1146
	  1147	  1149	  1157	  1159	  1161	  1165	  1182	  1193	  1194	  1196	  1197	  1204
LBLKNO	   207#	  1144	  1150	  1161	  1165	  1199	  1207
LEGAL	   396#	   623	   641	   676
LFIRST	  1140#	  1144	  1158#
LGAN	   329#	   384	   418	   641	  1112
LIDATE	   574#	   596
LIGBIT	   350#	   767	   774	  1089
LINDEX	   207#	   466	   478	   479	   480	   481	   513	   514	   515	   516	   517	   519	   541	   542
	   590	   591	   592	   623	   630	   641	   648	   650	   659	   662	   663	   664	   676	   700
	   701	   724	   725	   728	   730	   731	   735	   737	   741	   747	   751	   757	   763	   767
	   774	   780	   798	   799	   811	   814	   819	   830	   836	   843	   846	   848	   854	   858
	   868	   874	   880	   886	   906	   927	   969	   985	  1034	  1035	  1036	  1037	  1038	  1039
	  1040	  1042	  1044	  1073	  1074	  1077	  1078	  1079	  1081	  1082	  1083	  1089	  1090	  1091
	  1092	  1093	  1094	  1095	  1096	  1097	  1098	  1099	  1100	  1112	  1144	  1146	  1147	  1149
	  1157	  1159	  1161	  1165	  1182	  1193	  1194	  1196	  1197	  1204
LIST	   204#	   615	   617
LITTLE	   398#	   405	   716	   722	   734	   742	   749	   760	   764	   781	   800	   812	   815	   817
	   820	   822	   827	   832	   834	   838	   840	   842	   846	   852	   859	   869	   875	   881
	   887
LLEN	   162#	   163
LLISTS	   186#	   611	   616	  1118#
LLUD	   622#	   629
LNGERR	    58#
LOCWPF	   144#	   147	   148	   150	   151	   152	   153	   154	   155
LOGBIT	   335#	   340#	   858	   874	  1096	  1098
LOGOUT	   349#	   353#	   880	   886	  1099	  1100
LOGSAV	   212#	   213#	   858	   874	   880	   886	  1014	  1017	  1020	  1021	  1022	  1096	  1098	  1099
	  1100
LP1	  1141#	  1144	  1146#
LSTGAN	   242#	   632
LSTLUD	   244#	   655
LSTMAX	   925#
LSTPPN	   243#	   625
LSTRUB	   245#	   617	   645
LTNAME	     1#	    68	    69	    70	    71	    72	    73	    74	    75	    76	    77	    78	    79	    80
	    81	    82	    83	    84	    85	    86	    87	    88	    89	    90	    91	    92	    93	    94
	    95	    96	    97	    98	    99	   100	   101	   102	   103	   104	   105	   106	   107	   108
	   109	   110	   111	   112	   113	   114	   115	   116	   117	   118	   119	   120	   121	   122
	   123	   124	   125	   126	   127	   134	   135	   136	   137	   138	   139	   140	   141	   143
	   166	   168	   169
LUD	   399#	   401	   403	   416	   418	   419	   420	   422	   423	   426	   466	   478	   479	   480
	   481	   514	   515	   516	   517	   541	   590	   591	   592	   630	   641	   648	   650	   659
	   662	   663	   664	   701	   724	   725	   728	   730	   735	   737	   741	   747	   751	   757
	   763	   767	   774	   780	   798	   799	   819	   830	   836	   843	   846	   848	   854	   858
	   868	   874	   880	   886	   927	   969	   985	  1034	  1035	  1036	  1037	  1038	  1039	  1040
	  1044	  1073	  1074	  1077	  1078	  1079	  1081	  1082	  1083	  1089	  1090	  1091	  1093	  1094
	  1095	  1096	  1097	  1098	  1099	  1100	  1112	  1146	  1147	  1149	  1157	  1159	  1161	  1182
	  1196
LUDBAD	   317#	  1183	  1200
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

LUDCHK	   183#	   461	  1138#
LUDENT	   345#	   422	   423	   478	   515	  1034	  1037	  1039	  1083	  1157
LUDERR	   198#	   461	   472#	   504	   587	   639	   646	   657	   698
LUDSEQ	   183#	   475#	   639	   642	   646	   652	   657	   666	   698	   705	  1140#	  1146	  1152	  1155#
LUUN	   330#	   426
MAXARG	   145#	   148
MAXWPF	   148#
MDHELP	   220#	   453
MDUSER	   224#	   465
MEHASH	   195#	   514	  1149	  1195
MINARG	   146#	   147
MODE	   502#	   504
MODES	   306#	   802	   805	   988	   989
MOREIN	   377#	   385	   386	   387	   635
MSG	   117#	   441	   444	   453	   456	   458	   459	   461	   465	   528	   558	   560	   561	   562
	   563	   564	   565	   566	   567	   569	   578	   584	   588	   619	   622	   623	   626	   635
	   645	   646	   655	   656	   674	   675	   676	   680	   696	   717	   723	   724	   725	   734
	   743	   744	   749	   760	   765	   768	   783	   784	   785	   786	   801	   802	   812	   813
	   815	   816	   820	   822	   832	   834	   838	   839	   840	   843	   847	   848	   853	   854
	   855	   861	   862	   863	   865	   870	   871	   876	   877	   882	   883	   888	   889	   961
	   963	   969	   971	   973	   978	   981	   987	   989	   995	   996	   999	  1004	  1013	  1015
	  1050	  1110	  1112	  1122	  1132	  1143	  1177
MSGBIT	   336#	   741	  1074
NAMARG	   152#
NAMOUT	   347#	   466	   588	   649	   661	   701	   723	   727	   761	  1199	  1201
NCMDS	   226#	   229	   443	   446	   455
NEBITS	   351#	   763	  1089
NEW	    18#	   688
NGLIST	   393#	   639
NITBIT	   344#	   420	   747	  1077	  1081	  1082
NITTTY	   177#	   576
NMODES	   305#	   306	   988	   989
NO	   407#
NOCHG	   284#
NOESC	   121#
NONAME	   175#	   182#	   432#	   435	   573#
NTNAME	   255#	   716	   720	   722	   899	   900	   932	   936
NUMBER	   195#	   638	   641	   897#	   899	   900	   906	   909	   912	  1000	  1001	  1002	  1003	  1006
	  1007	  1053	  1055	  1112
NUMOUT	   178#	   569	   578	   650	   663	   664	   717	   724	   728	   813	   816	   826	   848	  1055
	  1199	  1202	  1207
NZONES	   308#	   309	   972	   973
OCHASH	   195#	   512	   513	  1150	  1198
OCTOUT	   178#	   662	   725	   730	   731	  1053	  1056	  1198
ODEBIT	   360#	   799	  1091
ODESAV	   210#	   799	   988	   991	  1091
OFFALT	   123#	   683
OLD	    19#	   623	   641	   677	   735	   737	   741	   747	   750	   757	   763	   767	   774	   780
	   799	   811	   814	   819	   830	   836	   858	   868	   874	   880	   886
OLDBLK	   203#	   512	   541
OLDOUT	   285#
ONALT	   124#	   471	   606	   687
ONALTC	   125#
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

ONAMES	   185#	   450	   695#
ONECHG	   409#	   969
ONESAV	   210#	   763	   972	  1089
OPEN	    74#	   440	   461	   504	   526	   558	   583	   587	   639	   646	   656	   657	   696	   698
	  1050
OPENP	    81#
OPER	   201#	   443	   455	   459	   595	   599	   614	   619	   623	   633	   641	   645	   655	   674
	   676	   729	   730	   906	   909	   954	   998	  1052	  1058	  1059	  1120
ORESAV	   211#	   819	  1007	  1093
ORTOUT	   179#	   773	   806
OSEALL	    84#	   439	   451	   558	  1208
OUT	   178#	   466	   630	   701	   736	   738	   745	   771	   791	   792	   793	   794	   822	   832
	   833	   838	   839	   927	  1053	  1055	  1056	  1057	  1058	  1059	  1060	  1061	  1062	  1193
	  1194	  1195	  1197	  1198	  1199	  1200	  1202	  1203	  1204	  1205	  1206	  1207
OUTMSG	    14#
OUTPUT	    13#	   411	   414
OUTSAV	   211#	   814	   996	  1092
OVBLK	   331#	   541	  1040
OWACCT	   187#	   634	  1107#
P	   195#	   441	   465	   611	   619	   626	   635	   674	   963	   964	  1122
PACK	    30#
PANESE	   326#	   798	   985
PCBIT	   342#	   836	  1095
PCSAV	   211#	   836	  1010	  1095
PENDUL	   412#	   461	   526	   583
PENLUD	   410#	   461	   504	   587	   639	   646	   657	   698
PENTEL	   411#	   440	   558
PERPPN	   413#	   969
PINDEX	   208#	   476	   481	   510	   519	   811	   814	  1092
PLNCHK	    86#
PLNW	    87#
PP	   524#	   528	   529	   530
PPNARG	   151#
PPNOUT	   416#	   425	  1193	  1194	  1197	  1204
PPRINT	   120#
PRINT	   115#
PRINTC	   116#
PRTERR	    53#	   565
PRVARG	   154#
PSPACE	   424#	   579	   761	   777
PUT	   112#
PUTC	   114#
PUTX	   113#
QINSAV	   211#	   811	   995	  1092
QUERY	   177#	   955	   957	   960	   975	  1009	  1010	  1019	  1020	  1021	  1022	  1109
R	    92#
RACTER	    29#	   411	   414
RB	   101#	   480	   496	   513	   529	   542	   550	  1144	  1165	  1178
RCMBIT	   359#	   854
RE1LUD	   361#	   819	  1093
RE2LUD	   355#	  1093
RECORD	   186#	   623	   641	   677	   688	   920#
RENAME	   107#
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

RLSMEM	   103#
RSALT	   140#
RSBRK	   139#
RUBBIT	   337#	   648	   843
SAMUSR	   419#	   623	   641	   676
SAVCP	   202#
SAVENT	  1033#	  1035	  1038	  1044
SAVLST	   714#	   735	   736	   737	   738	   741	   743	   745	   747	   748	   763	   765	   767	   768
	   771	   772	   774	   775	   780	   782	   790	   799	   802	   805	   811	   812	   813	   814
	   815	   816	   819	   821	   830	   831	   836	   837	   858	   860	   868	   870	   874	   876
	   880	   882	   886	   888
SCMODE	   354#
SEQFLG	   205#	   439	   472	   639	   646	   657	   698
SEQUEN	    23#	   411	   414
SERFLG	   201#	   602
SERLST	   234#	   620	   625
SERSAV	   209#	   754	   959	   962	  1078
SETCFN	    70#
SETCP	    97#	   513	   529	   541	   549	   686	  1041	  1144
SETFID	    75#
SETFIP	    82#
SETRWE	   118#
SETTAB	    88#
SITE	   203#
SIXBIT	   178#	   619	   674	   962	   966	  1111
SIXOUT	   178#	   466	   588	   649	   661	   701	   707	   723	   727	   751	   754	   757	   761	  1199
	  1201
SIZE	    99#	   587
SKPFLG	  1128#	  1132
SP	   368#	   424	   649	   661	   662	   663	   725	   729	   730	   731	   739	   745	   807	   813
	   816
SPACE	   369#	   424	   649	   661	   662	   663	   725	   729	   730	   731	   739	   745	   807	   813
	   816
SPOUT	   179#	   663	   717	   724	   728	   812	   815	   825
STABLE	   177#	   456	   973	   981	   989	  1015	  1121
START	   435#
STBITS	   333#	   380	   590	   798	   985
STCMDS	   247#	   248#	   250	   250#	   613	   614	   615	  1119	  1120	  1121
STEACH	   186#	   897#	   932	   936	   939
STS	    68#
STUSER	   241#	   617	   619
SUPBIT	   358#	   591	   737	  1073
SUPSAV	   209#	   741	   957	  1074
TABOFF	    91#
TALLOW	   288#	   860	   861
TEL	    36#	   441	  1122
TELCHK	    76#
TELERR	    59#
TEMP	   208#	   442	   443	   444	   454	   455	   456	   465	   466	   595	   596	   600	   611	   619
	   626	   627	   630	   635	   674	   686	   772	   773	   805	   806	   821	   824	   825	   826
	   964	   993	   994	  1041	  1077	  1119	  1120	  1121
TEMP1	   208#	   613	   614	   615	  1077
TENTRY	     2#	   186#	   712#	   900	   906	   909	   912
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Symbol cross reference

TFORCE	   289#	   862
THISAS	   200#	   591	   619	   623	   641	   674	   676	   697	   906
TMFERR	    40#	   559	   560
TMP	  1033#	  1034	  1035	  1036	  1038	  1044
TMP1	   948#	  1001	  1002
TOBOTH	   131#
TOKEN	   193#	   461	   580	   619	   646	   656	   674	   696	   962	   963	   966	  1050	  1111
TOTERM	   129#
TOTOUT	   130#
TPRMPT	    90#
TRUBIT	   339#	   403	   420	   848	  1078
TTDEST	   136#
TTECHO	   138#
TTNONE	   290#	   860	   863
TTOKEN	   177#	   441	   461	   612	   619	   646	   656	   674	   696	   961	   963	   971	   979	   987
	  1013	  1050	  1110
TTOPTS	   292#	   293	   293#	  1014	  1015
TTYLEN	   110#
TVALID	   408#	   622	   675	  1112
TWDOUT	   178#	   466	   584	   630	   701	   927	  1193	  1194	  1195	  1196	  1197	  1200	  1204	  1205
TWHERE	   414#	   461	   646	   656	   696	  1050
TYMBIT	   357#	   592	   650	   664	   735	   846	  1073
TYMSAV	   209#	   735	   955	  1073
TYPE	   203#	   897#	   900	   906	   909	   912
UCMDS	   227#	   442	   454
UDBLKS	   406#	   587
UDLOOK	   183#	   502#	   505	   509#	   588	   622	   675	   684	  1112	  1181
UDREAD	   400#	   480	   513	   542	  1144	  1165
UDSIZE	   208#	   587	  1040	  1041
UDTEMP	   401#	   811	   814	  1092
UDWRIT	   402#	   686	  1041
UFDUMP	    80#
ULLOOK	   184#	   466	   524#	   527#	   584	   627	   648	   659	   701	   927	  1147
ULREAD	   382#	   496	   529	   550	  1178
UPDATE	    12#	   684
USRNAM	   157#
UUN	   200#	   465	   626
UUNOUT	   426#	   725	   731
VEDOWN	   403#	  1077
VERBAD	   320#	  1192	  1206
VERIFY	   223#	   461
W	    94#
WB	   100#	   686	  1041
WFID	    77#	   558
WHAT	   428#	   444
WHICH	   712#	   735	   737	   741	   747	   750	   757	   763	   767	   774	   780	   799	   811	   814
	   819	   830	   836	   858	   868	   874	   880	   886
WORD	    28#	   410	   412
WPF	   147#
WX	    95#
YES	   429#	   960	  1109
YESESC	   122#
ZONES	   309#	   765	   771	   772	   972	   973
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Macro/Opdef cross reference

ACHBIT	   356#	   780	  1090
ADPPNS	   319#	  1182	  1204
AEFERR	    55#
AILURE	   417#	   623	   676
ALLSET	   238#	   623	   641	   677	   930
AMACCT	   418#	   623	   641	   676	   700	   906
ARBAGE	   318#	   492	  1161	  1202
ARGCNT	   150#
ARGERR	    61#
ASHBAD	   315#	  1149	  1194
BIG	   363#	   398	   739	   761	   825	   833	   839	   931
CCTGAN	   325#	   459
CCTLST	   235#	   363	   632	   729	  1053	  1058
CHALOG	   273#	   880	   906	  1021	  1099
CHANGE	   218#	   237#	   449	   677	   798	   906	   909	   912
CHATT	   266#	   858	   900	  1012	  1096
CHBUD	   281#	   846	   912
CHCORE	   279#	   819	   909	   932	   998	  1093
CHDET	   265#	   780	   900	   932	   977	  1090
CHGFD	   264#	   830	   900	   932	  1009	  1094
CHINIT	   267#	   747	   900	   932	   959	  1076
CHLIC	   270#	   734	   906	   932	   954	  1073
CHMLJB	   271#	   868	   906	  1019	  1097
CHMODE	   261#	   798	   900	   932	   985	  1091
CHMSG	   260#	   741	   900	   932	   957	  1074
CHNOLG	   272#	   874	   906	  1020	  1098
CHPC	   263#	   836	   900	   932	  1010	  1095
CHRCM	   275#	   852	   906
CHRUB	   280#	   842	   912
CHSLOG	   274#	   886	   906	  1022	  1100
CHSTR	   278#	   811	   909	   932	   993	  1092
CHZONE	   262#	   763	   900	   932	   969	  1089
CMDLST	   217#	   448
CNFERR	    45#
COLON	   370#	  1122
COMMA	   371#
CORERR	    64#	   559
CPW	   164#	   165
CR	   365#	   438	   465	   466	   650	   664	   701	   707	   725	   739	   744	   761	   769	   788
	   803	   817	   822	   827	   834	   840	   843	   849	   855	   865	   871	   877	   883	   889
	   932	   937	   973	   981	   989	  1015	  1051	  1195	  1198	  1208	  1210
CSBIT	   327#	   994
DASH	   366#	   773
DBCONT	   298#	   785	   793
DBD	   297#	   784	   792
DBDTO	   299#	   782	   786	   790	   794
DBLOG	   296#	   782	   783	   790	   791
DENDIT	   222#	   451
DEVERR	    65#
DEVNAM	   158#
DINSTR	   221#	   458
DIRECT	    24#	   410	   412
DNAMES	   219#	   450
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Macro/Opdef cross reference

DOTS	   372#	  1199	  1200	  1204
DUL	   381#	   466	   490	   492	   530	   532	   533	   549	   586	   588	   628	   649	   661	   701
	   723	   727	   761	  1148	  1181	  1182	  1199	  1200	  1201	  1205
DULBAD	   314#	  1151	  1192	  1193
EGALAS	   395#	   396	   906
EGALCH	   397#
EITHER	   132#
ENTMAX	   257#	   720	   899	   925	   936	   950	   952	  1071
ENTMIN	   256#	   950	   952	  1071
EOFERR	    57#	   557	   567
EQUALS	   367#	  1194	  1197
ERNAME	   373#	   619	   674
ERSION	   427#	   578
ETNAME	   387#	   619	   674
ETOPTS	   301#	   302	   980	   981
ETTEMP	   420#	   481	   519
EWMAIL	   352#
EXTARG	   153#
EXTQ	   156#
FBSERR	    54#	   566
FILSIZ	   155#
FIXCP	   383#	   513	   529
FMDERR	    41#	   561
FNFERR	    51#	   563
FNMAX	    35#
FNMIN	    34#	    36
GANOUT	   384#	   662	   725	   730
GETGAN	   385#	   391
GETPPN	   391#	   465	   626
GETUUN	   386#	   391
GFDBIT	   338#	   830	  1094
GLBCMX	   163#	   165
GLBSZ	   165#	   166	   168
GPAGES	   405#	   813	   816
HKOPER	   375#	   645	   655
IFDERR	    44#	   562
INPUT	    11#	   393	   412	   461	   587	   622	   646	   657	   675	   698	  1112
ISSING	   425#	   466	   630	   701	   927
ISTLST	   236#	   363	   730	  1055	  1059
ISTOUT	   380#	   663	   724	   728
IUSERR	    52#	   564
IZEBLK	   190#	   206	   207	   382	   383	   394	   400	   402	   406	   492	   541	   549	  1036	  1039
	  1041	  1043	  1083	  1161
IZEDEC	   423#	  1082
IZEINC	   422#	  1077
JOBBIT	   341#	   868	  1097
KEEPCP	   394#	   402
KNOBAD	   316#	  1150	  1197
LEGAL	   396#	   623	   641	   676
LGAN	   329#	   384	   418	   641	  1112
LIDATE	   574#	   596
LIGBIT	   350#	   767	   774	  1089
LITTLE	   398#	   405	   716	   722	   734	   742	   749	   760	   764	   781	   800	   812	   815	   817
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Macro/Opdef cross reference

	   820	   822	   827	   832	   834	   838	   840	   842	   846	   852	   859	   869	   875	   881	   887
LLEN	   162#	   163
LNGERR	    58#
LOCWPF	   144#	   147	   148	   150	   151	   152	   153	   154	   155
LOGBIT	   335#	   340#	   858	   874	  1096	  1098
LOGOUT	   349#	   353#	   880	   886	  1099	  1100
LSTGAN	   242#	   632
LSTLUD	   244#	   655
LSTMAX	   925#
LSTPPN	   243#	   625
LSTRUB	   245#	   617	   645
LTNAME	     1#	    68	    69	    70	    71	    72	    73	    74	    75	    76	    77	    78	    79	    80
	    81	    82	    83	    84	    85	    86	    87	    88	    89	    90	    91	    92	    93	    94
	    95	    96	    97	    98	    99	   100	   101	   102	   103	   104	   105	   106	   107	   108
	   109	   110	   111	   112	   113	   114	   115	   116	   117	   118	   119	   120	   121	   122
	   123	   124	   125	   126	   127	   134	   135	   136	   137	   138	   139	   140	   141	   143
	   166	   168	   169
LUD	   399#	   401	   403	   416	   418	   419	   420	   422	   423	   426	   466	   478	   479	   480
	   481	   514	   515	   516	   517	   541	   590	   591	   592	   630	   641	   648	   650	   659
	   662	   663	   664	   701	   724	   725	   728	   730	   735	   737	   741	   747	   751	   757
	   763	   767	   774	   780	   798	   799	   819	   830	   836	   843	   846	   848	   854	   858
	   868	   874	   880	   886	   927	   969	   985	  1034	  1035	  1036	  1037	  1038	  1039	  1040
	  1044	  1073	  1074	  1077	  1078	  1079	  1081	  1082	  1083	  1089	  1090	  1091	  1093	  1094
	  1095	  1096	  1097	  1098	  1099	  1100	  1112	  1146	  1147	  1149	  1157	  1159	  1161	  1182
	  1196
LUDBAD	   317#	  1183	  1200
LUDENT	   345#	   422	   423	   478	   515	  1034	  1037	  1039	  1083	  1157
LUUN	   330#	   426
MAXARG	   145#	   148
MAXWPF	   148#
MDHELP	   220#	   453
MDUSER	   224#	   465
MINARG	   146#	   147
MOREIN	   377#	   385	   386	   387	   635
MSGBIT	   336#	   741	  1074
NAMARG	   152#
NAMOUT	   347#	   466	   588	   649	   661	   701	   723	   727	   761	  1199	  1201
NCMDS	   226#	   229	   443	   446	   455
NEBITS	   351#	   763	  1089
NEW	    18#	   688
NGLIST	   393#	   639
NITBIT	   344#	   420	   747	  1077	  1081	  1082
NMODES	   305#	   306	   988	   989
NO	   407#
NOCHG	   284#
NTNAME	   255#	   716	   720	   722	   899	   900	   932	   936
NZONES	   308#	   309	   972	   973
ODEBIT	   360#	   799	  1091
OLD	    19#	   623	   641	   677	   735	   737	   741	   747	   750	   757	   763	   767	   774	   780
	   799	   811	   814	   819	   830	   836	   858	   868	   874	   880	   886
OLDOUT	   285#
ONECHG	   409#	   969
OUTMSG	    14#
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Macro/Opdef cross reference

OUTPUT	    13#	   411	   414
OVBLK	   331#	   541	  1040
PACK	    30#
PANESE	   326#	   798	   985
PCBIT	   342#	   836	  1095
PENDUL	   412#	   461	   526	   583
PENLUD	   410#	   461	   504	   587	   639	   646	   657	   698
PENTEL	   411#	   440	   558
PERPPN	   413#	   969
PPNARG	   151#
PPNOUT	   416#	   425	  1193	  1194	  1197	  1204
PRTERR	    53#	   565
PRVARG	   154#
PSPACE	   424#	   579	   761	   777
RACTER	    29#	   411	   414
RCMBIT	   359#	   854
RE1LUD	   361#	   819	  1093
RE2LUD	   355#	  1093
RUBBIT	   337#	   648	   843
SAMUSR	   419#	   623	   641	   676
SCMODE	   354#
SEQUEN	    23#	   411	   414
SERLST	   234#	   620	   625
SP	   368#	   424	   649	   661	   662	   663	   725	   729	   730	   731	   739	   745	   807	   813
	   816
SPACE	   369#	   424	   649	   661	   662	   663	   725	   729	   730	   731	   739	   745	   807	   813
	   816
STBITS	   333#	   380	   590	   798	   985
STCMDS	   247#	   248#	   250	   613	   614	  1119	  1120
STUSER	   241#	   617	   619
SUPBIT	   358#	   591	   737	  1073
TALLOW	   288#	   860	   861
TEL	    36#	   441	  1122
TELERR	    59#
TENTRY	     2#
TFORCE	   289#	   862
TMFERR	    40#	   559	   560
TOBOTH	   131#
TOTERM	   129#
TOTOUT	   130#
TRUBIT	   339#	   403	   420	   848	  1078
TTNONE	   290#	   860	   863
TTOPTS	   292#	   293	  1014	  1015
TVALID	   408#	   622	   675	  1112
TWHERE	   414#	   461	   646	   656	   696	  1050
TYMBIT	   357#	   592	   650	   664	   735	   846	  1073
UCMDS	   227#	   442	   454
UDBLKS	   406#	   587
UDREAD	   400#	   480	   513	   542	  1144	  1165
UDTEMP	   401#	   811	   814	  1092
UDWRIT	   402#	   686	  1041
ULREAD	   382#	   496	   529	   550	  1178
UPDATE	    12#	   684
NONAME	 SIMPL 25.00	6-Nov-1987 19:07:15
Macro/Opdef cross reference

USRNAM	   157#
UUNOUT	   426#	   725	   731
VEDOWN	   403#	  1077
VERBAD	   320#	  1192	  1206
VERIFY	   223#	   461
WHAT	   428#	   444
WORD	    28#	   410	   412
WPF	   147#
YES	   429#	   960	  1109  t}WF