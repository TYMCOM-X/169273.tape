!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (SYS)*.*/O

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (CARL)*.*/O

(CARL)TITLES.SDS        
{Page 4}
1188            T20 KMC~LOD/TYMSRV development        F  [MIKH,BILS] 50

(CARL)GAN3.DIR        
{Page 1}
LP20~FS  SAV       5   5-NOV-80
LP20~FS  MAC       9   5-NOV-80
KMC~     DOC       3  13-OCT-80
KMC~DOC  DOC       3  19-SEP-80
KMC~DOC  RNO       3  19-SEP-80
KMC~BLD  MEM       2  11-SEP-80
KMC~LDR  CMD       2  11-SEP-80
KMC~TAB  MAC       3  10-SEP-80
KMC~SUB  MAC       8  10-SEP-80
KMC~KOD  MAC       9  10-SEP-80
KMC~COD  CMD       2  10-SEP-80
KMC~DEF  MAC       5  10-SEP-80
KMC~MAC  MAC       6  10-SEP-80
KMC~LOD  SAV       2   9-SEP-80
KMC~LOD  MAC       4   9-SEP-80
KMC~COD  BIN       3   4-SEP-80
LP20~FS  SAV       5  24-FEB-81

(CARL)SCNSER.XF3        
{Page 24}
IFKMC~<
	OPDEF	UUILDB	[101000,,0]	;KMC~ ILDB
	OPDEF	UUIDPB	[102000,,0]	;KMC~ IDPB
	>;END IFKMC~
IFNKMC~<
	>;END IFNKMC~

{Page 32}
IFKMC~<	CAIL	T1,LPERDR	;DETERMINE LINES ON 1ST NODE
>;END IFKMC~
IFKMC~<	MOVEI	T1,<4320000&<7777_<3*MAXDR>>>_-9
>;END IFKMC~

{Page 33}
IFNKMC~<	PUSHJ	P,CLSCHR	;JUST FOR THE SAKE OF GOOD FORM
>;END IFNKMC~
IFKMC~<	PUSHJ	P,MDRUP		;GET 3-BIT UP FLAGS
>;END IFKMC~
IFKMC~<	PUSHJ	P,SNDHSI	;SEE IF ANY DRs NEED A TYPHSI MSG ETC.
>;END IFKMC~

{Page 34}
IFKMC~<
>;END IFKMC~
IFKMC~<	CAIN	P1,TYPANS	;ALSO THESE MESSAGES W/KMC~
>;END IFKMC~

{Page 36}
TYPANS:	JRST KMC~ANS	;1 ANSWERED, IGNORED BY KL & KI
TYPCRS:	JRST KMC~RES	;3 BASE CRASH, IGNORED BY KL & KI

{Page 38}
IFNKMC~<	JRST ZAPLOG>	;  TREAT AS CIRCUIT ZAPPER
IFKMC~<	JRST	[AOS LOGZAP	;NOTE THE ZAP
		AOJA P4,SCNIN1]>;END IFKMC~

{Page 43}
;Following code commented out since there are no KMC~'s on
;IFKMC~<	PUSHJ P,MDRUP		;GET UP DRs
;>;IFKMC~.END

{Page 47}
;;;;;;;; MORE KMC~ DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IFKMC~<	MOVE P1,IRPMSG
	  STOPCD		;CRASH ON KMC~ IRING OVERWRITE or bad P4
>;END_IFKMC~
;;;;;;;; END KMC~ DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

{Page 96}
IFKMC~	<CSHIVL>		;INVALIDATE 2020 CACHE

{Page 97}
IFKMC~<
	>;END IFKMC~
IFNKMC~<
>;END IFNKMC~

{Page 119}
IFKMC~<	MOVEI P4,MXLIN	;FOR EACH LINE
	SOSGE TIMMIN	;KMC~ MINUTE COUNTER
	>;END IFKMC~

{Page 187}
IFNKMC~<	LDB	U, LDPLNO
	SKIPA>;IFNKMC~.END	;DON'T SET TO CMD PORT IF KMC~.

{Page 189}
IFKMC~<	LDB T3,[POINT 2,P1,2]	;GET TYMBASE NUMBER
	PUSHJ P,KMC~GUP		;T1/ TYMBASE "UP" BITS
>;END_IFKMC~

{Page 198}
IFNKMC~<
>;END IFNKMC~
IFKMC~<
>;END IFKMC~

{Page 200}
IFNKMC~<
>;END IFNKMC~
IFKMC~<
>;END IFKMC~

{Page 207}
IFKMC~<
>;END IFKMC~
IFKMC~<	PUSHJ P,RELKMC~>		;RELEASE UBA SLOT
IFKMC~<
RELKMC~:	PUSH	P,T1		;SAVE T1
;MISC KMC~ RELATED ROUTINES
EXTERNAL KMC~RST,KMC~CAC,KMC~SUP,KMC~GUP,KMC~GAC,KMC~GAV
SCNDRD:			;WILL SKIP A MINUTE WHEN KMC~RES IS CALLED
	PUSHJ P,KMC~RST		;T1/ DOWN DR BITS
	MOVE	T1,DRMTIM	;;;;;;;START KMC~ DEBUG CODE
	PUSHJ	P,KMC~GAV
	PUSHJ	P,KMC~GAC
	CAMN	T1,KMC~LAS	;SAME AS LAST TIME?
	MOVEM	T1,KMC~LAS
	MOVE	T2,KMC~PDP
	MOVEM	T1,KMC~FLG(T2)
	MOVEM	T2,KMC~PDP	;;;;;;;;END KMC~ DEBUG CODE
MDRUP:	PUSHJ	P,KMC~GUP
>;END IFKMC~
KMC~RES:			;CALLED WHEN KMC~ DETECTS A DR HAS GONE SOUTH
IFNKMC~	<AOJA P4,SCNIN1>;IGNORE ANSWERED MESSAGE
IFKMC~<
	MOVEM	T1,TIMDRD	;RESET KMC~ CHECKUP TIMER
	PUSHJ	P,KMC~CAC	;CLEAR DR'S ACTIVE BIT & UP BIT
	>;END IFKMC~
KMC~ANS:			;CALLED WHEN KMC~/DR RESPONDS TO A 41 WE SENT IT
IFNKMC~	<AOJA P4,SCNIN1>;IGNORE BASE CRASH MESSAGE
IFKMC~<
	PUSHJ	P,KMC~SUP	;SET DR'S ANSWERED BIT
	  JRST	KMC~SHT		;YES, GO SET UP DRMSHT
KMC~SHT:	MOVE	T2,DRMSHT
>;END IFKMC~

{Page 271}
IFKMC~<
	SKIPGE KMC~DO		;GREATER OR EQUAL 0 NOT KMC~ MANUAL MODE
	 MOVEI T1,CMFCKM##	;DO FORCE KMC~ LOAD
>;END IFKMC~

{Page 273}
IFKMC~<EXTERNAL KMC~DO>

{Page 275}
IFKMC~<
KMC~LAS:	0	;LAST KMC~GAV,KMC~GAC
KMC~PDP::	0
KMC~FLG::	REPEAT ^D64,<EXP 0>;KMC~ ACTIVE FLAG HISTORY
	>;END IFKMC~

{Page 276}
  ;IFNKMC~	<^D500>	;LARGE QUOTA FOR UNREAD INPUT CHARACTERS
  ;IFKMC~	<^D2000>;(LOSE CHARACTERS WHEN IT'S EXCEEDED)

(CARL)SCNSER.MAC        
{Page 24}
IFKMC~<
	OPDEF	UUILDB	[101000,,0]	;KMC~ ILDB
	OPDEF	UUIDPB	[102000,,0]	;KMC~ IDPB
	>;END IFKMC~
IFNKMC~<
	>;END IFNKMC~

{Page 32}
IFNKMC~<	PUSHJ P,CLSCHR	;JUST FOR THE SAKE OF GOOD FORM
>;END IFNKMC~
IFKMC~<	PUSHJ	P,MDRUP		;GET 3-BIT UP FLAGS
	SETZM	UPSHUT>;END IFKMC~
IFKMC~	<PUSHJ P,SNDHSI	;SEE IF ANY DRs NEED A TYPHSI MSG ETC.
	  JRST SCNIN>;END IFKMC~

{Page 33}
IFKMC~,<
>;END IFKMC~
IFKMC~,<
	CAIE	P1,TYPANS	;(1) Answered - ;ALSO THESE MESSAGES W/KMC~
>;END IFKMC~

{Page 34}
TYPANS:	JRST	KMC~ANS		; 1 ANSWERED, IGNORED BY KL & KI
TYPCRS:	JRST	KMC~RES		; 3 BASE CRASH, IGNORED BY KL & KI

{Page 40}
;Following code commented out since there are no KMC~'s on
;IFKMC~<	PUSHJ P,MDRUP		;GET UP DRs
;>;IFKMC~.END

{Page 44}
;;;;;;;; MORE KMC~ DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IFKMC~<	MOVE	P1,IRPMSG
	 STOPCD 		;CRASH ON KMC~ IRING OVERWRITE or bad P4
>;END_IFKMC~
;;;;;;;; END KMC~ DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

{Page 92}
IFKMC~	<CSHIVL>		;INVALIDATE 2020 CACHE

{Page 93}
IFKMC~,<
	>;END IFKMC~
IFNKMC~,<
>;END IFNKMC~

{Page 115}
IFKMC~,<	MOVEI	P4,MXLIN	;FOR EACH LINE
	SOSGE	TIMMIN		;KMC~ MINUTE COUNTER
>;END IFKMC~

{Page 183}
IFNKMC~<	LDB	U, LDPLNO
	SKIPA>;IFNKMC~.END	;DON'T SET TO CMD PORT IF KMC~.

{Page 185}
IFKMC~,<
	PUSHJ	P,KMC~GUP	;T1/ TYMBASE "UP" BITS
> ; END IFKMC~

{Page 194}
IFNKMC~<
>;END IFNKMC~
IFKMC~<
>;END IFKMC~

{Page 196}
IFNKMC~<
>;END IFNKMC~
IFKMC~<
>;END IFKMC~

{Page 203}
IFKMC~<
>;END IFKMC~
IFKMC~<	PUSHJ P,RELKMC~>		;RELEASE UBA SLOT
IFKMC~,<
RELKMC~:	PUSH	P,T1		;SAVE T1
;MISC KMC~ RELATED ROUTINES
EXTERNAL KMC~RST,KMC~CAC,KMC~SUP,KMC~GUP,KMC~GAC,KMC~GAV
SCNDRD:			;WILL SKIP A MINUTE WHEN KMC~RES IS CALLED
	PUSHJ P,KMC~RST		;T1/ DOWN DR BITS
	MOVE	T1,DRMTIM	;;;;;;;START KMC~ DEBUG CODE
	PUSHJ	P,KMC~GAV
	PUSHJ	P,KMC~GAC
	CAMN	T1,KMC~LAS	;SAME AS LAST TIME?
	MOVEM	T1,KMC~LAS
	MOVE	T2,KMC~PDP
	MOVEM	T1,KMC~FLG(T2)
	MOVEM	T2,KMC~PDP	;;;;;;;;END KMC~ DEBUG CODE
MDRUP:	PUSHJ	P,KMC~GUP
>;END IFKMC~
KMC~RES:				;CALLED WHEN KMC~ DETECTS A DR HAS GONE SOUTH
IFNKMC~,<AOJA P4,SCNIN1>		;IGNORE ANSWERED MESSAGE
IFKMC~,<
	MOVEM	T1,TIMDRD	;RESET KMC~ CHECKUP TIMER
	PUSHJ	P,KMC~CAC	;CLEAR DR'S ACTIVE BIT & UP BIT
>;END IFKMC~
KMC~ANS:				;CALLED WHEN KMC~/DR RESPONDS TO A 41 WE SENT IT
IFNKMC~,<AOJA P4,SCNIN1>		;IGNORE BASE CRASH MESSAGE
IFKMC~,<
	PUSHJ	P,KMC~SUP	;SET DR'S ANSWERED BIT
	  JRST	KMC~SHT		;YES, GO SET UP DRMSHT
KMC~SHT:	MOVE	T2,DRMSHT
>;END IFKMC~

{Page 265}
IFKMC~<
	SKIPGE KMC~DO		;GREATER OR EQUAL 0 NOT KMC~ MANUAL MODE
	 MOVEI T1,CMFCKM##	;DO FORCE KMC~ LOAD
>;END IFKMC~

{Page 266}
IFKMC~<	CAIL	T1,LPERDR	;DETERMINE LINES ON 1ST NODE
>;END IFKMC~
IFKMC~<	MOVEI	T1,<4320000&<7777_<3*MAXDR>>>_-9
>;END IFKMC~

{Page 268}
IFKMC~<EXTERNAL KMC~DO>

{Page 270}
IFKMC~<
KMC~LAS:	0	;LAST KMC~GAV,KMC~GAC
KMC~PDP::	0
KMC~FLG::	REPEAT ^D64,<EXP 0>;KMC~ ACTIVE FLAG HISTORY
	>;END IFKMC~

{Page 271}
  ;IFNKMC~	<^D500>	;LARGE QUOTA FOR UNREAD INPUT CHARACTERS
  ;IFKMC~	<^D2000>;(LOSE CHARACTERS WHEN IT'S EXCEEDED)

(CARL)SCNSER.N10        
{Page 24}
IFKMC~<
	OPDEF	UUILDB	[101000,,0]	;KMC~ ILDB
	OPDEF	UUIDPB	[102000,,0]	;KMC~ IDPB
	>;END IFKMC~
IFNKMC~<
	>;END IFNKMC~

{Page 32}
IFNKMC~<	PUSHJ P,CLSCHR	;JUST FOR THE SAKE OF GOOD FORM
>;END IFNKMC~
IFKMC~<	PUSHJ	P,MDRUP		;GET 3-BIT UP FLAGS
	SETZM	UPSHUT>;END IFKMC~
IFKMC~	<PUSHJ P,SNDHSI	;SEE IF ANY DRs NEED A TYPHSI MSG ETC.
	  JRST SCNIN>;END IFKMC~

{Page 33}
IFKMC~<
>;END_IFKMC~
IFKMC~<	CAIN	P1,TYPANS	;ALSO THESE MESSAGES W/KMC~
	  JRST	CNTPRT>;END IFKMC~

{Page 34}
TYPANS:	JRST KMC~ANS	;1 ANSWERED, IGNORED BY KL & KI
TYPCRS:	JRST KMC~RES	;3 BASE CRASH, IGNORED BY KL & KI

{Page 36}
IFNKMC~<	JRST ZAPLOG>	;  TREAT AS CIRCUIT ZAPPER
IFKMC~<	JRST	[AOS LOGZAP	;NOTE THE ZAP
		AOJA P4,SCNIN1]>;END IFKMC~

{Page 41}
;Following code commented out since there are no KMC~'s on
;IFKMC~<	PUSHJ P,MDRUP		;GET UP DRs
;>;IFKMC~.END

{Page 45}
;;;;;;;; MORE KMC~ DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
IFKMC~<	MOVE P1,IRPMSG
	  STOPCD		;CRASH ON KMC~ IRING OVERWRITE or bad P4
>;END_IFKMC~
;;;;;;;; END KMC~ DEBUG CODE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

{Page 94}
IFKMC~	<CSHIVL>		;INVALIDATE 2020 CACHE

{Page 95}
IFKMC~<
	>;END IFKMC~
IFNKMC~<
>;END IFNKMC~

{Page 117}
IFKMC~<	MOVEI P4,MXLIN	;FOR EACH LINE
	SOSGE TIMMIN	;KMC~ MINUTE COUNTER
	>;END IFKMC~

{Page 185}
IFNKMC~<	LDB	U, LDPLNO
	SKIPA>;IFNKMC~.END	;DON'T SET TO CMD PORT IF KMC~.

{Page 187}
IFKMC~<	LDB T3,[POINT 2,P1,2]	;GET TYMBASE NUMBER
	PUSHJ P,KMC~GUP		;T1/ TYMBASE "UP" BITS
>;END_IFKMC~

{Page 196}
IFNKMC~<
>;END IFNKMC~
IFKMC~<
>;END IFKMC~

{Page 198}
IFNKMC~<
>;END IFNKMC~
IFKMC~<
>;END IFKMC~

{Page 205}
IFKMC~<
>;END IFKMC~
IFKMC~<	PUSHJ P,RELKMC~>		;RELEASE UBA SLOT
IFKMC~<
RELKMC~:	PUSH	P,T1		;SAVE T1
;MISC KMC~ RELATED ROUTINES
EXTERNAL KMC~RST,KMC~CAC,KMC~SUP,KMC~GUP,KMC~GAC,KMC~GAV
SCNDRD:			;WILL SKIP A MINUTE WHEN KMC~RES IS CALLED
	PUSHJ P,KMC~RST		;T1/ DOWN DR BITS
	MOVE	T1,DRMTIM	;;;;;;;START KMC~ DEBUG CODE
	PUSHJ	P,KMC~GAV
	PUSHJ	P,KMC~GAC
	CAMN	T1,KMC~LAS	;SAME AS LAST TIME?
	MOVEM	T1,KMC~LAS
	MOVE	T2,KMC~PDP
	MOVEM	T1,KMC~FLG(T2)
	MOVEM	T2,KMC~PDP	;;;;;;;;END KMC~ DEBUG CODE
MDRUP:	PUSHJ	P,KMC~GUP
>;END IFKMC~
KMC~RES:			;CALLED WHEN KMC~ DETECTS A DR HAS GONE SOUTH
IFNKMC~	<AOJA P4,SCNIN1>;IGNORE ANSWERED MESSAGE
IFKMC~<
	MOVEM	T1,TIMDRD	;RESET KMC~ CHECKUP TIMER
	PUSHJ	P,KMC~CAC	;CLEAR DR'S ACTIVE BIT & UP BIT
	>;END IFKMC~
KMC~ANS:			;CALLED WHEN KMC~/DR RESPONDS TO A 41 WE SENT IT
IFNKMC~	<AOJA P4,SCNIN1>;IGNORE BASE CRASH MESSAGE
IFKMC~<
	PUSHJ	P,KMC~SUP	;SET DR'S ANSWERED BIT
	  JRST	KMC~SHT		;YES, GO SET UP DRMSHT
KMC~SHT:	MOVE	T2,DRMSHT
>;END IFKMC~

{Page 269}
IFKMC~<
	SKIPGE KMC~DO		;GREATER OR EQUAL 0 NOT KMC~ MANUAL MODE
	 MOVEI T1,CMFCKM##	;DO FORCE KMC~ LOAD
>;END IFKMC~

{Page 270}
IFKMC~<	CAIL	T1,LPERDR	;DETERMINE LINES ON 1ST NODE
>;END IFKMC~
IFKMC~<	MOVEI	T1,<4320000&<7777_<3*MAXDR>>>_-9
>;END IFKMC~

{Page 272}
IFKMC~<EXTERNAL KMC~DO>

{Page 274}
IFKMC~<
KMC~LAS:	0	;LAST KMC~GAV,KMC~GAC
KMC~PDP::	0
KMC~FLG::	REPEAT ^D64,<EXP 0>;KMC~ ACTIVE FLAG HISTORY
	>;END IFKMC~

{Page 275}
  ;IFNKMC~	<^D500>	;LARGE QUOTA FOR UNREAD INPUT CHARACTERS
  ;IFKMC~	<^D2000>;(LOSE CHARACTERS WHEN IT'S EXCEEDED)

(CARL)SCNSER.CAB        
{Page 1}
1)	IFNKMC~<	PUSHJ P,CLSCHR	;JUST FOR THE SAKE OF GOOD FORM
1)	>;END IFNKMC~
2)	IFKMC~<	CAIL	T1,LPERDR	;DETERMINE LINES ON 1ST NODE
2)	>;END IFKMC~
2)	IFKMC~<	MOVEI	T1,<4320000&<7777_<3*MAXDR>>>_-9

{Page 2}
2)	>;END IFKMC~
2)	IFNKMC~<	PUSHJ	P,CLSCHR	;JUST FOR THE SAKE OF GOOD FORM
2)	>;END IFNKMC~
1)32		SETZM	UPSHUT>;END IFKMC~
1)	IFKMC~	<PUSHJ P,SNDHSI	;SEE IF ANY DRs NEED A TYPHSI MSG ETC.
1)		  JRST SCNIN>;END IFKMC~
2)	>;END IFKMC~
2)	IFKMC~<	PUSHJ	P,SNDHSI	;SEE IF ANY DRs NEED A TYPHSI MSG ETC.
2)	>;END IFKMC~

{Page 3}
1)33	>;END_IFKMC~
2)34	>;END IFKMC~
1)33		  JRST	CNTPRT>;END IFKMC~
2)	>;END IFKMC~

{Page 5}
1)	IFKMC~<	CAIL	T1,LPERDR	;DETERMINE LINES ON 1ST NODE
1)	>;END IFKMC~
1)	IFKMC~<	MOVEI	T1,<4320000&<7777_<3*MAXDR>>>_-9
1)	>;END IFKMC~

(CARL)SCNSER.COR        
{Page 1}
IFKMC~<	CAIL	T1,LPERDR	;DETERMINE LINES ON 1ST NODE
>;END IFKMC~
IFKMC~<	MOVEI	T1,<4320000&<7777_<3*MAXDR>>>_-9
>;END IFKMC~
IFNKMC~<	PUSHJ	P,CLSCHR	;JUST FOR THE SAKE OF GOOD FORM
>;END IFKMC~
IFKMC~<	PUSHJ	P,SNDHSI	;SEE IF ANY DRs NEED A TYPHSI MSG ETC.
>;END IFKMC~
>;END IFKMC~
>;END IFKMC~

(CARL)UUOSYM.DEC        
{Page 14}
	OPDEF	KDP.	[CALLI 200]	;LOAD/DUMP/START KMC~-11

{Page 86}
	.TFKRH==5	;TM02/3 ON RH11~

{Page 94}
.DFLR2==11		;LOAD TRANSLATION RAM INTO LP20~
.DFLV2==12		;LOAD VFU THROUGH LP20~
		.DFS20==3	;LP20~

{Page 110}
.KDPKN==1	;RETURN IN ARG #1 THE COUNT OF KMC~-11S ON THE SYSTEM.
.KDPDN==2	;RETURN IN ARG #2 THE COUNT OF DUP-11S ON KMC~ IN ARG #1
.KDPSS==3	;RETURN IN ARG #2 THE STATUS OF KMC~ SPECIFIED BY ARG #1
.KDPHA==4	;HALT THE KMC~-11 SPECIFIED BY ARG #1
.KDPMC==5	;MASTER CLEAR THE KMC~ SPECIFIED BY ARG #1
.KDPST==6	;START THE KMC~ SPECIFIED BY ARG #1
.KDPRE==7	;READ CRAM LOC. ARG #1 = KMC~, #2 = ADDR, #3 GETS VALUE
.KDPWR==10	;WRITE CRAM LOC. ARG #1 = KMC~, #2 = ADDR, #3 HAS VALUE
.KDLRS==101	;READ LINE STATUS. ARG #1 = KMC~, #2 = DUP, #3 - N GET STATUS
.KDLHA==102	;STOP DDCMP ON A LINE.  ARG #1 = KMC~, #2 = DUP
.KDLST==103	;START DDCMP ON A LINE.  ARG #1 = KMC~, #2 = DUP
KDILK%==2	;ILLEGAL KMC~-11 NUMBER
KDIWR%==4	;FUNCTION IS ILLEGAL WHEN KMC~-11 IS RUNNING
KDKNR%==7	;FUNCTION IS ILLEGAL WHEN KMC~-11 IS NOT RUNNING

{Page 112}
	.DCCRP==5	;RH10/RH20/RH11~ FOR MH DISK (RP04, ETC.)

{Page 125}
	IOUNC%==21		;UNDEFINED CHARACTER INTERRUPT (LP20~)
	IORPE%==22		;RAM PARITY ERROR (LP20~)

(CARL)P034.MEM        
{Page 15}
DZKON (support for DZ11~ driver, used when no network is connected
for RM units, copies the RH11~ registers into the proper unit data block

{Page 17}
COMMON: Changed the initialization of the LP20~ buffer space.  The

{Page 18}
LPTSER: Added form size control for the LP20~ using the MTAPE UUO
reload the LP20~s vertical format unit.  All changes are within
COMMON: Changed the initialization of the LP20~ buffer space again.

{Page 19}
this note as a record of the initial test monitor for 37 of the KMC~
KSSYM:,KISYM:,KLSYM: Added definitions for IFKMC~ & IFNKMC~. KI & KL are
			defined to have no KMC~.  KS is defined with KMC~.
NOKMC~:,KMC~DDT:,KMC~SER: New modules for KMC~ support.  NOKMC~ is used to
			build a KS monitor with out a KMC~.
have been changed to support the KMC~.
DDT:	DDT has a new command to look at KMC~ style 8 bit bytes.  It is
$8o.  The 88 is interpreted to mean KMC~ style bytes.
COMCON:	Merged in KMC~ support.
CTYSIM:	Merged in KMC~ support.
ONCE:	Merged in KMC~ support.
PICON:	Merged in KMC~ support.
COMMON:	Merged in KMC~ support.
SCNSER:	Merged in KMC~ support.
	See KMC~.DOC for details of KMC~ "support". /GL 6-17-80
KMC~. /GL 7-1-80
CIOPR: Added DRPROT:: to be called from KMC~SER to protect us from
KMC~SER: Added call to DRPROT. /GL 7-1-80
LPTSER: Changed the LP20~ character translation to a simpler scheme, and
CIOPR: Defined calls to KMC~SMN & KMC~CMN as macros defined outside
the IFCPU (KS) and defined as JFCLs when IFNKMC~.  IFKMC~ & IFNKMC~
was nessisary because KMC~SMN & KMC~CMN don't exist in NON-KMC~ systems
SCNSER: Added "IFKMC~" code to CREAUX to look at the high 3 bits passed
throwing chars away for KS with KMC~ (this is for TYMCARE).
TIHLTN is still ^D500 without KMC~ but contains ^D1000 for KMC~ systems.

{Page 20}
KMC~ monitors.  Using the CMD PORT number as it sometimes did caused
SCNSER: Fixed SNDBIO to send BLKNEG to first "UP" DR in a KMC~ MONITOR

{Page 21}
LP20~s the monitor was configured for.  0==> non-existant device.
ONCDSK:	Took out the RMA# IS OFF-LINE/NO RESPONSE messages IFKMC~<>.
CIOPR:	Fix for NODLOD. Don't set DRDO just because KMC~DO was off when
LPTSER:	UUO to reload LP20~ VFU now error returns if LP is off-line.
COMMON:	Corrected address of KMC~ control register 0 to 760540 from
760541 in the crash code to reset the KMC~'s RUN bit. /GL 1-30-81
IRPMS3 to catch KMC~ bug.  Also to blink 2020 state light. /GL 07-Feb-81
(and off!). Also added somemore KMC~ debug code.  /GLYONS 2-19-81
SCNSER:	Doubled high character limit for 2020s form ^D1000 to ^D2000 tcompliment the KMC~ bug fix.  /GLYONS 2-27-81

{Page 23}
effect that "the KMC~ will not be loaded so the Host will NEVER synch. with
ONCE: Fix problem with SCNTB macro under IFKMC~ < ... > conditional.
It seems that IFKMC~ translates to "REPEAT 1," and an extra set of

{Page 24}
CTYSIM,CIOPR,KMC~SER,DR11C,DZKON,ONCE: Removed SEXTERNAL references to
   DZDO,DRDO,KMC~DO,DZINI,DRINI,KMC~INI,KMC~SMN,KMC~CMN and made them all
   conditional on IFKMC~.  DZDO,DRDO and KMC~DO are defined in CTYSIM as
SCNSER - Comment out IFKMC~ conditional which ended up inside IFCPU(<KI,KL>)

{Page 27}
KMC~SER: Fixed code at SETRM1, changed AOS T2,PG3ADR to AOS PG3ADR which
FILFND,CTYSIM,ONCE,DZKON,DR11C,KMC~SER,COMCON,F3TSER,MAGSER,REFSTR:

(CARL)GROUP.PKG        
{Page 1}
					  KMC~LOD, NODLOD, RELOAD, MAGWRT
					  LP20~FS, LVALID, LPASSW, KSFEFS
					  KMC~LOD - only on 2020s

(CARL)SYSTEM.NWS        
{Page 1}
     LP20~FS.SAV   (VIYFIW)   ALL RUN RUN    GD

(CARL)TRABAS.10        
{Page 1}
37 KMC~COD       6593 1.0      LYONS      11/11/1980 KMC~COF 010
33 KMC~COD       6613 1.2      ERNST       6/02/1982 KMC~COF 012
33 KMC~COD       6897 1.1      ERNST      12/04/1981 KMC~COF 011
37 KMC~LOD       6582 1.0      LYONS      11/11/1980 KMC~LOF 010
37 LP20~FS       6584 1.0      LYONS      11/12/1980 LP20~FF 010
37 LVALID       6580 1.0      LYONS      11/11/1980 KMC~LOF 010

(CARL)INITIA.MAC        
{Page 4}
    X KMC~LOD,KMC~LOD,0,LICOP,KMC~-11 LOADER,0,0

{Page 8}
KMC~LOD:	; Add check here for KS-10 processor

(CARL)INITIA.IZE        
{Page 1}
	include:  (SYS)CHKPNT, (SYS)KMC~LOD, (SYS)COPYCR and (PJ)PAM
	regular queue entries, the decision to run KMC~LOD or PAM is
	monitor to put a forced .KMC~LOD command on any 2020 so that
	even MANUAL mode can reload the KMC~-11.

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (OSU)*.*/O

(OSU)CHKPNT.312        
{Page 9}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.303        
{Page 19}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.301        
{Page 19}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.300        
{Page 19}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.263        
{Page 19}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5    RM (C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.MAC        
{Page 19}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.CBB        
{Page 9}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.CAB        
{Page 9}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.304        
{Page 19}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)CHKPNT.BAK        
{Page 9}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)NFICHE.CMD        
{Page 1}
DR11C.LST,DZKON.LST,KMC~SER.LST,KMC~DDT.LST,MAGSER.LST,RMXKON.LST

(OSU)FOO.        
{Page 1}
KMC~SER.LST       14 H[ 14]    2 (275, 26)
KMC~DDT.LST       35 H[ 35]    3 (310, 29)

(OSU)CHK.INF        
{Page 3}
  NRSW==11	;NUMBER OF RH11~/RM03 STATUS WORDS SAVED.
  TYPRM==5	;; 5	RM (RH11~C CONTROLLER FOR RM03 UNITS)

(OSU)GUDSYS.TDR        
{Page 1}
  513 KMC~DDT.MAC   M33           02-Jan-86 21:57  26-Feb-86 18:26    10 ZUDRAW

(OSU)MAC.        
{Page 1}
KMC~DDT  MAC      10  17-JUN-80
KMC~SER  MAC       5  29-DEC-81

(OSU)MCH.RPT        
{Page 1}
LPTSER:	UUO to reload LP20~ VFU now error returns if LP is off-line.
COMMON:	Corrected address of KMC~ control register 0 to 760540 from
760541 in the crash code to reset the KMC~'s RUN bit. /GL 1-30-81
and IRPMS3 to catch KMC~ bug.  /GL 07-Feb-81
compliment the KMC~ bug fix.  /GLYONS 2-27-81

{Page 3}
effect that "the KMC~ will not be loaded so the Host will NEVER synch. with
ONCE: Fix problem with SCNTB macro under IFKMC~ < ... > conditional.
It seems that IFKMC~ translates to "REPEAT 1," and an extra set of

(OSU)INITIA.SCM        
{Page 1}
2)		;Run KMC~LOD on 4 if KS, run XEXEC instead of doing LOGOUT.
2)		X 4,KMC~LOD,KMC~ LOADER,0,0	;Ignored for non KS CPUs

{Page 3}
2)6	SUBTTL	Run KMC~LOD if started on TTY4: on a KS-2020
2)	KMC~LOD:	MOVE	T1,[%CNSER]	;Get CPU serial number
2)		MOVE	T1,[RUNKMC~,,OPRNAM]
2)	RUNKMC~:	SIXBIT	/SYS/
2)		SIXBIT	/KMC~LOD/

(OSU)INITIA.M16        
{Page 1}
EXP 16 ; 5/27/80 ELB - ADDED KMC~LOD AS LINE 4; CALLED ON KS SYS. ONLY

{Page 3}
	X 4,KMC~LOD,KMC~LOD,0,0>

{Page 9}
KMC~LOD: MOVE T1,[GSERNO]	
	MOVE T1,[RUNKMC~,,OPRNAM]
RUNKMC~: SIXBIT /SYS/
	SIXBIT /KMC~LOD/

(OSU)INITIA.M22        
{Page 1}
	;Run KMC~LOD on 4 if KS, run XEXEC instead of doing LOGOUT.

{Page 3}
	X 4,KMC~LOD,KMC~ LOADER,0,0	;Ignored for non KS CPUs

{Page 6}
SUBTTL	Run KMC~LOD if started on TTY4: on a KS-2020
KMC~LOD:	MOVE	T1,[%CNSER]	;Get CPU serial number
	MOVE	T1,[RUNKMC~,,OPRNAM]
RUNKMC~:	SIXBIT	/SYS/
	SIXBIT	/KMC~LOD/

(OSU)INITIA.21A        
{Page 3}
	X 3,KMC~LOD,KMC~LOD,0,0 ;*HACK*

{Page 9}
KMC~LOD: MOVE T1,[20,,11]
	MOVE T1,[RUNKMC~,,OPRNAM]
RUNKMC~: SIXBIT /SYS/
	SIXBIT /KMC~LOD/

(OSU)INITIA.MAC        
{Page 1}
;	;Run KMC~LOD on 4 if KS, run XEXEC on 3 instead of doing LOGOUT.

{Page 3}
	X 4,KMC~LOD,KMC~ LOADER,0,0	;Ignored for non KS CPUs

{Page 6}
SUBTTL	Run KMC~LOD if started on TTY4: on a KS-2020
KMC~LOD:	MOVE	T1,[%CNSER]	;Get CPU serial number
	MOVE	T1,[RUNKMC~,,OPRNAM]
RUNKMC~:	SIXBIT	/SYS/
	SIXBIT	/KMC~LOD/

(OSU)LNN.MAC        
{Page 1}
   04320	; the KMC~ is instructed to ignore activity on that
    04397	; the node running.  Then the KMC~ is instructed
06800		RET		;**D* TEMPORARY CODE UNTIL KMC~ IMPLEMENTED

(OSU)LNN.000        
{Page 1}
   04320	; the KMC~ is instructed to ignore activity on that
    04397	; the node running.  Then the KMC~ is instructed

[mail waiting]
!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (MPL)*.*/O

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (NDT)*.*/O

(NDT)NODLOD.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 2}
	KMC~CSR	=	'760540,	AVAIL	=	'4,
	DRKMC~I	=	5,		GETTAB	=	'41,
integer	drn,kmc~11,dr11c,dskchn,dskeof,port,errflg,brchar,license;

{Page 3}
if (not errflg) and kmc~11 = YES then bclrb(KMC~CSR+ACTIV,dr11c);  ! turn on KMC~;

{Page 10}
if kmc~11 = YES and !SKIP! then
	drbits _ breab(KMC~CSR+AVAIL); ! get KMC~CSR bits for available DRs;
	else quit("KMC~ reports no DR11Cs respond to bus requests!!"&
		CRLF&"Have the DR11C and KMC~ hardware checked!!");

{Page 11}
procedure getkmc~; ! check whether there is a kmc~;
begin	"getkmc~"
if false and cio(DRKMC~I,0,0,CIOPR) then
	kmc~11 _ YES
	kmc~11 _ NO;
end	"getkmc~";

{Page 12}
if kmc~11 = NO then 
	if not teqb(KMC~CSR+AVAIL,dr11c) then 
	while teqb(KMC~CSR+ACTIV,dr11c)  and z leq 6 do
			" in use by KMC~!"&CRLF&
		bsetb(KMC~CSR+ACTIV,dr11c);
		calli(TIMEOUT,HIBER);		! wait for KMC~ to see it;

{Page 15}
kmc~11_ NO;
	getkmc~;
if selected then dsldr;			! officaly relesae dr and tell KMC~;

(NDT)SYM.        
{Page 4}
TRKMC~R:	0		;ADDR OF $PNAME+1 OF CURRENT MACRO NAME
TRKMC~S:	0		;SAME FOR LAST MACRO IN SOURCE FILE

{Page 9}
	MOVEM	TEMP,TRKMC~R	;CURRENT "MACRO"
	 JRST	[MOVEM	TEMP,TRKMC~S	;NO, RECORD SOURCE-FILE TOKEN

{Page 14}
	MOVEM	TEMP,TRKMC~R	;CURRENT MACRO
	MOVEM	TEMP,TRKMC~S

{Page 37}
	MOVEI	TEMP,LININD+1	;MAKE SURE TRKMC~S AND TRKMC~R POINT A LEGIT STRING
	SKIPN	TRKMC~S
	 MOVEM	TEMP,TRKMC~S
	SKIPN	TRKMC~R
	 MOVEM	TEMP,TRKMC~R
		PWORD	@TRKMC~S		;MACRO NAME
		PWORD	@TRKMC~R]	;MACRO NAME

{Page 42}
	MOVEI	TEMP,LININD+1	;TRKMC~R AND TRKMC~S MUST POINT TO A STRING
	SKIPN	TRKMC~R
	 MOVEM	TEMP,TRKMC~R
	SKIPN	TRKMC~S
	 MOVEM	TEMP,TRKMC~S
			PWORD	@TRKMC~S
			PWORD	@TRKMC~R]

(NDT)NOD2.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 2}
,	KMC~CSR	=	'760540
,	DRKMC~I	=	5

{Page 3}
,	want!kmc~11

{Page 4}
!	do!ciopr(DRKMC~I,0,0)	 do!ciopr(DRDSL,drn,DRDO)

{Page 6}
if (not errflg) and want!kmc~11
 then bclrb(KMC~CSR+ACTIV,dr11c);  ! turn on KMC~;

{Page 13}
if want!kmc~11 and !SKIP! then
	drbits _ breab(KMC~CSR+AVAIL); ! get KMC~CSR bits for available DRs;
	else quit("KMC~ reports no DR11Cs respond to bus requests!!"&
		CRLF&"Have the DR11C and KMC~ hardware checked!!");

{Page 14}
procedure getkmc~; ! check whether there is a kmc~;
begin	"getkmc~"
want!kmc~11 := do!ciopr(DRKMC~I,0,0);
end	"getkmc~";

{Page 15}
if not want!kmc~11 then 
	if not teqb(KMC~CSR+AVAIL,dr11c) then 
	for z _ 1 step 1 while teqb(KMC~CSR+ACTIV,dr11c)  and z leq 6 
				" in use by KMC~!" & CRLF &
		bsetb(KMC~CSR+ACTIV,dr11c);
		pause;			! wait for KMC~ to see it;

{Page 19}
want!kmc~11 _ false;
	getkmc~;
if selected then deselect!dr;	! officaly release dr and tell KMC~;

(NDT)NOD3.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 3}
! adjacent=false, want!kmc~11=false, selected=false;

(NDT)NOD4.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 3}
! adjacent=false, want!kmc~11=false, selected=false;

(NDT)NOD.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 2}
	KMC~CSR	=	'760540,	AVAIL	=	'4,
	DRKMC~I	=	5;
,	want!kmc~11

{Page 3}
if (not errflg) and want!kmc~11
 then bclrb(KMC~CSR+ACTIV,dr11c);  ! turn on KMC~;

{Page 10}
if want!kmc~11 and !SKIP! then
	drbits _ breab(KMC~CSR+AVAIL); ! get KMC~CSR bits for available DRs;
	else quit("KMC~ reports no DR11Cs respond to bus requests!!"&
		CRLF&"Have the DR11C and KMC~ hardware checked!!");

{Page 11}
procedure getkmc~; ! check whether there is a kmc~;
begin	"getkmc~"
want!kmc~11 := cio(DRKMC~I,0,0,CIOPR);
end	"getkmc~";

{Page 12}
if not want!kmc~11 then 
	if not teqb(KMC~CSR+AVAIL,dr11c) then 
	while teqb(KMC~CSR+ACTIV,dr11c)  and z leq 6 do
				" in use by KMC~!" & CRLF &
		bsetb(KMC~CSR+ACTIV,dr11c);
		calli(TIMEOUT,HIBER);		! wait for KMC~ to see it;

{Page 16}
want!kmc~11 _ false;
	getkmc~;
if selected then dsldr;		! officaly release dr and tell KMC~;

(NDT)NOD5.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 3}
! adjacent=false, want!kmc~11=false, selected=false;

(NDT)NODELD.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 2}
	KMC~CSR	=	'760540,	AVAIL	=	'4,
	DRKMC~I	=	5,		GETTAB	=	'41,
integer	drn,kmc~11,dr11c,dskchn,dskeof,port,errflg,brchar,license;

{Page 3}
if (not errflg) and kmc~11 = YES then bclrb(KMC~CSR+ACTIV,dr11c);  ! turn on KMC~;

{Page 10}
if kmc~11 = YES and !SKIP! then
	drbits _ breab(KMC~CSR+AVAIL); ! get KMC~CSR bits for available DRs;
	if drmax = -1 then quit("KMC~ reports no DR11Cs respond to bus requests!!"&
				CRLF&"Have the DR11C and KMC~ hardware checked!!");

{Page 11}
procedure getkmc~; ! check whether there is a kmc~;
begin	"getkmc~"
if cio(DRKMC~I,0,0,CIOPR) then
	kmc~11 _ YES
	kmc~11 _ NO;
end	"getkmc~";

{Page 12}
if kmc~11 = NO then 
	if not teqb(KMC~CSR+AVAIL,dr11c) then 
	while teqb(KMC~CSR+ACTIV,dr11c)  and z leq 6 do
			" in use by KMC~!"&CRLF&
		bsetb(KMC~CSR+ACTIV,dr11c);
		calli(TIMEOUT,HIBER);		! wait for KMC~ to see it;

{Page 15}
	getkmc~;
if selected then dsldr;			! officaly relesae dr and tell KMC~;

lookup failure on (NDT)[MAIL] and (NDT)[MAIL].

(NDT)NL.SAI        
{Page 1}
!	    Eliminate KMC~ question.
!	    Delay several seconds before declaring 11 active to KMC~.

{Page 2}
	KMC~CSR	=	'760540,	AVAIL	=	'4,
	DRKMC~I	=	5,		GETTAB	=	'41,
integer	drn,kmc~11,dr11c,dskchn,dskeof,port,errflg,brchar,license;

{Page 3}
if (not errflg) and kmc~11 = YES then bclrb(KMC~CSR+ACTIV,dr11c);  ! turn on KMC~;

{Page 10}
if kmc~11 = YES and !SKIP! then
	drbits _ breab(KMC~CSR+AVAIL); ! get KMC~CSR bits for available DRs;
	else quit("KMC~ reports no DR11Cs respond to bus requests!!"&
		CRLF&"Have the DR11C and KMC~ hardware checked!!");

{Page 11}
procedure getkmc~; ! check whether there is a kmc~;
begin	"getkmc~"
if cio(DRKMC~I,0,0,CIOPR) then
	kmc~11 _ YES
	kmc~11 _ NO;
end	"getkmc~";

{Page 12}
if kmc~11 = NO then 
	if not teqb(KMC~CSR+AVAIL,dr11c) then 
	while teqb(KMC~CSR+ACTIV,dr11c)  and z leq 6 do
			" in use by KMC~!"&CRLF&
		bsetb(KMC~CSR+ACTIV,dr11c);
		calli(TIMEOUT,HIBER);		! wait for KMC~ to see it;

{Page 15}
kmc~11_ NO;
	getkmc~;
if selected then dsldr;			! officaly relesae dr and tell KMC~;

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (UPL)*.*/O

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (EXECX)*.*/O

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (NEWSCAN)*.*/O

(NEWSCAN)SWILIO.MAC        
{Page 75}
	XWD	$EIXXX,$EILUC	;(21) LP20~ - UNDEFINED CHAR INTERRUPT
	XWD	$EIXXX,$EIVRP	;(22) LP20~ - RAM PARITY ERROR

(NEWSCAN)SWIL.MAC        
{Page 90}
$EILUC==$E$IOX!EL$FTL + 016	;LP20~ UNDEFINED CHARACTER INTERRUPT
$EIVRP==$E$IOX!EL$FTL + 017	;LP20~ RAM PARITY ERROR

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (KL10)*.*/O

(KL10)KLDCP1.DOC        
{Page 2}
	1724	RH11~/RP04 REGISTER AND BIT DEFINITIONS, 7-MAR-77
	1775	LP20~ REGISTER AND BIT DEFINITIONS, 27-MAY-76

{Page 7}
	1724	RH11~/RO04 REGISTER AND BIT DEFINITIONS, 7-,/MAR-77
	1775	LP20~ REGISTER AND BIT DEFINITIONS, 27-MAR-76

(KL10)BOOTS.34F        
{Page 18}
  05600	UNIINI:	CONSO 0,RMINI(R)	;ONE AND ONLY RH11~C, ONLY THING TRIED ON KS.

(KL10)BOOTS.OLD        
{Page 18}
  05600	UNIINI:	CONSO 0,RMINI(R)	;ONE AND ONLY RH11~C, ONLY THING TRIED ON KS.

(KL10)MAGSER.ORG        
{Page 1}
; pages are for KMC~/PDP10 communication.

{Page 3}
	MOVE P3,TKBCBA(T3)	;Rh11~C base address
	MOVEI T1,CS2CLR		;Clear Rh11~ in case nxu selected.

{Page 6}
	MOVE P3,TKBCBA(T2)	;Rh11~C base address

{Page 9}
	MOVE T2,TKBCBA(T2)	;Base address of Rh11~C

{Page 10}
	CALL UNISE0		;Select unit, set mode, put Rh11~C adr in P2.

{Page 14}
;U=UDB, F=DDB, J=KDB, P2=Rh11~C base address, S=DEVIOS.
	MOVE P2,TKBCBA(J)	;Base address of the Rh11~C.
	RDIO T2,CS1OFS(P2)	;RH11~C status.
FINOP:	MOVEI T1,F.DC+CS1TRE	;Clear RH11~C, TU45 error state.

{Page 15}
	MOVE P2,TKBCBA(T2)	;Rh11~C base address.

{Page 17}
	MOVE P2,TKBCBA(P2)	;Rh11~C base address.

{Page 18}
;Returns with P2 set to the Rh11~C base address, and T2 to the IOWD after
	MOVE P2,TKBCBA(P2)	;Get Rh11~C base address.

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (CB-MAIL)*.*/O

(CB-MAIL)MAIL84.3Q        
{Page 16}
    KMC~      Bring the system up loading the KMC~-11 but without the

(CB-MAIL)MAIL84.2Q        
{Page 8}
Subject: KMC~
a KMC~ is quite useless, so I guess I cast my vote in favor.
kludge and only start INITIA on the line that runs KMC~s if the system is

(CB-MAIL)4Q83.MAI        
{Page 23}
on any 2020 system, until the KMC~ code is first merged into INITIA.

(CB-MAIL)GLYONS.BOX        
{Page 10}
THE MTAPE UUO FORM CONTROL FOR THE LP20~ IS DOCUMENTED IN LP20~.DOC.

{Page 13}
THE MERGED KMC~-PTY MONITOR IS UP ON 118 (P034/E03 KMC~&PTYs).  BLOCK I/O SEEMS

{Page 16}
inconvient to prune it back any more until the KMC~&PTY merge is complete.  

{Page 17}
BILL, PTYs Don't work on p034/e07.  It is the test monitor for mergeing KMC~
symbols (CSHIVL IFKMC~ IFNKMC~ KMC~DO RDIO WRIO). I assume this is because

{Page 18}
MURRAY,  I swapped scnser.mac and scnser.e08 and move all the rest of the KMC~
BILL,  (m33)37XE08 is the KI version of the KMC~-PTY smerge.  PTYs seem to work

{Page 22}
Needs NON-KMC~ node code to be tested.  Bring it up if you get a chance.

{Page 27}
01700	KMC~SUP    SCNSER
01800	KMC~RST    SCNSER
01900	KMC~GUP    SCNSER
02000	KMC~GAV    SCNSER
02100	KMC~GAC    SCNSER
02200	KMC~CAC    SCNSER

{Page 28}
KMC~SUP    SCNSER
KMC~RST    SCNSER
KMC~GUP    SCNSER
KMC~GAV    SCNSER
KMC~GAC    SCNSER
KMC~CAC    SCNSER

{Page 29}
KMC~SUP    SCNSER
KMC~RST    SCNSER
KMC~GUP    SCNSER
KMC~GAV    SCNSER
KMC~GAC    SCNSER
KMC~CAC    SCNSER

{Page 30}
KMC~SUP    SCNSER
KMC~RST    SCNSER
KMC~GUP    SCNSER
KMC~GAV    SCNSER
KMC~GAC    SCNSER
KMC~CAC    SCNSER

{Page 33}
Ernie, The "W" rel files are for TRWs NON-KMC~ monitor.  The KMC~ affects many
modules.  When TRW gets its KMC~ later this month all KS systems WILL include
a KMC~ and the "W" rel files will go away forever.  Thanks on DDT and for mail

{Page 38}
	are in the KMC~ style format as in IRING & ORING on most KSs.

{Page 68}
Sherman,  Our LP20~ has a very intermittant Hwd problem.  DEC hasn't been able

{Page 152}
I tried to boot a test monitor on :118 this morning - it typed out "KMC~

(CB-MAIL)SYSTEM.MAI        
{Page 3}
Monitor called procedures: KMC~LOD, BOOTS
Load Complex: MAGWRT, LP20~FS, KSFEFS

(CB-MAIL)2Q81.MAI        
{Page 121}
be dropped.  I reloaded it & the KMC~ then had to reload the system.

(CB-MAIL)3Q81.MAI        
{Page 105}
Ben talked them through KMC~ loading...

(CB-MAIL)PERP.MAI        
{Page 1}
        CHKPNT, COPYCR, XEXEC (mentioned above), and KMC~LOD.
          CHKPNT, COPYCR, KMC~LOD, PAM (?), FREE, ....
then the monitor itself runs a HANGUP job like INITIA/DSKCLN/KMC~LOD at

(CB-MAIL)4Q81.MAI        
{Page 35}
A set of code inside an IFKMC~ conditional referenced a label which went
The IFKMC~ is really a "REPEAT 1," and that broke the use of "<>" inside

{Page 111}
It is under "communication vectors" along with the DZxVEC and KMC~VEC
begat the KMC~-11.  If it is for a DP-11, I don't think we have any.
vectors (DZ and KMC~) match those used for the PDP-11. /D

(CB-MAIL)MX.        
{Page 19}
Subject: HANGUP, BOOTS, RELOAD, KMC~LOD
to stop it needs HANGUP?,  on 2020's it needs KMC~LOD... please refer
Subject: Re: HANGUP, BOOTS, RELOAD, KMC~LOD
gave me that KMC~LOD was appropriate for the 'new' package.  Otherwise, I
the KMC~-11/KS-10 code currently running... However, it does not do that
for an acknoledgement of some kind [F3].... (I suspect the KMC~ is similar)
it seems there is a "the base crash & has reloaded msg" that the KS/KMC~
which is simulating a KMC~-11 (I'm told by dennis), so that it will resynch

(CB-MAIL)MONSYS.MAI        
{Page 1}
KMC~ successfuly loaded

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (QALIBSYM)*.*/O

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (VUE)*.*/O

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (PEAKX)*.*/O

!find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (MYPEAK)*.*/O

LOOKUP OR ENTER: INVALID FILE SPECIFICATION
Called from 45424  Last SAIL call at 5037
^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^ Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
M^1Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
0^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^MReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
7^RReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
H^/Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
O^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^2Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
9^C
lookup failure on (MYPEAK)F and (MYPEAK)F.

LOOKUP OR ENTER: INVALID FILE SPECIFICATION
Called from 45424  Last SAIL call at 5037
 ^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^7Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
2^1Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
1^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^MReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
7^*Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
/^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^7Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
2^ Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
R^

LOOKUP OR ENTER: INVALID FILE SPECIFICATION
Called from 45424  Last SAIL call at 5106
^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^9Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
6^MReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
C^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^7Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
2^ Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
(^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^5Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
 ^)Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
*^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^ Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
M^(Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
D^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^MReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
7^1Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
1^OReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^7Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
2^KReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
M^ Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
(^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^ Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
M^ZReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
1^fReply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
i^ Reply [CR] to continue,
[LF] to continue automatically,
"D" for DDT, "E" to edit, "B" for BAIL,
"X" to exit, "S" to restart
M^SFIND version 23
Target 1: YSFIL)*.*/O
Target 2: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (EMACS)*.*/O
Target 3: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (XEXEC)*.*/O
Target 4: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (SAILIB)*.*/O
Target 5: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (WRS)*.*/O
Target 6: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (PEAK)*.*/O
Target 7: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (MACRO53)*.*/O
Target 8: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (JMS-KERMIT)*.*/O
Target 9: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (PUB)*.*/O
Target 10: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (940MAN)*.*/O
Target 11: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (CB-SAIL)*.*/O
Target 12: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (YEUX)*.*/O
Target 13: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (TYMNET)*.*/O
Target 14: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (DERNST)*.*/O
Target 15: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (MAIL)*.*/O
Target 16: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (TBATLIB)*.*/O
Target 17: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (IMPORT)*.*/O
Target 18: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (VIVIAN)*.*/O
Target 19: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (PEAK.OLD)*.*/O
Target 20: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (CNFE)*.*/O
Target 21: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (SPPOPER)*.*/O
Target 22: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (DEC-CUSPS)*.*/O
Target 23: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (703-TOPS10)*.*/O
Target 24: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (TELE)*.*/O
Target 25: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (TSUCOOP)*.*/O
Target 26: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (TODD)*.*/O
Target 27: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (UTIL)*.*/O
Target 28: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (GAMES)*.*/O
Target 29: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (TOPS10)*.*/O
Target 30: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC DZ11 (JMS-INFO)*.*/O
Target 31: find m7860 M8204 M7819 M7296 M7295 M7294 LP20 RH11 KMC11 DZ11 (M33)*.*/O
Target 32: 
EXIT

!SEND JMS
TYPE LETTER:
; PCOM v1.63 - processed: (JMS)FIND.LOG = (JMS)FIND.CTL
; Options: DETACH  LOG NOAPPEND SUPERSEDE LICENSE 
; Limits: TIME:60 TRULIMIT:0 
; Status: completed.
; Output recorded in file (JMS)FIND.LOG.

mail waiting
!LOGOUT
3089.62 tru
terminal time: 0:53:20
    m0v.