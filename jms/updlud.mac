TITLE UPDLUD - ACCTG., LUD UPDATER
SUBTTL - J. MARCIN 9/10/75

TYMSPC==20
TYMREL==4

JOBVER=137
LOC JOBVER 	;PUT VERSION NUMBER IN JOB DATA AREA
XWD TYMSPC,TYMREL

RELOC

;.SELECT
;&.NOFILL
;&.LEFT MARGIN 2
;&.RIGHT MARGIN 70
;&.PAGE SIZE 60,79
;&.CENTER
;&COMMAND CODES FOR UPDLUD - UPDATED 12/16/80
;&.SKIP 1

;TO DEBUG FOR A SLAVE
;
;INCH(CH)$B	OUCH(CH)$B
;INCH/ POPJ P,0
;OUCH/ POPJ P,0
;AWYBLK-1/ JRST INITIA
;

;VERSION	DESCRIPTION
;20.4(05/07/86) MODIFY COMMAND 122 -- INCLUDE CODE 205 AND 211
;20.2(10/31/85) ADDED COMMAND 32 -- GET CUSNUM 
;20.0 (9/17/85) CARRIED THE OLD COSTCODE WHEN CHANGE DISTRICT CODE 31, 117
;               AND 233.
;20.0 (4/18/85) MODIFY UPDACS ROUTINE
;20.0 (1/18/85) PROMPT COSTCODE IN ADD NEW USER TO TUSRDB (CODE 205)
;17.6 (2/27/84) UUN INCREASED FROM 17 TO 18 BITS.
;               CHANGED UUN MASK ACCORDINGLY
;17.4 (1/15/81) ADDED COMMANDS  12, 33, 66, 67, 164, & 170
                ;CODE 12 IS CHANGE A USER'S GAN IN LUD,DUL
                ;CODE 33 IS CHANGE CUST. FLAT FOCUS FEE
                ;CODE 66 IS LIST ALL CUST.S FOR A COSTCODE
                ;CODE 67 IS LIST ALL USERS FOR A COSTCODE
                ;CODE 71 IS CHANGE A USER'S GAN IN ACCOUNTING
                ;CODE 164 IS LIST ALL GANS FOR A COSTCODE
                ;CODE 170 IS LIST ALL COSTCODES FOR A DISTRICT
;17.3 (12/23/81) COMMANDS 50 & 106 (LIST CUS. ACCT. &
                 ;LIST USER ACCT.) BOTH OUTPUT COSTCODE.  LIST CUS. ACCT.
                 ;ALSO OUTPUTS FLAT FOCUS FEE BIT FIELD FROM CUSTDB.DMS
;17.2 (10/29/81) COMMANDS 31,75,117,233 (DISTRICT CHANGING COMMANDS
                 ;FOR CUSTDB USERDB TUSRDB) NOW SET COSTCODE TO ZERO
                 ;IN NEW ACTIVE RECORDS WHEN THEY ARE CREATED
;17.1 (9/21/81)  USE (SRATECH)UPDLUD.ACS SECURITY FILE...
                 ;CHANGES TO ACCOMODATE NEW COSTCODE ATTRIB IN TUSRDB
;17.0 (8/1/81)   ADD CODE 234 - CHANGE CUSNUM IN TUSRDB
                 ;CHANGES TO ACCOMODATE NEW COSTCODE ATTRIB IN CUSTDB
                 ; & NEW COSTCODE AND NON-LUD-HOST ATTRIBS IN USERDB
;16.1            ADD CODE 6 - CHANGE USER TRU BUDGET
;16.0            CHANGED ALL HOST INPUT/OUTPUT TO 2 BYTES (INCLUDING
;                PREVIOUS OUTPUT THAT USED 1 BIT PER HOST.
;15.9 (11/11/80) ADD CODE 103 - LIST USER CUSTOMER NUMBER.
;15.8 (10/16/80) CHG CODE 112 AND 54 TO REQUIRE ASYSCODE AS WELL AS
;                CUSNUM.  (E. GAUCI)
;15.7 (10/7/80) ADD CODE 210; CHG CODE 220 TO STOP ALL OTHERS IF ADDING
;               HOST 'ALL'.  (E. GAUCI)
;15.2 (10/2/78) INCREASE MXTHST
;15.0 (4/11/78) CHANGE INPUT, OUTPUT OF P-CODE TO 2 BYTES
;14.6 (4/10/78) INCREASE MAX HOST TO 47, FIX DEFAULT TYMUSE DATA
;	CHANGE LISTING OF HOST MAP, ALLOW CHG CUST ON 940 USER
;14.5 (3/6/78) INCREASE MAX P-CODE TO 999
;14.4 (2/28/78) FIX DSTOP IN TYMUSR
;14.3 (2/2/78) ADD CODE 36 
;14.2 (1/18/78) ANOTHER FIX TO STOP DATE IN TUSRDB
;14.1 (1/4/78) FIX STOP DATE IN TUSRDB
;14.0 (12/7/77) REMOVE UNNECESSARY ATTRIBUTES, ADD INTERNAL INV. CODE
;13.4 (8/29/77) FIX RDTMP BUG
;13.3 (8/23/77) ADD CODE 65
;13.2 (8/15/) FIX TO CODE 154 AND FIX GETTMP ROUTINE
;13.1 (8/5/77) CODE 130
;13.0 (7/7/77) TYMUSE AND CONSOLIDATION OF DEFINITIONS
;12.5 (6/28/77)FIX CANCEL CUST. ON A REMOVE USER
;12.4 (6/23/77)DON'T ALLOW CANCELLING OF MAIL NAME IF USERS ARE LEFT
;12.3 (6/21/77)ALPHABETIZE NAMES ON CODE 213-LIST NAMES FOR A MAIL NAME
;12.2 (6/14/77)FIX CANCEL CUST BUG IF USER ON > 1 AST
;12.1 (6/10/77)ADD CODE 127 FOR TYMIII CONSIS CHECK
;12.0 (5/23/77)REMOVE ATTRIBUTES WE DO NOT NEED, STOP DATES FOR CUSTS
;11.4	(5/3/77)ALLOW -1 AS HOST IN TYMHST
;11.3	(4/29/77)TYMCOM-III VAL, AND DEF. CORE=256
;11.2	(4/22/77)CHECK FOR LEGAL DATES (MONTH<13, DAY <32)
;11.1	(4/13/77)CHECK AST IN DATA BASE
;11.0	DON'T CHECK FOR LEGAL DATES (>12/31/99 AND <5/19/71)
;10.0	TAKE OUT CODE FOR DELETING FILES PRE PO30 MONITOR
;1.0	ORIGINAL X22 VERSION - FROM LUDUPD

INTERN DYNDV., DEVTB.

EXTERN DBSTRT, DBERR, DBOPEN, DBFIND, DBNREC, DBGET, DBCHNG, DBCLOS
EXTERN DBDATN, DBNDAT, DBADDR, DBEND, DBSYSV, DBSET, DBSORT
EXTERN DBDEL, DBMAP

;AC'S
F=0	;FLAG AC
A=1
B=2
C=3
D=4
E=5
N=6
N1=7
N2=10
N3==11
CH=13
Z=14	;# OF BYTES (1-3) FOR 940 I/O
P=17
BP=15
INDEX=12
SUBTTL FLAGS

;FLAGS IN RIGHT HALF OF F
ACTSYS==1	;THIS SYSTEM IS THE ACCTG. SYSTEM
ADDDUL==4
CHDUL==2
TTYOUT==10	;I/O IS TO TTY
ERRF==20	;ERROR MADE
NEWF==40	;TYPE "NEW" BEFORE ASKING QUESTION
ALLIOI==100	;ALL IO HAS BEEN INPUT, STOP IF ERROR FOUND
;ACTCMD==400	;COMMAND (DEFINED LATER) IS AN ACCOUNTING COMMAND
LIST==1000	;LISTING COMMAND TYPED
SHORTS==2000	;SHORTEN STRING AND ADD 377
SELHST==10000	;LIST HOSTS FOR AN AST ONLY
NOHSTS==20000	;DO NOT ADD HOST IN MOVE CUST AND MOVE ACCT COMMANDS
WAITF==100000	;X22 IS TRYING TO EXECUTE AN ADD, CHANGE OR
		;DELETE, EKKP TRYING IF BUSY

;FLAGS IN LEFT HALF OF F 
ONESIT==1	;LOOKING FOR 1 HOST FOR A CUSTOMER
CHANGE==20	;BLK READ IN HAS BEEN CHANGED
OVFLF==400000	;USED TO MARK FOR AN OVERFLOW BLK
ENDTYD==2	;SET WHEN A 377 OR ALT-MODE INPUT
UNLOK==4	;STRUCTURE NEEDS TO BE UNLOCKED
OCTINF==10	;OCTAL INPUT AND OUTPUT
DIGINF==40	;INPUT IS IN DIGITS
NAMESO==100	;ONLY OUTPUT NAMES
INITF==400	;INIT FLAG SET
NOCR==1000	;NO CR
TRUF==2000	;TRU BUDGET FLAG
ASCIO==4000	;ASCII I/O
DELADD==10000	;DELETE ADDRESS BEFORE ADDING NEW ONE

;I/O CHANNELS
DSK==17
DSK1==15
BILFIL==14
DFIL==13
SUBTTL INDEX'S INTO X22 DATA

;INDEX INTO UINFO
NGAN==0
NUUN==1
NUNAME==2
NUDIST==5
NUCUSN==6
NCURR==7
NLANG==^D8
NUSTART==^D9
NUSTOP==^D10
NUCOST==^D13
NNLUDH==^D14
MXUINF==^D15

;INDEX INTO CINFO
NCUSNUM==0
NCSYSC==1
NCDIST==2
NCDSTART==3
NCDSTOP==4
NCDETC==5
NCINVC==6
NCSLS==7
NCMINC==^D8
NPO==^D9
NPOMAX==^D15
NPOSTART==^D16
NPOSTOP==^D17
NVPF==^D18
NDPRI==^D19
NCCOST==^D22
NFOCF==^D23
NANNDT==^D24
MXCINF==^D25

;INDEX INTO VINFO
;NUSUUN==0
NHOST==1
NVSTART==2
NVSTOP==3
NVGAN==4
MXVINF==7
;INDEX INTO USINFO
NUSUUN==0
NUSYSC==1
NUSLSM==2
NPRICOD==3
NRES==4
NUZONE==5
NDST==6
NSYSTART==7
NSYSTOP==^D8
MXUSINF==^D11

;INDEX INTO AINFO
NACUSNUM==^D0
NASYSC==^D1
NCUSNAM==^D2
NATTN==^D13
NSTRT1==^D24
NSTRT2==^D35
NCITY==^D46
NSTATE==^D49
NZIP==^D50
NXL==^D52
NCOUNTRY==^D63
MXAINF==^D81

;INDEX INTO HINFO
NHHOST==0
NASTYP==1
MXHINF==6
;INDEX INTO UINFO WHEN BEING USED FOR TYMHST
NMHUUN==0
NMHOST==1
;NVSTART==2
;NVSTOP==3

;INDEX INTO UINFO WHEN BEING USED FOR TYMCNV
NTRHST==0
NTRSTART==1
NTRSTOP==2


;INDEX INTO USINFO WHEN BEING USED FOR TUSRDB
;NGAN==0
;NUUN==1
;NUNAME==2
;NUDIST==5
;NUCUSN==6
NTSTART==7
NTSTOP==^D8
NTMUUN==^D9
NTCOST==^D12


;INDEX INTO AINFO WHEN GEING USED FOR TYMUSR
;NCUSNUM==0
;NUUN==1
;NVSTART==2
;NVSTOP==3
NTUDAY==4

;INDEX INTO CINFO WHEN BEING USED FOR TYMCUS
;NCUSNUM==0
NTCREC==1
;NVSTART==2
;NVSTOP==3
SUBTTL MISCELLANEOUS PARAMETERS

SIZNAM==^D12
SIZLIN==^D51
SZFOCF==^D1
SZPO==^D30
SZCITY==^D13
SZSTATE==2
SZZIP==5
SZCOUNTRY==5

MINSIT==1
MAX940==^D30
MXTHST==^D200    ;MAXIMUM TYMSHARE HOST(EXTRA SIZE TO SEND TO MASTER
		;ON LIST CUSTOMER HOSTS)
MXTHSX==MXTHST+1


ASTIII==^D9
ALHSTS==77777	;MAIL NAME CAN VALIDATE ON ALL HOSTS
MINCUS==1
MAXCUS==^D99999
MINCCO==0
MAXCCO==^D999999
MINDIS==0
MAXDIS==^D255
MINDET==1
MAXDET==^D999
MININV==1
MAXINV==^D999
MINSLS==0
MAXSLS==^D99
MINFFF==0
MAXFFF==1
MINMIN==1
MAXMIN==^D99
MAXZON==^D28
MINCUR==1
MAXCUR==^D999
MINPC==1
MAXPC==^D999
MINLAN==1
MAXLAN==^D99
SUBTTL INITIALIZATION

LUDUP:	SKIPA A,[TTYOUT]	;RUN FROM TELETYPE
	SETZ A,
	MOVE F,A
	RESET
	SETZ B,
	MOVE 1,[XWD 2,3]
	BLT 1,17
	SETZM FIRSTF#
	MOVE	P,PDP
	PUSHJ   P,UPDACS
	SKIPL   C
	JRST BYEBYE
	TRNE F,TTYOUT
	JRST INITIA
	JRST SHAKE


AWYBLK:	SIXBIT /SYS/
	SIXBIT /LOGOUT/
	0
	0
	XWD 1,4
	0

BYEBYE:	HRLZI A,1
	HRRI A,AWYBLK
	RUN A,
	EXIT
SUBTTL HANDSHAKE

SHAKE:	MOVEI A,214	;SET NO ECHO MODE
	SETMOD A,
	HRROI A,4
	AUXCAL A,1
	AUXCAL A,2
	AUXCAL A,3
	AUXCAL A,4
	HRROI A,0
TRYAGN:	AUXCAL A,CH
	JRST .-1
	CAIE CH,1
	JRST TRYAGN
	AUXCAL A,CH
	JRST .-1
	CAIE CH,2
	JRST TRYAGN
	AUXCAL A,CH
	JRST .-1
	CAIE CH,3
	JRST TRYAGN
	AUXCAL A,CH
	JRST .-1
	CAIE CH,4
	JRST TRYAGN
	JRST INITIA
SUBTTL GET SYSTEM INFORMATION FROM PJ'S MAP

INITIA:	INIT BILFIL,17
	SIXBIT /DSK/
	0
	PUSHJ P,IOERR
	LOOKUP BILFIL,CNTFIL
	PUSHJ P,BADBIL
	INPUT BILFIL,BILLST
	STATZ BILFIL,760000
	PUSHJ P,IOERR
	CLOSE BILFIL,
	RELEASE BILFIL,
	MOVE N,BILBLK+1
	MOVEM N,SYSTEM#
	MOVE BP,[POINT 1,BILBLK+^D113(A),5]
	PUSHJ P,FINSYS
	AOS FIRSTF
	CAMN A,SYSTEM
	TRO F,ACTSYS
	MOVE BP,[POINT 1,BILBLK+^D113(A),9]
	PUSHJ P,FINSYS
	MOVEM A,TYMSYS#
	TRNN F,ACTSYS
	JRST LUDUP1
	MOVE 1,[JFCL]	;FOR X22 - IGNORE THE USER UUO EXECUTED
	MOVEM 1,JOB41##	;IN DBSTRT
	MOVEM F,SAVF
	JSA 16,DBSTRT
	MOVE 1,[HALT]	;RESET TO HALT ON ALL
	MOVEM 1,JOB41##	;USER UUO'S
	JSA 16,DBERR
	ARG BADX22
	ARG IERT#
	ARG IERC#
	ARG ZERO
	JSA 16,DBSYSV	;BE SURE MESSAGES DO NOT GO TO TTY
	ARG [^D103]
	ARG ONE
	ARG ONE
	JSA 16,DBSYSV
	ARG [^D104]
	ARG ONE
	ARG ONE
;	JSA 16,DBNOER	;DON'T REPORT ANY ERRORS TO TTY
	PUSHJ P,BLDHST	;GET HOST MAP NOW
	PUSHJ P,BLDAST
	MOVE F,SAVF
SUBTTL COMMAND DISPATCHER

LUDUP1:	SKIPN FIRSTF
	EXIT
	TRZ F,737766
	MOVE P,PDP
	HRLI	F,0	;ZERO LEFT HALF OF F
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /*/]
	TLO F,OCTINF
	HRLZI A,13	;WAIT FOR INPUT CHARACTER ON COMMAND PORT
	TRNN F,TTYOUT	;ONLY IF COMING IN OVER AN AUX. CIRCUIT
	HIBER A,	;HIBERNATE UNTIL ONE FOUND
	 JFCL
	PUSHJ P,GETONE
	MOVEM	N,CODE#
	CAILE N,MAXCOD
	JRST BADCOD
	SETZM ZERST
	MOVE A,[XWD ZERST,ZERST+1]
	BLT A,ZEREND
	MOVE B,CODE
	MOVE A,DISTAB(B)
	TLNE A,ACTCMD
	JRST [TRO F,ACTCMD
		TRNN F,ACTSYS	;IS THIS THE ACCTG. SYSTEM?
		PUSHJ P,NTHERE	;NO, CANNOT DO THIS COMMAND
		JRST .+1]
	TLNE A,LISCMD
	PUSHJ P,SETUPL
	TLNE A,CUSUPD
	PUSHJ P,SCUPD	;SET UP FOR CUSTOMER UPDATE
	TLNE A,ADRUPD
	PUSHJ P,SADUPD	;SET UP FOR ADDRESS UPDATE
	TLNE A,USRUPD
	PUSHJ P,SUSUPD	;SET UP FOR USER UPDATE
	TLNE A,USYSUPD
	PUSHJ P,SSYSUPD
	HRRZS A
        JFCL
	JRST @A


;BP SET UP
FINSYS:	MOVNI A,^D100
	LDB B,BP
	JUMPN B,[HRRZ A,BILBLK+^D113(A)
		POPJ P,0]
	AOJL A,.-2
	JRST IOERR
SUBTTL SET UP FOR LISTING COMMANDS

SETUPL:	TRO F,LIST
	TLNE A,LOKCUS
	JRST SETUPC
	TLNN A,LOKUUN
	POPJ P,0
	PUSH P,A
	PUSHJ P,UUNIN
	PUSHJ P,ASYSIN
	TRO F,ALLIOI
	PUSHJ P,USFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
SETUP1:	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	POP P,A
	PUSHJ P,SENDOK
	POPJ P,0

SETUPC:	PUSH P,A
	PUSHJ P,CUSTIN
	PUSHJ P,ASYSIN
	TRO F,ALLIOI
	PUSHJ P,CFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,AFIND
	PUSHJ P,NOTFND
	JRST SETUP1
SUBTTL DISPATCH TABLE

LISCMD==2	;COMMAND IS A LISTING COMMAND
CUSUPD==4	;CUSTOMER RECORD UPDATE
ADRUPD==10	;ADDRESS UPDATE
USRUPD==20	;USER UPDATE
USYSUPD==40	;USYSDB UDATE
REVIT==100	;CAN REVERSE THIS COMMAND
ACTCMD==400	;HAS TO BE ON ACTSYS TO DO THIS COMMAND
LOKCUS==1000	;LOOK UP CUSTOMER AND ADDRESS
LOKUUN==2000	;LOOK UP USER

DISTAB:	DONE				;0 DONE!
	XWD REVIT,DELNAM		;1 DELETE USER FROM LUD,DUL
	XWD REVIT,NEWNAM		;2 ADD A USER TO LUD,DUL
	XWD REVIT,CHNAME		;3 CHANGE USERS NAME IN LUD,DUL
	XWD REVIT,CHPBITS		;4 CHANGE PRIVILEGE BITS
	CHQUO				;5 CHANGE QUOTA IN THE LUD
        CHBUD                           ;6 CHANGE TRU BUDGET IN LUD
	XWD LISCMD,LISALL		;7 LIST ALL USERS IN THE LUD
	XWD REVIT,CHDIST		;10 CHANGE DISTRICT IN LUD
	XWD REVIT,CHZONE		;11 CHANGE ZONE IN LUD
	XWD REVIT,CHLGAN                ;12 CHANGE GAN IN LUD,DUL
	BADCOD
	BADCOD
	BADCOD
	BADCOD
	BADCOD
	XWD LISCMD,LISLUD		;20 LIST LUD ENTRY
	XWD LISCMD,LISGAN		;21 LIST ALL USERS FOR A GAN
	CKNAME				;22 CHECK NAME IN LUD
	XWD LISCMD,MULLUD		;23 MOVE USERS - LIST LUD INFO
	MUALUD				;24 MOVE USERS - ADD LUD INFO
	XWD LISCMD,DELGAN		;25 DELETE ACCOUNT
	XWD LISCMD,LSGANN		;26 LIST ONLY USER NAMES FOR A GAN
	XWD LISCMD,LISHST		;27 LIST ALL VALID HOSTS AND THEIR AST
	XWD ACTCMD+REVIT,NEWCUS		;30 ADD A CUSTOMER TO CUSTDB, ADDRDB
	XWD ACTCMD+CUSUPD,CHCDIS	;31 CHANGE CUSTOMER DISTRICT
	GETCID                          ;32 GET CUSTOMER NUMBER
	XWD ACTCMD+CUSUPD,CHCFFF        ;33 CHANGE CUST. FLAT FOCUS FEE
	XWD ACTCMD+CUSUPD,CHDET		;34 CHANGE CUSTOMER DETAIL CODE
	XWD ACTCMD+CUSUPD,CHINV		;35 CHANGE CUSTOMER INVOICE CODE
	XWD ACTCMD+CUSUPD,CHASLS	;36 CHANGE CUST SLS AND ALL USER SLS
	XWD ACTCMD+CUSUPD,CHPSLS	;37 CHANGE CUSTOMER SALESMAN
	XWD ACTCMD+CUSUPD,CHPO		;40 CHANGE CUSTOMER PO NUMBER
	XWD ACTCMD+CUSUPD,CHPOMX	;41 CHANGE CUSTOMER PO MAX
	XWD ACTCMD+CUSUPD,CHPOD1	;42 CHANGE CUSTOMER PO START DATE
	XWD ACTCMD+CUSUPD,CHPOD2	;43 CHANGE CUSTOMER PO STOP DATE
	XWD ACTCMD+ADRUPD,CHCNAM	;44 CHANGE CUSTOMER NAME
	XWD ACTCMD+ADRUPD,CHCADD	;45 CHANGE CUSTOMER ADDRESS
	BADCOD
	BADCOD
	XWD ACTCMD+LISCMD,LISCUS	;50 LIST CUSTOMER ACCOUNTING ENTRY
	XWD ACTCMD+LISCMD,LISNAM	;51 LIST CUSTOMER NAME
	XWD ACTCMD+LISCMD,LISAST	;52 LIST CUSTOMER AST'S
	XWD ACTCMD+LISCMD,LUAST		;53 LIST USER AST'S
	XWD ACTCMD+LISCMD,LUHCST	;54 LIST ALL USERS AND HOSTS FOR A CUSTOMER
	XWD ACTCMD+LISCMD,LGNCST	;55 LIST ALL GANS FOR A CUSTOMER
	XWD ACTCMD+LISCMD,LACUD1	;56 LIST ALL CUSTOMERS FOR A DISTRICT
	XWD ACTCMD+LISCMD,LAUSD1	;57 LIST ALL USERS FOR A DISTRICT
	XWD ACTCMD+REVIT,NEWUUN		;60 NEW USER FOR ACCOUNTING
	XWD ACTCMD+REVIT,ADDSIT		;61 ADD HOST FOR A USER
	XWD ACTCMD+REVIT+USRUPD,CHUNAM	;62 CHANGE USER NAME IN ACCOUNTING
	XWD ACTCMD+USRUPD,CHGCUS	;63 CHANGE CUSTOMER FOR USER
	XWD ACTCMD+USYSUPD,CHUSLS	;64 CHANGE SALESMAN FOR USER
	XWD ACTCMD+LISCMD,LISTALL	;65 LIST ALL USERS (MUD CHECK)
	XWD ACTCMD+LISCMD,LACUC1        ;66 LIST ALL CUST.S FOR A COSTCODE
	XWD ACTCMD+LISCMD,LAUSC1        ;67 LIST ALL USERS FOR A COSTCODE
	XWD ACTCMD+USRUPD,CHCURR	;70 CHANGE USER CURRENCY CODE
	XWD ACTCMD+USRUPD,CHUGAN        ;71 CHANGE USER GAN
	XWD ACTCMD+USYSUPD,CHUZON	;72 CHANGE ZONE FOR ACCTG.
	BADCOD
	XWD ACTCMD+REVIT,DELSIT		;74 REMOVE HOST FOR A USER
	XWD ACTCMD+USRUPD,CHUDIS	;75 CHANGE USER'S ACCTG. DISTRICT
	XWD ACTCMD+REVIT,DELUUN		;76 INVALIDATE USER
	BADCOD
	XWD ACTCMD+USRUPD,CHLAN		;100 CHANGE LANGUAGE CODE FOR A USER
	XWD ACTCMD+REVIT,ADDAST		;101 ADD ACCTG. SYS. TYPE FOR A USER
	BADCOD
        XWD ACTCMD+LISCMD,LISUCU        ;103 LIST USER CUSTOMER NUMBER.
        XWD ACTCMD+LISCMD,LSUGSY        ;104 OUTPUT NUMBER OF DIRECTORIESAFFECTED BY A CANCEL ACCOUNT
	XWD ACTCMD+LISCMD,LSUSYS	;105 LIST HOSTS FOR A USER
	XWD ACTCMD+LISCMD,LISUUN	;106 LIST USER ACCOUNTING
	XWD ACTCMD+LISCMD,LSCSYS	;107 LIST HOSTS FOR A CUSTOMER
	XWD ACTCMD+LISCMD,CHUUNT	;110 CHECK UUN FOR AN ACCTG. SYS.
	XWD ACTCMD+LISCMD,CHUUNS	;111 CHECK UUN FOR A HOST
	XWD ACTCMD+LISCMD,LUCUST	;112 LIST ALL USERS FOR A CUSTOMER
	XWD ACTCMD+LISCMD,LUGAN		;113 LIST ALL USERS FOR A GAN
	XWD ACTCMD+LISCMD,CHGANS	;114 CHECK GAN FOR A HOST
	XWD ACTCMD+LISCMD,CHCUST	;115 CHECK CUST FOR A HOST
	XWD ACTCMD+LISCMD,LSGAN		;116 LIST HOSTS FOR A GAN
	XWD ACTCMD+LISCMD+CUSUPD,CHADIS	;117 CHANGE DIST FOR ALL USERS FOR A CUST
	XWD ACTCMD+LISCMD,CHONHT	;120 CHECK FOR USER ON SPECIFIED HOST ONLY
	REVLUD				;121 REVERSE LUD ENTRY
	XWD ACTCMD,REVBIL		;122 REVERSE LAST BILLING ENTRY MADE
	XWD ACTCMD+LISCMD,LAHOST	;123 LIST ALL USERS FOR A HOST
	XWD ACTCMD+LISCMD,LUCST1	;124 LIST CUSTOMER NO. FOR A USR
	XWD ACTCMD+LISCMD,LDCUST	;125 LIST DIST FOR A CUST (ANY AST)
	XWD ACTCMD+LISCMD,LAUHD1	;126 LIST ALL USERS & HOSTS FOR A DIST
	XWD ACTCMD+LISCMD,LAAST		;127 LIST ALL USERS FOR AN AST
	XWD ACTCMD+LISCMD,LACUST	;130 LIST ALL CUSTS FOR A HOST
	XWD ACTCMD+LISCMD+LOKCUS,LCDIS		;131 LIST CUSTOMER DISTRICT
	XWD ACTCMD+LISCMD+LOKCUS,LCDET		;132 LIST CUSTOMER DETAIL
	XWD ACTCMD+LISCMD+LOKCUS,LCINV		;133 LIST CUSTOMER INVOICE CODE
	XWD ACTCMD+LISCMD+LOKCUS,LCMIN		;134 LIST CUSTOMER MINIMUM CODE
	XWD ACTCMD+LISCMD+LOKCUS,LCSLS		;135 LIST CUSTOMER SALESMAN
	XWD ACTCMD+LISCMD+LOKCUS,LPO		;136 LIST CUSTOMER PO NUMBER
	XWD ACTCMD+LISCMD+LOKCUS,LPOMAX	;137 LIST CUSTOMER PO MAX
	XWD ACTCMD+LISCMD+LOKCUS,LPOSTA		;140 LIST CUSTOMER PO START DATE
	XWD ACTCMD+LISCMD+LOKCUS,LPOSTO		;141 LIST CUSTOMER PO STOP DATE
	XWD ACTCMD+LISCMD+LOKCUS,LSTREET	;142 LIST CUSTOMER STREET ADDRESS
	XWD ACTCMD+LISCMD+LOKCUS,LCITY		;143 LIST CUSTOMER CITY
	XWD ACTCMD+LISCMD+LOKCUS,LSTATE		;144 LIST CUSTOMER STATE
	XWD ACTCMD+LISCMD+LOKCUS,LCOUN		;145 LIST CUSTOMER COUNTRY
	XWD ACTCMD+LISCMD+LOKCUS,LATTN		;146 LIST CUSTOMER ATTN LINE
	BADCOD
	XWD ACTCMD+LISCMD+LOKCUS,LDEFP		;150 LIST DEFAULT PRICING CODE
	XWD ACTCMD+LISCMD+LOKCUS,LZIP		;151 LIST CUSTOMER ZIP CODE
	XWD ACTCMD,SETTYM			;152 SET TYMUSE
	XWD ACTCMD,STPTYM			;153 UNSET TYMUSE
	XWD ACTCMD+LISCMD,LISTYM		;154 LIST A TYMUSE CUSTOMER
	XWD ACTCMD,SETDAY			;155 CHANGE TYMUSE NO. OF DAYS
	XWD ACTCMD,SETCUS			;156 CHANGE TYMUSE CUST
	XWD ACTCMD+LISCMD,LALTYM		;157 LIST ALL TYMUSE CUSTS
	XWD ACTCMD+LISCMD,LCUSTN		;160 LIST CUSTOMER FOR A USER
	XWD ACTCMD+LISCMD+LOKUUN,LUSLS		;161 LIST USER'S SALESMAN
	BADCOD
	XWD ACTCMD+LISCMD,CHKTYM		;163 CHECK FOR TYMUSE FOR A CUST
	XWD ACTCMD+LISCMD,LGNCCO                ;164 LIST ALL GANS FOR A COSTCODE
	XWD ACTCMD+LISCMD+LOKUUN,LUCURR		;165 LIST USER'S CURRENCY CODE
	BADCOD
	XWD ACTCMD+LISCMD+LOKUUN,LZONE		;167 LIST USER'S TIME ZONE
	XWD ACTCMD+LISCMD,LACCD1		;170 LIST ALL COSTCODES FOR A DISTRICT
	XWD ACTCMD+LISCMD+LOKUUN,LUDIST		;171 LIST USER'S DISTRICT
	BADCOD
	XWD ACTCMD+LISCMD+LOKUUN,LLANG		;173 LIST USER'S LANGUAGE
	BADCOD
	BADCOD
	BADCOD
	XWD ACTCMD+LISCMD,MUALGN	;177 - MOVE USERS - RETURN USRS FOR A GAN FOR A HOST AND ADD NEW HOST (IGNORE CUST)
	XWD ACTCMD+LISCMD,MUAUSR	;200 MOVE USERS - RETURN USERS FOR A CUST FOR A HOST AND ADD NEW HOST
	XWD ACTCMD+LISCMD,MUAGAN	;201 MOVE USERS - RETURN USERS FOR A CUST FOR A GAN FOR A HOST AND ADD NEW HOST
	DELNAM				;202 MOVE USERS - DELETE USER FROM LUD/DUL
	XWD ACTCMD+LISCMD,MUUSR1	;203 MOVE USERS - RETURN USERS FOR A CUSTOMER FOR A HOST
	XWD ACTCMD+LISCMD,MUGAN1	;204 MOVE USERS - RETURN USERS FOR A CUST FOR A GAN FOR A HOST
	XWD ACTCMD+REVIT,NWTUUN	        ;205 ADD A USER TO TUSRDB
	XWD ACTCMD,CHTNAM	        ;206 CHANGE USER NAME IN TUSRDWD ACTCMD+LISCMD,DLTACC	;207 CANCEL ACCOUNT IN TUSRDB
	XWD ACTCMD,TUSNUM       ; 210 NUM OF USERS FOR A GAN IN TUSRDB
	XWD ACTCMD+REVIT,DLTUUN	        ;211 CANCEL USER FROM TUSRDB
	XWD ACTCMD+LISCMD,LISTUU	;212 LIST USER IN TUSRDB
	XWD ACTCMD+LISCMD,LAUMNM	;213 LIST USERS FOR A MAIL UUN
	XWD ACTCMD+LISCMD,CKMNMC	;214 CHECK MAIL UUN FOR A CUST
	XWD ACTCMD,CHMNAM	;215 CHANGE MAIL NAME
	XWD ACTCMD+LISCMD,CKMNMU	;216 CHECK MAIL UUN FOR A USER
	XWD ACTCMD+LISCMD,LTYMNT ;217 LIST ALL USERS IN TUSRDB
	XWD ACTCMD,MAIADD	;220 ADD UUN-HOST TO TYMHST
	XWD ACTCMD,MAIREM	;221 REMOVE UUN-HOST TO TYMHST
	XWD ACTCMD+LISCMD,MHLIST	;222 LIST ALL MAIL UUNS AND THEIR HOSTS
	XWD ACTCMD+LISCMD,MAILST	;223 LIST ALL HOSTS FOR A UUN
	XWD ACTCMD,TRIADD	;224 ADD HOST TO TYMCNV
	XWD ACTCMD,TRIDEL	;225 DELETE HOST FROM TYMCNV
	XWD ACTCMD+LISCMD,TRILIS	;226 LIST HOSTS IN TYMCNV
	XWD ACTCMD+LISCMD,LUTGAN	;227 LIST USERS IN A GAN IN TUSRDB
	XWD ACTCMD+LISCMD,CKMNHT	;230 CHECK MAIL NAME FOR A HOST
	XWD ACTCMD+LISCMD,CKTRIP	;231 CHECK HOST IN TYMCNV
	XWD ACTCMD+LISCMD,CKHOST	;232 CHECK HOST FOR TYMCOM-III'S
        XWD ACTCMD+LISCMD+CUSUPD,CHTADS        ;233 CHANGE DISTRICT FOR ALL USERS FOR A CUSTOMER IN TUSRDB
        XWD ACTCMD,CHTUCS       ;234 CHANGE CUSNUM FOR USER IN TUSRDB
        BADCOD
        BADCOD
        BADCOD
        XWD ACTCMD,HSTASY                      ;240 LIST ASYSCODE FOR HOST.

MAXCOD==.-DISTAB

DONE:	TRNE F,TTYOUT	;IF TO TTY
	EXIT		;EXIT
	JRST BYEBYE	;OTHERWISE, LOGOUT

SUBTTL FILE OPERATIONS (OPEN, LOOKUP, ENTER)

GETSYS:	INIT DSK,17	;OPEN SYS
TST1:	SIXBIT /SYS/
;TST1:   SIXBIT  /DSK/
	0
	JRST INIERR
	POPJ P,0

OPLUD:	LOOKUP DSK,LUDLOK	;LOOKUP LUD
	PUSHJ P,LEERR
	POPJ P,0

GETLUD:	MOVEI N,^D10
	LOOKUP DSK,LUDLOK	;ENTER LUD
	PUSHJ P,LEERR
	ENTER DSK,LUDLOK
	JRST [HRRZ A,LUDLOK+3
		CAIE A,3	;FILE BUSY?
		PUSHJ P,LEERR	;NO, SOME OTHER ERROR
		MOVEI A,^D10	;YES, SLEEP FOR 10 SEC.
		SLEEP A,
		SOJG N,GETLUD+1
		JRST FILBZY]
	USETI DSK,@HLOC#
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,IOERR
	POPJ P,0

GETDUL:	MOVEI N,^D10
	LOOKUP DSK,DULLOK
	PUSHJ P,LEERR
	ENTER DSK,DULLOK
	JRST [HRRZ A,DULLOK+3
		CAIE A,3	;BUSY?
		PUSHJ P,LEERR	;NO, SOME OTHER ERROR
		MOVEI A,^D10
		SLEEP A,
		SOJG N,GETDUL+1
		JRST FILBZY]
	PUSHJ P,GETLAS
	MOVE A,LPPN
	IDIVI	A,^D101
	ADDI B,1
	MOVEM B,HLOC
	USETI	DSK,@B
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,IOERR
	POPJ	P,0
ROVBLK:	HRRZ	C,LUDBLK(INDEX)	;READ OVERFLOW BLOCK
	MOVEM	C,OVBLK#	;SAVE BLOCK NO.
	TLNN F,CHANGE
	JRST ROVBL1
	USETO DSK,@HLOC
	TRNE F,ERRF
	JRST ROVBL1
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,IOERR
ROVBL1:	USETI	DSK,@OVBLK
	INPUT	DSK,LUDLST	;READIT!
	STATZ DSK,760000
	PUSHJ P,IOERR
	SETZ INDEX,
	POPJ	P,0

GETLAS:	HLRE N,D	;PUT LAST BLOCK # IN LASBLK
	MOVMS N
	SUBI N,1
	ROT N,-7
	ADDI N,1
	TRNE F,ADDDUL+CHDUL
	JRST [CAIGE N,^D101
		MOVEI N,^D101
		JRST LASBAK]
	CAIGE N,^D887
	MOVEI N,^D887
LASBAK:	MOVEM N,LASBLK#
	POPJ P,0

GETBLK:	SKIPE A,OVBLK
	MOVEM A,HLOC
	SETZM OVBLK
	POPJ P,0
SUBTTL ERROR CODES

FND:	MOVEI	CH,2	;USER NAME ALLREADY THERE...IT SHOULD NOT BE
	JRST	NOGOOD
NOTFND:	MOVEI	CH,3	;USER NAME NOT THERE...IT SHOULD BE
	JRST	NOGOOD
DATERR:	MOVEI CH,4	;ILLEGAL DATE
	JRST NOGOOD
BADX22:	MOVEI CH,5	;X22 ERROR
	MOVEM CH,ERRCOD#
	MOVE F,SAVF
	JRST [MOVE A,IERT	;GET ERROR TYPE
		CAIE A,7	;UPDATE ERROR?
		JRST .+1	;NO
		MOVE A,IERC	;GET ERROR CODE
		CAIE A,1	;FILE BUSY?
		JRST .+1	;NO
		TRNN F,WAITF	;UPDATING A DATA BASE?
		JRST FILBZY	;NO, SAY FILE IS REALLY BUSY?????
		MOVEI A,^D10
		SLEEP A,	;SLEEP FOR 10 SECONDS AND TRY AGAIN
		JRST @AGNLOC]
	TRNN F,TTYOUT
	JRST NOG1
	MOVE N,IERT
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	MOVE N,IERC
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	JRST NOG1
DSKERR:	MOVEI	CH,6	;SOME KIND OF DISK ERROR...
	JRST NOGOOD
BADSIT:	MOVEI CH,7	;BAD HOST
	JRST NOGOOD
BADCUS:	MOVEI CH,11	;CUSTOMER NO. ERROR
	JRST NOGOOD
BADBIL:	MOVEI CH,12	;BILLING FILE ERROR
	JRST NOGOOD
FILBZY:	MOVEI CH,14	;SOME FILE IS BUSY, TRY LATER
	JRST ERROUT+1
BADVAL:	MOVEI CH,15	;ERROR IN INPUT VALUE
	JRST NOGOOD
DELERR:	MOVEI CH,16	;ERROR IN DELETING FILE
	JRST NOGOOD
AINDUL:	MOVEI CH,17	;USER IN DUL. 
	CLOSE DSK,
	JRST DULERR+1
INIERR:	MOVEI CH,24	; BAD INIT
	JRST ERROUT+1
;DO NOT USE ERROR CODE 21!!!
LEERR:	MOVEI CH,22	;BAD LOOKUP OR ENTER
	JRST ERROUT+1
IOERR:	MOVEI CH,23	;BAD INPUT OR OUTPUT
	JRST ERROUT+1
BADUSR:	MOVEI CH,25	;THIS USER RESTRICTED FROM THIS COMMAND
	JRST ERROUT+1
ZNERR:	MOVEI CH,26
	JRST NOGOOD	;ZERO GAN OR UUN
DUPERR:	MOVEI CH,27	;> 1 RECORD RETURNED FROM DB
	JRST NOGOOD
USRLFT:	MOVEI CH,30	;THERE ARE NO RECORD LEFT FOR THIS USRER
	JRST NOGOOD
NOADDR:	MOVEI CH,31
	JRST NOGOOD	;NO ADDRESS FOR THIS CUSTOMER
NTHERE:	MOVEI CH,33	;MUST BE ON ACCT. SYS. TO DO THIS COMMAND
	JRST NOGOOD
ERON9:	MOVEI CH,34	;CHANGE CUSTOMER CNNOT BE DONE BECAUSE USER IS
	JRST NOGOOD	;VALID ON A 940 SYSTEM
MHFND:	MOVEI CH,35	;MAIL-UUN HOST ALLREADY THERE
	JRST NOGOOD
MHNFND:	MOVEI CH,36	;MAIL-UUN HOST NOT FOUND
	JRST NOGOOD
TRFND:	MOVEI CH,40	;HOST IN TYMCNV NOT FOUND
	JRST NOGOOD
TRNFND:	MOVEI CH,41	;HOST IN TYMCNV ALLREADY THERE
	JRST NOGOOD
MNVALD:	MOVEI CH,44	;MAIL NAME CANNOT BE CANCELLED
        JRST NOGOOD
ILLAST: MOVEI CH,45     ;INVALID ACC.SYS.TYP. FOR THIS COMMAND
        JRST ERROUT+1
BADGAN: MOVEI CH,46     ;NEW GAN DOESN'T BELONG TO USER'S DIST.
        JRST ERROUT+1
NOGOOD:	TRON F,ERRF
	MOVEM CH,ERRCOD
	PUSH P,A
	MOVE A,SAVF
	TRO A,ERRF
	MOVEM A,SAVF
	POP P,A
NOG1:	TRZE F,ALLIOI
	JRST	NOG2
	TRNN F,TTYOUT
	POPJ P,0
NOG2:	MOVEM F,SAVF
	TRNE F,ACTCMD
	JSA 16,DBEND
	MOVE F,SAVF
	JRST ERROUT

ERROUT:	MOVE CH,ERRCOD
	TRZ F,LIST
	PUSHJ P,OUCH
	JRST LUDUP1

BADCOD:	TRO F,ALLIOI
	MOVEI CH,20
	PUSHJ P,OUCH
	TRNE F,TTYOUT
	JRST LUDUP1
	MOVE CH,CODE
	PUSHJ P,OUCH
	JRST LUDUP1
SUBTTL DUL ERROR - REVERSE LUD ENTRY

DULERR:	MOVEI CH,10	;SET ERROR CODE FOR DUL ERROR
	TRO F,ERRF
	MOVEM CH,ERRCOD
	PUSHJ P,OPLUD
	CLOSE DSK,
	MOVE A,SAVORG+LBLK
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	MOVE INDEX,SAVORG+LINDEX
	MOVE A,CODE	;IF CODE WAS INSERT, DELETE IT
	CAIN A,2
	JRST DELENT
	CAIN A,1
	JRST ADDENT
	CAIE A,3
	JRST ERROUT
	MOVE N,NNAME	;GET RID OF NEW NAME FIRST
	MOVE N1,NNAME+1
	PUSHJ P,HASHER
	MOVEM N1,HLOC
	MOVE A,HNNAME
	PUSHJ P,SETDEX+1
	JRST ERROUT
	SETZM ,LUDBLK+4(INDEX)
	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT

ADDENT:	MOVE A,SAVORG+HASH
	MOVEM A,LUDBLK+4(INDEX)
	SKIPA
DELENT:	SETZM ,LUDBLK+4(INDEX)
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST ERROUT
	CLOSE DSK,
	JRST ENDLUD
ENDLUD:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,IOERR
	CLOSE DSK,
	POPJ P,0
SUBTTL LUD CHANGE COMPLETED

DIDIT:	TRNE F,ERRF
	JRST ERROUT
	PUSHJ P,ENDLUD
DULAGN:	TRNN	F,ADDDUL+CHDUL
	JRST	DIDIT2
	MOVE A,CODE
	MOVEM A,OLLCOD#
	PUSHJ P,GETDUL
	MOVE A,LPPN
	TRZE	F,ADDDUL
	JRST	DULADD
	TRZE	F,CHDUL
	JRST	DULCH
	JRST DULERR
DULEND:	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	JRST DULERR
	CLOSE DSK,
DIDIT2:	RELEASE	DSK,
DIDIT3:	MOVE A,CODE
	MOVEM A,OLDCOD#
	TRNE F,ERRF
	JRST ERROUT
	MOVEI	CH,1
	PUSHJ P,OUCH
	MOVE A,CODE
	CAIE A,1
	JRST LUDUP1
	TRNE F,TTYOUT
	JRST LUDUP1
	HLRZ N,LPPN
	TLO F,OCTINF
	PUSHJ P,NUMOUT
	HRRZ N,LPPN
	TLO F,OCTINF
	PUSHJ P,NUMOUT
	JRST LUDUP1
SUBTTL LUD AND DUL SEARCHES

;A ROUTINE TO FIND A USER NAME IN A BLOCK
SETDEX:	MOVE	A,HUNAME	;IF ENTRY IS HERE, FIND HUNAME
	SETZ	INDEX,
	SKIPN	,LUDBLK(INDEX)
NONE:	JRST [SETZB C,OVBLK	;IN CASE NONE FOUND-RESET FROM ORIG BLK
		USETI DSK,@HLOC
		INPUT DSK,LUDLST
		STATZ DSK,760000
		PUSHJ P,IOERR
		POPJ  P,0]
	LDB	C,NENTP	;GET SIZ OF ENTRY
	CAMN	A,LUDBLK+4(INDEX)	;MATCH?
	JRST	[MOVEM	C,NENTRY#	;SAVE SIZE OF ENTRY
		MOVE C,LUDBLK(INDEX)
		MOVEM C,LPPN
                LDB C,INIPTR            ;LOAD 1 BYTE
		TLZ F,INITF+TRUF                ;SET INITF & TRUF TO ZERO
		SKIPE C
		TLO F,INITF             ;IF INIPTR WAS SET THEN SET INITF
		LDB C,TRUPTR
		SKIPE C
		TLO F,TRUF              ;IF TRUPTR WAS SET THEN SET TRUF
		AOS	(P)
		POPJ	P,0]
	SKIPG	,LUDBLK(INDEX)	;WAS NO. NEGATIVE?
	JRST	.+3		;YES, GO GET  OVERFLOW BLOCK
	ADD	INDEX,C	;NO, GOOD ENTRY, ADD SIZE OF IT TO INDEX
	JRST	SETDEX+2	;AND GO TRY NEXT ONE
	PUSHJ	P,ROVBLK	;READ OVERFLOW BLOCK IN
	JRST	SETDEX+1

FINDUL:	SETZ	C,
	SKIPN	,LUDBLK(C)
	JRST NONE
	SKIPG	,LUDBLK(C)
	JRST	[MOVE INDEX,C
		PUSHJ P,ROVBLK
		JRST FINDUL]
	CAMN	A,LUDBLK(C)
	JRST	RET1
	ADDI	C,3
	JRST	FINDUL+1
SUBTTL DUL OPERATIONS

DULADD:	PUSHJ P,FINDUL
	SKIPA
	JRST AINDUL	
	PUSHJ P,DULFRE	;SETS C
	SKIPE A,LUDBLK(C)
	MOVEM A,LUDBLK+3(C)
	MOVE A,LPPN
	MOVEM A,LUDBLK(C)
	MOVE A,UNAME
	MOVEM A,LUDBLK+1(C)
	MOVE A,UNAME+1
	MOVEM A,LUDBLK+2(C)
	PUSHJ P,ORGSV1
	JRST DULEND

DULFRE:	SETZ C,
	SKIPE A,LUDBLK(C)	;ZERO ENTRY FOUND?
	JRST [JUMPL A,DULFR3	;NO,GO CHECK IT - NEGATIVE?
		ADDI C,3	;NO REGULAR ENTRY, GO GET NXT
		JRST DULFRE+1]
	MOVE N,C
	ADDI N,3
	CAIGE N,200	;SEE IF ENTRY WILL FIT HERE
	POPJ P,0	;IT WILL, RETURN
	MOVE INDEX,C
	PUSHJ P,NOFIT	;NO MAKE OVERFLOW BLOCK
	JRST DULFRE
DULFR3:	MOVE N,C
	ADDI N,3
	CAILE N,200	;WILL IT FIT BEFORE OVFL PTR?
	JRST [MOVE INDEX,C
		PUSHJ P,ROVBLK	;NO, GET OVERFLOW BLOCK
		JRST DULFRE]
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK+3(C)	;SAVE PTR
	POPJ P,0
DULCH:	PUSHJ P,FINDUL
	JRST DULERR
	MOVE A,LUDBLK+1(C)
	MOVEM A,SAVORG+DNAME
	MOVE A,LUDBLK+2(C)
	MOVEM A,SAVORG+DNAME+1
	MOVE A,NNAME
	MOVEM A,SAVORG+DNAME
	MOVEM A,LUDBLK+1(C)
	MOVE A,NNAME+1
	MOVEM A,SAVORG+DNAME+1
	MOVEM A,LUDBLK+2(C)
	MOVEM C,SAVORG+DINDEX
	MOVE A,HLOC
	MOVEM A,SAVORG+DBLK
	JRST DULEND
SUBTTL CODE 1 - REMOVE USER FROM LUD

;&.SKIP 2
;&CODE 1: REMOVE USER FROM LUD/DUL, DELETE ALL FILES AND UFD
DELNAM:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ	P,NOTFND		;NONE FOUND
	PUSHJ P,DELIT	;ACTAULLY REMOVE FROM LUD, DUL
	MOVE A,CODE
	MOVEM A,OLLCOD
	JRST DIDIT3
DELIT:	MOVE A,LUDBLK(INDEX)
	CAME A,UFDPPN
	CAMN A,[XWD 1,4]
	JRST BADUSR
	CAME A,CUD10
	CAMN A,[XWD 11653,115244]	;DON'T REMOVE SPOOLING!
	JRST BADUSR
	PUSHJ P,CHKINF
	PUSHJ P,DELFIL
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOTFND
	PUSHJ P,ORGSAV
	SETZM	,LUDBLK+4(INDEX)	;ZERO IT
	TRNE F,ERRF
	JRST ERROUT
	PUSHJ P,ENDLUD
	PUSHJ P,GETDUL
	MOVE A,LPPN
DULDEL:	PUSHJ P,FINDUL
	JRST DULERR
	PUSHJ P,ORGSV1
	HRRI A,LUDBLK
	ADD A,C
	ADDI A,3
	HRLS A,A
	HRRI A,LUDBLK
	ADD A,C
	BLT A,LUDBLK+174
	PUSHJ P,GETBLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,760000
	JRST DULERR
	CLOSE DSK,
	RELEASE DSK,
	POPJ P,0
SUBTTL DELETE ALL FILES AND UFD FOR A USER

DELFIL:	TLZ F,UNLOK
	MOVE N,[XWD 20,12]
	CALLI N,41
	 JRST DERR
CHKJOB:	HRLZ B,N	;SEE IF USER IS LOGGED IN
	HRRI B,2
	CALLI B,41
	 JRST DERR
	CAMN B,LPPN
	 JRST DERR
	SOJG N,CHKJOB
	INIT DSK,17
	SIXBIT /DSK/
	0
	 JRST DERR
	MOVE A,LPPN
	HRLZI B,(SIXBIT/UFD/)
	SETZ C,
	MOVE D,UFDPPN
	LOOKUP DSK,A
	POPJ P,0
	INIT DFIL,17
	SIXBIT /DSK/
	0
	 JRST DERR
	MOVE A,[XWD FILINF+1,FILINF+2]
	BLT A,FILINF+7			;ZERO AREA FOR EACH USER
NXTGRP:	MOVE A,[XWD 33,DSK]
	CHANIO A,FILINF
	 JRST [STATZ DSK,20000
		JRST DELUFD
		SKIPE FILINF+7
		JRST DERR
		JRST NXTGRP]
	SKIPN N,FILINF+7
	JRST NXTGRP
	SETZ INDEX,
NXTFIL:	MOVE A,LUDBLK(INDEX)
	HLLZ B,LUDBLK+1(INDEX)
	SETZ C,
	MOVE D,LPPN
	LOOKUP DFIL,A
	 JRST DERR
	SETZB A,B
	SETZ C,
	MOVE D,LPPN
	RENAME DFIL,A
	 JRST DERR
	ADDI INDEX,2
	SOJG N,NXTFIL
	JRST NXTGRP
DELUFD:	RELEASE DFIL,
	PUSHJ P,FINUFD
	 JRST DERR
	POPJ P,0	;NO UFD
	SETZM UFDFIL+1
	SETZM UFDFIL+2
	SETZM UFDFIL+3
	RENAME UFD,UFDFIL
	 JRST DERR
	PUSHJ P,LETGO
	POPJ P,0

DERR:	TLZE F,UNLOK
	PUSHJ P,LETGO
	JRST DELERR
SUBTTL UFD ROUTINES

UFD==13
JBTSTS==0
JACCT==1

FINUFD:	MOVEI A,32
	MOVEM A,UFDFIL
	MOVE A,UFDPPN
	MOVEM A,UFDFIL+1
	MOVE A,LPPN
	MOVEM A,UFDFIL+2
	HRLZI A,(SIXBIT /UFD/)
	MOVEM A,UFDFIL+3
	HRROI A,JBTSTS
	GETTAB A,
	 POPJ P,0
	TLO A,JACCT
	TLO F,UNLOK
	SETJAL A,
	 POPJ P,0
	PUSHJ P,LOKSTR
	 POPJ P,0
	MOVEI A,17
	HRLI A,400000
	SETZ C,
	MOVE B,DSKB
	OPEN UFD,A
	 POPJ P,0
	LOOKUP UFD,UFDFIL
	 JRST [PUSHJ P,LETGO
		AOS (P)
		POPJ P,0]
	AOS (P)
	AOS (P)
	POPJ P,0

WTLOK:	SOJLE N1,RET0
	MOVEI A,1
	SLEEP A,
	SKIPA ;TRY AGAIN
LOKSTR:	MOVEI N1,^D60
	MOVEI B,6
	MOVE C,DSKB
	MOVE D,LPPN
	MOVE A,STRARG
	STRUUO A,
	 JRST WTLOK
	AOS (P)
	POPJ P,0

LETGO:	MOVEI B,7	;UNLOCK
	MOVE D,LPPN
LETGO1:	MOVE C,DSKB
	MOVE A,STRARG
	STRUUO A,
	 JFCL
	RELEASE UFD,
	HRROI A,JBTSTS
	GETTAB A,
	 POPJ P,0
	TLZ A,JACCT
	SETJAL A,
	 JFCL
	POPJ P,0
SUBTTL CODE 2 - ADD USER TO LUD

;&.SKIP 2
;&CODE 2: ADD USER TO LUD/DUL
NEWNAM:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	SKIPA
	PUSHJ P,FND
	PUSHJ P,USERIN	;&####INPUT GAN (THREE BYTES)
			;&####INPUT UUN (THREE BYTES)
	PUSHJ P,GETDIS	;&####INPUT DISTRICT (ONE BYTE)
	MOVE A,LPPN
	CAME A,UFDPPN
	CAMN A,[XWD 1,4]
	PUSHJ P,SNOLOG	;ADDING SYS OR UFD - SET NO LOGINS
	PUSHJ P,GETPBT	;&####INPUT PRIVILEGE BITS (SEE BELOW)
	HRRZ A,STCORE	;GET AMOUNT OF STANDARD CORE
	HRLS	A
	ADDM A,PRIV
	PUSHJ P,GETZONE	;&####INPUT USER TIME ZONE (ONE BYTE)
	DPB N,[POINT 6,PRIV,7]	;SAVE TIME ZONE INFO IN PRIV. WORD
	PUSHJ P,GETSTR	;&####INPUT QUOTAS (SIX BYTES)
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	SKIPA
	PUSHJ P,FND
	MOVEI N,^D8
	SKIPN BILABL#
	AOJ N,
	PUSHJ P,GETFRE	;GET NEXT FREE SPACE BIG ENUF
	MOVEM N,LUDBLK+2(INDEX)
	MOVE A,LPPN
	MOVEM A,LUDBLK(INDEX)
	MOVE A,DIST
	MOVEM A,LUDBLK+1(INDEX)
        MOVE A,MISC
        ADDM  A,LUDBLK+2(INDEX)
	MOVE A,PRIV
	MOVEM A,LUDBLK+3(INDEX)
	MOVE A,HUNAME
	MOVEM A,LUDBLK+4(INDEX)
	PUSH P,INDEX
	SKIPN A,BILABL
	 PUSHJ P,SETBUD
	MOVE A,STR
	MOVEM A,LUDBLK+5(INDEX)
	MOVE A,QIN
	MOVEM A,LUDBLK+6(INDEX)
	MOVE A,QOUT
	MOVEM A,LUDBLK+7(INDEX)
	POP P,INDEX
	PUSHJ P,ORGSAV
	TRO F,ADDDUL
	JRST DIDIT
SETBUD:	MOVEI A,764
        IMULI A,^D10000
	MOVEM A,LUDBLK+5(INDEX)
	MOVEI A,1
	DPB A,TRUPTR
	AOJ INDEX,
	POPJ P,0

SNOLOG:	MOVE A,DIST+1	;ADDING SYS OR UFD - NO LOGINS
	TLO A,400000
	MOVEM A,DIST+1
	POPJ P,0
SUBTTL SAVE ORIGINAL INFORMATION

;SAVE LUD INFO
ORGSAV:	MOVEM INDEX,SAVORG+LINDEX	;SAVE INDEX TO LUD ENTRY
	MOVE A,LUDBLK+4(INDEX)
	MOVEM A,SAVORG+HASH	;SAVE HASHED NAME
	PUSHJ P,GETBLK
	MOVE A,HLOC
	MOVEM A,SAVORG+LBLK	;SAVE HASH LOCATION
	POPJ P,0

;SAVE DUL INFO
ORGSV1:	MOVEM C,SAVORG+DINDEX	;SAVE INDEX TO DUL ENTRY
	MOVE A,UNAME
	MOVEM A,SAVORG+DNAME	;SAVE USER NAME
	MOVE A,UNAME+1
	MOVEM A,SAVORG+DNAME+1
	PUSHJ P,GETBLK
	MOVE A,HLOC
	MOVEM A,SAVORG+DBLK	;SAVE HASH LOCATION
	POPJ P,0
SUBTTL CODE 3 - CHANGE USER NAME IN LUD

;&.SKIP 2
;&CODE 3: CHANGE USER NAME IN LUD/DUL
CHNAME:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND	;NOT FOUND, SET ERROR CODE
	MOVE A,UNAME
	MOVEM A,SAVORG+ONAME
	MOVE A,UNAME+1
	MOVEM A,SAVORG+ONAME+1
	PUSHJ P,GNWNAM	;&####INPUT NEW USER NAME (TWELVE BYTES)
	MOVE A,NNAME
	MOVEM A,SAVORG+DNAME
	MOVE A,NNAME+1
	MOVEM A,SAVORG+DNAME+1
	PUSHJ P,CHKINF
	PUSHJ P,CHUFD
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOTFND
	MOVEM INDEX,SAVORG+OINDEX
	MOVEM A,LUDBLK+4(INDEX)
	MOVEM A,SAVORG+OHASH
	MOVE A,HLOC
	MOVEM A,SAVORG+OBLK
	PUSHJ P,SAVIT	;SAVE ALL OLD INFO AS IS
	SETZM ,LUDBLK+4(INDEX)	;ZERO OLD ENTRY IN BLK
	USETO DSK,@HLOC
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,IOERR
	TRNE F,ERRF
	JRST DIDIT
	MOVE N,NNAME
	MOVE N1,NNAME+1
	PUSHJ P,HASHER
	MOVEM N,HNNAME
	MOVEM N1,HLOC
	MOVE A,HLOC
	MOVEM A,SAVORG+LBLK
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,IOERR
	TRNN F,ERRF
	JRST [MOVE A,HNNAME
		PUSHJ P,SETDEX+1
		JRST CHNAM1]
	USETI DSK,@SAVORG+LBLK	;RETURN OLD INFO IF NAME ALLREADY THERE
	INPUT DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,IOERR
	MOVE INDEX,SAVORG+LINDEX
	PUSHJ P,RETIT
	USETO DSK,@SAVORG+LBLK
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,IOERR
	PUSHJ P,FND
	JRST DIDIT
CHUFD:	PUSHJ P,FINUFD
	 JFCL
	 POPJ P,0
	MOVE A,NNAME
	MOVEM A,UFDFIL+27
	MOVE A,NNAME+1
	MOVEM A,UFDFIL+30
	SETOM UFDFIL+25
	RENAME UFD,UFDFIL
	 JFCL
	PUSHJ P,LETGO
	POPJ P,0
CHNAM1:	MOVE N,NENTRY
	PUSHJ P,GETFRE
	PUSHJ P,RETIT
	MOVE A,HNNAME
	MOVEM A,LUDBLK+4(INDEX)
	MOVEM A,SAVORG+HASH
	MOVEM INDEX,SAVORG+LINDEX
	MOVE A,LUDBLK(INDEX)
	MOVEM A,LPPN
	MOVEM A,SAVORG+PPN
	TRO F,CHDUL
	JRST DIDIT
SUBTTL CODE 4 - CHANGE PRIVILEGE BITS IN LUD

;&.SKIP 2
;&CODE 4: CHANGE PRIVILEGE BITS IN LUD
CHPBIT:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND		;USER NAME NOT FOUND
	TRO F,NEWF
	PUSHJ P,GETPBT	;&####INPUT NEW PRIVILEGE BITS (SEE BELOW)

	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOTFND
	MOVE N,LUDBLK+2(INDEX)
	AND N,[XWD 637777,777777]
	IOR N,MISC
	MOVEM N,LUDBLK+2(INDEX)
	MOVE N,LUDBLK+3(INDEX)
	AND N,[XWD 777777,716177]
	IOR N,PRIV
	MOVEM N,LUDBLK+3(INDEX)
	JRST	DIDIT


;&.SKIP 2
;&CODE 5: CHANGE QUOTAS IN LUD
CHQUO:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND	;USER NAME NOT THERE
	PUSHJ P,GETSTR	;&####INPUT NEW QUOTAS (SIX BYTES)
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOTFND
	TLNE F,TRUF
	ADDI INDEX,1
	TLNE F,INITF
	ADDI INDEX,3
	ADDI INDEX,5
	MOVE A,QIN
	MOVEM A,LUDBLK+1(INDEX)
	MOVE A,QOUT
	MOVEM A,LUDBLK+2(INDEX)
	JRST DIDIT
SUBTTL CODE 6 CHANGE BUDGET IN LUD
;&CODE 6: CHANGE TRU BUDGET IN LUD
CHBUD:  PUSHJ   P,USERCM        ;&####INPUT USER NAME (TWELVE BYTES)
        PUSHJ   P,NOTFND
        PUSHJ   P,GETBUD        ;&####INPUT BUDGET (THREE BYTES)
        JUMPE   N,CHBUDZ        ; GO TO CHBUDZ IF NEW BUDGET IS 0 (NO BUDGET)
        TLNN    F,TRUF          ; SKIP IF PREVIOUS BUDGET PRESENT
         JRST   CHBUD2          ; GO TO CHBUD2 IF WE HAVE TO CREATE BUDGET
        PUSHJ   P,CHKINF
        PUSHJ   P,GETLUD        ; GET THE LUD
        PUSHJ   P,SETDEX        ; FIND THE BLOCK
        PUSHJ   P,NOTFND
        MOVE    N,BUDGET        ; PUT THE BUDGET IN PLACE
        MOVEM   N,LUDBLK+5(INDEX)
        JRST    DIDIT           ; GO WRITE IT OUT AND FINISH
CHBUD2: ; HERE WHEN OLD BUD ZERO, NEW BUD NE 0
        PUSHJ   P,CHKINF
        PUSHJ   P,SAVIT         ; SAVE OLD LUD RECORD
        PUSHJ   P,GETLUD
        SETZM   LUDBLK+4(INDEX) ; MARK RECORD AS CANCELLED
        USETO   DSK,@HLOC       ; FIND THE BLOCK
        OUTPUT  DSK,LUDLST      ; WRITE IT OUT
        STATZ   DSK,740000
        PUSHJ   P,IOERR
        TRNE    F,ERRF
        JRST    DIDIT
        MOVE    N,SAVLUD+2      ; COMPUTE LENGTH OF NEW RECORD
        ANDI    N,177
        AOJ     N,
        PUSHJ   P,GETFRE        ; GO FIND SPACE
        MOVE    N,[SAVLUD,,LUDBLK]      ; PREPARE TO COPY FIRST WORDS
        ADD     N,INDEX
        BLT     N,LUDBLK+5(INDEX)       ; DO IT
        MOVEI   N,1                     ; SET FLAG INDICATING BUDGET WORD
        DPB     N,TRUPTR
        MOVE    N,[SAVLUD+5,,LUDBLK+6]  ; COPY LAST PART OF RECORD
        ADD     N,INDEX
        LDB     C,NENTP                 ; AND PUT IN THE NEW LENGTH
        AOJ     C,
        DPB     C,NENTP
        SUBI    C,7
        ADDI    C,LUDBLK+6(INDEX)
        BLT     N,@C                    ; DO IT
        MOVE    N,BUDGET
        MOVEM   N,LUDBLK+5(INDEX)       ; PUT IN THE BUDGET
        JRST    DIDIT           ; WRITE IT AND EXIT
CHBUDZ: ; HERE WHEN NEW BUD 0
        TLNN    F,TRUF  ; SKIP IF OLD BUDGET WORD IS PRESENT
         JRST   CHBDZ2
; HERE WHEN OLD BUD NE 0, NEW BUD EQ 0
        PUSHJ   P,CHKINF
        PUSHJ   P,SAVIT
        PUSHJ   P,GETLUD
        SETZM   LUDBLK+4(INDEX) ; CANCEL OLD RECORD
        USETO   DSK,@HLOC
        OUTPUT  DSK,LUDLST
        STATZ   DSK,740000
        PUSHJ   P,IOERR
        TRNE    F,ERRF
        JRST    DIDIT
        MOVE    N,SAVLUD+2
        ANDI    N,177
        SOJ     N,
        PUSHJ   P,GETFRE        ; FIND A NEW SLOT
        MOVE    N,[SAVLUD,,LUDBLK]
        ADD     N,INDEX
        BLT     N,LUDBLK+5(INDEX) ; COPY FIRST PART
        SETZ    N,
        DPB     N,TRUPTR        ; TURN OFF BUDGET FLAG
        MOVE    N,[SAVLUD+6,,LUDBLK+5]  ; COPY THE REST
        ADD     N,INDEX
        LDB     C,NENTP
        SOJ     C,
        DPB     C,NENTP         ; PUT IN THE NEW LENGTH
        SUBI    C,7
        ADDI    C,LUDBLK+5(INDEX)
        BLT     N,@C            ; DO THE COPY
        JRST    DIDIT
CHBDZ2: PUSHJ   P,CHKINF
        JRST    DIDIT3          ; NOTHING TO DO, JUST SAY IT'S DONE.
SUBTTL CODE 7 - LIST ALL USERS IN THE LUD

;&.SKIP 2
;&CODE 7: LIST ALL USERS IN THE LUD
;&####FOR EACH USER, OUTPUT:
LISALL:	PUSHJ P,NGANIN
	MOVE C,A
NXTU:	ADDI C,3
	SKIPG B,DULBLK(C)
	JRST [PUSHJ P,RDBLK
		JRST LSTU
		MOVE C,A
		JRST NXTU]
	MOVE BP,NAMPTR
	PUSHJ P,NAMOUT+1	;&####OUTPUT USER NAME (TWELVE BYTES)
	MOVE N,DULBLK(C)	;&####OUTPUT PPN (SIX BYTES)
	MOVEM N,WD
	PUSHJ P,PPNOUT
	PUSHJ P,CRLF
	JRST NXTU
LSTU:	CLOSE DSK1,
	PUSHJ P,SENDEND	;&####END WITH 377B

	JRST LUDUP1
SUBTTL CODE 10 - CHANGE USER DISTRICT IN THE LUD

;&.SKIP 2
;&CODE 10: CHANGE USER DISTRICT IN THE LUD
CHDIST:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND
	TRO F,NEWF
	PUSHJ P,GETDIS	;&####INPUT NEW DISTRICT (ONE BYTE)
	MOVEM N,DIST
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOTFND
	MOVE N,DIST
	DPB N,DISBP
	JRST	DIDIT
SUBTTL CODE 11 - CHANGE USER TIME ZONE IN THE LUD
;&.SKIP 2
;&CODE 11: CHANGE USER TIME ZONE IN THE LUD
CHZONE:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND
	TRO F,NEWF
	MOVE A,LUDBLK(INDEX)
	CAMN A,[XWD 1,21]
	JRST BADUSR
	PUSHJ P,GETZONE	;&####INPUT NEW TIME ZONE (ONE BYTE)
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOTFND
	MOVE N,ZONE#
	DPB N,ZONEBP
	JRST DIDIT



;&.SKIP 2
;&CODE 12: CHANGE GAN IN LUD,DUL
CHLGAN: PUSHJ P,USERCM  ;&####INPUT USER NAME (TWELVE BYTES)
        PUSHJ P,NOTFND
        MOVE A,HLOC
        MOVEM A,HLOCSV# ;SAVE HLOC OF LUD ENTRY
        PUSHJ P,GANIN   ;&####INPUT NEW GAN (THREE BYTES)
        MOVEM N,GAN
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	PUSHJ P,NOTFND
	CLOSE DSK,
	PUSHJ P,CHKINF
        PUSHJ P,GETDUL
        MOVE A,LPPN
        PUSHJ P,DULDEL  ;DUL ENTRY REMOVED
        PUSHJ P,RENUFD  ;UFD ENTRY RENAMED
         JFCL
        PUSHJ P,GETSYS
        MOVE A,HLOCSV
        MOVEM A,HLOC
        PUSHJ P,GETLUD
        PUSHJ P,SETDEX
        PUSHJ P,NOTFND
        MOVE A,LPPN
        HRL A,GAN
        MOVEM A,LPPN
        MOVEM A,LUDBLK(INDEX)
        PUSHJ P,ORGSAV
        TRO    F,ADDDUL
        JRST DIDIT      ;DUL ENTRY ADDED & LUD ENTRY CHANGED

RENUFD: RELEASE DFIL,
        PUSHJ P,FINUFD
         JRST DERR      ;COUDN'T OPEN UFD FILE
        POPJ P,0        ;COULDN'T FIND A UFD FOR THIS USER
        MOVE N,LPPN     ;FOUND THE UFD, NOW RENAME IT 
        HRL N,GAN
        MOVEM N,UFDFIL
        HRLZI N,(SIXBIT/UFD/)
        MOVEM N,UFDFIL+1
        SETZM UFDFIL+2
        MOVE N,UFDPPN
        MOVEM N,UFDFIL+3
        RENAME UFD,UFDFIL
         JRST DERR
        MOVEI B,7       ;UNLOCK
        MOVE D,UFDFIL
        PUSHJ P,LETGO1
        AOS (P)
        POPJ P,0
SUBTTL CODE 20 - LIST LUD ENTRY

;&.SKIP 2
;&CODE 20: LIST USER LUD ENTRY
LISLUD:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF FOUND), 3 (IF NOT FOUND) OR ERROR
	MOVE N,LUDBLK(INDEX)
	MOVEM N,WD#
	PUSHJ P,PPNOUT	;&####OUTPUT PPN (SIX BYTES)
	LDB N,DISBP
	PUSHJ P,CRLF
	TLO F,NOCR
	PUSHJ P,DISOUT	;&####OUTPUT DISTRICT (ONE BYTE)
	PUSHJ P,PBOUT	;&####OUTPUT PRIVILEGE BITS (SEE BELOW)
	PUSHJ P,CRLF
	PUSHJ P,LZONOUT	;&####OUTPUT TIME ZONE (ONE BYTE)
	PUSHJ P,STROUT	;&####OUTPUT QUOTAS (SIX BYTES)
	RELEASE DSK,
	JRST LUDUP1
SUBTTL CODE 21 - LIST ALL USERS FOR A PROJECT

;&.SKIP 2
;&CODE 21: LIST ALL LUD USERS FOR A GAN
LISGAN:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF FOUND), 3 (IF NOT FOUND) OR ERROR
	HLRZ N,LUDBLK(INDEX)
	HRLZM N,GAN	;SAVE GAN
	PUSHJ P,GANOUT	;&####FIRST OUTPUT THE GAN (THREE BYTES)
			;&####THEN FOR EACH USER, OUTPUT:
	PUSHJ P,NGANIN	;INITIALIZE READING THRU DUL
NXT:	PUSHJ P,NXTGAN	;GET NEXT GAN
	JRST [CLOSE DSK1,
		PUSHJ P,SENDEND
		JRST LUDUP1]
	PUSHJ P,INFOUT
	JRST NXT
;INITIALIZE READING THRU DUL SEARCHING FOR GANS
NGANIN:	INIT DSK1,17
TST2:	SIXBIT /SYS/
;TST2:	SIXBIT /DSK/
	0
	JRST INIERR
	LOOKUP DSK1,DULLOK
	PUSHJ P,LEERR
	PUSHJ P,RDBLK
	 JFCL
	POPJ P,0

RDBLK:	INPUT DSK1,DULLST
	STATZ DSK1,20000
	JRST [CLOSE DSK1,
		POPJ P,0]
	STATZ DSK1,760000
	PUSHJ P,IOERR
	MOVNI A,3
	MOVEM A,GANDEX#
	AOS (P)
	POPJ P,0

NXTGAN:	MOVE C,GANDEX
	ADDI C,3
	MOVEM C,GANDEX
	SKIPG B,DULBLK(C)
	JRST [PUSHJ P,RDBLK
		POPJ P,0
		JRST NXTGAN]
	HLLZ B,B
	CAME B,GAN
	JRST NXTGAN
	MOVE N,DULBLK+1(C)
	MOVE N1,DULBLK+2(C)
	PUSHJ P,USERCM+3
	JRST NXTGAN
	MOVE C,GANDEX
	AOS (P)
	POPJ P,0
INFOUT:	PUSHJ P,CRLF
	MOVE BP,NAMPTR
	PUSHJ P,NAMOUT+1	;&####OUTPUT USER NAME (TWELVE BYTES)
	TLNE F,NAMESO
	POPJ P,0
	TRNE F,TTYOUT
	OUTSTR MUUN
	HRRZ N,LUDBLK(INDEX)
	TLO F,OCTINF
	PUSHJ P,NUMOUT	;&####OUTPUT UUN (THREE BYTES)
	PUSHJ P,PBOUT	;&####OUTPUT PRIVILEGE BITS (SEE BELOW)
	PUSHJ P,CRLF
	PUSHJ P,LZONOUT	;&####OUTPUT TIME ZONE (ONE BYTE)
	JRST STROUT	;&####OUTPUT QUOTAS (SIX BYTES)
			;&####END WITH 377B
SUBTTL CODE 22 - CHECK USER'S NAME IN LUD

;&.SKIP 2
;&CODE 22: CHECK USER'S NAME IN THE LUD
CKNAME:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,NOTFND
	JRST DIDIT3	;&####ANSWER 1 (IF FOUND), 3 (IF NOT FOUND) OR ERROR



;&.SKIP 2
;&CODE 23: MOVE USERS - LIST LUD INFORMATION
MULLUD:	PUSHJ P,USERCM	;&####INPUT USERNAME (12 BYTES)
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF FOUND), 3 (IF NOT), OR ERROR
	MOVE N,LUDBLK(INDEX)
	MOVEM N,WD
	PUSHJ P,PPNOUT	;&####OUTPUT PPN (SIX BYTES)
	PUSHJ P,CRLF
	LDB N,DISBP
	PUSHJ P,DISOUT	;&####OUTPUT DISTRICT (ONE BYTE)
	PUSHJ P,MISOUT	;&####OUTPUT MISCELLANEOUS BITS (ONE BYTE)
	TLNE F,TRUF
	PUSHJ P,BUDOUT	;&####IF TRU BIT ON, OUTPUT BUDGET (THREE BYTES)
	TLNE F,INITF
	PUSHJ P,INIOUT	;&####IF INIT FILE, OUTPUT USER NAME (TWELVE BYTES)
	MOVE N,LUDBLK+3(INDEX)	;&#######AND FILE NAME (SIX BYTES)

	MOVEM N,WD
	TRNN F,TTYOUT
	JRST [HLRZ N,WD
		PUSHJ P,NUMOUT
		HRRZ N,WD
		PUSHJ P,NUMOUT
		JRST MULUD1]
	OUTSTR MPRIV
	PUSHJ P,HALVOT	;&####OUTPUT PRIVILEGE WORD (SIX BYTES)
	PUSHJ P,CRLF
MULUD1:	PUSHJ P,STROUT	;&####OUTPUT QUOTAS (SIX BYTES)
	RELEASE DSK,
	JRST LUDUP1
SUBTTL CODE 24 - MOVE USERS ADD LUD INFORMATION

;&.SKIP 2
;&CODE 24: MOVE USERS - ADD LUD INFORMATION
MUALUD:	PUSHJ P,USERCM	;&####INPUT USER NAME (TWELVE BYTES)
	SKIPA
	PUSHJ P,FND
	MOVEI N,^D8
	MOVEM N,SIZE	;SAVE SIZE OF MINIMUM ENTRY
	PUSHJ P,USERIN	;&####INPUT GAN, UUN (THREE BYTES EACH)
	PUSHJ P,GETDIS	;&####INPUT DISTRICT (ONE BYTE)
	PUSHJ P,GETMIS	;&####INPUT MISCELLANEOUS BITS (ONE BYTE)
	LDB A,[POINT 1,MISC,4]	;BUDGET FOR THIS USER?
	JUMPE A,.+2
	PUSHJ P,[TLO F,TRUF
		PUSHJ P,GETBUD	;&####IF TRU BIT ON, INPUT BUDGET (THREE BYTES)
		AOS SIZE	;COUNT BUDGET WORD
		POPJ P,0]
	LDB A,[POINT 1,MISC,27] ;INIT FILE?
	JUMPE A,.+2
	PUSHJ P,[TLO F,INITF
		PUSHJ P,GETINI	;&####IF INIT FILE, INPUT USER NAME (TWELVE BYTES)
				;&#######AND FILE NAME (SIX BYTES)
		AOS SIZE	;COUNT INIT INFORMATION
		AOS SIZE
		AOS SIZE
		POPJ P,0]
	TRNE F,TTYOUT
	OUTSTR MPRIV1
	TLO F,OCTINF
	PUSHJ P,GETNUM	;&####INPUT PRIVILEGE WORD (SIX BYTES)
	HRLZM N,PRIV
	TRNE F,TTYOUT
	OUTSTR MPRIV2
	TLO F,OCTINF
	PUSHJ P,GETNUM
	HRRM N,PRIV
	PUSHJ P,GETSTR	;&####INPUT QUOTAS (SIX BYTES)
	PUSHJ P,CHKINF
	PUSHJ P,GETLUD
	PUSHJ P,SETDEX
	SKIPA
	PUSHJ P,FND
	MOVE N,SIZE
	PUSHJ P,GETFRE
	ADDM N,MISC	;SAVE SIZE OF ENTRY
	MOVE A,[XWD LPPN,LUDBLK]
	ADD A,INDEX
	HRRZ B,A
	ADDI B,3
	BLT A,@B
	MOVE A,HUNAME
	MOVEM A,LUDBLK+4(INDEX) ;SAVE HASHED USER NAME
	PUSH P,INDEX
	TLNE F,TRUF
	PUSHJ P,[MOVE N,BUDGET
		MOVEM N,LUDBLK+5(INDEX)
		AOJ INDEX,
		POPJ P,0]
	TLNE F,INITF
	PUSHJ P,[MOVE A,[XWD INIFIL,LUDBLK+5]
		ADD A,INDEX
		HRRZ B,A
		ADDI B,3
		BLT A,@B
		ADDI INDEX,3
		POPJ P,0]
	MOVE A,[XWD STR,LUDBLK+5]
	ADD A,INDEX
	HRRZ B,A
	ADDI B,2
	BLT A,@B
	POP P,INDEX
	PUSHJ P,ORGSAV
	TRO F,ADDDUL
	JRST DIDIT
SUBTTL CODE 25 - DELETE ALL USERS FOR AN ACCOUNT

;&.SKIP 2
;&CODE 25: DELETE ALL USERS FOR AN ACCOUNT FROM THE LUD
DELGAN:	PUSHJ P,GANIN	;&####INPUT GAN (THREE BYTES)
	HRLZM N,GAN#
	PUSHJ P,NGANIN	;INITIALIZE SEARCH
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF NO ERRORS) OR AN ERROR
DELNXT:	PUSHJ P,NXTGAN
	JRST [CLOSE DSK1,
		PUSHJ P,SENDEND	;&####FOR EACH USER DELETED, OUTPUT:
		JRST LUDUP1]
	PUSHJ P,CRLF
	MOVE BP,NAMPTR
	PUSHJ P,NAMOUT+1	;&####USER NAME (TWELVE BYTES)
	MOVE N,LUDBLK(INDEX)	;&####PPN (SIX BYTES)
	MOVEM N,WD
	PUSHJ P,PPNOUT
	PUSHJ P,CRLF
	PUSHJ P,DELIT
	PUSHJ P,SENDOK		;&####1 OR ERROR CODE
	JRST DELNXT	;&####END WITH 377B


;&.SKIP 2
;&CODE 26: LIST ALL USERS FOR A PROJECT (NAME ONLY)
LSGANN:	TLO F,NAMESO	;SET FLAG
	JRST LISGAN	;AND GO OUTPUT INFORMATION
;&####INPUT IS THE SAME AS CODE 21
;&####OUTPUT IS THE SAME AS CODE 21 EXCEPT ONLY THE NAME IS OUTPUT
SUBTTL CODE 27 - LIST VALID HOSTS <= 200 AND THEIR AST'S

;&.SKIP 2
;&CODE 27: LIST ALL VALID HOSTS <= 200 AND THEIR AST'S
;&##FOR EACH VALID HOST NUMBER <= 200
LISHST:	SETZ INDEX,	;INIT INDEX
	MOVNI N,MXTHST	;NUMBER OF HOSTS TO CHECK
	SKIPN A,HSTLST(INDEX)	;FOUND A VALID HOST?
	JRST NLHST	;NO, GO CHECK NEXT ONE
	PUSH P,N
	PUSH P,A
	MOVE N,INDEX	;&####OUTPUT HOST NUMBER (1 BYTE)
	PUSHJ P,ONEOUT
	PUSHJ P,SPAOUT
	POP P,N	;&####OUTPUT AST (1 BYTE)
	PUSHJ P,ONEOUT
	PUSHJ P,CRLF
	POP P,N
NLHST:	AOJ INDEX,
	AOJL N,LISHST+2
	PUSHJ P,SENDEND	;OUTPUT 377 (1 BYTE)
	JRST LUDUP1
SUBTTL CODE 30 - NEW CUSTOMER
;&.SKIP 2
;&CODE 30: NEW CUSTOMER
NEWCUS:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	MOVEM N,SAVORG+OCUST	;SAVE CUSTOMER NUMBER
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	MOVEM N,SAVORG+OAST
	PUSHJ P,CFIND
	SKIPA
	PUSHJ P,FND
	MOVE A,SAVORG+OAST
	CAIE A,ASTIII
	JRST NWCS1
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPE NUMRET
	PUSHJ P,BADCUS
NWCS1:	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,AFIND
	SKIPA
	TLO F,DELADD	;SET FLAG TO DELETE ADDRESS
	PUSHJ P,GETNAM	;&####INPUT CUSTOMER NAME (51 BYTES)
	PUSHJ P,GETDIS	;&####INPUT CUSTOMER DISTRICT (ONE BYTE)
	PUSHJ P,GETDET	;&####INPUT CUSTOMER DETAIL CODE (TWO BYTES)
	PUSHJ P,GSTINV	;&####INPUT CUSTOMER INVOICE CODE (2 BYTES)
	PUSHJ P,GETMIN	;&####INPUT CUSTOMER MINIMUM CODE (ONE BYTE)
	PUSHJ P,GETSLS	;&####INPUT SALESMAN (ONE BYTE)
	PUSHJ P,GETPO	;&####INPUT PO NUMBER (THIRTY BYTES)
	PUSHJ P,GETPMX	;&####INPUT PO MAXIMUM (THREE BYTES)
	PUSHJ P,GETPD1	;&####INPUT PO START DATE (THREE BYTES-YYMMDD)
	PUSHJ P,GETPD2	;&####INPUT PO STOP DATE (THREE BYTES-YYMMDD)
	PUSHJ P,GETVPF	;&####INPUT VARIABLE PRICING FLAG (ONE BYTE)
	PUSHJ P,GETDPR  ;&####INPUT DEFAULT PRICING CODE (TWO BYTES)
	PUSHJ P,GETADD	;&####INPUT CUSTOMER ADDRESS (SEE BELOW)
        PUSHJ P,COCOIN  ;&####INPUT COST CODE (THREE BYTES)
	PUSHJ P,CHKINF
	PUSHJ P,GETTOD	;GET TODAY'S DATE
	MOVEM N,CINFO+NCDSTART
	MOVE N,NSTOP	;NULL STOP DATE
	MOVEM N,CINFO+NCDSTOP
        MOVEM N,CINFO+NANNDT
	TLZE F,DELADD
	PUSHJ P,[JSA 16,DBDEL
		MOVE F,SAVF
		POPJ P,0]
	MOVEI A,AINFO
	PUSHJ P,ADDIT
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,CINIT
	MOVEI A,CINFO
	PUSHJ P,ADDIT
	JRST CHEND
SUBTTL SET UP FOR UPDATES

;CUSTDB UPDATE
SCUPD:	PUSH P,A	;SAVE CODE
	PUSHJ P,CUSTIN
	PUSHJ P,ASYSIN
	PUSHJ P,CFIND
	PUSHJ P,NOTFND
	TRO F,NEWF
	POP P,A
	POPJ P,0

;USERDB UPDATE
SUSUPD:	PUSH P,A
	PUSHJ P,UUNIN
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	TRO F,NEWF
	POP P,A
	POPJ P,0

;ADDRDB UPDATE
SADUPD:	PUSH P,A
	PUSHJ P,CUSTIN
	PUSHJ P,ASYSIN
	PUSHJ P,AFIND
	PUSHJ P,NOADDR
	TRO F,NEWF
	POP P,A
	POPJ P,0

;USYSDB UPDATE
SSYSUPD:	PUSH P,A
	PUSHJ P,UUNIN
	PUSHJ P,ASYSIN
	PUSHJ P,USFIND
	PUSHJ P,NOTFND
	TRO F,NEWF
	POP P,A
	POPJ P,0
SUBTTL CODE 31 - CHANGE CUSTOMER'S DISTRICT

;&.SKIP 2
;&CODE 31: CHANGE CUSTOMER'S DISTRICT
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHCDIS:	PUSHJ P,GETDIS	;&####INPUT NEW DISTRICT (ONE BYTE)
        ;SETZM CINFO+NCCOST      ;ZERO THE COSTCODE IN NEW RECORD
	JRST NEWCRC	;CREATE A NEW RECORD
SUBTTL CREATE A NEW RECORD FOR THIS CHANGE

;CREATE A NEW CUSTOMER RECORD
NEWCRC:	PUSHJ P,CHKINF
	PUSHJ P,MKNCUS
	JRST CHEND

MKNCUS:	PUSHJ P,GETTOD	;GET TODAY'S DATE
	MOVEM N,CINFO+NCDSTOP
	MOVEI A,TCSTP
	MOVEI B,CINFO+NCDSTOP
	PUSHJ P,CHGIT
	PUSHJ P,GETTOM
	MOVEM N,CINFO+NCDSTART
	MOVE N,NSTOP	;NULL STOP DATE
	MOVEM N,CINFO+NCDSTOP
	MOVEI A,CINFO
	PUSHJ P,ADDIT
	POPJ P,0

;CREATE A NEW USER RECORD
NEWURC:	PUSHJ P,CHKINF
	PUSHJ P,MKNUSR
	JRST CHEND

MKNUSR:	PUSHJ P,GETTOD
	MOVEM N,UINFO+NUSTOP
	MOVEI A,TUSTP
	MOVEI B,UINFO+NUSTOP
	PUSHJ P,CHGIT
	PUSHJ P,GETTOM
	MOVEM N,UINFO+NUSTART
	MOVE N,NSTOP
	MOVEM N,UINFO+NUSTOP
	MOVEI A,UINFO
	PUSHJ P,ADDIT
	POPJ P,0
;CREATE A NEW USYSDB RECORD
NEWUSRC:	PUSHJ P,CHKINF
	PUSHJ P,MKNUS
	JRST CHEND

MKNUS:	PUSHJ P,GETTOD
	MOVEM N,USINFO+NSYSTOP
	MOVEI A,TUSSTP
	MOVEI B,USINFO+NSYSTOP
	PUSHJ P,CHGIT
	PUSHJ P,GETTOM
	MOVEM N,USINFO+NSYSTART
	MOVE N,NSTOP
	MOVEM N,USINFO+NSYSTOP
	MOVEI A,USINFO
	PUSHJ P,ADDIT
	POPJ P,0




SUBTTL CODE 32 - GET CUSTOMER NUMBER
;&.SKIP 2
;&CODE 32: GET CUSTOMER NUMBER
;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
; This routine read file CID.FIL (only contains one word) to get current
; cid, increment by 1 then write the new cid back. We use buffer i/o here
; and will try 6 times with 10 seconds apart when file is busy
 
GETCID: MOVEM   F,SAVF
        MOVEI   N,6
        OPEN    DSK,OPNBLK
         JRST   INIERR
        INBUF   DSK,1
        OUTBUF  DSK,1
GECID2: LOOKUP  DSK,FILNAM
         JRST   LEERR                 ; lookup error
        ENTER   DSK,FILNAM
         JRST   [HRRZ A,FILNAM+3
                 CAIE A,3             ; file busy
                  JRST LEERR          ; no, other i/o error
                 MOVEI A,^D10         ; sleep for 10 sec.
                 SLEEP A,
                 SOJG  N,GECID2
                 JRST  FILBZY]
L1:     IN      DSK,                  ; read the file
        JRST    L2                    ; normal return
        CLOSE   DSK,
        JRST    LEERR                 ; eof or other error
L2:     SOSGE   IBCT
         JRST   L1                    ; should neve been here!
        ILDB    N,IBPTR               ; load in current cid
        AOS     N                     ; increment by 1
L3:     SOSG    OBCT
         JRST   L4
        USETO   DSK,1                 ; point to the first block of the file
        IDPB    N,OBPTR               ; deposit new cid to the output buffer
        OUT     DSK,                  ; write to the file
        CLOSE   DSK,
        RELEASE DSK,
        JRST    L5
L4:     OUT     DSK,                   ; flush output buffer
        JRST    L3
L5:     MOVEM   N,CID                 ; N will be used for other purpose
        PUSHJ   P,SENDOK
        MOVE    N,CID
        TRNE    F,TTYOUT
        OUTSTR  MCSTNO
        PUSHJ   P,NUMOUT              ; output cid
        MOVE    F,SAVF
        JRST    INITIA
 
 
 
;&CODE 33: CHANGE CUSTOMER FLAT FOCUS FEE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHCFFF: PUSHJ P,GETFFF  ;&####INPUT FLAT FOCUS FEE (ONE BYTE)...1=Y,0=N
        MOVE N,CINFO+NCSYSC
        CAME N,THREE    ;SKIP IF ASYSCODE TO CHANGE IS THREE
        JRST ILLAST     ;SEND 'ILLEGAL AST FOR THIS COMD.' MESG
        PUSHJ P,CHKINF
        PUSHJ P,MKNCUS
        JRST CHEND
SUBTTL CODE 34 - CHANGE CUSTOMER'S DETAIL CODE

;&.SKIP 2
;&CODE 34: CHANGE CUSTOMER'S DETAIL CODE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHDET:	PUSHJ P,GETDET	;&####INPUT NEW DETAIL CODE (TWO BYTES)
	PUSHJ P,CHKINF
	MOVEI A,TCDETCOD
	MOVEI B,CINFO+NCDETC
	PUSHJ P,CHGIT
	JRST CHEND


;&.SKIP 2
;&CODE 35: CHANGE CUSTOMER'S INVOICE CODE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHINV:	PUSHJ P,GSTINV	;&####INPUT NEW INVOICE CODE (TWO BYTES)
	PUSHJ P,CHKINF
	MOVEI A,TINVCODE
	MOVEI B,CINFO+NCINVC
	PUSHJ P,CHGIT
	JRST CHEND
SUBTTL CODE 36 - CHANGE CUST SLS AND ALL USER SLS'S

;&.SKIP 2
;&CODE 36: CHANGE CUSTOMER SLS AND ALL USR SLS
;&####INPUT SAME AS CODE 37
CHASLS:	PUSHJ P,GETSLS
	PUSHJ P,CHKINF
	PUSHJ P,MKNCUS
	JSA 16,DBCLOS
	JSA 16,DBOPEN
	ARG 5,USERDB
	ARG 5,USYSDB
	PUSHJ P,GTALL1	;GET ALL USRS FOR THIS CUST
	JSA 16,DBMAP
	ARG TWO
	ARG TUUUN
	ARG TUSUUN
	JSA 16,DBFIND	;FIND ALL VALID RECORDS FOR THIS AST
	ARG LAST
	ARG X22AND
	ARG TUSSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TASYSC
	ARG EQUALS
	ARG USINFO+NUSYSC
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	JRST DIDIT3
	PUSHJ P,INITMP	;INIT TEMP FILE TO SAVE UUNS
CHSLS1:	JSA 16,DBGET
	ARG USINFO
	ARG CHSLST
	MOVE A,USINFO+NUSUUN
	MOVEM A,VINFO+NUSUUN
	PUSHJ P,WRTMP
	SOSE NUUNS
	JRST CHSLS1
CHSLST:	PUSHJ P,CLSTMP
CHSLS2:	PUSHJ P,GETTMP
	JRST CHSLS5
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG UINFO+NUUN
	ARG X22AND
	ARG TUSSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TASYSC
	ARG EQUALS
	ARG USINFO+NUSYSC
	JSA 16,DBGET
	ARG USINFO
	ARG .+1
	MOVE N,CINFO+NCSLS
	CAMN N,USINFO+NUSLSM
	JRST CHSLS2
	MOVEM N,USINFO+NUSLSM
	MOVE F,SAVF
	PUSHJ P,MKNUS
	JRST CHSLS2
CHSLS5:	PUSHJ P,DELTMP
	JSA 16,DBCLOS
	JSA 16,DBCLOS
	MOVE F,SAVF
	JRST DIDIT3
SUBTTL CODE 37 - CHANGE CUSTOMER SALESMAN NUMBER

;&.SKIP 2
;&CODE 37: CHANGE CUSTOMER SALESMAN NUMBER
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHPSLS:	PUSHJ P,GETSLS	;&####INPUT NEW SALESMAN NUMBER (ONE BYTE)
	JRST NEWCRC


;&.SKIP 2
;&CODE 40: CHANGE CUSTOMER PO
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHPO:	PUSHJ P,GETPO	;&####INPUT NEW PO (THIRTY BYTES)
	PUSHJ P,CHKINF
	MOVEI A,TPO
	MOVEI B,CINFO+NPO
	PUSHJ P,CHGIT
	JRST CHEND
SUBTTL CODE 41 - CHANGE CUSTOMER PO MAXIMUM

;&.SKIP 2
;&CODE 41: CHANGE CUSTOMR PO MAXIMUM
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHPOMX:	PUSHJ P,GETPMX	;&####INPUT NEW PO MAXIMUM (THREE BYTES)
	PUSHJ P,CHKINF
	MOVEI A,TPOMAX
	MOVEI B,CINFO+NPOMAX
	PUSHJ P,CHGIT
	JRST CHEND

;&.SKIP 2
;&CODE 42: CHANGE PO START DATE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHPOD1:	PUSHJ P,GETPD1	;&####INPUT NEW PO START DATE (THREE BYTES-YYMMDD)
	PUSHJ P,CHKINF
	MOVEI A,TPSTRT
	MOVEI B,CINFO+NPOSTART
	PUSHJ P,CHGIT
	JRST CHEND


;&.SKIP 2
;&CODE 43: CHANGE PO STOP DATE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHPOD2:	PUSHJ P,GETPD2	;&####INPUT NEW PO STOP DATE (THREE 8 BUT BYTES-YYMMDD)
	PUSHJ P,CHKINF
	MOVEI A,TPSTOP
	MOVEI B,CINFO+NPOSTOP
	PUSHJ P,CHGIT
	JRST CHEND


;&.SKIP 2
;&CODE 44: CHANGE CUSTOMER NAME
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHCNAM:	PUSHJ P,GETNAM	;&####INPUT NEW CUSTOMER NAME (51 BYTES)
	PUSHJ P,CHKINF
	MOVEI A,TCNAM
	MOVEI B,AINFO+NCUSNAM
	PUSHJ P,CHGIT
CHEND:	JSA 16,DBCLOS
	MOVE F,SAVF
	JRST DIDIT3
SUBTTL CODE 45 - CHANGE CUSTOMER ADDRESS

;&.SKIP 2
;&CODE 45: CHANGE CUSTOMER ADDRESS
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHCADD:	PUSHJ P,GETADD	;&####INPUT NEW ADDRESS (SEE BELOW)
	PUSHJ P,CHKINF
	TRO F,WAITF
	MOVEM F,SAVF
	MOVEI A,CHCAD1
	MOVEM A,AGNLOC
CHCAD1:	JSA 16,DBCHNG
	ARG TATTN
	ARG 5,AINFO+NATTN
	ARG TSTRT1
	ARG 5,AINFO+NSTRT1
	ARG TSTRT2
	ARG 5,AINFO+NSTRT2
	ARG TCITY
	ARG 5,AINFO+NCITY
	ARG TSTATE
	ARG 5,AINFO+NSTATE
	ARG TZIP
	ARG 5,AINFO+NZIP
	ARG TXL
	ARG 5,AINFO+NXL
	ARG TCOUNTRY
	ARG 5,AINFO+NCOUNTRY
	MOVE F,SAVF
	TRZ F,WAITF
	JRST CHEND
SUBTTL CODE 50 - LIST ACCOUNTING ENTRY FOR A CUSTOMER

;&.SKIP 2
;&CODE 50: LIST ACCOUNTING ENTRY FOR A CUSTOMER
LISCUS:PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	TRO F,ALLIOI
	PUSHJ P,CFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,AFIND
	PUSHJ P,NOADDR
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF FOUND), 3 (IF NOT FOUND) OR ERROR
	PUSHJ P,CNAMOUT	;&####OUTPUT CUSTOMER NAME (51 BYTES)
	MOVE N,CINFO+NCDIST
	PUSHJ P,DISOUT	;&####OUTPUT CUSTOMER DISTRICT (ONE BYTE)
	MOVE N,CINFO+NCCOST
	PUSHJ P,CCOOUT  ;&####OUTPUT COSTCODE  (THREE BYTES)
	MOVE N,CINFO+NCDETC
	PUSHJ P,DETOUT	;&####OUTPUT DETAIL CODE (TWO BYTES)
	PUSHJ P,INVOUT	;&####OUTPUT INVOICE CODE (TWO BYTES)
	PUSHJ P,MINOUT	;&####OUTPUT MINIMUM CODE (ONE BYTE)
	MOVE N,CINFO+NCSLS
	PUSHJ P,SLSOUT	;&####OUTPUT SALESMAN (ONE BYTE)
	PUSHJ P,POOUT	;&####OUTPUT PO NUMBER (30 BYTES)
	PUSHJ P,POMOUT	;&####OUTPUT PO MAXIMUM (THREE BYTES)
	PUSHJ P,POSTAO	;&####OUTPUT PO START DATE (THREE BYTES-YYMMDD)
	PUSHJ P,POSTOO	;&####OUTPUT PO STOP DATE (THREE BYTES-YYMMDD)
	PUSHJ P,VPFOUT	;&####OUTPUT VARIABLE PRICING FLAG (ONE BYTE)
	PUSHJ P,CPOUT	;&####OUTPUT DEFAULT PRICING (TWO BYTES)
	PUSHJ P,FFFOUT  ;&####OUTPUT FLAT FOCUS FEED  (ONE BYTE)
        PUSHJ P,ADTOUT  ;&####OUTPUT ANNIVERSARY DATE (THREE BYTES-YYMMDD)
	PUSHJ P,ADDOUT	;&####OUTPUT ADDRESS (SEE BELOW)
	JRST LUDUP1
SUBTTL CODE 51 - LIST CUSTOMER NAME
;&.SKIP 2
;&CODE 51: LIST CUSTOMER NAME ONLY
LISNAM:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE
	TRO F,ALLIOI
	PUSHJ P,AFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,CFIND
	PUSHJ P,NOTFND
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF FOUND), 3 (IF NOT FOUND) OR ERROR
	PUSHJ P,CNAMOUT	;&####OUTPUT CUSTOMER NAME (51 BYTES)
	JRST LUDUP1

;&.SKIP 2
;&CODE 52: LIST ACCTG. SYS. TYPES FOR A CUSTOMER
LISAST:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,CFINDA
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF FOUND), 3 (IF NOT) OR ERROR
	SETZM AST
LASTNX:	JSA 16,DBGET
	ARG CINFO
	ARG .+1
	PUSHJ P,SETAST
	SOSE NUMRET
	JRST LASTNX
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,ASTOUT	;&####OUTPUT ACCTG. SYS. TYPES (ONE BYTE)
	JRST LUDUP1

SETAST:	MOVE N,CINFO+NCSYSC
	CAILE N,ASTMAX
	POPJ P,0
	MOVE N,ASTTAB-1(N)
	ADDM N,AST
	POPJ P,0

ASTTAB:	2	;&#######IF PDP, SET BIT 6
	1	;&#######IF 940, SET BIT 7
	4	;&#######IF 370, SET BIT 5
ASTMAX=.-ASTTAB
SUBTTL CODE 53 - LIST AST'S FOR A USER

;&.SKIP 2
;&CODE 53: LIST ACCTG. SYS. TYPES FOR A USER
LUAST:	PUSHJ P,UUNIN	;&####INPUT UUN
	TRO F,ALLIOI
	PUSHJ P,USINIT
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG USINFO+NUSUUN
	ARG X22AND
	ARG TUSSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####ANSWER 1 (IF FOUND), 3 (IF NOT) OR ERROR
	JRST LASTNX-1	;&####OUTPUT IS THE SAME AS CODE 52

;&.SKIP 2
;&CODE 54: LIST ALL USERS AND THEIR HOSTS FOR A CUSTOMER
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR
;&####OUTPUT DISTRICT (ONE BYTE)
;&####FOR EACH USER:
;&#######OUTPUT USER NAME (TWELVE BYTES)
;&#######OUTPUT GAN (THREE BYTES)
;&#######OUTPUT HOSTS - SEE BELOW
;&####END WITH A 377B
LUHCST:	TLZ F,NAMESO
	JRST LUCUST+1
SUBTTL CODE 55 - LIST ALL GANS FOR A CUSTOMER

;&.SKIP 2
;&CODE 55: LIST ALL GANS FOR A CUSTOMER
LGNCST:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	TRO F,ALLIOI
	MOVEI A,ASTIII
	MOVEM A,CINFO+NCSYSC
	PUSHJ P,CFIND
	SKIPA
	JRST LGNIII
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,GTALL
	SKIPN NUUNS
	JRST LSTUAC
	JSA 16,DBSORT
	ARG TGAN
	MOVE F,SAVF
	SETZM GAN
NXTGN:	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	MOVE N,UINFO+NGAN
	CAMN N,GAN
	JRST NXTG1
	MOVEM N,GAN	;SAVE LAST GAN
	PUSHJ P,DECOCT	;&####FOR EACH ACCOUNT, OUTPUT:
	PUSHJ P,GANOUT	;&####OUTPUT GAN (THREE BYTES)
	PUSHJ P,CRLF	;&####END WITH 377B
NXTG1:	SOSLE NUUNS
	JRST NXTGN
	JRST LSTUAC
LGNIII:	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TUCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SETZM GAN
NXTTGN:	JSA 16,DBGET
	ARG USINFO
	ARG .+1
	MOVE F,SAVF
	MOVE N,USINFO+NGAN
	CAMN N,GAN
	JRST NXTTG1
	MOVEM N,GAN
	PUSHJ P,DECOCT
	PUSHJ P,GANOUT
	PUSHJ P,CRLF
NXTTG1:	SOSLE NUUNS
	JRST NXTTGN
	JRST LSTUAC
SUBTTL CODE 56 - LIST ALL CUSTOMERS FOR A DISTRICT

;&.SKIP 2
;&CODE 56: LIST ALL CUSTOMERS FOR A DISTRICT
LACUD1:	PUSHJ P,GETDIS	;&###INPUT DISTRICT (ONE BYTE)
	TRO F,ALLIOI
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,CUSTDB
	ARG 5,ADDRDB
	JSA 16,DBFIND
	ARG TCDIST
	ARG EQUALS
	ARG CINFO+NCDIST
	ARG X22AND
	ARG TCSTP
	ARG EQUALS
	ARG NSTOP
LACUD2:	JSA 16,DBSORT
	ARG TCCNUM
	ARG TASYSC
LACUD3: JSA     16,DBSET
        ARG     ONE
        JSA     16,DBGET
        ARG     CINFO
        ARG     LSTUSR
        JSA     16,DBSET
        ARG     TWO
        JSA     16,DBFIND
        ARG TCCNUM
        ARG EQUALS
        ARG     CINFO + NCUSNUM
        ARG     X22AND
        ARG     TASYSC
        ARG EQUALS
        ARG     CINFO + NCSYSC
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	JRST LACUD3
NACUD1:	JSA 16,DBGET
	ARG AINFO
	ARG LACUD3
	MOVE N,AINFO+NACUSNUM
	MOVE F,SAVF	;&####FOR EACH CUSTOMER:
	PUSHJ P,NUMOUT	;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
	TRNE F,TTYOUT
	OUTSTR M2SPACE
	MOVE N,AINFO+NASYSC
	PUSHJ P,ONEOUT	;&####OUTPUT ACCTG. SYS. TYPE (ONE BYTE)
	TRNE F,TTYOUT
	OUTSTR M2SPACE
	PUSHJ P,CNAMOUT	;&####OUTPUT CUSTOMER NAME (FIFTY-ONE BYTES)
	JRST LACUD3
	JRST LSTUSR
SUBTTL CODE 57 - LIST ALL USERS FOR A DISTRICT

;&.SKIP 2
;&CODE 57: LIST ALL USERS FOR A DISTRIST
LAUSD1:	TLO F,NAMESO
	PUSHJ P,GETDIS	;&####INPUT DISTRICT (ONE BYTE)
	TRO F,ALLIOI	;&####FOR EACH USER:
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,USERDB
	ARG 5,VALDB
	JSA 16,DBFIND
	ARG TUDIST
	ARG EQUALS
	ARG UINFO+NUDIST
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	JRST LSTUSR
	JSA 16,DBSORT
	ARG TUCNUM
	ARG TGAN
        ARG TUNAME
NAUSD1:	JSA 16,DBGET
	ARG UINFO
	ARG LSTUSR
	PUSHJ P,GTHSTS
	SKIPN N,NSITES
	JRST [PUSHJ P,CLRSIT
		JRST .+2]
	PUSHJ P,VFIND+2
	 JFCL
	MOVE F,SAVF
	MOVE N,UINFO+NUCUSN
	PUSHJ P,NUMOUT	;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
	TRNE F,TTYOUT
	OUTSTR M2SPACE
	MOVE N,UINFO+NGAN
	PUSHJ P,DECOCT
	TLO F,OCTINF
	PUSHJ P,NUMOUT	;&####OUTPUT GLOBAL ACCOUNT (THREE BYTES)
	TRNE F,TTYOUT
	OUTSTR M2SPACE
	TLO F,ASCIO
	PUSHJ P,NAMOUT	;&####OUTPUT USER NAME (TWELVE BYTES)
	TLNN F,NAMESO
	PUSHJ P,SITOUT
	JSA 16,DBSET
	ARG ONE
	SOSLE NUUNS
	JRST NAUSD1
	JRST LSTUSR	;&####END WITH 377B
SUBTTL CODE 60 - NEW A USER ENTRY IN ACCOUNTING

;&.SKIP 2
;&CODE 60: NEW USER IN ACCOUNTING
NEWUUN:	PUSHJ P,USERIN	;&####INPUT PPN (SIX BYTES)
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	MOVEM N,SAVORG+OAST
	PUSHJ P,UFIND
	SKIPA
	PUSHJ P,FND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,USFIND
	SKIPA
	PUSHJ P,FND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,GTUNAM	;&####INPUT USER NAME (TWELVE BYTES)
	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,CHKCUS
	PUSHJ P,BADCUS
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,GETDIS	;&####INPUT DISTRICT (ONE BYTE)
	PUSHJ P,GETLAN	;&####INPUT LANGUAGE CODE (ONE BYTE)
	PUSHJ P,GETCUR	;&####INPUT CURRENCY CODE (ONE BYTE)
	PUSHJ P,GETSLS	;&####INPUT SALESMAN (ONE BYTE)
	PUSHJ P,GETPRC	;&####INPUT PRICING CODE (TWO BYTES)
	PUSHJ P,GETZONE	;&####INPUT USER TIME ZONE (ONE BYTE)
	PUSHJ P,GTRESM	;&####INPUT RESOURCE CODE (ONE BYTE)
	TRO F,SELHST	;INPUT ONLY HOSTS FOR THIS AST
	PUSHJ P,GETSIT	;&####INPUT A HOST FOR THIS AST (TWO BYTES)
        PUSHJ P,COCOIN  ;&####INPUT COST CODE (THREE BYTES)
        PUSHJ P,GTNLUD  ;&####GET 'VALID ON NON-LUD HOST' BIT (SET TO ZERO)
	PUSHJ P,CHKINF
	PUSHJ P,SAVB
	PUSHJ P,GETTOD
	MOVE N,NSTOP
	MOVEM N,UINFO+NUSTOP
	MOVEM N,VINFO+NVSTOP
	MOVEM N,USINFO+NSYSTOP
	PUSHJ P,UINIT
	MOVEI A,UINFO
	PUSHJ P,ADDIT
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,USINIT
	MOVEI A,USINFO
	PUSHJ P,ADDIT
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,VINIT
	MOVEI A,VINFO
	PUSHJ P,ADDIT
	JRST CHEND
SUBTTL CODE 61 - ADD HOST FOR A USER

;&.SKIP 2
;&CODE 61: ADD HOST FOR UUN
ADDSIT:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	MOVEM N,SAVORG+SITE
ASITE:	MOVE N,HOST
        MOVEI A,A
        PUSH P,A
        PUSH P,N
        JSR WATTYP      ; GET TYPE
	MOVEM A,USINFO+NUSYSC
	PUSHJ P,USFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,VFIND
	JFCL
	MOVE N,HOST
	PUSHJ P,FNDSIT
        SKIPA
	JRST CHEND
	PUSHJ P,CHKINF
	PUSHJ P,SAVB1
	PUSHJ P,GETTOD
	MOVE N,NSTOP
	MOVEM N,VINFO+NVSTOP
	MOVE N,HOST
	MOVEM N,VINFO+NHOST
	MOVE F,SAVF
	MOVEI A,VINFO
	PUSHJ P,ADDIT
	JRST CHEND


;&.SKIP 2
;&CODE 62: CHANGE USER NAME IN ACCOUNTING
;&####INPUT UUN (THREE BYTES)
CHUNAM:	PUSHJ P,SAVB1
	MOVE A,[XWD UINFO+NUNAME,OLDNAM]
	BLT A,OLDNAM+2
	TLO F,ASCIO
	PUSHJ P,GNWNAM	;&####INPUT NEW USER NAME (TWELVE BYTES)
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	MOVE A,[XWD NNAME,UINFO+NUNAME]
	BLT A,UINFO+NUNAME+2
	JRST NEWURC
SUBTTL CODE 63 - CHANGE CUSTOMER NUMBER
;&.SKIP 2
;&CODE 63: CHANGE CUSTOMER NUMBER FOR A UUN
;&####INPUT UUN (THREE BYTES)
CHGCUS:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,CHKINF
	MOVEM F,SAVF
	PUSHJ P,UFIND	;LOOKUP USER SO DIST CAN BE CHECKED
	PUSHJ P,NOTFND
	JSA 16,DBCLOS
	MOVE F,SAVF
        MOVE N,UINFO+NUCUSN
        MOVEM N,OLDNUM
	SETZM CPCODE	;CLEAR AREA TO SAVE P-CODE FOR EACH AST
	SETZM CPCODE+1
	SETZM CPCODE+2
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,USYSDB
	ARG 5,CUSTDB
	MOVE F,SAVF
	PUSHJ P,USFNDA	;FIND ALL USYSDB RECORDS
	SKIPN A,NUMRET
	PUSHJ P,NOTFND
	MOVEM A,NASTS#
CHGC1:	JSA 16,DBSET
	ARG ONE
	JSA 16,DBGET	;GET NEXT USYSDB RECORD
	ARG USINFO
	ARG CHGC2
	MOVE N,USINFO+NUSYSC	;SAVE AST
	MOVEM N,CINFO+NCSYSC
	JSA 16,DBSET
	ARG TWO
	PUSHJ P,CHKCUS+1	;LOOKUP CUST FOR AST
	PUSHJ P,BADCUS
	MOVE A,CINFO+NCDIST
	CAME A,UINFO+NUDIST	;IF DISTS DO NOT MATCH,
	PUSHJ P,BADCUS	;ERROR
	MOVE A,CINFO+NVPF	;CHECK VARIABLE PRICING FLAG
	CAIE A,1		;IF NOT 1, DON'T BOTHER CHANGING P CODE
	JRST CHGC6
	MOVE A,CINFO+NDPRI
	MOVE B,CINFO+NCSYSC
	CAME A,USINFO+NPRICOD
	MOVEM A,CPCODE-1(B)	;SAVE CUST PCODE IF IT DOES NOT MATCH
CHGC6:	SOSLE NASTS
	JRST CHGC1
CHGC2:	JSA 16,DBSET
	ARG TWO
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVEI B,3
	MOVEM B,NASTS
CHGC4:	MOVEM B,USINFO+NUSYSC
	SKIPN A,CPCODE-1(B)
	JRST CHGC5
	PUSHJ P,USFIND
	 JRST CHGC3
	MOVE A,CPCODE-1(B)
	MOVEM A,USINFO+NPRICOD
	PUSHJ P,MKNUS
	MOVE F,SAVF
CHGC5:	SOSLE B,NASTS
	JRST CHGC4
CHGC3:	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
   	MOVE N,CINFO+NCUSNUM
	MOVEM N,UINFO+NUCUSN
        PUSHJ P,MKNUSR
        MOVE N,OLDNUM
        MOVEM N,UINFO+NUCUSN
        PUSHJ P,CKCST
        JRST CHEND


CKCST:  MOVE F,SAVF
        JSA 16,DBFIND
        ARG TUCNUM
        ARG EQUALS
        ARG UINFO+NUCUSN
        ARG X22AND
        ARG TUSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUUNS
        MOVE F,SAVF
        SKIPN NUUNS
        PUSHJ P,CNCCUS  ;&####NO USERS LEFT FOR OLD CUST NUM, CANCEL OLD
        POPJ P,0


CNCCUS: MOVEI B,3
        MOVEM B,NASTS
CNCC1:  PUSHJ P,CNCUS
        SOSE B,NASTS
        JRST CNCC1
        MOVE F,SAVF
        POPJ P,0

SUBTTL CODE 64 - CHANGE SALESMAN FOR A USER

;&.SKIP 2
;&CODE 64: CHANGE SALESMAN FOR A USER
;&####INPUT UUN (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHUSLS:	PUSHJ P,GETSLS	;&####INPUT SALESMAN (ONE BYTE)
	JRST NEWUSRC


;&.SKIP 2
;&CODE 65: LIST ALL USERS (FOR MUD CHECK)
LISTAL:	TRO F,ALLIOI	;&####FOR EACH TYMSHARE USER:
	PUSHJ P,UINIT
	JSA 16,DBFIND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
LSTNXT:	JSA 16,DBGET
	ARG UINFO
	ARG LSTAL1
	MOVE F,SAVF
	TLO F,ASCIO
	PUSHJ P,SENDOK	;&########OUTPUT 1 OR ERROR
	PUSHJ P,NAMOUT	;&########OUTPUT USER NAME (TWELVE BYTES)
	SOSLE NUMRET
	JRST LSTNXT
LSTAL1:	MOVEI N,376
	TRNN F,TTYOUT
	PUSHJ P,ONEOUT	;&####END WITH 376B
	JSA 16,DBCLOSE
	MOVE F,SAVF
	PUSHJ P,YINIT	;&####FOR EACH TYMCOM-III USER:
	JSA 16,DBFIND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
LSTNX1:	JSA 16,DBGET
	ARG USINFO
	ARG LSTAL2
	MOVE F,SAVF
	TLO F,ASCIO
	PUSHJ P,SENDOK	;&########OUTPUT 1 OR ERROR
	MOVE BP,[POINT 7,USINFO+NUNAME]
	PUSHJ P,NAMOUT+1	;&########OUTPUT USER NAME (TWELVE BYTES)
	SOSLE NUMRET
	JRST LSTNX1
LSTAL2:	JSA 16,DBCLOSE
	MOVE F,SAVF
	PUSHJ P,SENDEND	;&####END WITH 377B
	JRST LUDUP1
;&.SKIP 2
;&CODE 66:  LIST ALL CUSTOMERS FOR A COSTCODE
LACUC1: PUSHJ P,COCOIN  ;&####INPUT COSTCODE (THREE BYTES)
        TRO F,ALLIOI    ;&####FOR EACH CUSTOMER:
        MOVEM F,SAVF
        JSA 16,DBOPEN
        ARG 5,CUSTDB
        ARG 5,ADDRDB
        JSA 16,DBFIND
        ARG TCCOCO
        ARG EQUALS
        ARG CINFO+NCCOST
        ARG X22AND
        ARG TCSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUMRET
        MOVE F,SAVF
        SKIPN NUMRET
         PUSHJ P,NOTFND
        PUSHJ P,SENDOK
        JSA 16,DBSORT
        ARG TCCNUM
        ARG TASYSC
LACUC3: JSA 16,DBSET
        ARG ONE
        JSA 16,DBGET
        ARG CINFO
        ARG LSTUSR
        JSA 16,DBSET
        ARG TWO
        JSA 16,DBFIND
        ARG TCCNUM
        ARG EQUALS
        ARG CINFO+NCUSNUM
        ARG X22AND
        ARG TASYSC
        ARG EQUALS
        ARG CINFO+NCSYSC
        JSA 16,DBNREC
        ARG NUMRET
        MOVE F,SAVF
        SKIPN N,NUMRET
        JRST LACUC3
NACUC1: JSA 16,DBGET
        ARG AINFO
        ARG LACUC3
        MOVE N,AINFO+NACUSNUM
        MOVE F,SAVF
        PUSHJ P,NUMOUT  ;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
        TRNE F,TTYOUT
        OUTSTR M2SPACE
        MOVE N,AINFO+NASYSC
        PUSHJ P,ONEOUT  ;&####OUTPUT ACCTG. SYS. TYPE (ONE BYTE)
        TRNE F,TTYOUT
        OUTSTR M2SPACE
        PUSHJ P,CNAMOUT ;&####OUTPUT CUSTOMER NAME (FIFTY-ONE BYTES)
        JRST LACUC3
        JRST LSTUSR


;&.SKIP 2
;&CODE 67:  LIST ALL USERS FOR A COSTCODE
LAUSC1: TLO F,NAMESO
        PUSHJ P,COCOIN  ;&####INPUT COSTCODE (THREE BYTES)
        TRO F,ALLIOI    ;&####FOR EACH USER:
        MOVEM F,SAVF
        JSA 16,DBOPEN
        ARG 5,USERDB
        ARG 5,VALDB
        JSA 16,DBFIND
        ARG TUCOCO
        ARG EQUALS
        ARG UINFO+NUCOST
        ARG X22AND
        ARG TUSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUUNS
        MOVE F,SAVF
        SKIPN NUUNS
         PUSHJ P,NOTFND
        PUSHJ P,SENDOK
        JSA 16,DBSORT
        ARG TUCNUM
        ARG TGAN
        ARG TUNAME
NAUSC1: JSA 16,DBGET
        ARG UINFO
        ARG LSTUSR
;       PUSHJ P,GTHSTS
;       SKIPN N,NSITES
;       JRST [PUSHJ P,CLRSIT
;               JRST .+2]
;       PUSHJ P,VFIND+2
;        JFCL
        MOVE F,SAVF
        MOVE N,UINFO+NUCUSN
        PUSHJ P,NUMOUT  ;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
        TRNE F,TTYOUT
        OUTSTR M2SPACE
        MOVE N,UINFO+NGAN
        PUSHJ P,DECOCT
        TLO F,OCTINF
        PUSHJ P,NUMOUT  ;&####OUTPUT GLOBAL ACCOUNT (THREE BYTES)
        TRNE F,TTYOUT
        OUTSTR M2SPACE
        TLO F,ASCIO
        PUSHJ P,NAMOUT  ;&####OUTPUT USER NAME (TWELVE BYTES)
        TLNN F,NAMESO
        PUSHJ P,SITOUT
        JSA 16,DBSET
        ARG ONE
        SOSLE NUUNS
        JRST NAUSC1
        JRST LSTUSR     ;&####END WITH 377B
;&.SKIP 2
;&CODE 70: CHANGE USER CURRENCY CODE
;&####INPUT UUN (THREE BYTES)
CHCURR:	PUSHJ P,GETCUR  ;&####INPUT CURRENCY CODE (ONE BYTE)
	JRST NEWURC
;&SKIP 2
;&CODE 71: CHANGE USER GAN
;&####INPUT UUN (THREE BYTES)
CHUGAN: PUSHJ P,GANIN   ;&####INPUT GAN (THREE BYTES)
        MOVE N,UINFO+NGAN
        MOVEM N,GAN     ;SAVE NEW GAN BEFORE OVERWITING IT WITH DBGET
        MOVEM F,SAVF
        JSA 16,DBOPEN
        ARG USERDB
        ARG VALDB
        JSA 16,DBSET
        ARG ONE
        JSA 16,DBFIND
        ARG TUUUN
        ARG EQUALS
        ARG UINFO+NUUN
        ARG X22AND
        ARG TUSTP 
        ARG EQUALS
        ARG NSTOP
        MOVE F,SAVF
        JSA 16,DBGET
        ARG UINFO
        ARG NCHGAN
        MOVE N,GAN
        MOVEM N,UINFO+NGAN      ;PUT NEW GAN BACK IN UINFO TABLE
        JSA 16,DBFIND
        ARG TGAN
        ARG EQUALS
        ARG UINFO+NGAN
        ARG X22AND
        ARG TUDIST
        ARG EQUALS
        ARG UINFO+NUDIST
        ARG X22AND
        ARG TUSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUMRET
        MOVE F,SAVF
        SKIPG NUMRET
        JRST BADGAN
        PUSHJ P,CHKINF
        JSA 16,DBSET 
        ARG TWO
        JSA 16,DBFIND           ;FIND VALDAT RECS TO CHANGE
        ARG TUSUUN              ;UUN IN VALDAT
        ARG EQUALS
        ARG VINFO+NUSUUN
        ARG X22AND
        ARG TVSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUMRET
        MOVE F,SAVF
CVGNXT: SOSGE NUMRET
        JRST CVGEND
        JSA 16,DBGET
        ARG VINFO
        ARG CVGEND
        MOVEI A,TVGAN
        MOVEI B,VINFO+NVGAN
        MOVE N,GAN
        MOVEM N,VINFO+NVGAN
        MOVE F,SAVF
        PUSHJ P,CHGIT
        JRST CVGNXT
CVGEND: JFCL
        JSA 16,DBSET
        ARG ONE
        JSA 16,DBFIND
        ARG TUUUN 
        ARG EQUALS
        ARG UINFO+NUUN
        ARG X22AND
        ARG TUSTP
        ARG EQUALS
        ARG NSTOP
        MOVE F,SAVF
        PUSHJ P,MKNUSR
        JRST CHEND
NCHGAN: PUSHJ P,NOTFND



;&.SKIP 2
;&CODE 72: CHANGE USER TIME ZONE IN ACCOUNTING
;&####INPUT UUN (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHUZON:	PUSHJ P,GETZONE	;&####INPUT USER TIME ZONE (ONE BYTE)
	JRST NEWUSRC


SUBTTL CODE 74 - DELETE AN ENTRY IN ACCOUNTING

;&.SKIP 2
;&CODE 74: DELETE AN ENTRY FOR A UUN FOR A HOST IN ACCOUNTING
DELSIT:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	PUSHJ P,CHKINF
	SETZM DAST
	SETZM DAST+1
	SETZM DAST+2
	PUSHJ P,SAVB
	PUSHJ P,REMSIT	;REMOVE A HOST FOR A USER
        MOVEI N,N
        PUSH P,N
        PUSH P,VINFO+NHOST
        JSR WATTYP
	MOVEM N,AST#	;SAVE ACCTG. SYS. TYPE
	PUSHJ P,VINIT
	PUSHJ P,VFIND
	JFCL
	JSA 16,DBCLOS
	MOVE F,SAVF
	SKIPN N,NUMRET
	JRST NOAST
	MOVEI N,MXTHST+1
NXTS:	SOJE N,NOAST
	SKIPN A,SITES-1(N)	;GET HOST NUMBER
	JRST NXTS
        MOVEI B,A
        PUSH P,B
        PUSH P,A
        JSR WATTYP
	CAMN A,AST		;VALID HOST BELONGS TO THIS AST?
	JRST DIDIT3		;DONE
	JRST NXTS		;NO
NOAST:	MOVE A,AST
	MOVEM A,USINFO+NUSYSC
	PUSHJ P,USFIND
	JRST DIDIT3
	MOVE N,TODAY
	MOVEM N,USINFO+NSYSTOP
	MOVEI A,TUSSTP
	MOVEI B,USINFO+NSYSTOP
	PUSHJ P,CHGIT
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVE A,AST
	MOVEM A,DAST-1(A)
	PUSHJ P,USINIT
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG USINFO+NUSUUN
	ARG X22AND
	ARG TUSSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPE NUMRET
	JRST CKCCUS
	PUSHJ P,CANUSR
	PUSHJ P,USRLFT
	JRST DIDIT3


CKCCUS:	JSA 16,DBOPEN
	ARG 5,USERDB
	ARG 5,USYSDB
	MOVE F,SAVF
	PUSHJ P,UFIND+1
	POPJ P,0
	PUSHJ P,CANCUS
	JRST DIDIT3


CANUSR:	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,USERDB
	ARG 5,USYSDB
	MOVE F,SAVF
	PUSHJ P,UFIND+1
	JRST CANCUS
	MOVEI A,TUSTP
	MOVEI B,TODAY
	PUSHJ P,CHGIT
CANCUS:	MOVE A,UINFO+NUCUSN
	CAIN A,1
	JRST NCANCS+2
	MOVEM F,SAVF
	JSA 16,DBSET
	ARG ONE
	MOVE F,SAVF
	MOVEI B,3
	MOVEM B,NASTS
CANCS1:	SKIPN A,DAST-1(B)
	JRST NCANCS
	MOVEM F,SAVF
	JSA 16,DBFIND
	ARG TUCNUM
	ARG EQUALS
	ARG UINFO+NUCUSN
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBMAP
	ARG TWO
	ARG TUUUN
	ARG TUSUUN
	JSA 16,DBFIND
	ARG LAST
	ARG X22AND
	ARG TUSSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TASYSC
	ARG EQUALS
	ARG NASTS
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	PUSHJ P,CNCUS
	MOVEM F,SAVF
	JSA 16,DBSET
	ARG ONE
	MOVE F,SAVF
NCANCS:	SOSE B,NASTS
	JRST CANCS1
	MOVEM F,SAVF
	JSA 16,DBCLOS
	JSA 16,DBCLOS
	MOVE F,SAVF
	POPJ P,0


CNCUS:	MOVE A,UINFO+NUCUSN
	MOVEM A,CINFO+NCUSNUM
	MOVE B,NASTS
	MOVEM B,CINFO+NCSYSC
	MOVEM F,SAVF
CNCUS1:	JSA 16,DBOPEN
	ARG NOCLOS
	ARG CUSTDB
	MOVE F,SAVF
	PUSHJ P,CFIND+1
	JRST CNCUSR
	MOVE N,TODAY
	MOVEM N,CINFO+NCDSTOP
	MOVEI A,TCSTP
	MOVEI B,CINFO+NCDSTOP
	PUSHJ P,CHGIT
CNCUSR:	JSA 16,DBCLOSE
	MOVE F,SAVF
	POPJ P,0
V1FIND:	PUSHJ P,VINIT
	MOVEM F,SAVF
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TVHOST
	ARG EQUALS
	ARG VINFO+NHOST
	JSA 16,DBNREC
	ARG NUMRET#
	MOVE F,SAVF
	SKIPN N,NUMRET
	POPJ P,0
	CAIE N,1
	PUSHJ P,DUPERR
	JSA 16,DBGET
	ARG VINFO
	ARG .+1
	MOVE F,SAVF
	AOS (P)
	POPJ P,0

REMSIT:	PUSHJ P,V1FIND
	POPJ P,0
	PUSHJ P,GETTOD
	MOVEM N,VINFO+NVSTOP
	MOVEI A,TVSTP
	MOVEI B,VINFO+NVSTOP
	PUSHJ P,CHGIT
	JSA 16,DBCLOS
	MOVE F,SAVF
	POPJ P,0
SUBTTL CODE 75 CHANGE USER'S DISTRICT IN ACCOUNTING

;&.SKIP 2
;&CODE 75: CHANGE USER'S DISTRICT IN ACCOUNTING
;&####INPUT UUN (THREE BYTES)
CHUDIS:	PUSHJ P,GETDIS	;&####INPUT DISTRICT (ONE BYTE)
        ;SETZM UINFO+NUCOST      ;ZERO THE COSTCODE IN NEW RECORD
	JRST NEWURC


;&.SKIP 2
;&CODE 76: CANCEL USER
DELUUN:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,GETSI1	;&####INPUT HOST (TWO BYTES)
	PUSHJ P,CHKINF
	SETZM DAST
	SETZM DAST+1
	SETZM DAST+2
	PUSHJ P,SAVB
	PUSHJ P,GETTOD	;GET TODAY'S DATE
	PUSHJ P,VFINDA		;GET ALL VALID HOSTS FOR USER
	JRST DLLSIT		;THERE ARE NONE, BE SURE AST'S ARE GONE
DLNSIT:	JSA 16,DBGET		;GET NEXT HOST
	ARG VINFO
	ARG DLLSIT
	MOVE F,SAVF
	MOVEI A,TVSTP
	MOVEI B,TODAY
	PUSHJ P,CHGIT	;SET DSTOP TO TODAY
	SOSLE NUMRET		;HAVE WE DONE ALL HOSTS?
	JRST DLNSIT		;NO, GO DO NEXT ONE
DLLSIT:	JSA 16,DBCLOS		;CLOSE HOST FILE
	MOVE F,SAVF
DLAST:	PUSHJ P,USINIT		;OPEN AST FILE
	PUSHJ P,USFNDA
	SKIPN NUMRET
	JRST DLLAST	;IF NONE, CHECK USER RECORD
DLNAST:	JSA 16,DBGET	;GET NEXT AST FOR THIS USER
	ARG USINFO
	ARG DLLAST
	MOVE F,SAVF
	MOVE A,USINFO+NUSYSC
	MOVEM A,DAST-1(A)
	MOVEI A,TUSSTP
	MOVEI B,TODAY
	PUSHJ P,CHGIT
	SOSLE NUMRET
	JRST DLNAST
DLLAST:	JSA    16,DBCLOS
	MOVE   F,SAVF
	MOVEM  F,SAVF
	;  PUSHJ P,CANUSR
        ;  PUSHJ P,TYUINI
	;  JSA 16,DBFIND
	;  ARG TUUUN
	;  ARG EQUALS
	;  ARG DBUUN
	;  ARG X22AND
	;  ARG TVSTP
	;  ARG EQUALS
	;  ARG NSTOP
	;  JSA 16,DBNREC
	;  ARG NUMRET
	;  MOVE F,SAVF
	;  SKIPN NUMRET
	;  JRST DIDIT3
	;  MOVEI A,TVSTP
	;  MOVEI B,TODAY
	;  PUSHJ P,CHGIT
        ; cancel user record in userdb
        JSA    16,DBOPEN
        ARG    5,USERDB
        ARG    5,USYSDB
        MOVE   F,SAVF
        PUSHJ  P,UFIND+1
         POPJ  P,
        MOVEI  A,TUSTP
        MOVEI  B,TODAY
        PUSHJ  P,CHGIT
	JRST   CHEND

USFNDA:	MOVEM F,SAVF
	JSA 16,DBFIND	;FIND ALL VALID AST'S FOR THIS USER
	ARG TUSUUN
	ARG EQUALS
	ARG USINFO+NUSUUN
	ARG X22AND
	ARG TUSSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC	;GET NUMBER OF AST'S
	ARG NUMRET
	POPJ P,0
;&.SKIP 2
;&CODE 100: CHANGE USER LANGUAGE CODE
;&####INPUT UUN (THREE BYTES)
CHLAN:	PUSHJ P,GETLAN	;&####INPUT LANGUAGE CODE (ONE BYTE)
	PUSHJ P,CHKINF
	MOVEI A,TLAN
	MOVEI B,UINFO+NLANG
	PUSHJ P,CHGIT
	JRST CHEND
SUBTTL CODE 101 NEW USER FOR ACCTG. SYSTEM TYPE

;&.SKIP 2
;&CODE 101: NEW USER FOR AN ACCOUNTING SYSTEM TYPE
ADDAST:	PUSHJ P,USERIN	;&####INPUT GAN, UUN (THREE BYTES EACH)
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	MOVEM N,SAVORG+OAST
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVE N,UINFO+NUCUSN
	MOVEM N,CINFO+NCUSNUM
	PUSHJ P,USFIND
	SKIPA
	PUSHJ P,FND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,CHKCUS
	PUSHJ P,BADCUS
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,GETSLS	;&####INPUT SALESMAN (ONE BYTE)
	PUSHJ P,GETPRC	;&####INPUT PRICING CODE (ONE BYTE)
	PUSHJ P,GETZONE	;&####INPUT USER TIME ZONE (ONE BYTE)
	PUSHJ P,GTRESM		;&####INPUT RESOURCE CODE (ONE BYTE)
	TRO F,SELHST	;INPUT HOST ONLY FOR THIS AST
	PUSHJ P,GETSIT	;&####INPUT A HOST FOR THIS AST (TWO BYTES)
	MOVEM N,SAVORG+SITE
	TRNN F,ERRF
	JRST .+4
	MOVE A,ERRCOD
	CAIN A,2
	JRST [TRZ F,ERRF
		JRST ASITE]
	PUSHJ P,CHKINF
	PUSHJ P,SAVB
	PUSHJ P,GETTOD
	MOVE N,NSTOP
	MOVEM N,USINFO+NSYSTOP
	MOVEM N,VINFO+NVSTOP
	PUSHJ P,USINIT
	MOVEI A,USINFO
	PUSHJ P,ADDIT
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,VINIT
	MOVEI A,VINFO
	PUSHJ P,ADDIT
        JRST CHEND
SUBTTL CODE 103 LIST USER CUSTOMER NUMBER
;&.SKIP 2
;&CODE 103: LIST USER CUSTOMER NUMBER
LISUCU: PUSHJ   P,UUNIN         ;&####INPUT UUN (THREE BYTES)
        TRO     F,ALLIOI
        PUSHJ   P,UFIND
        PUSHJ   P,NOTFND
        PUSHJ   P,SENDOK        ;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR
        MOVEM   F,SAVF
        JSA     16,DBCLOSE
        MOVE    F,SAVF
        PUSHJ   P,UCUOUT        ;&####OUTPUT CUSTOMER NUMBER (3 BYTES)
        JRST    LUDUP1
SUBTTL CODE 104 OUTPUT NUMBER OF DIRECTORIES TO BE CANCELED FOR CANCEL ACCOUNT
;&.SKIP 2
;&CODE 104: OUTPUT NUMBER OF DIRECTORIES TO BE CANCELED
;&####INPUT SAME AS 114
LSUGSY: PUSHJ P,GTGANS   ;FIND VALID VALDAT ENTRIES FOR A GAN AND A HOST
        JSA 16,DBNREC
        ARG NUUNS
        PJOB N,
        MOVEM N,CINFO
        MOVE F,SAVF
        SKIPN NUUNS
        JRST LSUG4+1
        PUSHJ P,INITMP  ;WRITE USERS TO TEMP FILE
LSUG1:  JSA 16,DBGET
        ARG VINFO
        ARG LSUG2
        PUSHJ P,WRTMP
        SOSE NUUNS
        JRST LSUG1
LSUG2:  PUSHJ P,CLSTMP
LSUG3:  PUSHJ P,GETTMP  ;GET EACH USER FROM TEMP FILE
        JRST LSUG4
        JSA 16,DBFIND    ;FIND ALL VALID ENTRIES IN VALDAT FOR EACH USER IN TEMP FILE
        ARG TUSUUN
        ARG EQUALS
        ARG VINFO+NUSUUN
        ARG X22AND
        ARG TVSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUMRET
        MOVE N,NUMRET
        ADDM N,CANCNT#  ;ADD NUMBER OF ENTRIES TO TOTAL
        JRST LSUG3
LSUG4:  PUSHJ P,DELTMP
        JSA 16,DBCLOS
        MOVE F,SAVF
        MOVE N,CANCNT
        PUSHJ P,NUMOUT  ;OUTPUT TOTAL NUMBER
        PUSHJ P,CRLF
        SETZM CANCNT
        JRST LUDUP1
SUBTTL CODE 105 LIST HOSTS FOR A USER

;&.SKIP 2
;&CODE 105: LIST HOSTS FOR A USER
LSUSYS:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,VFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR
	PUSHJ P,SITOUT	;&####OUTPUT HOSTS (SEE BELOW)
	JRST LUDUP1
SUBTTL CODE 106 - LIST ACCOUNTING ENTRY FOR A USER

;&.SKIP 2
;&CODE 106: LIST ACCOUNTING FOR A UUN
LISUUN:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	TRO F,ALLIOI
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVE N,UINFO+NUCUSN
	MOVEM N,AINFO+NACUSNUM
	PUSHJ P,AFIND	;FIND ANY CUSTOMER INFO
	PUSHJ P,NOADDR
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,VFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,USFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####OUTPUT 1 (IF FOUND), OR 3 (IF NOT) OR ERROR
	MOVE N,UINFO+NGAN
	PUSHJ P,DECOCT
	PUSHJ P,GANOUT	;&####OUTPUT GAN (THREE BYTES)
	PUSHJ P,CRLF
	TLO F,ASCIO
	PUSHJ P,NAMOUT	;&####OUTPUT USER NAME (TWELVE BYTES)
	MOVE N,UINFO+NUDIST
	PUSHJ P,DISOUT	;&####OUTPUT DISTRICT (ONE BYTE)
	PUSHJ P,UCSOUT	;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
                                ;&####OUTPUT CUSTOMER NAME (51 BYTES)
	MOVE N,UINFO+NUCOST
	PUSHJ   P,CCOOUT		;&####OUTPUT COSTCODE (THREE BYTES)
	MOVE N,USINFO+NUSLSM
	PUSHJ P,SLSOUT	;&####OUTPUT SALESMAN (ONE BYTE)
	PUSHJ P,PRIOUT	;&####OUTPUT PRICING CODE (TWO BYTE)
	PUSHJ P,RESOUT	;&####OUTPUT RESOURCE CODE (ONE BYTE)
	PUSHJ P,CUROUT	;&####OUTPUT CURRENCY CODE (ONE BYTE)
	PUSHJ P,LANOUT	;&####OUTPUT LANGUAGE CODE (ONE BYTE)
	PUSHJ P,AZONOUT	;&####OUTPUT TIME ZONE (ONE BYTE)
	PUSHJ P,SITOUT	;&####OUTPUT ALL HOSTS FOR THIS AST (SEE BELOW)
	JRST LUDUP1
SUBTTL CODE 107 LIST HOSTS FOR A CUSTOMER

;&.SKIP 2
;&CODE 107: LIST ALL HOSTS FOR A CUSTOMER
LSCSYS:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,CFINDA
	PUSHJ P,NOTFND	;CUSTOMER NOT FOUND
	PUSHJ P,SENDOK
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,CLRSIT
	MOVE A,CINFO+NCUSNUM
LSC1:	PUSHJ P,GTALL
	SKIPN NUUNS
	JRST LSTUUN
	JSA 16,DBMAP
	ARG TWO
	ARG TUUUN
	ARG TUSUUN
	JSA 16,DBFIND
	ARG LAST
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NSITES#
	MOVE F,SAVF
	SKIPN N,NSITES
	JRST LSTUUN
        PUSHJ   P,FILSIT
	 JFCL		;DUMMY ERROR RETURN
LSTUUN:	JSA 16,DBCLOS
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SITOUT	;&####OUTPUT HOSTS (SEE BELOW)
	JRST LUDUP1
GTALL:	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,USERDB
	ARG 5,VALDB
GTALL1:	JSA 16,DBFIND	;FIND ALL USERS FOR THIS CUSTOMER
	ARG TUCNUM	;WITH A NULL STOP DATE
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS#	;SAVE NUMBER OF UUN'S FOUND
	POPJ P,0

GTHSTS:	JSA 16,DBSET	;GET HOSTS THIS USER IS VALID ON
	ARG TWO
	JSA 16,DBFIND
	ARG TUSUUN
	ARG 5,EQUALS
	ARG UINFO+NUUN
	ARG 5,X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC	;GET # OF HOSTS
	ARG NSITES
	MOVE F,SAVF
	POPJ P,0
SUBTTL CODE 110 CHECK UUN FOR AN ACCTG. SYS TYPE

;&.SKIP 2
;&CODE 110: CHECK UUN FOR AN ACCOUNTING SYSTEM TYPE
CHUUNT:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	TRO F,ALLIOI
	PUSHJ P,USFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	TRNE F,TTYOUT
	JRST [PUSHJ P,FND
	JRST LUDUP1]
	PUSHJ P,SENDOK	;&####OUTPUT 1 (IF FOUND), 3 (IF NOT), OR ERROR
	JRST LUDUP1
SUBTTL CODE 111 CHECK UUN FOR A HOST

;&.SKIP 2
;&CODE 111: CHECK UUN FOR A HOST
CHUUNS:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	TRO F,ALLIOI
	PUSHJ P,F1HOST
CHKA3:	SKIPN NUMRET
CHKA1:	PUSHJ P,NOTFND
CHKA2:	TRNE F,TTYOUT
	JRST [PUSHJ P,FND
		JRST LUDUP1]
	PUSHJ P,SENDOK	;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR
	JRST LUDUP1


F1HOST:	PUSHJ P,VINIT
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TVHOST
	ARG EQUALS
	ARG VINFO+NHOST
	JSA 16,DBNREC
	ARG NUMRET
	JSA 16,DBCLOS
	MOVE F,SAVF
	POPJ P,0

CHKANS:	JSA 16,DBNREC
	ARG NUMRET
	JSA 16,DBCLOS
	MOVE F,SAVF
	JRST CHKA3
;&.SKIP 2
;&CODE 112: LIST ALL USERS FOR A CUSTOMER
LUCUST:	TLO F,NAMESO	;OUTPUT NAMES AND GANS ONLY
	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
        PUSHJ P,ASYSIN ;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	TRO F,ALLIOI
        MOVEM F,SAVF
        PUSHJ P,CINIT
        JSA 16,DBFIND
        ARG TCCNUM
        ARG EQUALS
        ARG CINFO+NCUSNUM
        ARG X22AND
        ARG TCSTP
        ARG EQUALS
        ARG NSTOP
        ARG X22AND
        ARG TASYSC
        ARG EQUALS
        ARG CINFO+NCSYSC
        JSA 16,DBNREC
        ARG NUMRET
        SKIPG N,NUMRET
	PUSHJ P,NOTFND
	JSA 16,DBGET
	ARG CINFO
	ARG .+1
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR
	MOVE A,CINFO+NCSYSC
	CAIN A,ASTIII
	JRST LUCIII
	MOVE N,CINFO+NCDIST
	PUSHJ P,DISOUT	;&####OUTPUT DISTRICT (ONE BYTE)
	PUSHJ P,GTALL
	SKIPN NUUNS
	JRST LSTUSR
	MOVE F,SAVF
LNUSR:	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	PUSHJ P,GTHSTS
	MOVE F,SAVF
	TLO F,ASCIO	;&####FOR EACH USER:
	PUSHJ P,NAMOUT	;&#######OUTPUT USER NAME (TWELVE BYTES)
	MOVE N,UINFO+NGAN
	PUSHJ P,DECOCT
	PUSHJ P,GANOUT	;&#######OUTPUT GAN (THREE BYTES)
	PUSHJ P,CRLF
	TLNN F,NAMESO
	PUSHJ P,UHSTO
	PUSHJ P,CRLF
	JSA 16,DBSET
	ARG ONE
	SOSLE NUUNS
	JRST LNUSR
LSTUSR:	JSA 16,DBCLOS
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDEND	;&####END WITH A 377B
	JRST LUDUP1
LUCIII:	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TUCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
LNUIII:	JSA 16,DBGET
	ARG USINFO
	ARG LSTUSR+1
	MOVE F,SAVF
	TLO F,ASCIO
	MOVE BP,[POINT 7,USINFO+NUNAME]
	PUSHJ P,NAMOUT+1
	PUSHJ P,CRLF
	SOSLE NUUNS
	JRST LNUIII
	JRST LSTUSR+1
SUBTTL CODE 113 LIST ALL USERS FOR A GAN

;&.SKIP 2
;&CODE 113: LIST ALL USERS FOR A GAN
LUGAN:	PUSHJ P,GANIN	;&####INPUT GAN (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,UINIT
	JSA 16,DBFIND
	ARG TGAN
	ARG EQUALS
	ARG UINFO+NGAN
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC	;&####OUTPUT SAME AS CODE 112
	ARG NUUNS
	MOVE F,SAVF
	SKIPE NUUNS
	JRST .+3
	PUSHJ P,NOTFND
	JRST LUDUP1
	PUSHJ P,SENDOK
	MOVE N,UINFO+NUDIST
	PUSHJ P,DISOUT
	SKIPN NUUNS
	JRST LSTUAC
	MOVE F,SAVF
	JSA 16,DBSORT
	ARG AUNAME
LNACC:	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	TLO F,ASCIO
	PUSHJ P,NAMOUT
	MOVE N,UINFO+NGAN
	PUSHJ P,DECOCT
	PUSHJ P,GANOUT
	PUSHJ P,CRLF
	SOSLE NUUNS
	JRST LNACC
LSTUAC:	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDEND
	JRST LUDUP1
SUBTTL CODE 114 CHECK GAN FOR A HOST
;&.SKIP 2
;&CODE 114: CHECK GAN FOR A HOST
CHGANS: PUSHJ P,GTGANS
        JRST CHKANS     ;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR

GTGANS:	PUSHJ P,GANIN	;&####INPUT GAN (THREE BYTES)
	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	TRO F,ALLIOI
	PUSHJ P,VINIT
	JSA 16,DBFIND
	ARG TVGAN
	ARG EQUALS
	ARG VINFO+NVGAN
	ARG X22AND
	ARG TVHOST
	ARG EQUALS
	ARG VINFO+NHOST
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
        POPJ P,0
SUBTTL CODE 115 CHECK CUSTOMER NUMBER FOR A HOST
;&.SKIP 2
;&CODE 115: CHECK CUSTOMER NUMBER FOR A HOST
CHCUST:	TLO F,ONESIT
	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	TRO F,ALLIOI
	MOVE N,VINFO+NHOST
	MOVEM N,ISITE#
	JRST LSC1	;&####OUTPUT 1 (IF FOUND), 3 (IF NOT), OR ERROR

CHKONE:	JSA 16,DBGET
	ARG VINFO
	ARG .+1
	MOVE A,VINFO+NHOST
	MOVE F,SAVF
	CAMN A,ISITE
	JRST CHKA2
	SOJGE N,CHKONE
	MOVE F,SAVF
	AOS (P)
	POPJ P,0


;&.SKIP 2
;&CODE 116: LIST HOSTS FOR A GAN
LSGAN:	PUSHJ P,GANIN	;&####INPUT GAN (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,VINIT
	JSA 16,DBFIND
	ARG TVGAN
	ARG EQUALS
	ARG VINFO+NVGAN
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	PUSHJ P,NOTFND
	MOVEM N,NSITES
	PUSHJ P,SENDOK	;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR
	MOVE N,NSITES
	PUSHJ P,FILSIT
	 JFCL
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SITOUT	;&####OUTPUT HOSTS (SEE BELOW)
	JRST LUDUP1
SUBTTL CODE 117 - CHANGE DISTRICT FOR ALL USERS FOR A CUSTOMER

;&.SKIP 2
;&CODE 117: CHANGE DISTRICT FOR ALL USERS FOR A CUSTOMER
;&####INPUT CUTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHADIS:	MOVE A,CINFO+NCDIST	;SAVE CUSTOMER'S OLD DISTRICT
	MOVEM A,SDIST#
        ;SETZM CINFO+NCCOST      ;ZERO THE COSTCODE IN NEW RECORD
	PUSHJ P,GETDIS	;&####INPUT NEW DISTRICT (ONE BYTE)
	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	PUSHJ P,CHKINF
	MOVE A,DIST
	CAME A,SDIST
	PUSHJ P,MKNCUS
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####OUTPUT 1 (IF CHANGED), 3 (IF NOT FOUND) OR ERROR
	PUSHJ P,GTALL	;FIND ALL USERS FOR THIS CUSTOMER
	SKIPN NUUNS
CHDSEN:	JRST [JSA 16,DBCLOS
		JSA 16,DBCLOS
		MOVE F,SAVF
		PUSHJ P,SENDEND
		JRST LUDUP1]
	MOVE F,SAVF
	JSA 16,DBMAP
	ARG TWO
	ARG TUUUN
	ARG TUSUUN
	MOVE A,VINFO+NHOST
	CAIN A,1
	JRST CHN940
	JSA 16,DBFIND
	ARG LAST
	ARG 5,X22AND
	ARG TVSTP
	ARG 5,EQUALS
	ARG NSTOP
	ARG 5,X22AND
	ARG TVHOST
	ARG EQUALS
	ARG VINFO+NHOST
CHNU1:	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	JRST CHDSEN	;NO VALID USERS
	PUSHJ P,INITMP
CHNUSR:	JSA 16,DBGET
	ARG VINFO
	ARG CNALST
	PUSHJ P,WRTMP
	SOSE NUUNS
	JRST CHNUSR
CNALST:	JSA 16,DBSET
	ARG TWO
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,CLSTMP
NXTTMP:	PUSHJ P,GETTMP
	JRST LSTTMP
	MOVEM F,SAVF
	JSA 16,DBFIND
	ARG TUUUN
	ARG EQUALS
	ARG UINFO+NUUN
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	JRST NXTTMP
	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	TLO F,ASCIO
	PUSHJ P,NAMOUT	;&####OUTPUT USER NAMES (TWELVE BYTES)
	MOVE N,DIST
	CAMN N,UINFO+NUDIST
	JRST .+4
	MOVEM N,UINFO+NUDIST
        ;SETZM UINFO+NUCOST      ;ZERO THE COSTCODE IN NEW RECORD
        MOVEI    A,TUDIST
        MOVEI    B,UINFO+NUDIST
        PUSHJ    P,CHGIT
    ;   PUSHJ    P, MKNUSR
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####AND '1' OR ERROR
	JRST NXTTMP
LSTTMP:	PUSHJ P,DELTMP
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDEND	;&####END WITH A 377B
	JRST LUDUP1

DELTMP:	SETZB A,B
	SETZB C,D
	RENAME DSK1,A
	 JFCL
	POPJ P,0

CHN940:	JSA 16,DBFIND
	ARG LAST
	ARG 5,X22AND
	ARG TVSTP
	ARG 5,EQUALS
	ARG NSTOP
	ARG 5,X22AND
	ARG TVHOST
	ARG 5,LESSTN
	ARG M940
	JSA 16,DBMAP
	ARG ONE
	ARG TUSUUN
	ARG TUUUN
	JSA 16,DBFIND
	ARG LAST
	ARG 5,X22AND
	ARG TUSTP
	ARG 5,EQUALS
	ARG NSTOP
	JSA 16,DBSORT
	ARG TUUUN
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	JRST CHDSEN	;DO VALID USERS
	PUSHJ P,INITMP
CH9401:	JSA 16,DBGET
	ARG UINFO
	ARG CNALST
	MOVE A,UINFO+NUUN
	MOVEM A,VINFO+NUSUUN
	PUSHJ P,WRTMP
	SOSE NUUNS
	JRST CH9401
	JRST CNALST

INITMP:	INIT DSK1,17	;OPEN TEMP DISK FILE
	SIXBIT /DSK/
	0
	JRST INIERR
	MOVE BP,[POINT 3,CINFO,17]
	MOVE B,[POINT 6,A]
	MOVEI N,6
	ILDB CH,BP
	ADDI CH,20	;MAKE SIXBIT
	IDPB CH,B	;MAKE FILE NAME THE CUST. NO.
	SOJG N,.-3
	MOVEM A,TMPNAM#	;SAVE FILE NAME
	HRLZI B,(SIXBIT /DIS/) ;EXTENSION
	SETZB C,D
	ENTER DSK1,A
	JRST LEERR
	JRST CLRTMP

CLRTMP:	SETZM LUDBLK
	MOVE A,[XWD LUDBLK,LUDBLK+1]
	BLT A,LUDBLK+177
	SETZM TMPDEX#
	POPJ P,0

WRTMP:	MOVE INDEX,TMPDEX
	MOVE B,VINFO+NUSUUN
	MOVEM B,LUDBLK(INDEX)
	AOJ INDEX,
	MOVEM INDEX,TMPDEX
	CAIL INDEX,^D126
	PUSHJ P,TMPEND
	POPJ P,0

TMPEND:	OUTPUT DSK1,LUDLST
	STATZ DSK1,740000
	JRST IOERR
	JRST CLRTMP


CLSTMP:	SKIPE TMPDEX
	PUSHJ P,TMPEND
	CLOSE DSK1,
	MOVE A,TMPNAM
	HRLZI B,(SIXBIT /DIS/)
	SETZB C,D
	LOOKUP DSK1,A
	JRST LEERR
	JRST RDTMP

GETTMP:	MOVE INDEX,TMPDEX
	CAIGE INDEX,^D126
	JRST .+4
	PUSHJ P,RDTMP
	STATZ DSK1,20000
	POPJ P,0
	MOVE A,LUDBLK(INDEX)
	MOVEM A,UINFO+NUUN
	MOVEM A,VINFO+NUSUUN
	AOS INDEX,TMPDEX
	SKIPE UINFO+NUUN
	AOS (P)
	POPJ P,0

RDTMP:	INPUT DSK1,LUDLST
	STATZ DSK1,740000
	JRST IOERR
	SETZB INDEX,TMPDEX
	POPJ P,0
SUBTTL CODE 120 CHECK UUN ON SPECIFIED HOST ONLY

;&.SKIP 2
;&CODE 120: CHECK TO SEE IF USER IS VALID ONLY ON SPECIFIED HOST
CHONHT:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	TRO F,ALLIOI
	PUSHJ P,VINIT
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TVHOST
	ARG NEQUALS
	ARG VINFO+NHOST
	JRST CHKANS
SUBTTL CODE 122 - REVERSE LAST ACCOUNTING ENTRY MADE

;&.SKIP 2
;&CODE 122: REVERSE LAST ACCOUNTING ENTRY
;&####VALID CODE ONLY IF LAST BILLING COMMAND WAS 30,60,61,62,74,76 OR 101
REVBIL:	TRO F,ALLIOI
	MOVE A,OLDCOD
	MOVE B,DISTAB(A)
	TLNN B,REVIT
	JRST BADCOD
	CAIN A,30
	JRST RVNCST
	CAIN A,61
	JRST RVADDS
	CAIN A,74
	JRST RVDELS
	CAIN A,60
	JRST RVNEWU
	CAIN A,101
	JRST RVADDU
	CAIN A,62
	JRST RVCHUN
	CAIN A,76
	JRST RVDELU
        CAIN A,205
        JRST RVNEWT
        CAIN A,211
        JRST RVDELT
	JRST BADCOD
SUBTTL CODE 121 REVERSE LAST LUD ENTRY

;&.SKIP 2
;&CODE 121: REVERSE LAST LUD ENTRY
;&####VALID CODE ONLY IF LAST LUD COMMAND WAS 1, 2, OR 3
REVLUD:	TRO F,ALLIOI
	MOVE A,OLDCOD
	JUMPLE A,BADCOD
	CAILE A,3
	JRST BADCOD
	EXCH A,CODE
	MOVEM A,OLDCOD
	MOVE A,SAVORG+LBLK
	MOVEM A,HLOC
	PUSHJ P,GETSYS
	PUSHJ P,GETLUD
	MOVE B,SAVORG+HASH	;FOUND ENTRY IN SAVORG+LINDEX
	MOVE INDEX,SAVORG+LINDEX
	MOVE A,LUDBLK(INDEX)
	MOVEM A,LPPN
	MOVE A,CODE
	CAIN A,3
	JRST FIXCH	;IF CHG. NAME WAS LAST CODE...GO DO IT
	CAIN A,1
	MOVEM B,LUDBLK+4(INDEX)
	CAIN A,2
	SETZM ,LUDBLK+4(INDEX)
	PUSHJ P,ENDLUD
	MOVE A,CODE
	CAIN A,1
	JRST FIXDEL
	CAIE A,2
	JRST DULAGN
	PUSHJ P,GETDUL
	MOVE B,SAVORG+DBLK
	CAME B,HLOC
	PUSHJ P,DSKERR
	MOVE INDEX,SAVORG+DINDEX
	SETZM ,LUDBLK(INDEX)	;GET RID OF OLD DUL ENTRY
	SETZM ,LUDBLK+1(INDEX)
	SETZM ,LUDBLK+2(INDEX)
	JRST DIDIT+2

FIXDEL:	PUSHJ P,GETDUL
	PUSHJ P,DULFRE
	MOVE A,LPPN
	MOVEM A,LUDBLK(C)
	MOVE A,SAVORG+DNAME
	MOVEM A,LUDBLK+1(C)
	MOVE A,SAVORG+DNAME+1
	MOVEM A,LUDBLK+2(C)
	JRST DIDIT+2
;REVERSE ADD CUSTOMER
RVNCST:	MOVE A,SAVORG+OCUST
	MOVEM A,CINFO+NCUSNUM ;GET CUSTOMER NUMBER
	MOVEM A,AINFO+NACUSNUM
	MOVE A,SAVORG+OAST
	MOVEM A,CINFO+NCSYSC
	MOVEM A,AINFO+NASYSC
	PUSHJ P,CFIND
	JRST RVNC1
	PUSHJ P,DELLIT
	MOVEM F,SAVF
	JSA 16,DBDEL
	JSA 16,DBCLOS
	MOVE F,SAVF
RVNC1:	PUSHJ P,AFIND
	JRST DIDIT3
	PUSHJ P,DELLIT
	JRST CHEND

;REVERSE NEW USER
RVNEWU:	MOVE A,SAVORG+PPN
	MOVEM A,DBUUN
	MOVEM A,USINFO+NUSUUN
	MOVEM A,VINFO+NUSUUN
	MOVE A,SAVORG+SITE
	MOVEM A,VINFO+NHOST
	MOVE A,SAVORG+OAST
	MOVEM A,USINFO+NUSYSC
	PUSHJ P,V1FIND
	JRST RVNU1
	PUSHJ P,DELLIT
RVNU1:	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,USFIND
	JRST RVNU2
	PUSHJ P,DELLIT
RVNU2:	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,UFIND
	JRST DIDIT3
	PUSHJ P,DELLIT
	JRST CHEND

;REVERSE ADD SITE FOR A UUN
RVADDS:	MOVE A,SAVORG+PPN
	MOVEM A,VINFO+NUSUUN
	MOVEM A,DBUUN
	MOVE A,SAVORG+SITE
	MOVEM A,VINFO+NHOST
	PUSHJ P,V1FIND
	JRST DIDIT3
	PUSHJ P,DELLIT
	JRST CHEND

;REVERSE CHANGE NAME IN ACCOUNTING
RVCHUN:	MOVE A,SAVORG+PPN
	MOVEM A,DBUUN
	PUSHJ P,UFIND
	JRST DIDIT3
	MOVEI A,TUNAME
	MOVEI B,OLDNAM
	PUSHJ P,CHGIT
	JRST CHEND

;REVERSE DELETE HOST FOR A UUN
RVDELS:	MOVE A,SAVORG+PPN
	MOVEM A,VINFO+NUSUUN
	MOVE A,SAVORG+SITE
	MOVEM A,VINFO+NHOST
	PUSHJ P,VINIT
	MOVEM F,SAVF
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG VINFO+NUSUUN
	ARG X22AND
	ARG TVHOST
	ARG EQUALS
	ARG VINFO+NHOST
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG TODAY
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN NUMRET
	JRST DIDIT3
	JSA 16,DBGET
	ARG VINFO
	ARG .+1
	MOVE F,SAVF
	MOVEI A,TVSTP
	MOVEI B,NSTOP
	PUSHJ P,CHGIT
	JRST CHEND


;REVERSE NEW USER FOR AN AST
RVADDU:	MOVE A,SAVORG+PPN
	MOVEM A,USINFO+NUSUUN
	MOVEM A,VINFO+NUSUUN
	MOVE A,SAVORG+SITE
	MOVEM A,UINFO+NHOST
	MOVE A,SAVORG+NUSYSC
	PUSHJ P,V1FIND
	JRST RVAU1
	PUSHJ P,DELLIT
RVAU1:	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,USFIND
	JRST DIDIT3
	MOVE F,SAVF
	PUSHJ P,DELLIT
	JRST CHEND


RVDELU:	JRST DIDIT3
 
; reverse new user in TUSRDB
RVNEWT:
        MOVE    A,SAVORG+PPN          ; load in saved uun
        MOVEM   A,USINFO+NUUN
        PUSHJ   P,YFIND               ; find uun in TUSRDB
         JRST   DIDIT3                ; not found
        PUSHJ   P,DELLIT
        JRST    CHEND
 
; reverse delete user in TUSRDB
RVDELT:
        MOVE    A,SAVORG+PPN
        MOVEM   A,USINFO+NUUN
        PUSHJ P,YINIT
        MOVEM F,SAVF
	JSA 16,DBFIND
	ARG TUUUN
	ARG EQUALS
	ARG USINFO+NUUN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG TODAY
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	 JRST DIDIT3
	JSA 16,DBGET
	ARG USINFO
	ARG .+1
	MOVE F,SAVF
        MOVEI   A,TUCSTP              ; load attribute 'DSTOP'
        MOVEI   B,NSTOP               ; load value '12/31/99'
        PUSHJ   P,CHGIT
        JRST    CHEND
FIXCH:	SETZM ,LUDBLK+4(INDEX)	;REMOVE NEWER NAME
	PUSHJ P,ENDLUD
	PUSHJ P,GETLUD
	MOVE A,SAVORG+OBLK
	MOVEM A,HLOC
	USETI DSK,@HLOC
	INPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,IOERR
	MOVE INDEX,SAVORG+OINDEX
	MOVE A,SAVORG+OHASH
	MOVEM A,LUDBLK+4(INDEX)	;RESTORE ORIG. NAME
	PUSHJ P,ENDLUD
	PUSHJ P,GETDUL
	MOVE INDEX,SAVORG+DINDEX
	MOVE A,SAVORG+ONAME
	MOVEM A,LUDBLK+1(INDEX)
	MOVE A,SAVORG+ONAME+1
	MOVEM A,LUDBLK+2(INDEX)	;RESTORE ORIG. NAME IN DUL
	PUSHJ P,ENDLUD
	JRST DIDIT2
SUBTTL CODE 123 - LIST ALL USERS FOR A HOST

;&.SKIP 2
;&CODE 123: LIST ALL USERS FOR A HOST
LAHOST:	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	PUSHJ P,CHKINF
	PUSHJ P,SENDOK	;&####OUTPUT 1 OR ERROR
	PUSHJ P,GTACUS
LHST1:	JSA 16,DBGET	;&####FOR EACH USER:
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	TLO F,ASCIO
	PUSHJ P,NAMOUT	;&####OUTPUT USER NAME (TWELVE BYTES)
	MOVE N,UINFO+NUCUSN	;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
	TRNE F,TTYOUT
	OUTSTR MCSTNO
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
	MOVE N,UINFO+NGAN
	PUSHJ P,DECOCT
	PUSHJ P,GANOUT	;&####OUTPUT GAN (THREE BYTES)
	PUSHJ P,CRLF
	MOVE N,UINFO+NUUN
	PUSHJ P,DECOCT
	TRNE F,TTYOUT
	OUTSTR MUUN
	TLO F,OCTINF
	PUSHJ P,NUMOUT	;&####OUTPUT UUN (THREE BYTES)
	PUSHJ P,CRLF
	SOSLE NUUNS
	JRST LHST1
LSTHST:	PUSHJ P,SENDEND	;&####END WITH 377B
	JSA 16,DBCLOS
	JSA 16,DBCLOS
	MOVE F,SAVF
	JRST LUDUP1


;&.SKIP 2
;&CODE 124: LIST CUSTOMER NUMBER FOR A UUN (NO AST NEEDED)
LUCST1:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT, OR ERROR
	MOVE N,UINFO+NUCUSN
	TRNE F,TTYOUT
	OUTSTR MCSTNO
	PUSHJ P,NUMOUT	;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
	JRST LUDUP1
GTACUS:	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,VALDB
	ARG 5,USERDB
	JSA 16,DBFIND	;FIND ALL USERS FOR THIS HOST
	ARG TVHOST
	ARG EQUALS
	ARG VINFO+NHOST
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	JRST LSTHST
	JSA 16,DBMAP
	ARG TWO
	ARG TUSUUN
	ARG TUUUN
	JSA 16,DBFIND
	ARG LAST
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	JRST LSTHST
	POPJ P,0
SUBTTL CODE 125 - LIST DISTRICT FOR A CUSTOMER (ANY AST)

;&.SKIP 2
;&CODE 125: LIST DISTRICT FOR A CUSTOMER FOR ANY AST
LDCUST:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,CFINDA
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF CUSTOMER FOUND, 3 IF NOT, OR ERROR
	MOVEM F,SAVF
	JSA 16,DBGET
	ARG CINFO
	ARG .+1
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVE N,CINFO+NCDIST
	PUSHJ P,DISOUT	;&####OUTPUT DISTRICT (ONE BYTE)
	JRST LUDUP1


;&.SKIP 2
;&CODE 126: LIST ALL USERS AND THEIR HOSTS FOR A DISTRICT
;&####INPUT DISTRICT (ONE BYTE)
;&####FOR EACH USER:
;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
;&####OUTPUT GAN (THREE BYTES)
;&####OUTPUT USERNAME (TWELVE BYTES)
;&####OUTPUT HOSTS (SEE BELOW)
;&####END WITH 377B
LAUHD1:	TLZ F,NAMESO
	JRST LAUSD1+1


;&.SKIP 2
;&CODE 127: LIST ALL USERS FOR AN ACCTG. SYS. TYPE
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)****MUST BE =9 FOR NOW
;&####OUTPUT 1 IF OK, OR ERROR
;&####FOR EACH USER:
;&########OUTPUT USER NAME (TWELVE BYTES)
;&########OUTPUT GAN (THREE BYTES)
;&########OUTPUT UUN (THREE BYTES)
;&####END WITH 377B
LAAST:	TLZ F,NAMESO
	PUSHJ P,ASYSIN
	CAIE N,ASTIII
	PUSHJ P,BADVAL
	JRST LTYMNT+1
SUBTTL CODE 130 - LIST ALL CUSTOMERS FOR A HOST

;&.SKIP 2
;&CODE 130: LIST ALL CUSTOMERS FOR A HOST
LACUST:	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	PUSHJ P,CHKINF
	PUSHJ P,GTACUS
	JSA 16,DBSORT
	ARG TUCNUM
	PUSHJ P,INITMP
	SETZM TMPCUS#
LACST1:	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	MOVE B,UINFO+NUCUSN
	CAME B,TMPCUS
	JRST [MOVEM B,TMPCUS
		MOVEM B,VINFO+NUSUUN
		PUSHJ P,WRTMP
		JRST .+1]
	SOSLE NUUNS
	JRST LACST1
	JSA 16,DBCLOSE
	JSA 16,DBCLOSE
	MOVE F,SAVF
	PUSHJ P,CLSTMP
	JSA 16,DBOPEN
	ARG 5,CUSTDB
NXTACT:	PUSHJ P,GETTMP
	JRST LSTTMP
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG UINFO+NUUN
	ARG X22AND
	ARG TCSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TASYSC
	ARG EQUALS
	ARG TWO
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	JRST NXTACT
	JSA 16,DBGET
	ARG CINFO
	ARG .+1
	MOVE F,SAVF	;&####FOR EACH CUSTOMER:
	PUSHJ P,SENDOK	;&########OUTPUT 1, 377 (IF DONE) OR ERROR
	MOVE N,CINFO
	PUSHJ P,NUMOUT	;&########OUTPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,CRLF
	PUSHJ P,MINOUT	;&########OUTPUT MINIMUM CODE (ONE BYTE)
	MOVE N,CINFO+NCDETC
	PUSHJ P,DETOUT	;&########OUTPUT DETAIL CODE (TWO BYTES)
	PUSHJ P,CPOUT	;&########OUTPUT PRICING CODE (ONE BYTE)
	PUSHJ P,INVOUT	;&########OUTPUT INVOICE CODE (TWO BYTES)
	JRST NXTACT
SUBTTL CUSTOMER LISTING ROUTINE CODE 131-136

;&.SKIP 2
;&CODE 131: LIST CUSTOMER DISTRICT
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LCDIS:	MOVE N,CINFO+NCDIST	;&####OUTPUT 1 (IF FOUND), 3 (IF NOT) OR ERROR
	PUSHJ P,DISOUT	;&####OUTPUT CUSTOMER DISTRICT (ONE BYTE)
	JRST LUDUP1

;&.SKIP 2
;&CODE 132: LIST CUSTOMER DETAIL CODE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LCDET:	MOVE N,CINFO+NCDETC
	PUSHJ P,DETOUT	;&####OUTPUT DETAIL CODE (ONE BYTE)
	JRST LUDUP1

;&.SKIP 2
;&CODE 133: LIST INVOICE CODE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LCINV:	PUSHJ P,INVOUT	;&####OUTPUT INVOICE CODE (TWO BYTES)
	JRST LUDUP1

;&.SKIP 2
;&CODE 134: LIST CUSTOMER MINIMUM CODE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LCMIN:	PUSHJ P,MINOUT	;&####OUTPUT MINIMUM CODE (ONE BYTE)
	JRST LUDUP1

;&.SKIP 2
;&CODE 135: LIST CUSTOMER SALESMAN
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LCSLS:	MOVE N,CINFO+NCSLS
	PUSHJ P,SLSOUT	;&####OUTPUT SALESMAN (ONE BYTE)
	JRST LUDUP1

;&.SKIP 2
;&CODE 136: LIST CUSTOMER PO
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LPO:	PUSHJ P,POOUT	;&####OUTPUT PO NUMBER (THIRTY BYTES)
	JRST LUDUP1
SUBTTL CUSTOMER LISTING ROUTINES, CODES 137-143

;&.SKIP 2
;&CODE 137: LIST PO MINIMUM
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LPOMAX:	PUSHJ P,POMOUT	;&####OUTPUT PO MAXIMUM (THREE BYTES)
	JRST LUDUP1
;&.SKIP 2
;&CODE 140: LIST PO START DATE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LPOSTA:	PUSHJ P,POSTAO	;&####OUTPUT PO START DATE (THREE BYTES-YYMMDD)
	JRST LUDUP1

;&.SKIP 2
;&CODE 141: LIST PO STOP DATE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LPOSTO:	PUSHJ P,POSTOO	;&####OUTPUT PO STOP DATE (THREE 8 BIIT BYTES-YYMMDD)
	JRST LUDUP1

;&.SKIP 2
;&CODE 142: LIST STREET ADDRESS FOR A CUSTOMER ADDRESS
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LSTREET: PUSHJ P,STOUT	;&####OUTPUT 3 LINES OF STREET ADDRESS (51 BYTES EACH)
	JRST LUDUP1

;&.SKIP 2
;&CODE 143: OUTPUT CITY FOR A CUSTOMER ADDRESS
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LCITY:	PUSHJ P,CITOUT	;&####OUTPUT CITY (THIRTEEN BYTES)
	JRST LUDUP1
SUBTTL CUSTOMR LISTING ROUTINES, CODES 144-151
;&.SKIP 2
;&CODE 144: LIST STATE FOR A CUSTOMER ADDRESS
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LSTATE:	PUSHJ P,STAOUT	;&####OUTPUT STATE (TWO BYTES)
	JRST LUDUP1

;&.SKIP 2
;&CODE 145: LIST COUNTRY FOR A CUSTOMER ADDRESS
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LCOUN:	PUSHJ P,COUOUT	;&####OUTPUT COUNTRY (FIVE BYTES)
	JRST LUDUP1

;&.SKIP 2
;&CODE 146: LIST ATTENTION LINE FOR A CUSTOMER ADDRESS
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LATTN:	PUSHJ P,ATTOUT	;&####OUTPUT ATTENTION LINE (51 BYTES)
	JRST LUDUP1
;&.SKIP 2
;&CODE 150: LIST DEFAULT PRICING CODE
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LDEFP:	PUSHJ P,CPOUT	;&####OUTPUT DEFAULT PRICING CODE (ONE BYTE)
	JRST LUDUP1

;&.SKIP 2
;&CODE 151: LIST ZIP CODE FOR A CUSTOMER ADDRESS
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LZIP:	PUSHJ P,ZIPOUT	;&####OUTPUT ZIP CODE (FIVE BYTES)
	JRST LUDUP1
SUBTTL CODE 152 - SET TYMUSE

;&.SKIP 2
;&CODE 152: SET TYMUSE
SETTYM:	MOVEI A,1
	MOVEM A,AINFO+NUUN	;STORE DEFAULT UUN
	MOVEI A,^D60
	MOVEM A,AINFO+NTUDAY	;AND DATADAYS
	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,GETSTA	;&####INPUT START DATE (THREE BYTES )
	MOVEM N,AINFO+NVSTART
	MOVEM N,CINFO+NVSTART
	PUSHJ P,GTYINF	;&####INPUT RECIEVING CUSTOMER (THREE BYTES)
	MOVE A,NSTOP		;&####INPUT FLAG(1=USER, 2=NO USER)
	MOVEM A,AINFO+NVSTOP	;&####IF FLAG = 1:
	MOVEM A,CINFO+NVSTOP	;&########INPUT UUN (THREE BYTES)
	PUSHJ P,CHKINF		;&########INPUT NO. OF DAYS (TWO BYTES)
	MOVE A,CINFO+NTCREC
	JUMPE A,SETTY1
	PUSHJ P,TUFIND
	PUSHJ P,BADCUS
	JSA 16,DBGET
	ARG USINFO
	ARG .+1
	JSA 16,DBCLOSE
	MOVE F,SAVF
	SKIPN USINFO+NUUN
	PUSHJ P,BADCUS
SETTY1:	MOVE A,AINFO+NCUSNUM
	PUSHJ P,TUFIND
	SKIPA
	PUSHJ P,FND
	PUSHJ P,TYUINI
	MOVEI A,AINFO
	PUSHJ P,ADDIT
	SKIPN A,CINFO+NTCREC
	JRST CHEND
	JSA 16,DBCLOSE
	MOVE F,SAVF
	PUSHJ P,TYCINI
	MOVEI A,CINFO
	PUSHJ P,ADDIT
	JRST CHEND
SUBTTL CODE 153 - UNSET TYMUSE
;&.SKIP 2
;&CODE 153: UNSET TYMUSE
STPTYM:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,GETSTO		;&####INPUT STOP DATE (THREE BYTES)
	MOVEM N,AINFO+NVSTOP
	PUSHJ P,CHKINF
	MOVE A,AINFO+NCUSNUM
	PUSHJ P,TUFIND
	PUSHJ P,NOTFND
	MOVEI A,TVSTP
	MOVEI B,AINFO+NVSTOP
	PUSHJ P,CHGIT
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,TCFIND
	JRST DIDIT3
	MOVEI A,TVSTP
	MOVEI B,AINFO+NVSTOP
	PUSHJ P,CHGIT
	JRST CHEND
SUBTTL CODE 154 - LIST TYMUSE CUSTOMER

;&.SKIP 2
;&CODE 154: LIST TYMUSE CUSTOMER
LISTYM:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	MOVE A,N
	PUSHJ P,TUFIND
	PUSHJ P,NOTFND
	JSA 16,DBGET
	ARG AINFO
	ARG .+1
	MOVE F,SAVF
	MOVE A,AINFO+NCUSNUM
	MOVEM A,CINFO+NCUSNUM
	SETZM CINFO+1
	MOVE A,[XWD CINFO+1,CINFO+2]
	BLT A,CINFO+NVSTOP
	PUSHJ P,TCFIND
	JRST .+4
	JSA 16,DBGET
	ARG CINFO
	ARG .+1
	JSA 16,DBCLOSE
	MOVE F,SAVF
	SKIPN N,AINFO+NUUN
	JRST .+6
	MOVEM N,DBUUN
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	JSA 16,DBCLOSE
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT, OR ERROR
	MOVE N,AINFO+NVSTART
	TRNE F,TTYOUT
	OUTSTR MSTART
	PUSHJ P,DATOUT	;&####OUTPUT START DATE (THREE BYTES)
	PUSHJ P,CRLF
	MOVE N,CINFO+NTCREC
	TRNE F,TTYOUT
	OUTSTR MRCUST
	PUSHJ P,NUMOUT	;&####OUTPUT RECIEVING CUSTOMER (THREE BYTES)
	PUSHJ P,CRLF
	MOVEI N,2
	SKIPE AINFO+NUUN
	MOVEI N,1
	TRNN F,TTYOUT
	PUSHJ P,ONEOUT	;&####OUTPUT FLAG (1=USER FOLLOWS, 2=NO USER)
	SKIPN N,AINFO+NUUN
	JRST LUDUP1
	TLO F,ASCIO
	PUSHJ P,NAMOUT	;&####OUTPUT USER NAME (TWELVE BYTES)
	MOVE N,AINFO+NTUDAY
	TRNE F,TTYOUT
	OUTSTR MNDAYS
	PUSHJ P,TWOOUT	;&####OUTPUT NO. OF DAYS (TWO BYTES)
	PUSHJ P,CRLF
	JRST LUDUP1
SUBTTL CODE 155 - CHANGE NO. OF TYMUSE DAYS
;&.SKIP 2
;&CODE 155: CHANGE NO. OF DAYS
SETDAY:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,GETDAY	;&####INPUT NO. OF DAYS (TWO BYTES)
	PUSHJ P,CHKINF
	MOVE A,AINFO+NCUSNUM
	PUSHJ P,TUFIND
	PUSHJ P,NOTFND
	JSA 16,DBGET
	ARG USINFO
	ARG .+1
	MOVE F,SAVF
	SKIPN USINFO+NUUN
	PUSHJ P,NOTFND
	MOVEI A,TVDAYS
	MOVEI B,AINFO+NTUDAY
	PUSHJ P,CHGIT
	JRST CHEND
SUBTTL CODE 156 - CHANGE RECIEVING CUSTOMER

;&.SKIP 2
;&CODE 156: CHANGE RECIEVING CUSTOMER INFO
SETCUS:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,GTYINF	;&####INPUT RECIEVING CUSTOMER (THREE BYTES)
	PUSHJ P,CHKINF
	MOVE A,CINFO+NCUSNUM	;&####INPUT FLAG (1=USER, 2 =NO USER)
	PUSHJ P,TUFIND	;&####IF FLAG = 1:
	PUSHJ P,NOTFND	;&########INPUT UUN (THREE BYTES)
	MOVEI A,TUUUN	;&########INPUT NO. OF DAYS (TWO BYTES)
	MOVEI B,AINFO+NUUN
	PUSHJ P,CHGIT
	MOVEI A,TVDAYS
	MOVEI B,AINFO+NTUDAY
	PUSHJ P,CHGIT
	JSA 16,DBCLOSE
	MOVE F,SAVF
	PUSHJ P,TCFIND
	JRST SETCU1
	SKIPN CINFO+NTCREC
	JRST SETCU2
	MOVEI A,TURCUS
	MOVEI B,CINFO+NTCREC
	PUSHJ P,CHGIT
	JRST CHEND
SETCU1:	PUSHJ P,GETTOD
	MOVEM N,CINFO+NVSTART
	MOVE A,NSTOP
	MOVEM A,CINFO+NVSTOP
	MOVEI A,CINFO
	PUSHJ P,ADDIT
	JRST CHEND
SETCU2:	PUSHJ P,GETTOD
	MOVEM N,CINFO+NVSTOP
	MOVEI A,TVSTP
	MOVEI B,CINFO+NVSTOP
	PUSHJ P,CHGIT
	JRST CHEND

;&.SKIP 2
;&CODE 157: LIST ALL TYMUSE CUSTOMERS
LALTYM:	PUSHJ P,GETDIS	;&####INPUT DISTRICT (ONE BYTE)
	TRO F,ALLIOI
	MOVEM F,SAVF
	SKIPE CINFO+NCDIST
	JRST L1DIS
	JSA 16,DBOPEN	;&####OUTPUT SAME AS CODE 56
	ARG CUSTDB
	ARG ADDRDB
	ARG TYMUSR
        JSA 16,DBSET
        ARG THREE
	JSA 16,DBFIND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBMAP
	ARG ONE
	ARG TCCNUM
	ARG TCCNUM
	JSA 16,DBFIND
	ARG LAST
	ARG X22AND
        ARG TCSTP
	ARG EQUALS
	ARG NSTOP
	JRST LACUD2

L1DIS:	JSA 16,DBOPEN
	ARG CUSTDB
	ARG ADDRDB
	ARG TYMUSR
        JSA 16,DBSET
        ARG THREE
	JSA 16,DBFIND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBMAP
	ARG ONE
	ARG TCCNUM
	ARG TCCNUM
	JSA 16,DBFIND
	ARG LAST
	ARG X22AND
	ARG TCDIST
	ARG EQUALS
	ARG CINFO+NCDIST
        ARG X22AND
        ARG TCSTP
	ARG EQUALS
	ARG NSTOP
	JRST LACUD2
SUBTTL USER LISTING ROUTINES, CODES 160-162

;&.SKIP 2
;&CODE 160: LIST CUSTOMER NUMBER AND NAME FOR A UUN
LCUSTN:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	PUSHJ P,ASYSIN	;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
	TRO F,ALLIOI
	PUSHJ P,USFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVE N,UINFO+NUCUSN
	MOVEM N,AINFO+NACUSNUM
	PUSHJ P,AFIND
	PUSHJ P,NOADDR
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK
	PUSHJ P,UCSOUT	;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
	JRST LUDUP1	;&####OUTPUT CUSTOMER NAME (51 BYTES)

;&.SKIP 2
;&CODE 161: LIST SALESMAN FOR A UUN
;&####INPUT UUN (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LUSLS:	MOVE N,USINFO+NUSLSM
	PUSHJ P,SLSOUT	;&####OUTPUT SALESMAN (ONE BYTE)
	JRST LUDUP1
SUBTTL CODE 163 - CHECK FOR VALID TYMUSE CUSTOMER

;&.SKIP 2
;&CODE 163: CHECK FOR VALID TYMUSE CUSTOMER
CHKTYM:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	MOVE A,N
	PUSHJ P,TUFIND
	JRST CHKA1
	JRST CHKANS
SUBTTL CODE 164 - LIST ALL GANS FOR A COSTCODE

;&.SKIP 2
;&CODE 164:  LIST ALL GANS FOR A COSTCODE
LGNCCO: PUSHJ P,COCOIN  ;&####INPUT COSTCODE (THREE BYTES)
        TRO F,ALLIOI    ;&####FOR EACH GAN:
        MOVEM F,SAVF
        JSA 16,DBOPEN
        ARG 5,USERDB
        JSA 16,DBFIND
        ARG TUCOCO
        ARG EQUALS
        ARG UINFO+NUCOST
        ARG X22AND
        ARG TUSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUUNS
        MOVE F,SAVF
        SKIPN NUUNS
         PUSHJ P,NOTFND
        PUSHJ P,SENDOK
        JSA 16,DBSORT
        ARG TGAN
        MOVE F,SAVF
        SETZM GAN
NGNCCO: JSA 16,DBGET
        ARG UINFO
        ARG NXTGCO
        MOVE F,SAVF
        MOVE N,UINFO+NGAN
        CAMN N,GAN
        JRST NXTGCO     ;SAME AS LAST GAN...GOTO NXTGCO
        MOVEM N,GAN     ;SAVE LAST GAN
        PUSHJ P,DECOCT  
        PUSHJ P,GANOUT  ;&####OUTPUT GAN (THREE BYTES)
        PUSHJ P,CRLF    
NXTGCO: SOSLE NUUNS
        JRST NGNCCO
        JRST LSTUAC     ;&####END WITH 377B
SUBTTL USER LISTING ROUTINES, CODES 165-167

;&.SKIP 2
;&CODE 165: LIST CURRENCY CODE FOR A UUN
;&####INPUT UUN (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LUCURR:	PUSHJ P,CUROUT	;&####OUTPUT CURRENCY CODE (ONE BYTE)
	JRST LUDUP1

;&.SKIP 2
;&CODE 167: LIST TIME ZONE FOR A UUN
;&####INPUT UUN (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LZONE:	PUSHJ P,AZONOUT	;&####OUTPUT TIME ZONE (ONE BYTE)
	JRST LUDUP1
SUBTTL CODE 170 LIST ALL COSTCODES FOR A DISTRICT

;&.SKIP 2
;&CODE 170: LIST ALL COSTCODES FOR A DISTRICT
LACCD1: PUSHJ P,GETDIS  ;&####INPUT DISTRICT (ONE BYTE)
        TRO F,ALLIOI    ;&####FOR EACH COSTCODE:
        MOVEM F,SAVF
        JSA 16,DBOPEN
        ARG 5,CUSTDB
        JSA 16,DBFIND
        ARG TCDIST
        ARG EQUALS
        ARG CINFO+NCDIST
        ARG X22AND 
        ARG TCSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUMRET
        MOVE F,SAVF
        SKIPN NUMRET
         PUSHJ P,NOTFND
        PUSHJ P,SENDOK
        JSA 16,DBSORT
        ARG TCCOCO
        MOVE F,SAVF
        SETOM COSCOD#   ;INITIAL C.C. VALUE -1 SO IT DIFFERS FROM ALL LEGAL VALUES
NACCD1: JSA 16,DBGET
        ARG CINFO
        ARG NXTCCD
        MOVE F,SAVF
        MOVE N,CINFO+NCCOST
        CAMN N,COSCOD
        JRST NXTCCD     ;SAME AS LAST COSTCODE...GOTO NXTCCD
        MOVEM N,COSCOD  ;SAVE LAST COSTCODE
        PUSHJ P,CCOOUT  ;&####OUTPUT COSTCODE (THREE BYTES)
NXTCCD: SOSLE NUMRET
        JRST NACCD1
        JRST LSTUAC
SUBTTL USER LISTING ROUTINES, CODES 171-175

;&.SKIP 2
;&CODE 171: LIST DISTRICT FOR A UUN
;&####INPUT UUN (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LUDIST:	MOVE N,UINFO+NUDIST
	PUSHJ P,DISOUT	;&####OUTPUT DISTRICT (ONE BYTE)
	JRST LUDUP1

;&.SKIP 2
;&CODE 173: LIST LANGUAGE CODE
;&####INPUT UUN (THREE BYTES)
;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
LLANG:	PUSHJ P,LANOUT	;&####OUTPUT LANGUAGE CODE (ONE BYTE)
	JRST LUDUP1

SUBTTL CODE 177 - MOVE USERS - RETURN USERS FOR A GAN AND ADD NEW HST

;&.SKIP 2
;&CODE 177: MOVE USERS - RETURN ALL USERS FOR A GAN AND ADD NEW HOST

MUALGN:	PUSHJ P,CUSTIN	;&####INPUT SAME AS CODE 201
	PUSHJ P,GANIN
	PUSHJ P,OLDNEW   ;&####INPUT OLD, NEW HOST RESTART FLAG, IF=2 GET UUN
	PUSHJ P,CHKINF
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,USERDB
	ARG 5,VALDB
	JSA 16,DBFIND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TGAN
	ARG EQUALS
	ARG UINFO+NGAN
	JSA 16,DBNREC
	ARG NUUNS
	JRST MUALL	;&####OUTPUT SAME AS CODE 200
SUBTTL CODE 200 - MOVE USERS - RETURN USERS FOR A CUSTOMER AND ADD HOST

;&.SKIP 2
;&CODE 200: MOVE USERS - RETURN USERS FOR A CUSTOMER AND ADD HOST
MUAUSR:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,OLDNEW	;&####INPUT OLD, THEN NEW HOST (TWO BYTES EACH)
	PUSHJ P,CHKINF
	PUSHJ P,GTALL	;GET ALL USERS FOR A CUST WITH NULL STOP DATE
MUALL:	SKIPN NUUNS
MUALL1:	JRST [PUSHJ P,SENDOK	;IF NONE, DONE
		JRST CHDSEN]
	MOVE F,SAVF
	JSA 16,DBMAP
	ARG TWO
	ARG TUUUN
	ARG TUSUUN
	JSA 16,DBFIND
	ARG LAST
	ARG 5,X22AND
	ARG TVSTP
	ARG 5,EQUALS
	ARG NSTOP
	ARG 5,X22AND
	ARG TVHOST
	ARG 5,EQUALS
	ARG OLDHST
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	JRST MUALL1
        JSA 16,DBSORT
        ARG TUSUUN
        MOVE F,SAVF
	PUSHJ P,INITMP
MUCHN:	JSA 16,DBGET
	ARG VINFO
	ARG MUCNA
	PUSHJ P,WRTMP	;WRITE OUT UUN
	SOSE NUUNS	;DONE ALL UUN'S?
	JRST MUCHN	;NO, GO GET NEXT ONE
MUCNA:	MOVE F,SAVF	;YES, SEND USER NAMES
	PUSHJ P,CLSTMP	;CLOSE FILE FIRST
	TRNE F,NOHSTS	;FOR 940 MOVE USERS
	JRST MUCNA1
	MOVE N,NEWHST	;SET UP FOR NEW RECORDS TO BE ADDED
	MOVEM N,VINFO+NHOST
	PUSHJ P,GETTOD
	MOVEM N,VINFO+NVSTART
	MOVE N,NSTOP
	MOVEM N,VINFO+NVSTOP
MUCNA1:	PUSHJ P,SENDOK	;&####OUTPUT '1' OR ERROR CODE
MUNXT:	TRZ F,ALLIOI	;DON'T SEND ERROR UNTIL USER NAME HAS BEEN SENT
	PUSHJ P,GETTMP
	JRST MULST
        SKIPN AINFO+NUUN
        JRST .+5
        MOVE N,UINFO+NUUN
        CAMGE N,AINFO+NUUN
        JRST .-6
        SETZM AINFO+NUUN
	MOVEM F,SAVF
	JSA 16,DBSET
	ARG ONE
	MOVE F,SAVF
	MOVE A,UINFO+1
	MOVEM  A,DBUUN
	PUSHJ P,UFIND+1
	JRST MUNXT
	TLO F,ASCIO	;&####FOR EACH USER:
	PUSHJ P,NAMOUT	;&#######OUTPUT USER NAME (TWELVE BYTES)
	TRNE F,NOHSTS	;FOR CODE 203, 204
	JRST MUNXT	;DO NOT ADD HOST
	MOVEM F,SAVF
	JSA 16,DBSET
	ARG TWO
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TVHOST
	ARG EQUALS
	ARG VINFO+NHOST
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPE NUMRET
	JRST [PUSHJ P,SENDOK
		JRST MUNXT]
	MOVEI A,VINFO
	PUSHJ P,ADDIT
	TRO F,ALLIOI	;CAN SEND ERROR NOW (FOR THIS USER)
	PUSHJ P,SENDOK	;&#######AND '1' OR ERROR CODE
	JRST MUNXT	;&####AND END WITH A 377B
MULST:	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	JRST LSTTMP
SUBTTL CODE 201 - MOVE USERS - RETURN ALL USERS FOR A CUST FOR A GAN AND ADD NEW HST

;&.SKIP 2
;&CODE 201: MOVE USERS - RETURN ALL USERS FOR A CUSTOMER FOR A GAN AND ADD NEW HOST

MUAGAN:	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	PUSHJ P,GANIN	;&####INPUT GAN (THREE BYTES)
	PUSHJ P,OLDNEW	;&####INPUT OLD THEN NEW HOST (TWO BYTES EACH)
	PUSHJ P,CHKINF
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,USERDB
	ARG 5,VALDB
	JSA 16,DBFIND
	ARG TUCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	ARG X22AND
	ARG TGAN
	ARG EQUALS
	ARG UINFO+NGAN
	JSA 16,DBNREC
	ARG NUUNS
	JRST MUALL	;&####OUTPUT SAME AS CODE 200

;&.SKIP 2
;&CODE 202: DELETE USER FROM LUD/DUL AND DO NOT CHARGE (FOR MOVE USER)
;&####INPUT AND OUTPUT LIKE CODE 1

;&.SKIP 2
;&CODE 203: MOVE USERS - RETURN USERS FOR A CUSTOMER FOR A HOST (FOR NON PDP-10'S)
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT OLD HOST (TWO BYTES)
;&####OUTPUT '1' OR ERROR CODE
;&####AND THEN FOR EACH USER VALID ON THE OLD HOST:
;&######OUTPUT USER NAME
;&####END WITH 377B
MUUSR1:	TRO F,NOHSTS
	JRST MUAUSR

;&.SKIP 2
;&CODE 204: MOVE USERS - RETURN USERS FOR A CUSTOMER FOR A GAN FOR A HOST (FOR NON PDP-10'S)
;&####INPUT CUSTOMER NUMBER (THREE BYTES)
;&####INPUT GAN (THREE BYTES
;&####INPUT OLD HOST (TWO BYTES)
;&####OUTPUT THE SAME AS 203
MUGAN1:	TRO F,NOHSTS
	JRST MUAGAN
SUBTTL CODE 205 - ADD USER TO TUSRDB

;&.SKIP 2
;&CODE 205: ADD USER TO TUSRDB

NWTUUN:	PUSHJ P,USERIN	;&####INPUT PPN (SIX 8 BYTES)
	MOVEM N,USINFO+NUUN
	MOVEM N,SAVORG+PPN
	MOVE N,UINFO+NGAN
	MOVEM N,USINFO+NGAN
	PUSHJ P,YFIND
	SKIPA
	PUSHJ P,FND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,GTUNAM	;&####INPUT USER NAME (TWELVE BYTES)
	MOVE A,[XWD UINFO+NUNAME,USINFO+NUNAME]
	BLT A,USINFO+NUNAME+2
	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	MOVEM N,USINFO+NUCUSN
	MOVEI A,ASTIII
	MOVEM A,CINFO+NCSYSC
	PUSHJ P,CHKCUS
	PUSHJ P,BADCUS
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,GETDIS
	MOVEM N,USINFO+NUDIST	;&####INPUT DISTRICT (ONE BYTE)
	PUSHJ P,GTMAIL	;&####INPUT MAIL UUN (THREE BYTES)
	MOVEM N,USINFO+NTMUUN
        PUSHJ   P,TCOCIN              ; prompt for costcode
	PUSHJ P,CHKINF
	PUSHJ P,GETTOD
	MOVEM N,USINFO+NTSTART
	MOVE N,NSTOP
	MOVEM N,USINFO+NTSTOP
   ;    PUSHJ   P,GTCOCT
	PUSHJ P,YINIT
	MOVEI A,USINFO
	PUSHJ P,ADDIT
	JRST CHEND
SUBTTL CODE 206 - CHANGE USER NAME IN TUSRDB

;&.SKIP 2
;&CODE 206: CHANGE A USER NAME IN TUSRDB

CHTNAM:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	MOVEM N,USINFO+NUUN
	PUSHJ P,YFIND
	PUSHJ P,NOTFND
	TLO F,ASCIO
	PUSHJ P,GNWNAM	;&####INPUT NEW NAME (TWELVE BYTES)
	MOVE A,[XWD NNAME,USINFO+NUNAME]
	BLT A,USINFO+NUNAME+2
        PUSHJ P,MKNTYM
        JRST CHEND
MKNTYM:	PUSHJ P,CHKINF
	PUSHJ P,GETTOD
	MOVEI A,TUCSTP
	MOVEI B,TODAY
	PUSHJ P,CHGIT
	PUSHJ P,GETTOM
	MOVEM N,USINFO+NTSTART
	MOVEI A,USINFO
	PUSHJ P,ADDIT
        POPJ P,0


;&.SKIP 2
;&CODE 207: CANCEL ACCOUNT IN TUSRDB

DLTACC:	PUSHJ P,GANIN	;&####INPUT GAN (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TGAN
	ARG EQUALS
	ARG VINFO+NVGAN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	PUSHJ P,GETTOD
DLTANX:	JSA 16,DBGET
	ARG USINFO
	ARG DLTALT
	MOVE F,SAVF
	TLO F,ASCIO	;&####FOR EACH USER:
	MOVE BP,[POINT 7,USINFO+NUNAME]
	PUSHJ P,NAMOUT+1	;&#######OUTPUT USER NAME (TWELVE BYTES)
	MOVEI A,TUCSTP
	MOVEI B,TODAY
	PUSHJ P,CHGIT
	PUSHJ P,SENDOK	;&#######SEND '1' OR ERROR CODE
	SOSLE NUUNS
	JRST DLTANX
DLTALT:	PUSHJ P,CNTCUS
	PUSHJ P,SENDEND	;&####END WITH 377B
	JRST LUDUP1
SUBTTL CODE 210 - RETURN NUMBER OF VALID UUNS FOR A GAN IN TUSRDB
;&.SKIP 2
;&CODE 210: RETURN NUMBER OF VALID UUN'S FOR A GAN IN TUSRDB
TUSNUM: PUSHJ   P,GANIN         ;&####INPUT GAN (3 BYTES)
        TRO     F,ALLIOI
        PUSHJ   P,YINIT
        JSA     16,DBFIND
        ARG     TGAN
        ARG     EQUALS
        ARG     VINFO+NVGAN
        ARG     X22AND
        ARG     TUCSTP
        ARG     EQUALS
        ARG     NSTOP
        JSA     16,DBNREC
        ARG     NUMRET
        JSA     16,DBCLOSE
        MOVE    F,SAVF
        PUSHJ   P,CNTOUT        ;&####OUTPUT RECORD COUNT (3 BYTES)
        JRST    LUDUP1
SUBTTL CODE 211 - REMOVE USER FROM TUSRDB

;&.SKIP 2
;&CODE 211: REMOVE USER FROM TUSRDB

DLTUUN:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	MOVEM N,USINFO+NUUN
	MOVEM N,SAVORG+PPN
	PUSHJ P,CHKINF
	PUSHJ P,YFIND
	JRST DIDIT3
	MOVE F,SAVF
	PUSHJ P,GETTOD
	MOVEI A,TUCSTP
	MOVEI B,TODAY
	PUSHJ P,CHGIT
	PUSHJ P,CNTCUS
	JRST DIDIT3

;&.SKIP 2
;&CODE 212: LIST RECORD FOR A USER IN TUSRDB
LISTUU:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	MOVEM N,USINFO+NUUN
	TRO F,ALLIOI
	PUSHJ P,YFIND
	PUSHJ P,NOTFND
	MOVEM F,SAVF
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVEI A,ASTIII
	MOVEM A,AINFO+NASYSC
	MOVE N,USINFO+NUCUSN
	MOVEM N,AINFO+NACUSNUM
	PUSHJ P,AFIND
	PUSHJ P,NOADDR
	JSA 16,DBCLOS
	MOVE F,SAVF
	MOVE A,USINFO+NTMUUN
	MOVEM A,DBUUN
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT OR ERROR
	MOVE N,USINFO+NUCUSN
	PUSHJ P,UCSOUT+1	;&####OUTPUT CUSTOMER NUMBER (THREE BYTES)
	TLO F,ASCIO	;&####OUTPUT CUSTOMER NAME (FIFTY-ONE BYTES)
	MOVE BP,[POINT 7,UINFO+NUNAME]
	PUSHJ P,MAILOU+1	;&####OUTPUT MAIL NAME (TWELVE BYTES)
        MOVE N,USINFO+NTCOST
        PUSHJ P,CCOOUT          ;&####OUTPUT COSTCODE (THREE BYTES)
	JRST LUDUP1
SUBTTL CODE 213 - LIST ALL USERS FOR A MAIL NAME

;&.SKIP 2
;&CODE 213: LIST ALL USER NAMES FOR A MAIL NAME

LAUMNM:	TLO F,NAMESO
	PUSHJ P,GTMAIL	;&####INPUT MAIL NAME (THREE BYTES)
	MOVEM N,DBUUN	;&####FOR EACH USER NAME:
	TRO F,ALLIOI
	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TYMAIL
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
LTYM1:	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN NUMRET
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT FOUND, OR ERROR
	MOVEM F,SAVF
	JSA 16,DBSORT
	ARG TYNAME
	MOVE F,SAVF
NLAUMN:	JSA 16,DBGET
	ARG USINFO
	ARG .+1
	MOVE F,SAVF
	TLO F,ASCIO
	MOVE BP,[POINT 7,USINFO+NUNAME]
	PUSHJ P,NAMOUT+1	;&####OUTPUT USER NAME (TWELVE BYTES)
	PUSHJ P,CRLF
	TLNE F,NAMESO
	JRST NLAUM1
	MOVE N,USINFO+NGAN
	PUSHJ P,DECOCT
	PUSHJ P,GANOUT
	PUSHJ P,CRLF
	MOVE N,USINFO+NUUN
	PUSHJ P,DECOCT
	TLO F,OCTINF
	PUSHJ P,NUMOUT
	PUSHJ P,CRLF
NLAUM1:	SOSLE NUMRET
	JRST NLAUMN
NLALST:	JSA 16,DBCLOS
	MOVE F,SAVF
	PUSHJ P,SENDEND	;&####END WITH 377B
	JRST LUDUP1
SUBTTL CODE 214 - CHECK MAIL NAME FOR A CUSTOMER
;&.SKIP 2
;&CODE 214: CHECK MAIL NAME FOR A CUSTOMER

CKMNMC:	PUSHJ P,GTMAIL	;&####INPUT MAIL UUN (THREE BYTES)
	MOVEM N,USINFO+NTMUUN
	PUSHJ P,CUSTIN	;&####INPUT CUSTOMER NUMBER (THREE BYTES)
	TLO F,ALLIOI
	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TYMAIL
	ARG EQUALS
	ARG USINFO+NTMUUN
	ARG X22AND
	ARG TUCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JRST CHKANS


;CANCEL TYMCOM-III CUST IF NO MORE USERS
CNTCUS: PUSHJ P,GTTALL
        SKIPE NUMRET
        JRST [ JSA 16,DBCLOSE
                MOVE F,SAVF
                POPJ P,0]
        MOVEI A,ASTIII
        MOVEM A,CINFO+NCSYSC
        JRST CNCUS1
GTTALL: MOVE A,USINFO+NUCUSN
	MOVEM A,CINFO+NCUSNUM
	JSA 16,DBFIND
	ARG TUCNUM
	ARG EQUALS
	ARG USINFO+NUCUSN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
        POPJ P,0
SUBTTL CODE 215 - CHANGE MAIL NAME FOR A UUN

;&.SKIP 2
;&CODE 215: CHANGE MAIL NAME FOR A UUN

CHMNAM:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	MOVEM N,USINFO+NUUN
	PUSHJ P,YFIND
	PUSHJ P,NOTFND
	PUSHJ P,GTMAIL	;&####INPUT MAIL UUN (THREE BYTES)
	MOVEM N,USINFO+NTMUUN
        PUSHJ P,MKNTYM
        JRST CHEND

;&.SKIP 2
;&CODE 216: CHECK MAIL NAME FOR A UUN

CKMNMU:	PUSHJ P,GTMAIL	;&####INPUT MAIL NAME
	MOVEM N,USINFO+NTMUUN	;AND SAVE IT
	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	TLO F,ALLIOI
	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TYMAIL
	ARG EQUALS
	ARG USINFO+NTMUUN
	ARG X22AND
	ARG TUUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JRST CHKANS


;.&SKIP 2
;&CODE 217: LIST ALL USERS IN TUSRDB
;&####OUTPUT SAME AS CODE 213

LTYMNT:	TLO F,NAMESO
	TRO F,ALLIOI
	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JRST LTYM1
SUBTTL CODE 220 - ADD UUN-HOST TO TYMHST

;&.SKIP 2
;&CODE 220: ADD UUN-HOST TO TYMHST

MAIADD:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	MOVE N,UINFO+NUUN
	MOVEM N,UINFO+NMHUUN
	PUSHJ P,GTAHST	;&####INPUT HOST (TWO BYTES)
	MOVEM N,UINFO+NMHOST
	PUSHJ P,MHFIND
	SKIPA
	PUSHJ P,MHFND   ; ALLREADY THERE
        PUSHJ P,CHKINF
        SKIPL   UINFO+NMHOST    ; SKIP IF HOST ALL (-1)
        JRST    MAIAOK          ; GO ADD IT.
        MOVEM F,SAVF
        JSA 16,DBFIND           ; BEFORE ADDING HOST ALL, STOP ALL OTHERS.
        ARG TUSUUN
        ARG EQUALS
        ARG UINFO+NMHUUN
        ARG X22AND
        ARG TVSTP
        ARG EQUALS
        ARG NSTOP
        JSA 16,DBNREC
        ARG NUMRET
        MOVE F,SAVF
        SKIPG  NUMRET
        JRST MAIAOK             ; NONE FOUND, JUST GO ADD IT.
        PUSHJ P,GETTOD
        MOVEM N,UINFO+NVSTOP
        MOVEI A,TVSTP
        MOVEI B,UINFO+NVSTOP
        PUSHJ P,CHGIT           ; CHANGE DSTOP TO TODAY'S DATE.
MAIAOK: MOVE    A,HOST          ; ADD HOST/UUN TO TYMHST.
	MOVEM A,UINFO+NMHOST
	PUSHJ P,GETTOD
	MOVEM N,UINFO+NVSTART
	MOVE N,NSTOP
	MOVEM N,UINFO+NVSTOP
	MOVEI A,UINFO
	PUSHJ P,ADDIT
	JRST CHEND


;&.SKIP 2
;&CODE 221: REMOVE UUN-HOST FROM TYMHST

MAIREM:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	MOVE N,UINFO+NUUN
	MOVEM N,UINFO+NMHUUN
	PUSHJ P,GTAHST	;&####INPUT HOST (TWO BYTES)
	MOVEM N,UINFO+NMHOST
	PUSHJ P,MHINIT	;OPEN TYMHST
	JSA 16,DBFIND	;FIND THIS MAIL NAME VALID FOR ANY OTHER HOST
	ARG TUSUUN
	ARG EQUALS
	ARG UINFO+NMHUUN
	ARG X22AND
	ARG TVHOST
	ARG NEQUALS
	ARG UINFO+NMHOST
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	JSA 16,DBCLOSE
	MOVE F,SAVF
	SKIPE NUMRET
	JRST MAIROK
	PUSHJ P,YINIT	;OPEN TUSRDB
	JSA 16,DBFIND	;SEE IF THERE ARE ANY VALID USRS LEFT
	ARG TYMAIL	;ASSIGNED TO THIS MAIL NAME
	ARG EQUALS
	ARG UINFO+NMHUUN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	JSA 16,DBCLOSE
	MOVE F,SAVF
	TRO F,ALLIOI
	SKIPE NUMRET
	PUSHJ P,MNVALD
MAIROK:	PUSHJ P,MHFIND
	PUSHJ P,MHNFND
	PUSHJ P,CHKINF
	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	PUSHJ P,GETTOD
	MOVEM N,UINFO+NVSTOP
	MOVEI A,TVSTP
	MOVEI B,UINFO+NVSTOP
	PUSHJ P,CHGIT
	JRST CHEND
SUBTTL CODE 222: LIST ALL UUN-HOST ENTRIES

;&.SKIP 2
;&CODE 222: LIST ALL UUN-HOST ENTRIES IN TYMHST
MHLIST:	TRO F,ALLIOI
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG MAILDB
	ARG USERDB
	JSA 16,DBFIND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT, OR ERROR
	SKIPA
MHLLST:	JRST [MOVE F,SAVF
		PUSHJ P,SENDEND
		PUSHJ P,CRLF
		JRST LUDUP1]
	JSA 16,DBSORT
	ARG TUSUUN
	ARG TVHOST
	JSA 16,DBGET
	ARG UINFO
	ARG MHLLST
	MOVE A,UINFO+NMHUUN
	MOVEM A,DBUUN
MHLNXT:	MOVE A,UINFO+NMHOST
	MOVEM A,HOST
	JSA 16,DBSET
	ARG TWO
	JSA 16,DBFIND
	ARG TUUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	SKIPE N,NUMRET
	CAIE N,1
	PUSHJ P,DUPERR
	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	TLO F,ASCIO	;&####FOR EACH UUN-HOST:
	PUSHJ P,NAMOUT	;&####MAIL NAME (TWELVE BYTES)
	PUSHJ P,CRLF
	SKIPGE N,HOST
	MOVEI N,ALHSTS
	PUSHJ P,TWOOUT	;&####HOST (TWO BYTES)
	PUSHJ P,SPAOUT	;&####END WITH 377B
MHNXT:	JSA 16,DBSET
	ARG ONE
	JSA 16,DBGET
	ARG UINFO
	ARG MLSTH
	MOVE F,SAVF
	MOVE A,UINFO+NMHUUN
	CAME A,DBUUN
	JRST [MOVEM A,DBUUN
		PUSHJ P,CRLF
		PUSHJ P,SENDEND
		JRST MHLNXT]
	MOVE N,UINFO+NMHOST
	PUSHJ P,TWOOUT
	PUSHJ P,SPAOUT
	JRST MHNXT
MLSTH:	MOVE F,SAVF
	PUSHJ P,SENDEND
	JRST MHLLST
SUBTTL CODE 223: LIST ALL HOSTS FOR A UUN IN TYMHST

;&.SKIP 2
;&CODE 223: LIST ALL HOSTS FOR A UUN IN TYMHST
MAILST:	PUSHJ P,UUNIN	;&####INPUT UUN (THREE BYTES)
	MOVEM N,UINFO+NMHUUN
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG MAILDB
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG UINFO+NMHUUN
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT, OR ERROR
	JSA 16,DBSORT
	ARG TVHOST
MHNEXT:	JSA 16,DBGET
	ARG UINFO
	ARG MHLLST
	MOVE F,SAVF	;&####FOR EACH HOST:
	SKIPGE N,UINFO+NMHOST
	MOVEI N,ALHSTS
	PUSHJ P,TWOOUT	;&####OUTPUT HOST (TWO BYTES)
	PUSHJ P,SPAOUT	;&####END WITH 377B
	JRST MHNEXT
SUBTTL CODE 224 - ADD HOST TO TYMCNV

;&.SKIP 2
;&CODE 224: ADD HOST TO TYMCNV


TRIADD:	PUSHJ P,GTAHST	;&####INPUT HOST (TWO 8 BIT BYTES)
	MOVEM N,UINFO+NTRHST
	PUSHJ P,TRFIND
	SKIPA
	PUSHJ P,TRFND
	PUSHJ P,CHKINF
	MOVE A,HOST
	MOVEM A,UINFO+NTRHST
	PUSHJ P,GETTOD
	MOVEM N,UINFO+NTRSTART
	MOVE N,NSTOP
	MOVEM N,UINFO+NTRSTOP
	MOVEI A,UINFO
	PUSHJ P,ADDIT
	JRST CHEND


;&.SKIP 2
;&CODE 225: DELETE HOST FROM TYMCNV

TRIDEL:	PUSHJ P,GTAHST	;&####INPUT HOST (TWO 8 BIT BYTES)
	MOVEM N,UINFO+NTRHST
	PUSHJ P,TRFIND
	PUSHJ P,TRNFND
	PUSHJ P,CHKINF
	JSA 16,DBGET
	ARG UINFO
	ARG .+1
	MOVE F,SAVF
	PUSHJ P,GETTOD
	MOVEM N,UINFO+NTRSTOP
	MOVEI A,TRSTP
	MOVEI B,UINFO+NTRSTOP
	PUSHJ P,CHGIT
	JRST CHEND
SUBTTL CODE 226 - LIST ENTRIES IN TYMCNV

;&.SKIP 2
;&CODE 226: LIST ALL ENTRIES IN TYMCNV
TRILIS:	TRO F,ALLIOI
	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG TRIPDB
	JSA 16,DBFIND
	ARG TRSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT, OR ERROR
	JSA 16,DBSORT
	ARG TRHOST
TRINXT:	JSA 16,DBGET
	ARG UINFO
	ARG MHLLST
	MOVE N,UINFO+NTRHST	;&####FOR EACH HOST:
	MOVE F,SAVF
	PUSHJ P,TWOOUT	;&####OUTPUT HOST (TWO BYTES)
	PUSHJ P,SPAOUT	;&####END WITH 377B
	JRST TRINXT
	JRST LUDUP1

;&.SKIP 2
;&CODE 227: LIST ALL USERS FOR A GAN IN TUSRDB
LUTGAN:	PUSHJ P,GANIN	;&####INPUT GAN (THREE BYTES)
	TRO F,ALLIOI
	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TGAN
	ARG EQUALS
	ARG VINFO+NVGAN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUUNS
	MOVE F,SAVF
	SKIPN NUUNS
	PUSHJ P,NOTFND
	PUSHJ P,SENDOK	;&####OUTPUT 1 IF FOUND, 3 IF NOT, OR ERROR
	JRST LNUIII
SUBTTL CODE 230 - CHECK A MAIL NAME FOR A HOST

;&.SKIP 2
;&CODE 230: CHECK A MAIL NAME FOR A HOST
CKMNHT:	PUSHJ P,UUNIN	;&####INPUT MAIL UUN (THREE BYTES)
	MOVEM N,UINFO+NMHUUN
	PUSHJ P,GTAHST	;&####INPUT HOST(TWO BYTES)
	MOVEM N,UINFO+NMHOST
	TRO F,ALLIOI
	PUSHJ P,MHFIND
	JRST CHKA1
	JRST CHKA2


;&.SKIP 2
;&CODE 231: CHECK A HOST IN TYMCNV
CKTRIP:	PUSHJ P,GTAHST	;&####INPUT HOST (TWO BYTES)
	TRO F,ALLIOI
	MOVEM N,UINFO+NTRHST
	PUSHJ P,TRFIND
	JRST CHKA1
	JRST CHKA2


;&.SKIP 2
;&CODE 232: CHECK A HOST 
CKHOST:	PUSHJ P,GETSIT	;&####INPUT HOST (TWO BYTES)
	TRO F,ALLIOI
        MOVEI A,A
        PUSH P,A
        PUSH P,N
        JSR WATTYP ; GET SYSTEM TYPE
        SKIPG A
	JRST CHKA1	;&####RETURN 3 IF NOT A TYMSHARE HOST
	JRST CHKA2	;&####RETURN 1 IF A TYMSHARE HOST
SUBTTL CODE 233 - CHANGE DISTRICT FOR ALL USERS FOR A CUSTOMER IN TUSRDB

;&.SKIP 2
;&CODE 233: CHANGE DISTRICT FOR ALL USERS IN TUSRDB FOR A CUSTOMER

        ;&####INPUT CUSTOMER NUMBER (THREE BYTES)
        ;&####INPUT ACCOUNTING SYSTEM TYPE (ONE BYTE)
CHTADS: MOVE A,CINFO+NCDIST     ;SAVE CUSTOMERS OLD DISTRICT
        MOVEM A,SDIST
        ; SETZM CINFO+NCCOST      ;ZERO THE COSTCODE IN NEW RECORD
        PUSHJ P,GETDIS  ;&####INPUT NEW DISTRICT (ONE BYTE)
        PUSHJ P,CHKINF
        MOVE A,DIST
        CAME A,SDIST
        PUSHJ P,MKNCUS
        JSA 16,DBCLOS
        MOVE F,SAVF
        PUSHJ P,SENDOK  ;&####OUTPUT 1 (IF CHANGED), 3 (IF NOT FOUND) OR ERROR
        PUSHJ P,YINIT   ;OPEN TUSRDB 
        MOVE N,CINFO+NCUSNUM
        MOVEM N,USINFO+NUCUSN
        PUSHJ P,GTTALL  ;GET ALL USERS IN TUSRDB FOR A CUSTOMER
        SKIPN NUMRET
        JRST [JSA 16,DBCLOS
                MOVE F,SAVF
                PUSHJ P,SENDEND
                JRST LUDUP1]
        MOVE F,SAVF
        MOVE N,NUMRET
        MOVEM N,NUUNS
        PUSHJ P,INITMP
CHNTUS: JSA 16,DBGET
        ARG USINFO
        ARG CNTALS
        MOVE N,USINFO+NUUN
        MOVEM N,VINFO+NUSUUN
        PUSHJ P,WRTMP
        SOSE NUUNS
        JRST CHNTUS
CNTALS: PUSHJ P,CLSTMP
NXTTDC: PUSHJ P,GETTMP
        JRST LSTTMP
        MOVE A,UINFO+NUUN
        MOVEM A,USINFO+NUUN
        MOVE F,SAVF
        PUSHJ P,YFIND+1
        JRST NXTTDC
        JSA 16,DBGET
        ARG USINFO
        ARG .+1
        MOVE F,SAVF
        TLO F,ASCIO
        MOVE BP,[POINT 7,USINFO+NUNAME]
        PUSHJ P,NAMOUT+1  ;&####OUTPUT USER NAME
        MOVE N,DIST
        CAMN N,USINFO+NUDIST
        JRST .+4
        MOVEM N,USINFO+NUDIST
        ; SETZM USINFO+NTCOST     ;ZERO THE COSTCODE IN RECORD
        MOVEI    A,TUDIST
        MOVEI    B,USINFO+NUDIST
        PUSHJ    P,CHGIT
     ;  PUSHJ P,MKNTYM+1
        MOVE F,SAVF
        PUSHJ P,SENDOK  ;&####AND '1' OR ERROR
        JRST NXTTDC
SUBTTL CODE 234 - CHANGE CUSTOMER NUMBER FOR A UUN IN TUSRDB
;&.SKIP 2
;&CODE 234: CHANGE CUSNUM FOR A UUN IN TUSRDB
CHTUCS: PUSHJ   P,UUNIN  ;&####INPUT UUN  (THREE BYTES)
                         ;put UUN in N<>VINFO+NUSUUN<>UINFO+NUUN
                         ;and USINFO+NUSUUN
        MOVEM   N,USINFO + NUUN  ;put UUN where we want it
        PUSHJ   P,CUSTIN  ;&####INPUT CUSTOMER NUMBER (THREE BYTES)
                          ;put cusnum in N<>CINFO+NCUSNUM
                          ;and  AINFO+NACUSNUM and VINFO+NUCUSN
        TRO     F,ALLIOI
        MOVEI   A,ASTIII  ;ASTIII = Tymnet ASYSCODE
        MOVEM   A,CINFO + NCSYSC
        MOVEM   F,SAVF
        PUSHJ   P,CFIND   ;Find in CUSTDB using CINFO+NCUSNUM & CINFO+NCSYSC
                          ;put record in CINFO
        PUSHJ   P,NOTFND  ;not Found
        MOVE    F,SAVF
        JSA     16,DBCLOS
        MOVE    F,SAVF
        PUSHJ   P,YFIND   ;Find in TUSRDB using USINFO+NUUN
                          ;put record in USINFO
        PUSHJ   P,NOTFND  ;not Found
        MOVE    N,USINFO + NUDIST  ;move user's dist. to reg. N
        CAME    N,CINFO + NCDIST   ;compare N w/ new cusnum's dist.
        PUSHJ   P,BADCUS  ;dists. not the same.  This cusnum rejected
        MOVE    N,CINFO + NCUSNUM  ;put new cusnum in reg.N
        MOVEM   N,USINFO + NUCUSN  ;move new cusnum to USINFO table
        PUSHJ   P,MKNTYM           ;make new TUSRDB record using USINFO
        JRST    CHEND
SUBTTL CODE 240 - LIST ASYSCODE FOR A HOST
;&.SKIP 2
;&CODE 240: LIST ASYSCODE FOR A HOST
HSTASY:
        PUSHJ   P,GETSIT        ;&####INPUT HOST (2 BYTES)
        TRO     F,ALLIOI
        MOVEM   A,AST
        PUSHJ   P,SENDOK        ;&####OUTPUT 1 (IF FOUND), OR 7 (IF ERROR)
        PUSHJ   P,ASTOUT        ;&####OUTPUT ACCOUNTING SYSTEM TYPE (1 BYTE)
        JRST    LUDUP1
SUBTTL X22 UPDATE ROUTINES

DELLIT:	TRO F,WAITF
	MOVEM F,SAVF
	MOVEI A,DELIT1
	MOVEM A,AGNLOC#
DELIT1:	JSA 16,DBDEL
UPBAK:	MOVE F,SAVF
	TRZ F,WAITF
	POPJ P,0



;A/ ARRAY TO BE ADDED
ADDIT:	HRRM A,ADDIT2
	TRO F,WAITF
	MOVEM F,SAVF
	MOVEI A,ADDIT1
	MOVEM A,AGNLOC
ADDIT1:	JSA 16,DBADDR
ADDIT2:	ARG 0
	JRST UPBAK


;A/ ATTRIBUTE TO CHANGE
;B/ VALUE TO CHANGE ATTRIBUTE TO
CHGIT:	HRRM A,CHGIT2
	HRRM B,CHGIT3
	TRO F,WAITF
	MOVEM F,SAVF
	MOVEI A,CHGIT1
	MOVEM A,AGNLOC
CHGIT1:	JSA 16,DBCHNG
CHGIT2:	ARG 0
CHGIT3:	ARG 0
	JRST UPBAK
SUBTTL OUTPUT ROUTINES

;OUTPUT PPN
PPNOUT:	TRNE F,TTYOUT
	OUTSTR [ASCIZ /PPN: /]
	HLRZ N,WD
	JRST HAL01

;OUTPUT PRIVILEGE BITS
PBOUT:	MOVE N,LUDBLK+2(INDEX)
	MOVEM N,MISC
	MOVE N,LUDBLK+3(INDEX)
	MOVEM N,PRIV
	TRNN F,TTYOUT
	JRST PB940O
	PUSHJ P,CRLF
	LDB N,TYMBIT
	OUTSTR MTYM
	PUSHJ P,BITOUT
	LDB N,ASBIT
	OUTSTR MAS
	PUSHJ P,BITOUT
	LDB N,RUBBIT
	OUTSTR MRUB
	PUSHJ P,BITOUT
	LDB N,GFDBIT
	OUTSTR MGFD
	PUSHJ P,BITOUT
	LDB N,RCMBIT
	OUTSTR MRCM
	PUSHJ P,BITOUT
	LDB N,MODBIT
	OUTSTR MMODE
	OUTSTR @MODES(N)
	POPJ P,0
;&.PAGE
;&PRIVILEGE BITS (THREE BYTES)
;&####BIT 0 ON IF USER MAY NOT LOGIN UNDER THIS NAME
;&####BIT 1 ON IF USER SHOULD NOT RECIEVE TYMSHARE MESSAGE AT LOGIN
;&####BIT 2 RESTRICTED USER BIT
;&####BIT 3 GFD BIT
;&####BIT 4 ON IF THIS USER HAS A BUDGET
;&####BIT 14 ON IF THERE IS A TIMEOUT ON THE DISCONNECT
;&####BIT 15 ON IF JOB SHOULD BE DETACHED ON DISCONNECT
;&####BIT 16 ON IF USER IS TYMSHARE
;&####BIT 17 ON IF USER IS AN ACCOUNT SUPERVISOR
;&####BIT 18 ON IF USER IS BILLABLE
;&####BIT 21 RCM
;&####BITS 22-23 = 0 IF PDP MODE
;&###############= 1 IF XEXEC MODE
;&###############= 2 IF XEXEC-H MODE
PB940O:	SETZM WD
	LDB A,TYMBIT
	DPB A,TYMWD
	LDB A,ASBIT
	DPB A,ASWD
        LDB A,RUBBIT
        DPB A,RUBWD
        LDB A,GFDBIT
        DPB A,GFDWD
        LDB A,RCMBIT
        DPB A,RCMWD
        LDB A,NLOGBIT
        DPB A,NLOGWD
        LDB A,NMSGBIT
        DPB A,NMSGWD
        LDB A,TRUBIT
        DPB A,TRUWD
        LDB A,TIMBIT
        DPB A,TIMWD
        LDB A,DETBIT
        DPB A,DETWD
	LDB A,MODBIT
	DPB A,MODWD
	MOVE N,WD
	JRST NUMOUT

;OUTPUT 2 HALF WORDS, SEPARATED BY A COMMA
HALVOT:	TRNN  F,TTYOUT
	JRST [MOVE N,WD
		JRST NUMOUT]
	HLRZ N,WD
	TRZ N,176000
HAL01:	TLO F,OCTINF
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	OUTCHR COMMA
	HRRZ N,WD
	TLO F,OCTINF
	JRST NUMOUT
;OUTPUT DISTRICT
DISOUT:	TRNE F,TTYOUT
	OUTSTR MDIST
	PUSHJ P,ONEOUT
	JRST CRLF

;OUTPUT BIT AS NUMBER TO 940, Y/N TO TTY
BITOUT:	TRNE F,TTYOUT
	JRST [SKIPN N
		MOVE N,NO
		CAIN N,1
		MOVE N,YES
		MOVE N1,N
		MOVE BP,[POINT 7,N1]
		MOVEI N,1
		JRST ASCOUT]
	MOVE A,N
	SETZ N,
	CAME A,NO
	AOJ N,
	JRST ONEOUT

VPFOUT:	MOVE N,CINFO+NVPF
	TRNN F,TTYOUT
	JRST ONEOUT
	CAIE N,1
	JRST CANVAR
	OUTSTR [ASCIZ /PRICING CODES MAY NOT VARY.
/]
	POPJ P,0
CANVAR:	OUTSTR [ASCIZ /PRICING CODES MAY VARY.
/]
	POPJ P,0

CCOOUT: TRNE F,TTYOUT
        OUTSTR MCOST
        PUSHJ P,NUMOUT
        JRST CRLF

FFFOUT: TRNE F,TTYOUT
        OUTSTR MFOCF
        MOVE BP,FOCFBP
	MOVEI N,SZFOCF
	JRST ASCOUT

CPOUT:	TRNE F,TTYOUT
	OUTSTR MDPR
	MOVE N,CINFO+NDPRI
	PUSHJ P,TWOOUT
	JRST CRLF

SLSOUT:	TRNE F,TTYOUT
	OUTSTR MSLS
	PUSHJ P,ONEOUT
	JRST CRLF

GANOUT:	TRNE F,TTYOUT
	OUTSTR MGAN
	TLO F,OCTINF
	JRST NUMOUT
;OUTPUT LUD TIME ZONE
LZONOUT:	LDB B,[POINT 5,LUDBLK+3(INDEX),7]
	LDB C,[POINT 1,LUDBLK+3(INDEX),2]
	JRST ZONOUT

;OUTPUT ACCTG. TIME ZONE
AZONOUT:	MOVE B,USINFO+NUZONE
	MOVE C,USINFO+NDST
	JRST ZONOUT

;OUTPUT TIME ZONE
ZONOUT:	TRNN F,TTYOUT
	JRST [MOVE N,B
		CAME C,NO
		TRO N,40
		JRST ONEOUT]
	PUSH P,C
	OUTSTR MZONE
	MOVE N,ZONES(B)
	MOVEM N,WD
	MOVEI N,6
	MOVE BP,WDPTR
	SKIPN ,WD
	JRST [OUTSTR [ASCIZ /NOT SET.
/]
		POP P,C
		POPJ P,0]
	TLO F,NOCR
	PUSHJ P,WDSOUT
	OUTSTR MDST
	POP P,N
	JRST BITOUT

;OUTPUT QUOTAS
STROUT:	MOVE N2,NENTRY
	TLNE F,TRUF
	ADDI INDEX,1	;COUNT BUDGET
	ADDI INDEX,5
	TLNE F,INITF
	ADDI INDEX,3	;COUNT INIT FILE
	TRNE F,TTYOUT
	OUTSTR MQIN
	MOVE N,LUDBLK+1(INDEX)
	PUSHJ P,NUMOUT
	MOVE N,LUDBLK+2(INDEX)
	PUSHJ P,CRLF
	TRNE F,TTYOUT
	OUTSTR MQOUT
	PUSHJ P,NUMOUT
	JRST CRLF
;OUTPUT HOSTS, 1 BIT PER HOST
UHSTO:
	MOVE N,NSITES
	PUSHJ P,FILSIT	;FILL IN SITES
	 JFCL
	MOVE F,SAVF
	JRST SITOUT
SUBTTL FORMAT OF HOSTS TO BE OUTPUT
;&.SKIP 2
;&FORMAT OF HOSTS TO BE OUTPUT
;&EACH HOST IS OUTPUT AS TWO BYTES, ENDING THE LIST WITH
;&TWO BYTES OF 377B ( = 177777B).
SITOUT:	SETZ    INDEX,
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /HOSTS: 
/]
NXTSIT:	SKIPN N,SITES(INDEX)
	JRST SIT01
	PUSHJ P,TWOOUT
	PUSHJ P,CRLF
SIT01:	AOJ     INDEX,
        CAIGE   INDEX,MXTHST
         JRST   NXTSIT
        PUSHJ P,SNDEN2
	POPJ P,0

COMMENT ` DISABLE THIS PART
SNDSIT:	MOVEI N,MXTHST
	IDIVI N,8
	JUMPE N1,.+2
	AOJ N,
	PUSH P,N
	PUSHJ P,ONEOUT
	POP P,A
	SETZ INDEX,
	MOVEI C,1
NXTBYT:	MOVEI B,^D8
	SETZ N,
	MOVE BP,[POINT 1,N,28]
NXTBIT:	SKIPE SITES(INDEX)
	DPB C,BP
	IBP BP
	AOJ INDEX,
	SOJG B,NXTBIT
	TLO F,OCTINF
	PUSH P,BP
	PUSH P,A
	PUSHJ P,ONEOUT
	POP P,A
	POP P,BP
	SOJG A,NXTBYT
	POPJ P,0
`
;OUTPUT DATE FROM N (IN X22 CODED FORM)
DATOUT:	PUSHJ P,CDTOD
	MOVE A,YEAR
	IDIVI A,^D100
	TRNN F,TTYOUT
	JRST D940O
	MOVE N,B
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	OUTCHR SLASH
	MOVE N,MO
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	OUTCHR SLASH
	MOVE N,DAY
	JRST NUMOUT
D940O:	MOVE N,B
	IMULI N,^D10000
	MOVE A,MO
	IMULI A,^D100
	ADD N,A
	ADD N,DAY
	JRST NUMOUT

CNAMOUT: MOVE BP,CNAMBP
	MOVEI N,SIZLIN
	TRO F,SHORTS
	JRST ASCOUT

;OUTPUT ADDRESS
ADDOUT:	PUSHJ P,STOUT
	TLO F,NOCR
	PUSHJ P,CITOUT
	TRNE F,TTYOUT
	OUTSTR M2SPACE
	TLO F,NOCR
	PUSHJ P,STAOUT
	TRNE F,TTYOUT
	OUTSTR M2SPACE
	PUSHJ P,ZIPOUT
	PUSHJ P,COUOUT
	JRST ATTOUT
STOUT:	MOVE BP,STR1BP
	MOVEI N,SIZLIN
	TRO F,SHORTS
	PUSHJ P,ASCOUT
	MOVE BP,STR2BP
	MOVEI N,SIZLIN
	TRO F,SHORTS
	PUSHJ P,ASCOUT
	MOVE BP,XLBP	;EXTRA LINE
	MOVEI N,SIZLIN
	TRO F,SHORTS
	JRST ASCOUT

CITOUT:	MOVE BP,CITYBP
	MOVEI N,SZCITY
	JRST ASCOUT
STAOUT:	MOVE BP,STATBP
	MOVEI N,SZSTATE
	JRST ASCOUT

ZIPOUT:	MOVE BP,ZIPBP
	MOVEI N,SZZIP
	JRST ASCOUT

COUOUT:	MOVE BP,COUNBP
	MOVEI N,SZCOUNTRY
	JRST ASCOUT

ATTOUT:	MOVE BP,ATTNBP
	MOVEI N,SIZLIN
	TRO F,SHORTS
	JRST ASCOUT

NAMOUT:	MOVE BP,[POINT 7,UINFO+NUNAME]
	TRNE F,TTYOUT
	OUTSTR MUNAME
	MOVEI N,SIZNAM
	JRST WDSOUT

MAILOU:	MOVE BP,[POINT 7,UINFO+NUNAME]
	TRNE F,TTYOUT
	OUTSTR MANAME
	MOVEI N,SIZNAM
	JRST WDSOUT
;OUTPUT DETAIL CODE
DETOUT:	TRNE F,TTYOUT
	OUTSTR MDET
	PUSHJ P,TWOOUT	;DETAIL CODE
	JRST CRLF

;OUTPUT MINIMUM CODE
MINOUT:	TRNE F,TTYOUT
	OUTSTR MMIN
	MOVE N,CINFO+NCMINC
	PUSHJ P,ONEOUT
	JRST CRLF
INVOUT:	TRNE F,TTYOUT
	OUTSTR MINV
	MOVE N,CINFO+NCINVC
	PUSHJ P,TWOOUT
	JRST CRLF

POOUT:	TRNE F,TTYOUT
	OUTSTR MPO
	TRO F,SHORTS
	MOVE BP,POBP
	MOVEI N,SZPO
	JRST ASCOUT

POMOUT:	TRNE F,TTYOUT
	OUTSTR MPOMAX
	MOVE N,CINFO+NPOMAX
	PUSHJ P,NUMOUT	;PO MAXIMUM
	JRST CRLF

POSTAO:	TRNE F,TTYOUT
	OUTSTR MPOSTA
	MOVE N,CINFO+NPOSTART
	PUSHJ P,DATOUT
	JRST CRLF

POSTOO:	TRNE F,TTYOUT
	OUTSTR MPOSTO
	MOVE N,CINFO+NPOSTOP
	PUSHJ P,DATOUT
	JRST CRLF

ADTOUT: TRNE F,TTYOUT
        OUTSTR MANNDT
        MOVE N,CINFO+NANNDT
        PUSHJ P,DATOUT
        JRST CRLF
   
  
UCSOUT:	MOVE N,UINFO+NUCUSN
	TRNE F,TTYOUT
	OUTSTR MCSTNO
	PUSHJ P,NUMOUT
	TRNE F,TTYOUT
	OUTSTR M2SPACE
	JRST CNAMOU
UCUOUT: MOVE N,UINFO+NUCUSN
        TRNE F,TTYOUT
        OUTSTR MCSTNO
        PUSHJ P,NUMOUT
        JRST CRLF
PRIOUT:	MOVE N,USINFO+NPRICOD
	TRNE F,TTYOUT
	OUTSTR MPCODE
	PUSHJ P,TWOOUT
	JRST CRLF

RESOUT:	TRNE F,TTYOUT
	POPJ P,0
	MOVEI N,1
	PUSHJ P,ONEOUT
	POPJ P,0

CUROUT:	TRNE F,TTYOUT
	OUTSTR MCURR
	MOVE N,UINFO+NCURR
	PUSHJ P,ONEOUT
	JRST CRLF

LANOUT:	TRNE F,TTYOUT
	OUTSTR MLANG
	MOVE N,UINFO+NLANG
	PUSHJ P,ONEOUT
	JRST CRLF

CNTOUT: TRNE F,TTYOUT
        OUTSTR [ASCIZ /COUNT: /]
        MOVE N,NUMRET
        PUSHJ P,NUMOUT
        JRST CRLF

MISOUT:	SETZ N1,
	MOVE N,LUDBLK+2(INDEX)
	LSHC N,-^D9
	LSH N,-^D20
	LSHC N,1
	TRNE F,TTYOUT
	OUTSTR MMISC
	TLO F,OCTINF	;OUTPUT IN OCTAL
	PUSHJ P,ONEOUT
	JRST CRLF

BUDOUT:	TRNE F,TTYOUT
	OUTSTR MBUD
	MOVE N,LUDBLK+5(INDEX)
	IDIVI N,^D10000
	PUSHJ P,NUMOUT
	JRST CRLF

INIOUT:	TRNN F,TTYOUT
	JRST .+3
	OUTSTR MINIT
	OUTCHR LPAREN
	PUSH P,INDEX
	TLNE F,TRUF
	AOJ INDEX,
	MOVE BP,INNPTR
	MOVEI N,SIZNAM
	TLO F,NOCR
	PUSHJ P,WDSOUT
	TRNE F,TTYOUT
	OUTCHR RPAREN
	MOVE BP,INPPTR
	MOVEI N,6
	TLO F,NOCR
	PUSHJ P,WDSOUT
	POP P,INDEX
	JRST CRLF
;OUTPUT AST'S FOR A CUSTOMER
ASTOUT:	MOVE N,AST
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /ACCOUNTING SYSTEM TYPES: /]
	PUSHJ P,ONEOUT
	JRST CRLF
SUBTTL INPUT ROUTINES

;GET UUN, GAN
USERIN:	PUSHJ P,GANIN
UUNIN:	TRNE F,TTYOUT
	OUTSTR MUUN
	TLO F,OCTINF
	PUSHJ P,GETNUM
	 ; TRZ N,400000       ; mask off 18th bit (only allow 17 bits uun)
	JUMPE N,ZNERR
	HRRM N,LPPN
	TRNN F,ACTCMD
	POPJ P,0
	PUSHJ P,OCTDEC
	MOVEM N,DBUUN
	MOVEM N,VINFO+NUSUUN
	MOVEM N,UINFO+NUUN
	MOVEM N,USINFO+NUSUUN
	POPJ P,0

GANIN:	TRNE F,TTYOUT
	OUTSTR MGAN
	TLO F,OCTINF
	PUSHJ P,GETNUM
	JUMPE N,ZNERR
	HRLZM N,LPPN
	TRNN F,ACTCMD
	POPJ P,0
	PUSHJ P,OCTDEC
	MOVEM N,UINFO+NGAN
	MOVEM N,VINFO+NVGAN
	POPJ P,0

;GET USER AND LOOK UP IN LUD
USERCM:	PUSHJ P,SIXNAM
	MOVE	N,UNAME
	MOVE	N1,UNAME+1
	PUSHJ	P,HASHER
	MOVEM N,HUNAME
	MOVEM N1,HLOC
	PUSHJ P,GETSYS
	PUSHJ P,OPLUD	;LOOKUP LUD
	USETI	DSK,@HLOC
	INPUT	DSK,LUDLST
	STATZ DSK,760000
	PUSHJ P,IOERR
	PUSHJ	P,GETLAS
	PUSHJ P,SETDEX
	JRST	[CLOSE DSK,
		POPJ P,0]
	CLOSE DSK,
	JRST RET1

GTUNAM:	TLO F,ASCIO
	SKIPA BP,[POINT 7,UINFO+NUNAME]
SIXNAM:	MOVE BP,[POINT 6,UNAME]
	TRNE F,TTYOUT
	OUTSTR MUNAME
	MOVEI	N,SIZNAM
	JRST GETWD
;GET CUSTOMER NUMBER
CUSTIN:	TRNN F,TTYOUT
	JRST .+4
	TRZE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MCSTNO
	PUSHJ P,GETNUM
	CAIL N,MINCUS
	CAILE N,MAXCUS
	PUSHJ P,BADVAL
	MOVEM N,CINFO+NCUSNUM
	MOVEM N,AINFO+NACUSNUM
	MOVEM N,UINFO+NUCUSN
	POPJ P,0

;GET ACCOUNTING SYSTEM TYPE
ASYSIN:	TRNE F,TTYOUT
	OUTSTR [ASCIZ /ACCOUNTING SYSTEM TYPE: /]
	PUSHJ P,GETONE
	SETZ C,
	CAMN N,LUDUP(C)
	JRST .+5
	AOJ C,
	SKIPL LUDUP(C)
	JRST .-4
	PUSHJ P,BADVAL
	MOVEM N,AINFO+NASYSC
	MOVEM N,CINFO+NCSYSC
	MOVEM N,USINFO+NUSYSC
	POPJ P,0

;GET NEW USER NAME
GNWNAM:	MOVEI N,SIZNAM
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /NEW USER NAME: /]
	MOVE BP,[POINT 6,NNAME]
	TLNE F,ASCIO
	MOVE BP,[POINT 7,NNAME]
	JRST GETWD
;GET PRIV BITS
GETPBT:	SETZM PRIV
        SETZM MISC
	TRNN F,TTYOUT
	JRST GETPB2
	OUTSTR MATYM
	PUSHJ P,GETBIT
	DPB N,TYMBIT
        OUTSTR [ASCIZ /BILLABLE? /]
        PUSHJ P,GETBIT
        MOVEM N,BILABL
	OUTSTR MAAS
	PUSHJ P,GETBIT
	DPB N,ASBIT
        OUTSTR MARUB
        PUSHJ P,GETBIT
        DPB N,RUBBIT
        OUTSTR MAGFD
        PUSHJ P,GETBIT
        DPB N,GFDBIT
        OUTSTR MARCM
        PUSHJ P,GETBIT
        DPB N,RCMBIT
	OUTSTR MMODE
	PUSHJ P,GETNUM
	DPB N,MODBIT
	POPJ P,0
GETPB2:	PUSHJ P,GETNUM
	MOVEM N,WD
	LDB A,TYMWD
	DPB A,TYMBIT
        LDB A,BILWD
        MOVEM A,BILABL
	LDB A,ASWD
	DPB A,ASBIT
        LDB A,RUBWD
        DPB A,RUBBIT
        LDB A,GFDWD
        DPB A,GFDBIT
        LDB A,RCMWD
        DPB A,RCMBIT
	LDB A,MODWD
	DPB A,MODBIT
	LDB A,RCMWD
	DPB A,RCMBIT
	POPJ P,0
;GET TIME ZONE
GETZONE:	TRNN F,TTYOUT
	JRST GTZON2
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MZONE
	PUSHJ P,GETNUM
	CAILE N,MAXZON
	PUSHJ P,BADVAL
	MOVEM N,ZONE
	OUTSTR MADST
	PUSHJ P,YORN
	SKIPA A,ONE
	SETZ A,
	DPB A,DSTBYT
	MOVE N,ZONE
	JRST FIXZONE
GTZON2:	PUSHJ P,GETONE
	MOVEM N,ZONE
FIXZONE: TRNN F,ACTCMD
	POPJ P,0
	LDB A,DSTBYT
	MOVE B,YES
	CAIE A,1
	MOVE B,NO
	MOVEM B,USINFO+NDST
	MOVE N,ZONE
	ANDI N,37
	MOVEM N,USINFO+NUZONE
	POPJ P,0


;GET FLAT FOCUS FEE
GETFFF: TRNN F,TTYOUT
        JRST GETFF2
        TRNE F,NEWF
        OUTSTR NEWMSG
        OUTSTR MFOCF
GETFF2: PUSHJ P,GETONE
        CAIL N,MINFFF
        CAILE N,MAXFFF
        PUSHJ P,BADVAL
        JUMPE N,FFFEQN  ;IF N=0, GOTO FFFEQN TO SET FFF = 'N'
        MOVE N,YES
        MOVEM N,CINFO+NFOCF
        POPJ P,0
FFFEQN: MOVE N,NO
        MOVEM N,CINFO+NFOCF
        POPJ P,0
;GET DISTRICT NO.
GETDIS:	TRNN F,TTYOUT
	JRST DIST2
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MDIST
DIST2:	PUSHJ P,GETONE
	CAIL N,MINDIS
	CAILE N,MAXDIS
	PUSHJ P,BADVAL
	MOVEM N,DIST
	MOVEM N,CINFO+NCDIST
	MOVEM N,UINFO+NUDIST
	POPJ P,0

;GET COSTCODE
COCOIN: TRNN F,TTYOUT
        JRST .+4
        TRZE F,NEWF
        OUTSTR NEWMSG
        OUTSTR MCOST
        PUSHJ P,GETNUM
        CAIL N,MINCCO
        CAMLE N,[MAXCCO]
        PUSHJ P,BADVAL
        MOVEM N,CINFO+NCCOST
        MOVEM N,UINFO+NUCOST
  ;     MOVEM N,USINFO+NTCOST
        POPJ P,0
 
;GET COSTCODE FOR TUSRDB
TCOCIN: TRNN F,TTYOUT
        JRST .+4
        TRZE F,NEWF
        OUTSTR NEWMSG
        OUTSTR MCOST
        PUSHJ P,GETNUM
        CAIL N,MINCCO
        CAMLE N,[MAXCCO]
        PUSHJ P,BADVAL
        MOVEM N,USINFO+NTCOST
        POPJ P,0

;GET VARIABLE PRICING FLAG
GETVPF:	TRNE F,TTYOUT
	OUTSTR [ASCIZ /MAY PRICING CODES VARY? /]
	PUSHJ P,GETBIT
	TRNE F,TTYOUT
	AOJ N,
	MOVEM N,CINFO+NVPF
	POPJ P,0
;GET DEFAULT PRICING CODE
GETDPR:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MDPR
	PUSHJ P,GETTWO
	CAIL N,MINPC
	CAILE N,MAXPC
	PUSHJ P,BADVAL
	MOVEM N,CINFO+NDPRI
	POPJ P,0

;GET LANGUAGE CODE
GETLAN:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MLANG
	PUSHJ P,GETONE
	CAIL N,MINLAN
	CAILE N,MAXLAN
	PUSHJ P,BADVAL
	MOVEM N,UINFO+NLANG
	POPJ P,0

GTRESM:	TRNN F,TTYOUT
	PUSHJ P,GETONE
	MOVEI N,1
	MOVEM N,USINFO+NRES
	POPJ P,0
;GET CUSTOMER DETAIL CODE
GETDET:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MDET
	PUSHJ P,GETTWO
	CAIL N,MINDET
	CAILE N,MAXDET
	PUSHJ P,BADVAL
	MOVEM N,CINFO+NCDETC
	POPJ P,0

;GET CUSTOMER MINIMUM CODE
GETMIN:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MMIN
	PUSHJ P,GETONE
	CAIL N,MINMIN
	CAILE N,MAXMIN
	PUSHJ P,BADVAL
	MOVEM N,CINFO+NCMINC
	POPJ P,0

;GET PURCHASE ORDER
GETPO:	MOVE BP,POBP
	MOVEI N,SZPO
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MPO
	TLO F,ASCIO
	JRST GETWD

;GET COST CODE FOR ENTRY INTO CUSTDB
GTCOCC: SETZM   CINFO+NCCOST
        POPJ P,0

;GET COST CODE FOR ENTRY INTO USERDB
GTCOCU: SETZM   UINFO+NUCOST
        POPJ P,0

;GET COST CODE FOR ENTRY INTO TUSRDB
GTCOCT: SETZM   USINFO+NTCOST
        POPJ    P,0

;GET 'VALID ON NON-LUD HOSTS BIT'
GTNLUD: SETZM   UINFO+NNLUDH
        POPJ P,0
;INPUT  TYMCOM-III HOST
GTAHST:	TRNE F,TTYOUT
	OUTSTR MHOST
	PUSHJ P,GETTWO
	CAIN N,77777
	SETO N,
	MOVEM N,HOST
        MOVEI A,A
        PUSH P,A
        PUSH P,HOST
        JSR WATTYP
        SKIPE A
         PUSHJ P,BADSIT
	POPJ P,0

;GET HOST
GETSI1:	TRNE F,TTYOUT
	OUTSTR MHOST
	PUSHJ P,GETTWO
        MOVEI A,A
        PUSH P,A
        PUSH P,N
        JSR WATTYP
        SKIPG A
	MOVEM N,VINFO+NHOST
	MOVEM N,VINFO+NHOST
	MOVEM N,HOST#
	POPJ P,0
 
 
GETSIT:	TRNE F,TTYOUT
	OUTSTR MHOST
	PUSHJ P,GETTWO
        MOVEI A,A
        PUSH P,A
        PUSH P,N
        JSR WATTYP
        SKIPG A
        PUSHJ P,BADSIT
	MOVEM N,VINFO+NHOST
	MOVEM N,HOST#
	TRZN F,SELHST
	POPJ P,0
	CAME A,USINFO+NUSYSC
GTBADS:	PUSHJ P,BADSIT	;AST DOES NOT MATCH
	POPJ P,0

;GET CUSTOMER NAME
GETNAM:	MOVE BP,CNAMBP
	MOVEI N,SIZLIN
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR [ASCIZ /CUSTOMER NAME: /]
	TLO F,ASCIO
	JRST GETWD

;INPUT OLD AND NEW HOST FOR MOVE USERS
OLDNEW:	TRNE F,TTYOUT
	OUTSTR [ASCIZ /OLD /]
	PUSHJ P,GETSIT
	MOVEM N,OLDHST#
	TRNE F,NOHSTS	;FOR 940 MOVE USERS, NO NEED FOR NEW HOST
	POPJ P,0
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /NEW /]
	PUSHJ P,GETSIT
	MOVEM N,NEWHST#
        SETZM AINFO+NUUN
        PUSHJ P,GETRFL
        CAIE N,1
        POPJ P,0
        PUSHJ P,UUNIN
        MOVEM N,AINFO+NUUN
	POPJ P,0
;&.SKIP 2
;&ORDER OF ADDRESS INFORMATION:
GETADD:	TRNN F,TTYOUT
	JRST .+5
	OUTSTR [ASCIZ /ENTER /]
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR [ASCIZ /CUSTOMER ADDRESS INFORMATION:
/]
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /STREET ADDRESS:
/]
	MOVE BP,STR1BP
	MOVEI N,SIZLIN	;&####STREET1 (51 BYTES)
                        ;&####STREET2 (51 BYTES)
                        ;&####EXTRA LINE (51 BYTES)
	PUSHJ P,GETLIN	;INPUT STREET1
	MOVE BP,STR2BP
	MOVEI N,SIZLIN
	PUSHJ P,GETLIN	;INPUT STREET2
	MOVE BP,XLBP
	MOVEI N,SIZLIN
	PUSHJ P,GETLIN	;INPUT EXTRA LINE
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /CITY: /]
	MOVE BP,CITYBP
	MOVEI N,SZCITY
	PUSHJ P,GETLIN	;&####CITY (THIRTEEN BYTES)
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /STATE: /]
	MOVE BP,STATBP
	MOVEI N,SZSTATE
	PUSHJ P,GETLIN	;&####STATE (TWO BYTES)
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /ZIP: /]
	MOVE BP,ZIPBP
	MOVEI N,SZZIP
	PUSHJ P,GETZIP	;&####ZIP (FIVE BYTES)
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /COUNTRY: /]
	MOVE BP,COUNBP
	MOVEI N,SZCOUNTRY
	PUSHJ P,GETLIN	;&####COUNTRY (FIVE BYTES)
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /ATTENTION LINE: 
/]
	MOVE BP,ATTNBP
	MOVEI N,SIZLIN
	JRST GETLIN	;&####ATTENTION LINE (51 BYTES)
;GET A FULL LINE
GETLIN:	PUSH P,BP
	PUSH P,N
	MOVE CH,SPACE
	IDPB CH,BP
	SOJG N,.-1
	POP P,N
	POP P,BP
	TLO F,ASCIO
	JRST GETWD

;GET PO MAX
GETPMX:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MPOMAX
	PUSHJ P,GETNUM
	CAMLE N,[^D9999999]
	PUSHJ P,BADVAL
	MOVEM N,CINFO+NPOMAX
	POPJ P,0

;GET PO START DATE
GETPD1:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MPOSTA
	PUSHJ P,DATIN
	MOVEM N,CINFO+NPOSTART
	POPJ P,0

;GET PO STOP DATE
GETPD2:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MPOSTO
	PUSHJ P,GETNUM
	JUMPE N,[MOVE N,NSTOP
		JRST .+2]
	PUSHJ P,DATIN+1
	MOVEM N,CINFO+NPOSTOP
	POPJ P,0
;GET INVOICE CODE
GSTINV:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MINV
	PUSHJ P,GETTWO	
	CAIL N,MININV
	CAILE N,MAXINV
	PUSHJ P,BADVAL
	MOVEM N,CINFO+NCINVC
	POPJ P,0

;GET SALESMAN CODE
GETSLS:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MSLS
	PUSHJ P,GETONE
	CAIL N,MINSLS
	CAILE N,MAXSLS
	PUSHJ P,BADVAL
	MOVEM N,CINFO+NCSLS
	MOVEM N,USINFO+NUSLSM
	POPJ P,0


GETZIP:	PUSHJ P,GETLIN
	MOVE BP,ZIPBP
	MOVEI N,SZZIP
	ILDB CH,BP
	SOJG N,.-1
	POPJ P,0
;GET QUOTA INFO INTO STRBLK
GETSTR:	MOVE A,DSKB
	MOVEM A,STR
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MQIN
	PUSHJ	P,GETNUM
	MOVEM N,QIN
	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MQOUT
	PUSHJ	P,GETNUM
	MOVEM N,QOUT
	POPJ	P,0

;GET PRICING CODE
GETPRC:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MPCODE
	TLO F,OCTINF
	PUSHJ P,GETTWO
	CAIL N,MINPC
	CAILE N,MAXPC
	PUSHJ P,BADVAL
	MOVEM N,USINFO+NPRICOD
	MOVE A,CINFO+NCUSNUM
	CAIN A,1		;CUSTOMER NUMBER 1?
	POPJ P,0		;YES, KEEP PRICING CODE
	MOVE A,CINFO+NVPF	;DOES CUST HAVE A NON-VARYING PRICING CODE?
	CAIE A,1
	POPJ P,0	;NO, RETURN
	MOVE N,CINFO+NDPRI	;YES, SET USER TO CUST P CODE
	MOVEM N,USINFO+NPRICOD
	POPJ P,0


;GET USER CURRENCY CODE
GETCUR:	TRNN F,TTYOUT
	JRST .+4
	TRNE F,NEWF
	OUTSTR NEWMSG
	OUTSTR MCURR
	PUSHJ P,GETONE
	CAIL N,MINCUR
	CAILE N,MAXCUR
	PUSHJ P,BADVAL
	MOVEM N,UINFO+NCURR
	POPJ P,0
GETMIS:	TRNE F,TTYOUT
	OUTSTR MMISC
	TLO F,OCTINF
	TLO F,OCTINF
	PUSHJ P,GETONE
	SETZ N1,
	LSHC N,-1
	LSH N,^D20
	LSHC N,^D9
	MOVEM N,MISC
	POPJ P,0

GETBUD:	TRNE F,TTYOUT
	OUTSTR MBUD
	PUSHJ P,GETNUM
	IMULI N,^D10000
	MOVEM N,BUDGET
	POPJ P,0

;INPUT MAIL UUN
GTMAIL:	TRNE F,TTYOUT
	OUTSTR [ASCIZ /MAIL UUN: /]
	TLO F,OCTINF
	PUSHJ P,GETNUM
	 ; TRZ N,400000
	JUMPE N,ZNERR
	PUSHJ P,OCTDEC
	POPJ P,0


GETINI:	MOVE BP,[POINT 6,INIUSR]
	PUSHJ P,SIXNAM+1
	TRNE F,TTYOUT
	OUTSTR MINIT
	MOVE BP,[POINT 6,INIFIL]
	MOVEI N,6
	JRST GETWD
GTYINF:	PUSHJ P,GETREC
	TRNE F,TTYOUT
	JUMPE N,.+4
	PUSHJ P,GETFLG
	CAIE N,1
	POPJ P,0
	PUSHJ P,UUNIN
	MOVEM N,AINFO+NUUN
	JUMPE N,[SKIPN CINFO+NTCREC
		PUSHJ P,BADCUS
		JRST .+1]
	PUSHJ P,UFIND
	PUSHJ P,NOTFND
	MOVE A,UINFO+NUCUSN
	CAME A,AINFO+NCUSNUM
	PUSHJ P,BADCUS
	MOVE A,TYMSYS
	MOVEM A,VINFO+NHOST
	PUSHJ P,F1HOST
	SKIPN NUMRET
	PUSHJ P,NOTFND
	PUSHJ P,GETDAY
	POPJ P,0

GETDAY:	TRNE F,TTYOUT
	OUTSTR MNDAYS
	PUSHJ P,GETTWO
	MOVEM N,AINFO+NTUDAY
	POPJ P,0

GETREC:	TRNE F,TTYOUT
	OUTSTR MRCUST
	PUSHJ P,GETNUM
	MOVEM N,CINFO+NTCREC
	POPJ P,0

GETSTA:	TRNE F,TTYOUT
	OUTSTR MSTART
	PUSHJ P,DATIN
	POPJ P,0

GETSTO:	TRNE F,TTYOUT
	OUTSTR [ASCIZ /STOP DATE: /]
	PUSHJ P,DATIN
	POPJ P,0

GETRFL: TRNE F,TTYOUT
        JRST GETRFT
        PUSHJ P,GETONE
        POPJ P,0
GETRFT: OUTSTR [ASCIZ /IS THIS A NEW MOVE?/]
        PUSHJ P,GETBIT
        AOJ N,
        POPJ P,0
        AOJ N,
        POPJ P,0
GETFLG:	TRNE F,TTYOUT
	JRST GETFLT
	PUSHJ P,GETONE
	POPJ P,0
GETFLT:	OUTSTR [ASCIZ /TYMUSE CUST. TO RECIEVE OWN DATA? /]
	PUSHJ P,GETBIT
	AOJ N,
	POPJ P,0
	AOJ N,
	POPJ P,0
;INPUT DATE

DATIN:	PUSHJ P,GETNUM
	MOVE A,N
	IDIVI A,^D10000
	IDIVI B,^D100
	ADDI A,^D1900
	MOVEM A,YEAR
	CAILE B,^D12
	PUSHJ P,BADVAL
	MOVEM B,MO
	CAILE B,^D31
	PUSHJ P,BADVAL
	MOVEM C,DAY
	JRST DTOCD

SUBTTL MISC. ROUTINES

;TRANSLATE A DECIMAL NUMBER TO ITS OCTAL EQUIVALENT
DECOCT:	MOVE BP,[POINT 3,N1,17]
	MOVEI A,6
	MOVE B,N
	MOVE D,[^D100000]
	IDIV B,D
	IDPB B,BP
	IDIVI D,^D10
	MOVE B,C
	SOJG A,.-4
	MOVE N,N1
	POPJ P,0

;TRANSLATE AN OCTAL NUMBER TO ITS DECIMAL EQUIVALENT
OCTDEC:	MOVE BP,[POINT 3,N,17]
	MOVEI N1,6
	MOVE B,[^D100000]
	SETZ A,
	ILDB CH,BP
	IMUL CH,B
	ADD A,CH
	IDIVI B,^D10
	SOJG N1,.-4
	MOVE N,A
	POPJ P,0

CHKINF:	TRNN F,TTYOUT
	JRST CHK1
	OUTSTR [ASCIZ /ALL ENTRIES CORRECT? /]
	PUSHJ P,YORN
	SKIPA
	JRST LUDUP1
CHK1:	TRO F,ALLIOI
	TRNE F,ERRF
	JRST ERROUT
	POPJ P,0

CLRSIT:	SETZM SITES
	MOVE A,[XWD SITES,SITES+1]
	BLT A,SITES+MXTHST-1
	POPJ P,0
;YES OR NO ROUTINE - Y=RETURN, N=RETURN+1, NEITHER=CALL-1
YORN:	MOVEI N,1
	MOVE BP,[POINT 6,A,29]
	SETZ A,
	PUSHJ P,GETWD
	CAIN A,(SIXBIT /  Y/)
	POPJ P,0
	AOS ,(P)
	CAIN A,(SIXBIT /  N/)
	POPJ P,0
	SOS ,(P)
	SOS ,(P)
	SOS ,(P)
	OUTSTR [ASCIZ /TYPE "Y" OR "N" PLEASE.
/]
	POPJ P,0

;INPUT A Y OR N - ASCII VALUE RETURNED
GETYN:	TRNN F,TTYOUT
	JRST GET1
	JFCL
	PUSHJ P,YORN
	SKIPA
NEG:	SKIPA N,NO
AFFIR:	MOVE N,YES
	POPJ P,0
GET1:	PUSHJ P,GETONE
	JUMPE N,NEG
	JRST AFFIR
GETFRE:	SETZ INDEX,	;N/SIZE OF RECORD
	SKIPE A,LUDBLK(INDEX)
	JRST GETFR2
	MOVE C,INDEX	;SAVE ROOM AT END OF BLK
	ADD C,N
	CAIGE C,200
	POPJ P,0	;ROOM ENUF THERE
	PUSHJ P,NOFIT	;NOT ENUF ROOM, GET OVFLK BLK
	JRST GETFRE
GETFR2:	JUMPL A,GETFR3	;PTS TO OVFL BLK - GO GET IT
	LDB C,NENTP	;REGUALR ENTRY GET SIZE
	SKIPN ,LUDBLK+4(INDEX)	;ZER ENTRY?
	JRST .+3	;YES..SEE IF BIG ENUF
GETFR4:	ADD INDEX,C	;NO, GET NEXT ENTRY
	JRST GETFRE+1	;AND GO LOOK AT IT
	CAMG N,C	;ZER ENTRY , BIG ENUF?
	JRST ZEROIT	;YES, RETURN
	MOVE D,C
	ADD D,INDEX
	MOVE D,LUDBLK(D)
	JUMPG D,GETFR4
	JUMPL D,GETFR3
	CAIGE N,200
	POPJ P,0
	JRST GETFR2-2
GETFR3:	MOVE N1,INDEX
	ADD N1,N
	CAILE N1,200
	JRST [ADD INDEX,C
		PUSHJ P,ROVBLK	;READ OVERFL BLOCK
		JRST GETFRE]
	ADD C,INDEX
	MOVE D,LUDBLK(C)
	MOVEM D,LUDBLK(N1)
	SETZM ,LUDBLK(C)
	POPJ P,0

ZEROIT:	CAMN N,C
	POPJ P,0
	HRRZI A,LUDBLK
	ADD A,INDEX
	ADD A,C
	HRLS A,A
	HRRI A,LUDBLK
	ADD A,INDEX
	ADD A,N
	BLT A,LUDBLK+174
	POPJ P,0

NOFIT:	MOVE A,LASBLK
	ADDI	A,1
	MOVEM A,LASBLK
	TLO A,OVFLF
	MOVEM A,LUDBLK(INDEX)
	SKIPN B,OVBLK
	MOVE B,HLOC
	USETO DSK,@B
	OUTPUT DSK,LUDLST
	STATZ DSK,740000
	PUSHJ P,IOERR
	HRRZM A,OVBLK
	SETZB INDEX,LUDBLK
	MOVE A,[XWD LUDBLK,LUDBLK+1]
	BLT A,LUDBLK+177
	POPJ	P,0

;SEND 940 A 377 FOR THE END OF THE LIST
SENDEN:	MOVEI N,377
	TRNN F,TTYOUT
	PUSHJ P,ONEOUT
	POPJ P,0
SNDEN2: ;SEND A 177777 FOR THE END OF THE LIST (TWO BYTES)
        MOVEI   N,177777
        TRNN    F,TTYOUT
         PUSHJ  P,TWOOUT
        POPJ    P,

;SEND 940 CONFIRMATION THAT WE FOUND THE INFORMATION
SENDOK:	TRNE F,ERRF	;FOUND ANY ERRORS?
	JRST ERROUT	;YES, GO SEND IT
	MOVEI N,1
	TRNN F,TTYOUT
	PUSHJ P,ONEOUT
	POPJ P,0

;CHECK TO SEE IF A CUSTOMER NO. IS VALID
CHKCUS:	PUSHJ P,CINIT
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TASYSCODE
	ARG EQUALS
	ARG CINFO+NCSYSC
	ARG X22AND
	ARG TCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SETZM CINFO+NVPF
	SKIPN NUMRET
	POPJ P,0
	AOS (P)
	JSA 16,DBGET
	ARG CINFO
	ARG RET0
	MOVE F,SAVF
	POPJ P,0


;MAKE Y/N ANSWER = 1,0
GETBIT:	TRNN F,TTYOUT
	JRST GETONE
	JFCL
	PUSHJ P,YORN
	SKIPN N,ONE
	SETZ N,
	POPJ P,0
;CHECK FOR LOGIN PPN IN UPDLUD.ACS. RET = -1 IF THERE, 0 IF NOT
; 4/18/85 updated by Julian - skip checking if login user is cud10
UPDACS: SETZ    C,      ;SET FOR FALSE RETURN
        HRROI   A,-23   ;GET AUN
        GETTAB  A,
         JRST   GOBAK
        CAMN    A,CUD10    ; skip if not login through cud10
         JRST   FNDACS
        OPEN    14,[17
                    SIXBIT /DSK/
                    0]
         HALT
        LOOKUP  14,[SIXBIT /UPDLUD/
                    SIXBIT /ACS/
                    0
                    1,,173236]
         JRST   [OUTSTR [ASCIZ/NO ACCESS TO UPDLUD. GOOD-BYE./]
                 HALT]

        IN      14,ACSADR  ;READ A BLOCK
         SKIPA
         JRST   [OUTSTR [ASCIZ/AM UNABLE TO CHECK ACCESS. CALL PROGRMR./]
                 HALT]
        RELEAS  14,

        HRLZI   B,-BUFLN        ;SET UP AOBJN COUNTER
LP:     CAMN    A,ACSBUF(B)
         JRST   FNDACS  ;FOUND A MATCH
        SKIPGE  ACSBUF(B) ;END OF THE LINE?
         JRST   GOBAK
        AOBJN   B,LP    ;DO IT AGAIN IF THERE IS ANY MORE
        JRST    GOBAK

FNDACS: SETO    C,      ; TRUE RETURN
GOBAK:  POPJ    P,      ;GO BACK


;A ROUTINE TO SAVE A RECORD IN SAVLUD
SAVIT:	HRRZI	A,LUDBLK
	ADD	A,INDEX
	HRLS	A,A
	HRRI	A,SAVLUD
	MOVEI	B,SAVLUD
	ADD	B,NENTRY
	SUBI B,1
	BLT	A,@B
	POPJ	P,0

;A ROUTINE TO RETURN TO LUDBLK FROM SAVLUD
RETIT:	HRLI	A,SAVLUD
	HRRI	A,LUDBLK
	ADD	A,INDEX
	HRRZ	B,A
	ADD	B,NENTRY
	SUBI B,1
	BLT	A,@B
	POPJ	P,0

SAVB:	MOVE A,VINFO+NHOST
	MOVEM A,SAVORG+SITE
SAVB1:	MOVE A,UINFO+NUUN
	MOVEM A,SAVORG+PPN
	POPJ P,0
SUBTTL MAKE TABLE OF HOSTS AND THEIR TYPES


	0	;ALLOW HOST =-1
HSTLST:	BLOCK MXTHST+MXTHSX

;INDEX TABLE BY HOST, CONTENTS OF TABLE IS SYSTEM TYPE
BLDHST:	JSA 16,DBOPEN
	ARG 5,HOSTDB
	JSA 16,DBFIND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP	;NULL STOP DATES ONLY
	JSA 16,DBNREC
	ARG NUMRET
        JSA 16,DBSORT
        ARG TRHOST
	MOVE F,SAVF
	SKIPN NUMRET
	PUSHJ P,BADX22
	MOVEM F,SAVF
        SETZ C,
NXTSYS:	JSA 16,DBGET
	ARG HINFO
	ARG GNXSYS+2
	MOVE A,HINFO+NHHOST	;GET HOST NUMBER
	MOVE B,HINFO+NASTYP	;GET TYPE
	MOVE F,SAVF
	CAILE A,MXTHST
	PUSHJ P,BIGHST ; BIGHST WILL ALWAYS SKIP RETURN
	MOVEM B,HSTLST(A)	;AND SAVE IT
GNXSYS:	SOSE NUMRET
	JRST NXTSYS
	JSA 16,DBCLOS
	POPJ P,0

BIGHST:
        CAILE   C,MXTHST-1
         PUSHJ  P,BADVAL
        MOVEM   A,HSTLST+MXTHSX(C)
        MOVEM   B,HSTLST+MXTHSX+1(C)
        ADDI    C,2
        AOS     (P)
        POPJ    P,


BLDAST:	JSA 16,DBOPEN
	ARG 5,ASTDB
	JSA 16,DBFIND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN NUMRET
	PUSHJ P,BADX22
	SETZ C,
NXTAST:	JSA 16,DBGET
	ARG ASTINF
	ARG .+1
	MOVE A,ASTINF
	MOVEM A,LUDUP(C)
	AOJ C,
	SOSE NUMRET
	JRST NXTAST
	SETO A,
	MOVEM A,LUDUP(C)
	JSA 16,DBCLOS
	POPJ P,0

WATTYP: 0       ; THIS ROUTINE RETURNS AST FOR A HOST FROM HSTLST TABLE.
; CALL AS FOLLOWS;
;       PUSH    P,ADDR  ; ADDR CONTAINS THE ADDRESS OF WHERE AST WILL BE PUT
;                       ;  AND MUST NOT CONTAIN B OR C.
;       PUSH    P,HOSTNUM ; THE HOST NUMBER TO CHECK FOR.
;       JSR     WATTYP
;       ONLY RETURN

        MOVEM   B,SAVEB#
        POP     P,B     ; NOW B CONTAINS HOST NUMBER.
        CAIG    B,MXTHST ; GREATER THEN MXTHST?
         JRST   WTTYP1 ;NO, QUICK LOOKUP.
        MOVEM   B,HOSTB#
        MOVEM   C,SAVC#
        SETZ    B,
WATTLP: MOVE    C,HSTLST+MXTHSX(B)
        JUMPE   C,WTTYP3
        CAMN    C,HOSTB
         JRST   WATTLD
        ADDI    B,2
        JRST    WATTLP
WATTLD: MOVE    B,HSTLST+MXTHSX+1(B)
        MOVE    C,SAVC
        JRST    WTTYP2
WTTYP3: SETZ    B,
        MOVE    C,SAVC
        JRST    WTTYP2
WTTYP1: MOVE    B,HSTLST(B)
WTTYP2: MOVEM   B,@0(P)
        POP     P,B
        MOVE    B,SAVEB
        JRST    @WATTYP

FNDSIT: ; FIND A PARTCULAR HOST IN TABLE SITES, SKIP RETURN IF FOUND.
        MOVEM   C,SAVC
        SETZ    C,
FNDST0: CAMN    N,SITES(C)
         JRST   FNDST1
        AOJ     C,
        CAIN    C,MXTHST
         POPJ   P,
        SKIPN   SITES(C)
         POPJ   P,
        JRST    FNDST0
FNDST1: AOS     (P)
        POPJ    P,


SUBTTL DATE ROUTINES

;GET TODAY'S DATE
MAKDAT:	DATE A,
	IDIVI A,^D31
	AOJ B,
	MOVEM B,TDAY#
	MOVEM B,DAY
	IDIVI A,^D12
	AOJ B,
	MOVEM B,TMON#
	MOVEM B,MO
	ADDI A,^D1964
	MOVEM A,TYEAR#
	MOVEM A,YEAR
	POPJ P,0

CDTOD:	MOVEM F,SAVF
	JSA 16,DBNDAT
	ARG N
	ARG MO#
	ARG DAY#
	ARG YEAR#
	MOVE F,SAVF
	POPJ P,0

DTOCD:	MOVEM F,SAVF
	JSA 16,DBDATN
	ARG IDATE#
	ARG MO
	ARG DAY
	ARG YEAR
	MOVE N,IDATE
	MOVE F,SAVF
	POPJ P,0

GETTOD:	PUSHJ P,MAKDAT
	PUSHJ P,DTOCD
	MOVEM N,CINFO+NCDSTART
	MOVEM N,UINFO+NUSTART
	MOVEM N,VINFO+NVSTART
	MOVEM N,USINFO+NSYSTART
	MOVEM N,TODAY#
	POPJ P,0

GETTOM:	PUSHJ P,MAKDAT
	PUSHJ P,DTOCD
	AOJ N,
	AOS IDATE
	POPJ P,0
SUBTTL TABLES

DEFINE MAKSIX(A)
<IRP A
<	SIXBIT/A/>>

ZONES: MAKSIX< , , , , , , , ,PST,MST,CST,EST, , , , ,LONDON>
	MAKSIX<PARIS, , , , , , , ,TOKYO,BRISBA>


DEFINE MAKASC(A)
<IRP A
<	[ASCIZ /A/]>>

MODES:	MAKASC<PDP,XEXEC,XEXECJ,SUDS>
SUBTTL I/O ROUTINES

OUCH:	TRNN F,TTYOUT
	JRST	[TTCALL 15,CH
		POPJ P,0]
	TRNE F,LIST
	JRST [ADDI CH,40
		TTCALL 1,CH
		POPJ P,0]
	CAIN CH,376
	MOVEI CH,13
	SOJ	CH,
	OUTSTR @MSG1(CH)
	POPJ P,0

INCH:	HRROI CH,0
	AUXCAL CH,SAVCH#
	JRST .-1
	MOVE CH,SAVCH
	POPJ P,0

TINCH:	TTCALL 4,CH
	CAIN CH,"?"
	JRST [TTCALL 11,0
		OUTSTR HELPMS
		JRST LUDUP1]
	JUMPE CH,TINCH
	POPJ P,0

DECDON:	MOVEI A,^D100000
	JRST .+2
	IDIVI A,^D10
	SOJGE N1,.-1
	SETZ N,
	MOVEI N1,6
NXTDIG:	MOVE CH,ACBLK(N1)
	IMUL CH,A
	ADD N,CH
	SOJLE N1,GETRES
	IDIVI A,^D10
	CAIE A,1
	JRST NXTDIG
	ADD N,ACBLK(N1)
	JRST GETRES
BADCHR:	OUTSTR [ASCIZ /ILLEGAL CHARACTER TYPED.
/]
	TTCALL 11,0
	JRST LUDUP1

GETWD:	TRNN F,TTYOUT
	JRST GET940
GETWD1:	PUSHJ P,TINCH
	CAIN CH,15
	JRST FILLIN
	CAIN CH,33
	JRST ALTMD
	TLNN F,ASCIO
	SUBI CH,40
	IDPB CH,BP
	SOJG N,GETWD1
	JRST GETRES
FILLIN:	SETZ CH,
	TLNE F,ASCIO
	MOVEI CH,40
	IDPB CH,BP
	SOJG N,.-1
        TRNE F,TTYOUT
	JRST GETRES
ALTMD:	TLZ F,OCTINF+ASCIO
	TLO F,ENDTYD
	POPJ P,0

GET940:	PUSHJ P,INCH
	ANDI CH,377
	TLNE F,DIGINF
	JRST .+3
	CAIN CH,377
	JRST FILLIN
	TLNE F,ASCIO
	ADDI CH,40
	IDPB CH,BP
	SOJG N,GET940
	TLZ F,ASCIO+DIGINF
	POPJ P,0
GETONE:	SKIPA Z,ONE
GETTWO:	MOVE Z,TWO
	SKIPA
GETNUM:	MOVE Z,THREE
	TRNN F,TTYOUT
	JRST NUM940
	SETZB C,N
	MOVEI N1,^D12
	TLNN F,OCTINF
	MOVEI N1,6
	MOVE BP,[POINT 3,N]
GETNXT:	PUSHJ P,TINCH
	CAIN CH,15
	JRST NUMBAD
	SUBI CH,60
	SKIPGE ,CH
	JRST BADCHR
	TLNN F,OCTINF
	JRST [CAILE CH,11
		JRST BADCHR
		MOVEM CH,ACBLK(N1)
		SOJG N1,GETNXT
		JRST DECDON]
	CAILE CH,7
	JRST BADCHR
	IDPB CH,BP
	SOJG N1,GETNXT
	JRST GETRES

NUMBAD:	TLNN F,OCTINF
	JRST DECDON
	LSH N,-3
	SOJG N1,.-1
	JRST GETRES

NUM940:	TLO F,DIGINF
	SETZ N1,
	MOVEI N,3
	MOVE BP,[POINT 8,N1,11]
	JUMPE Z,.+6
	MOVE A,N
	SUB N,Z
	JUMPE N,.+3
	IBP ,BP
	SOJG N,.-1
	MOVE N,Z
	PUSHJ P,GET940
	MOVE N,N1
	POPJ P,0

GETRES:	TLZ F,OCTINF+ASCIO
	PUSHJ P,TINCH
	CAIN CH,12
	POPJ P,0
	JRST GETRES+1
;NUMOUT OUTPUTS A NUMBER IN "N" EITHER:
;TO TTY (CAN BE DECIMAL OR OCTAL) <777777
;	OR
;IN IMAGE MODE IN THE FORM OF Z 8-BIT BYTES

ONEOUT:	SKIPA Z,ONE
TWOOUT:	MOVE Z,TWO
	SKIPA
NUMOUT:	MOVE Z,THREE
	TRNE F,TTYOUT
	JRST NUM01
	MOVE BP,[POINT 8,N,11]
	MOVEI N1,3
	SUB N1,Z
	JUMPE N1,NUM02
	IBP BP
	SOJG N1,.-1
NUM02:	ILDB CH,BP
	PUSHJ P,OUCH
	SOJG Z,NUM02
	POPJ P,0
NUM01:	TLZE F,OCTINF
	JRST OCTOUT
	SETZ A,
	MOVEI D,12
	CAIG N,0
	JRST ZEROUT
CHKD:	CAMLE N,TABD(A)
	JRST RDXPRT
	ADDI A,1
	JRST CHKD
RDXPRT:	MOVMS N
	IDIVI N,(D)
	HRLM N1,0(P)
	SKIPE N
	PUSHJ P,RDXPRT
	HLRZ CH,0(P)
	ADDI CH,"0"
	TTCALL 1,CH
	POPJ P,0
ZEROUT:	MOVEI CH,"0"
	TTCALL 1,CH
	POPJ P,0
OCTOUT:	MOVEI N1,7
	MOVE BP,[POINT 3,N,17]
	ILDB CH,BP
	SOJLE N1,ZEROUT
	JUMPE CH,.-2
	ADDI CH,20
	PUSHJ P,OUCH
	ILDB CH,BP
	SOJG N1,.-3
	POPJ P,0

ASCOUT:	TLO F,ASCIO
WDSOUT:	TRZE F,SHORTS
	PUSHJ P,SHIT	;STANDS FOR SHORTEN IT!
	JUMPE N,WDS1
	ILDB CH,BP
	TLNE F,ASCIO
	SUBI CH,40
	PUSHJ P,OUCH
	SOJG N,WDSOUT+3
WDS1:	TRZE F,SHORTS
	PUSHJ P,SENDEND
	TLZ F,ASCIO
CRLF:	TLZE F,NOCR
	POPJ P,0
	TRNE F,TTYOUT
	OUTSTR [ASCIZ /
/]
	POPJ P,0

SPAOUT:	TRNE F,TTYOUT
	OUTSTR [ASCIZ / /]
	POPJ P,0

;SHORTEN STRING
SHIT:	MOVE Z,N
	SETZM SAVBP
	PUSH P,BP	;SAVE ORIGINAL BP,N
	PUSH P,N
SHIT1:	ILDB CH,BP	;GET NEXT CHARACTER
	TLNE F,ASCIO
	SUBI CH,40
	JUMPE CH,.+3	;A SPACE?
	MOVEM BP,SAVBP#	;NO, SAVE BP,N
	MOVE Z,N
	SOJG N,SHIT1	;YES, KEEP GOING
	POP P,N1
	POP P,BP
	CAMN BP,SAVBP
	POPJ P,0
	TRNN F,TTYOUT
	TRO F,SHORTS
	CAMN Z,N1	;EMPTY STRING
	POPJ P,0
	SUB N1,Z
	AOJ N1,
	MOVE N,N1
	POPJ P,0
SUBTTL HASH ROUTINE

HASHER:	MOVEM F,SAVF#
	MOVEI	B,0
	MOVE	C,[555555555555]
	MOVE	D,[361275431652]
	MOVE	E,[612754316523]
	JSR	RND
	JSR	RND
	JSR	RND
	JSR	RND
	XOR	E,D
	MOVE	N,E
	TLZ	N,400000
	IDIVI	N,^D887
	MOVE	N,E
	XOR	N,C
	ADDI N1,1
	MOVE F,SAVF
	POPJ	P,0

RND:	0
	ADD	D,N
	ROTC	N,-22
	MOVEI	A,5
RND1:	MOVE	N2,C+1(B)
	MUL	N2,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM	N3,D+1(B)
	AOJE	B,RND2
	MOVNI	B,1
	TRNE	D,1
	SKIPL	E
	MOVEI	B,0
	EXCH	C,E
RND2:	SOJG	A,RND1
	JRST	@RND
SUBTTL X22 ACCESS ROUTINES

DEFINE INITIT (DATABASE)
<	MOVEM F,SAVF
	JSA 16,DBOPEN
	ARG 5,DATABASE
	MOVE F,SAVF
	POPJ P,0
>
USINIT:	INITIT(USYSDB)

UINIT:	INITIT(USERDB)

CINIT:	INITIT(CUSTDB)

AINIT:	INITIT(ADDRDB)

VINIT:	INITIT(VALDB)
MHINIT:	INITIT(MAILDB)

TINIT:	INITIT(TRIPDB)

YINIT:	INITIT(TUSRDB)

TYUINI:	INITIT(TYMUSR)

TYCINI:	INITIT(TYMCUS)
DEFINE FINDIT (V1,V2,ARRAY)
<	MOVEM F,SAVF
	JSA 16,DBFIND
	ARG 5,V1
	ARG EQUALS
	ARG V2
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN NUMRET
	POPJ P,0
	JSA 16,DBGET
	ARG ARRAY
	ARG RET0
	MOVE F,SAVF
	JRST RET1
>

;FIND VALID USER RECORD
UFIND:	PUSHJ P,UINIT
	MOVEM F,SAVF
	JSA 16,DBFIND
	ARG TUUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TUSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	POPJ P,0
	CAIE N,1	;ONE RECORD FOUND?
	PUSHJ P,DUPERR
	JSA 16,DBGET
	ARG UINFO
	ARG RET0
	MOVE F,SAVF
	JRST RET1
;FIND VALID USYSDB RECORD
USFIND:	PUSHJ P,USINIT
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG USINFO+NUSUUN
	ARG X22AND
	ARG TASYSCODE
	ARG EQUALS
	ARG USINFO+NUSYSC
	ARG X22AND
	ARG TUSSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	POPJ P,0
	CAIE N,1
	PUSHJ P,DUPERR
	JSA 16,DBGET
	ARG USINFO
	ARG RET0
	MOVE F,SAVF
	JRST RET1
;FIND VALID CUSTOMER RECORD
CFIND:	PUSHJ P,CINIT
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TASYSCODE
	ARG EQUALS
	ARG CINFO+NCSYSC
	ARG X22AND
	ARG TCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	POPJ P,0
	CAIE N,1
	PUSHJ P,DUPERR	;MORE THAN 1 RECORD FOUND
	JSA 16,DBGET
	ARG CINFO
	ARG RET0
	MOVE F,SAVF
RET1:	AOS (P)
RET0:	POPJ P,0

CFINDA:	PUSHJ P,CINIT
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPG N,NUMRET
	POPJ P,
	AOS (P)
        CAIG N,1
        POPJ P,
        MOVEM F,SAVF
        JSA  16,DBSORT
        ARG  TASYSC
        MOVE F,SAVF
        POPJ P,
	POPJ P,0
;FIND ADDRESS FOR A SYSTEM TYPE
AFIND:	PUSHJ P,AINIT
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG AINFO+NACUSNUM
	ARG X22AND
	ARG TASYSCODE
	ARG EQUALS
	ARG AINFO+NASYSC
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	POPJ P,0
	CAIE N,1	;ONE RECORD FOUND?
	PUSHJ P,DUPERR	;NO
	JSA 16,DBGET
	ARG AINFO
	ARG RET0
	MOVE F,SAVF
	JRST RET1
; MUST HAVE DBUUN SET UP
VFINDA:	PUSHJ P,VINIT
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG DBUUN
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPE N,NUMRET
	AOS (P)
	POPJ P,0

VFIND:	PUSHJ P,VFINDA
	POPJ P,0
	MOVEM N,NSITES
FILSIT:	SOJ N,
        SETZB   C,LASHOS#
	PUSHJ P,CLRSIT
        JSA 16,DBSORT
        ARG TVHOST
NXTHST:	JSA 16,DBGET
	ARG VINFO
	ARG RET0
	MOVE A,VINFO+NHOST
        CAMN A,LASHOS
         JRST   NXTHS1
        MOVEM A,LASHOS
	MOVEM A,SITES(C)
        AOJ     C,
NXTHS1:
        CAILE   C,MXTHST
         PUSHJ  P,BADVAL
	SOJGE N,NXTHST
	MOVE F,SAVF
	JRST RET1
MHFIND:	PUSHJ P,MHINIT
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG UINFO+NMHUUN
	ARG X22AND
	ARG TVHOST
	ARG EQUALS
	ARG UINFO+NMHOST
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	JRST .+3
	AOS (P)
	POPJ P,0
	JSA 16,DBFIND
	ARG TUSUUN
	ARG EQUALS
	ARG UINFO+NMHUUN
	ARG X22AND
	ARG TVHOST
	ARG EQUALS
	ARG MONE
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPE N,NUMRET
	AOS (P)
	POPJ P,0
TRFIND:	PUSHJ P,TINIT
	JSA 16,DBFIND
	ARG TRHOST
	ARG EQUALS
	ARG UINFO+NTRHST
	ARG X22AND
	ARG TRSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPE N,NUMRET
	AOS (P)
	POPJ P,0

YFIND:	PUSHJ P,YINIT
	JSA 16,DBFIND
	ARG TUUUN
	ARG EQUALS
	ARG USINFO+NUUN
	ARG X22AND
	ARG TUCSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN N,NUMRET
	POPJ P,0
	CAIE N,1
	PUSHJ P,DUPERR
	JSA 16,DBGET
	ARG USINFO
	ARG RET0
	MOVE F,SAVF
	JRST RET1
 
 
TUFIND:	MOVEM A,TUCUST#
	PUSHJ P,TYUINI
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG TUCUST
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN NUMRET
	JRST RET0
	JRST RET1


TCFIND:	PUSHJ P,TYCINI
	JSA 16,DBFIND
	ARG TCCNUM
	ARG EQUALS
	ARG CINFO+NCUSNUM
	ARG X22AND
	ARG TVSTP
	ARG EQUALS
	ARG NSTOP
	JSA 16,DBNREC
	ARG NUMRET
	MOVE F,SAVF
	SKIPN NUMRET
	JRST RET0
	JRST RET1
SUBTTL HELP MESSAGES

HELPMS:	ASCIZ /YOU HAVE THE FOLLOWING OPTIONS:
1	DELETE A USER FROM LUD,DUL
2	ADD A USER TO LUD,DUL
3	CHANGE A USER NAME IN LUD,DUL
4	CHANGE PRIVILEGE BITS IN LUD,DUL
5	CHANGE QUOTA
6	LIST USER MAILING ADDRESS (370 SLAVE ONLY)
7	LIST ALL USERS IN THE LUD
10	CHANGE DISTRICT IN LUD
11	CHANGE TIME ZONE IN LUD
12	CHANGE A GAN IN LUD,DUL
20	LIST LUD ENTRY
21	LIST ALL USERS FOR A GAN (LUD ENTRY)
22	CHECK NAME IN LUD,DUL
23	MOVE USERS - LIST LUD INFORMATION
24	MOVE USERS - INPUT LUD INFORMATION
25	DELETE ALL USERS FOR AN ACCOUNT
26	LIST ALL USERS FOR A GAN
27	LIST ALL VALID HOSTS AND THEIR AST
30	NEW CUSTOMER
31	CHANGE CUSTOMER DISTRICT
32      GET CUSTOMER NUMBER
33	CHANGE CUSTOMER FLAT FOCUS FEE
34	CHANGE CUSTOMER DETAIL CODE
35	CHANGE CUSTOMER INVOICE CODE
37	CHANGE CUSTOMER SALESMAN
40	CHANGE CUSTOMER PO
41	CHANGE CUSTOMER PO MAXIMUM
42	CHANGE CUSTOMER PO START DATE
43	CHANGE CUSTOMER PO STOP DATE
44	CHANGE CUSTOMER NAME
45	CHANGE CUSTOMER ADDRESS
50	LIST CUSTOMER
51	LIST CUSTOMER NAME
52	LIST ACCOUNTING SYSTEM TYPES FOR A CUSTOMER
53	LIST ACCOUNTING SYSTEM TYPES FOR A USER
54	LIST ALL USERS AND THEIR HOSTS FOR A CUSTOMER
55	LIST ALL GANS FOR A CUSTOMER
56	LIST ALL CUSTOMERS FOR A DISTRICT
57	LIST ALL USERS FOR A DISTRICT
60	ADD USER TO ACCOUNTING
61	ADD HOST FOR A USER
62	CHANGE USER NAME IN ACCOUNTING
63	CHANGE CUSTOMER FOR A USER
64	CHANGE SALESMAN FOR A USER
65	LIST ALL USERS (MUD CHECK)
66	LIST ALL CUSTOMERS FOR A COSTCODE
67	LIST ALL USERS FOR A COSTCODE
70	CHANGE USER CURRENCY CODE
71	CHANGE USER GAN IN ACCTG.
72	CHANGE TIME ZONE IN ACCOUNTING
74	REMOVE A HOST FOR A USER
75	CHANGE USER'S DISTRICT IN ACCOUNTING
76	CANCEL USER FROM ACCOUNTING
100	CHANGE LANGUAGE CODE
101	ADD ACCTG. SYS. TYPE FOR A USER
103	LIST USER CUSTOMER NUMBER
104	OUTPUT NUMBER OF DIRECTORIES AFFECTED BY A CANCEL ACCOUNT
105	LIST HOSTS FOR A USER
106	LIST USER ACCOUNTING
107	LIST HOSTS FOR A CUSTOMER
110	CHECK UUN IN ACCOUNTING FOR A SYSTEM TYPE
111	CHECK UUN IN ACCOUNTING FOR A HOST
112	LIST ALL USERS FOR A CUSTOMER
113	LIST ALL USERS FOR A GAN
114	CHECK GAN FOR A HOST
115	CHECK CUSTOMER FOR A HOST
116	LIST ALL HOSTS FOR A GAN
117	CHANGE DISTRICT FOR ALL USERS FOR A CUSTOMER
120	WRITE ACCOUNTING RECORD
121	REVERSE LAST LUD ENTRY
122	REVERSE LAST ACCOUNTING ENTRY
123	LIST ALL USERS FOR A HOST
124	LIST CUSTOMER NUMBER FOR A USER
125	LIST DISTRICT FOR A CUSTOMER
126	LIST USERS AND HOSTS FOR A DISTRICT
127	LIST ALL USERS FOR AN ACCTG. SYS. TYPE
130	LIST ALL CUSTOMERS FOR A HOST 
131	LIST CUSTOMER DISTRICT
132	LIST CUSTOMER DETAIL
133	LIST CUSTOMER INVOICE CODE
134	LIST CUSTOMER MINIMUM CODE
135	LIST CUSTOMER SALESMAN
136	LIST CUSTOMER PO NUMBER
137	LIST CUSTOMER PO MAX
140	LIST CUSTOMER PO START DATE
141	LIST CUSTOMER PO STOP DATE
142	LIST CUSTOMER STREET ADDRESS
143	LIST CUSTOMER CITY
144	LIST CUSTOMER STATE
145	LIST CUSTOMER COUNTRY
146	LIST CUSTOMER ATTN LINE
150	LIST CUSTOMER DEFAULT PRICING CODE
151	LIST CUSTOMER ZIP CODE
152	SET TYMUSE
153	UNSET TYMUSE
154	LIST TYMUSE INFO FOR A CUSTOMER
155	CHANGE NO. OF DAYS FOR A TYMUSE CUSTOMER
156	CHANGE RECIEIVING CUST INFO FOR A TYMUSE CUSTOMER
157	LIST ALL TYMUSE CUSTOMERS
160	LIST USER'S CUSTOMER
161	LIST USER'S SALESMAN
163	CHECK FOR VALID TYMUSE CUSTOMER
164	LIST ALL GANS FOR A COSTCODE
165	LIST USER'S CURRENCY CODE
167	LIST USER'S TIME ZONE
170	LIST ALL COSTCODES FOR A DISTRICT
171	LIST USER'S DISTRICT
173	LIST USER'S LANGUAGE
177	MOVE USERS - ADD NEW HOST FOR ALL USERS IN A GAN
200	MOVE USERS - ADD NEW HOST FOR ALL USERS FOR A CUSTOMER
201	MOVE USERS - ADD NEW HOST FOR ALL USERS FOR A CUSTOMER FOR A GAN
202	DELETE USER AND DO NOT CHARGE
203	MOVE USERS - RETURN ALL USERS FOR A CUSTOMER (NON PDP-10)
204	MOVE USERS - RETURN ALL USERS FOR A GAN (NON PDP-10)
205	ADD A USER TO TUSRDB
206	CHANGE USER NAME IN TUSRDB
207	CANCEL ACCOUNT IN TUSRDB
210	RETURN COUNT OF VALID USERS IN ACCOUNT IN TUSRDB
211	CANCEL USER IN TUSRDB
212	LIST RECORD IN TUSRDB
213	LIST ALL USERS FOR A MAIL NAME
214	CHECK MAIL NAME FOR A CUST
215	CHANGE MAIL NAME
216	CHECK MAIL UUN FOR A USER
217	LIST ALL USERS IN TUSRDB
220	ADD UUN-HOST TO TYMHST
221	REMOVE UUN-HOST FROM TYMHST
222	LIST ALL MAIL UUNS AND THEIR HOSTS
223	LIST ALL HOSTS FOR A UUN
224	ADD HOST TO TYMCNV
225	DELETE HOST FROM TYMCNV
226	LIST HOSTS IN TYMCNV
227	LIST ALL USERS IN A GAN IN TUSRDB
230	CHECK MAIL NAME FOR A HOST
231	CHECK HOST IN TYMCNV
232	CHECK HOST FOR TYMCOM-III'S
233	CHANGE DISTRICT FOR ALL USERS FOR A CUSTOMER IN TUSRDB
234     CHANGE CUSTOMER NUMBER FOR A USER IN TUSRDB
240	LIST SYSTEM TYPE FOR A HOST
/
SUBTTL MESSAGES

AUNAME: ASCIZ /UNAME/
MCSTNO:	ASCIZ /CUSTOMER NUMBER: /
MDIST:	ASCIZ /DISTRICT: /
MDET:	ASCIZ /DETAIL CODE: /
MMIN:	ASCIZ /MINIMUM CODE: /
MPO:	ASCIZ /PO: /
MPOMAX:	ASCIZ /PO MAX: /
MPOSTA:	ASCIZ /PO START DATE: /
MPOSTO:	ASCIZ /PO STOP DATE: /
MANNDT: ASCIZ /ANNIVERSARY DATE: /
   
MINV:	ASCIZ /INVOICE CODE: /
MSLS:	ASCIZ /SALESMAN: /
MCOST:  ASCIZ /COSTCODE: /
MFOCF:  ASCIZ /FLAT FOCUS FEE: /
MGAN:	ASCIZ /GAN: /
MUUN:	ASCIZ /UUN: /
MUNAME:	ASCIZ /USER NAME: /
MANAME: ASCIZ /MAIL NAME: /
MATYM:	ASCIZ /TYMSHARE? /
MTYM:	ASCIZ /TYMSHARE: /
MZONE:	ASCIZ /TIME ZONE: /
MADST:	ASCIZ /DAYLIGHT SAVINGS? /
MDST:	ASCIZ /DAYLIGHT SAVINGS: /
MPCODE:	ASCIZ /PRICING CODE: /
MQIN:	ASCIZ /QUOTA IN: /
MQOUT:	ASCIZ /QUOTA OUT: /
M2SPACE:	ASCIZ /  /
MAAS:	ASCIZ /ACCOUNT SUPERVISOR? /
MAS:	ASCIZ /ACCOUNT SUPERVISOR: /
MARUB:  ASCIZ /SET RESTRICTED USER BIT? /
MRUB:   ASCIZ /RUB: /
MARCM:  ASCIZ /RCM? /
MRCM:   ASCIZ /RCM: /
MAGFD:  ASCIZ /SET GFD? /
MGFD:   ASCIZ /GFD: /
MMODE:	ASCIZ /MODE: /
MCURR:	ASCIZ /CURRENCY CODE: /
MLANG:	ASCIZ /LANGUAGE CODE: /
MDPR:	ASCIZ /DEFAULT PRICING CODE: /
MMISC:	ASCIZ /MISCELLANEOUS BITS: /
MBUD:	ASCIZ /BUDGET: /
MINIT: ASCIZ /INIT FILE: /
MPRIV: ASCIZ /PRIVILEGES: /
MPRIV1:	ASCIZ /LEFT HALF OF PRIVILEGE WORD: /
MPRIV2:	ASCIZ /RIGHT HALF OF PRIVILEGE WORD: /
MHOST:	ASCIZ /HOST: /
MNDAYS:	ASCIZ /NO. OF DAYS DATA IS TO BE HELD: /
MRCUST:	ASCIZ /RECIEVING CUSTOMER: /
MSTART:	ASCIZ /START DATE: /
SUBTTL ERROR MESSAGES

;&.PAGE
;&.CENTER
;&RETURN CODES
;&.SKIP 1
;&.SKIP 1
;&ERROR 1: ENTRY COMPLETED OR REQUESTED ENTRY FOUND
MSG1:	[ASCIZ /ENTRY COMPLETED.
/]
;&.SKIP 1
;&ERROR 2: REQUESTED ENTRY IS ALLREADY ENTERED
	[ASCIZ /USER NAME OR CUSTOMER NUMBER ALLREADY THERE.
/]
;&.SKIP 1
;&ERROR 3: REQUESTED ENTRY WAS NOT FOUND
	[ASCIZ /USER NAME, UUN OR CUSTOMER NUMBER NOT FOUND.
/]
;&.SKIP 1
;&ERROR 4: ILLEGAL DATE ENTERED
	[ASCIZ /ILLEGAL DATE FORMAT.
/]
;&.SKIP 1
;&ERROR 5: ERROR IN X22 ACCESS
	[ASCIZ /X22 ERROR
/]
;&.SKIP 1
;&ERROR 6: DISK ERROR
	[ASCIZ /SOME KIND OF DISK ERROR.
/]
;&.SKIP 1
;&ERROR 7: ILLEGAL HOST ENTERED
	[ASCIZ /BAD HOST.
/]
;&.SKIP 1
;&ERROR 10: ERROR IN DUL
	[ASCIZ /DUL ERROR.
/]
;&.SKIP 1
;&ERROR 11: CUSTOMER NUMBER NOT FOUND
	[ASCIZ /CUSTOMER NO. ERROR.
/]
;&.SKIP 1
;&ERROR 12: ERROR IN BILLING FILE
	[ASCIZ /BILLING FILE ERROR.
/]
;&.SKIP 1
;&ERROR 13: TABLE OVERFLOW
	[ASCIZ /TABLE OVERFLOW.
/]
;&.SKIP 1
;&ERROR 14: FILE BUSY
	[ASCIZ /SOME FILE IS BUSY.  TRY LATER.
/]
;&.SKIP 1
;&ERROR 15: ILLEGAL VALUE ENTERED
	[ASCIZ /ILLEGAL VALUE INPUT.
/]
;&.SKIP 1
;&ERROR 16: ERROR IN DELETING FILES OR UFD
	[ASCIZ /ERROR IN DELETING FILES OR UFD.
/]
;&.SKIP 1
;&ERROR 17: NOT USED
	[ASCIZ /USER CANNOT BE ENTERED UNTIL NEXT BILLING PERIOD.
/]
;&.SKIP 1
;&ERROR 20: ILLEGAL CODE ENTERED
	[ASCIZ /BAD COMMAND - SLAVE WILL RETURN BAD COMMAND.

/]
;&.SKIP 1
;&ERROR 21: NOT USED
	[ASCIZ /MISC. ERROR.
/]
;&.SKIP 1
;&ERROR 22: LOOKUP OR ENTER ERROR
	[ASCIZ /LOOKUP OR ENTER ERROR.
/]
;&.SKIP 1
;&ERROR 23: INPUT OR OUTPUT ERROR
	[ASCIZ /INPUT OR OUTPUT ERROR.
/]
;&.SKIP 1
;&ERROR 24: INIT ERROR
	[ASCIZ /INIT ERROR.
/]
;&.SKIP 1
;&ERROR 25: ILLEGAL USER FOR THIS COMMAND
	[ASCIZ /USER RESTRICTED FROM THIS COMMAND.
/]
;&.SKIP 1
;&ERROR 26: ILLEGAL GAN OR UUN (ZERO)
	[ASCIZ /ZERO GAN OR UUN.
/]
;&.SKIP 1
;&ERROR 27: DUPLICATE ENTRIES FOUND
	[ASCIZ /DUPLICATE ACCOUNTING ENTRY.
/]
;&.SKIP 1
;&ERROR 30: USER SHOULD BE CANCELLED
	[ASCIZ /USER SHOULD BE CANCELLED.
/]
;&.SKIP 1
;&ERROR 31: NO NAME AND ADDRESS FOR THIS CUSTOMER
	[ASCIZ /CANNOT FIND NAME AND ADDRESS FOR THIS CUSTOMER.
/]
	[ASCIZ /MISC. ERROR.
/]
;&.SKIP 1
;&ERROR 33: THIS COMMAND MAY ONLY BE EXECUTED ON THE ACCOUNTING SYSTEM
	[ASCIZ /MUST BE ON ACCTG. SYSTEM TO EXECUTE THIS COMMAND.
/]
;&.SKIP 1
;&ERROR 34: USER IS ON 940 AND MAY NOT HAVE ITS CUST. NO CHANGED
	[ASCIZ /USER IS VALID ON 940 AND MAY NOT HAVE IT CUST. NO. CHANGED.
/]
;&.SKIP 1
;&ERROR 35: UUN-HOST IS ALLREADY THERE
	[ASCIZ /UUN-HOST IS ALLREADY THERE.
/]
;&.SKIP 1
;&ERROR 36: UUN-HOST NOT FOUND
	[ASCIZ /UUN-HOST NOT FOUND.
/]
	[ASCIZ /MISC. ERROR.
/]
;&.SKIP 1
;&ERROR 40: HOST IN TYMCNV NOT FOUND
	[ASCIZ /HOST IN TYMCNV NOT FOUND.
/]
;&.SKIP 1
;&ERROR 41: HOST ALLREADY IN TYMCNV NOT FOUND
	[ASCIZ /HOST ALLREADY IN TYMCNV.
/]
;&.SKIP 1
;&ERROR 42: REQUEST CANNOT BE CANCELLED NOW.
;&	(USED FOR SYS 1 VALDATA UPDATE)
	[ASCIZ /MISC ERROR.
/]
;&.SKIP 1
;&ERROR 43: ILLEGAL REQUEST TYPE (USED FOR SYS 1 VALDATA UPDATE)
	[ASCIZ /MISC ERROR.
/]
;&.SKIP 1
;&ERROR 44: MAIL NAME MAY NOT BE CANCELLED NOW
	[ASCIZ /MAIL NAME MAY NOT BE CANCELLED UNTIL ALL NAMES ARE CHANGED.
/]
;&.SKIP 1
;&ERROR 45: INVALID ACCT.SYS.TYP. FOR THIS COMMAND
        [ASCIZ /ILLEGAL AST FOR THIS COMMAND.
/]
;&.SKIP 1
;&ERROR 46: NEW GAN DOESN'T BELONG TO USER'S DISTRICT
        [ASCIZ /NEW GAN DOESN'T BELONG TO USER'S DISTRICT.
/]
SUBTTL STORAGE

;CONSTANTS
CUD10:	XWD 1,42313	;CUD10 PPN
UFDPPN:	XWD 1,1		;UFD PPN
STRARG:	XWD 3,B
UFDFIL:	BLOCK 40
DSKB:	SIXBIT /DSKB/
YES:	ASCIZ /Y/    
NO:	ASCIZ /N    /
NEWMSG:	ASCIZ /NEW /
MONE:	-1
ZERO:	0
ONE:	1
TWO:	2
THREE:	3
STCORE:	177	;STANDARD DEFAULT CORE AMOUNT(256K)
SPACE:	40	;ASCII SPACE
LPAREN:	50	;LEFT PARENTHESIS
RPAREN:	51	;RIGHT PARENTHESIS
SLASH:	57	;SLASH
COMMA:	54	;COMMA
SUBTTL BYTE POINTERS
;BYTE POINTERS...
NAMPTR:	POINT 6,DULBLK+1(C)
DISBP:	POINT 8,LUDBLK+1(INDEX),35	;DISTRICT
TRUPTR:	POINT 1,LUDBLK+2(INDEX),4	;TRU BIT
NENTP:	POINT 7,LUDBLK+2(INDEX),35	;POINTS TO NO. OF WDS IN RECORD
INIPTR:	POINT 1,LUDBLK+2(INDEX),27	;POINTER TO INIT FILE BIT
ZONEBP:	POINT 6,LUDBLK+3(INDEX),7	;LUD TIME ZONE POINTER
INPPTR:	POINT 6,LUDBLK+5(INDEX)	;POINTER TO USER NAME OF INIT FILE
INNPTR:	POINT 6,LUDBLK+6(INDEX)	;POINTER TO PROGRAM NAME OF INIT FILE
DSTBYT:	POINT 1,ZONE,30	;DAYLIGHT BIT
WDPTR:	POINT 6,WD
NLOGBIT: POINT 1,MISC,0
NMSGBIT: POINT 1,MISC,1
RUBBIT: POINT 1,MISC,2
GFDBIT: POINT 1,MISC,3
TRUBIT: POINT 1,MISC,4
TIMBIT: POINT 1,PRIV,19
DETBIT: POINT 1,PRIV,20
TYMBIT:	POINT 1,PRIV,21
ASBIT:	POINT 1,PRIV,22
RCMBIT: POINT 1,PRIV,26
MODBIT:	POINT 2,PRIV,28
NLOGWD: POINT 1,WD,12
NMSGWD: POINT 1,WD,13
RUBWD:  POINT 1,WD,14
GFDWD:  POINT 1,WD,15
TRUWD:  POINT 1,WD,16
TIMWD:  POINT 1,WD,26
DETWD:  POINT 1,WD,27
TYMWD:	POINT 1,WD,28
ASWD:	POINT 1,WD,29
BILWD:	POINT 1,WD,30
RCMWD: POINT 1,WD,33
MODWD:	POINT 2,WD,35
DULLOK:	5
TST3:	XWD 1,4
;TST3:   0
	SIXBIT/DUL/
	SIXBIT/SYS/
	0
	0

LUDLST:	IOWD 200,LUDBLK
	0

DULLST:	IOWD 200,DULBLK
	0


LUDLOK:	5
TST4:	XWD 1,4
;TST4:   0
;TST4:   XWD     1,320663
	SIXBIT/LUD/
	SIXBIT/SYS/
	0
	0

CNTFIL:	5
	XWD 6,214	;PJ
	SIXBIT/JOBS/
	SIXBIT/DAT/
	0
	0
 
FILNAM: 5
        XWD      1,42313
        SIXBIT/CID/
        SIXBIT/FIL/
        0
        0

OPNBLK: 14
        SIXBIT/DSK/
        XWD      OBUF,IBUF
 
IBUF:   0
IBPTR:  0
IBCT:   0
 
OBUF:   0
OBPTR:  0
OBCT:   0

DAST:	BLOCK 3	;KEEP TRACK OF WHICH AST'S HAVE BEEN DELETED

BILLST: IOWD 200,BILBLK
	0
BILBLK:	BLOCK 200


ACSADR: IOWD    200,ACSBUF
        0

ACSBUF: BLOCK   200
BUFLN== .-ACSBUF


SIZPAG==^D204
FILINF:	-SIZPAG,,LUDBLK
	SIXBIT /*/
	SIXBIT /*/
	0
	0
	0
	0
	0
;DATA BASES
CUSTDB:	ASCIZ /CUSTDB/
ADDRDB:	ASCIZ /ADDRDB/
USERDB:	ASCIZ /USERDB/
USYSDB:	ASCIZ /USYSDB/
VALDB:	ASCIZ /VALDAT/
HOSTDB:	ASCIZ /HOSTDB/
ASTDB:	ASCIZ /ASYSDB/
MAILDB:	ASCIZ /TYMHST/
TRIPDB:	ASCIZ /TYMCNV/
TUSRDB:	ASCIZ /TUSRDB/

TYMUSR:	ASCIZ/TYMUSR/

TYMCUS:	ASCIZ /TYMCUS/
DEVTB.:	0	;FOR X22
DYNDV.:	BLOCK ^D16	;FOR X22

;DATA BASE INFO BUFFERS
UINFO:	BLOCK MXUINF
USINFO:	BLOCK MXUSINF
VINFO:	BLOCK MXVINF
SITES:	BLOCK MXTHST
	0	;FUDGE FOR SENDING SITES
	0
CINFO:	BLOCK MXCINF
AINFO:	BLOCK MXAINF
HINFO:	BLOCK MXHINF
ASTINF:	BLOCK ^D75


LINDEX==0
HASH==1
LBLK==2
DINDEX==3
DNAME==4
DBLK==6
PPN==7
SITE==10
ONAME==11
OINDEX==13
OHASH==14
OBLK==15
OCUST==16
OAST==17
SAVORG:	0	;INDEX OF OLD LUD RECORD
	0	;HASH OF OLD NAME
	0	;BLK NO. OF OLD LUD RECORD
	0	;INDEX OF OLD DUL RECORD
	0	;FIRST HALF OF NAME
	0	;SECOND HALF OF NAME
	0	;BLK. NO OF OLD DUL RECORD
	0	;SAVE LAST PPN FROM BILLING ENTRY
	0	;SAVE LAST HOST FROM BILLING ENTRY
	0	;OLDER USER NAME ON A CHANGE NAME
	0
	0	;INDEX FOR OLDER USER NAME ON A CHANGE NAME
	0	;HASH FOR OLDER USER NAME ON A CHANGE NAME
	0	;BLOCK NO. OF OLDER USER NAME ON A CHANGE NAME
OLDNUM:	0	;CUSTOMER NUMBER
	0	;ACCOUNTING SYSTEM TYPE
OLDNAM:	0	;FIRST 5 CHARACTERS OF ORIG. USER'S NAME
	0	;SECOND 5 CHARACTERS OR ORIG  NAME
	0	;LAST 2 CHARS.
SUBTTL ZERO THESE ELEMENTS BETWEEN RUNS

ZERST:	0	;ZERO OUT EVERYTHING FROM HERE TO ZEREND
UNAME:	BLOCK	4	;USER NAME

;DO NOT SEPARATE THE NEXT 8 WORDS

LPPN:	0	;PPN
DIST:	0
MISC:	0
PRIV:	0
HUNAME:	0
STR:	0
QIN:	0
QOUT:	0
BUDGET:	0
INIFIL:	0
INIUSR:	BLOCK 2
SIZE: 0

ACBLK:	BLOCK 17
CID:    BLOCK   1
NNAME:	BLOCK	3	;NEW NAME
HNNAME:	0	;HASHED NEW NAME
LUDBLK:	BLOCK	SIZPAG
DULBLK:	BLOCK 200
CPCODE:	BLOCK 3
SAVLUD:	BLOCK	14
ZEREND:	0

PDP:	XWD -20,.
	BLOCK	21
TABD:	^D9999999	;A=0(TYPE 8 PLACES)
	^D999999	;A=1(7 PLACES)
	^D99999	;A=2(6 PLACES)
	^D9999	;A=3(5 PLACES)
	^D999	;A=4(4 PLACES)
	^D99	;A=5(3 PLACES)
	^D9	;A=6(2 PLACES)
	0	;A=7(1 PLACE)
SUBTTL DATA BASE POINTERS

POBP:	POINT 7,CINFO+NPO
FOCFBP: POINT 7,CINFO+NFOCF
CNAMBP:	POINT 7,AINFO+NCUSNAM
ATTNBP:	POINT 7,AINFO+NATTN
STR1BP:	POINT 7,AINFO+NSTRT1
STR2BP:	POINT 7,AINFO+NSTRT2
CITYBP:	POINT 7,AINFO+NCITY
STATBP:	POINT 7,AINFO+NSTATE
ZIPBP:	POINT 7,AINFO+NZIP
XLBP:	POINT 7,AINFO+NXL
COUNBP:	POINT 7,AINFO+NCOUNTRY
SUBTTL X22 CONSTANTS

NOCLOS:	ASCIZ /NOCLOSE   /
LAST:	ASCIZ /LAST /
NSTOP:	216527	;BINARY NULL STOP DATE
EQUALS:	1	;STANDS FOR '=' IN 1022
NEQUALS: 2	;STANDS FOR '#' IN 1022
X22AND:	1	;STANDS FOR 'AND' IN 1022
LESSTN:	3	;STANDS FOR 'LESS THAN' IN 1022
M940:	MAX940	;MAX 940 HOST
DBUUN:	0

TUNAME:	3	;USER NAME IN USERDB
TGAN:	1	;GAN IN USERDB, TUSRDB
TVGAN:	5	;GAN IN VALDAT
TUSUUN:	1	;UUN IN USYSDB,VALDAT,TYMHST
TUUUN:	2	;UUN IN USERDB, TUSRDB
TCCNUM:	1	;CUST. NO. IN CUSTDB, ADDRDB
TUCNUM:	5	;CUST. NO. IN USERDB, TUSRDB
TCCOCO: ^D18    ;COSTCODE IN CUSTDB
TUCOCO: ^D12    ;COSTCODE IN USERDB
TCDIST:	3	;DISTRICT IN CUSTDB
TUDIST:	4	;DISTRICT IN USERDB, TUSRDB
TUSSTP:	^D9	;STOP DATE FOR USYSDB
TUSTP:	^D9	;STOP DATE FOR USERDB
TCSTP:	5	;STOP DATE FOR CUSTDB
TUCSTP:	7	;STOP DATE FOR TUSRDB
TVSTP:	4	;STOP DATE FOR VALDAT, HOSTDB, TYMHST
TASYSC:	2	;ASYSCODE
TCFFF:  ^D19    ;FLAT FOCUS FEE FOR CUSTDB
TCDETC:	6	;DETAIL CODE FOR CUSTDB
TINVCO:	7	;INVCODE
TPO:	^D10	;PO
TPOMAX:	^D11	;POMAX
TPSTRT:	^D12	;PODSTART
TPSTOP:	^D13	;PODSTOP
TVHOST:	2	;HOST FOR VALDAT, TYMHST
TCNAM:	3	;CUSNAM
TATTN:	4	;ATTN
TSTRT1:	5	;STREET1
TSTRT2:	6	;STREET2
TCITY:	7	;CITY
TSTATE:	8	;STATE
TZIP:	9	;ZIP
TCOUNT:	^D11	;COUNTRY
TXL:	^D10	;XL
TLAN:	7	;LANCODE
TVDAYS:	5	;NO. OF DAYS IN TYUSR
TURCUS:	2
TRHOST:	1	;HOST IN TYMCNV, HOSTDB
TRSTP:	3	;DSTOP IN TYMCNV
TYNAME:	3	;USERNAME IN TUSRDB
TYMAIL:	8	;MAIL UUN IN TUSRDB

END	LUDUP+1
M,Sv