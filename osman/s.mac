Title PSPSLV - Slave for PDPPSP
;modified 2/24 (Version 2.1) to report date and time of crash files
;Modified from INFSND to ....
;1)Report rib errs
;2)Report disk errs if they are hard, rib, or >4 soft per drive
;3)Report letter designation of drive
;4)Report if DISPATCH is down
;Preceding 4 changes 11/11/76 by Pollack
;-Modified 4/10/84 Version 3.0
;-Reports system serial number, which is use to determine
;-hardware alfa designation.-Osman Guven-
;-Modified 4/17/85 Version 3.1
;-Reports cpu type, PDP-6, KA-10, KI-10, KL-10, KS-10, KC-10(Jupiter)
;-MARS(Systems Concepts), Foonly F1,F2,F3,F4,26KL.-Osman Guven-

MLON


Loc 137
        xwd 3,1
Reloc

P=17
PTR=15
C=16
SNDP=14
SNDS=13

T1=1
T2=2
T3=3
T4=4

SYS==1  ;1,4.UFD

CNFTAB==11
CNFENT==0
UPTTAB==12
UPTENT==15
PHYCOR==23
MONCOR==12
JBTTRU==4
JBTCNK==-12
SWPITM==5       ;SWAP ERROR COUNT
SWPTAB==13
PARITM==25
PARTAB==12

ARRAY PDL[40],WRDBUF[5]
INTERNAL P,C,T1,T2,T3   ;FOR CIRTRN
EXTERNAL GETPC,PUTPC,PUTFIN,TRNINI,CPUTYP

SYSNAM: 3
        1,,1
        1,,4
        SIXBIT /UFD/

STPT:   RESET
        MOVE P,[IOWD 40,PDL]
        MOVEI T1,214
        SETMOD T1,      ;TURN OFF ECHO
        MOVEI T1,-1     ;COMMAND PORT
        MOVE T2,[ZAPADR,,ZAPADRR]       ;IN CASE OF TROUBLE
        MOVEI T3,0
        PUSHJ P,TRNINI
        INIT SYS,16
        SIXBIT /DSK/
        0
        JRST GETOUT
        PUSHJ   P,SYHRWR	;-Get and send CPU serial number.
	PUSHJ	P,CPUKND	;-Get and send CPU type.
        MOVSI T2,-4
CNFLP:  HRLI T1,CNFENT(T2)
        HRRI T1,CNFTAB  ;GET SYSTEM NAME
        GETTAB T1,
         MOVEI T1,0
        MOVEM T1,WRDBUF(T2)
        AOBJN T2,CNFLP
        MOVEI C,100     ;SEND CODE
        PUSHJ P,@PUTPC
        MOVEI SNDS,^D24
        PUSHJ P,CHROT1  ;AND INFORMATION
        MOVE T1,UPGTB
        GETTAB T1,
         MOVEI T1,0     ;UPTIME
        MOVEM T1,WRDBUF
        MOVEI C,101     ;UPTIME CODE
        PUSHJ P,@PUTPC
        MOVEI SNDS,6
        PUSHJ P,CHROT1

        MOVE T1,[PHYCOR,,UPTTAB]
        GETTAB T1,      ;GET INFORMATION ON PHYSICAL AND USER CORE
         MOVEI T1,0
        MOVEM T1,WRDBUF+1
        MOVE T2,[MONCOR,,CNFTAB]
        GETTAB T2,
         MOVEI T2,0
        SUB T1,T2       ;LEFT FOR USER
        MOVEM T1,WRDBUF
        MOVEI C,113
        PUSHJ P,@PUTPC
        MOVEI SNDS,^D12
        PUSHJ P,CHROT1
        MOVEI T1,JBTTRU
        GETTAB T1,
         MOVEI T1,0
        MOVEM T1,WRDBUF
        MOVEI T1,JBTCNK
        GETTAB T1,
         MOVEI T1,0
        MOVEM T1,WRDBUF+1
        MOVEI C,114
        PUSHJ P,@PUTPC
        MOVEI SNDS,^D12
        PUSHJ P,CHROT1
;JOB STATUS INFORMATION

STSTBL==25      ;FOR QUE NAMES
MXQUE==^D25     ;HOW MANY QUES TO ALLOW FOR
ARRAY QUETRN[MXQUE],QTAB[4]
HGHNUM==20      ;TO GET HIGHEST JOB NUMBER
JBTSTS==0       ;JOB STATUS TABLE
JNA==(1B3)      ;JOB NUMBER ASSIGNED
JBSQUE==^D5     ;SIZE OF QUE CODE
JBNQUE==^D14    ;RIGHTMOST BIT

        SETZM QUETRN
        MOVE T1,[QUETRN,,QUETRN+1]
        BLT T1,QUETRN+MXQUE-1   ;CLEAR TABLE
        MOVEI T1,0
        MOVSI T4,-MXQUE         ;FIND OUT WHICH QUE IS WHICH STATE
QUESR1: JUMPN T1,QUESR2         ;ALREADY HAVE QUE NAMES IN T1
        HRRZ T1,T4
        IDIVI T1,3
        HRLS T1         ;3 NAMES PER
        HRRI T1,STSTBL
        GETTAB T1,
         JRST FINQNM    ;OUT OF NAMES
QUESR2: MOVEI T2,0
        ROTC T1,^D12    ;GET NEXT NAME
        MOVSI T3,-QNMLEN        ;NAMES TO CHECK FOR
QUESR3: HLL T2,QNMTAB(T3)       ;NAME IN R.H.
        CAMN T2,QNMTAB(T3)
        JRST    [HLRZM T2,QUETRN(T4)    ;SET STATE CODE
                JRST QUESR4]
        AOBJN T3,QUESR3
QUESR4: AOBJN T4,QUESR1
FINQNM: SETZM USRS#
        SETZM QTAB
        MOVE T1,[QTAB,,QTAB+1]
        BLT T1,QTAB+3   ;CLEAR COUNTS
        MOVE T4,[HGHNUM,,UPTTAB]
        GETTAB T4,
         JRST NOQUE     ;GET HIGHEST JOB NUMBER
STSLP:  HRL T1,T4
        HRRI T1,JBTSTS
        GETTAB T1,
         JRST NOQUE
        TLNN T1,JNA
        JRST NONJOB     ;THIS JOB NOT THERE
        AOS USRS
        JUMPGE T1,NONJOB        ;IGNORE IF RUN IS NOT ON (SIGN BIT)
        LDB T1,[POINT JBSQUE,T1,JBNQUE] ;GET QUE CODE
        CAIGE T1,MXQUE  ;TOO BIG?
        SKIPA T1,QUETRN(T1)     ;GET STATE TO CALL IT
        MOVEI T1,0      ;STATE 0 (OTHER)
        AOS QTAB(T1)    ;ONE MORE IN THAT STATE
NONJOB: SOJG T4,STSLP   ;NEXT JOB IF THERE IS ONE
        MOVEI C,102
        PUSHJ P,@PUTPC
        MOVE SNDP,[POINT 6,USRS]
        MOVEI SNDS,6    ;NUMBER OF USERS
        PUSHJ P,CHROUT
        MOVEI C,103     ;NUMBER IN RUN QUE
        PUSHJ P,@PUTPC
        MOVE SNDP,[POINT 6,QTAB+1]      ;STATE 1
        MOVEI SNDS,6
        PUSHJ P,CHROUT
        MOVEI C,104
        PUSHJ P,@PUTPC
        MOVE SNDP,[POINT 6,QTAB+2]      ;IO=STATE 2
        MOVEI SNDS,6
        PUSHJ P,CHROUT
        MOVEI C,112     ;DIO
        PUSHJ P,@PUTPC
        MOVE SNDP,[POINT 6,QTAB+3]      ;STATE 3
        MOVEI SNDS,6
        PUSHJ P,CHROUT
NOQUE:  MOVEI T1,13
        JFCL            ;-Use to be..CRERMT T1,0..CHECK ON DISPATCH
        JRST    [TLZ    T1,-1
                 CAIE T1,3
                 JRST   DISP
                 MOVEI  C,116
                 PUSHJ  P,@PUTPC
                 JRST   DISP]   ;REPORT IF IT'S DOWN
DISP:JFCL               ;-Use to be..ZAPRMT T1,0
        JFCL
NODISP: SETZM DSKBLK
        MOVE T1,[SWPITM,,SWPTAB]
        GETTAB T1,
         JRST PARCHK
        JUMPE T1,PARCHK         ;NO ERRORS
        MOVEM T1,WRDBUF
        MOVEI C,115
        PUSHJ P,@PUTPC
        MOVEI SNDS,6
        PUSHJ P,CHROT1
PARCHK: MOVE T1,[PARITM,,PARTAB]
        GETTAB T1,
         JRST STRLP
        JUMPE T1,STRLP
        MOVEM T1,WRDBUF
        MOVEI C,120     ;PARITY ERROR CODE
        PUSHJ P,@PUTPC
        MOVEI SNDS,6
        PUSHJ P,CHROT1
STRLP:  MOVE T1,DSKBLK
        SYSSTR T1,      ;FIND NAME OF NEXT STRUCTURE
         JRST ENDSTR
        JUMPE T1,ENDSTR ;ERROR OR 0 NAME IS END OF STRS
        MOVEM T1,DSKBLK
        MOVE T1,[.DCFCT+1,,DSKBLK]
        DSKCHR T1,
         JRST ENDSTR
        MOVE T1,DSKBLK+.DCFCT
        MOVEM T1,DSKBLK+1
        MOVEI C,105
        PUSHJ P,@PUTPC  ;SEND CODE OF STR ROOM
        MOVEI SNDS,^D12
        MOVE SNDP,[POINT 6,DSKBLK]
        PUSHJ P,CHROUT
        JRST STRLP      ;LOOK FOR MORE STRS

ENDSTR: SETZM DSKBLK+1
        MOVEI T1,2      ;READ UNIT DATA BLOCKS
        MOVEM T1,DSKBLK
NXTDER: MOVE T1,[DSKSIZ+4,,DSKBLK]
        SYSDVF T1,
         JRST ENDDER
        SKIPN T1,DSKBLK+1
        JRST ENDDER     ;FINISHED ALL UNITS
        MOVEM T1,WRDBUF         ;UNIT NAME IN WORD 1
        SETZ T2
        LDB T2,[POINT 6,DSKBLK+3+UNISDI,7]   ;GET DRIVE LETTER ASSIGNMENT
        SKIPG T2
        LDB T2,[POINT 6,DSKBLK+3+UNIHDI,7]
        HRLM    T2,WRDBUF+4     ;LETTER OF DRIVE IN LH OF WORD 5
        MOVE T1,DSKBLK+3+UNIHID
        MOVEM T1,WRDBUF+1       ;PACK ID IN WORD 2
        MOVE T1,DSKBLK+3+UNISCT
        MOVEM T1,WRDBUF+2       ;SOFT ERRORS IN WORD 3
        MOVE T1,DSKBLK+3+UNIHCT
        MOVEM T1,WRDBUF+3       ;HARD ERRORS IN WORD 4
        LDB T2,[POINT 12,DSKBLK+3+UNIMCT,23]
        HRRM T2,WRDBUF+4        ;RIB ERRORS IN RH OF WORD 5
        JUMPN T1,SNDDER         ;ALWAYS SEND IF ANY ERRS
        JUMPN T2,SNDDER
        SKIPN   DSKBLK+3+UNISCT
        JRST    NXTDER
SNDDER: MOVEI C,106
        PUSHJ P,@PUTPC
        MOVEI SNDS,^D30
        PUSHJ P,CHROT1
        JRST NXTDER
        DEFINE X(A,B)
<       B,,''A''>

;QUE NAMES TABLE

QNMTAB: X RN,1
        X WS,1
        X TS,1
        X DS,1
        X MQ,3
        X DA,3
        X CB,3
        X DT,2
        X DC,2
        X MT,2
        X IO,2
        X DI,3
        X MO,3

QNMLEN==.-QNMTAB

;INFORMATION FOR STR AND DSK ERROR SEARCHES

DSKSIZ==0
        DEFINE XP (A,B)
<A==B
IFG <B-DSKSIZ>,<DSKSIZ==B>>

;WILL NOW HAVE DSKSIZ BIG ENOUGH FOR UNI BLOCK

        XP UNIHID,2     ;PACK ID
        XP UNIHCT,10    ;HARD ERRORS
        XP UNISCT,11    ;SOFT ERRORS
        XP UNIMCT,12    ;RIB ERRORS
        XP UNIBRC,16    ;BUFFERED READS
        XP UNIBWC,17    ;BUFFERED WRITES
        XP UNIDRC,20    ;DUMP READS
        XP UNIDWC,21    ;DUMP WRITES
        XP UNIMRC,22    ;MONITOR READS
        XP UNIMWC,23    ;MONITOR WRITES
        XP UNIICT,25    ;SWAP READS
        XP UNIOCT,26    ;SWAP WRITES
        XP UNISDI,32    ;SOFT SENSE DATA
        XP UNIHDI,33    ;HARD SENSE DATA
        XP .DCFCT,2     ;DSKCHR UUO FREE BLOCK COUNT

ARRAY DSKBLK[DSKSIZ+4]

DAMNAM: 3
        1,,4
        SIXBIT /RECOV/
        SIXBIT /SYS/    ;NAME OF DAMAGE INFORMATION FILE
ENDDER: MOVEI   C,117
        PUSHJ   P,@PUTPC                ;END OF DISK ERRS
        MOVEI C,107     ;SET TO SEND INFORMATION ABOUT DAMAGE
        LOOKUP SYS,DAMNAM
         SKIPA          ;NOT THERE
        PUSHJ P,@PUTPC
        CLOSE SYS,0
        LOOKUP SYS,SYSNAM       ;NOW UFD
         JRST GETOUT
UFDLP:  MOVE T1,[33,,SYS]
        CHANIO T1,ARGLST
        JRST GETOUT             ;CAN'T READ UFD
        STATZ SYS,20000
        JRST GETOUT     ;END OF FILE
        SKIPN ARGLST+7  ;ANY CRASHES FOUND?
        JRST GETOUT     ;NO. DONE.
        MOVEI C,110     ;CRASH CODE
        PUSHJ P,@PUTPC
        MOVEI SNDP,ARGBUF
        HRLI SNDP,(POINT 6,0,17)
        MOVEI SNDS,3
        PUSHJ P,CHROUT  ;SEND NAME
        MOVEI SNDP,ARGBUF+2
        HRLI SNDP,(POINT 6,0)
        MOVEI SNDS,6
        PUSHJ P,CHROUT
        JRST UFDLP      ;TRY NEXT BLOCK

GETOUT: RELEASE SYS,
        MOVEI C,111     ;END OF INFORMATION
        PUSHJ P,@PUTPC
        PUSHJ P,PUTFIN
        PUSHJ P,@GETPC  ;JUST TO CAUSE US TO WAIT
        EXIT

CHROT1: MOVE SNDP,[POINT 6,WRDBUF]
CHROUT: ILDB C,SNDP
        PUSHJ P,@PUTPC
        SOJG SNDS,CHROUT
        POPJ P,


SYHRWR:	MOVE	T1,CPUSN	;-Set up
	GETTAB	T1,		;-and get SERIAL number of the CPU.
	MOVEI	T1,0		;-Failed  to do so.
	MOVEM	T1,WRDBUF	;-Successfull, store it.
	MOVEI   C,121		;-Go tell the master program that
        PUSHJ   P,@PUTPC	;-you already set up to send the
	MOVEI	SNDS,6		;-serial number of the CPU in WRDBUF
	PUSHJ	P,CHROT1	;-And
	POPJ	P,		;-go back to where you came from.

CPUSN:	20,,11			;-GATTAB index & table number for serial #.

CPUKND:	PUSHJ	P,CPUTYP##	;-Go get the CPU type in T1.
	MOVEM	T1,WRDBUF	;-Store it.
	MOVEI	C,122		;-Go tell the master program you all set to
	PUSHJ	P,@PUTPC	;-send CPU type info and store it where
	MOVEI	SNDS,6		;-it should be, in WRDBUF.
	PUSHJ	P,CHROT1	;-And
	POPJ	P,		;-you are finished.
ARGLST: -3,,ARGBUF
        SIXBIT /CRA0##/
        SIXBIT /SAV/
        1B3!1B10
        0
        0
        0
        0

ARGBUF: BLOCK 3

ZAPADR: EXIT

UPGTB:  UPTENT,,UPTTAB

        END STPT
 