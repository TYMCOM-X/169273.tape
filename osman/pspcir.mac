TITLE CIRTRN - TRANSFER INFORMATION OVER AUX CIRCUITS

P=17	;PUSHDOWN LIST
C=16	;CHARACTER
LBUF=15	;LOGICAL BUFFER NUMBER (USED ONLY AT INTERUPT LEVEL)
PBUF=14	;PHYSICAL BUFFER NUMBER (USED ONLY AT INTERUPT LEVEL)

T1=1
T2=2
T3=3

NIBUF==6	;NUMBER OF INPUT BUFFERS
NOBUF==4	;NUMBER OF OUTPUT BUFFERS
CHRBUF==177	;NUMBER OF CHRS PER BUFFER (MAX)

BUFSIZ==<CHRBUF+5>/4	;NUMBER OF WWORDS PER BUFFER

INTERNAL P,C,T1,T2,T3
INTERNAL GETPC,PUTPC,INTDSP,GETCHK,PUTFIN,TRNINI	;ROUTINES
INTERNAL ERRBUF,ERRDUP,ERRNIN,ERRNOT,ERRRET,ERRUNU

	DEFINE EXCHAC (A,B)
<	MOVEM 17,A+17
	MOVEI 17,A
	BLT 17,A+16
	MOVSI 17,B
	BLT 17,17>
COMMENT ;

THIS PROGRAM MAINTAINS FULL DUPLEX COMMUNICATION OVER AN AUX
CIRCUIT. THE ROUTINES ARE USED AS FOLLOWS:

	PUSHJ P,@GETPC	RETURNS A CHARACTER IN C

	PUSHJ P,@PUTPC	CHARACTER IN C IS TRANSMITTED

ALL CHARACTERS ARE TRANSMITTED AS 7 BIT CHARACTERS

	PUSHJ P,GETCHK
	 RETURN HERE IF NO INPUT CHARACTERS PRESENT
	RETURN HERE IF INPUT CHARACTERS PRESENT

	PUSHJ P,PUTFIN	FLUSH OUTPUT BUFFER
	 SINCE CHARACTERS ARE TRANSMITTED IN BUFFERS, THIS WILL
	 CAUSE THE CURRENT OUTPUT BUFFER TO BE SENT EVEN IF
	 IT IS NOT FULL

THIS ROUTINE USES INTERUPT CHANNELS 1-5. THE OTHER CHANNELS ARE
AVAILABLE FOR USE BY THE CALLING PROGRAM. THE INTERUPT DISPATCH
TABLE IS IN INTDSP. THE CALLING PROGRAM SHOULD NOT USE THE
TIMER

	PUSHJ P,TRNINI

THIS INITIALIZES CHARACTER TRANSMISSION.
T1 CONTAINS THE PROT NUMBER
T2 CONTAINS THE ADDRESS TO GO TO ON A CIRCUIT ZAP IN THE RIGHT
	HALF AND THE ADDRESS TO GO TO IF THE CIRCUIT IS NOT
	RESPONDING IN THE LEFT HALF. IN EACH CASE, THE ROUTINE
	WILL GO TO ONE OF THESE ADDRESSES ON THE NEXT CALL TO
	PUTPC OR PUTFIN OR THE NEXT CALL TO GETPC OR GETCHK
	IF NO CHARACTERS ARE PRESENT
T3 CONTAINS THE NUMBER OF 10 SECOND INTERVALS WHICH MAY ELAPSE
	WITHOUT TRANSMISSION OVER THE AUX CIRCUIT BEFORE
	THE NOT RESPONDING ERROR IS TAKEN. THE LEFT HALF
	SPECIFIES THE NUMBER FOR INITIAL CIRCUIT RESPONSE
	AND THE RIGHT HALF FOR RESPONSE AFTER INITIAL CONTACT
	IS ESTABLISHED. IF EITHER NUMBER IS 0, IT IS ASSUMED TO BE
	INFINITE.

RECORD FORMAT:
	THE SYNC CHARACTER IS 325
WHEN THE INITIALIZE ROUTINE IS CALLED, 3 SYNC CHARACTERS
ARE SENT. A RECORD CONSISTS OF
PHYSICAL BUFFER NUMBER (STARTING AT 1)
LOGICAL BUFFER NUMBER (0-77)
CHECKSUM
COUNT OF DATA CHARACTERS
DATA CHARACTERS

THE CHECKSUM IS THE SUM OF THE COUNT AND ALL THE DATA CHARACTERS
+101 ANDED WITH 177
THE BUFFER IS FOLLOWED BY A SYNC CHARACTER
A RECORD ACKNOWLEDGE IS
PHYSICAL BUFFER NUMBER+200
LOGICAL BUFFER NUMBER
SYNC

THE FOLLOWING ERROR COUNTS ARE AVAILABLE
ERRBUF	NUMBER OF ERRONEOUS BUFFERS RECIEVED
ERRDUP	NUMBER OF UNNEEDED RETRANSMISSIONS
ERRNIN	NUMBER OF GOOD BUFFERS RECIEVED
ERRNOT	NUMBER OF BUFFERS SENT
ERRRET	NUMBER OF BUFFER RETRANSMISSIONS
ERRUNU	NUMBER OF BUFFERS RECIEVED WHICH COUND NOT BE KEPT IN CORE
;
COMMENT ;

INTERUPT CHANNELS
1	CIRCUIT ZAPPED
2	TIMER
3	CHR RECIEVED
4	I/O WAIT
5	OK TO SEND OUTPUT

TRANSMIT IS CONTROLED BY THE TABLE TRNTBL
BIT 0	THIS BUFFER IS IN USE
BITS 1-2	COUNT FOR RETRANSMIT TRANSMIT IF 0 AND SET TO 3
	DECREMENTED BY TIMER ROUTINE
BIT 3	BUFFER HAS BEEN ACKNOWLEDGED, FREE IT UP
BIT 4	BUFFER HAS BEEN SENT, SO CAN INCREMENT ERRRET
BITS 12-17	LOGICAL BUFFER NUMBER

RECIEVE BUFFERS CONTROLED BY RCVTBL
BIT 0	SEND ACK
BIT 1	KNOW ACK SEEN (ANOTHER BUFFER WITH SAME PHYSICAL)
BIT 2	FREE BUFFER, READ CODE FINISHED
BITS 5-10 PHYSICAL BUFFER NUMBER
BIT 11	BUFFER IN USE (FULL)
BITS 12-17 LOGICAL BUFFER NUMBER PRESENT OR EXPECTED

IN BOTH CASES, BITS 18-35 ARE BUFFER ADDRESS
;
;HERE ON AN INTERUPT TH DO TRANSMISSION

TRNCHR:	SKIPE HLDTRN
	DISMIS		;WE ARE NOT TO SEND
	EXCHAC TRNSAV,TRNAC
	JRST @TRNPC

TRNST:	SETOM TRNACT#	;ORIGINAL TRNPC. SET TRANSMIT ACTIVE
TRNST1:	MOVSI T1,-NIBUF
	SKIPGE RCVTBL(T1)	;SEE IF FLAG IS ON TO ACK
	JRST SNDACK		;YES, SEND ONE
	AOBJN T1,.-2
	MOVSI T1,-NOBUF
	SKIPGE T2,TRNTBL(T1)	;SEE IF BUFFER TO BE SENT
	JRST TRNBUF
SRCTRN:	AOBJN T1,.-2
	SKIPE ANYTRN	;SENT ANYTHING?
	JRST TRNDON	;YES, DONE
	HRLZ T1,PORT
	HRRI T1,AUXCHI
	AUXCAL T1,375
	AUXCAL T1,325	;SEND SYNC CHARACTER
	SETOM ANYTRN
TRNDON:	MOVEI T1,TRNST
	MOVEM T1,TRNPC	;SET TRANSMIT PC
	SETZM TRNACT
TRNLEV:	EXCHAC TRNAC,TRNSAV
	DISMIS

SNDACK:	HRLZ T2,PORT
	HRRI T2,AUXCHI
	LDB C,[POINT 6,RCVTBL(T1),10]	;PHYSICAL BUFF
	AUXCAL T2,200(C)
	LDB C,[POINT 6,RCVTBL(T1),17]
	AUXCAL T2,(C)
	AUXCAL T2,325
	MOVSI T2,(1B0)
	ANDCAM T2,RCVTBL(T1)	;TURN OFF ACK FLAG
	JRST TRNST1	;RESCAN

TRNBUF:	TLNE T2,(1B3)
	JRST FREBUF
	TLNE T2,(3B2)	;IS IT TIME TO RETRANSMIT
	JRST SRCTRN	;NO, SKIP THIS ONE
	TLNE T2,(1B4)
	AOSA ERRRET
	AOS ERRNOT	;COUNT BUFFER
	HRLZ C,PORT
	HRRI C,AUXCHI
	AUXCAL C,1(T1)	;PHYSICAL BUFFER NUMBER
	HLRZ T2,TRNTBL(T1)
	AUXCAL C,(T2)	;LOGICAL BUFFER NUMBER
	HRRZ T2,TRNCHK(T1)
	AUXCAL C,(T2)	;CHECKSUM
	HRRI C,AUXPTR
	HRRZ T2,TRNTBL(T1)
	HRLI T2,(POINT 9,0)
	AUXCAL C,T2
	HRRI C,AUXCHI
	AUXCAL C,325	;SEND SYSNC
	MOVSI T2,(3B2+1B4)
	IORM T2,TRNTBL(T1)
	JRST SRCTRN	;GO AGAIN

FREBUF:	HRRZS TRNTBL(T1)
	JRST SRCTRN
;HERE IF OUTPUT WOULD PUT US IN I/O WAIT

CHRSTP:	MOVEM T1,TRNPC	;SAVE T1
	MOVEI T1,TRNLEV
	EXCH T1,INTDSP+6	;ON DISMISS, GO TO TRNLEV
	EXCH T1,TRNPC	;AND SET TRNPC TO DISMISS ADR
	DISMIS

PUTST:	SKIPE TRBFLG
	JRST @TRBFLG
	PUSH P,T1
	MOVSI T1,-NOBUF
	SKIPL TRNTBL(T1)
	JRST FRETRN
	AOBJN T1,.-2
	MOVEI T1,^D100
	HRLI T1,2	;LONG TIME
	HIBER T1,
	 JFCL
	POP P,T1
	JRST PUTST

FRETRN:	HRRZM T1,CURTRN#
	HRRZ T1,TRNTBL(T1)
	HRLI T1,(POINT 9,0,8)
	MOVEM T1,TRNPTR#
	MOVEI T1,CHRBUF
	MOVEM T1,TRNCNT#
	MOVEI T1,101
	MOVEM T1,TRNCKS#
	MOVEI T1,PUTCH
	MOVEM T1,PUTPC
	POP P,T1
PUTCH:	SOSGE TRNCNT
	JRST TRNFIN
	ANDI C,177
	ADDM C,TRNCKS
	IORI C,400
	IDPB C,TRNPTR
	POPJ P,

TRNFIN:	AOS TRNCNT
	PUSHJ P,PUTFIN
	JRST PUTST
PUTFIN:	PUSH P,T1
	PUSH P,T2
	MOVEI T2,CHRBUF
	SUB T2,TRNCNT
	JUMPE T2,PUTFN1
	ADDM T2,TRNCKS	;ADD COUNT INTO CHECKSUM
	HRRZ T1,CURTRN
	HRRZ T1,TRNTBL(T1)
	TRO T2,400
	DPB T2,[POINT 9,(T1),8]
	HRRZ T1,CURTRN
	MOVEI T2,0
	IDPB T2,TRNPTR
	MOVE T2,TRNCKS
	ANDI T2,177
	MOVEM T2,TRNCHK(T1)
	MOVE T2,TRNBFN
	TRO T2,(1B0)
	HRLM T2,TRNTBL(T1)
	AOS T2,TRNBFN
	ANDI T2,77
	MOVEM T2,TRNBFN
	MOVEI T2,PUTST
	MOVEM T2,PUTPC
	MOVSI T1,(1B0+1B5)
	SKIPN TRNACT
	INTACT T1,
	 JFCL
PUTFN1:	POP P,T2
	POP P,T1
	POPJ P,
RCVCHR:	EXCHAC RCVSAV,RCVAC
	JRST @RCVPC

RCVST:	MOVEI T1,RCVIN
	MOVEM T1,RCVPC		;INITIAL CHR RECIEVED INTERUPT
	MOVE P,[IOWD 40,RCVPDL]

RCVDSP:	PUSHJ P,RCVIN	;GET CHR
	 JRST	[CAIL C,300	;CHR>177
		JRST SYNCHK	;ASSUME SYNC, SYNC
		JRST BUFACK]	;ASSUME BUFF ACK
	MOVE PBUF,C		;ASSUME BUFFER
	PUSHJ P,RCVIN
	 JRST SKPBF1	;BAD CHR, RESYNC
	CAILE C,77
	JRST SKPBF1	;BAD LOGICAL BUFFER NUMBER, SKIP
	MOVE LBUF,C
	MOVSI T1,-NIBUF	;CHECK FOR REPEATED PHYSICAL BUFFER
SRCPBF:	LDB T2,[POINT 6,RCVTBL(T1),10]
	CAMN T2,PBUF
	JRST SAMPBF	;SAME
SRCPB1:	AOBJN T1,SRCPBF
	MOVSI T1,-NIBUF
	CAMN LBUF,RCVEXP(T1)	;IS THIS ONE EXPECTED
	JRST GODBUF		;YES
	AOBJN T1,.-2
	AOS ERRUNU	;NOT EXPECTED
	JRST SKPBUF
GODBUF:	MOVSI T1,-NIBUF
	MOVSI T2,100+(1B0+1B1)
	TDNN T2,RCVTBL(T1)	;NOW SEARCH FOR A FREE ONE
	JRST GETBUF		;GO ONE
	AOBJN T1,.-2
	AOS ERRUNU
	JRST SKPBUF	;NO PLACE TO PUT IT

RCVIN:	HRLZ C,PORT
	HRRI C,AUXINS
	AUXCAL C,C
	 JRST RCVLEV	;NO CHRS PRESENT
	EXCH T1,SAVPTR
	MOVEM C,SAVBUF(T1)
	AOBJN T1,.+2
	MOVSI T1,-SAVSIZ
	EXCH T1,SAVPTR
	CAIGE C,200
	AOS (P)
	POPJ P,

RCVLEV:	EXCHAC RCVAC,RCVSAV
	DISMIS
SAMPBF:	LDB T2,[POINT 6,RCVTBL(T1),17]	;GET PLOGICAL
	CAMN T2,LBUF
	JRST ACKSKP	;SAME
	MOVSI T2,(1B1)
	ANDCAM T2,RCVTBL(T1)	;TURN OFF WAITING FOR ACK SEEN
	DPB T2,[POINT 6,RCVTBL(T1),10]	;AND SET PBUF=0
	JRST SRCPB1	;AND CONTINUE SEARCH

ACKSKP:	AOS ERRDUP	;COUNT A DUPLICATE
	MOVSI T2,(1B0)
	IORM T2,RCVTBL(T1)	;SET TO ACK
	MOVSI T2,(1B0+1B5)
	INTACT T2,
	 JFCL
SKPBUF:	PUSHJ P,RCVIN
	 JFCL
SKPBF1:	CAIN C,325
	JRST RCVDSP	;SUNK
	JRST SKPBUF	;WAIT FOR SYNC

BUFACK:	MOVE PBUF,C
	ANDI PBUF,77
	CAIG PBUF,NOBUF	;IS IT TOO LARGE?
	PUSHJ P,RCVIN
	 JRST SKPBF1	;TOO LARGE OR LOICAL BAD
	CAILE C,77
	JRST SKPBUF	;LOGICAL BAD
	MOVE LBUF,C
	PUSHJ P,RCVIN
	 CAIE C,325	;MUST BE SYNC
	JRST SKPBUF
	LDB T1,[POINT 6,TRNTBL-1(PBUF),17]
	CAMN T1,LBUF
	SKIPL TRNTBL-1(PBUF)	;DO NOT TOUCH IF NOT IN USE
	JRST RCVDSP	;ALREADY KNOW JUST GOT SYN
	MOVE T1,TIMWAT
	MOVEM T1,TIMCNT
	SETZM HLDTRN
	MOVSI T1,(1B3)
	IORM T1,TRNTBL-1(PBUF)
	MOVSI T1,(1B0+1B5)
	INTACT T1,	;ACTIVE TRANSMIT CHL
	JFCL
	JRST RCVDSP

SYNCHK:	CAIE C,375
	JRST SKPBF1
	PUSHJ P,RCVIN
	 CAIE C,325
	JRST SKPBUF
	MOVE T1,TIMWAT
	MOVEM T1,TIMCNT
	MOVSI T1,(1B0+1B5)
	SKIPE HLDTRN	;WAITING TO TRANS?
	INTACT T1,
	 JFCL
	SETZM HLDTRN
	JRST RCVDSP
GETBUF:	PUSHJ P,RCVIN	;CHECKSUM
	 JRST SKPBF1
	MOVEM C,RCVCKI#
	PUSHJ P,RCVIN
	 JRST SKPBF1
	MOVEM C,RCVCNT#
	MOVEM C,RCVCHK#	;CALC CHKSUM
	HRRZ T2,RCVTBL(T1)
	HRLI T2,(POINT 9,0)
RCVBUF:	IDPB C,T2
	PUSHJ P,RCVIN
	 JRST ENDCHK	;SHOULD BE SYNC
	SOSGE RCVCNT
	JRST BADBUF	;BUFFER IS BAD
	ADDM C,RCVCHK
	JRST RCVBUF

BADBUF:	AOS ERRBUF
	JRST SKPBUF

ENDCHK:	CAIN C,325
	SKIPE RCVCNT
	JRST BADBUF
	MOVEI C,101
	ADD C,RCVCHK
	ANDI C,177
	CAME C,RCVCKI
	JRST BADBUF
	AOS ERRNIN
	IORI LBUF,100+(1B0+1B1)
	HRLM LBUF,RCVTBL(T1)
	DPB PBUF,[POINT 6,RCVTBL(T1),10]
	MOVE T1,TIMWAT
	MOVEM T1,TIMCNT
	SETZM HLDTRN
	MOVSI T1,(1B0+1B5)
	INTACT T1,
	JFCL
	JRST RCVDSP
;GET A CHARACTER

GETST:	SKIPE TRBFLG
	JRST @TRBFLG
	PUSH P,T1
	PUSH P,T2
	MOVSI T1,-NIBUF
SRCINP:	LDB T2,[POINT 7,RCVTBL(T1),17]
	TRZN T2,100	;MUST BE IN USE
	JRST SRCIN1	;IS NOT
	CAMN T2,RCVBFN
	JRST INPBUF
SRCIN1:	AOBJN T1,SRCINP
	MOVEI T1,^D100
	HRLI T1,2
	HIBER T1,
	 JFCL
	POP P,T2
	POP P,T1
	JRST GETST

INPBUF:	HRRZM T1,CURRCV#	;CURRENT BUFFER
	HRRZ T2,RCVTBL(T1)
	HRLI T2,(POINT 9,0)
	ILDB C,T2
	MOVEM C,CNTRCV#
	MOVEM T2,PTRRCV#
	MOVEI T1,GETCH
	MOVEM T1,GETPC
	POP P,T2
	POP P,T1
GETCH:	SOSGE CNTRCV
	JRST GETDON	;FINISHED WITH BUFFER
	ILDB C,PTRRCV
	POPJ P,

GETDON:	PUSH P,T1
	MOVE C,RCVBFN
	MOVSI T1,-NIBUF
	CAMN C,RCVEXP(T1)
	JRST .+3
	AOBJN T1,.-2
	HALT
	ADDI C,NIBUF
	ANDI C,77
	MOVEM C,RCVEXP(T1)
	HRRZ T1,CURRCV
	MOVSI C,100
	ANDCAM C,RCVTBL(T1)	;FREE CURRENT
	AOS T1,RCVBFN
	ANDI T1,77
	MOVEM T1,RCVBFN
	POP P,T1
	JRST GETST
GETCHK:	SKIPLE CNTRCV
	JRST CPOPJ1
	PUSH P,T1
	PUSH P,T2
	PUSH P,T3
	MOVE T3,RCVBFN
	MOVE T2,GETPC
	CAIE T2,GETST
	ADDI T3,1
	ANDI T3,77
	MOVSI T1,-NIBUF
CHKIN0:	LDB T2,[POINT 7,RCVTBL(T1),17]
	TRZN T2,100
	JRST CHKIN1
	CAMN T2,T3
	AOSA -3(P)
CHKIN1:	AOBJN T1,CHKIN0
	POP P,T3
	POP P,T2
	POP P,T1
	POPJ P,

CPOPJ1:	AOS (P)
	POPJ P,
;TIMER INTERUPT

TIMERP:	MOVEM T1,TIMT1#
	SOSL TIMCNT
	JRST TIMOK
	MOVSI T1,(1B1)
	INTENB T1,	;DISABLE ZAP INTERUPT
	JFCL
	HLRZ T1,TRBADR
	SKIPN TRBFLG	;UNLESS ALREADY SET (BY ZAP)
	MOVEM T1,TRBFLG
TIMLEV:	MOVEI T1,^D10000
	SETTIM T1,
	 JFCL
	MOVE T1,TIMT1
	DISMIS

TIMOK:	SETZM ANYTRN	;FLAG NEED SYNC SENT
	MOVSI T1,(1B0+1B5)
	INTACT T1,
	JFCL
	MOVSI T1,-NOBUF
	MOVEM T2,TIMT2#
TIMTRN:	SKIPGE T2,TRNTBL(T1)	;CHECK NEED TO SEND
	TLNN T2,(3B2)
	JRST TIMTR1	;ALREADY SAYS TO SEND
	SUB T2,[1B2]
	HLLM T2,TRNTBL(T1)	;DECREMENT COUNT
TIMTR1:	AOBJN T1,TIMTRN
	MOVE T2,TIMT2
	JRST TIMLEV

CIRZAP:	MOVEM T1,ZAPT1#
	HRRZ T1,TRBADR
	MOVEM T1,TRBFLG
	MOVE T1,ZAPT1
	DISMIS
AUXCHI==4	;OUTPUT CHR IMED
AUXPTR==5	;OUTPUT FROM POINTER
AUXINS==1	;INPUT CHR AND SKIP
AUXSBK==13	;SET BREAK

ARRAY TRNSAV,TRNAC,RCVSAV,RCVAC[20],RCVPDL[40]
ARRAY RCVTBL,RCVEXP[NIBUF],TRNTBL,TRNCHK[NOBUF]
ARRAY BUFSP[BUFSIZ*<NOBUF+NIBUF>]


TIMCUS==4	;TIMER INTERUPT NUMBER
ZAPCUS==7000	;CIRCUIT ZAPPER
BRKCUS==2000	;BREAK RECIEVED
IOWCUS==3000	;IOW
OUTCUS==4000	;OUTPUT ROOM AVAILABLE

SAVSIZ==200

ARRAY SAVBUF[SAVSIZ]
TRNINI:	HRRZM T1,PORT#
	HLLZM T1,HLDTRN#
	MOVEM T2,TRBADR#
	HLRZ T1,T3
	SKIPN T1
	HRLOI T1,377777
	MOVEM T1,TIMCNT#
	HRRZ T1,T3
	SKIPN T1
	HRLOI T1,377777
	MOVEM T1,TIMWAT#
	MOVEI T1,TRNST
	MOVEM T1,TRNPC#
	SETZM TRNACT#
	SETZM ANYTRN#
	SETZM ERRBUF#
	SETZM ERRDUP#
	SETZM ERRNIN#
	SETZM ERRNOT#
	SETZM ERRRET#
	SETZM ERRUNU#
	MOVEI T1,PUTST
	MOVEM T1,PUTPC#
	SETZM TRNBFN#
	SETZM TRBFLG#
	MOVEI T1,RCVST
	MOVEM T1,RCVPC#
	SETZM RCVBFN#
	MOVEI T1,GETST
	MOVEM T1,GETPC#
	MOVSI T1,-NIBUF	;SET UP INPUT BUFFER POINTERS
	MOVEI T2,BUFSP
SETNIB:	HRRZM T1,RCVEXP(T1)
	HRRZM T2,RCVTBL(T1)
	ADDI T2,BUFSIZ
	AOBJN T1,SETNIB
	MOVSI T1,-NOBUF	;OUTPUT BUFFERS
SETNOB:	MOVEM T2,TRNTBL(T1)
	ADDI T2,BUFSIZ
	AOBJN T1,SETNOB
	MOVEI T1,0
	SETTIM T1,
	JFCL
	MOVSI T1,-SAVSIZ
	MOVEM T1,SAVPTR#
	MOVEI T1,INTDSP
	HRLI T1,6
	INTADR T1,
	 HALT
	HRLI T1,TIMCUS
	HRRI T1,2	;TIMER ON 2
	INTASS T1,
	 JFCL
	HRRZ T1,PORT
	HRLI T1,ZAPCUS+1
	MOVSI T2,(1B0+1B1)
	TINASS T1,
	 INTACT T2,	;CAN NOT, CAUSE INTERUPT
	  JFCL
	HRL T1,PORT
	HRRI T1,AUXSBK
	AUXCAL T1,[725]	;SET BREAK CHR
	HRL T1,PORT
	HRRI T1,AUXINS
	AUXCAL T1,T1
	 JFCL	;JUST TO GET IN 8-LEVEL MODE
	HRL T1,PORT
	HRRI T1,AUXCHI
	AUXCAL T1,325
	AUXCAL T1,325
	AUXCAL T1,325	;SEND SYNC
	HRRZ T1,PORT
	HRLI T1,BRKCUS+3
	TINASS T1,	;BREAK CHR ON 3
	 JFCL
	HRRZ T1,PORT
	HRLI T1,IOWCUS+4
	TINASS T1,
	 JFCL
	HRRZ T1,PORT
	HRLI T1,OUTCUS+5
	TINASS T1,
	 JFCL
	MOVSI T1,770000
	INTENB T1,
	 JFCL
	MOVEI T1,^D10000
	SETTIM T1,
	 JFCL
	POPJ P,

INTDSP:	0
	CIRZAP
	0
	TIMERP
	0
	RCVCHR
	0
	CHRSTP
	0
	TRNCHR
	BLOCK ^D60

	END
