!! title COMM8 - Network I/O Commands ;
! *************************************************************************
*									  *
*				   COMM8				  *
*			    Network I/O Commands			  *
*									  *
***************************************************************************


	   This file is required as a source!file in COMAND.SAI.


**************************************************************************;


external integer procedure
  A!CreAux (reference string LoginStr);

    ! A!CreAux creates an aux circuit and returns the port number it is
    ! established on. The argument is updated as omitted portions are
    ! filled in with defaults.
    ;

external procedure
  A!AuxWin (reference integer AuxPort);

    ! A!AuxWin actually causes the interaction to be inserted into the
    ! buffer.  It calls B!Insert and W!Msg.
    ;


! ------------------------------------------------------------------------;
!! title Rtn C!SetCreEsc ;
! Set the CreAux Escape character.
;

simple procedure C!SetCreEsc;
begin "C!SetCreEsc"
  string
    Prompt;

  Prompt _ "New CreAux escape character: ";

  W!Msg(Prompt);
  C!CreEscChr _ C!GetC;
  W!Msg(Prompt & CvCmdChr(C!CreEscChr));

  C!ArgV _ 0;
end "C!SetCreEsc";
!! title Rtn C!CreAux ;
! Create an Aux Circuit session in the current window.
;

procedure C!CreAux;
begin
  string
    Prompt;

  Prompt _ "Login: ";

  if (B!Lock) then
  begin
    W!Msg(Prompt & "[failed]");
    W!Msg2("[buffer locked]");
    return;
  end;

  if (C!AuxPort < 0) then
  begin
    if (not C!ReadString(Prompt, CR, ESC)) then
    begin
      W!Msg(Prompt & "[Aborted]");
      return;
    end;

    C!AuxStr _ C!String;
    C!AuxPort _ A!CreAux(C!AuxStr);

      ! The message line is updated as necessary by A!CreAux.
      ;
  end
  else
    W!Msg(Prompt & C!AuxStr & " [continued]");

  clear(W!MsgF);
  A!AuxWin(C!AuxPort);
  W!FixS;

  if (C!AuxPort >= 0) then
    W!Msg(Prompt & C!AuxStr & " [circuit remains]")
  else
    W!Msg(Prompt & C!AuxStr & " [circuit zapped]");
end;

                           
! *************************  End of Comm8.Req  ***************************;
