To exit PEAK

    ^X ^C         Exit without writing files
    ^X ^F         Write files and exit
    ^X ^E         Write files and return to caller

Inserting

    All normally printing characters insert themselves 
    when typed. This includes RETURN and TAB.  To insert a
    control character you must "quote" it with ^Q.

    ^Q            Insert the next character.

Deleting

    ^D            Delete character
    ^H            Delete previous character
    <del>         Delete previous character
    ESC D         Delete token
    ESC H         Delete previous token
    ^K            Kill line
    ESC K         Kill to end of line
    ^W            Kill to a mark
    ^Y            Recover killed text

Moving Around

    ^F            Move forward
    ^B            Move backward
    ^A            Move to beginning of line
    ^E            Move to end of line
    ^N            Move to next line
    ^P            Move to previous line

    ESC F         Move forward over token
    ESC B         Move backward over token

    ESC {         Move to top of page
    ESC }         Move to bottom of page
Moving Around in the Window

    ESC ,         Move to top of window
    ESC .         Move to bottom of window
    ^V            Move to next window
    ESC V         Move to previous window
    ^Z            Scroll window up
    ESC Z         Scroll window down
    ESC !         Move point to top of window

Moving Around in the Buffer

    ESC <         Move to top of buffer
    ESC >         Move to bottom of buffer
    ESC <space>   Set a "mark" in the buffer
    ^X S          Exchange the point and a mark
    ESC G         Go to a mark
Searching/Replacing

    ESC S         Search
    ESC R         Reverse search
        (Complete command: "ESC S <string> ESC")
    ^S            Repeat last search
    ^R            Repeat last reverse search
    ESC M         Multiple string search
    ("ESC M <str1> ESC <str2> ESC ... <strN> ESC ESC")
    ESC =         Show search string(s)
    ESC (         Reverse search for matching open 
                  parenthesis
    ESC )         Search for matching close parenthesis
    ESC C         Change
    ESC Q         Query change
        ("ESC C <string1> ESC <string2> ESC")
Fancier Text Manipulation

    ESC ^W        Copy text between point and mark to
                    kill buffer
    ^J            Start new line at current indentation
    ^O            Open the line
    ^T            Twiddle (swap) the last two characters
    ESC ^J        Right justify line
    ^X W          Delete whitespace following
    ^X V          Delete whitespace preceeding
    ESC I         Indent a line (add leading whitespace)
    ESC U         Unindent a line (remove leading 
                  whitespace)
    ESC P         Fill paragraph
    ^^            Toggle case of character
    ESC ^         Toggle case of word
Manipulating Windows

    ^X 2          Use 2 windows
    ^X 1          Use 1 window
    ^X G          Enlarge window
    ^X ^O         Go to other window

Manipulating Buffers

    ^X <          Move to previous buffer
    ^X >          Move to next buffer
    ^X ^N         Build a scratch buffer
    ^X ^K         Delete this buffer
    ^X ^S         Checkpoint this buffer
    ^X ^U         Recover last checkpoint
    ^X !          Recover checkpoint file
Reading/Writing Files

    ^X ^R         Read a file into a new buffer
    ^X ^I         Insert a file into the current buffer
    ^X ^W         Write the current buffer
        (Complete form: "^X ^R <filespec> ESC")

Locking Files

    ^X +          Clear file lock
    ^X -          Lock file (prevents modifications)

Command files

    ^X ^L         Execute command file
        (Complete form: "^X ^L <filespec> ESC")
    ^X |          Start comment (| to end comment)
Macros and Key Bindings

    ^X D          Define a macro
    ^X M          Bind macro to key
    ^X B          Bind function to key
    ^X E          Define macro by example
    ^X [          Push key binding onto stack
    ^X ]          Pop key binding off stack

Modes

    ^X N         Put PEAK in "Normal" mode
    ^X T         Put PEAK in "Text" mode
    ESC O        Toggle "Overwrite" flag
    ESC W        Toggle "Wrap" flag
Setting the Argument

        ^U followed by a number.  If no number is typed,
        the default multiplier of 4 is used.

Other Things of General Interest

    ^G            Abort command
    ^L            Repaint screen
    ESC ~         Clear "buffer modified" flag
    ESC ?         Type this list, list buffer chain
    ^X ?          Name of function bound to a key
    ^X "          Put string on message line (" to end)
    ^X ^T         Show date and time
Information Strings

    ^X I        Insert information string
    (Complete form: "^X I <I-Str> ESC")
    I-Str is "date", "time" or "username"

Special Characters

    ESC X is special ESC <char> ESC
                  Define "Special" character
    ESC X not special ESC <char> ESC
                  Character no longer "Special"
    ESC ;         Search for "special" character
    ESC :         Reverse search for "special"
                  character
Token Definitions

    The following definitions are for the 
    commands ESC F, ESC B, ESC D, ESC H:

    ESC X is token ESC <char> ESC
                  Defines "token"
    ESC X not token ESC <char> ESC
                  Make char not a "token"
    ESC X is number ESC <char> ESC
    ESC X not number ESC <char> ESC
                  Makes char part of a number
    ESC X is delim ESC <char> ESC
    ESC X not delim ESC <char> ESC
                  Makes char a delimiter
Accessing PEAK

    PEAK is accessible by the monitor command 'PEAK' 
    Command: PEAK [filespec] [/Pn] [/Ln] [/R] [/Cn] [/N]
    with optional switches:

        Pn    display at page n of file
        Ln    display at line n of page specified 
        Cn    display at character n
        R     read in the file "Read Only" (no editing)
        N     do not delete nulls in file

Executing Functions by Name

    ESC X         Execute a function by name
Functions not Bound to a Key

    Backward Greyspace    Backward Whitespace
    Beep                  Capitalize Token
    Center Line           Clear Mark
    Column Insert         Copy to Search        
    Creaux                Decrement Char
    Delete NULLS          Down Paragraph
    Fill Line             Fill to End of Paragraph
    Force Left Margin     Forward Greyspace
    Forward Whitespace    Goto Column       
    Increment Char        Indent Column Down
    Indent Line Up        Indent Region     
    Insert Octal          Name Macro
    Nothing               Repeat Query Change
                                            (more)
Functions not Bound to a Key (continued)

    Set Append Kill       Set Creaux Esc Char
    Set Right Margin      Set Right Margin
    Set Terminal Type     Show Column
    Show Octal            Token LC
    Token UC              Unbind Key
    Unindent Region       Unname Macro
    Up Paragraph          Window Bar
    XOFF Synch

Environment Variable Values

    ^X =          Query the value of a variable
    ^X _          Assign the argument to the variable
    (Complete form: "^Un^X _ <variable name> ESC")
Environment Variables

BreakPageOnFF      1   When nonzero, break page on ff
CheckpointInterval 60  Interval for checkpointing.
EscapeAs$          1   When nonzero, print ESC as $
ExactCaseMatch     0   Controls case matching in search
                        When nonzero, matching is exact
IndentWidth        4   Width for ESC I, ESC U commands
LeftMargin         1   Margin control for fill paragraph
Multiplier         4   Default for "Argument" command
RightMargin       72   Margin control in "text" mode
SwapPMRegion       0   If zero, point unchanged after
                        region commands and "yank"
TabWidth           8   Controls tab stops
UseTabs            1   When nonzero, use TABS in indent
VariableFill       0   When nonzero, argument to fill
                        sets right margin
   