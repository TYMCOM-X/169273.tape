TITLE TRPTST
SUBTTL PROGRAM TO TEST OVERFLOW TRAPS.

COMMENT \

Make sure that overflow, first part done, and at least 1 other real PC
	flag can be set and cleared with JRSTF.
Make sure PC flags are stored correctly by PUSHJ, JSP, JSR.
Make sure interrupts don't mash PC flags.
Make sure UUOs don't smash PC flags.
Make sure PUSHJ, JSP, JSR work as trap instructions.
Make sure AOS, JFCL work as trap instructions.
Make sure PDL overflow and underflow trap properly
Make sure first part done being set doesn't disturb other PC flags
	(goes thru different microcode when it is set.)
Make sure page fail during trap instruction works correctly
Make sure that when setting first part done in PC and clearing it, it
	doesn't come on again from executing a trap or JRSTF which
	sets trap flags.
\


DEFINE MSG(MESS)<OUTSTR [ASCIZ\'MESS
\]>


DEFINE ERROR(MESS,JUMP) <
	JSP EPC, [OUTSTR [ASCIZ\?'MESS
\]
		SKIPN CONTIN
		EXIT	1,
IFNB <JUMP>,<	JRST	'JUMP>
IFB <JUMP>,<JRST	(EPC)>
]
>

	LOC	124
	EXP	REEADR
	RELOC

	T1=1
	T2=2
	T3=3
	T4=4
	P1=11
	P2=12
	P3=13
	P4=14
	EPC=15
	PC=16
	P=17

PC.OVF==(1B0)
PC.CR0==(1B1)
PC.CR1==(1B2)
PC.FOV==(1B3)
PC.FPD==(1B4)
PC.USR==(1B5)
PC.UIO==(1B6)
PC.PUB==(1B7)
PC.AFI==(1B8)
PC.TR2==(1B9)
PC.TR1==(1B10)
PC.FUF==(1B11)
PC.NDV==(1B12)


.WSRNG==1		;ADD/REMOVE PAGES TO/FROM WORKING SET FUNCTION
;MACROS USED IN GENERATING TESTS

DEFINE SETTRP(N)<
	MOVE	T1,[AOS TRPCN'N]
	SETTR'N	T1,
	  JFCL
	SETZM	TRPCN'N
			;;DO SOSE TRPCNT TO SEE IF ALL WENT OK.
>;END SETTRP DEFINITION

;THIS MACRO DOES MOST OF THE WORK IN GENERATING TESTS.

DEFINE PCTEST(TNAME,SETPC,CLRPC,%A,%B) <
IF2,<PRINTX 'TNAME' - '%B:>
%B:	MSG	('TNAME' - '%B:)
	SETUP
IFNDEF EXTTRP,<IFNB <SETPC>,<IFN <PC.OVF&<SETPC>>,<SETTRP(1)>>>
IFDEF EXTTRP,<EXTTRP>
	MOVEI	P4,PCCMAX
%A:	JSP	PC,.+1
	TLZ	PC,PC.OVF+PC.CR0+PC.CR1+PC.FPD
	TDO	PC,PCCTAB(P4)	;;SET PC FLAGS AS INDICATED IN PC COMBINATION TABLE
	HRRI	PC,.+2
	JRSTF	@PC		;;SET PC FLAGS PROPERLY FOR TEST
IFNB <SETPC>,<
	TLO	PC,'SETPC	;;FLAGS THAT TEST WILL SET
	SETZM	TRPCN1
>
IFNB <CLRPC>,<
	TLZ	PC,'CLRPC	;;FLAGS THAT TEST WILL CLEAR
>
	HLRZM	PC,PCSAVE	;;AND SAVE FOR LATER COMPARE.
	TEST
	  JRST	.+3
	ERROR	(UNEXPECTED SKIP)
	ERROR	(UNEXPECTED DOUBLE SKIP)
	GETPC	(PC)
	CAME	PC,PCSAVE
	ERROR	(STATIC PC TEST FAILURE FOR 'TNAME)
IFNDEF EXTTRP,<IFNB <SETPC>,<IFN PC.OVF&<SETPC>,<
	SOSE	TRPCN1
	ERROR	(OVERFLOW TRAP ERROR FOR TEST 'TNAME)
>>>;END IFNB AND IFN
	CHECK			;;USER PROVIDED  ROUTINE
	SOJGE	P4,%A		;;KEEP GOING FOR ALL PC COMBINATIONS
	SOSLE	REPCNT		;;REPEAT THE TEST?
	JRST	%B		;;YES.
	SETZM	CONTIN		;;SO NEXT TEST WILL STOP ON FIRST ERROR.

DEFINE CHECK <>			;;CLEAR OUT DEF TILL NEXT TEST
DEFINE SETUP <>			;;AND DEF OF SETUP.
>;END PCTEST MACRO DEFINITION

DEFINE GETPC(AC)<JSP	AC,.+1
		HLRZS AC>
DEFINE PCCGEN(A,B,C,D)<
IRP A,<IRP B,<IRP C,<IRP D,<
PC.OVF*A+PC.CR0*B+PC.CR1*C+PC.FPD*D,,0
>>>>>
PCCTAB:	PCCGEN(<0,1>,<0,1>,<0,1>,<0,1>)
	PCCMAX==.-PCCTAB-1

;MACRO TO REMOVE PAGE WHOSE ADDRESS IS ARG FROM USER WORKING SET, TO CAUSE PAGE FAULT.
; CALLER RESPONSIBLE FOR KNOWING WHERE PAGE IS SO FAULT HAPPENS WHEN INTENDED.

DEFINE REMWS(X)<MOVEI	T1,'X
		LSH	T1,-^D9
		HRLI	T1,1	;REMOVE ONE PAGE FROM UWS
		MOVE	T2,[.WSRNG,,T1]
		WSCTL	T2,
		  ERROR	<UNEXPECTED WSCTL FAILURE FOR FUNCTION .WSRNG>
>;END REMWS MACRO DEFINITION


REEADR:	SETOM	CONTIN
	JRST	(EPC)

ST:	JFCL
	RESET
	SETZM	CONTIN
	MOVE	T1,[6002,,776]
	VCREAT	T1,
	  ERROR	(UNEXPECTED VCREAT ERROR)
	MOVE	T1,[2,,INTVEC]
	INTADR	T1,
	  ERROR	(UNEXPECTED INTADR ERROR RETURN DURING INITIALIZATION)
	MOVSI	T1,600000
	INTENB	T1,		;TURN ON CHANNEL 1
	  ERROR	(UNEXPECTED INTENB ERROR RETURN DURING INITIALIZATION)
TESTS:

DEFINE CHECK <>			;INIT CHECK TO BE NOTHING.
DEFINE SETUP <>			;ALSO SETUP MACRO
PURGE EXTTRP

DEFINE TEST <>			;THIS TESTS TO MAKE SURE JRSTF CAN SET PC TO ALL COMBINATIONS

	PCTEST(NOTHING)
DEFINE TEST <JFCL>
	PCTEST(JFCL)
DEFINE TEST <SETZM SCRTCH
		AOS SCRTCH>
DEFINE CHECK <
	MOVE	T1,SCRTCH
	CAIE	T1,1
	ERROR	<AOS FAILED TO ADD 0+1>
>;END CHECK
	PCTEST(AOS)
DEFINE TEST <CALLI 5>	;KNOWN NOOP UUO
	PCTEST(NO OP UUO)
DEFINE TEST <MOVE	T1,[-377777]
		ADDI	T1,1
		CAME	T1,[-1]
		JRST	.-2
>
	PCTEST(INTERRUPTS)
DEFINE TEST <	REMWS(SCRTCH)
		MOVE	T1,SCRTCH	;;CAUSE FAULT FOR ACCESS BIT.
>;END TEST MACRO DEF
	PCTEST(PAGE FAULT)


DEFINE TEST <	MOVSI	T1,400000	;;SETUP 1B0
		SOS	T1		;;CAUSE OVERFLOW
>
DEFINE CHECK <
		CAME	T1,[377777,,-1]
		ERROR	<SOS RESULT NOT AS EXPECTED IN SOS OVERFLOW TEST>
>
	PCTEST (<SOS OVERFLOW>,<PC.OVF+PC.CR0>)

DEFINE GETPC(AC)<
	MOVEI	AC,SCRTCH-1
	PUSHJ	AC,.+1
	HLRZ	AC,SCRTCH
>

DEFINE TEST<>				;JUST SEE IF PUSHJ STORES FLAGS CORRECTLY
	
	PCTEST(<PUSHJ STORING FLAGS>)	;PUSHJ SHOULD CLEAR FIRST PART DONE.
DEFINE GETPC(AC) <
	JSR	JSRLOC
	HLRZ	AC,JSRLOC

>
	PCTEST	(<JSR STORING FLAGS>)
DEFINE RMTTRP(N,TRPINS,TRPSIZ) <
	
	MOVE	T1,[<TRPINS>&777777,,777000]
	BLT	T1,777000+TRPSIZ-1
	MOVE	T1,[<<TRPINS>&777777000000> + 777000]
	SETTR'N	T1,
	  JFCL
	REMWS	(777000)
	SETZM	TRPCN'N
	MOVE	P,[IOWD PDLLEN,PDL]
>;END RMTTRP MACRO DEFINITION
DEFINE RMTTRC(N)<
	SOSE	TRPCN'N
	ERROR	(   OVERFLOW TRAP ERROR)
>

DEFINE EXTTRP<RMTTRP(1,<PUSHJ P,PJTRP>,PJSIZ)>
DEFINE CHECK <RMTTRC(1)>

DEFINE TEST <MOVE	T1,[377777,,-1]
		ASH	T1,1>

	PCTEST(<ASH OVERFLOW PUSHJ NOT IN WS TRAP>,<PC.OVF>)

DEFINE EXTTRP<RMTTRP(1,<JSR JSTRP>,<JSSIZ>)>
DEFINE CHECK <RMTTRC(1)>

DEFINE TEST <MOVEI	T1,1
		IDIVI	T1,0>
	PCTEST(<IDIVI BY 0>,<PC.OVF+PC.NDV>)
PURGE EXTTRP

DEFINE SETUP <MOVE	T1,[PGBTST,,PGBADR]
		BLT	T1,PGBADR+PGBSIZ-1>
DEFINE TEST	<REMWS(PGBFLT)
		JSR PGBADR>
DEFINE CHECK <CAME	T1,[377777,,-1]
		ERROR (SOS RESULTS NOT AS EXPECTED IN SOS TRAP PAGE BOUNDARY TEST)
>
		PCTEST(<SOS TRAP PAGE BOUNDARY>,<PC.OVF+PC.CR0>,<PC.FPD>)
;(JSR CLEARS PC.FPD IN THIS TEST)

DEFINE SETUP <MOVE	T1,[PGJTST,,PGJADR]
		BLT	T1,PGJADR+PGJSIZ-1
>
DEFINE TEST	<REMWS(PGJFLT)
		JSR PGJADR>
DEFINE EXTTRP <SETTRP(1)>
DEFINE CHECK <SOSE	TRPCN1
		ERROR (TRAP ERROR IN JRSTF TRAP PAGE BOUNDARY TEST)
>
		PCTEST(<JRSTF TRAP PAGE BOUNDARY>)


DEFINE INDTRP <MOVEI	T1,TRPCN1
		MOVEM 	T1,777000
		MOVE	T1,[AOS @777000]
		SETTR1	T1,
		  JFCL
>;END INDTRP
	DEFINE EXTTRP<INDTRP>
DEFINE TEST <;MAKE PAGE FAIL HAPPEN FOR INDIRECT WORD OF TRAP INSTRUCTION
		SETZM	TRPCN1
		REMWS	(777000)
		MOVSI	T1,400000
		JRST	.+3
REPEAT 2,<		ERROR	(PC ERROR IN SOS TRAP INDIRECT PAGE FAIL TEST)>
		SOS	T1
>
DEFINE CHECK <
		SOSE	TRPCN1	;;MAKE SURE TRAP HAPPENED CORRECTLY
		ERROR	(TRAP ERROR IN SOS TRAP INDIRECT PAGE FAIL TEST)
		CAME	T1,[377777,,-1]
		ERROR	(SOS RESULT ERROR IN SOS TRAP INDIRECT PAGE FAIL TEST)
>
		PCTEST(<SOS TRAP INDIRECT PAGE FAIL TEST>,<PC.OVF+PC.CR0>)

DEFINE EXTTRP <INDTRP>
DEFINE TEST(%A)<
		SETZM	TRPCN1
		REMWS	(777000)
		JSP	PC,.+1
		HRRI	PC,%A
		TLO	PC,PC.TR1
		JRST	.+4
REPEAT 3,<	ERROR	(PC ERROR IN JRSTF TRAP INDIRECT PAGE FAIL TEST)>
		JRSTF	@PC
REPEAT 3,<	ERROR	(PC ERROR IN JRSTF TRAP INDIRECT PAGE FAIL TEST)>
%A:>
DEFINE CHECK <	SOSE	TRPCN1
		ERROR	(TRAP ERROR IN JRSTF TRAP INDIRECT PAGE FAIL TEST)
>
		PCTEST	(<JRSTF TRAP INDIRECT PAGE FAIL>)

ILMTST:	MOVEI	T1,ILMCPC
	MOVEM	T1,INTNPC	;ILMCPC CHECKS FOR TRAP FLAGS IN PC
	MOVE	T1,[2,,1]	;ENABLE FOR ILL MEM REFS
	INTASS	T1,
	  ERROR	(UNEXPECTED INTASS ERROR RETURN IN TRAP FLAG ILL MEM REF TEST)

	MSG	<TRAP FLAG ILL MEM REF TEST>
	MOVSI	T1,400000
ILMINS:	MOVNM	T1,400000		;PLACE WHERE WE KNOW WE'LL GET ILL MEM REF
	MOVE	T1,ILMSPC	;GET OLD TRAP PC
	TLNE	T1,PC.TR1
	ERROR	(TRAP FLAG ERRONEOUSLY SET DURING TRAP FLAG ILL MEM REF TEST)
	MOVE	T1,[2,,0]	;RESET TO NORMAL ILL MEM REF PROCESSING
	INTASS	T1,
	  ERROR	(UNEXPECTED INTASS ERROR RETURN)
PURGE EXTTRP
;NOW TEST JFCL.

DEFINE TEST(%A,%B,%C,%D)<
	MOVEI	P3,17
%A:	MOVSI	P1,(JFCL)
	DPB	P3,[POINT 4,P1,12]
	LDB	T1,[POINT 4,PCSAVE,3+^D18]
	AND	T1,P3
	JUMPE	T1,%B			;JUMP IF JFCL NOT SUPPOSED TO JUMP.
	HRRI	P1,%C			;GO FINISH IF IT JUMPS.
	XCT	P1
	ERROR	(JFCL DIDN'T DETECT PC FLAGS)
	JRST	%C
%B:	HRRI	P1,%D
	XCT	P1
	JRST	%C
%D:	ERROR	(JFCL JUMPED WHEN NO ENABLED PC FLAGS WERE SET)
%C:	JSP	PC,.+1
	LDB	T1,[POINT 4,PC,3]
	AND	T1,P3		;;SEE IF ANY FLAGS THAT SHOULD HAVE BEEN CLEARED ARE STILL SET

	SKIPE	T1
	ERROR	(JFCL DIDN'T CLEAR SELECTED FLAGS)
	SUBI	P3,1		;;DO IT NOW, IT SETS CRY1
	HRL	PC,PCSAVE
	HRRI	PC,.+2
	JRSTF	@PC		;RESTORE TEST FLAGS FOR NEXT JFCL TEST
	JUMPGE	P3,%A
>;END TEST DEFINITION
JTEST:	PCTEST	(<JFCL TEST>)

;TEST TO MAKE SURE JRSTF CAN CAUSE TRAP BY SETTING TRAP FLAGS DIRECTLY

DEFINE TEST <
	HRL	PC,PCSAVE
	TLO	PC,PC.TR1
	HRRI	PC,.+2
	JRSTF	@PC
>
	PCTEST	(<JRSTF SET PC.TR1>,<PC.OVF>)


	SETTRP(2)

DEFINE TEST <
	HRL	PC,PCSAVE
	TLO	PC,PC.TR2
	HRRI	PC,.+2
	JRSTF	@PC
>

DEFINE CHECK <
	SOSE	TRPCN2
	ERROR	(JRSTF DID NOT CAUSE TRAP 2 TO HAPPEN)
>
	PCTEST	(<JRSTF SET PC.TR2>)


	MSG	(PUSHDOWN OVERFLOW TRAP TEST)
	SETZM	TRPCN2
	MOVE	P,[-1,,PDL-1]
	PUSH	P,P
	SOSE	TRPCN2
	ERROR	(PUSHDOWN OVERFLOW DIDN'T TRAP - PUSH)
	SETZM	TRPCN2
	MOVEI	P,PDL
	POP	P,SCRTCH
	SOSE	TRPCN2
	ERROR	(PUSHDOWN UNDERFLOW DIDN'T TRAP - POP)
	MOVE	P,[-1,,PDL-1]
	SETZM	TRPCN2
	PUSHJ	P,.+1
	SOSE	TRPCN2
	ERROR	(PUSHDOWN OVERFLOW DIDN'T TRAP - PUSHJ)
	SETZM	TRPCN2
	MOVEI	P,PDL
	MOVEI	T1,.+3
	MOVEM	T1,PDL
	POPJ	P,
	SOSE	TRPCN2
	ERROR	(PUSHDOWN UNDERFLOW DIDN'T TRAP - POPJ)

DEFINE TEST <
	JSP	PC,.+1
>
	PCTEST	(<JSP CLEAR FPD>,,PC.FPD)
DEFINE TEST <
	MOVEI	P,PDL
	PUSHJ	P,.+1
>
	PCTEST	(<PUSHJ CLEAR FPD>,,PC.FPD)
DEFINE TEST <
	JSR	JSRNFL
>
	PCTEST	(<JSR CLEAR FPD>,,PC.FPD)

	MSG	(FPD TEST)
DEFINE FPDTST(INST) <
IRP INST,<
	MOVE	P4,[POINT 7,P1]
	JRSTF	@[PC.FPD,,.+1]
IFIDN <INST> <IBP> <IBP P4>
IFDIF <INST> <IBP> <INST T1,P4>
	CAME	P4,[POINT 7,P1]
	ERROR	('INST INCREMENTED POINTER WHEN FPD ON)
	JSP	PC,.+1
IFDIF <INST> <IBP> <
	TLNE	PC,PC.FPD		;;MAKE SURE IT GOT TURNED OFF
	ERROR	('INST DIDN'T CLEAR PC.FPD)
>>>;END FPDTST MACRO DEFINTION	

	FPDTST(<IBP,ILDB,IDPB>)

;SPECIAL TEST TO MAKE SURE THAT AFTER AN INSTRUCTION CLEARS FIRST PART DONE,
; IT DOESN'T COME ON AGAIN AFTER A TRAP (FAKE FPD FLAG STILL ON IN MICROCODE
; MEMORY, AND MICROCODE THAT EXECUTES THE TRAP HAS TO CLEAR IT)

	MSG	(FAKE FPD TEST)
	SETTRP(2)		;;SETUP FOR PDL OV TRAPS
	FPDTST(ILDB)		;;SET FPD AND CLEAR IT
	JSP	PC,.+1
	TLNE	PC,PC.FPD
	ERROR	(FPD SET AFTER FPD TEST FOR IBP IN FAKE FPD TEST)	
	MOVEI	P,PDL
	POP	P,P		;;CAUSE TRAP
	SOSE	TRPCN2
	ERROR	(DIDN'T GET PDL TRAP IN FAKE FPD CLEAR TEST)
	JSP	PC,.+1
	TLNE	PC,PC.FPD
	ERROR	(FPD GOT SET AGAIN AFTER PDL OV TRAP)

DEFINE TEST <
	MOVSI	T1,400000
	SOS	T1
	AOS	TRPCN1		;;FAKE TRAP TO NORMAL PLACE FOR PCTEST MACRO
>
DEFINE CHECK <
	CAME	T1,[377777,,-1]
	ERROR	(SOS RESULTS INCORRECT FOR SOS OVERFLOW WITH PAGE FAULT AOS TRAP TEST)
	SOSE	777000		;;NOW MAKE SURE THE TRAP HAPPENED.
	ERROR	(TRAP ERROR IN SOS OVERFLOW WITH PAGE FAULT AOS TRAP TEST)
>;END CHECK

DEFINE PFTRAP <
	MOVE	T1,[AOS 777000]
	SETTR1	T1,
	  JFCL
	REMWS	(777000)
	SETZM	777000
>
DEFINE EXTTRP(N)<PFTRAP>
	PCTEST	(<SOS OVERFLOW WITH PAGE FAULT IN AOS TRAP INSTRUCTION>,<PC.OVF+PC.CR0>)

FPPTST:	MSG	(ILDB FPD PAGE FAIL:)
	MOVEI	P4,500
FPPTS0:	REMWS	(777000)
	MOVE	T1,[POINT 7,777000]
	ILDB	T2,T1
	CAME	T1,[POINT 7,777000,6]
	ERROR	(ILDB FPD PAGE FAIL TEST FAILED)
	SOJGE	P4,FPPTS0
	SOSLE	REPCNT
	JRST	FPPTST

FPITST:	MSG	(ILDB FPD INTERRUPT TEST:)
	MOVEI	P4,500000
FPITS0:	MOVE	T1,[POINT 7,T1]
	ILDB	T2,T1
	CAME	T1,[POINT 7,T1,6]
	ERROR	(ILDB FPD INTERRUPT TEST FAILED)
	SOJGE	P4,FPITS0
	SOSLE	REPCNT
	JRST	FPITST

BYTCOP:	MSG	(BYTE COPY TEST)
	MOVE	T1,[POINT 1,BYTTAB]
	MOVEI	P3,NUMBTS/2
BYTCO1:	ILDB	T2,T1
	SKIPE	T2
	ERROR	(BYTE COPY TEST FAILURE)
	ILDB	T2,T1
	CAIE	T2,1
	ERROR	(BYTE COPY TEST FAILURE)
	SOJG	P3,BYTCO1
	SOSLE	REPCNT
	JRST	BYTCOP

;TEST TO MAKE SURE INTERRUPTS DURING TRAP CYCLES DON'T CAUSE TRAPPING
; INSTRUCTION TO GET RE-EXECUTED
IF2,<PRINTX INTERRUPT DURING TRAP CYCLE TEST - ITCTST:>
	
ITCTST:	MSG	<INTERRUPT DURING TRAP CYCLE TEST>
	MOVEI	P4,400000	;ENOUGH TO MAKE SURE WE'LL GET INTERRUPTED
	SETTRP(1)		;SET IT UP TO AOS TRPCN1
SOSLUP:	MOVSI	T1,400000
	SOS	T1		;GENERATE OVERFLOW, INCREMENT TRPCN1
	JRST	SOSLU1
	ERROR	(<PC ERROR IN INTERRUPT DURING TRAP CYCLE TEST>,SOSLU1)
	ERROR	(<PC ERROR IN INTERRUPT DURING TRAP CYCLE TEST>,SOSLU1)
SOSLU1:	CAME	T1,[377777,,777777]
	ERROR	(SOS RESULT ERROR DURING INTERRUPT DURING TRAP CYCLE TEST)
	SOJG	P4,SOSLUP
	SOSLE	REPCNT
	JRST	ITCTST

	JRST	TESTS
;STORAGE LOCATIONS

PCSAVE:	0		;PLACE TO STORE PC
SCRTCH:	0		;PLACE TO PUT NUMBER, TAKE OUT OF WORKING SET, ETC.
CONTIN:	0		;IF SET, CONTINUE TESTS EVEN IF ONE FAILS.
REPCNT:	0		;IF NONZERO, REPEAT TEST THAT MANY TIMES.
TRPCN1:	0
TRPCN2:	0
	PDLLEN==^D40
PDL:	BLOCK	PDLLEN
INTVEC:	0
INTNPC:	0		;FOR NEW PC.

JSRNFL:	0			;;HERE TO NOT RESTORE FLAGS (FPD)
	JRST	@JSRNFL
JSRLOC:	0
	JRSTF	@JSRLOC
PJTRP:
	PHASE 777000
	EXCH	T1,(P)
	TLNE	T1,PC.TR1!PC.TR2
	ERROR	(PUSHJ TRAP ROUTINE FOUND PC TRAP FLAGS ON)
	EXCH	T1,(P)
	AOS	TRPCN1
	POP	P,(P)
	JRSTF	@1(P)
	DEPHASE
PJSIZ==.-PJTRP
	

JSTRP:	PHASE	777000
	0
	EXCH	T1,JSTRP
	TLNE	T1,PC.TR1!PC.TR2
	ERROR	(JSR TRAP ROUTINE FOUND PC TRAP FLAGS ON)
	EXCH	T1,JSTRP
	AOS	TRPCN1
	JRSTF	@777000
	DEPHASE
JSSIZ==.-JSTRP

BYTTAB:	REPEAT ^D500,<EXP 252525252525>
	NUMBTS==<.-BYTTAB>*^D36


PGBTST:
	PHASE 776775
PGBADR:	0	
	MOVSI	T1,400000
	SOS	T1		;TRAP AFTER THIS
PGBFLT:	JRST	@PGBADR		;FAULT ON THIS WORD.
	ERROR	(<PGBFLT ROUTINE PC ERROR>,PGBFLT)
	ERROR	(<PGBFLT ROUTINE PC ERROR>,PGBFLT)
	ERROR	(<PGBFLT ROUTINE PC ERROR>,PGBFLT)
IFN PGBFLT-777000,<PRINTX PGBADR NOT ASSEMBLED AT CORRECT ADDRESS>
	DEPHASE
	PGBSIZ==.-PGBTST

PGJTST:	PHASE 776773
PGJADR:	0
	MOVE	T1,PGJADR
	HRRI	T1,PGJFLT
	TLO	T1,PC.TR1
	JRSTF	@T1
PGJFLT:	JRST	@PGJADR
	ERROR	(<PGJFLT ROUTINE PC ERROR>,PGJFLT)
	ERROR	(<PGJFLT ROUTINE PC ERROR>,PGJFLT)
	ERROR	(<PGJFLT ROUTINE PC ERROR>,PGJFLT)
	DEPHASE
	PGJSIZ==.-PGJTST
IFN PGJFLT-777000,<PRINTX PGJFLT NOT AT LOCATION 777000>


ILMCPC:	MOVE	T1,INTVEC
	MOVEM	T1,ILMSPC
	HRLI	T1,12000
	CAME	T1,[12000,,ILMINS]
	ERROR	(PC ERROR IN TRAP FLAG ILL MEM REF TEST)
	ADDI	T1,1		;POINT TO AFTER THE INSTRUCTION
	MOVEM	T1,INTVEC
	DISMIS
ILMSPC:	0
	
	END	ST
  