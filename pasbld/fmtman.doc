$margin 10 $width 75
$number 0 $number off
$skip 6 $center
&F M T&
$skip 2
A Pascal Source File Formatting Program
$skip
Version 1.7
$skip 5
&Abstract&
$skip $justify
$indent left 15 $indent right 15
FMT is a program which will perform limited formatting on Pascal source
files, producing either a new source file (suitable for compilation) or a
listing file with a banner, page numbering and titles, and a table of contents.
It will realign trailing comments and perform case conversion on the program
text.
If a listing file is produced, it may be printed automatically.
FMT can take option switches from a SWITCH.INI file.
$skip 10 $verbatim
$indent left 0 $indent right 0
Prepared by:   zw
Last updated:  30 April 1984
$justify
$title 'FMT -- A Pascal Source File Formatting Program             Page \' left 'Version 2'
$footnote left '30 April 1984'
$page
$para 5
The FMT program may be used to format PASCAL source files for
ease of reading and editing.
FMT can be used in a listing mode, to produce a listing file with
banner pages, pagination, page and line numbering, and an optional table of
contents;
or it can be used in an edit mode, to produce a new source file.
It aligns trailing comments to a specified column, and can perform upper/lower
case conversion on the program text.
$skip $para 5
Command lines to FMT have the following general form:
$skip $verb
     [ output-file = ]  [ input-file ]  [ / options ]
$skip $just $para 5
&Input-file& is the name of the source file to be formatted.
The extension and directory for the source file normally default to .PAS and the
user's directory, although these may be changed with the /DEFAULT switch.
$skip $para 5
&Output-file& gives components of the name of the file to which the
formatted output is to be written.
Missing components are taken from the input file name
and the defaults associated with certain options.
For example, if '.FIL' is specified,
the output file will be 'DSK:name.FIL[,]', where name is the input file name.
if '[n,m]' is specified, the output file
will be placed in the specified directory; etc.
$skip $para 5
Any number of options may be specified.
Individual option names may be separated by spaces, a comma, or a slash.
Certain options switches may be followed by a parameter;
the parameter may be separated from the option name by spaces, a colon, or
an equal sign.
When an option parameter is enclosed in quotes, either single quotes ('...')
or double quotes ("...") may be used.
Option names may be abbreviated;
in the following list, the minimal abbreviations are indicated by underlining.
The following options may be specified:
$skip 2 $indent +10
$para -10
&LIST&\\\\\\requests the production of a file which will be suitable for
listing on a line printer.
Header pages and line numbers are placed in the output file.
A $PAGE directive causes the line counter to be reset and a form feed to be
inserted.
The default output file extension will be .LST unless this is overriden by
an output file specification.
$skip $para -10
&EDIT&\\\\\\requests that the formatted result simply be formatted,
rather than being prepared for listing.
If the input file would have been acceptable to the Pascal compiler, then the
output file will be, too.
The output will be written over the original source file, unless an output file
is specified.
Consequently, this option should be used with caution.
$skip $need 2 $para -10
&NEW&\\\\\\\is the same as EDIT, except that an extension of '.TMP' is assumed
by default.
$skip
LIST, EDIT, and NEW are mutually exclusive.
If more than one is specified on a command line, the last one on the line
will be obeyed.
$skip 4 $need 2 $indent -10 $para 5
The following options may be specified in either listing or edit mode.
They control the formatting of the source file.
$skip 2 $indent +10 $para -10
&COL&UMN=n\\controls the alignment of comments.
Trailing comments (comments which occur as the last text on a line which
contains non-comment text as well)
are aligned to start in column n.
If such a comment extends across several lines,
the continuation lines are aligned to maintain their position relative to the
start of the comment.
For example:
$ver
$skip
$need  8
     lncntr := 0; (* reset line counter
                     to top of page     *)
$skip
might become:
$skip
     lncntr := 0;              (* reset line counter
                                  to top of page     *)
$skip
$jus
If n is not a tab stop (1, 9, 17, etc.), a warning is issued, but the request
is still obeyed.
$skip $para -10
&UPPER&CASE\causes all code to be translated to uppercase.
Code includes all program text except for comments, directive lines, and
quoted strings.
Conditional comments (*$X\...\*) and (*$Y\...\*) are treated as code.
Nested comments are handled correctly.
$skip $para -10
&LOWER&CASE\causes all code (as above) to be translated to lowercase.
$skip $para -10
&PASS&\\\\\\suppresses uppercase/lowercase translation altogether.
$skip
UPPERCASE, LOWERCASE, and PASS are mutually exclusive;
the last one specified on a command line will be obeyed.
$skip 2 $para -10
&D&ECAP\\\\\causes text within comments and directive lines to be decapitalized:
all characters are translated to lowercase, except those preceded by an
at-sign (@).
This allows upper/lower case comments and directives to be entered on an
uppercase-only terminal.
$skip $para -10
&NOD&ECAP\\\suppresses decapitalization.
$skip 4 $need 5 $indent -10 $para 5
The following commands are only relevant in listing mode.
They have no effect if EDIT or NEW is in effect.
$skip 2 $indent +10 $para -10
&LEN&GTH=n\\causes a new page to be started when n lines have been printed
on the current page.
If n\=\0, new pages are started only by a $PAGE directive in the source
file.
Note that FMT does not process $LENGTH directives in the source file.
$skip $para -10
&X&REF\\\\\\causes section and page numbers to be printed on each page,
along with the title given on the last $PAGE directive.
An alphabetized list of $PAGE titles is printed at the end of the listing.
The section number is incremented whenever a $PAGE directive is processed,
and corresponds to the Pascal debugger page numbering.
Since two lines are required for the page header, the number of source lines
which can be printed on each listing page is reduced by two.
$skip $para -10
&NOX&REF\\\\suppresses the XREF option.
$skip 4 $need 5 $indent -10 $para 5
Some miscellaneous options are:
$skip 2 $indent +10 $para -10
&A&PPEND\\\\causes the output to be appended to the end of the output file,
rather than overwriting anything already in it.
$skip $para -10
&NOA&PPEND\\causes the output file to be overwritten.
$skip $para -10
&DEF&AULT="file-name"
$para
changes the input file name defaults.
For example, the command line "FILE1" would normally process FILE1.PAS in the
user's directory, but "FILE1 /DEFAULT: '.INC[123,456]'" would process
FILE1.INC[123,456].
$skip $para -10
&QUIT&\\\\\\causes FMT to terminate immediately.
The command line containing the QUIT command will not be otherwise processed.
FMT can also be terminated by entering a blank command line.
$indent -10 $skip 4 $need 5
&Automatic Printing of the Listing File&
$skip 2 $para 5
The output file specification LPT: has a special significance.
Any files written to LPT: will automatically be submitted to QUEUE to be
printed when FMT terminates.
All files printed by a single execution of FMT will be printed in a single
print request.
The job name of the request in the print queue will be ###FMT, where ### is
the job number that FMT is being run under.
If the user has a SWITCH.INI file, the switches for the print request will
be taken from the PRINT line in the file.
If there is no PRINT line, the QUEUE line will be used.
If there is neither a PRINT line nor a QUEUE line, no print switches will
be used.
However, this default condition may be changed with the following options:
$skip 2 $indent +10 $para -10
&QUE&UE:name
$para
will cause the switches to be taken from the PRINT:name line in SWITCH.INI,
if there is one, or from the QUEUE:name line otherwise.
$skip $para -10
&QUE&UE:"switches"
$para
specifies the switches to be used in the print request.
Note that if this form of the QUEUE option is used, then the SWITCH.INI file
will be ignored.
There is no way to get some switches from SWITCH.INI, and others from the QUEUE
option.
$skip $para -10
&QUE&UE\\\\\with no parameter will restore the default QUEUE switches:
that is, the ones from the PRINT or QUEUE line in SWITCH.INI.
$skip
Unlike the other options described, the QUEUE option remains in effect for
the entire job.
Since all files are printed in a single request, only a single set
of switches may be specified.
The last QUEUE option specified before the end of the job is the one which
will be obeyed.
$skip 4 $need 5 $indent -10
&Option Specification and Default Options&
$skip 2 $para 5
Any option which is not specified on a command line will be taken from a
default option list.
The initial default options are:
$skip $indent +5 $verb
/LIST,COLUMN=49,UPPERCASE,NODECAP,LENGTH=45,NOXREF,NOAPPEND,
   DEFAULT="DSK:.PAS[,]"
$skip $indent -5 $just
If an input-file name is not specified on a command line, then any options or
output-file name specified on the command line become new default options.
For example, the command line "LPT:=/XREF,PASS" would cause all subsequent
files to be printed on the line printer with a table of contents and no
upper/lower case translation.
The command line ".FIL=/DEFAULT:'.EXT'" would change the default input file
extension for all subsequent files from .PAS to .EXT, and would change the
default output file extension to .FIL.
Such an explicit output file extension overrides any implicit extension from
a LIST, EDIT, or NEW option.
$skip $para 5
When FMT begins execution, it looks for a FMT line in the SWITCH.INI file.
If there is such a line, then FMT processes it and takes the option
settings from that line as its default settings.
For example, if SWITCH.INI contained the line "FMT LPT:=/XREF",
it would have the same effect as if the user typed "LPT:=/XREF" as the first
command line.
The following additional options are provided:
$skip $indent +10 $para -10
&OPT&ION=name
$para
will cause FMT to look for a FMT:name line in SWITCH.INI and take the
option settings from that line.
Like any other option, OPTION may be specified on a command line with an
input-file name (in which case it applies only to the one command line) or
on a command line without an input-file name (in which case any option settings
from the specified SWITCH.INI line become new default settings).
$skip $para -10
&NOO&PTION\\resets all options to the initial default options listed above.
This option may be used to cancel the current default settings on a single
command line.
It may also be used on the first command line to suppress the effects of
the SWITCH.INI file lookup that FMT normally performs.
$skip 4 $need 5 $indent -10
&Miscellaneous Notes&
$skip 2 $para 5
(1)\ In edit mode, FMT always replaces as many leading spaces as possible
with tabs.
Spaces within lines are not affected, but tabs are used to align trailing
comments.
$skip $para 5
(2)\ The keyword in a directive line is always translated to uppercase.
This ensures, for example, that a $PAGE directive will be recognized as
a page delimiter by the EDT "bound" command.
  