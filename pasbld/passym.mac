UNIVERSAL PASSYM - PASCAL RUN-TIME UNIVERSAL FILE
;
; THIS FILE CONTAINS ALL DEFINITIONS RELEVENT TO THE
; PASCAL RUN-TIME PACKAGE
;


;
; REGISTERS
;
	AC0=0
	AC1=1
	REG=2
	REG1=3
	REG2=4
	REG3=5
	REG4=6
	REG5=7
	REG6=10
	BFPNT=11		;POINTS TO BUFFER DURING I/O OPERATIONS
	BASIS=16		;POINTS TO CURRENT STACK FRAME
	P=17			;THE CLASSIC STACK POINTER
	TOPP==17		;THE PASCAL RUN-TIME SYSTEM USES THIS FUNNY NAME
	FV==4			;OFFSET OF FUNCTION VALUE IN FUNCTION

;
; OPDEFS
;
	OPDEF	RETURN	[POPJ P,]
	OPDEF	$CALL	[PUSHJ P,]
	OPDEF	CALL	[PUSHJ P,]
	OPDEF	PJRST	[JRST]
	OPDEF	NOP	[JFCL]	; A GOOD CANONICAL NO-OPERATION CODE



;
; DESCRIPTION OF FILE BLOCK
;

	FILPTR==0
	FILEOF==1
	FILEOL==2
	FILOPN==3
	FILLKP==4
	FILENT==5
	FILIN==6
	FILOUT==7
	FILCLS==10
	FILSTA==11	;OPEN BLOCK: STATUS
	FILDEV==12	;	DEVICE
	FILBFH==13	;	BUFFER HEADER POINTER
	FILNAM==14	;LOOKUP/ENTER BLOCK: NAME
	FILEXT==15	;		:EXTENSION
	FILPRO==16	;		:PROTECTION
	FILPPN==17	;		PPN
	FILCHN==20	;I/O CHANNEL NUMBER (LEFT HALF)
	FILBUF==20	;BUFFER BLOCK ADDRESS (RIGHT HALF)
	FILLNK==21	;LINK IN LIST OF FILEBLOCKS
	FILRWF==22	;READ/WRITE FLAG
	FILLNR==23	;IF ASCII MODE - LINENR IN ASCIICHARACTERS
	FILCNT==24	;LH=IF BINARY MODE : NEGATIVE	NUMBER OF WORDS IN COMPONENT
			;    IF ASCII MODE  : CHARACTERCNT IN LINE AND TAB INDICATOR
			;RH= ADDRESS OF FIRST WORD IN COMPONENT
	FILCMP==25	;FIRST WORD OF COMPONENT

;
; BUFFER BLOCK DESCRIPTION
;
	BUFUCT==0	;USAGE COUNT (OF FILE TABLES SHARING FILE)
	BUFBFH==1	;BUFFER HEADER (3 WORDS)
	BUFBTP==2	;BYTE POINTER
	BUFBTC==3	;BYTE COUNT
	BUFBFR==4	;ACTUAL BUFFERS START HERE
	SUBTTL	TWO-SEGMENT MANAGEMENT MACROS

;MACROS TO PUT CODE IN THE LOW OR HIGH SEGMENT

	DEFINE $RELOC(A)<
	SALL
	TWOSEG	400000
	RELOC	400000
	LOCFLG==-1		;0=LOW SEG
				;-1=HIGH SEG
				;+1=ABSOLUTE LOW SEGMENT
	HILOC==400000
	LOLOC==0
	ABSLOC==0
>;END OF $RELOC

	DEFINE $LOW(A)<
	IFL LOCFLG,<HILOC==.
		LOCFLG==0
		RELOC	LOLOC>
	IFG LOCFLG,<ABSLOC==.
		LOCFLG==0
		RELOC	LOLOC>
>;END OF $LOW
	DEFINE $HIGH(A)<
	IFE LOCFLG,<LOLOC==.
		LOCFLG==-1
		RELOC	HILOC>
	IFG LOCFLG,<ABSLOC==.
		LOCFLG==-1
		RELOC	HILOC>
>;END OF $HIGH

	DEFINE $ABS(A)<
	IFL LOCFLG,<HILOC==.
		LOCFLG==1
		LOC	ABSLOC>
	IFE LOCFLG,<LOLOC==.
		LOCFLG==1
		LOC	ABSLOC>
>;END OF $ABS

	DEFINE	$LIT<
	$HIGH
	LIT
>;END OF $LIT
	SUBTTL	DEFINITIONS FOR STAND-ALONE PASCAL

;
; FLAG DEFINING STAND-ALONE STATE
;
	FTALONE=0

;
; ADDITIONAL REGISTER DEFINITIONS
;
	T1=3
	T2=T1+1
	T3=T2+1
	T4=T3+1

;
; ADDITIONAL MACROS
;
	DEFINE	PAUSE,<HALT .+1>
	DEFINE	FREEZE,<HALT .>
	DEFINE	ABORT,<JSR ABORT.##>

;
; OPDEFS
;
	IFE	FTALONE,<OPDEF PORTAL [JRST 1,]>
	IFN	FTALONE,<OPDEF PORTAL [JRST   ]>

;
; SA-10 SYMBOLS
;
	SABASE=760		; SA-10 BASE ADDR

;
; CONFIGURATION DATA
;
	FTKI10=-1
	IFNDEF FTKA10,<FTKA10=0>
	IFNDEF FTKI10,<FTKI10=0>
	IFNDEF FTKL10,<FTKL10=0>

;
; macro to call single precision fortran library routine
;
	define .fortran (routine),<
	extern	routine
	extern	fort1.

	movei	ac0,routine
	jrst	fort1.
>

;
; macro to call double precision fortran library routine
;
	define	.dfortran (routine),<
	extern	routine
	extern	fort2.

	movei	ac0,routine
	jrst	fort2.
>
	END
