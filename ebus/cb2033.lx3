			:
			:	Carl A Baltrunas,   TTE 442	Lab #3
			:	Source file for SLOT #1
			:
			
				RA	0			: Reset radix (some libraries don't)
			
000001			MAXBIT	EQ	(MAXPRT+20-1)/20	: Max ports as bits for words
000004			WRDSIZ	EQ	4			: Bytes per word
			
00000D			CmCr	EQ	0D			: Carriage return
000007			CmBELL	EQ	07			: Bell
00001B			CmESC	EQ	1B			: Escape
			
000043			CmCONN	EQ	43			: "C"onnect
000048			CmHELP	EQ	48			: "H"elp
00004D			CmMSGS	EQ	4D			: "M"essage
000051			CmQUIT	EQ	51			: "Q"uit
000054			CmTIME	EQ	54			: "T"ime of day
000057			CmWHAT	EQ	57			: "W"hat
			
			0000AE				SEG	A.DATA
			
			: Constant data storage
			
0000AE	00			BC	0			: Dummy
0000AF	0E 		HUPMSG	BC	0E			: Msg byte count
0000B0	1000 000A 0004 		HC	1000,HST0,HPRT0,0,0	: Host up message (type 10)
	0000 0000 	
0000BA	0099 0000 		HC	PRODID,0		: Prod ID & filler for msg
0000BE	00			BC	0			: Dummy
0000BF	08 		HSTOOP	BC	8			: Msg byte count
0000C0	0A00 000A 0000 		HC	0A00,HST0,0,0		: Host port availability (none)
	0000 		
0000C8	00			BC	0			: Dummy
0000C9	08 		HSTOKP	BC	8			: Msg byte count
0000CA	0A00 000A 0004 		HC	0A00,HST0,HPRT0,0	: Host port availability
	0000 		
			
0000D2	2A0A 0D0D C7A7 	WELMSG	SC	\"0A"0D"0DG'Day Bubba!"0A"0DWelcome to Carl's Host"0A"0D"0D\
	C4E1 F9A0 C2F5 	
	E2E2 E1A1 0A0D 	
	D7E5 ECE3 EFED 	
	E5A0 F4EF A0C3 	
	E1F2 ECA7 F3A0 	
	C8EF F3F4 0A0D 	
	0D		
0000FD	0A 0A0D D5F3 E5	UIDMSG	SC	\"0A"0DUserid: \
	F2 E9E4 BAA0 	
000108	050A 0DBD BEA0 	PMTMSG	SC	\"0A"0D=> \
00010E	100A 0DC7 EFA0 	MxBYE	SC	\"0A"0DGo Away!!!"0A"0D"0A"0D\
	C1F7 E1F9 A1A1 	
	A10A 0D0A 0D	
00011F	2A 0A0D D1F5 E9	MxALQ	SC	\"0A"0DQuit already in progress! Go Away!!!"0A"0D"0A"0D\
	F4 A0E1 ECF2 E5	
	E1 E4F9 A0E9 EE	
	A0 F0F2 EFE7 F2	
	E5 F3F3 A1A0 C7	
	EF A0C1 F7E1 F9	
	A1 A1A1 0A0D 0A	
	0D 		
00014A	0E0A 0DD4 E9ED 	MxTIME	SC	\"0A"0DTime now is \
	E5A0 EEEF F7A0 	
	E9F3 A0		
000159	01 07		MxBELL	SC	\"07\			: Ding!
00015B	02 0A0D 	MxCRLF	SC	\"0A"0D\
			
00015E	019E 		MxDET	HC	019E			: Detach message
000160	019F 		MxZAP	HC	019F			: Zap message
000162	01A0 		MxEBP	HC	01A0			: Enable back-pressure message
000164	01A1 		MxDBP	HC	01A1			: Disable back-pressure message
000166	01A2 		MxGOB	HC	01A2			: Character gobbler message
000168	01A3 		MxFINP	HC	01A3			: Flush input message
00016A	01A4 		MxBLB	HC	01A4			: Black ball message
00016C	01A5 		MxGRB	HC	01A5			: Grey ball message
00016E	01A6 		MxSDEM	HC	01A6			: Start Deferred Echo Mode
000170	01A7 		MxFDEM	HC	01A7			: Finish Deferred Echo Mode
000172	01AA 		MxGB	HC	01AA			: Green ball message
000174	01AB 		MxRB	HC	01AB			: Red ball message
000176	01AC 		MxYB	HC	01AC			: Yellow ball message
000178	01AD 		MxOB	HC	01AD			: Orange ball message
			
00017A	0010 		UIDSIZ	HC	4*WRDSIZ		: Words for user id entry
						: Variable data
			
00017C			TCLASS	BS	MAXPRT			: Throughput class of port
00018C			CCTYPE	BS	MAXPRT			: CCT for each port
00019C			NFROM	HS	MAXPRT			: Node of origin for each port
0001BC			HFROM	HS	MAXPRT			: Host of origin for each port
			
0001DC			MsPORT	HS	1			: Current message port
0001DE			MsTYPE	HS	1			: Current message type
0001E0			CHRCNT	HS	1			: Place to hold character count
0001E4			LOGINS	WS	1			: Count number of active logins
			
			: Flags
			
0001E8			LOGGED	WS	MAXBIT			: Bit array - Logged-in
0001EC			LOGDET	WS	MAXBIT			: Bit array - DET sent
0001F0			NEEDID	WS	MAXBIT			: Bit array - need Id
0001F4			NEEDCR	WS	MAXBIT			: Bit array - need CR
			
0001F8			PORTSC	WS	MAXPRT*UIDSIZ		: Storage for port id's
			
006078	0AC8 C8BA CDCD 	SvTIME	SC	\HH:MM:SS"0A"0D\		: Time of day
	BAD3 D30A 0D	
			
			010558				SEG	A.CODE
			
			: Program begins here, entry defined by START.LIB
			: Output initial host-up message to the SUP
			
010558	2420 		START	LIS	R2,0			: RPORT = 0
01055A	E630 4000 00AF 		LA	R3,HUPMSG,,		: Setup msg address
010560	4150 4001 0070 		JAL	R5,OCM,,		: Send message
			
			: Main message input loop, all routines return here one way or another
			
010566	E100 0000 	NOMSGS	SVC	DISMIS			: Done
01056A	4140 4001 0000 	ISMSG	JAL	R4,LOOK,,		: Look for a message (FRING)
010570	4300 FFF2 		  J	NOMSGS			: No messages
			
			: R1 condition codes setup. for message port (by FRING)
			: Messages with RPORT=0 can be tested at this point
			
010574	4330 8030 		JE	ZFLUSH			: RPORT 0 Msg!  Flush it
			
			: Save RPORT and message TYPE for this message for later
			
010578	4010 01DC 		STH	R1,MsPORT		: Save current port
01057C	4020 01DE 		STH	R2,MsTYPE		: Save current type
010580	0822 			LR	R2,R2			: Set condition codes for type
010582	4330 8066 		JE	ISNDL			: Got a needle?
			
			: Decide whether this is control or data
			
010586	C920 009E 		CHI	R2,09E			: Control or data message?
01058A	4210 814A 		JL	MsDATA			: Data! -- Process the data
01058E	C920 009F 		CHI	R2,09F			: ZAP? (received on port)
010592	4330 8026 		JE	MsIZAP			: Yes, incoming zap!
			
			: Come here to flush non-rport=0 messages
			: before returning to main loop
			
010596	4820 01DE 	MFLUSH	LH	R2,MsTYPE		: Remember type
01059A	D302 400F 0028 		LB	R0,LENGTH,R2,		: Get RPORT=N index byte
0105A0	4140 FAB2 		JAL	R4,FLUSH		: Flush message
0105A4	4300 FFC2 		J	ISMSG			: Any more messages
			
			: Come here to flush rport=0 messages
			: before returning to main loop
			
0105A8	4860 400F 0026 	ZFLUSH	LH	R6,LP0LST,,		: Get RPORT=0 index table
0105AE	D306 420F 0000 		LB	R0,NRATE,R6,R2		: NRATE+TABLE(R2) Get message size
0105B4	4140 FA9E 		JAL	R4,FLUSH		: Flush message
0105B8	4300 FFAE 		J	ISMSG			: Any more messages
			
						: Control message code:  Handle Circuit-ZAP
			
0105BC	4820 01DC 	MsIZAP	LH	R2,MsPORT		: Get current port
0105C0	7620 01EC 		RBT	R2,LOGDET		: Clear DET bit for this port
0105C4	7620 01E8 		RBT	R2,LOGGED		: Clear logged-in bit
0105C8	E630 0160 		LA	R3,MxZAP		: Get zap message
0105CC	4150 4001 0070 		JAL	R5,OCM,,		: Send it <Whack>
0105D2	2420 			LIS	R2,0			: Tell the supervisor
0105D4	E630 00C9 		LA	R3,HSTOKP		: host no longer
0105D8	4150 4001 0070 		JAL	R5,OCM,,		: out of ports
0105DE	4800 01E4 		LH	R0,LOGINS		: Decrement login count
0105E2	2701 			SIS	R0,1			:  by 1
0105E4	4000 01E4 		STH	R0,LOGINS		: to keep us honest
0105E8	4300 FFAA 		J	MFLUSH			: Return through flushing code
			
						: We have a needle, print startup (welcome) message to port and fall through
			
0105EC	4820 4000 01DC 	ISNDL	LH	R2,MsPORT,,		: Get RPORT
0105F2	7620 01EC 		RBT	R2,LOGDET		: Clear DET sent bit
0105F6	7620 01F4 		RBT	R2,NEEDCR		:  and CR needed bit
0105FA	4140 4001 0036 		JAL	R4,GETH,,		: Get 00+Messagelength
010600	0860 			LR	R6,R0			: Remember length (bytes)
010602	4140 4001 0046 		JAL	R4,GETW,,		: Grab invoice Number (to throw away)
010608	4140 4001 0046 		JAL	R4,GETW,,		: Grab Dest-host, Orig Node
01060E	4002 4000 019C 		STH	R0,NFROM,R2,		: Store NODE of origin
010614	4140 4001 0036 		JAL	R4,GETH,,		: Grab HOST of origin
01061A	4002 4000 01BC 		STH	R0,HFROM,R2,		: Store it
010620	4140 4001 0036 		JAL	R4,GETH,,		: Get port of origin (logical)
010626	4140 4001 0046 		JAL	R4,GETW,,		: Get xxxx, xx Throughput class
01062C	D202 4000 017C 		STB	R0,TCLASS,R2,		: Store it (byte)
010632	4140 4001 0036 		JAL	R4,GETH,,		: IIX + Destination node
010638	4140 4001 0026 		JAL	R4,GETCH,,		: Get Circuit Control Type
01063E	D202 4000 018C 		STB	R0,CCTYPE,R2,		: Store for later
010644	4140 4001 0026 		JAL	R4,GETCH,,		: Finish word
01064A	CB60 0014 		SHI	R6,5*4			: Decrement count by 5 full words
01064E	0806 			LR	R0,R6			: Get remaining byte count
010650	4140 4001 0056 		JAL	R4,FLUSH,,		: Flush needle
			
			: Instead of prompting for Userid, later just use the username from the needle
			
010656	4820 4000 01DC 		LH	R2,MsPORT,,		: Get current port
01065C	E630 4000 00D2 		LA	R3,WELMSG,,		: Get greeting message
010662	4150 4001 008C 		JAL	R5,OCS,,		: Print message
010668	4810 01E4 		LH	R1,LOGINS		: Get login count
01066C	2611 			AIS	R1,1			:   increment
01066E	4010 01E4 		STH	R1,LOGINS		:   and store
010672	C910 0004 		CHI	R1,HPRT0		: Reached port limit?
010676	4210 800C 		  JL	WANTID			: No, keep going
01067A	2420 			LIS	R2,0			: Tell the supervisor
01067C	E630 00BF 		LA	R3,HSTOOP		: host out of ports
010680	4150 4001 0070 		JAL	R5,OCM,,		: so no more circuits
						: Ask the user for an ID - This need not be unique
			
010686	4820 01DC 	WANTID	LH	R2,MsPORT		: Get current port
01068A	7520 01F0 		SBT	R2,NEEDID		: Set need ID bit for this port
01068E	7520 01F4 		SBT	R2,NEEDCR		:  and wait for a CR too
010692	0832 			LR	R3,R2			: Copy for offset
010694	2731 			SIS	R3,1			: Decrement for 0 offset
010696	4C30 017A 		MH	R3,UIDSIZ		: Multiply by entry size
01069A	2410 			LIS	R1,0			: Set to initial constant
01069C	4013 4000 01F8 		STH	R1,PORTSC,R3,		:  for user id
0106A2	E630 00FD 	ASKUID	LA	R3,UIDMSG		: Get user id message
0106A6	4150 4001 008C 		JAL	R5,OCS,,		: Print request
0106AC	4300 FEBA 		J	ISMSG			: Any others
			
			: Send a prompt to the currently selected port
			
0106B0	4820 01DC 	PRMPT	LH	R2,MsPORT		: Get RPORT
0106B4	7420 01F4 		TBT	R2,NEEDCR		: Need a CR before re-prompt?
0106B8	4230 FEAE 		  JN	ISMSG			: Yes, don't say a thing
0106BC	7420 01F0 		TBT	R2,NEEDID		: Waiting for user id?
0106C0	4230 FFDE 		  JN	ASKUID			: Yes, ask instead of prompt
0106C4	7520 01F4 		SBT	R2,NEEDCR		: Say we need a CR
0106C8	E630 4000 0108 		LA	R3,PMTMSG,,		: Get prompt message
0106CE	4150 4001 008C 		JAL	R5,OCS,,		: Print message
0106D4	4300 FE92 		J	ISMSG			: Any more messages
						: Received a data message.  For this exercise, we are looking for
			: a particular command, sans case, sans parity:
			:
			:	C = Connect to another line (echo on both)
			:	H = Help
			:	M = Message another line (send one time message)
			:	Q = Quit, teardown circuit and wait for a new login
			:	T = Print daytime in local time zone
			:	W = What lines are active and Who is on-line
			:
			:	any other character causes a bell
			:
			
0106D8	4140 F94A 	MsDATA	JAL	R4,GETCH		: Get count of characters (MsType)
0106DC	4000 01E0 		STH	R0,CHRCNT		: Copy byte count to loop register
0106E0	4820 01DC 		LH	R2,MsPORT		: Get current port number
0106E4	7420 01F0 		TBT	R2,NEEDID		: Waiting for UserId?
0106E8	4230 8058 		  JN	MuDATA			: Yes, get user Id
0106EC	4140 4001 0026 	MsLOOP	JAL	R4,GETCH,,		: Get data byte
0106F2	4140 4001 0874 		JAL	R4,CSEVEN,,		: Clip it to 7 bits (upper case)
0106F8	C900 0051 		CHI	R0,CmQUIT		: Do we want to quit?
0106FC	4330 80B0 		JE	CxQUIT			: Yes
010700	C900 0054 		CHI	R0,CmTIME		: Do we want the time?
010704	4330 80EE 		JE	CxTIME			: Yes
010708	C900 0057 		CHI	R0,CmWHAT		: Do we want to know what?
01070C	4330 811E 		JE	CxWHAT
010710	C900 000D 		CHI	R0,CmCR			: A Return?
010714	4230 801A 		JN	MsUNK			: No, unacceptable -- beep
010718	4820 01DC 		LH	R2,MsPORT		: Get current port number
01071C	7620 01F4 		RBT	R2,NEEDCR		: No longer waiting for CR
010720	4800 01E0 	MsNEXT	LH	R0,CHRCNT		: Get characters left
010724	2701 			SIS	R0,1			: Decrement loop counter
010726	4220 FFC2 		JG	MsLOOP			: More characters, go get em
01072A	4140 F92A 	MsDONE	JAL	R4,ELIR			: None left, fixup iring index
01072E	4300 FF7E 		J	PRMPT			: New prompt and go
			
			: All messages reaching here contain unknown characters
			: Ignore the rest of the message (later until we see a CR)
			
010732	4820 01DC 	MsUNK	LH	R2,MsPORT		: Get current port
010736	E630 0159 		LA	R3,MxBELL		: Get bell message
01073A	4150 4001 008C 		JAL	R5,OCS,,		: Send message
010740	4300 FFE6 		J	MsDONE			: We are done
			
						: All messages here are for user id characters
			: Once the buffer pointer is setup, up to 12 bytes are stored
			: as String Constants for use with OCS.
			
010744	4820 01DC 	MuDATA	LH	R2,MsPORT		: Get current port
010748	0882 			LR	R8,R2			: Copy for offset
01074A	2781 			SIS	R8,1			: Decrement for 0 offset
01074C	4C80 017A 		MH	R8,UIDSIZ		: Multiply by entry size
010750	D378 4000 01F8 		LB	R7,PORTSC,R8,		: Get user id address size
010756	4140 4001 0026 	MuLOOP	JAL	R4,GETCH,,		: Get a byte
01075C	C400 007F 		NHI	R0,07F			: Clip it to 7 bits (upper case)
010760	C900 001B 		CHI	R0,CmESC		: An ESCape
010764	4330 FF1E 		  JE	WANTID			: Yes, reset and try again
010768	C900 000D 		CHI	R0,CmCR			: A Return?
01076C	4330 8030 		  JE	MuTEND			: Yes, finish name
010770	C970 000C 		CHI	R7,$A12			: Allow up to 12
010774	4310 8008 		  JGE	MuNEXT			: Overflow, just ignore for now
010778	2671 			AIS	R7,1			: increment byte (count) pointer
01077A	D208 4700 01F8 		STB	R0,PORTSC,R8,R7		: Store next byte
010780	4800 01E0 	MuNEXT	LH	R0,CHRCNT		: Get characters left
010784	2701 			SIS	R0,1			: Decrement loop counter
010786	4220 FFCC 		JG	MuLOOP			: More characters, go get em
01078A	4880 01DC 	MuDONE	LH	R8,MsPORT		: Get current port
01078E	2781 			SIS	R8,1			: Decrement for 0 offset
010790	4C80 017A 		MH	R8,UIDSIZ		: Multiply by entry size
010794	D278 01F8 		STB	R7,PORTSC,R8		: Store counter
010798	4140 F8BC 		JAL	R4,ELIR			: None left, fixup iring index
01079C	4300 FF10 		J	PRMPT			: New prompt and go
			
0107A0	7620 01F0 	MuTEND	RBT	R2,NEEDID		: Set Id is complete
0107A4	7620 01F4 		RBT	R2,NEEDCR		:  and CR was seen
0107A8	7520 01E8 		SBT	R2,LOGGED		: We are logged completely in
0107AC	4300 FFDA 		J	MuDONE			: All done, finish up and return
			
						: QUIT - Mark we are in progress (check if already in progress)
			:	 and initiate d cycle
			
0107B0	4820 01DC 	CxQUIT	LH	R2,MsPORT		: Get current port
0107B4	7420 01EC 		TBT	R2,LOGDET		: Check in array (in progress)?
0107B8	4230 802C 		  JN	CxALQ			: Quit in progress
0107BC	E630 010E 		LA	R3,MxBYE		: Get Goodbye message
0107C0	4150 4001 008C 		JAL	R5,OCS,,		: Send it
0107C6	4820 01DC 		LH	R2,MsPORT		: Get port again
0107CA	E630 015E 		LA	R3,MxDET		: Get detach message
0107CE	7520 01EC 		SBT	R2,LOGDET		: Set in detach array
0107D2	4150 4001 0070 		JAL	R5,OCM,,		: Send detach
0107D8	2420 			LIS	R2,0			: Tell the supervisor
0107DA	E630 00C9 		LA	R3,HSTOKP		: host no longer
0107DE	4150 4001 0070 		JAL	R5,OCM,,		: out of ports
0107E4	4300 FF38 		J	MsNEXT			: Get next character
			
			: %OOPS - Already waiting for OB from this port
			
0107E8	E630 011F 	CxALQ	LA	R3,MxALQ		: Get message text
0107EC	4150 4001 008C 		JAL	R5,OCS,,		: Print it
0107F2	4300 FF2A 		J	MsNEXT
			
			
			
			: TIME - Obtain current daytime and print t for the user
			
0107F6	5830 400F 000C 	CxTIME	L	R3,GMT,,		: Get current daytime
0107FC	2448 			LIS	R4,8			: for HH:MM:SS format
0107FE	E650 4000 6079 		LA	R5,SvTIME+1,,		: Indicate storage
010804	4160 4001 03DA 		JAL	R6,TMSTMP,,		: Get date string
			
01080A	4820 01DC 		LH	R2,MsPORT		: Get current port
01080E	E630 4000 014A 		LA	R3,MxTIME,,		: Get time message
010814	4150 4001 008C 		JAL	R5,OCS,,		: Print it
01081A	4820 01DC 		LH	R2,MsPORT		: Get current port
01081E	E630 4000 6078 		LA	R3,SvTIME,,		: Get actual time string
010824	4150 4001 008C 		JAL	R5,OCS,,		: Print it
01082A	4300 FEF2 		J	MsNEXT			: Return to loop
			
			
						: WHAT - Tell what lines are available
			
01082E	41D0 8054 	CxWHAT	JAL	R13,TCRLF		: Free CRLF
010832	2491 			LIS	R9,1			: Start with first port
010834	7490 01E8 	CxWLOP	TBT	R9,LOGGED		: Is it logged?
010838	4330 8026 		  JE	CxWNXT			: No, try next
01083C	0889 			LR	R8,R9			: Copy for offset
01083E	2781 			SIS	R8,1			: Decrement for 0 offset
010840	4C80 017A 		MH	R8,UIDSIZ		: Multiply by entry size
010844	D338 4000 01F8 		LB	R3,PORTSC,R8,		: Get entry size
01084A	4330 8014 		  JE	CxWNXT			: Zero, so skip this rot
01084E	E638 4000 01F8 		LA	R3,PORTSC,R8,		: Get user id address
010854	4820 01DC 		LH	R2,MsPORT		: Get port (gets wiped out)
010858	4150 4001 008C 		JAL	R5,OCS,,		: Output string
01085E	41D0 8024 		JAL	R13,TCRLF		: Output a CR
010862	2691 		CxWNXT	AIS	R9,1			: Increment port
010864	C990 0010 		CHI	R9,MAXPRT		: Reached the limit?
010868	4320 FFC8 		JLE	CxWLOP			: No, check it
01086C	41D0 8016 		JAL	R13,TCRLF		: Print extra crlf
010870	4300 FEAC 		J	MsNEXT			: And return
			
			
			: Utility routines: CSEVEN, TCRLF
			
010874	C400 007F 	CSEVEN	NHI	R0,07F			: Only look at 7 bits
010878	C900 0060 		CHI	R0,60			: Check for lower-case range
01087C	4210 8004 		JL	C7CASE			: No, skip subtraction
010880	CB00 0020 		  SHI	R0,20			: Convert to upper case
010884	0304 		C7CASE	JR	R4			: Return
			
			
010886	4820 01DC 	TCRLF	LH	R2,MsPORT		: Get current port
01088A	E630 015B 		LA	R3,MxCRLF		: Get message
01088E	4150 4001 008C 		JAL	R5,OCS,,		: Print it
010894	030D 			JR	R13			: Return
   