                                                                  June 23, 1986







                            ***** ****  *   *  ****
                            *     *   * *   * *    
                            ****  ****  *   *  *** 
                            *     *   * *   *      
                            ***** ****   ***  **** 

                         *****     ****       ****   
                         *         *   *     *       
                         ****      ****       ***    
                         *         *  *          *   
                         *****  *  *   *  *  ****   *

                            PDP-10 E-BUSS INTERFACE
                       EXTERNAL REFERENCE SPECIFICATION

                                    TYMNET
                        NETWORK TECHNOLOGY DEVELOPMENT
                                 June 23, 1986

















     ====================================================================
     |   Tymnet,  Inc.'s  proprietary  rights  are  included  in  the   |
     |   information disclosed herein.   The recipient,  by receiving   |
     |   this document,  agrees  that neither this  document nor  the   |
     |   information  disclosed  herein nor any part thereof shall be   |
     |   reproduced or transferred to  other  documents  or  used  or   |
     |   disclosed  to  others  for  manufacturing  or  for any other   |
     |   purpose except  as  specifically authorized  in  writing  by   |
     |   Tymnet, Inc.                                                   |
     ====================================================================




                           External Reference Specification            EBUS.ERS
                                                                  June 23, 1986







                                   TABLE OF CONTENTS

        Section                                                            Page



        1.   Introduction                                                     1


        2.   Configuration                                                    2
          2.1   Configuring EBUS                                              2
          2.2   Configuring IPI                                               2
             2.2.1    NPORT Parameter                                         2
             2.2.2    EBDUMP Parameter                                        3


        3.   IPI Operations Monitor                                           4
          3.1   Help Command                                                  4
          3.2   Code Command                                                  4
          3.3   QUIT Command                                                  5
          3.4   EXIT Command                                                  5
          3.5   V Command                                                     5
          3.6   RDUMP Command                                                 5
          3.7   DUMP Command                                                  6
          3.8   STATE Command                                                 6


        4.   Diagnostic Tools                                                 7
          4.1   Front-Panel Display                                           7
             4.1.1    Selecting the Display                                   7
             4.1.2    The EBUS Display                                        8

          4.2   Hardware Diagnostic Routines                                  9
             4.2.1    $7C00 Test                                              9
             4.2.2    $7D00 Test                                              9
             4.2.3    $7E00 Test                                             10


                                     APPENDICES
                                     ==========


        I.   Release-dependent Changes                                       12
          I-1   Pre-existing Anomalies                                       12
          I-2   Version 2.00                                                 12
          I-3   Version 2.01                                                 13



                           External Reference Specification            EBUS.ERS
                                                                  June 23, 1986


        II.  Base-initiated Crashes                                          15
          II-1  "Normal" Crashes                                             15
          II-2  "Fatal" Crashes                                              15


        III. Summary of Base-to-Host Messages                                16


        IV.  Summary of Host-to-Base Messages                                17


                                      INDEX
                                      =====                                  18









































                           External Reference Specification            EBUS.ERS
        Introduction                                              June 23, 1986






                                   1 -  Introduction


             This document  is primarily  oriented toward  external interfaces,
        and will not address hardware or implementation in detail.

             The physical configuration can be represented as:

        ENGINE/ |       ---------       ---------       ---------
        TYMNET-2| ----- |  XPI  | ----- |Blk Box| ----- | Host  |
        /ISIS   |       ---------       ---------       ---------

             TYMNET-2 / ISIS /ENGINE technology is well defined, and documented
        elsewhere (see ISIS2.DOC, and ENGINE.DOC for details).

             XPI  is  a  M68000-based  processor  peripheral  to   the  Engine,
        currently in use for MXP,  and intended as the vehicle for  many future
        products;  thus it also is easily maintainable.  Because it  is closely
        coupled  to  the  Engine  (via  direct  DMA  transfers),  it   is  also
        susceptible to bandwidths higher  than can be provided by  the Varians.
        Being an  independent peripheral  processor, it is  capable of  a great
        deal of functionality without loading down its resident Engine.

             The "Black Box" is the identical hardware once used on  the Varian
        Bases.

























        1                  External Reference Specification            EBUS.ERS
        Configuration                                             June 23, 1986






                                  2 -  Configuration


             The PDP "base" (i) actually consists of a collection  of different
        products:  ISIS, IPI (the ISIS-slot resident interface code), EBUS (the
        interface  code  executing  in an  M68000),  and  the  "Black-box" (the
        physical interface between the PDP and the 68K).






                                 2.1  Configuring EBUS


             EBUS is released in the form of "object" (executable) code, and is
        thus not susceptible to any configuration parameters.






                                 2.2  Configuring IPI


             IPI is assembled using three files: the ".I" (initialization), the
        ".T"  (Tymfile  --  contains configuration  parameters),  and  the ".R"
        (source code) files.

             The Tymfile contains  only two parameters  (although it is  a good
        idea to include comments as to the usage and target machine):





                    2.2.1  NPORT Parameter

             NPORT is specified in the form:

        NPORT   EQ      $A 126          : Number of ports



        (i) "Base" is an obsolete  term, meaning a TYMNET interface to  a host;
        the term dates to the days when such an interface performed the network
        functions as well as the host-interface functions.

        2                  External Reference Specification            EBUS.ERS
        Configuration                                             June 23, 1986


               NOTE:   Currently, NPORT MUST BE CONFIGURED TO  MATCH THE
                       NUMBER  OF PORTS  ON  THE TARGET  HOST.   This is
                       because ISIS  assigns port number  for successive
                       circuits in descending order, so that the highest
                       port-number used will be NPORT-1.   EBUS performs
                       no  translation  on port  numbers,  so  the ISIS-
                       assigned port number will appear to the host.  If
                       the  host expects  less ports  than IPI  has been
                       configured  for,  it  will  "see"   port  numbers
                       outside of  the range it  is expecting,  and will
                       crash.  Conversely, if NPORT is set too  low, not
                       all   of  the   host-configured  ports   will  be
                       accessible.





                    2.2.2  EBDUMP Parameter

             EBDUMP is a switch which enables IPI to provide sufficient storage
        to  permit the  (manual) dumping  of 68K  memory into  the  Engine, for
        subsequent analysis.

             EBDUMP is specified in the form:

        EBDUMP  EQ      1               : 1 enables, 0 disables dumping

               NOTE:   Enabling EBDUMP forces  the IPI code  to allocate
                       an additional 256K bytes of memory to  record the
                       dumped 68K memory image.























        3                  External Reference Specification            EBUS.ERS
        IPI Operations Monitor                                    June 23, 1986






                              3 -  IPI Operations Monitor


             IPI has  a small  operations monitor,  accessible through  the DDT
        "?STAT" command.   To use  it, log into  the ISIS  Kernel host  for the
        particular slot, and type:

        ?STAT

             A  new  prompt  will  appear,  and  a  number  of  commands become
        available as an extension to DDT.  Some of these commands are:






                                   3.1  Help Command


             Typing "HELP" or "?" will elicit a list of commands supported.






                                   3.2  Code Command


             Typing "CODE" will elicit  a response describing the code,  of the
        form:

        EBUSOM...EBUS Operations Monitor

             This may be used to  verify that you have logged into  the correct
        slot.













        4                  External Reference Specification            EBUS.ERS
        IPI Operations Monitor                                    June 23, 1986


                                   3.3  QUIT Command


             Typing "QUIT" or "Q" will exit from ?STAT back to DDT.

               NOTE:   While  in  ?STAT,  the  normal  DDT  commands are
                       unavailable.   One must  quit ?STAT  in  order to
                       access these DDt commands.






                                   3.4  EXIT Command


             Typing "EXIT" or "EXI" will exit from the Kernel  host completely,
        and return your terminal to "Please Log In".






                                    3.5  V Command


             The "V" command displays the current versions numbers of  both IPI
        and EBUS.






                                  3.6  RDUMP Command


             Typing "RDUMP" will elicit one of two responses:

             Either "No register dump",  if there is no  meaningful information
        to display, or

             A dump  of the  Crash-code, PC,  and registers  saved at  the last
        crash of  EBUS.  This  display will  be labeled  according to  the EBUS
        register conventions.







        5                  External Reference Specification            EBUS.ERS
        IPI Operations Monitor                                    June 23, 1986


                                   3.7  DUMP Command


             If IPI assembly-switch EBDUMP has been enabled, typing "DUMP" will
        output  a  description of  the  MACSbug command  required  to  dump the
        contents of 68K memory into the Engine, for future analysis.

             If EBDUMP is not enabled, this command is not recognized.  Use the
        "HELP" command to verify if the capability is supported.






                                  3.8  STATE Command


             The STATE command displays the host state:

           o   If no host has ever been present, displays "No host attached";
           o   Else displays "Host NNN is SSS", where "NNN" is the decimal host
               number,  and  "SSS" is  one  of the  states  "Down",  "Shut", or
               "Answered";
               o   For the latter two cases, also displays number of circuits.





























        6                  External Reference Specification            EBUS.ERS
        Diagnostic Tools                                          June 23, 1986






                                 4 -  Diagnostic Tools


             The EBUS code contains a minor amount of code to aid in diagnosing
        hardware problems.

             MACSbug  is  also  available  within  the  68K;   While  useful, a
        detailed  discussion  of its  operation  is beyond  the  scope  of this
        document.






                               4.1  Front-Panel Display


             ISIS provides a capability for a slot to maintain a 16-bit display
        for the front-panel of the engine;  EBUS takes advantage of this.





                    4.1.1  Selecting the Display

             A particular slot's display  is selected by means of  the Engine's
        front-panel key-pad.  The  sequence "<2><RUN>" (i) selects  the display
        of slot 2's parameters.  These will appear in the right-most 16-bits of
        the display.

             In order  to view  the EBUS display,  it is  necessary to  know in
        which slot the EBUS code resides.

             The sequence "FEE", "F1E", "F0E", "F00" is displayed if a  slot is
        selected which has never been executed.

             The word "DEAD" is displayed if the slot has been manually halted.

             The word "D1ED" is displayed if the slot has been halted by ISIS.

             An attempt to display a non-existent slot defaults to  the display
        for slot 0 (the Node-code).



        (i) "<LABEL>" refers to the label on the individual keys; thus "<I><J>"
        means push the key labeled "I" followed by the key labeled "J".

        7                  External Reference Specification            EBUS.ERS
        Diagnostic Tools                                          June 23, 1986


                    4.1.2  The EBUS Display

             EBUS presents two different displays every four seconds:

           For 1 second, the display consists of two bytes of information:  the
               left byte is the host-number  (if known); the right byte  is the
               number  of active  ports (these  are displayed  in Hexadecimal).
               Thus, "2713" means  that this slot is  connected to host  27x (=
               39d), and currently has 13x (=19d) active ports.
           For 3  seconds (out  of four), a  "speedometer" is  displayed.  This
               consists of two bit-patterns superimposed:
               o   A pattern of 8 successive 1-bits followed by 8 0's regularly
                  cycles to the right, advancing by 1 bit-position every 1/10th
                  second, indicating that the slot-code is executing.
               o   An  additional  single  bit  is  exclusive-or'ed  with  this
                  pattern, and may remain fixed, or advance either to  the left
                  or  to the  right.   This bit  indicates  the synchronization
                  between the slot and EBUS.
               The right-most byte of this display contains the host  state, as
               known to EBUS:
                  0    Host Up/answered
                  1    Host Down
                  2    Host Up/shut
                  3    Host Gone (non-existant, not seen yet)

             Each execution of  slot-background a "semaphore"  is set to  -1 by
        the slot.  EBUS will not begin execution until it "sees"  the semaphore
        being less than  0.  EBUS then sets  the semaphore to +1,  and performs
        one execution of it's EXEC-loop.   When done, it sets the  semaphore to
        0.  The value of the semaphore at each  background-execution determines
        the direction of the bit movement.

             Synchronization  occurs  when  the EBUS  code  completes  one pass
        through it's  EXEC-loop per slot  background-execution.  In  this case,
        the bit will remain fixed.

             If EBUS takes longer than one back-ground cycle, but less  than 2,
        then the bit will advance to the left one position for each occurrence.

             If, however, the EBUS takes longer than two back-ground  cycles to
        execute,  the bit  will  advance to  the  right one  position  for each
        occurrence.  (And if the EBUS code stops, the bit will advance  so fast
        that it "blurs" out.)











        8                  External Reference Specification            EBUS.ERS
        Diagnostic Tools                                          June 23, 1986


                           4.2  Hardware Diagnostic Routines


             The EBUS code  contains several processes which  may be of  use to
        diagnose hardware problems.  Each  of these begins at a  fixed location
        mory, and may be accessed with MACSbug.





                    4.2.1  $7C00 Test

             This test  performs a  sequence of  Write followed  by Read  for a
        range of addresses in the PDP.  Instances of mismatch between  what was
        written and what was read are counted for later review.

             The registers used are:

           D0:  the high order 32 bits to write to pdp-10
           D1:  last 4 bits are the low order 4 bits to write to 10
           D2:  the start address of the test
           D3:  the ending address of the test
           D4:  the counter of mismatch between read and write
           D5:  the high order 32 bits read from 10's memory
           D6:  last 4 bits are the low order 4 bits read from 10

             After   initializing  these   registers  (using   MACSbug),  start
        execution at $7C00.





                    4.2.2  $7D00 Test

             This is a simple process to write repeatedly to PDP memory.

             The 68K registers must be initialized to:

           D0:  The data to be Written (left-justified) into the PDP;
           D1:  The values for AHI/DLO (low order byte);
           D2:  The Address to Write to.

             Then execution may be started at $7E00.









        9                  External Reference Specification            EBUS.ERS
        Diagnostic Tools                                          June 23, 1986


                    4.2.3  $7E00 Test

             This is a simple process to read repeatedly from PDP memory.

             The 68K registers must be initialized to:

           D2:  The Address to read from.

             Then execution may be started at $7F00.













































        10                 External Reference Specification            EBUS.ERS
                                                                  June 23, 1986



























                      *   ****  ****  ***** *   * ****  ***** *   *
                     * *  *   * *   * *     **  * *   *   *    * * 
                    ***** ****  ****  ****  * * * *   *   *     *  
                    *   * *     *     *     *  ** *   *   *    * * 
                    *   * *     *     ***** *   * ****  ***** *   *
























        11                 External Reference Specification            EBUS.ERS
        Release-dependent Changes                                 June 23, 1986






                        APPENDIX I.   Release-dependent Changes



             In the  course of  time, subsequent releases  of this  product may
        have occasion to change the usage of certain features,  especially with
        respect to  the Base-Host protocol.   These are described  herein, with
        reference to the version of EBUS when the usage-transition occurred.






                              I-1  Pre-existing Anomalies


             When  TYMNET converted  to TYMNET-II,  the ability  (and  need) to
        explicitly ask the Supervisor the time was lost;  this function happens
        automatically  whenever a  host reports  a change  in state.   Thus the
        host-to-base message  34d (request  SUP time) is  ignored by  the base;
        the message  which "triggers"  the request becomes  type 33d  (set host
        number), which also places the host into state "Shut".






                                   I-2  Version 2.00


             Version 2.00  contains a  number of changes,  all of  which should
        retain backward compatibility.  These include:

           o   Acceptance of  type 4 (reset-acknowledge)  from the host  to the
               base:  while this message is ignored, it is no longer considered
               an invalid message giving cause to crash the host.
           o   Expansion of the  types 3 and 4  (reset and reset-ack)  from the
               base to the host.  The additional fields included are:
               second byte:  0 or 1 --  indicates normal (0) or debug  (1);  if
                  1, the host should ignore pauses in base activity  (since the
                  base  may  be  temporarily  off-line  while  debugging  is in
                  progress);
               third byte:  The EBUS version number;
               fourth byte:  The EBUS version revision-level.
           o   Acceptance of type  51d (set new timeout)  from the host  to the
               base:   the  third and  fourth  bytes are  treated  as  a 15-bit


        12                 External Reference Specification            EBUS.ERS
        Release-dependent Changes                                 June 23, 1986


               quantity which indicates to the base how long a time  can elapse
               without the host  refreshing the key;   in units of  1/2 second,
               the range is from 0 to 16383 seconds.  This permits the  host to
               perform special exception-processing without the need to refresh
               the key, provided only  that the host specifies the  duration of
               this exception before it occurs.  (It is desirable to  reset the
               value to 0 whenever the exception-case has terminated.)






                                   I-3  Version 2.01


             Version 2.01 contains a number of additional changes, all of which
        should retain backward compatibility.  These include:

           o   Expansion of the  type 6 (new external  logon) from the  base to
               the host to include the 16-bit Origination Host Number  for this
               circuit, contained  in the  third and  fourth bytes  (this field
               previously unused).
           o   New default for unspecified number of ports (i.e.,  0 specified)
               in the  type 33d  host-to-base message; from  48 to  the maximum
               number the EBUS code will support (currently 256d).
           o   In the event of  external logons "winning" the race  between the
               host going down or shut and the interception of such circuits by
               ISIS, appropriate text  messages are generated and  the circuits
               are zapped;   in the case  of shut, the  circuit is  checked for
               shut-override, and permitted if true.
           o   The Slot Operations Monitor has been extended with  the addition
               of the "STATE" (display host state) command.
           o   Messages 31, 32, and  33d (related to terminal  parameters) have
               been expanded to include parameter 20d -- Space Parity.
           o   Base-originated  messages 3  (Reset)  has been  expanded  in the
               "DEBUG" field (Byte 1).  The high-order bit (x'80) of this field
               is set  if host-up is  detected in the  1/2-second logic;  it is
               reset  if host-up  is detected  in initialization.   This change
               will  permit  the  Host  to  distinguish  between Base-initiated
               activities, and possible failures of the EBUS hardware  (such as
               EBUS  timeout)  which cause  EBUS  to assume  the  Host  is down
               (without the Host necesarily knowing about it).
           o   Host-originated messages 3 and 4 (Reset and Reset Ack) have been
               expanded  to  include  16-bits  of  host  Version  Number (right
               Justified).  This value is recorded by EBUS.
           o   Crash-type  $EF  (o'357)  has  been  implemented  to distinguish
               between  normal  Base-initiated  crashes  command-type   3)  and
               instances where the Base sent EBUS an unknown command-type.
           o   EBUS no longer writes into the "Dumped" cell in the PDP  (at $73
               -- o'163).
           o   Upon detecting "Host-up", EBUS reads ALL Host Input- and Output-


        13                 External Reference Specification            EBUS.ERS
        Release-dependent Changes                                 June 23, 1986


               ring parameters from the Host, including fill- and empty-cursors
               (previously, EBUS assumed Input-fill and Output-empty were 0).
           o   EBUS  and  Base-code  have  been  modified  such  that Base-code
               informs EBUS of  the location and  size of the  Memory-dump area
               (if any);  EBUS will automatically dump it's memory to this area
               upon an EBUS-crash.
















































        14                 External Reference Specification            EBUS.ERS
        Base-initiated Crashes                                    June 23, 1986






                         APPENDIX II.   Base-initiated Crashes



             EBUS supports two types of crashes: Normal and Fatal.






                                II-1  "Normal" Crashes


             A  "Normal"  (i.e.,  non-fatal)  Crash  occurs  for  a  variety of
        reasons, such as  an invalid message  received from the  host.  Reasons
        are:

           $00 (o000) -  No KEY received from Host;
           $03 (o003) -  Bad KEY received from Host;
           $04 (o004) -  Bad message-type from Host;
           $08 (o010) -  MIC timeout;
           $09 (o011) -  MIC parity error;
           $0A (o012) -  MIC too busy too long;
           $15 (o025) -  WRE crash;






                                 II-2  "Fatal" Crashes


             A Fatal crash is catastrophic!  The base HALTS as a consequence of
        any of these crashes:

           $12 (o022) -  GCI crash;
           $14 (o024) -  WCI crash;
           $50 (o120) -  Bad ISIS message;
           $60 (o140) -  Bad Stack Usage;
           $82 (o202) -  Buss Error
           $83 (o203) -  Address Error
           $84 (o204) -  Illegal Instruction
           $ED (o355) -  Split Character-pair from buffer;
           $EC (o354) -  Told to crash by Engine;




        15                 External Reference Specification            EBUS.ERS
        Summary of Base-to-Host Messages                          June 23, 1986






                   APPENDIX III.   Summary of Base-to-Host Messages



        Message Format                  Message Name

            3, use, v1, v2              Reset Interface
            4, use, v1, v2              Reset Acknowledge
            5, 0                        Supervisor Takeover
            6, p, h1, h2                Externally-Initiated New Circuit
            7, p, key                   Internally-Initiated New Circuit
            8, p                        Backpressure On
            9, p                        Backpressure Off
           0A, p                        Character Gobbler
           0B, p                        Circuit Zapper
           0C, p                        Enter Deferred Echo Mode
           0D, p                        Leave Deferred Echo Mode
           0E, p                        Green Ball
           0F, p                        Red Ball
           10, p                        Yellow Ball
           11, p                        Orange Ball
           15, p, 0                     Gray Ball
           15, p, FF                    Black Ball
           17, p, e                     Supervisor Response (to 16)
           1A, 0, d1, d2, d3, d4        Test Pattern Response
           20, p, tc, val               Terminal Characteristics Response
           23, 0, t1, t2, t3, t4        Supervisor Clock Data
           25, p                        Block Output Done
           27, p, c1, c2                Block Input Done -- Block full
           28, p, c1, c2                Block Input Done -- EOT
           29, p, c1, c2                Block Input Timeout
           2B, p, c1, c2                Response to Block-Input Termination
           2D, p                        Resp. to Block-Output Termination
           2E, 0, np                    Resp. to Block IO Port Request
           2F, p, 0                     Break(-begin) Character

         80+n, p, n bytes of data       Data Bytes













        16                 External Reference Specification            EBUS.ERS
        Summary of Host-to-Base Messages                          June 23, 1986






                    APPENDIX IV.   Summary of Host-to-Base Messages



        Message Format                  Message Name

            1                           Host is Open
            2                           Host is Shut
            3, 0, v1, v2                Reset Interface...Interpreted by
                                         base as 1-char message telling base
                                         that host has (or will) crashed.
            4, 0, v1, v2                Reset Ack
            8, p                        Backpressure On
            9, p                        Backpressure Off
           0A, p                        Character Gobbler
           0B, p                        Circuit Zapper
           0C, p                        Enter Deferred Echo Mode
           0D, p                        Leave Deferred Echo Mode
           0E, p                        Green Ball
           0F, p                        Red Ball
           10, p                        Yellow Ball
           11, p                        Orange Ball
           12, p                        Hang Character
           13, p                        Enter Transparency Mode
           14, p                        Leave Transparency Mode
           16, q, 0                     Supervisor Request (for AUX circuit)
           18, q, d                     Supervisor Login Character
           19, 0, d1, d2, d3, d4        Test Pattern Probe
           1B, 0, d1, d2, d3, d4        Host Sad
           1C, p                        Echo On
           1D, p                        Echo Off
           1E, p, tc, val               Set Terminal Characteristics
           1F, p, tc                    Probe Terminal Characteristics
           21, np, hn1, hn2             Set Host Number
           22, 0                        Supervisor Clock Request
                                        (Ignored by base)
           24, p, d1, ..., d5           Block Output Request
           26, p, d1, ..., d5           Block Input Request
           2A, p                        Terminate Block Input
           2C, p                        Terminate Block Output
           2E, 0, np                    Request for Block IO Ports
           33, 0, d1, d2                Set timeout limit

         80+n, p, n bytes of data       Data Bytes

             All other  message types are  considered invalid, and  grounds for
        telling the host to crash!



        17                 External Reference Specification            EBUS.ERS
        INDEX                                                     June 23, 1986


                                         INDEX

        Code Command  4@


        DUMP Command  6@


        EBDUMP Configuration Parameter
           3@, 6
        EXIT Command  5@


        Help Command  4@


        MACSbug  6, 9


        NPORT Configuration Parameter  2@


        QUIT Command  5@


        RDUMP Command  5@


        STATE Command  6@


        V Command  5@






















        18                 External Reference Specification            EBUS.ERS
    nS