MEDIA ** FICHE/FRAME BREAK *****
MEDIA
MEDIA  IDENT D7.00 OCT 75

*      OPERATIONS PROGRAMMING

*      PUNCHS AND READS CARDS IN 026 OR 029 FORMAT
*      READS OLD OR NEW FORMATTED TYMSHARE TAPES
*      WRITES TAPES IN NEW TYMSHARE FORMAT
*      READS DECKS IN BINARY MODE IF FIRST CARD CONTAINS 
*              12-0-2-3-4-6-8-9 PUNCH.  IN THIS MODE A CARD
*              WITH COLUMN 1 COMPLETELY PUNCHED WILL STILL
*              BE TREATED AS AN END OF FILE.

*      MESSAGE DRIVER OPCODE AND MACRO DEFINITIONS

       NOLIST STAT

MSG    OPD     101B5,2 (MESSAGE DRIVER POP)

PRINT  MACRO D,G,2     (GENERAL MESSAGE POP DRIVER)
       BRU G(1)
G(2)   TEXT 'D(1)/'
G(1)   MSG G(2)
       ENDM

*      BUFFER DEFINITIONS

CB     EQU     10000B          CARD READ / PUNCH BUFFER
TB     EQU     CB+200          TAPE READ / WRITE BUFFER
CR     EQU     30000B          CARD READER USES EXTENSION REGISTER 3
CP     EQU     20000B          CARD PUNCH USES EXTENSION REGISTER 2

*      ENTRY POINT - CHECK TO SEE  IF ENTIRE PROGRAM LOADED IN

       BRU BEG
CHECKB DATA 52525252B;*THIS MUST BE EQUAL TO CHECKE OR ERROR

BEG    MIN 202B; LDA CHECKB; SKE CHECKE; BRU *+2; BRU BEG1
       PRINT ($PROGRAM LOADING ERROR$); BRU *
BEG1   LDA =TMSG+1B5; STA 101B; LDA =CPUP+43B5; STA 56B; STA 57B

*      COMMAND DISPATCHER - SEE INSTRUCTIONS

BEGIN  CLA; STA NCR; STA NCP; STA TPOS; BRM SETTAB; BPT1; BRU *+2; BRM INS
START  BPT2; BRU READ; BPT3; BRU PUNCH; BRU START
*
*      INSTRUCTIONS - TYPED IF BREAKPOINT 1 NOT SET

INS    ZRO
       PRINT ($MEDIA CONVERSION VERS. D7.00 - NOV 75$)
       PRINT ($BPT 1 SET       - SKIP INSTRUCTIONS$)
       PRINT ($BPT 2 SET       - READ CARDS TO MAG TAPE UNIT 1)
       PRINT ($                  DO NOT REMOVE EXCESS BLANKS FROM CARDS$)
       PRINT ($BPT 2 AND 3 SET - READ CARDS TO MAG TAPE UNIT 1)
       PRINT ($                  REMOVE EXCESS BLANKS FROM CARDS$)
       PRINT ($BPT 3 SET       - PUNCH CARDS FROM MAG TAPE UNIT 1$)
       PRINT ($BPT 4 NOT SET   - READ OR PUNCH CARDS IN 026 FORMAT)
       PRINT ($BPT 4 SET       - READ OR PUNCH CARDS IN 029 FORMAT$)
       PRINT ($12-0-2-4-6-8 PUNCH IN COLUMN ONE OF FIRST CARD CAUSES)
       PRINT ($THE CARD FILE TO BE READ IN 029 FORMAT$)
       PRINT ($11-1-3-5-7-9 PUNCH IN COLUMN ONE OF FIRST CARD CAUSES)
       PRINT ($THE CARD FILE TO BE READ IN 026 FORMAT$)
       PRINT ($12-0-2-3-4-6-8-9 PUNCH IN COLUMN ONE OF FIRST CARD)
       PRINT ($CAUSES THE CARD FILE TO BE READ IN BINARY FORMAT$)
       PRINT ($A CARD WITH COLUMN 1 COMPLETLY PUNCHED OUT WILL BE RECOGNIZED
       PRINT ($AS END OF FILE, EVEN IN BINARY FORMAT$)
       PRINT ($SET DESIRED BREAKPOINTS ); BRM TOGGLE
       HLT 0; BRR INS
*
*      MAIN CARD READER / MAG TAPE WRITE SUBROUTINE DRIVER

READ   PRINT ($$$READ CARDS TO MAG TAPE UNIT 1 ); BRM TOGGLE
       HLT 0; CLA; STA TITLE; BRM PTW (PREPARE TAPE FOR WRITE)
READ1  BRM INIT   INITIALIZE COUNTERS AND ZERO OUT RESERVED STORAGE
       MIN TPOS   INCREMENT TAPE POSITION
       BRM CRRDY  WAIT UNTIL CARD READER IS READY
       BRM STP    SET TABLE POINTER FOR 026/029 FORMAT
       BRM STRAIL SET SWITCH TO DELETE OR NOT DELETE TRAILING BLANKS
       LDA =-1; STA HEADSW; STA CFORMSW
       BRM RCFORM CHECK FOR 029,026, OR BIN INDICATOR CARD
       MIN CFORMSW READ AN INDICATOR CARD
       MIN HEADSW WRITE TAPE HEADER NOW
       STA COL1   SAVE COLUMN READ (CFORMSW<0)
       BRM WTHEAD WRITE TAPE HEADER IN NEW STORE FORMAT
       LDA COL1   RESTORE POSSIBLE FIRST COLUMN
       SKN CFORMSW
READ2  BRM RCC    READ CARD CHARACTER
       BRU *+2    NO SKIP IF NOT END OF FILE
       BRU READ3  SKIP IF CARD READER END OF FILE INDICATOR ON
       SKN BINSW  CHECK BINARY MODE SWITCH
       BRU READ4  026 OR 029
       LDB RCCOL  CHECK FIRST COLUMN
       SKB =-2
       BRU *+4    NOT COLUMN 1
       SKE =7777B ENTIRE COLUMN PUNCHED
       BRU *+2    NO
       BRU CTCEF
       BRM WTCOL  WRITE COLUMN TO APPROPRIATE HALF OF TAPE WORD
       BRU READ2  GET NEXT COLUMN
READ4  BRM CTC    CONVERT CARD CODED CHARACTER TO TAPE CHARACTER
       BRM RCB    MULTIPLE BLANK ROUTINE
       BRU READ2  NO SKIP IF BLANK
       BRM WTC    WRITE CHARACTER TO TAPE
       BRU READ2  GO READ NEXT CARD CHARACTER
READ3  SKN HEADSW CHECK FILE HEADER NOT WRITTEN SWITCH
       BRU *+2
       BRM WTHEAD MUST HAVE GOTTEN EOF ON RCFORM
       BRM WTEF   FINISH UP TAPE WRITE (LAST RECORD, EOF, AND EOT)
       BRM PNCR   PRINT NUMBER OF CARDS READ
       BRU READ1  GO READ NEXT CARD FILE
*
*      MAIN CARD PUNCH / MAG TAPE READ SUBROUTINE DRIVER

PUNCH  PRINT ($$$PUNCH CARDS FROM MAG TAPE UNIT 1 ); BRM TOGGLE
       HLT 0; BRM PTR (PREPARE TAPE FOR READ)
PUNCH1 BRM INIT   INITIALIZE COUNTERS AND ZERO OUT RESERVED STORAGE
       BRM GTP    GET TAPE POSITION OF TAPE FILE TO PUNCH
       BRM STP    SET TABLE POINTER FOR 026/029 FORMAT
       BRM POST   POSITION TAPE AT DESIRED TAPE POSITION
       BRM VERIFY VERIFY TAPE FILE BEFORE PUNCHING
       BRM POST   RE-POSITION TAPE AT DESIRED TAPE POSITION
       BRM RTHEAD READ TAPE HEADER RECORD (MAKE SURE FILE IS SYMBOLIC)
       BRM PBC    PUNCH 2 BLANK CARDS
PUNCH2 BRM RTC    READ CHARACTER FROM TAPE
       BRU *+2    NOT END OF FILE - PROCESS THIS CHARACTER
       BRU PUNCH3 SKIP IF END OF TAPE FILE
       BRM TCC    CONVERT TAPE CHARACTER TO CARD CODED CHARACTER
       BRU *+3    PUNCH THIS CHARACTER
       BRU PUNCH2 DO NOT PUNCH (CR,LF,MB)
       BRU PUNCH3 END OF FILE (137B TAPE CHARACTER)
       BRM PCC    PUNCH CHARACTER
       BRU PUNCH2 GO GET NEXT TAPE CHARACTER
PUNCH3 BRM PCFB   FINISH OUT LAST CARD WITH BLANKS AND PUNCH (SEE RTER+2)
       BRM PBC    PUNCH 2 BLANK CARDS TO FORCE LAST CARD TO STACKER
       BRM PNCP   PRINT NUMBER OF CARDS PUNCHED
       BRU PUNCH1 GO GET NEXT TAPE FILE TO PUNCH
*
*      CARD READER ROUTINES

*      READ CARD CHARACTER FROM CURRENT CARD WORD BEING PROCESSED

RCC    ZRO; SKR RCCC; BRU RCC1; SKR RCWC; BRU RCW
       BRM RC; SKN RCEF; BRU RCR1; MIN RCC; BRR RCC
RCR1   SKN TRAIL; BRU *+2; BRU RCR3; LDA MBC; SKN BINSW; SKG =0; BRU RCR3
       SKR MBC; BRU *+2; BRU RCR3; CLA; BRM WTC; BRU *-5
RCR3   CLA; STA MBC; STA RCCOL; STA IGNORE; MIN NCR; LDA NCR; SKN BINSW; SKG =1
       BRU RCR4; LDA =155B; BRM WTC
RCR4   LDA =CB; STA RCWP; LDA =39; STA RCWC
RCW    LDX =1; STX RCCC; LDA* RCWP; MIN RCWP; ABC; BRU *+3
RCC1   CLA; LDB RCCW; LSH 12; STB RCCW; MIN RCCOL; BRR RCC

*      READ CARD - ARMS END OF RECORD INTERRUPT

RC     ZRO; SKS 14000B; BRU *-1; SKS 12006B; BRU *+2; BRU RC1
       SKS 11006B; BRU *+2; BRU RC+1; LDA =-1; STA RCEF; BRR RC
RC1    LDA =-1; EIR; EOM* 3606B; POT =24B5+CB
       SKE =0; BRU *-1; DIR; SKS 11000B; BRU *+2; BRR RC
       PRINT ($CARD READER ERROR$); BRU RCWTER
RCINT  ZRO; CLA; BRI RCINT

*      TAKE CARE OF TRAILING BLANKS

RCB    ZRO; SKN TRAIL; BRU *+2; BRU *+3; MIN RCB; BRR RCB
       SKE =0; BRU RCB1; MIN MBC; BRR RCB
RCB1   STA RCBA; SKR MBC; BRU RCB2; MIN MBC; LDA RCBA; MIN RCB; BRR RCB
RCB2   CLA; BRM WTC; BRU RCB1+1
RCBA   ZRO;*SAVE INCOMING CHARACTER

*      PRINT NUMBER OF CARDS READ

PNCR   ZRO; SKN TITLE; BRU *+2; BRU PNCR1; LDA =-1; STA TITLE
       PRINT ($FILE-TRAILING BLANKS-FORMAT-CARDS READ$)
PNCR1  PRINT ( ); CLA; LDB TPOS; LSH 18; STB PNCRB; BRM TYPE
       CLA; LDB PNCRB; LSH 3; STB PNCRB; BRM TYPE
       CLA; LDB PNCRB; LSH 3; BRM TYPE
       PRINT (     ); SKN BINSW; SKN TRAIL; BRU *+2; BRU PNCR2; PRINT (NOT ); BRU PNCR3
PNCR2  PRINT (    )
PNCR3  PRINT (DELETED    ); BRM M2629
       PRINT (       ); LDA NCR; BRM BTODE; PRINT ($); BRR PNCR

*      SET SWITCH TO DELETE OR NOT DELETE TRAILING BLANKS

STRAIL ZRO; CLA; BPT3; LDA =-1; STA TRAIL; BRR STRAIL

*      SET TO 029 AND OVERRIDE CONSOLE SETTING IF 029 INDICATOR CARD READ

RCFORM ZRO
       CLA; STA BINSW
       BRM RCC; BRU *+2; BRU READ3; SKE =5252B; BRU RCFOR1
       EOD 20354B; LDA =-1; STA SW2629; BRU RCFOR3
RCFOR1 SKE =2525B; BRU RCFOR2; EOD 20332B; CLA; STA SW2629
RCFOR3 BRM RCIND; BRR RCFORM
RCFOR2 SKE =5353B; BRU RCFOR4; LDA =-1; STA BINSW; BRU RCFOR3
RCFOR4 SKE =0; BRU RCFOR5; LDB RCCOL; SKB =-2; BRU RCFOR5
       LDX =39; SKE CB,2; BRU RCFOR5
       CXB; EAX -1,2; SKB =37777B; BRU *-5
       BRM RCIND               (SKIP AN ENTIRELY BLANK CARD)
       MIN 5
       BRU RCFORM+1
RCFOR5 MIN RCFORM; BRR RCFORM
ERR    HLT

*      WAIT FOR CARD READER READY

CRRDY  ZRO; SKS 12006B; BRU *-1; BRR CRRDY

*      CONSUMES COLUMNS 2-80 OF INDICATOR CARDS

RCIND  ZRO; LDX =-79; STX RCINDX; BRM RCC; BRU *+2; BRU READ3; LDX RCINDX
       BRX *-5; SKR NCR; NOP; BRR RCIND

*      CARD READER OR TAPE WRITE ERROR

RCWTER SKR TPOS; NOP; SKN HEADSW; BRU *+2; BRU READ1
       BRM IWT; BRM BSF; BRM WTEOF; BRM WTEOT; BRM RSCAN; BRU READ1

*      INIT CARD READER STORAGE CELLS

IRC    ZRO; LDX =RCN; CLA; STA RCE,2; BRX *-1; BRR IRC

*      CARD READER ROUTINE STORAGE CELLS AND DESCRIPTIONS

TITLE  ZRO;*NEGATIVE IF TITLE TYPED OUT FOR CARD READ INFO
TRAIL  ZRO;*DELETE TRAILING BLANKS IF NEGATIVE
RCCOL  ZRO;*COLUMN NUMBER OF CURRENT CHARACTER FROM CARD
RCCW   ZRO;*CURRENT WORD FROM CARD READER BUFFER
RCWP   ZRO;*POINTER TO NEXT WORD IN CARD READER BUFFER
PNCRB  ZRO;*SAVE B REGISTER IN PNCR ROUTINE
COL1   ZRO;*SAVED CHAR FROM RCFORM
IGNORE ZRO;*IF NEG IGNORE ERRORS ON REMAINDER OF CARD
HEADSW ZRO;*TAPE HEADER NOT WRITTEN SWITCH
CFORMSW ZRO;*INDICATOR CARD READ SWITCH
RCINDX ZRO;*SAVE X REGISTER
RCS    ZRO;*START OF CARD READ STORAGE CELLS
RCEF   ZRO;*SET TO -1 IF CARD READER END OF FILE INDICATOR ON
BINSW  ZRO;*NEGATIVE FOR BINARY MODE
RCCC   ZRO;*CURRENT CHARACTER COUNT
RCWC   ZRO;*NUMBER OF WORDS LEFT IN CARD READER BUFFER
MBC    ZRO;*MULTIPLE BLANK COUNT
NCR    ZRO;*NUMBER OF CARDS READ FOR CURRENT CARD FILE
RCE    ZRO;*END OF CARD READER STORAGE CELLS
RCN    EQU RCS-RCE;*NUMBER OF CARD READER STORAGE CELLS
*
*      CARD PUNCH ROUTINES

*      PUNCH CARD CHARACTER

PCC    ZRO; BRM PCCLSW (SOMETIMES CLB)
       XMA PCCW; LSH 12; ADM PCCW; SKR PCCC; BRR PCC
       LDA =1; STA PCCC; LDA PCCW; STA* PCWP; MIN PCWP
       SKR PCWC; BRR PCC; BRM PCR; MIN NCP; BRR PCC

*      PUNCH CARD AND INITIALIZE COUNTERS AND POINTERS

PCR    ZRO; BRM PC; BRM IPC; BRR PCR

*      PUNCH CARD - ARM END OF RECORD INTERRUPT

PC     ZRO
PC1    SKS 14046B; BRU *-1
PC2    LDA =11; STA ROW; LDA PCPOT; ETR =777B5; MRG CB1; STA PCPOT
PC3    SKS 12046B; BRU *-1; LDA =-1; EIR; EOM* 0; EOM 16000B; POT PCPOT
       EOM 3646B; SKS 20010B; BRU PCER1; SKE =0; BRU *-1; DIR
       SKR ROW; BRU PC3; SKS 11046B; BRU PCER; SKN PCERSW; BRR PC
       EOM 10246B; MIN PCERSW; BRM XCB; BRU PC1
PCINT  ZRO; CLA; BRI PCINT

*      CARD PUNCH ERROR

PCER   SKN PCERSW; BRU *+2; BRU PC1
       EOM 10246B; BRM XCB; LDA =-1; STA PCERSW; BRU PC1
PCER1  PRINT ($CARD PUNCH FAILURE$); BRU PCABRT

*      SWITCH CARD PUNCH BUFFERS (THIS IS SO THAT THE PREVIOUS CARD IS
*      ALWAYS IN CORE IN CASE OF A VERIFICATION ERROR)

XCB    ZRO; LDA CB1; XMA CB2; STA CB1; BRR XCB

*      PUNCH 2 BLANK CARDS

PBC    ZRO; BRM PCL; BRM PCR; BRM PCR; BRR PBC

*      FINISH OUT CURRENT CARD WITH BLANKS

PCFB   ZRO; SKN PCSW; BRU PCFB1; BRR PCFB
PCFB1  LDA PCCC; SKE =1; BRU PCFB2; SKN PCSW; BRU *+2; BRR PCFB
       BRM PCR; MIN NCP; BRR PCFB
PCFB2  CLA; BRM PCC; BRU PCFB1

*      SET PCC+1 AFTER PCSW SET

PCCLSW ZRO; LDB =4600002B; STB PCC+1; MIN PCSW; CLB; BRR PCCLSW
PCCINS BRM PCCLSW

*      CLEAR CARD BUFFER

PCL    ZRO; LDX =-40; CLB; LDA CB1; SKE =CB; BRU PCL1
       STB CB+40,2; BRX *-1; BRR PCL
PCL1   STB CB+140,2; BRX *-1; BRR PCL

*      PRINT NUMBER OF CARDS PUNCHED

PNCP   ZRO; PRINT (NUMBER OF CARDS PUNCHED: ); LDA NCP; BRM BTODE
       CLA; STA NCP; PRINT ( - ); BRM M2629; PRINT ( FORMAT$); BRR PNCP

*      CARD PUNCH OR MAG TAPE READ ERROR - PUNCHING ABORTED

PCABRT LDA NCP; SKG =0; BRU PUNCH1; PRINT (CARD PUNCHING ABORTED$)
       BRM PNCP; BRU PUNCH1

*      INIT PUNCH CARD STORAGE CELLS

IPC    ZRO; BRM XCB; LDA CB1; STA PCWP; LDA =1; STA PCCC; LDA =39; STA PCWC
       BRM PCL; LDA PCCINS; STA PCC+1; LDA =-1; STA PCSW; BRR IPC

*      PUNCH CARD STORAGE CELLS AND DESCRIPTIONS

CB1    DATA CB CARD PUNCH BUFFERS
CB2    DATA CB+100
PCPOT  DATA 24B5 CARD PUNCH POT WORD WITH WORD COUNT
PCERSW ZRO;*NEGATIVE ON CARD PUNCH VERIFICATION ERROR
ROW    ZRO;*CARD BUFFER MUST BE PRESENTED 12 TIMES
NCP    ZRO;*NUMBER OF CARDS PUNCHED
PCWP   ZRO;*POINTER INTO CARD PUNCH BUFFER FOR NEXT WORD TO PUNCH
PCCC   DATA 1;*NUMBER OF CHARACTERS LEFT IN CARD WORD BEING PROCESSED
PCWC   DATA 39;*NUMBER OF CARD WORDS LEFT IN CARD PUNCH BUFFER
PCCW   ZRO;*CURRENT CARD WORD BEING BUILT
PCSW   ZRO;*SET TO -1 AFTER A CARD IS PUNCHED
*
*      TAPE READ ROUTINES - SEE CARD PUNCH DRIVER

*      READ TAPE CHARACTER FROM CURRENT TAPE WORD

RTC    ZRO; SKR RTCC; BRU RTC1; BRM RTW; SKN RTEF; BRU *+3; MIN RTC; BRR RTC
       LDX =2; STX RTCC; ABC; BRU *+3
RTC1   CLA; LDB RTCW; LSH 8; STB RTCW; BRR RTC

*      READ TAPE WORD FROM TAPE BUFFER

RTW    ZRO; SKR RTWC; BRU RTW1; BRM RT; LDA TB; SUB =1; STA RTWC
       LDA =TB+1; STA RTWP
RTW1   LDA* RTWP; MIN RTWP; BRR RTW

*      READ TAPE - ARMS END OF RECORD INTERRUPT

RT     ZRO; LDA =10; STA RTERC; CLA; STA RTEF
RT1    BRM TWAIT; LDA =RTINT+43B5; STA 33B; LDA =-1; EIR
       EOM* 3611B; EOM 16003B; POT =7774B4+TB; SKE =0; BRU *-1; DIR
       BRM TWAIT; SKS 13611B; BRU *+2; BRU RT3; LDA =-1; STA RTEF; BRR RT
RT3    SKS 11011B; BRU RT2; SKS 11000B; BRU RTER; LDA =PCINT+43B5; STA 33B; BRR RT
RT2    BRM EOTMSG; BRU PCABRT
RTER   BRM RSCAN; SKR RTERC; BRU RT1; PRINT (TAPE READ ERROR$); BRU PCABRT
RTINT  ZRO; CLA; BRI RTINT

*      PREPARE TAPE FOR READ

PTR    ZRO; BRM TTR; BRM PDEN; BRR PTR

*      GET DESIRED TAPE POSTION TO PUNCH

GTP    ZRO; PRINT ($ENTER TAPE POSTION: ); BRM INTYP; SKE =-1; BRU *+2
       BRU GTP+1; STA TPOS; BRR GTP

*      POSITION TAPE AT DESIRED TAPE POSITION

POST   ZRO; BRU BSFR; BRM RT; SKS 13611B; BRM RT
       LDA TB; SKE =1; BRU *+2; BRU POST1
       SKE =3; BRU POSTER; LDA TB+1; STA PTPOS; SKE TPOS
       BRU *+2; BRR POST; SKG TPOS; BRU FSF
BSFR   BRM BSF; BRM BSF; BRU POST+2
FSF    BRM FSCAN; SKS 11011B; BRU POST1; SKS 13611B; BRU POST+2; BRU FSF
POST1  BRM EOTMSG; BRU PUNCH1
POSTER PRINT (GARBAGE IN TAPE POSTION WORD AFTER TAPE POSITION )
       LDA PTPOS; BRM BTODE; PRINT ($)
       LDA PTPOS; SKG TPOS; BRU FSF; BRU BSFR

*      VERIFY TAPE FILE BEFORE PUNCHING

VERIFY ZRO; BRM RT; SKN RTEF; BRU *-2; BRR VERIFY

*      READ TAPE HEADER - OLD OR NEW FORMAT

RTHEAD ZRO; BRM RTW; SKE =54545454B; BRU RTHOLD; LDX =-13; STX RTHX
       BRM RTW; LDX RTHX; BRX *-3; ETR =77B6; SKE =23B6; BRU RTHER
       BRM RTW; BRM RTW
RTH1   BRM RTW; SKA =4B7; BRR RTHEAD; BRU *-3
RTHOLD SKE =55555555B; BRU RTHER1
       RPT 5; BRM RTW; ENDR; ETR =77B6; SKE =23B6; BRU RTHER; BRU RTH1
RTHER  PRINT (SELECTED FILE NOT SYMBOLIC$); BRU PUNCH1
RTHER1 PRINT (GARBAGE IN TAPE HEADER RECORD$); BRU PUNCH1

*      INIT TAPE READ STORAGE CELLS

IRT    ZRO; LDX =RTN; CLA; STA RTE,2; BRX *-1; BRR IRT

*      TAPE READ STORAGE CELLS AND DESCRIPTIONS

RTHX   ZRO;*WORKING CELL FOR RTHEAD
RTERC  ZRO;*TAPE READ ERROR RETRY COUNT
RTCW   ZRO;*CURRENT WORD IN TAPE BUFFER BEING PROCESSED FOR CHARACTERS
RTWP   ZRO;*POINTER TO NEXT AVAILABLE WORD IN TAPE BUFFER
RTS    ZRO;*START OF READ TAPE STORAGE CELLS
RTCC   ZRO;*CHARACTER COUNTDOWN (3 CHARACTER PER TAPE WORD)
RTWC   ZRO;*NUMBER OF WORDS IN TAPE BUFFER TO PROCESS
RTEF   ZRO;*SET TO -1 BY RT ROUTINE IF END OF FILE READ
PTPOS  ZRO;*PREVIOUS TAPE POSITION
RTE    ZRO;*END OF READ TAPE STORAGE CELLS
RTN    EQU RTS-RTE;*NUMBER OF READ TAPE STORAGE CELLS
*
*      TAPE WRITE ROUTINES - SEE CARD READER DRIVER

*      WRITE TAPE CHARACTER TO CURRENT TAPE WORD

WTC    ZRO; CLB; XMA WTCW; LSH 8; ADM WTCW; SKR WTCC; BRR WTC; LDA =2; STA WTCC
WTC1   LDA WTCW; STA* WTWP; MIN WTWP; SKR WTWC
       BRR WTC; BRM WTR; BRR WTC

*      WRITE BINARY COLUMN
WTCOL  ZRO
       CLB; XMA WTCW; LSH 12; ADM WTCW; SKR WTCL; BRR WTCOL
       LDA =1; STA WTCL; LDA WTCOL; STA WTC; BRU WTC1
*      WRITE TAPE WORD

WTW    ZRO; STA* WTWP; MIN WTWP; SKR WTWC; BRR WTW; BRM WTR; BRR WTW

*      WRITE TAPE BUFFER TO TAPE

WTR    ZRO; LDA =1278; SUB WTWC; SKG =0; BRR WTR; STA TB
       BRM WT; BRM IWT; BRR WTR

*      WRITE VARIABLE LENGTH TAPE RECORD - ARM ZERO WORD COUNT INTERRUPT

WT     ZRO; BRM TWAIT; LDA =10; STA WTERC
WT2    LDA TB; ADD =1; ABC; LSH 14; MRG =215B3; STA WTEOM; CBA; MRG =TB
       STA WTPOT; LDA =-1; EIR; EOM* 3651B
WTEOM  EOM 15000B; POT WTPOT; SKE =0; BRU *-1; DIR; BRM TWAIT
       SKS 11011B; BRU *+2; BRU WT3; BRM EOTMSG; CLA; STA TPOS; BRM REW
       BRU READ1
WT3    SKS 11000B; BRU *+2; BRR WT
       SKR WTERC; BRU *+3; BRM RSCAN; BRU WT2
       PRINT ($TAPE WRITE ERRORS$); BRU RCWTER
WTINT  ZRO; CLA; BRI WTINT

*      PREPARE TAPE FOR WRITE

PTW    ZRO; BRM TTR; BRM REW; BRM FPT; BRM PDEN; BRM ERASE; BRR PTW

*      WRITE TAPE HEADER - TWO RECORDS (NEW TYMSHARE FORMAT)

WTHEAD ZRO; BRM WTFR; BRM WTSR; BRR WTHEAD

*      WRITE TAPE - FIRST HEADER RECORD

WTFR   ZRO; LDA TPOS; BRM WTW; LDA =10631020B; BRM WTW
       LDA DEN; BRM WTW; BRM WTR; BRR WTFR

*      WRITE TAPE - 2ND RECORD

WTSR   ZRO; LDA =54545454B; BRM WTW; LDA =13630045B; BRM WTW
       LDA =144B5; BRM WTW; CLA; BRM WTW; CLA; BRM WTW
       LDA =25B; BRM WTW; CLA; BRM WTW; LDA =40000001B; BRM WTW
       LDA =1000021B; BRM WTW; LDA =662B5; BRM WTW; CLA; BRM WTW
       CLA; BRM WTW; CLA; BRM WTW
       LDA =22B6; SKN BINSW; LDA =23B6; BRM WTW
       LDA =17777777B; BRM WTW; CLA; BRM WTW; BRM WFN; BRR WTSR

*      WRITE TAPE FILE NAME USING TAPE POSITION NUMBER

WFN    ZRO; CLA; LDB TPOS; LSH 18; STB WFNC; ADD =20B; MRG =200B
       BRM WTC; CLA; LDB WFNC; LSH 3; STB WFNC; ADD =20B; BRM WTC; CLA
       LDB WFNC; LSH 3; ADD =20B; BRM WTC; BRR WFN
WFNC   ZRO;*WORKING CELL FOR WFN

*      WRITE TAPE END OF FILE, END OF TAPE, AND BACKSPACE 1 RECORD

WTEF   ZRO; BRM WTLR; BRM WTEOF; BRM WTEOT; BRM RSCAN; BRR WTEF

*      WRIST RECORD TO TAPE

WTLR   ZRO; SKN BINSW; BRU WTLR2
WTLR4  LDA WTCL; SKE =1; BRU *+2; BRU WTLR1
       CLA; BRM WTCOL; BRU WTLR4
WTLR2  LDA =155B; BRM WTC
WTLR3  LDA WTCC; SKE =2; BRU *+2; BRU WTLR1
       CLA; BRM WTC; BRU WTLR3
WTLR1  BRM WTR; BRR WTLR

*      WRITE TAPE END OF FILE MARK

WTEOF  ZRO; BRM TWAIT; EOM 2051B; MIW =1717B4
       TOPW; BRM TWAIT; SKS 11011B; BRU WTEOF1; BRM ERASE; BRR WTEOF
WTEOF1 BRM EOTMSG; PRINT (UNABLE TO WRITE TAPE END OF FILE$)
       CLA; STA TPOS; BRM REW; BRU READ1

*      WRITE TAPE END OF TAPE MARK

WTEOT  ZRO; LDA =-1; BRM WTW; BRM WTR; BRR WTEOT

*      ERASE 3 INCHES OF TAPE (CREATE 3 INCH TAPE GAP)

ERASE  ZRO; BRM TWAIT; EOM* 3671B; POT =600*40000B; BRM TWAIT
       SKS 11011B; BRU *+2; BRR ERASE; BRM EOTMSG
       PRINT (UNABLE TO EXECUTE TAPE ERASE$); CLA; STA TPOS; BRM REW; BRU READ1

*      TAPE WRITE PROTECT TEST

FPT    ZRO; SKS 14011B; BRU *+2; BRR FPT
       PRINT ($TAPE WRITE PROTECTED$); BRU READ

*      INIT WRITE TAPE COUNTERS AND STORAGE CELLS

IWT    ZRO; LDA =TB+1; STA WTWP
       LDA =2; STA WTCC; LDA =1; STA WTCL; LDA =1278; STA WTWC; BRR IWT

*      WRITE TAPE STORAGE CELLS AND DESCRIPTION

WTERC  ZRO;*WRITE ERROR RETRY COUNT
WTPOT  ZRO;*POT WORD FOR WRITE TAPE EOM-POT SEQUENCE
WTCL   DATA 1;*COUNT OF NUMBER OF BINARY COLUMNS LEFT TO GO IN TAPE WORD
WTCC   DATA 2;*COUNT OF NUMBER OF CHARACTERS LEFT TO GO INTO TAPE WORD
WTWP   DATA TB;*POINTER INTO TAPE WRITE BUFFER FOR NEXT WORD
WTWC   DATA 1278;*NUMBER OF WORDS LEFT BEFORE TAPE WRITE BUFFER IS FULL
WTCW   ZRO;*CURRENT WORD BEING FORMED FOR TAPE BUFFER
*
*      CONVERSION ROUTINES AND TABLES

*      TAPE CHARACTER TO CARD CODE CONVERSION ROUTINE

TCC    ZRO; SKG =77B; BRU TCC5; SKE =135B; BRU TCC2; BRM RTC; STA TCCC
TCC1   SKR TCCC; BRU *+3; MIN TCC; BRR TCC; CLA; BRM PCC; BRU TCC1
TCC2   SKE =155B; BRU TCC3; BRM PCFB; MIN PCSW; MIN TCC; BRR TCC
TCC3   SKE =152B; BRU *+2; BRU TCC2+2; SKE =137B; BRU TCC4
       MIN TCC; MIN TCC; BRR TCC
TCC4   SKG =132B; SKG =100B; BRU TCC2+4
TCC5   CAX; LDA CP,2; BRR TCC
TCCC   ZRO;*HOLDS MULTIPLE BLANK COUNTDOWN


*      CARD CHARACTER TO 940 CHARACTER CONVERSION ROUTINE

CTC    ZRO; SKG =0; BRR CTC; SKE =7777B; BRU *+2; BRU CTCEF
       CAX; LDA CR,2; SKE =-1; BRR CTC
       SKN SW2629; BRU CTC1; LDX =-5; SKE C029,2; BRX *-1
       SKA =4B7; BRU CTCER; LDA CT029,2; BRR CTC
CTC1   SKE =4006B; BRU *+3; LDA =3; BRR CTC
       SKE =2202B; BRU CTCER; LDA =1; BRR CTC
CTCEF  BRM RCIND; BRU READ3

*      BAD CHARACTER ON CARD

CTCER  SKN IGNORE; BRU *+2; BRU CTCER1; LDA =-1; STA IGNORE; CLA; STA TITLE
       PRINT ($CARD IN TOP OF STACKER CONTAINS ERROR IN COLUMN ); LDA RCCOL
       BRM BTODE; PRINT ($); BRM TOGGLE; HLT 0
CTCER1 CLA; BRR CTC

*      SPECIAL CHARACTERS ON CARDS NOT IN TABLES

       DATA 4100B,2010B,2000B,4022B,2022B
C029   ZRO;*SPECIAL 029 CHARACTERS
       DATA 43B,57B,15B,10B,11B
CT029  ZRO;*SPECIAL 029 CHARACTER 940 EQUIVILENTS

*      SET MEMORY EXTENSION FOR 026/029 CONVERSION TABLES

STP    ZRO; EOD 20332B; BPT4; EOD 20354B
       CLA; BPT4; LDA =-1; STA SW2629; BRR STP
SW2629 ZRO;*POS IF 026, NEG IF 029

*      SET UP CORE CONVERSION TABLES USING MEMORY EXTENSION

*      FIRST PUT -1'S IN ALL TABLE ENTRIES

SETTAB ZRO; LDA =-1
       EOD 20103B; LDX =-10000B; STA 20000B,2; BRX *-1 (940/026)
       EOD 20104B; LDX =-10000B; STA 20000B,2; BRX *-1 (026/940)
       EOD 20105B; LDX =-10000B; STA 20000B,2; BRX *-1 (940/029)
       EOD 20106B; LDX =-10000B; STA 20000B,2; BRX *-1 (029/940)

*      CREATE THE FOUR CONVERSION TABLES IN LOC 20000-57777B

       LDX =TS; EOD 20102B
       CXB; LDA T026,2; LDX T940,2; STA 20000B,2; CBX; BRX *-5
       LDX =TS; EOD 20103B; LDA =64; STA TS026; SKR TS026; BRU *+2; BRU SET1
       CXB; LDA T940,2; LDX T026,2; STA 20000B,2; CBX; BRX *-8
SET1   LDX =TS; EOD 20104B
       CXB; LDA T029,2; LDX T940,2; STA 20000B,2; CBX; BRX *-5
       LDX =TS; EOD 20105B
       CXB; LDA T940,2; LDX T029,2; STA 20000B,2; CBX; BRX *-5
       EOD 20102B; BRR SETTAB
TS026  ZRO;*ONLY FIRST 64 IN T026 TABLE ARE VALID 026 CARD CODES


*      CONVERSION TABLES / 940, 026, 029

*      940 INTERNAL CODE TABLE

T940S  DATA 0,1,2,3,4,5,6,7
       DATA 10B,11B,12B,13B,14B,15B,16B,17B
       DATA 20B,21B,22B,23B,24B,25B,26B,27B
       DATA 30B,31B,32B,33B,34B,35B,36B,37B
       DATA 40B,41B,42B,43B,44B,45B,46B,47B
       DATA 50B,51B,52B,53B,54B,55B,56B,57B
       DATA 60B,61B,62B,63B,64B,65B,66B,67B
       DATA 70B,71B,72B,73B,74B,75B,76B,77B
       DATA 101B,102B,103B,104B,105B,106B,107B
       DATA 110B,111B,112B,113B,114B,115B,116B,117B
       DATA 120B,121B,122B,123B,124B,125B,126B,127B
       DATA 130B,131B,132B
T940   EQU *
TS     EQU T940S-T940

*      026 (BCD) CODE TABLE

       DATA 0,3000B,2006B,4006B,2102B,1006B,1202B,42B
       DATA 1042B,4042B,2042B,4000B,1102B,2000B,4102B,1400B
       DATA 1000B,400B,200B,100B,40B,20B,10B,4B
       DATA 2B,1B,22B,2012B,4012B,102B,12B,5000B
       DATA 202B,4400B,4200B,4100B,4040B,4020B,4010B,4004B
       DATA 4002B,4001B,2400B,2200B,2100B,2040B,2020B,2010B
       DATA 2004B,2002B,2001B,1200B,1100B,1040B,1020B,1010B
       DATA 1004B,1002B,1001B,4022B,1012B,2022B,6B,1022B
       DATA 4400B,4200B,4100B,4040B,4020B,4010B,4004B
       DATA 4002B,4001B,2400B,2200B,2100B,2040B,2020B,2010B
       DATA 2004B,2002B,2001B,1200B,1100B,1040B,1020B,1010B
       DATA 1004B,1002B,1001B
T026   EQU *

*      029 (EBCDIC) CODE TABLE

       DATA 0,2202B,0006B,102B,2102B,1042B,4000B,22B
       DATA 4022B,2022B,2042B,4012B,1102B,2000B,4102B,1400B
       DATA 1000B,400B,200B,100B,40B,20B,10B,4B
       DATA 2,1,202B,2012B,4042B,12B,1012B,1006B
       DATA 42B,4400B,4200B,4100B,4040B,4020B,4010B,4004B
       DATA 4002B,4001B,2400B,2200B,2100B,2040B,2020B,2010B
       DATA 2004B,2002B,2001B,1200B,1100B,1040B,1020B,1010B
       DATA 1004B,1002B,1001B,7040B,7400B,7020B,6000B,1022B
       DATA 5400B,5200B,5100B,5040B,5020B,5010B,5004B
       DATA 5002B,5001B,6400B,6200B,6100B,6040B,6020B,6010B
       DATA 6004B,6002B,6001B,3200B,3100B,3040B,3020B,3010B
       DATA 3004B,3002B,3001B
T029   EQU *

*      CHARACTER TABLE FOR FINDING A CHARACTER IN OTHER TABLES

       IF -1
       BLANK ! " # $ % & '
       ( ) * + , - . /
       0 1 2 3 4 5 6 7
       8 9 : ; < = > ?
       @ A B C D E F G
       H I J K L M N O
       P Q R S T U V W
       X Y Z [ \ ] ^ _
       (LOWER CASE)
       A B C D E F G
       H I J K L M N O
       P Q R S T U V W
       X Y Z (CENT SIGN) (BAR OR BROKEN BAR) (TILDA) (LEFT BRACE)
       CONTINUED FROM ABOVE LINE (RIGHT BRACE) (CHECK MARK) (END BUFFER)
       ENDF
*
*      GENERAL UTILITY ROUTINES

*      INIT OUT WORKING CELLS

INIT   ZRO; BRM IRT; BRM IPC; BRM IRC; BRM IWT
       LDA =RCINT+43B5; STA 33B; LDA =WTINT+43B5; STA 31B; BRR INIT

*      MEMORY PARITY INTERRUPT ROUTINE

CPUP   ZRO; DIR; PRINT ($MEMORY PARITY INTERRUPT$); BRU BEGIN

*      TYPE OUT 026 OR 029 FORMAT PHRASE

M2629  ZRO
       SKN BINSW; BRU M2629A
       PRINT (BIN); BRR M2629
M2629A CLA; BRM TYPE; LDA =29; SKN SW2629; LDA =26
       BRM BTODE; BRR M2629

*      TEST TAPE READY

TTR    ZRO; SKS 10411B; BRR TTR; PRINT ($PUT TAPE DRIVE IN READY$)
       BRM TWAIT; BRR TTR

*      WAIT FOR TAPE READY

TWAIT  ZRO; SKS 14000B; BRU *-1; SKS 10411B; BRR TWAIT; BRU *-2

*      REWIND TAPE

REW    ZRO; BRM TWAIT; EOM 14011B; BRM TWAIT; BRR REW

*      FORWARD SCAN IN BINARY

FSCAN  ZRO; BRM TWAIT; EOM 3631B; WIM TB; BRM TWAIT; BRR FSCAN

*      REVERSE SCAN IN BINARY (BACKUP 1 RECORD)

RSCAN  ZRO; BRM TWAIT; SKS 12011B; BRR RSCAN; EOM 7631B; WIM TB
       SKS 12011B; BRR RSCAN; BRM TWAIT; BRR RSCAN

*      MAG TAPE BACKSPACE FILE

BSF    ZRO; BRM RSCAN; SKS 12011B; BRR BSF; SKS 13611B; BRR BSF; BRU BSF+1

*      PRINT TAPE DENSITY SELECT

PDEN   ZRO; PRINT ($TAPE DRIVE SET AT ); SKS 10411B; BRU *+2; BRU *-2
       SKS 17211B; BRU B800; SKS 16611B; BRU B556
       PRINT (200 BPI$); LDA =310B; BRU PDENR
B800   PRINT (800 BPI$); LDA =1440B; BRU PDENR
B556   PRINT (556 BPI$); LDA =1054B
PDENR  STA DEN; BRR PDEN
DEN    ZRO;*TAPE DENSITY SELECT SETTING

*      COMMON MESSAGES

EOTMSG ZRO; PRINT (END OF TAPE$); BRR EOTMSG
TOGGLE ZRO; PRINT (- TOGGLE RUN TO CONTINUE$); BRR TOGGLE

TPOS   ZRO;*TAPE POSITION
*
*      MESSAGE DRIVER FROM BERT'S MEDIA VERSION C1.6

*MESSAGE DRIVER
TMSG   CLX; EAX* 0; STX TWDP
WD     LDA* TWDP; STA TWD; RPT 4; BRM TCH1; ENDR; MIN TWDP; BRU WD
TCH1    ZRO 0; CLA; LDB TWD; LSH 6; STB TWD; SKE =17B; BRU *+2; BRR 0
       SKG =77B; BRU *+2; BRR TCH1; CAX; LDA TABLE,2; BRM TYPE; BRR TCH1
*OUTPUT CHARACTER IN A REGISTER TO TTY
TYPE   ZRO 0; CLB; LSH 18; STA CHAR; BRTW; BRU *-1
       EOM 2041B; MIW CHAR; TOPW; BRTW; BRU *-1; BRR TYPE
*TRANSLATION TABLE
*TRIMED ASC II TO SDS INTERNAL CODE
TABLE  DATA 12B,57B,14B,17B,52B,57B,57B,14B
       DATA 74B,34B,54B,20B,73B,40B,33B,61B
       DATA 0B,1B,2B,3B,4B,5B,6B,7B
       DATA 10B,11B,15B,56B,36B,13B,16B,17B
       DATA 57B,21B,22B,23B,24B,25B,26B,27B
       DATA 30B,31B,41B,42B,43B,44B,45B,46B
       DATA 47B,50B,51B,62B,63B,64B,65B,66B
       DATA 67B,70B,71B,35B,76B,55B,57B,57B
TWDP   ZRO 0 WORD POINTER
TWD    ZRO 0 WORD CONTAINING CHARACTER
CHAR   ZRO 0 CHARACTER BEING OUTPUTED
*INPUT NUMBER FROM TTY
*NUMBER RETURNED IN A REGISTER
INTYP  ZRO 0; CLAB; STA T1; LDX =-8; BRM INTP; BRX *-1
T1     ZRO 0 TEMP STORAGE
INTP   ZRO 0; BRM ITP; SKG =7; BRU INTP1; SKE =52B; BRU INTPER
       LDA T1; BRR INTYP
INTP1  LDA T1; LSH 3; MRG T; STA T1; BRR INTP
INTPER LDA =-1; BRR INTYP
*INPUT ONE CHARACTER FROM TTY
*RETURN CHARACTER IN A REGISTER
ITP    ZRO 0; BRTW; BRU *-1; EOM 2001B; WIM T; DISW; LDA T; BRR ITP
T      ZRO 0 TEMP LOACTION

*      PRINT DECIMAL NUMBER GIVEN BINARY NUMBER - FROM BERT'S MEDIA

BTODE  ZRO 0; STA BT2; CLA;CON6 STA BT4; LDA BT2;CON7 STA BT1
       LRSH 23; DIV =10; SKE BT4; BRU CON7; CBA; BRM TYPE; LDA BT1
       SKE BT2; BRU CON6; BRR BTODE
BT2    ZRO
BT4    ZRO
BT1    ZRO

CHECKE DATA 52525252B;*PROGRAM LOAD CHECK WORD

       END
MEDIA ** FICHE/FRAME BREAK *****
MEDIA SYMSORT

SYM.  PG.LN. IDENT.

B556   19 11 MEDIA   B800   19 10 MEDIA   BEG     1 37 MEDIA   
BEG1    1 39 MEDIA   BEGIN   2  4 MEDIA   BINSW   7  1 MEDIA   BSF    19  3 MEDIA   
BSFR   10 18 MEDIA   BT1    20 26 MEDIA   BT2    20 24 MEDIA   BT4    20 25 MEDIA   
BTODE  20 21 MEDIA   C029   15 12 MEDIA   CB      1 27 MEDIA   CB1     9  5 MEDIA   
CB2     9  6 MEDIA   CFORMS  6 36 MEDIA   CHAR   20  5 MEDIA   CHECKB  1 35 MEDIA   
CHECKE 20 28 MEDIA   COL1    6 33 MEDIA   CP      1 30 MEDIA   CPUP   18  8 MEDIA   
CR      1 29 MEDIA   CRRDY   6  9 MEDIA   CT029  15 14 MEDIA   CTC    14 33 MEDIA   
CTC1   14 37 MEDIA   CTCEF  14 39 MEDIA   CTCER  15  4 MEDIA   CTCER1 15  7 MEDIA   
DEN    19 13 MEDIA   EOTMSG 19 17 MEDIA   ERASE  13 32 MEDIA   ERR     6  5 MEDIA   
FPT    13 38 MEDIA   FSCAN  18 33 MEDIA   FSF    10 19 MEDIA   G(1)    1 22 MEDIA   
G(2)    1 21 MEDIA   GTP    10  9 MEDIA   HEADSW  6 35 MEDIA   IGNORE  6 34 MEDIA   
INIT   18  3 MEDIA   INS     2  9 MEDIA   INTP   20 10 MEDIA   INTP1  20 12 MEDIA   
INTPER 20 13 MEDIA   INTYP  20  8 MEDIA   IPC     8 39 MEDIA   IRC     6 23 MEDIA   
IRT    11  3 MEDIA   ITP    20 16 MEDIA   IWT    14  4 MEDIA   M2629  18 12 MEDIA   
M2629A 18 15 MEDIA   MBC     7  4 MEDIA   MSG     1 17 MEDIA   NCP     9 10 MEDIA   
NCR     7  5 MEDIA   PBC     8  7 MEDIA   PC      7 24 MEDIA   PC1     7 25 MEDIA   
PC2     7 26 MEDIA   PC3     7 27 MEDIA   PCABRT  8 34 MEDIA   PCC     7 13 MEDIA   
PCCC    9 12 MEDIA   PCCINS  8 19 MEDIA   PCCLSW  8 18 MEDIA   PCCW    9 14 MEDIA   
PCER    7 35 MEDIA   PCER1   7 37 MEDIA   PCERSW  9  8 MEDIA   PCFB    8 11 MEDIA   
PCFB1   8 12 MEDIA   PCFB2   8 14 MEDIA   PCINT   7 31 MEDIA   PCL     8 23 MEDIA   
PCL1    8 25 MEDIA   PCPOT   9  7 MEDIA   PCR     7 20 MEDIA   PCSW    9 15 MEDIA   
PCWC    9 13 MEDIA   PCWP    9 11 MEDIA   PDEN   19  7 MEDIA   PDENR  19 12 MEDIA   
PNCP    8 29 MEDIA   PNCR    5 14 MEDIA   PNCR1   5 16 MEDIA   PNCR2   5 20 MEDIA   
PNCR3   5 21 MEDIA   PNCRB   6 32 MEDIA   POST   10 14 MEDIA   POST1  10 20 MEDIA   
POSTER 10 21 MEDIA   PRINT   1 19 MEDIA   PTPOS  11 15 MEDIA   PTR    10  5 MEDIA   
PTW    12 16 MEDIA   PUNCH   3 35 MEDIA   PUNCH1  3 37 MEDIA   PUNCH2  4  6 MEDIA   
PUNCH3  4 15 MEDIA   RC      4 36 MEDIA   RC1     4 38 MEDIA   RCB     5  6 MEDIA   
RCB1    5  8 MEDIA   RCB2    5  9 MEDIA   RCBA    5 10 MEDIA   RCC     4 24 MEDIA   
RCC1    4 32 MEDIA   RCCC    7  2 MEDIA   RCCOL   6 29 MEDIA   RCCW    6 30 MEDIA   
RCE     7  6 MEDIA   RCEF    6 39 MEDIA   RCFOR1  5 34 MEDIA   RCFOR2  5 36 MEDIA   
RCFOR3  5 35 MEDIA   RCFOR4  5 37 MEDIA   RCFOR5  6  4 MEDIA   RCFORM  5 30 MEDIA   
RCIND   6 13 MEDIA   RCINDX  6 37 MEDIA   RCINT   5  2 MEDIA   RCN     7  7 MEDIA   
RCR1    4 26 MEDIA   RCR3    4 28 MEDIA   RCR4    4 30 MEDIA   RCS     6 38 MEDIA   
RCW     4 31 MEDIA   RCWC    7  3 MEDIA   RCWP    6 31 MEDIA   RCWTER  6 18 MEDIA   
READ    2 32 MEDIA   READ1   2 34 MEDIA   READ2   3  8 MEDIA   READ3   3 26 MEDIA   
READ4   3 21 MEDIA   REW    18 29 MEDIA   ROW     9  9 MEDIA   RSCAN  18 37 MEDIA   
RT      9 33 MEDIA   RT1     9 34 MEDIA   RT2     9 38 MEDIA   RT3     9 37 MEDIA   
RTC     9 21 MEDIA   RTC1    9 23 MEDIA   RTCC   11 12 MEDIA   RTCW   11  9 MEDIA   
RTE    11 16 MEDIA   RTEF   11 14 MEDIA   RTER    9 39 MEDIA   RTERC  11  8 MEDIA   
RTH1   10 34 MEDIA   RTHEAD 10 31 MEDIA   RTHER  10 37 MEDIA   RTHER1 10 38 MEDIA   
RTHOLD 10 35 MEDIA   RTHX   11  7 MEDIA   RTINT  10  1 MEDIA   RTN    11 17 MEDIA   
RTS    11 11 MEDIA   RTW     9 27 MEDIA   RTW1    9 29 MEDIA   RTWC   11 13 MEDIA   
RTWP   11 10 MEDIA   SET1   15 38 MEDIA   SETTAB 15 26 MEDIA   START   2  5 MEDIA   
STP    15 18 MEDIA   STRAIL  5 26 MEDIA   SW2629 15 20 MEDIA   T      20 17 MEDIA   
T026   17  1 MEDIA   T029   17 17 MEDIA   T1     20  9 MEDIA   T940   16 23 MEDIA   
T940S  16 11 MEDIA   TABLE  19 34 MEDIA   TB      1 28 MEDIA   TCC    14 21 MEDIA   
TCC1   14 22 MEDIA   TCC2   14 23 MEDIA   TCC3   14 24 MEDIA   TCC4   14 26 MEDIA   
TCC5   14 27 MEDIA   TCCC   14 28 MEDIA   TCH1   19 27 MEDIA   TITLE   6 27 MEDIA   
TMSG   19 25 MEDIA   TOGGLE 19 18 MEDIA   TPOS   19 20 MEDIA   TRAIL   6 28 MEDIA   
TS     16 24 MEDIA   TS026  16  4 MEDIA   TTR    18 20 MEDIA   TWAIT  18 25 MEDIA   
TWD    20  4 MEDIA   TWDP   20  3 MEDIA   TYPE   19 30 MEDIA   VERIFY 10 27 MEDIA   
WD     19 26 MEDIA   WFN    12 39 MEDIA   WFNC   13  3 MEDIA   WT     12  3 MEDIA   
WT2    12  4 MEDIA   WT3    12  9 MEDIA   WTC    11 23 MEDIA   WTC1   11 24 MEDIA   
WTCC   14 12 MEDIA   WTCL   14 11 MEDIA   WTCOL  11 28 MEDIA   WTCW   14 15 MEDIA   
WTEF   13  7 MEDIA   WTEOF  13 21 MEDIA   WTEOF1 13 23 MEDIA   WTEOM  12  6 MEDIA   
WTEOT  13 28 MEDIA   WTERC  14  9 MEDIA   WTFR   12 24 MEDIA   WTHEAD 12 20 MEDIA   
WTINT  12 12 MEDIA   WTLR   13 11 MEDIA   WTLR1  13 17 MEDIA   WTLR2  13 14 MEDIA   
WTLR3  13 15 MEDIA   WTLR4  13 12 MEDIA   WTPOT  14 10 MEDIA   WTR    11 37 MEDIA   
WTSR   12 29 MEDIA   WTW    11 33 MEDIA   WTWC   14 14 MEDIA   WTWP   14 13 MEDIA   
XCB     8  3 MEDIA   
MEDIA ** FICHE/FRAME BREAK *****
MEDIABOOT
GO     CLA; LDX KM1; BRS 100; HLT
       LDA EIGHT; BRS 105; SKE K11B5; BRU *+2; HLT
       LDA SIX; BRS 105
       LDA FIVE; BRS 105; BRS 105
       LDA BOOT; BRS 103; BRM WRITE; BRM WRITE
       LDA FIVE; BRS 105; LDA SEVEN; BRS 105
       LDA SIX; BRS 105; BRS 101; BRS 10
WRITE ZRO
       LDX KM3775
WR1    LDA 1000B+3775B,2
       STA 14002B+3775B,2
       BRX *-2
       LDA K3775
       STA 14001B
       ADM WR1
       CLA
       STA 14000B
       STA 17777B
       LDA K14000
       BRS 103
       BRR WRITE
BOOT   DATA *+1
       DATA 0 (START BOOT BUFFER)
       DATA 56 (WORD COUNT)
       WIM 12B,2                       (2)
       BRX 2                           (3)
       LDX 11B                         (4)
       WIM 72B,2                       (5)
       BRX 5                           (6)
       BRU 14B                         (7)
       NOP 0                           (10)
       DATA -60B                       (11)
       NOP 0                           (12)
       NOP 0                           (13)
       LDA 71B (PROG LOADING START)    (14)
       STA 3   (START OF RECORD)       (15)
       LDA 3                           (16)
       STA 2                           (17)
       SKS 10410B (TAPE READY)         (20)
       SKS 21000B (BUFFER READY)       (21)
       BRU 20B                         (22)
       EOM 3610B (READ TAPE BINARY)    (23)
       WIM* 2 (READ A WORD)            (24)
       MIN 2                           (25)
       NOP 0                           (26)
       NOP 0                           (27)
       NOP 0                           (30)
       NOP 0                           (31)
       NOP 0                           (32)
       SKS 21000B (BUFFER READY TEST)  (33)
       BRU 54B                         (34)
       SKS 13610B (EOF TEST)           (35)
       BRU 63B (DONE)                  (36)
       SKS 21000B (CHANNEL ERROR)      (37)
       BRU 51B                         (40)
       SKS 20400B (CHANNEL INTERRECORD)(41)
       BRU 46B (NO)                    (42)
       LDA 2                           (43)
       SUB 61B (CORRECT FOR EMPTY)     (44)
       STA 2 (BUFFER)                  (45)
       LDA 2                           (46)
       STA 3                           (47)
       BRU 23B                         (50)
       EOM 7630B (SCAN REVERSE)        (51)
       EOM 3610B (READ FWD)            (52)
       BRU 16B                         (53)
       SKS 12610B (TAPE GAP TEST)      (54)
       BRU 35B (TAPE GAP)              (55)
       BRU 24B                         (56)
       NOP 0                           (57)
       NOP 0                           (60)
       DATA 1                          (61)
       NOP 0                           (62)
       LDA 66B                         (63)
       STA 1                           (64)
       STA 25B                         (65)
       BRU* 70B                        (66)
       NOP 0                           (67)
       DATA 1000B (PROG. STARTUP LOC)(70)
       DATA 1000B (LOADING LOC.)       (71)
       DATA 0
FIVE DATA 5
SIX DATA 6
SEVEN DATA 7
EIGHT DATA 8
K3775 DATA 3775B
KM3775 DATA -3775B
K14000 DATA 14000B
K11B5 DATA 11B5
KM1 DATA -1
       END
MEDIA ** FICHE/FRAME BREAK *****
MEDIABOOT SYMSORT

SYM.  PG.LN. IDENT.

BOOT    1 22 GO      EIGHT   3  7 GO      FIVE    3  4 GO      
K11B5   3 11 GO      K14000  3 10 GO      K3775   3  8 GO      KM1     3 12 GO      
KM3775  3  9 GO      SEVEN   3  6 GO      SIX     3  5 GO      WR1     1 10 GO      
WRITE   1  8 GO      
MEDIA ** FICHE/FRAME BREAK *****
MAKEMEDIA
NARP
MEDIA
BMEDIA

T
NARP
MEDIABOOT
BBOOT

T
RES
XDD
1000;TBMEDIA
1\BRU* 70
25\BRU* 70
70\1000
%QSAV 0 TO 7777 ON DMEDIA

RES
XDD
240;TBBOOT
1000;TBMEDIA
%QSAV 0 TO 7777 ON TMEDIA

240
COM T
   OWLw