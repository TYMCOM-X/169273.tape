TRANSPOSE ** FICHE/FRAME BREAK *****
TRANS
C      TRANSPOSE VERSION 1.01 1/9/73
C
       INTEGER INPUT(256),ISAVE(6),NAME11(30),NAME12(30)
       INTEGER NAME21(30),NAME22(30),LISTADDRESS(0/2),LIST(5)
       REAL ROWCOL(3010)
C
       COMMON/LINEINPUT/INPUT,ISAVE,IP,ICOUNT,INDEX
C
       DATA IQUOTE,LETN,LETA,LETM,IDOT,LETD,LETT
+      /3H  ',3H  N,3H  A,3H  M,3H  .,3H  D,3H  T/
C
       CONNECT I/O, GO TO 9000
       IHUSH=0
       READ(0,1)(INPUT(I),I=10,256)
1      FORMAT(256A1)
       DO 3 I=10,256
3      INPUT(I)=INPUT(I)/65536
       ICOUNT=256
       IP=10
       IER=NUMSTR(IF,Z)
       IF(IER.GT.3)GO TO 9010
       IP1=IP
       IF1=IF
       IP=IF
       IF(KOMMA(0).EQ.1)GO TO 4
       IKOM=KOMMAND(1)
       IF(IKOM.LT.0)GO TO 9010
       IF(IKOM.EQ.0)GO TO 10
       IF(IKOM.EQ.2)IHUSH=1;GO TO 10
C      IKOM='TO' OR ','
4      IER=NUMSTR(IF,Z)
       IF(IER.EQ.4)GO TO 10
       IP2=IP
       IF2=IF
       IP=IF
C      LOOK FOR 'HUSH' AGAIN
       IKOM=KOMMAND(1)
       IF(IKOM.EQ.2)IHUSH=1
       IF(IKOM.LT.0)GO TO 9010
       GO TO 20
C      TRANSPOSE A TO A
10     IP2=IP1
20     DO 30 I=1,IF1-IP1
30     INPUT(I)=INPUT(IP1-1+I)
       INPUT(I)=IQUOTE
       INPUT(I+1)=LETN
       INPUT(I+2)=LETA
       INPUT(I+3)=LETM
       INPUT(I+4)=IDOT
       INPUT(I+5)=LETA
       INPUT(I+6)=IQUOTE
       IP=1
       NUMCHR=IF1-IP1+7
       NCHARS=JPACK(NAME11,NUMCHR)
       IF(IP1.NE.IP2)GO TO 50
       DO 40 J=1,30
40     NAME21(J)=NAME11(J)
50     INPUT(I+1)=LETD
       INPUT(I+3)=LETT
       IP=1
       NCHARS=JPACK(NAME12,NUMCHR)
       IF(IP1.NE.IP2)GO TO 70
       DO 60 J=1,30
60     NAME22(J)=NAME12(J)
       GO TO 100
70     DO 80 I=1,IF2-IP2
80     INPUT(I)=INPUT(IP2-1+I)
       INPUT(I)=IQUOTE
       INPUT(I+1)=LETN
       INPUT(I+2)=LETA
       INPUT(I+3)=LETM
       INPUT(I+4)=IDOT
       INPUT(I+5)=LETA
       INPUT(I+6)=IQUOTE
       IP=1
       NUMCHR=IF2-IP2+7
       NCHARS=JPACK(NAME21,NUMCHR)
       IP=1
       INPUT(I+1)=LETD
       INPUT(I+3)=LETT
       NCHARS=JPACK(NAME22,NUMCHR)
C
C      FILENAMES HAVE BEEN STORED
C
100    OPEN INPUT,2:NAME11,SYMBOLIC,ERROR GO TO 9020
       OPEN INPUT,3:NAME12,SYMBOLIC,ERROR GO TO 9020
C      INPUT FILES NOW OPEN...READ NAM.A FILE
       CALL READ(2)
       IER=NUMSTR(IF,Z)
       NUMROW=Z
       IP=IF
       IER=NUMSTR(IF,Z)
       NUMCOL=Z
       DO 110 I=1,NUMROW+NUMCOL
       CALL READ(2)
       NCHARS=PACKF(RC,6,0)
110    ROWCOL(I)=RC
       CLOSE(2)
C      OPEN OUTPUT STRUCTURE FILE
       IF(IHUSH.EQ.1)GO TO 120
       OPEN OUTPUT,2:NAME21,SYMBOLIC,CONFIRM,ERROR GO TO 9030
       GO TO 130
120    OPEN OUTPUT,2:NAME21,SYMBOLIC,ERROR GO TO 9030
130    WRITE(2,131)NUMCOL,NUMROW
131    FORMAT(2I5)
C      WRITE COLUMN NAMES
       DO 140 I=NUMROW+1,NUMROW+NUMCOL
140    WRITE(2,141)ROWCOL(I)
141    FORMAT(A6)
C      WRITE ROW NAMES
       DO 150 I=1,NUMROW
150    WRITE(2,141)ROWCOL(I)
C      READ DATA FILE
       DO 200 I=0,NUMROW-1
200    READ(3,201)(ROWCOL(I*NUMCOL+J),J=1,NUMCOL)
201    FORMAT(14G.11)
C      OPEN NEW DATA FILE
       CLOSE
       OPEN OUTPUT,2:NAME22,SYMBOLIC,ERROR GO TO 9030
C      WRITE TO DATA FILE
       DO 210 I=1,NUMCOL
210    WRITE(2,201)(ROWCOL(I+J),J=0,NUMCOL*(NUMROW-1),NUMCOL)
       GO TO 10000
C      ERROR MESSAGES
9000   TYPE 9001
9001   FORMAT('END OF FILE ENCOUNTERED')
       GO TO 10000
9010   TYPE 9011
9011   FORMAT('?')
       GO TO 10000
9020   TYPE 9021
9021   FORMAT('CANNOT OPEN INPUT FILE')
       GO TO 10000
9030   TYPE 9031
9031   FORMAT('CANNOT OPEN OUTPUT FILE')
10000  CLOSE
       DONE
       END
C
C
C
       SUBROUTINE READ(IFN)
       INTEGER INPUT(256),ISAVE(6)
       COMMON/LINEINPUT/INPUT,ISAVE,IP,ICOUNT,INDEX
1      CALL READFILE(NCHARS,IFN)
       IF(INPUT(1).EQ.3H  !)GO TO 1
       RETURN
       END
       FUNCTION JPACK(N,M)
       INTEGER INPUT(256),ISAVE(6)
       COMMON/LINEINPUT/INPUT,ISAVE,IP,ICOUNT,INDEX
       INTEGER N(1),SHIFT(3)
       DATA SHIFT/65536,256,1/
       DO 1 I=1,30
1      N(I)=0
       JPACK=0
       ICHAR=INPUT(IP)
       I=1
2      DO 3 J=1,3
       IF(JPACK.GE.M)RETURN
       N(I)=N(I)+ICHAR*SHIFT(J)
       JPACK=JPACK+1
       IP=IP+1
3      ICHAR=INPUT(IP)
       I=I+1
       GO TO 2
       END
       FUNCTION NUMSTR(IFINAL,Z)
*
       INTEGER INPUT(256),ISAVE(6)
*
       COMMON/LINEINPUT/INPUT,ISAVE,IPOINT,ICOUNT,INDEX
*
       DATA NPLUS,NMINUS,NDOT/3H  +,3H  -,3H  ./
       DATA NE,NCOMMA,NSEMIC/3H  E,3H  ,,3H  ;/
       CONNECT OVERFLOW,CALL DISPLAY('ILLEGAL NUMBER$/');GO TO 1500
       IF(ICOUNT.EQ.0)NUMSTR=4;RETURN
       IMAX=ICOUNT+1
       NSIGN=1
       NF=0
       SIGN=1.0
       NK=0
       K1=0
       K2=0
       K3=0
       K4=0
       A=0
       NEX=0
       ICOL=IPOINT
5      IF(INPUT(ICOL).EQ.0)GO TO 10
       IF(INPUT(ICOL).NE.NCOMMA)GO TO 15
10     ICOL=ICOL+1
       IF(ICOL.GT.IMAX)GO TO 1700
       GO TO 5
15     IPOINT=ICOL
16     IF(INPUT(ICOL).EQ.NSEMIC)GO TO 1800
       IF(INPUT(ICOL).EQ.NPLUS)GO TO 30
       IF(INPUT(ICOL).NE.NMINUS)GO TO 40
       IF(K3.GT.0)GO TO 28
       SIGN=-1.0
       GO TO 30
28     NSIGN=-1
30     K1=K1+1
       IF(K1.GT.1)GO TO 999
       ICOL=ICOL+1
40     IF(INPUT(ICOL).NE.NDOT)GO TO 50
       K2=K2+1
       IF(K2.GT.1)GO TO 999
       ICOL=ICOL+1
50     IF(K3.GT.0)GO TO 200
55     I=INPUT(ICOL)-16
       IF(I.LE.9.AND.I.GE.0)GO TO 72
       GO TO 100
72     IF(K2.EQ.0)GO TO 79
       NF=NF+1
       A=A+I/(10.**NF)
       GO TO 80
79     A=A*10.+I
80     ICOL=ICOL+1
       K4=K4+1
       GO TO 40
100    IF(INPUT(ICOL).EQ.NCOMMA)GO TO 120
       IF(INPUT(ICOL).EQ.0)GO TO 120
       IF(INPUT(ICOL).EQ.NSEMIC)GO TO 120
       IF(INPUT(ICOL).EQ.NE)GO TO 130
       GO TO 999
120    IF(K4.EQ.0)GO TO 9991
       GO TO 500
130    IF(K4.EQ.0)GO TO 999
       K1=0;K2=1
       K3=K3+1
       IF(K3.GT.1)GO TO 999
140    ICOL=ICOL+1
       IF(INPUT(ICOL).EQ.NMINUS)GO TO 150
       IF(INPUT(ICOL))16,155,16
150    K3=K3+1
       NSIGN=-1
155    ICOL=ICOL+1
       IF(INPUT(ICOL).NE.0)GO TO 16
       ICOL=ICOL+1
       GO TO 16
200    I=INPUT(ICOL)-16
       IF(I.LE.9.AND.I.GE.0)GO TO 280
       GO TO 300
280    NK=NK+1
       NEX=NEX*10+I
       ICOL=ICOL+1
       IF(NK.LT.2)GO TO 200
300    IF(INPUT(ICOL).EQ.NCOMMA)GO TO 500
       IF(INPUT(ICOL).EQ.NSEMIC)GO TO 500
       IF(INPUT(ICOL).NE.0)GO TO 999
500    IF(NEX.GT.76)GO TO 1500
       Z=SIGN*A*10.**(NSIGN*NEX)
       IF(ICOL.LE.IMAX)GO TO 520
       GO TO 1500
520    NUMSTR=2
       GO TO 2000
999    ICOL=ICOL+1
9991   IF(INPUT(ICOL).EQ.0)GO TO 1500
       IF(INPUT(ICOL).EQ.NCOMMA)GO TO 1500
       IF(INPUT(ICOL).EQ.NSEMIC)GO TO 1500
       IF(ICOL.LE.IMAX)GO TO 999
1500   NUMSTR=1
       Z=1.E76
       GO TO 2000
1700   NUMSTR=4
       DO 1710 I=1,ICOUNT
1710   INPUT(I)=0
       GO TO 2000
1800   NUMSTR=3;ICOL=ICOL+1
2000   IFINAL=ICOL
2001   RETURN
       END
TRANSPOSE ** FICHE/FRAME BREAK *****
TRANS SYMSORT

SYM.  PG.LN. IDENT.

+       1  7 C       1       4 29 C       1       4 19 C       1       1 11 C       
10      5 27 C       10      1 38 C       100     6 18 C       10000   4 13 C       
110     3 13 C       120     6 23 C       120     3 19 C       130     6 25 C       
130     3 20 C       131     3 21 C       140     6 29 C       140     3 24 C       
141     3 25 C       15      5 30 C       150     6 32 C       150     3 28 C       
1500    7 20 C       155     6 34 C       16      5 31 C       1700    7 23 C       
1710    7 25 C       1800    7 27 C       2       4 33 C       20      1 39 C       
200     6 38 C       200     3 31 C       2000    7 28 C       2001    7 29 C       
201     3 32 C       210     3 38 C       28      5 37 C       280     7  2 C       
3       4 38 C       3       1 13 C       30      5 38 C       30      2  1 C       
300     7  6 C       4       1 27 C       40      6  2 C       40      2 14 C       
5       5 25 C       50      6  6 C       50      2 15 C       500     7  9 C       
520     7 13 C       55      6  7 C       60      2 21 C       70      2 23 C       
72      6 10 C       79      6 14 C       80      6 15 C       80      2 24 C       
9000    4  2 C       9001    4  3 C       9010    4  5 C       9011    4  6 C       
9020    4  8 C       9021    4  9 C       9030    4 11 C       9031    4 12 C       
999     7 15 C       9991    7 16 C       C       4  1 C       
C       3 36 C       C       3 33 C       C       3 29 C       C       3 26 C       
C       3 22 C       C       3 15 C       C       3  3 C       C       1 37 C       
C       1 32 C       C       1 26 C       CM      1  8 C       CM      1  6 C       
CM      1  5 C       CM      1  2 C       CM100   3  1 C       CMC     2 39 C       
CMCMCM  4 16 C       
TRANSPOSE ** FICHE/FRAME BREAK *****
TRANSM
BFO
OFF DEB
COM TRANS TRANSB


LOAD TRANSB TRANCOMB  SMALLEDIT ZADCONV ZADLIB
WRI TRANSPOSE

Q
DEL TRANSB
COM TEL
