1RCHARGE ** FICH/FRAME BREAK *****
RCHARGE1400
RCHG   EQU      1              -1> BCHARGE 1=>RCHARGE
       IF RCHG
RCHARGE IDENT CLC
       REM  THIS IS RCHARGE
       ELSE
BCHARGE IDENT CLC
       REM THIS IS BCHARGE
       ENDF
DEBUG  EQU     -1              -1=> PRODUCTION 1=> DEBUG
RECLEN EQU     28              DEFINE LENGTH OF RECORDS
*1400 USES NEW BATCH FORMAT
*1311 MAKES AREA 30 CHARGED FRENCH, EXCEPT FOR 31 WHICH IS BELGIUM
*1310  DOES NOT ALLOW TYPE 7 FOR FOREIGN USERS
*1310 MOVES BELGIUM FROM DIST 77 TO  AREA 3

MINPOS  EQU     12
SKNE   OPD     536B5,2

        BRU     BEGIN
        BRS     10
       IF RCHG
MVER   ASC     '$REMOTE SPOOL ENTRY PROGRAM VERSION 14.00$/'
       ELSE
MVER    ASC     '$BATCH ENTRY PROGRAM VERSION 14.00$/'
       ENDF
        ASC     'CARTER '

MSG     POPD    100B5,2
        STP     SAVA
        STX     SAVX
        EAX*    0
        CXA
        ETR     =37777B
        LDB     =-1
        LDX     =1
        BRS     34
        BRU     MSGP2
MSGP    POPD    101B5,2
        STA     SAVA
        STX     SAVX
        EAX*    0
        CXA
        ETR     =37777B
        LDB     =-1
        LDX     FNO
        BRS     34
MSGP2   LDP     SAVA
        LDX     SAVX
        BRR     0
SPACE   POPD    103B5,2
        STP     SAVA
        STX     SAVX
        EAX*    0
        CXA
        ETR     =37777B
        CNA
        CAX
        CLA
        CIO     FNO
        BRX     *-1
        BRU     MSGP2
CR      POPD    104B5,2
        STP     SAVA
        STX     SAVX
        EAX*    0
        CXA
        ETR     =37777B
        CNA
        CAX
        LDA     =155B
        CIO     FNO
        BRX     *-1
        BRU     MSGP2
SAVX    ZRO
SAVA    ZRO
SAVB    ZRO
CINSW   DATA    -1
TERMCH  ZRO
SYSNO   ZRO
CZONE   ZRO
SYSNAM  ZRO
SYSXXX ZRO
FSUR    DATA    88
BELSUR DATA    700
*FRENCH SURCHARGE ON CARD WORK CURRENTLY 88 FF


BEGIN   STP     CIN
        SKE     =0
        STA     CINSW
        LDA     20000B
        BRS     71
        BRU     *+2
        BRU     B1
        BRS     39
        SKA     =4B7
       IF       RCHG
       BRU B1; BRU NOPE
       ELSE
        BRU     *+2
        BRU     NOPE
        RSH     2
        ETR     =1777B
        SNE     =2
        BRU     B1
        SNE     =0
        BRU     B1
       ENDF
NOPE    TCO     =0
        TCO     ='?'
        BRS     10
B1      LDA     =BUF
        LDB     =200B
        LDX     =100B
        BRS     124
        LDA     BUF+74B
        STA     CZONE
        ADM     RDX
        LDA     BUF+75B
        LRSH    12
        STA     SYSNO
        LDA     BUF+77B
        STA     SYSNAM

       LDA SYSNO; CLB; LRSH 23; DIV =100; ADD =20B; WCI SYSPTR
       COPY BA,B;  LRSH 23; DIV =10; ADD =20B; WCI SYSPTR
       COPY BA; ADD =20B; WCI SYSPTR
       LDA =-1; LDX =200020B; BRS 176; ABC; LSH 4; CLA; LSH 4; STA MO
       ADD =1; CLB; LRSH 23; DIV =10; ADD =20B; WCI MONPTR; CBA; ADD =20B
       WCI MONPTR
       IF      RCHG
       BRM     GUSER
       BRM     VER
       ENDF
        MSG     MVER

*COMMAND DISPATCHER

RESET   CLA
       STA     TPUR
       STA     AGINSW          ASK AGIN?
       STA     HOLDSW
        STA     ERFLG
        STA     LSTSW
        STA     NUMSW
        STA     ALLSW
        STA     ORECSW
        STA     CORSW
        STA     NULLSW
        STA     CRESW
        LDA     =4B4
        LDX     =1
        BRS     12
        BRS     147
       BRS     114             ALLOW ESCAPES AGAIN
GLTCH   SKN     CINSW
        BRU     IN1
        LDA     =155B
        CIO     =1
        CIO     =1
       IF RCHG
       LDA ='*'
       ELSE
        LDA     ='>'
       ENDF
        CIO     =1
IN1     CIO     CIN
        SNE     =155B
        BRU     IN1
        SNE     =0
        BRU     IN1
        LRSH    8
IN2     CIO     CIN
        SNE     =155B
        BRU     CHK
        SNE     =0
        BRU     CHK
        LRSH    8
IN3     CIO     CIN
        SNE     =155B
        BRU     ERR
        SNE     =0
        BRU     ERR
        LRSH    8
IN4     CIO     CIN
        SNE     =155B
        BRU     IN5
        SKE     =0
        BRU     IN4
IN5     STA     TERMCH
        LDX     =CTBL-CTBLND
        CBA
        SKE     CTBLND,2
        BRX     *-1
        BRU*    BTBLND,2
CHK     LDX     =-1
        BRS     11
        CLA
        LSH     8
        SNE     ='Q'
        BRU     THRU
        SNE     ='?'
        BRU     HEL
        BRU     ERR
ERR     LDA     ERFLG
        SKE     =0
        BRU     ERR1
        MIN     ERFLG
        MSG     ERMSG           (PRINT ? AND CR)
        BRU     GLTCH
ERR1    MSG     ERMSG1
        BRU     RESET
ERFLG   ZRO
ERMSG   ASC     '$ ?$/'
ERMSG1  ASC     '$FOR ASSISTANCE, TYPE HELP$/'

       IF RCHG
CTBL   ASC 'SILRUPIOVAHCIUQLEHROC'
CTBLND DATA 0,LIST,PURGE,VOID,CHG,THRU,HEL,COR
       ELSE
CTBL    ASC     'SILRUPIOVAHCIUQLEHSOPCERERCKAM'
CTBLND  DATA    0,LIST,PURGE,VOID,CHG,THRU,HEL,COR,NULL,CREATE,MAKE
       ENDF
BTBLND DATA    ERR

CLBUF   ZRO
        LDA     =155B
        CIT     CIN
        BRR     CLBUF
        BRU     *-2
*TAKE DATE FROM TELETYPE AND MAKE STRING IN BATCH RECORD COMPLETION DATE
GTDATE ZRO
        MSG     M1              (COMPLETION DATE)
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        SKG     =12
        SKG     =0
        BRU     GTDAT2          (ERROR)
        STA     MO
        BRM     RDNO
        BRU     RESET
        SKG     =31
        SKG     =0
        BRU     GTDAT2          (ERROR)
        STA     DAY
        BRM     RDNO
        BRU     RESET
        LRSH    23
        DIV     =1900
        CBA
        SKG     =79
        SKG     =74
        BRU     GTDAT2          (ERROR)
        STA     YR
        LDA     =DATE
        MUL     =3
        LSH     23
        SUB     =1
        CAB
        STP     DATEPT
        LDA     MO
        BRM     GTDAT1
        LDA     ='-'
        WCI     DATEPT
        LDA     DAY
        BRM     GTDAT1
        LDA     ='-'
        WCI     DATEPT
        LDA     YR
        BRM     GTDAT1
        LDA     =200B
        WCI     DATEPT
        BRR     GTDATE
GTDAT1  ZRO
        LRSH    23
        DIV     =10
        ADD     =20B
        WCI     DATEPT
        CBA
        ADD     =20B
        WCI     DATEPT
        BRR     GTDAT1
GTDAT2  MSG     M2              (CORRECT DATE FORMAT IS MM-DD-YY)
        LDX     =-1
        BRS     11
        BRU     GTDATE+1
MO      ZRO
DAY     ZRO
YR      ZRO

*BUFFER FOR READING A RECORD FROM THE BATCH RECORD FILE

ALLHOL DATA    0               -1=> ALLOW HOLD IN YN  , 0=> NO HOLD
HOLDSW DATA    0               -1=> HOLD ENTERED , 0=> NO HOLD
TWOFLG DATA    0               -1=> TWO REQ FOR SAME USER (USED IN WCHG)
AGINSW DATA    0               -1=> HOLD COMMING IN FROM FILE
RECBUF  BSS    RECLEN
TYPE    EQU             RECBUF
UNAME  EQU     RECBUF+1
GAN    EQU     RECBUF+5
UUN    EQU     RECBUF+6
HOST   EQU     RECBUF+7
EDATE  EQU     RECBUF+8
PROJ   EQU     RECBUF+9
JOB    EQU     RECBUF+13
REQBY  EQU     RECBUF+14
NCHR   EQU     RECBUF+18
NPAG   EQU     RECBUF+19
PARTS  EQU     RECBUF+20
CARPRO EQU     RECBUF+21
FILPRO EQU     RECBUF+21
TAPPUR EQU     RECBUF+22
TAPCON EQU     RECBUF+23
DECCOL EQU     RECBUF+24
CURREN EQU     RECBUF+25
POST   EQU     RECBUF+26
FLAG   EQU     RECBUF+27
        ZRO
HBUF    BSS     30
        ZRO
CIN     ZRO
TOUT    ZRO
FNO     ZRO
DATEPT  BSS     2

*MESSAGE STRINGS

CC1    ASC     'NUMBER OF TAPES CONVERTED: /'
ILLTYP ASC     '$ILLEGAL TYPE$/'
M1      ASC     '$COMPLETION DATE: /'
M2      ASC     '$CORRECT DATE FORMAT IS MM-DD-YY/'
M3      ASC     '$REQUEST NO: /'
M4      ASC     '$ENTER LIMITING MONTH-DATE-YEAR: /'
M5      ASC     '$OUTPUT TO: /'
M6      ASC     '$ERROR IN COMMAND FILE - ABORTING$/'
M7      ASC     '$ALL? /'
M8      ASC     '$PURGE COMPLETED$/'
M9      ASC     '$$OKAY? /'
M10     ASC     '$BATCH TYPE: /'
M11     ASC     '$PAGES: /'
M12     ASC     '$PARTS: /'
M13     ASC     '$WERE LISTINGS DECOLLATED? /'
M14     ASC     '$ANY POSTAGE OR OTHER TRANSPORTATION CHARGE? /'
M15     ASC     '$ENTER AMOUNT: /'
M16     ASC     '$ANOTHER BATCH TYPE FOR THIS REQUEST? /'
M17     ASC     '$ANOTHER REQUEST? /'
M18     ASC     '$DISTRICT NO: /'
M19     ASC     '$ENTER POSTAGE OR TRANSPORTATION CHARGE: /'
M20     ASC     '$NUMBER OF CARDS: /'
M21     ASC     '$NUMBER OF FILES: /'
M22     ASC     '$ENTER NUMBER OF TAPES PURCHASED: '
M23     ASC     '$NUMBER OF CHARACTERS: /'
M24     ASC     '$RATE PER 100K CHARS.: /'
M25     ASC     '$NUMBER OF TAPE PURCHASED: /'
M26     ASC     '$ALL ENTRIES CORRECT? /'
M27     ASC     '$REENTER ALL DATA$/'
M28     ASC     '$NO RECORD OF THAT REQUEST$/'
M29     ASC     '$REQUEST VOIDED BY: /'
M30     ASC     '$ARE YOU SURE YOU WANT TO CHARGE /'
M31     ASC     '$MINIMUM POSTAGE CHARGE IS .13$/'
LHEAD   ASC     '$ REQ.   GAN  USER NAME    PROJECT CODE   REQUEST DATE/'
LHEADV  ASC     '$ REQ.   GAN  USER NAME    PROJECT CODE   REQUEST DATE'
       ASC     ' VOIDED BY /'
LHEAD1  ASC     '$ REQ.   GAN  USER NAME    PROJECT CODE   REQUEST DATE'
 ASC   '$TYPE CHARACTER   PAGES PRTS  CRD-FIL TAP-PUR TCNV  DEC  DELCHG CUR/'

*CONVERTS AN INTEGER IN A REGISTER TO THE FLOATING POINT NUMBER
*REPRESENTING THE NUMBER AS DOLLARS AND CENTS. INTEGER IN A MUST BE
*IN CENTS

CVT     ZRO
        BRS     51
        BRS     118
        FFDV    CVTDAT
        BRS     119
        BRR     CVT
RECVT   ZRO
        BRS     118
        FFMP    CVTDAT
        BRS     50
        SKB     =4B7
        ADD     =1
        BRR     RECVT
CVTDAT  DATA    31B6,7

*FIND A UNPROCESSED RECORD IN (*4ACCT)BATCHREC OR BATCHRECA.
*THE RECORD NUMBER MUST BE IN THE A REGISTER UPON ENTRY
*NO SKIP RECORD NOT FOUND, SKIP RECORD FOUND

FNDREC  ZRO
        SKN     LSTSW
        BRM     ORECF
FREC3   CLA
        SCP     RECFNO
        HLT     0
        RSP     RECFNO
        STA     CPTOP
FREC1   RCP     RECFNO
        SNE     CPTOP
        BRU     FREC2
        STA     RECCUR          (SAVE FOR POSSIBLE WRITE)
        LDX     =RECBUF
        LDA     =RECLEN
        BIO     RECFNO
        NOP
       IF RCHG; LDA RECBUF; ETR =7777B; SKE =9; BRU FREC1; ENDF
        SKN     ALLSW
        BRU     *+2
        BRU     FREC1C
        SKN     SPLSW
        BRU     *+3
FREC1C  RCP     RECFNO
        STA     ALLCUR
        SKN     LSTSW
        BRU     *+2
        BRU     FREC4
        SKN     ALLSW
        BRU     *+2
        BRU     FREC1A
        SKN     SPLSW
        BRU     *+2
        BRU     FREC1A
        LDA     JOB
        SKE     FJOB
        BRU     FREC1

        SKN     ORECSW
        BRU     *+2
        BRU     FREC5
FREC1A  SKN     FLAG
        BRU     *+2
        BRU     FREC1
FREC1B  LDA     RECFNO
        BRS     2
        MIN     FNDREC
        BRR     FNDREC
FREC2   LDA     RECFNO
        BRS     2
        SKN     RECFB
        BRU     *+2
        BRR     FNDREC          (BOTH FILES SEARCHED AND NOT FOUND)
        BRM     ORECFA
        BRU     FREC3
FREC4   SKN     ORECSW
        BRU     *+2
        BRU     FREC5
        MIN     FNDREC
        BRR     FNDREC
FREC5   LDA     FLAG
        SKE     =-2
        BRU     FREC1
        SKN     LSTSW
        BRU     FREC1B
        MIN     FNDREC
        BRR     FNDREC
FJOB    ZRO
RECCUR  ZRO
CPTOP   ZRO

*WRITE LAST RECORD READ

WREC    ZRO
        SKN     RECFB
        BRU     WREC1
        BRM     ORECFA
        BRU     WREC2
WREC1   BRM     ORECF
WREC2   LDA     RECCUR
        MRG     =4B7
        SCP     RECFNO
        HLT     0
        LDA    =RECLEN
        LDX     =RECBUF
        BIO     RECFNO
        NOP
        LDA     RECFNO
        BRS     2
        BRR     WREC

*FILE OPENING ROUTINES

*GET INDEX BLOCK POINTER

GIP     ZRO
        LDB     =FILDAT
        LDX     =5
        BRS     96
        LDA     FILDAT
        ETR     =3777B
        CAX
        LDA     FILDAT+4
        BRR     GIP
FILDAT  BSS     10

*OPEN A FILE IN WRITE MODE EXPECT POINTERS IN FILPT
*NO SKIP UNSUCESSFUL WITH
*ERROR NUMBER IN X, SKIP SUCESSFUL WITH FILE NUMBER IN A

OPFIL   ZRO
        CLA
        STA     BUSCNT
OPFI4   LDP     FILPT
        BRS     48
        BRU     OPFI1           (NOT THERE MAKE IT)
        BRM     GIP             (GET INDEX BLOCK POINTER)
        LDB     =42B            (OUTPUT WRITE MODE)
        BRS     193
        BRU     OPFI2           (FILE OPENING ERROR)
        MIN     OPFIL
        BRR     OPFIL
OPFI1   LDP     FILPT
        MRG     PRIV
        LDX     FILTYP
        BRS     65
        BRU     OPFI2           (OPEN ERROR)
        MIN     OPFIL
        BRR     OPFIL
OPFI2   CXA
        SKE     =1              (FILE BUSY)
        BRU     *+3
OPFI3   BRM     BUSY
        BRU     OPFI4
        SNE     =30             (GROUP BUSY)
        BRU     OPFI3
        BRR     OPFIL           (FAILED)

*FILE BUSY ROUTINE
*UNTIL SUCESSFUL IN OPENING FILE

BUSY    ZRO
        LDA     BUSCNT
        SKG     =10
        BRU     2BUSY
        MSG     FBUSY1          (FILE BUSY - WAITING)
        CLA
        STA     BUSCNT
2BUSY   MIN     BUSCNT
        LDA     =10000
        BRS     81
        BRR     BUSY
FBUSY1  ASC     '$FILE BUSY - WAITING$/'
BUSCNT  ZRO
FILTYP  ZRO

*FILE POINTERS

       IF      RCHG
       IF      DEBUG
       REM     DEBUG VERSION
*FILE POINTERS

BAREC  ASC '(CCARTER)RECREMOTEA'
BMTD   ASC '(CCARTER)XXXBATXX'
PURGF  ASC "(CCARTER)BREC'TMP'"
VOIDF  ASC '(CCARTER)VOIDREM'
ACT   ASC '(CCARTER)/ACCOUNTING/'
BRECP  DATA 3*BAREC-1,3*BAREC-1+18
BBRECP DATA 3*BAREC-1,3*BAREC-1+19
BMTDPT DATA 3*BMTD-1,3*BMTD-1+17
PURPT  DATA 3*PURGF-1,3*PURGF-1+18
VOIDPT DATA 3*VOIDF-1,3*VOIDF-1+16
ACTPTR DATA 3*ACT-1,3*ACT-1+21
SYSPTR DATA    3*BMTD-1+9
       DATA    3*BMTD-1+9
MONPTR DATA    3*BMTD-1+15
       DATA    3*BMTD-1+15

       ELSE
       REM     PRODUCTION VERSION
BAREC  ASC '(SPOOL)RECREMOTEA';*(SPOOL) IN FINAL VERSION
BMTD   ASC '(*4ACCT)XXXBATXX';*(*4ACCT) IN FINAL VERSION
PURGF  ASC "(SPOOL)BREC'TMP'";* (SPOOL) IN FINAL VERSION
VOIDF  ASC '(SPOOL)VOIDREM';* (SPOOL) IN FINAL VERSION
ACT   ASC '(*4PROG)/ACCOUNTING/';* (*4PROG) IN FINAL VERSION
BRECP  DATA 3*BAREC-1,3*BAREC-1+16
BBRECP DATA 3*BAREC-1,3*BAREC-1+17
BMTDPT DATA 3*BMTD-1,3*BMTD-1+16
PURPT  DATA 3*PURGF-1,3*PURGF-1+16
VOIDPT DATA 3*VOIDF-1,3*VOIDF-1+14
ACTPTR DATA 3*ACT-1,3*ACT-1+20
SYSPTR DATA    3*BMTD-1+8
       DATA    3*BMTD-1+8
MONPTR DATA    3*BMTD-1+14
       DATA    3*BMTD-1+14
       ENDF
       ELSE
       IF      DEBUG
       REM    'DEBUG VERSION '
BAREC   ASC     '(CCARTER)RECBATCHA'
BMTD    ASC     '(CCARTER)KKKBATKK'
PURGF   ASC     "(CCARTER)BREC'TMP'"
VOIDF   ASC     '(CCARTER)VOIDBAT'
ACT     ASC     '(CCARTER)/ACCOUNTING/'
BRECP   DATA    3*BAREC-1,3*BAREC-1+17
BBRECP  DATA    3*BAREC-1,3*BAREC-1+18
BMTDPT  DATA    3*BMTD-1,3*BMTD-1+17
PURPT   DATA    3*PURGF-1,3*PURGF-1+18
VOIDPT  DATA    3*VOIDF-1,3*VOIDF-1+16
SYSPTR DATA    3*BMTD-1+9
       DATA    3*BMTD-1+9
MONPTR DATA    3*BMTD-1+15
       DATA    3*BMTD-1+15
ACTPTR  DATA    3*ACT-1,3*ACT-1+21
       ELSE
BAREC   ASC     '(*4ACCT)RECBATCHA'
*(*4ACCT) IN FINAL VERSION
BMTD    ASC     '(*4ACCT)KKKBATKK'
*(*4ACCT) IN FINAL VERSION
PURGF   ASC     "(*4ACCT)BREC'TMP'"
* (*4ACCT) IN FINAL VERSION
VOIDF   ASC     '(*4ACCT)VOIDBAT'
* (*4ACCT) IN FINAL VERSION
ACT     ASC     '(*4PROG)/ACCOUNTING/'
* (*4PROG) IN FINAL VERSION
BRECP   DATA    3*BAREC-1,3*BAREC-1+16
BBRECP  DATA    3*BAREC-1,3*BAREC-1+17
BMTDPT  DATA    3*BMTD-1,3*BMTD-1+16
PURPT   DATA    3*PURGF-1,3*PURGF-1+17
VOIDPT  DATA    3*VOIDF-1,3*VOIDF-1+15
ACTPTR  DATA    3*ACT-1,3*ACT-1+20
SYSPTR DATA    3*BMTD-1+8
       DATA    3*BMTD-1+8
MONPTR DATA    3*BMTD-1+14
       DATA    3*BMTD-1+14
       ENDF
       ENDF
FILPT   BSS     2

*OPEN (*4ACCT)BATCHREC

ORECF   ZRO
        LDP     BRECP
        STP     FILPT
        LDA     =2
        STA     FILTYP
        BRM     OPFIL
        BRU     ORECF1          (FAILURE)
        STA     RECFNO
        CLA
        STA     RECFB           (FLAG AS BATCHREC LAST FILE OPENED)
        CLA
        SCP     RECFNO
        HLT     0
        BRR     ORECF
ORECF1  MSG     MOREC
        MSG     MNOTIF
        BRS     10
MOREC   ASC     '$UNABLE OPEN BATCH RECORD FILE/'
MNOTIF  ASC     '$NOTIFY ACCOUNTING GROUP$/'
RECFNO  ZRO
RECFB   ZRO
*OPEN (*4ACCT)BATCHRECA

ORECFA  ZRO
        LDP     BBRECP
        STP     FILPT
        LDA     =2
        STA     FILTYP
        BRM     OPFIL
        BRU     ORF1A           (FAILURE)
        STA     RECFNO
        LDA     =-1
        STA     RECFB           (FLAG AS BATCHRECA AS LAST FILE OPENED)
        CLA
        SCP     RECFNO
        HLT     0
        BRR     ORECFA
ORF1A   MSG     MOREC
        MSG     MNOTIF
        BRS     10

*OPEN (*4PROG)/ACCOUNTING/

OPNACT  ZRO
        LDP     ACTPTR
        STP     FILPT
        LDA     =3
        STA     FILTYP
        BRM     OPFIL
        BRU     OPNA1
        STA     AFIL
        CLA
        SCP     AFIL
        HLT     0
        BRR     OPNACT
OPNA1   MSG     MOPNA
        MSG     MNOTIF
        BRU     THRU
MOPNA   ASC     '$UNABLE OPEN (*4PROG)SLASH ACCOUNTING SLASH/'
AFIL    ZRO

*OPEN (*4ACCT)/BMTD/

OBMTD   ZRO 0; SKN MTDOPN; BRU *+2; BRR OBMTD
        LDP     BMTDPT
        STP     FILPT
        LDA     =2
        STA     FILTYP
        BRM     OPFIL
        BRU     OBMTD1          (FAILURE)
        STA     MTDFNO
        CLA
        SCP     MTDFNO
        HLT     0
       RSP     MTDFNO
       SKG     =RECLEN
       BRM     MAKTT9
       BRM     READT9
       CLA
       SCP     MTDFNO
       HLT 0
       LDA     =-1; STA MTDOPN (MAKE IT OPEN)
        BRR     OBMTD
OBMTD1  MSG     BOBMTD
        MSG     MNOTIF
        BRS     10
BOBMTD  ASC     '$UNABLE OPEN BATCOUNTING FILE/'
MTDFNO  ZRO

*
*      THIS ROUTINE MAKES INITIAL TRANS TYPE 9 AT LOC 0 OF MTDFNO
*
ACCREC BSS     RECLEN
MAKTT9 ZRO
       LDX =-RECLEN
       CLA; STA ACCREC+RECLEN,2; BRX *-1    (ZERO RECORD)
       CLAB; LDA =9; LSH 12; STA ACCREC
       LDA =99999; STA ACCREC+13            (JOBNO =99999)
       BRS     74; STA ACCREC+8             (PUT INTO DAYS DATE)
       LDA =-1; STA  ACCREC+6
       CLA; MRG =4B7; SCP MTDFNO; HLT 0     (SET TO WRITE)
       LDA =RECLEN; LDX =ACCREC; BIO MTDFNO; NOP; MIN MAKTT9; BRR MAKTT9

*
*      READTT READS RECORD 0 FROM MTD
*

READT9 ZRO
       CLA; SCP MTDFNO; HLT 0; LDA =RECLEN; LDX =ACCREC; BIO MTDFNO; NOP
       BRR READT9
*OPEN (*4ACCT)BREC'TMP'

OPURF   ZRO
        LDP     PURPT
        BRS     48
        BRU     *+2
        BRM     DELETE
        LDP     PURPT
        STP     FILPT
        LDA     =2
        STA     FILTYP
        BRM     OPFIL
        BRU     OPURF1          (ERROR)
        STA     FNO
        BRR     OPURF
OPURF1  MSG     MOPURF
        BRU     THRU
MOPURF  ASC     "UNABLE OPEN (*4ACCT)BREC'TMP', DELETE IT AND TRY AGAIN$/"

DELETE  ZRO
        BRS     69
        NOP
        BRR     DELETE

*OPEN (*4ACCT)VOIDBAT

OVOID   ZRO
        LDP     VOIDPT
        STP     FILPT
        LDA     =2
        STA     FILTYP
        BRM     OPFIL
        BRU     OVOID1          (FAILURE)
        STA     FNO1
        RSP     FNO1
        MRG     =4B7
        SCP     FNO1
        HLT     0
        BRR     OVOID
OVOID1  MSG     MOVOID
        BRU     THRU
MOVOID  ASC     'UNABLE OPEN (*4ACCT)VOIDBAT, DELETE IT AND TRY AGAIN$/'
FNO1    ZRO

*GET FILE DIRECTORY NUMBER OF *4ACCT

GAUN    ZRO
        LDX     =-4
        LDA     ANAME+4,2
        STA     NAME+4,2
        BRX     *-2
        BRM     GDIR
        STA     AUNO
        BRR     GAUN
GDIR    ZRO
        LDX     =-4
        CLA
        ADD     NAME+4,2
        BRX     *-1
        LRSH    23
        DIV     =887
        STB     BLNO
        BRM     RBLK
        BRU     GDIR2
RBLK    ZRO
        LDA     BLNO
        LRSH    23
        DIV     =128
        STB     TEMP
        CLB
        LSH     13
        ADD     =320200B
        ADD     TEMP
        CAB
        LDA     =BUF
        LDX     =100B
        BRS     124
        EAX     BUF
        BRR     RBLK
GDIR2   STX     BLX
        LDA     0,2
        SKE     =0
        BRU     *+2
        BRU     NOGOOD
        SKE     =-1
        BRU     *+4
        MIN     BLNO
        BRM     RBLK
        BRU     GDIR2
        SKE     =-2
        BRU     *+2
        BRU     GDIR3
        SKE     NAME
        BRU     GDIR3
        LDA     1,2
        SKE     NAME+1
        BRU     GDIR3
        LDA     2,2
        SKE     NAME+2
        BRU     GDIR3
        LDA     3,2
        SKE     NAME+3
        BRU     GDIR3
        LDA     4,2
        BRR     GDIR
GDIR3   EAX     9,2
        BRU     GDIR2
       IF      DEBUG
ANAME  ASC     'CCARTER      '
       ELSE
ANAME   ASC     '*4ACCT      '
       ENDF
NAME    BSS     4
AUNO    ZRO
NOGOOD  MSG     NONO
        BRS     10
NONO    ASC     '$THIS PROGRAM CANNOT BE USED ON THIS SYSTEM$/'
PRIV    DATA    516B5
BLNO    ZRO
BLX     ZRO
BUF     BSS     100B
TEMP    ZRO
RDNO    ZRO
        LDX     CIN
        LDB     =10
        BRS     38
        XAB
        SNE     ='?'
        BRR     RDNO
        XAB
        MIN     RDNO
        BRR     RDNO
TDNO    ZRO
        LDX     TOUT
        LDB     =10
        BRS     36
        BRR     TDNO
TONO    ZRO
        LDX     TOUT
        LDB     =8
        BRS     36
        BRR     TONO
PDNO    ZRO
        LDX     FNO
        LDB     =10
        BRS     36
        BRR     PDNO
PONO    ZRO
        LDX     FNO
        LDB     =8
        BRS     36
        BRR     PONO

*ROUTINE TO GET COMPACTED BINARY DATE OF 2359 HOURS OF DAY ENTERED
*USED FOR LIMIT DATE IN SEARCHING FOR REQUESTS ENTERED PRIOR TO
*A GIVEN DATE

NUMSW   ZRO
ENDAT   ZRO
        SKN     NUMSW
        MSG     M4              (ENTER MONTH-DATE-YEAR)
        BRM     RDNO
        BRU     RESET
        SKG     =12
        SKG     =0
        BRU     RSTART
        STA     MO
        CLB
        SUB     =1
        LSH     16
        STA     HDAY
        BRM     RDNO
        BRU     RESET
        XAB
        SKE     =155B
        BRU     *+2
        BRU     RSTART
        XAB
        SKG     =31
        SKG     =0
        BRU     RSTART
        STA     DAY
        BRM     RDNO
        BRU     RESET
        XAB
        SKE     =155B
        BRU     RSTART
        XAB
        LRSH    23
        DIV     =1900
        CBA
        SKG     =71
        BRU     RSTART
        STA     YR
        LDA     DAY
        SUB     =1
        CLB
        MUL     =720
        CBA
        ADM     HDAY
        LDA     =1439
        ADM     HDAY
        LDA     YR
        SUB     =72
        CLB
        LSH     20
        ADM     HDAY
        CLB
        LDA     CZONE
        LSH     12
        MRG     KTCB
        CAX
        LDA     HDAY
        BRS     176
        STA     HDAY
        BRM     CKDAY
        BRR     ENDAT
CKDAY   ZRO
CKDAY1  LDA     HDAY
        CLB
        LDX     CKDAYX
        BRS     176
        CLA
        LSH     6
        SKE     =59
        BRU     *+2
        BRR     CKDAY
        LDA     =1
        MUL     =7500000
        LSH     1
        ADM     HDAY
        BRU     CKDAY1
CKDAYX  DATA    1200320B
KTCB    DATA    120B
HDAY    ZRO
RSTART  LDX     =-1
        BRS     11
        TCO     ='?'
        BRU     ENDAT+1

*LIST SUB COMMAND DISPATCHER

LIST    LDA     TERMCH
        SKE     =0
        BRU     OPTLST          (GET OPTION)
LIST1   LDA     =377B
        CIT     CIN
        SKG     =31B
        SKG     =17B
        BRU     *+2
        BRU     NUMLST          (LIST A SPECIFIED REQUEST)
        SNE     ='P'
        BRU     COMLST          (LIST PROCESSED REQUESTS)
        SNE     ='U'
        BRU     UNCLST          (LIST UNPROCESSED REQUESTS)
        SNE     ='N'
        BRU     LSTNUM          (LIST A SPECIFIED REQUEST)
        SNE     ='V'
        BRU     LVOID           (LIST VOIDED REQUESTS)
        SKE     ='?'
        BRU     LERR
        CIO     CIN
        BRU     RESET
LERR    LDX     =-1
        BRS     11
OPTLST  MSG     LM1             (PROCESSED, UNPROCESSED OR NUMBER)
        BRM     CLBUF
        BRU     LIST1
LSTNUM  CIO     CIN
        SKE     =155B
        BRU     LSTNUM
        MSG     LM2             (ENTER REQUEST NO)
        BRM     CLBUF
        BRU     LIST1
NUMLST  BRM     RDNO
        BRU     RESET
        STA     FJOB
        LDA     TOUT
        STA     FNO
        BRM     FNDREC
        BRU     TRYCOM
        BRM     PUCREC
        BRU     RESET
ORECSW  ZRO
CORSW   ZRO
NULLSW  ZRO
CRESW   ZRO

TRYCOM  MSG     LM4             (NO UNPROCESSED BY THAT NUMBER WILL TRY PROCESSED)
        SKR     ORECSW
        BRU     *-1
        BRM     GETREC
        BRU     TRYC2           (NOT FOUND)
        MSGP    LHEAD1
        BRM     CPREC
TRYC1   LDA     =*+2
        STA     GETREC
        BRU     GREC1
        BRU     CLIST2
        BRU     TRYC1-1
TRYC2   LDA     MTDFNO
       BRM CLOMTD
        MSG     LM5
TRYC5   BRM     FNDREC
        BRU     TRYC4           (NOT FOUND IN BATCHREC OR BATCHRECA)
TRYC3   MSG     LHEADV
        BRM     PVREC
        BRU     RESET
TRYC4   BRM     GVREC
        BRU     *+2             (NOT FOUND)
        BRU     TRYC3
        MSG     LM3             (NO RECORD BY THAT NUMBER)
        BRU     RESET

*GET RECORD FROM (*4ACCT)VOIDBAT

GVREC   ZRO
        BRM     OVOID
        CLA
        SCP     FNO1
        HLT
        RSP     FNO1
        STA     CPTOP
GVREC1  RCP     FNO1
        SNE     CPTOP
        BRU     GVREC2          (EOF)
        STA     RECCUR
        LDX     =RECBUF
        LDA     =RECLEN
        BIO     FNO1
        NOP
        SKN     LSTSW
        BRU     *+2
        BRU     GVREC3
        LDA     JOB
        SKE     FJOB
        BRU     GVREC1
        MIN     GVREC
GVREC2  LDA     FNO1
        BRS     2
        BRR     GVREC
GVREC3  MIN     GVREC
        BRR     GVREC

*TYPE OR PRINT A VOIDED REQUEST

PVREC   ZRO
        LDA     =155B
        CIO     FNO
        LDA     JOB
        BRM     LEADZ
        BRM     PDNO
        SPACE   1
        LDA     GAN
        BRM     JONO
        BRM     PONO
        SPACE   1
        LDA     =UNAME
        LDX     FNO
        LDB     =12
        BRS     34
        SPACE   1
        LDA     =PROJ
        LDX     FNO
        LDB     =12
        BRS     34
        SPACE   1
       LDA EDATE
        BRM     REQDAT
       SPACE 4
        LDA     =NCHR
        LDX     FNO
        LDB     =12
        BRS     34
        BRR     PVREC



UNCLST  CIO     CIN
        SNE     =0
        BRU     UNCL1
        SKE     =155B
        BRU     UNCLST
        BRU     UNCLX
UNCL1   LDA     =377B
        CIT     CIN
        SKG     =31B
        SKG     =17B
        BRU     UNCLY           (NOT A DATE?)
        SKR     NUMSW
        BRU     *-1
        BRM     ENDAT
        CLA
        STA     NUMSW
UNCL2   BRM     ORECF
        BRM     OPOUT
        SKR     LSTSW
        BRU     *-1
        CLA
        STA     LHSW
UNCL3   BRM     FNDREC
        BRU     UNCL7           (EOF)
        SKN     FLAG
        BRU     *+2
        BRU     UNCL5
        SKN     HDAY
        BRU     *+2
        BRU     UNCL4
        LDA     EDATE
        SKG     HDAY
        BRU     UNCL4
        BRU     UNCL5
UNCL4   BRM     PUCREC
UNCL5   LDA     =*+2
        STA     FNDREC
        BRU     FREC1
        BRU     UNCL7           (EOF)
        SKN     FLAG
        BRU     *+2
        BRU     UNCL5
        SKN     HDAY
        BRU     *+2
        BRU     UNCL6
        LDA     EDATE
        SKG     HDAY
        BRU     UNCL6
        BRU     UNCL5
UNCL6   BRM     PUCREC
        BRU     UNCL5
UNCL7   LDA     MTDFNO
       BRM CLOMTD
        LDA     =155B
        CIO     FNO
        MSG     MEOF
        BRU     RESET
UNCLY   SNE     ='A'
        BRU     UNCLZ
        CIO     CIN
        SKE     =155B
        BRU     *-2
UNCLX   MSG     M7              (ALL?)
        BRM     YN
        BRU     UNCLX1
UNCLX2  LDA     =-1
        STA     HDAY
        BRU     UNCL2
UNCLX1  BRM     ENDAT
        BRU     UNCL2
UNCLZ   CIO     CIN
        SKE     =155B
        BRU     UNCLZ
        BRU     UNCLX2

LHSW    ZRO
PUCREC  ZRO
        SKN     LHSW
        BRU     *+2
        BRU     PUCR1
        MSGP    LHEAD
        SKR     LHSW
        BRU     *-1
PUCR1   LDA     =155B
        CIO     FNO
        LDA     JOB
        BRM     LEADZ
        BRM     PDNO
        SPACE   1
        LDA     GAN
        BRM     JONO
        BRM     PONO
        SPACE   1
        LDA     =UNAME
        LDX     FNO
        LDB     =12
        BRS     34
        SPACE   1
        LDA     =PROJ
        LDX     FNO
        LDB     =12
        BRS     34
        SPACE   1
       LDA     EDATE
       BRM     REQDAT
        LDA     FLAG
        SNE     =1
        BRU     SPMSG1
        SNE     =2
        BRU     SPMSG2
        SNE     =3
        BRU     SPMSG3
       SNE     =4
       BRU     HOLMSG
        BRR     PUCREC
HOLMSG MSG     HMSG
       BRR     PUCREC
SPMSG1  MSG     SPM1
        BRR     PUCREC
SPMSG2  MSG     SPM2
        BRR     PUCREC
SPMSG3  MSG     SPM1
        BRR     PUCREC
HMSG   ASC     '$RECORD AWAITING POSTAGE CHARGES/'
SPM1    ASC     '$SPOOL RECORD AWAITING POSTAGE CHARGES/'
SPM2    ASC     '$COMPLETE SPOOL RECORD/'
RDX     DATA    1200300B
REQDAT  ZRO
       SPACE 3
        LDX     RDX
        BRS     176
        ABC
        LSH     10
        ADD     =60
        STA     YR
        CLA
        LSH     4
        ADD     =1
        STA     MO
        CLA
        LSH     5
        ADD     =1
        STA     DAY
        LDA     MO
        LRSH    23
        DIV     =10
        ADD     =20B
        CIO     FNO
        CBA
        ADD     =20B
        CIO     FNO
        LDA     ='-'
        CIO     FNO
        LDA     DAY
        LRSH    23
        DIV     =10
        ADD     =20B
        CIO     FNO
        CBA
        ADD     =20B
        CIO     FNO
        LDA     ='-'
        CIO     FNO
        LDA     YR
        BRM     PDNO
        BRR     REQDAT
LM1     ASC     '$PROCESSED,UNPROCESSED,VOIDED, OR NUMBER? /'
LM2     ASC     '$ENTER REQUEST NO: /'
LM3     ASC     '$UNABLE LOCATE AN REQUEST BY THAT NUMBER$/'
LM4     ASC     '$NO UNPROCESSED REQUEST BY THAT NUMBER WILL TRY PROCESSED FILE$/'
LM5     ASC     '$NO PROCESSED REQUEST BY THAT NUMBER WILL LOOK FOR VOIDED RECORD$/'

*GET A RECORD FROM (*4ACCT)/BMTD/, REQUEST NO IN A REGISTER UPON ENTRY
*NO SKIP NOT FOUND, SKIP FOUND AND IN CRECBF

GETREC  ZRO
        SKN     LSTSW
        BRM     OBMTD
        CLA
        SCP     MTDFNO
        HLT     0
        RSP     MTDFNO
        STA     CPTOP
GREC1   SKN     CORSW
        BRU     *+2
        BRU     GREC1A
        LDX     =-RECLEN
        CLA
        STA     CRECBF+RECLEN,2
        BRX     *-1
GREC1A  RCP     MTDFNO
        SNE     CPTOP
        BRU     GREC2           (NOT FOUND)
        STA     CCUR            (SAVE FOR POSSIBLE WRITE)
       LDA     =RECLEN
       LDX     =CRECBF
       BIO     MTDFNO
       NOP
        LDA     CUUN
        SNE     =-1
        BRU     GREC1
        SKN     LSTSW
        BRU     *+3
        MIN     GETREC
        BRR     GETREC
        LDA     CJOB
        SKE     FJOB
        BRU     GREC1
        MIN     GETREC
        SKN     ORECSW
        BRU     *+2
        BRR     GETREC
GREC2   LDA     MTDFNO
       BRM CLOMTD
        BRR     GETREC

RSTG    ZRO
        WIO     MTDFNO
        STA*    POINT
        MIN     POINT
        BRM     B200
        BRR     RSTG
        BRU     RSTG+1
B200    ZRO
        STA     SAVA
        LDA     =200B
        LDB     =377B
        LDX     =-3
B200A   SKM     SAVA
        BRU     *+2
        BRR     B200
        LCY     8
        BRX     B200A
        MIN     B200
        BRR     B200
GRECER  ZRO
        SKN     MSGSW
        BRU     *+2
        BRR     GRECER
        SKR     MSGSW
        BRU     *-1
        MSG     MGREC
        MSG     MNOTIF
        BRR     GRECER
MSGSW   ZRO
MGREC   ASC     '$FILE FORMAT ERROR IN BATCH ACCOUNTING FILE/'

CRECBF  BSS    RECLEN
CRECST EQU     CRECBF
CUNAME EQU     CRECBF+1
CTYPE  EQU     CRECBF
CGAN   EQU     CRECBF+5
CUUN   EQU     CRECBF+6
CHOST  EQU     CRECBF+7
CDATE  EQU     CRECBF+8
CPROJ  EQU     CRECBF+9
CJOB   EQU     CRECBF+13
CREQBY EQU     CRECBF+14
CCHR   EQU     CRECBF+18
CPAGE  EQU     CRECBF+19
CPART  EQU     CRECBF+20
CCARPR EQU     CRECBF+21
CFILPR EQU     CRECBF+21
CTAPPU EQU     CRECBF+22
CTAPCO EQU     CRECBF+23
CDECCO EQU     CRECBF+24
CCUREN EQU     CRECBF+25
CDELCH EQU     CRECBF+26
CEMPTR EQU     CRECBF+27
POINT   ZRO
POINT1  ZRO
CCUR    ZRO

LSTSW   ZRO
COMLST  CIO     CIN
        SKE     =155B
        BRU     COMLST
        BRM     OBMTD
        SKR     LSTSW
        BRU     *-1
        BRM     OPOUT
        MSGP    LHEAD1
CLIST1  BRM     GETREC
        BRU     CLIST2
        BRM     CPREC
CLIST3  LDA     =*+2
        STA     GETREC
        BRU     GREC1
        BRU     CLIST2
        BRM     CPREC
        BRU     CLIST3
CLIST2  LDA     MTDFNO
       BRM CLOMTD
        LDA     =155B
        CIO     FNO
        MSG     MEOF
        BRU     RESET
MEOF    ASC     '$$END OF FILE$/'

CPREC   ZRO
       IF RCHG; LDA CTYPE; ETR =7777B;  SKE =9; BRR CPREC; ENDF
       BRM     PRIPRO
       BRR CPREC
PPART   ZRO
        LDA     ='-'
        CIO     FNO
        LDA     CPART
        BRM     PDNO
        BRR     PPART

PSTG    ZRO
PSTG1   LDB*    POINT
        MIN     POINT
        CLA
        LDX     =-3
PSTG2   LSH     8
        SNE     =200B
        BRR     PSTG
        MIN     BUSCNT
        CIO     FNO
        CLA
        BRX     PSTG2
        LDA     BUSCNT
        SKE     =12
        BRU     PSTG1
        BRR     PSTG

*OPEN OUTPUT FILE

OPOUT   ZRO
        LDX     =-1
        LDA     =4B4
        BRS     12
        MSG     M5              (OUTPUT TO)
        BRM     CLBUF
        LDA     CIN
        LDX     =3
        BRS     63
        BRU     OPOUT1
        STA     FNO
        BRR     OPOUT
OPOUT1  LDX     =-1
        BRS     11
        BRU     OPOUT+1

LEADZ   ZRO
        CAB
        SKG     =9999
        BRM     LZERO
        SKG     =999
        BRM     LZERO
        SKG     =99
        BRM     LZERO
        SKG     =9
        BRM     LZERO
        CBA
        BRR     LEADZ
LZERO   ZRO
        LDA     =20B
        CIO     FNO
        CBA
        BRR     LZERO
JONO    ZRO
        CAB
        SKG     =77777B
        SPACE   1
        SKG     =7777B
        SPACE   1
        SKG     =777B
        SPACE   1
        SKG     =77B
        SPACE   1
        SKG     =7
        SPACE   1
        CBA
        BRR     JONO
JDNO5   ZRO
        SKG     =9999
        SPACE   1
        SKG     =999
        SPACE   1
        SKG     =99
        SPACE   1
        SKG     =9
        SPACE   1
        BRR     JDNO5
JDNO4   ZRO
        SKG     =999
        SPACE   1
        SKG     =99
        SPACE   1
        SKG     =9
        SPACE   1
        BRR     JDNO4
JDNO2   ZRO
        SKG     =9
        SPACE   1
        BRR     JDNO2
PDOLS   ZRO
        LRSH    23
        DIV     =100
        STB     CENTS
        BRM     JDNO4
        BRM     PDNO
        LDA     ='.'
        CIO     FNO
        LDA     CENTS
        SKG     =9
        BRM     PZERO
        BRM     PDNO
        BRR     PDOLS
PZERO   ZRO
        CAB
        LDA     =20B
        CIO     FNO
        CBA
        BRR     PZERO
CENTS   ZRO

*YES NO ROUTINE CALLED AS MSG, BRM YN NO SKIP NO SKIP YES IF NEITHER
*REPEATS QUESTION

YN      ZRO
        BRM     CLBUF
        CIO     CIN
        CAB
        CIO     CIN
        SNE     =155B
        BRU     YN1
        SKE     =152B
        BRU     *-4
YN1     CBA
        SNE     ='?'
        BRU     RESET
        SNE     ='N'
        BRR     YN
        SKE     ='Y'
        BRU     *+3
        MIN     YN
        BRR     YN
       SKN     ALLHOL
       BRU     YN2
       SKE     ='H'
       BRU     YN2
       LDA     =-1
       STA     HOLDSW
       MIN     YN
       MIN     YN
       BRR     YN
YN2     SKN     CINSW
        BRU     YNERR
        LDA     YN
        SUB     =2
        STA     YN
        LDX     =-1
        BRS     11
        BRR     YN
YNERR   MSG     M6
        BRU     THRU
*LIST VOIDED REQUESTS

LVOID   CIO     CIN
        SNE     =0
        BRU     LVOID1
        SKE     =155B
        BRU     LVOID
        BRU     LVOIDX
LVOID1  LDA     =377B
        CIT     CIN
        SKG     =31B
        SKG     =17B
        BRU     LVOIDY          (NOT A NUMBER)
        BRM     RDNO
        BRU     RESET
        STA     FJOB
        BRU     *+2
LVOID2  BRM     GREQNO
        SKR     ORECSW
        BRU     *-1
        BRM     FNDREC
        BRU     *+2
        BRU     TRYC3
        BRU     TRYC4
LVOIDX  MSG     M7              (ALL)
        BRM     YN
        BRU     LVOID2
        SKR     LSTSW
        BRU     *-1
        SKR     ORECSW
        BRU     *-1
        BRM     ORECF
        BRM     OPOUT
        CLA
        STA     LHSW
        BRM     FNDREC
        BRU     LVOID4          (NOT IN PEND. FILE)
LVOID8  SKN     LHSW
        MSGP    LHEADV
        SKR     LHSW
        BRU     *-1
        BRM     PVREC
LVOID3  LDA     =*+2
        STA     FNDREC
        BRU     FREC1
        BRU     LVOID4          (EOF PENDING FILES)
        BRU     LVOID8
LVOID4  LDA     RECFNO
        BRS     2
        BRM     GVREC
        BRU     LVOID7          (EOF VOID FILE)
LVOID5  SKN     LHSW
        MSGP    LHEADV
        SKR     LHSW
        BRU     *-1
        BRM     PVREC
LVOID6  LDA     =*+2
        STA     GVREC
        BRU     GVREC1
        BRU     LVOID7          (EOF VOID FILE)
        BRU     LVOID5
LVOID7  LDA     FNO1
        BRS     2
        MSG     MEOF
        BRU     RESET
LVOIDY  CIO     CIN
        SKE     =155B
        BRU     LVOIDY
        BRU     LVOIDX


*PURGE PROCESSED AND VOIDED REQUESTS FROM BATCHREC AND BATCHRECA

PURGE   BRS     113
        BRM     ORECF
        BRM     OPURF
        LDA     =4B7
        SCP     FNO
        HLT     0
PURGE1  WIO     RECFNO
        SNE     =27657537B
        BRU     PURGE2
        WIO     FNO
        BRU     PURGE1
PURGE2  LDA     RECFNO
        BRS     2
        BRM     ORECFA
PURGE3  WIO     RECFNO
        SNE     =27657537B
        BRU     PURGE4
        WIO     FNO
        BRU     PURGE3
PURGE4  LDA     RECFNO
        BRS     2
        LDP     BRECP
        BRS     48
        HLT     0
        BRM     DELETE
        LDP     BBRECP
        BRS     48
        HLT     0
        BRM     DELETE
PURGE5  CLA
        SCP     FNO
        HLT     0
        BRM     OVOID
        BRM     ORECF
        LDA     =4B7
        SCP     RECFNO
        HLT     0
        RSP     FNO
        STA     CPTOP
PURGE6  RCP     FNO
        SNE     CPTOP
        BRU     PURGE7
        LDX     =RECBUF
        LDA     =RECLEN
        BIO     FNO
        NOP
        LDA     FLAG
        SNE     =0
        BRU     MOVE
        SNE     =1
        BRU     MOVE
       SNE     =4              4=> HOLD RECORD
       BRU     MOVE
        SKE     =-2
        BRU     PURGE6
        LDA     =RECLEN
        LDX     =RECBUF
        BIO     FNO1
        NOP
        BRU     PURGE6
MOVE    LDX     =RECBUF
        LDA     =RECLEN
        BIO     RECFNO
        NOP
        BRU     PURGE6
PURGE7  LDA     RECFNO
        BRS     2
        LDA     FNO1
        BRS     2
        LDA     FNO
        BRS     2
        MSG     M8              (PURGE COMPLETED)
        BRU     RESET

*GET PASSWORD NAME AND VERIFY

VER     ZRO
        SKN     VERSW
        BRR     VER
        BRS     71
        BRU     VER1A
        SKR     STASW
        BRU     *-1
        BRU     VER1B
VER1A   LDP     SFPTR
        BRS     48
        BRU     ERV1
        LDB     =SFBUF
        LDX     =4
        BRS     96
        LDA     =4
        SKA     SFBUF+3
        BRU     *+2
        BRU     ERV2
        LDP     SFPTR
        BRS     64
        BRU     OPFER
        STA     SFIL
        CLA
        SCP     SFIL
        HLT     0
VER1B   MSG     VM1             (ENTER NAME)
        LDA     VPTR1
        STA     VPTR1+1
        LDA     =VPTR1
        LDB     =155B
        CLX
        BRS     33
        SKN     STASW
        BRU     *+4
        BRM     EDVER
        MIN     VERSW
        BRR     VER
        LDA     VPTR1+1
        SUB     VPTR1
        STA     VT1
VER1    CIO     SFIL
        SKE     =137B
        BRU     *+2
        BRU     NONAME
        SKE     =155B
        BRU     VER1
        CIT     SFIL
        BRU     *+2
        BRU     NONAME
        LDA     VPTR2
        STA     VPTR2+1
        LDA     =VPTR2
        LDB     =155B
        LDX     SFIL
        BRS     33
        LDA     VPTR2+1
        SUB     VPTR2
        SKG     =0
        BRU     NONAME
        SKE     VT1
        BRU     VER1
        LDP     VPTR2
        SKSE    VPTR1
        BRU     VER1
        GCI     VPTR1
        HLT     0
        SKR     VPTR1
        NOP
        STA     VXT8
        BRM     FONO
        SKA     =40000B
        BRU     *+2
        BRU     ERV3
        SKA     =1B7
        BRU     *+2
        BRU     ERV3
        ETR     =377B
        STA     DIST
        BRM     FONO
        STA     VT1
        BRM     FONO
        STA     VT2
        LDA     SFIL
        BRS     20
        LDX     =-1
        LDA     =3
        BRS     12
        MSG     VM2             (ENTER YOUR PASSWORD PLEASE)
SGPS    LDP     TERMWD
        STP     VXT1
        STP     VXT3
        STB     VXT5
        CLA
        STA     TLV1
        LDA     VXT8
        ADM     VXT3
GPS     LDA     =20
        STA     TLV11
GPS1    LDX     TLV1
        LDA     VXT1,2
        MUL     =6065B
        DIV     =37777761B
        CBA
        ADD     VXT2,2
        CAB
        ETR     =3
        STA     TLV1
        LDA     VXT1,2
        XAB
        STP     VXT1,2
        LDA     VXT5
        XMA     VXT1
        STA     VXT5
        SKR     TLV11
        BRU     GPS1
        CIO     =0
        SKE     =155B
        BRU     *+2
        BRU     *+3
        ADM     VXT1
        BRU     GPS
        LDX     =-1
        LDA     =4B4
        BRS     12
        LDA     VXT1
        ADD     VXT2
        SKE     VT1
        BRU     NOPASS
        LDA     VXT3
        ADD     VXT4
        SKE     VT2
        BRU     NOPASS
        BRM     EDVER
        MIN     VERSW
        BRR     VER

FONO    ZRO
        LDB     =8
        LDX     SFIL
        BRS     38
        BRR     FONO

TLV1    ZRO
TLV11   ZRO

VERSW   DATA    -1
STASW  DATA    0
DIST    ZRO
NOPASS  MSG     VME5
        LDX     =-1
        LDA     =3
        BRS     12
        BRU     SGPS

NONAME  MSG     VME6
        BRU     VERRET


TERMWD  DATA    27657537B,55555555B

SFPTR   DATA    3*SF-1,3*SF+5
SF      ASC     '()PSWD'
VPTR1   DATA    3*OPNAM-1,3*OPNAM-1
OPNAM   BSS     20
VPTR2   DATA    3*BUF2-1,3*BUF2-1
BUF2    BSS     20
SFBUF   BSS     20
VT1     ZRO
VT2     ZRO
VXT1    ZRO
VXT2    ZRO
VXT3    ZRO
VXT4    ZRO
VXT5    ZRO
VXT8    ZRO
SFIL    ZRO
ERV1    MSG     VME1
ERV     MSG     VME
        BRU     VERRET
ERV2    MSG     VME2
        BRU     ERV
OPFER   MSG     VME3
        BRU     VERRET
ERV3    MSG     VME4
        BRU     VERRET
VERRET  LDX     =-20
        CLA
        STA     OPNAM+20,2
        STA     BUF2+20,2
        STA     SFBUF+20,2
        BRX     *-3
        BRU     RESET

EDVER   ZRO
        LDP     VPTR1
        BRM     EDLIN
        STP     VPTR1
        BRR     EDVER
EDLIN   ZRO
        STP     EDPT
EDLIN2  GCD     EDPT
        BRU     EDLIN1
        SKE     =200B
        BRU     *+2
        BRU     EDLIN2
        SKE     =377B
        BRU     *+2
        BRU     EDLIN2
        SKG     =0
        BRU     EDLIN2
        MIN     EDPT+1
EDLIN1  LDP     EDPT
        BRR     EDLIN
EDPT    BSS     2
VME1    ASC     '$NO PASSWORD FILE/'
VME     ASC     '$NOTIFY DIVISION OPNS MGR AND SYS. GROUP TECH DIV/'
VME2    ASC     '$PASSWORD FILE STATUS LOST/'
VME3    ASC     '$PASSWORD FILE BUSY-TRY LATER$/'
VME4    ASC     '$UNVALIDATED NAME/'
VM1     ASC     '$YOUR NAME: /'
VM2     ASC     '$YOUR PASSWORD: /'
VME5    ASC     '$ERROR, TYPE PASSWORD /'
VME6    ASC     '$NAME DOES NOT APPEAR IN PASSWORD FILE$/'

CKACT   ZRO
        SKN     ABSW
        BRR     CKACT
        BRM     ACTBUS
        BRU     RESET
        BRR     CKACT

*CHECKS (*4PROG)/ACCOUNTING/ TO SEE IF BUSY BY SOME OTHER PROGRAM
*IF SO TAKES EXECPTION RETURN (NO SKIP)
*IF NOT BUSY MAKES IT BUSY BY PUTING THE "ACCOUNTING BUSY"
*MESSAGE IN IT AND TAKES NORMAL RETURN (SKIP)

ACTBUS  ZRO
       IF DEBUG; BRU ABUS2; ELSE; ENDF
        SKN     ABSW
        BRU     ABUS2
        BRM     OPNACT
        CIO     AFIL
        SKE     =2
        BRU     AB2
        CIO     AFIL
        SKE     =2
        BRU     *+2
        BRU     AB1
        CIO     =1
        BRU     *-5
AB1     TCO     =155B
        LDA     AFIL
        BRS     2
        BRR     ACTBUS
AB2     MIN     ABSW
        LDA     =4B7
        SCP     AFIL
        HLT     0
        LDA     AFIL
        XMA     FNO
        STA     AFIL
        MSGP    ABUS
        BRM     GDSTG
        LDP     STGPTR
        LDX     FNO
        BRS     35
        LDA     =155B
        CIO     FNO
        LDP     VPTR1
        LDX     FNO
        BRS     35
        LDA     ='   "'
        CIO     FNO
        CR      1
        MSGP    ABUS1
        CR      1
        LDA     AFIL
        XMA     FNO
        STA     AFIL
        BRS     2
        BRS     113
        BRU     ABUS2
ABUS    ASC     '"ACCOUNTING BUSY BATCH ENTRY STARTED /'
ABUS1   ASC     'COM TEL/'
ABUS2   MIN     ACTBUS
        BRR     ACTBUS

*RESETS (*4PROG)/ACCOUNTING/ TO UNBUSY

RESACT  ZRO
        SKN     ABSW
        BRU     *+2
        BRR     RESACT          (NOT BUSY)
        BRM     OPNACT
        LDA     =4B7
        SCP     AFIL
        HLT     0
        LDX     =-6
        LDA     ACTDAT,2
        WIO     AFIL
        BRX     *-2
        RSP     AFIL
        MRG     =4B7
        PCE     AFIL
        NOP
        LDA     AFIL
        BRS     2
        LDA     =-1
        STA     ABSW
        BRR     RESACT
        DATA    11627400B,2020024B,14031057B,11604417B,10221443B
        DATA    15007555B
ACTDAT  EQU     *

ABSW    DATA    -1

GDSTG   ZRO
        LDX     =-6
        CLA
        STA     DATBUF+6,2
        BRX     *-1
        LDP     HSTGPT
        BRS     140
        BRR     GDSTG
DATBUF  BSS     6
HSTGPT  DATA    3*DATBUF-1,3*DATBUF-1
STGPTR  DATA    3*DATBUF-1,3*DATBUF-1+15

*GET CUSTOMER NUMBER AND DISTRICT

FCUST   ZRO
        LDP     AIDPT
        BRS     64
        BRU     FCUST3
        STA     AIDFNI
FC1     LDP     AXPT
        BRS     64
        BRU     FCUST4
        STA     AXFNI
        RSP     AXFNI
        STA     CPTOP
FCUST1  RCP     AXFNI
        SNE     CPTOP
        BRU     FCUST5
        WIO     AXFNI
        SKE     GAN
        BRU     FCUST2
        WIO     AXFNI
        SUB     =1
        MUL     =3
        LSH     23
        SCP     AIDFNI
        BRU     FC3A
        LDA     =40
        LDX     =ACTREC
        BIO     AIDFNI
        NOP
        LDA     AIDFNI
        BRS     20
        LDA     AXFNI
        BRS     20
        LDA     ACID
        STA     CUST
        BRR     FCUST
FCUST2  WIO     AXFNI
        BRU     FCUST1
FCUST3  CXA
        SNE     =1
        BRU     FC3
        SNE     =30
        BRU     FC3
FC3A    MSG     MBAID
        MSG     MNOTIF
        BRU     THRU
FC3     BRM     BUSY
        BRU     FCUST+1
MBAID   ASC     '$UNABLE OPEN (*4ACCT)SLASH AI&D SLASH/'
FCUST4  CXA
        SNE     =1
        BRU     FC4
        SNE     =30
        BRU     FC4
FC4A    MSG     MBAX
        MSG     MNOTIF
        BRU     THRU
FC4     BRM     BUSY
        BRU     FC1
MBAX    ASC     '$UNABLE OPEN (*4ACCT)SLASH AX SLASH/'
FCUST5  LDA     AXFNI
        BRS     20
        LDA     AXFNI
        BRS     20
        LDA     =-1
        STA     CUST
        BRR     FCUST
ACTREC  BSS     40
ACID    EQU     ACTREC+4
       IF      DEBUG
AX     ASC     '(CCARTER)/AX/'
AID    ASC     '(CCARTER)/AI&D/'
AXPT   DATA    3*AX-1,3*AX-1+13
AIDPT  DATA    3*AID-1,3*AID-1+15
       ELSE
AX      ASC     '(*4ACCT)/AX/'
AID     ASC     '(*4ACCT)/AI&D/'
AXPT    DATA    3*AX-1,3*AX-1+12
AIDPT   DATA    3*AID-1,3*AID-1+14
       ENDF
AIDFNI  ZRO
AXFNI   ZRO

*GET DISTRICT NUMBER FOR PRICING IF DIST-CUST WORD -1

GTDIST  ZRO
        MSG     M18             (DISTRICT)
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        MIN     GTDIST
        BRR     GTDIST

*MAKE A CHARGE RECORD AND WRITE INTO (*4ACCT)/BMTD/

CHG     LDA     TERMCH
        SKE     =155B
        BRU     CHGOPT
CHG1   LDA     =-1
*      STA     VERSW           LETS FORCE VALIDATION
        BRM     VER
        BRM     CKACT
        BRM     CKSPL           (CHECK FOR COMPLETED SPOOL REC)
        LDA     =1
        STA     FNO
        SKN     ALLSW
        BRU     *+2
        BRU     CHGALL
        SKN     CNUMSW
CHG2    BRM     GREQNO
        CLA
        STA     CNUMSW
        STA     HTOTAL
        STA     ACCUM
        BRM     FNDREC
        BRU     ECHG1C          (COULD NOT FIND)
CHG22  LDP     TOTAL
       BRM     RECVT
       STA     HTOTAL
       STA     ACCUM
       SNE     =0
       BRU     CHG2B
       LDA     =-1
       STA     AGINSW
CHG2B   LDA     =HOLD
        STA     PTRB
        LDA     CUST
        SNE     =-1
        BRM     FCUST
CHG2C   BRM     PUCREC
        MSG     M9              (OKAY?)
        BRM     YN
        BRU     ECHG1A          (NOT THE ONE)
        LDA     FLAG
        SNE     =1
        BRU     CHG2D           (A SPOOLING RECORD)
        SNE     =3
        BRU     CHG2D           (ALSO A SPOOLING RECORD)
       SNE     =4              A HELD RECORD
       BRU     CHG2D
CHG2F  NOP
CHG2D   LDA     CUST
        SNE     =-1
        BRM     GTDIST
        LRSH    15
        STA     TDIST
*CHG2E   LDA     SYSNO
*       SNE     =14
*       BRU     CHG2A
CHG2E   LDA     TDIST
        SKG     =79
        SKG     =69
        BRU     *+3
CHG2A   BRM     FRENCH
        BRU     CHG3A
        SKG     =189
        SKG     =179
        BRU     *+3
        BRM     ENG
        BRU     CHG3A
       SKG     =199            GERMANY IS DIST 190-199
       SKG     =189
       BRU     *+3             EITHER US OR BELGIUM
       BRM     GERMAN
       BRU     CHG3A
       SKG     =39             CHECK FOR BELG
       SKG     =29             STILL CHECKING 30-39
       BRU     CHGUS           MUST BE US
       SKE     =31             IS THIS BELGIUM
       BRU     *+3
       BRM     BELGIU          THIS IS BELGIUM
       BRU     CHG3A           CHARGE IT
       BRM     FRENCH          EVERY ON ELSE IN AREA 30 IS FRENCH
       BRU     CHG3A           CHG IT
CHGUS   CLA                    THIS IS US
        STA     FRENSW
       STA     GERSW
       STA     BELGSW
        STA     UKSW
        BRU     CHG3A
BELGIU ZRO
       SKR     BELGSW
       BRU     *-1
       CLA
       STA     UKSW
       STA     FRENSW
       STA     GERSW
       BRR     BELGIU
FRENCH ZRO
FR1     SKR     FRENSW
        BRU     *-1
        CLA
        STA     UKSW
       STA     GERSW
       STA     BELGSW
        BRR     FRENCH
ENG     ZRO
        SKR     UKSW
        BRU     *-1
        CLA
        STA     FRENSW
       STA     BELGSW
       STA     GERSW
        BRR     ENG
GERMAN ZRO
       SKR     GERSW
       BRU     *-1
       CLA
       STA     FRENSW
       STA     UKSW
       STA     BELGSW
       BRR     GERMAN
CHG3A   LDA     FLAG
       SNE     =4              RECORD AWAITING TRANS /POST CHG
       BRU     SPR2
        SKA     =1
        BRU     SPOREC          (SPOOLING RECORD)
        SNE     =3
        BRU     SPOREC          (ALSO A SPOOLING RECORD)
CHG3    MSG     M10
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        SKG     =13
        SKG     =0
        BRU     CHG4
        STA     TYPE
        CAX
       MRG =10000B; STA TYPE (TRANSACTION CODE)
        BRU*    BRUTAB,2
CHG4    LDX     =-1
        BRS     11
        BRU     CHG3

BRUTAB  DATA    BADX,PRINT,RDCARD,PCARD,RTAPE,WTAPE,BADX,TAPEC,TAPEIO
       DATA    BADX,BADX,BADX,TAPBUY,SPR2

BADX   MSG     ILLTYP
       BRU     CHG3

PRINT   MSG     M11             (PAGES)
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        STA     NPAG
PRINT1 LDA     =1              ASSUM NO DEC CHG
       STA     DECCOL
        MSG     M12             (NO. OF PARTS)
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        SKG     =4
        SKG     =0
        BRU     PRINT1
        STA     PARTS
        SNE     =1
        BRU     ANOTH
PRINT2  MSG     M13             (WERE LISTING DECOLLATED)
        BRM     YN
        BRU     ANOTH
        LDA     =2
       STA     DECCOL
       BRU     ANOTH
PRINT3 LDA =1
       STA DECCOL
ANOTH  SKN     AGINSW
       BRU     *+2
       BRU     ENDCHG
        MSG     M16             (ANOTHER BATCH TYPE FOR THIS REQUEST)
        BRM     YN
        BRU     ENDCHG          (NO)
        BRM     MOVREC
        CLAB
       STP     RECBUF+18
       STP     RECBUF+20
       STP     RECBUF+22
       STP     RECBUF+24
       STP     RECBUF+26
       LDA     =-1
       STA     TWOFLG
        BRU     CHG3
ENDCHG CLA
       SKN     NULLSW          DO NOT ALLOW ON REC
       LDA     =-1
       STA     ALLHOL          ALLOW HOLD COMMAND HERE ONLY!
       MSG     M14             (ANY TRANSPORTATION CHARGES)
        BRM     YN
        BRU     END2           NO ENTERED
       BRU     END1            YES ENTERED
       LDA     =4
       STA     FLAG
       BRU     END2
END1    MSG     M15             (ENTER AMOUNT)
END1A   BRM     RAMT
        BRM     CHECK

        SKG     =MINPOS
        SKG     =0
        BRU     *+2
        BRU     ECHG1B
END2    CLA
       STA     ALLHOL          DO NOT ALLOW HOLD TO BE ENTERED
ECHG1  NOP
        BRM     MOVREC
        MSG     M26             (ALL ENTRIES CORRECT
        BRM     YN
        BRU     AGAIN
       SKN     TWOFLG          -1=> WRITE SOME RECS TO /BMTD/
       SKN     HOLDSW          -1=> HOLD IT IN BREC,BRECA
        BRM     WCHG
        SKN     NULLSW
        BRU     *+2
        BRU     ECHG1A
       LDA     FLAG
       SKN     HOLDSW
        LDA     =-1
        STA     FLAG
        BRM     WREC
ECHG1A CLA; STA HOLDSW
        SKN     ALLSW
        BRU     *+2
        BRU     CHGA1
        SKN     NULLSW
        BRU     *+2
        BRU     NULL6
        SKN     CRESW
        BRU     *+2
        BRU     RESET
        MSG     M17             (ANOTHER REQUEST)
        BRM     YN
        BRU     RESET
       CLA; STA HOLDSW
        BRU     CHG2
ECHG1B  MSG     M31
        LDX     =-1
        BRS     11
        BRU     END1
T1      ZRO
ECHG1C  MSG     M28
        LDX     =-1
        BRS     11
        BRU     ECHG1A

AGAIN   SKN     NULLSW
        BRU     *+2
        BRU     NULL5
        SKN     CRESW
        BRU     *+2
        BRU     RESET
        MSG     M27             (REENTER ALL DATA)
        LDX     =-1
        BRS     11
        CLAB
       STP     RECBUF+18
       STP     RECBUF+20
       STP     RECBUF+22
       STP     RECBUF+24
       STP     RECBUF+26
        SKN     ALLSW
        BRU     CHG2
        LDA     =HOLD
        STA     PTRB
        BRU     CHG2C
PTRA    ZRO
PTRB    ZRO
CPTRA   ZRO
HOLD    EQU     20000B

MOVREC  ZRO
        LDA     =RECBUF
        STA     PTRA
        LDX     =-RECLEN
MR1     LDA*    PTRA
        STA*    PTRB
        MIN     PTRA
        MIN     PTRB
        BRX     MR1
        BRR     MOVREC

*SPECIAL HANDLING OF SPOOL RECORDS
*SPOOL RECORD FLAG VALUES
*1=SPOOL RECORD NEEDING POSTAGE ONLY
*2=COMPLETED SPOOL RECORD NEEDS MOVING TO PROCESSED FILE ONLY
*3=SPOOL RECORD RATES NOT ESTABLISHED

SPOREC  LDA     FLAG
        SNE     =3
        BRU     STCOLL
        LDA     PARTS
        ETR     =7777B
        SNE     =0
        BRU     SPR1
        MUL     =100
        LSH     23
        ADM     ACCUM
        ADM     HTOTAL
SPR1    LDA     PARTS
        LRSH    12
        BRM     ADJTYP
        CAX
        CLA     CHGBUF,2
        STA     HRATE
        BRM     CALC
        ADM     ACCUM
        ADM     HTOTAL
SPR2    MSG     M19             (ENTER POSTAGE OR TRANSPORTATION CHARGE:)
        BRU     END1A
STCOLL  LDA     PARTS
        LRSH    12
        SKG     =1
        BRU     SPR1
        LDA     =5
        BRM     ADJTYP
        CAX
        CLA     CHGBUF,2
        LRSH    23
        DIV     FACTOR
        ADM     ACCUM
        ADM     HTOTAL
        LRSH    23
        DIV     =100
        ADM     PARTS
        BRU     SPR1

*
*      US      => ADD          0
*      FRENCH  => ADD          50
*      UK      => ADD          100
*      BELGIUM => ADD          150
*      GERMANY => ADD          200
*
ADJTYP  ZRO
        SKN     FRENSW
        BRU     *+3
        ADD     =50
        BRR     ADJTYP
        SKN     UKSW
       BRU     *+3
        ADD     =100
        BRR     ADJTYP
       SKN     BELGSW
       BRU     *+3
       ADD     =150
       BRR     ADJTYP
       SKN     GERSW
       BRR     ADJTYP
       ADD     =200
       BRR     ADJTYP

FACTOR DATA    100             THIS IS FACTOR TO DIVIDE BY
CALC    ZRO
        LDA     VOL
        MUL     HRATE
        DIV    FACTOR
        BRR     CALC

WCHG    ZRO
       SKN     HOLDSW
       BRU     WCHG1
       LDA     PTRB
       SUB     =RECLEN
       STA     PTRB
       CLA
       STA     TWOFLG
WCHG1   BRM     OBMTD
        RSP     MTDFNO
        MRG     =4B7
        SCP     MTDFNO
        HLT     0
        LDA     PTRB
        SUB     =HOLD
        LDX     =HOLD
        BIO     MTDFNO
        NOP
        CLA
        SCP     MTDFNO
        HLT     0
       LDA =HOLD; STA PT1
WCHG2  LDB =ACCRC1; STB PT2
       BRM MOVACC              (MOVE 1 RECORD TO ACCRC1
       BRU     WCHG5           (NO MORE)
       BRM     ADDMTD
       BRU WCHG2
WCHG5  BRM WRACCT
        LDA     MTDFNO
       BRM CLOMTD
        BRR     WCHG

*
*      WRACC WRITES THE TRANSACTIONS TYPE 9 TO RECORD 1 OF THE FILE
WRACCT ZRO
       LDA =-1; STA ACCREC+6
       CLA; MRG =4B7; SCP MTDFNO; HLT 0; LDA =RECLEN; LDX =ACCREC; BIO MTDFNO
       NOP 0; CLA; SCP MTDFNO; NOP 0; BRR WRACCT

*
*
*      MOVACC CHECKS TO SEE IF PT1 IS EQUAL TO PTRB IF SO RET
*              ELSE SKIP AFTER MOVING RECLEN WDS TO ACCRC1
*

PT1    ZRO
PT2    ZRO
ACCRC1 BSS     RECLEN

MOVACC ZRO
       LDA PT1
       SNE PTRB
       BRR     MOVACC
       LDX =-RECLEN
       LDA*    PT1
       STA*    PT2
       MIN     PT1
       MIN     PT2
       BRX *-4
       MIN MOVACC
       BRR MOVACC

RAMT    ZRO
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        STB     TERMCH
        MUL     =100
        LSH     23
        STA     WORK
        LDA     TERMCH
        SNE     ='.'
        BRU     RAMT1
        LDX     =-1
        BRS     11
        TCO     ='?'
        LDA     RAMT
        SUB     =2
        STA     RAMT
        BRR     RAMT
RAMT1   BRM     RDNO
        BRU     RESET
        ADD     WORK
       STA     POST
       BRM     WHACUR
        BRR     RAMT
WORK    ZRO
MINMUM  ZRO
HRATE   ZRO
HPARTS  ZRO
*CHARGE OF READING CARDS

RDCARD  MSG     M20             (NUMBER OF CARDS)
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        STA     CARPRO
       BRU     ANOTH

*CHARGE OF PUNCHING CARDS

PCARD   BRU     RDCARD

*CHARGE FOR TAPE TO DISC WORK

RTAPE   SKN     FRENSW
        BRU     *+2
        BRU     BADTYP
        SKN     UKSW
        BRU     *+2
        BRU     BADTYP
       SKN     BELGSW
       BRU     *+2
       BRU     BADTYP
       SKN     GERSW
       BRU     *+2
       BRU     BADTYP
        MSG     M21             (NUMBER OF FILES)
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
       STA     FILPRO
       BRU     ANOTH

*CHARGE OF DISC TO TAPE WORK

WTAPE  BRM     TAPGOT
       BRU     RTAPE

* TAPGOT ASKS ABOUT NUMBER OF TAPES

TAPGOT ZRO
       MSG     M25
       BRM CLBUF
       BRM RDNO
       BRU     RESET
       STA     TAPPUR
       BRR     TAPGOT
*TAPE CONVERSION CHARGE

TAPEC  SKN     BELGSW           BELGIUM USER TYPE 8
       BRU     *+2
       BRU     BADTYP
       SKN     FRENSW
       BRU     *+2
       BRU     BADTYP
       SKN     GERSW
       BRU     *+2
       BRU     BADTYP
       SKN     UKSW
       BRU     *+2
       BRU     BADTYP
       BRM     TAPGOT
       MSG     M21             (NUMBER OF FILES)
       BRM CLBUF
       BRM     RDNO
       BRU     RESET
       STA     FILPRO
       MSG     CC1
       BRM     CLBUF
       BRM     RDNO
       BRU     RESET
       STA     TAPCON
       BRU     ANOTH

*SPECIAL TAPE OR OTHER IO BASED ON INPUT RATE PER 100K CHARS

FACT1  DATA    100000
TAPEIO BRM TAPGOT
       STA     TPUR            SAVE HERE UNTIL END CHARGE
TAPE1   MSG     M23             (NUMBER OF CHARACTERS)
        BRM     CLBUF
       BRM     RDNO
       BRU     RESET
       STA     NCHR
        BRU     ANOTH
TPUR   ZRO
HVOL    ZRO

*TAPE PURCHASE

TAPBUY BRM     TAPGOT
       BRU     ANOTH

MBADT  ASC     'FOREIGN REQUEST- USE TYPE 8$/'
BADTYP  MSG    MBADT
        LDX     =-1
        BRS     11
        BRU     CHG3

CHGOPT  LDA     =377B
        CIT     CIN
        SKG     =31B
        SKG     =17B
        BRU     *+2
        BRU     CHGNUM
        CAB
        CIO     CIN
        SKE     =155B
        BRU     *-2
        CBA
        SKE     ='A'
        BRU     CHG1            (DONT KNOW WHAT HE WANTED LETS GO THE REGULAR ROUTE)
        SKR     ALLSW
        BRU     *-1
        BRU     CHG1
CHGNUM  BRM     RDNO
        BRU     RESET
        STA     FJOB
        SKR     CNUMSW
        BRU     *-1
        BRU     CHG1

*ALL OPTION ON CHARGE PRESENT EACH RECORD TO SEE IF HE WANTS TO COMPLETE

ALLCUR  ZRO
CHGALL  CLA
        STA     HTOTAL
        STA     ACCUM
        BRM     FNDREC
        BRU     CHGA2
        BRU     CHG22
CHGA1   CLA
        STA     HTOTAL
        STA     ACCUM
        SKN     RECFB
        BRM     CHGA3
        BRM     CHGA4
        LDA     ALLCUR
        ETR     =@4B7
        SCP     RECFNO
        HLT     0
        LDA     =*+2
        STA     FNDREC
        BRU     FREC1
        BRU     CHGA2
        BRU     CHG2B
CHGA2   MSG     MEOF
        BRU     RESET
CHGA3   ZRO
        BRM     ORECF
        MIN     CHGA3
        BRR     CHGA3
CHGA4   ZRO
        BRM     ORECFA
        BRR     CHGA4


*ROUTINE TO VOID A SPECIFIED UNPROCESSED REQUEST, OPERATORS NAME
*IS PUT INTO CELLS NORMALLY RESERVED FOR POSTAGE AND TOTALS

VOID    LDA     TERMCH
        SKE     =155B
        BRU     VOIDNO
VOID1   BRM     VER
        SKN     CNUMSW
VOID2   BRM     GREQNO
        CLA
        STA     CNUMSW
        BRM     FNDREC
        BRU     VOIMIS
        LDX     =-4
        LDA     OPNAM+4,2
        STA    NCHR+4,2
        BRX     *-2
        LDA     =-2
        STA     FLAG
        BRM     WREC
        BRU     RESET
VOIDNO  LDA     =377B
        CIT     CIN
        SKG     =31B
        SKG     =17B
        BRU     VOIDN1          (NOT A NUMBER SO TAKE HIM REGULAR ROUTE)
        BRM     RDNO
        BRU     RESET
        STA     FJOB
        SKR     CNUMSW
        BRU     *-1
        BRU     VOID1
VOIDN1  CIO     CIN
        SKE     =155B
        BRU     VOIDN1
        BRU     VOID1
VOIMIS  MSG     MVOID
        BRU     RESET
MVOID   ASC     '$UNABLE LOCATE AN UNPROCESSED RECORD BY THAT NUMBER$/'

GREQNO  ZRO
        MSG     M3
        BRM     CLBUF
        BRM     RDNO
        BRU     RESET
        STA     FJOB
        BRR     GREQNO

HTOTAL  ZRO
ACCUM   ZRO
TDIST   ZRO
CNUMSW  ZRO
UKSW    ZRO
FRENSW  ZRO
BELGSW ZRO
GERSW  ZRO
ALLSW   ZRO
THRU    BRS     147
        BRM     RESACT
        BRS     114
        MSG     MTHRU
        BRS     10
MTHRU   ASC     '$$E.O.J.$/'
HEL     MSG     MHELP
        LDA     SYSNO
        SNE     =14
        MSG     MHELP1
        MSG     MHELP2
        BRU     RESET

MHELP   ASC     '$$VALID COMMANDS ARE:'
        ASC     '$$LIST #           -        FOR REQUEST BEARING #'
        ASC     '$                          IF UNPROCESSED, TYPES REQ. NO., GAN,'
        ASC     '$                          CUST. NO., DIST. NO., USER NAME,'
        ASC     '$                          PROJ. CODE, AND NAME OF THE REQUESTOR,'
        ASC     '$                          AND THE DATE THE REQUEST WAS CREATED.'
        ASC     '$                          IF IT IS A VOIDED REQUEST THE NAME OF THE'
        ASC     '$                          OPERATOR VOIDING THE REQUEST WILL BE'
        ASC     '$                          ADDED.  INFORMATION ON PROCESSED'
        ASC     '$                          REQUESTS ALSO INCLUDE BATCH TYPE,'
        ASC     '$                          VOLUME, DECOLLATION CHARGE IF ANY,'
        ASC     '$                          POSTAGE IF ANY, AND TOTAL CHARGE.'
        ASC     '$                          HOWEVER, THE CREATION DATE IS NOT'
        ASC     '$                          AVAILABLE FOR PROCESSED REQUESTS.'
        ASC     '$$LIST PROCESSED   -        OUTPUTS THE ABOVE INFORMATION TO THE'
        ASC     '$                          TELETYPE OR TO A FILE FOR ALL PROCESSED'
        ASC     '$                          REQUESTS.'
        ASC     '$$LIST UNPROCESSED -        *OUTPUTS THE ABOVE INFORMATION TO THE'
        ASC     '$                          TELETYPE OR TO A FILE FOR ALL UN-'
        ASC     '$                          PROCESSED REQUESTS.'
        ASC     '$$LIST VOID        -        OUTPUTS THE ABOVE INFORMATION TO THE'
        ASC     '$                          TELETYPE OR TO A FILE FOR ALL VOIDED'
       IF      RCHG
       ASC '$$CHARGE #         -        ACCEPTS POSTAGE CHARGES FOR REQUEST'
       ASC '$                          BEARING #'
       ASC '$$CHARGE ALL       -        PRESENTS ALL UNPROCESSED REQUESTS TO'
       ASC '$                          TO THE USER FOR INPUT OF POSTAGE'
       ASC '$                          CHARGES.'
       ASC '$$CORRECT #                 ALLOWS ADDING OR CORRECTING POSTAGE'
       ASC '$                          CHARGES.'
       ELSE
        ASC     '$                          REQUESTS.'
        ASC     '$$CHARGE #         -        INPUTS CHARGES FOR REQUEST BEARING #.'
        ASC     '$$CHARGE ALL       -        PRESENTS ALL UNPROCESSED REQUESTS TO'
        ASC     '$                          TO THE USER FOR INPUT OF CHARGES.'
        ASC     '$$RECHARGE #       -        ALLOWS RE-ENTERING ALL DATA FOR A'
        ASC     '$                          REQUEST, THEN INVALIDATES THE OLD'
        ASC     '$                          RECORDS'
        ASC     '$$POSTAGE #                 ALLOWS ADDING OR CORRECTING POSTAGE'
        ASC     '$                          CHARGES.'
        ASC     '$$CREATE           -        ALLOWS FOR CREATING A BATCH CHARGE'
        ASC     '$                          FROM INFORMATION SUPPLIED BY THE USER'
        ASC     '$                          PROGRAM.'
       ENDF
        ASC     '$$VOID #           -        VOIDS THE UNPROCESSED REQUEST'
        ASC     '$                          BEARING #./'
MHELP1  ASC     '$$MAKE             -        ALLOWS FOR CREATING A BATCH CHARGE'
        ASC     '$                          FROM INFORMATION SUPPLIED BY THE USER'
        ASC     '$                          PROGRAM INCLUDING REQUEST NUMBER./'
MHELP2  ASC     '$$PURGE            -        PURGES ALL PROCESSED AND VOIDED'
        ASC     '$                          REQUESTS FROM THE RECORD FILE.'
        ASC     '$$QUIT OR Q        -        QUITS TO THE EXEC.'
        ASC     '$$HELP OR ?        -        REPRINTS THIS LIST'
        ASC     '$$COMMANDS MAY BE SHORTENED TO THE FIRST THREE CHARACTERS'
        ASC     '$$* IF THIS COMMAND INCLUDES A DATE ONLY UNPROCESSED REQUESTS'
        ASC     '$CREATED ON OR BEFORE THIS DATE WILL BE LISTED$$/'

*CHECK FOR COMPLETED SPOOL RECORDS TEMPORARLY DEPOSITED INTO BATCHREC
*BECAUSE SPOOL PROGRAM COULD NOT GET TO /BMTD/

CKSPL   ZRO
        SKR     SPLSW
        BRU     *-1
        BRM     FNDREC
        BRU     CKSPL3          (NONE)
        BRU     CKSPL2
CKSPL1  SKN     RECFB
        BRM     CHGA3
        BRM     CHGA4
        LDA     ALLCUR
        ETR     =@4B7
        SCP     RECFNO
        HLT     0
        LDA     =*+2
        STA     FNDREC
        BRU     FREC1
        BRU     CKSPL3          (THRU)
CKSPL2  LDA     FLAG
        SKE     =2
        BRU     CKSPL1
       LDB =HOLD; STB PTRB
        BRM     MOVREC
        BRM     WCHG
        LDA     =-1
        STA     FLAG
        BRM     WREC
        BRU     CKSPL1
CKSPL3  CLA
        STA     SPLSW
        BRR     CKSPL
SPLSW   ZRO
*IF NEG CHECKING ON COMPLETED SPOOL RECORDS

*CHECK FOR AMOUNTS OVER 500.00 WHEN TAKING ABSOLUTE AMOUNTS FOR CHARGES

CHECK   ZRO
        SKG     =50000
        BRR     CHECK
        STA     CT1
CHECK1  MSG     M30             (ARE YOU SURE YOU WANT TO CHARGE)
        LDA     CT1
        BRM     PDOLS
        TCO     ='?'
        TCO     =0
        BRU     *+2
        BRU     CHECK1
        BRM     YN
        BRU     CHECK2
        LDA     CT1
        BRR     CHECK
CHECK2  LDA     CHECK
        SUB     =3
        STA     CHECK
        BRR     CHECK

*ALLOW CORRECTION OF PREVIOUSLY ENTERED TRANSPORTATION CHARGES

COR     LDA     TERMCH
        SNE     =155B
        BRU     COR1
        BRM     RDNO
        BRU     RESET
        STA     FJOB
        SKR     CNUMSW
        BRU     *-1
COR1   LDA     =-1
*      STA     VERSW
        BRM     VER
        BRM     CKACT
        LDA     =1
        STA     FNO
        SKN     CNUMSW
COR2    BRM     GREQNO
       BRM     FNDREC
       BRU     COR2AA
       LDA FLAG
       SKE =4
       BRU COR2AA
       BRU CORHOL
COR2AA  CLA
        STA     CNUMSW
        SKR     ORECSW
        BRU     *-1
        SKR     CORSW
        BRU     *-1
        BRM     GETREC
       BRU     CORNON
        BRM     MVREC
        LDA     CCUR
        STA     CORCUR
COR3    LDA     =*+2
        STA     GETREC
        BRU     GREC1
        BRU     COR3A
        BRU     COR3-3
COR3A   LDA     MTDFNO
       BRM CLOMTD
        BRM     RECMV
        MSGP    LHEAD1
        BRM     CPREC
        MSG     M9              (OKAY)
        BRM     YN
        BRU     CORNO1
COR4    LDP     TOTAL
        BRM     RECVT
        STA     ACCUM
        LDP     POST
       STA     CT1
        BRM     RECVT
        SKG     =0
        BRU     COR5
        STA     T1
        LDA     ACCUM
        SUB     T1
        STA     ACCUM
COR5    MSG     CORM1           (ENTER NEW TRANSPORTATION CHARGES)
        BRM     RAMT
        BRM     CHECK
        SKG     =MINPOS
        SKG     =0
        BRU     *+2
        BRU     COR5A
        MSG     M26             (ALL ENTRIES CORRECT)
        BRM     YN
        BRU     CORAGN
       BRM     OBMTD           LETS READ CURRENT STUFF
       LDA ACCREC+26; SUB CT1; ADD POST; STA ACCREC+26
        BRM     RWREC
        BRU     CORNO1
COR5A   MSG     M31
        LDX     =-1
        BRS     11
        BRU     COR5

CLC1   ASC     '$PLEASE USE THE CHARGE COMMAND$/'
CORHOL MSG CLC1
       BRU CORNO1
CORNON  MSG     LM3
CORNO1  LDA     MTDFNO
       BRM CLOMTD
        BRU     RESET

MVREC   ZRO
        LDX     =-RECLEN
        LDA    CRECST+RECLEN,2
        STA    TYPE+RECLEN,2
        BRX     *-2
        BRR     MVREC
RECMV   ZRO
        LDX     =-RECLEN
        LDA    TYPE+RECLEN,2
        STA    CRECST+RECLEN,2
        BRX     *-2
        BRR     RECMV

CORAGN  LDX     =-1
        BRS     11
        BRU     COR4
CORM1   ASC     '$ENTER NEW TRANSPORTATION CHARGES: /'
CORCUR  ZRO

*REWRITE A CORRECTED RECORD FROM RECBUF

RWREC   ZRO
        BRM     OBMTD
        LDA     CORCUR          (SAVED CURSOR POSITION)
        MRG     =4B7
        SCP     MTDFNO
        HLT     0
        LDX     =RECBUF
        LDA     =RECLEN
        BIO     MTDFNO
        NOP
        BRR     RWREC

*RECHARGE FIRST LOCATE ALL RECORDS FOR A REQUEST AND SAVE CURSOR POSITIONS
*USING A COPY SET UP IN RECBUF AND TAKE NEW CHARGES AND WRITE INTO /BMTD/
*THEN USING SAVE CURSOR POSITIONS INVALIDATE THE OLD RECORDS

NULL    SKR     NULLSW
        BRU     *-1
        LDA     TERMCH
        SNE     =155B
        BRU     NULL1
        BRM     RDNO
        BRU     RESET
        STA     FJOB
        SKR     CNUMSW
        BRU     *-1
NULL1  LDA     =-1             FORCE VALIDATION OF PSSWD
*      STA     VERSW
        BRM     VER
        BRM     CKACT
        LDA     =1
        STA     FNO
        SKN     CNUMSW
NULL2   BRM     GREQNO
        CLA
        STA     CNUMSW
        LDA     =CURBUF
        STA     CPTRA
        SKR     ORECSW
        BRU     *-1
        BRM     GETREC
        BRU     CORNON
        LDA     CCUR
        STA*    CPTRA
        MIN     CPTRA
        MSG     LHEAD1
        BRM     CPREC
        BRM     MVREC           (SAVE A COPY)
NULL3   LDA     =*+2
        STA     GETREC
        BRU     GREC1
        BRU     NULL4           (NO MORE)
        LDA     CCUR
        STA*    CPTRA
        MIN     CPTRA
        BRM     CPREC
        BRU     NULL3
NULL4   LDA     MTDFNO
       BRM CLOMTD
        LDA     =-1
        STA*    CPTRA
        MSG     M9              (OKAY)
        BRM     YN
        BRU     RESET           (NOT THE ONE HE WANTS)
NULL5   LDA     =HOLD
        STA     PTRB
        CLAB
       STP     RECBUF+18
       STP     RECBUF+20
       STP     RECBUF+22
       STP     RECBUF+24
       STP     RECBUF+26
        MSG     M27             (RE-ENTER ALL DATA)
        LDX     =-1
        BRS     11
        BRU     CHG2E
NULL6   BRM     GETREC
        HLT     0               (THERE MUST BE ONE)
        BRM     CKCUR
        BRU     NULL7
        BRM     BLANK
NULL7   LDA     =*+2
        STA     GETREC
        BRU     GREC1
        BRU     NULL8           (DONE)
        BRM     CKCUR
        BRU     NULL7
        BRM     BLANK
        BRU     NULL7

NULL8  BRM     CLOMTD
       MSG     NM1
       BRU     RESET
NM1     ASC     '$CORRECTIONS COMPLETED$/'
CKCUR   ZRO
        LDA     =CURBUF
        STA     CPTRA
CKCUR1  LDA*    CPTRA
        MIN     CPTRA
        SNE     =-1
        BRR     CKCUR
        SKE     CCUR
        BRU     CKCUR1
        STA     CORCUR
        MIN     CKCUR
        BRR     CKCUR
BLANK   ZRO
        BRM     MVREC
        LDA     =-1
        STA    UUN
*       CLAB
*       STP     TOTAL
*       STP     POST
*       STA     TYPE
*       STA     VOL
*       STA     PARTS
        LDA     =*+2
        STA     RWREC
        BRU     RWREC+2
        RCP     MTDFNO
        ETR     =@4B7
        SCP     MTDFNO
        HLT     0
       BRM     SUBACC
ADDMTD ZRO
       CLA; STA ACCREC+25; STA ACCRC1+25    (ZERO CURRENCY USED)
       LDX =-8; LDA ACCRC1+27,2; ADM ACCREC+27,2; BRX *-2; BRR ADDMTD
        BRR     BLANK


*
*
SUBACC ZRO ; LDX =-8; CLA; STA ACCREC+25; STA RECBUF+25
SUB1 STX CT1; LDA ACCREC+27,2; SUB RECBUF+27,2; LDX CT1
       STA ACCREC+27,2; BRX SUB1; BRR SUBACC

CURBUF  BSS     50


*ALLOW USER TO CREATE A BATCH REQUEST CHARGE

CREATE  BRM     VER
        BRM     CKACT
        LDX     =-RECLEN
        CLA
        STA     RECBUF+RECLEN,2
        BRX     *-1
        SKR     CRESW
        BRU     *-1
        MSG     MCR1            (ENTER USER NAME TO BE CHARGED)
        BRM     GTNAME
        BRM     VCUST
        BRU     RESET           (NOT VALID)
        BRM     FCUST
        MSG     MCR2            (ENTER NAME OF REQUESTOR)
        BRM     GTREQB
        MSG     MCR3            (ENTER PROJECT CODE)
        BRM     GPROJ
        BRM     NOREQ
        STA     JOB
        MSG     MCR4            (ASSIGNED REQUEST NO)
        LDA     JOB
        BRM     TDNO
       BRS     74; STA EDATE
        LDA     =HOLD
        STA     PTRB
        BRU     CHG2F

MCR1    ASC     '$ENTER USER NAME TO BE CHARGED: /'
MCR2    ASC     '$ENTER NAME OF THE REQUESTOR: /'
MCR3    ASC     '$ENTER PROJECT CODE: /'
MCR4    ASC     '$ASSIGNED REQUEST NO. /'
MCR5    ASC     '$ENTER REQUEST NUMBER: /'
MCR6    ASC     '$ENTER DISTRICT: /'
MCR7    ASC     '$ENTER CUSTOMER NUMBER: /'
MCR8    ASC     '$ENTER GAN: /'
MCR9    ASC     '$INVALID REQUEST NUMBER$/'

*MAKE A ALL NEW REQUEST

MAKE    LDA     SYSNO
        SKE     =14
        BRU     ERR
        BRM     VER
       LDA     TOUT
       STA     FNO
        BRM     CKACT
        LDX     =-RECLEN
        CLA
        STA     RECBUF+RECLEN,2
        BRX     *-1
        SKR     CRESW
        BRU     *-1
MAKE3   MSG     MCR5            GET THE REQUEST NUMBER
        BRM     RDNO
        BRU     RESET
        STA     JOB
        LRSH    23
        DIV     =1000
        STB     T
        SKG     =26
        SKG     =0
        BRU     MAKERR
        LDA     T
        SKG     =999
        SKG     =0
        BRU     MAKERR
        MSG     MCR1            GET THE USER NAME
        BRM     GTNAME
        MSG     MCR2            GET THE REQUESTOR NAME
        BRM     GTREQB
        MSG     MCR3            GET THE PROJECT CODE
        BRM     GPROJ
MAKE2   MSG     MCR8            GET THE GAN
        LDB     =8
        LDX     CIN
        BRS     38
        STA     GAN
       BRS 74; STA EDATE
        LDA     =HOLD
        STA     PTRB
        BRU     CHG2F

MAKERR  MSG     MCR9            (INVALID REQUEST NUMBER)
        LDX     =-1
        BRS     11
        BRU     MAKE3
T       ZRO     0               TEMP CELL


MKNUM   ZRO
        CLA
        STA     WKWORD
        LDA     SYSNO
        LRSH    23
        DIV     =10
        STA     WKWORD
        CBA
        XMA     WKWORD
        MUL     =10
        LSH     23
        ADM     WKWORD
        LDA     REQNO
        LRSH    23
        DIV     =10
        STB     T3
        LRSH    23
        DIV     =10
        STB     T2
        XMA     WKWORD
        MUL     =10
        LSH     23
        ADM     WKWORD
        LDA     T2
        XMA     WKWORD
        MUL     =10
        LSH     23
        ADM     WKWORD
        LDA     T3
        XMA     WKWORD
        MUL     =10
        LSH     23
        ADM     WKWORD
        LDA     WKWORD
        BRR     MKNUM
WKWORD  ZRO
T2      ZRO
T3      ZRO

NOREQ   ZRO
        BRM     OBNUM
        LDA     NUMFNO
        SNE     =-1
        BRU     NOREQ3          (FILE NEVER OPENED)
        WIO     NUMFNO
        SNE     =0
        BRU     NOREQ2
        SKG     =999
        BRU     *+2
        BRU     NOREQ2
NOREQ1  STA     REQNO
        LDA     =4B7
        SCP     NUMFNO
        HLT     0
        LDA     REQNO
        ADD     =1
        SNE     =1000
        LDA     =1
        WIO     NUMFNO
        LDA     NUMFNO
        BRS     2
        BRU     NOREQ4
NOREQ2  BRS     42
        ETR     =77B
        BRU     NOREQ1
NOREQ3  BRS     42
        ETR     =77B
        STA     REQNO
NOREQ4  BRM     MKNUM
        BRR     NOREQ
REQNO   ZRO

VCUST   ZRO
        CLA
        LDX     =-4
        ADD     UNAME+4,2
        BRX     *-1
        LRSH    23
        DIV     =887
        STB     BLNO
        CBA
        SKG     =895
        BRU     *+2
        HLT
VCUST1  LDA     BLNO
        LRSH    23
        DIV     =128
        STB     NTEMP
        CLB
        LSH     13
        ADD     =320200B
        ADD     NTEMP
        CAB
        LDA     =LBUF
        LDX     =100B
        BRS     124
        EAX     LBUF
VCUST2  LDA     0,2
        SKE     =0
        BRU     *+2
        BRU     VCUSTB
        SKE     =-1
        BRU     *+3
        MIN     BLNO
        BRU     VCUST1
        SKE     =-2
        BRU     *+2
        BRU     VCUST3
        SKE     UNAME
        BRU     VCUST3
        LDA     1,2
        SKE     UNAME+1
        BRU     VCUST3
        LDA     2,2
        SKE     UNAME+2
        BRU     VCUST3
        LDA     3,2
        SKE     UNAME+3
        BRU     VCUST3
        LDA     6,2
        ETR     =1777777B
        STA     GAN
        MIN     VCUST
        BRR     VCUST
VCUST3  EAX     9,2
        BRU     VCUST2
NTEMP   ZRO
VCUSTB  MSG     BCUST
        BRR     VCUST
BCUST   ASC     '$NOT A VALID USER ON THIS SYSTEM/'
LBUF    BSS     100B
GTSTG   ZRO
        CLA
        STA     STGCNT
        LDX     =-4
        STA*    POINT
        MIN     POINT
        BRX     *-2
        BRM     CLBUF
GTSTG1  CIO     CIN
        SNE     =155B
        BRR     GTSTG
        SNE     =152B
        BRR     GTSTG
        WCI     WKPTR
        MIN     STGCNT
        LDA     STGCNT
        SKE     =12
        BRU     GTSTG1
GSTG2   CIO     CIN
        SNE     =155B
        BRR     GTSTG
        SNE     =152B
        BRR     GTSTG
        BRU     GSTG2
WKPTR   BSS     2
STGCNT  ZRO

GTNAME  ZRO
        LDA     =UNAME
        STA     POINT
        BRM     MKPTR
        STP     WKPTR
        BRM     GTSTG
        BRR     GTNAME

GTREQB  ZRO
        LDA     =REQBY
        STA     POINT
        BRM     MKPTR
        STP     WKPTR
        BRM     GTSTG
        BRR     GTREQB

GPROJ   ZRO
        LDA     =PROJ
        STA     POINT
        BRM     MKPTR
        STP     WKPTR
        BRM     GTSTG
        BRR     GPROJ

MKPTR   ZRO
        MUL     =3
        LSH     23
        SUB     =1
        CAB
        BRR     MKPTR

OBNUM   ZRO
        LDP     BNUMP
        STP     FILPT
        LDA     =2
        STA     FILTYP
        BRM     OPFIL
        BRU     OBNUM1
        STA     NUMFNO
        CLA
        SCP     NUMFNO
        HLT     0
        BRR     OBNUM
OBNUM1  LDA     =-1
        STA     NUMFNO          (FLAG TO INDICATE WAS UNABLE OPEN NUMBER FILE)
        BRR     OBNUM
NUMFNO  ZRO

BNUM    ASC     '(*1BATCH)@BATCHNUM1'
BNUMP   DATA    3*BNUM-1,3*BNUM-1+19

CCUST  ZRO
CPOST  ZRO
CTOTAL ZRO
CUST   ZRO
CVOL   ZRO
TOTAL  ZRO
VOL    ZRO
DATE   ZRO
*
*      THIS ROUTINE IS TO PRINT THE PROCESSED RECORD
*

PRIPRO ZRO
       LDA =155B; CIO FNO
       LDA CJOB; BRM LEADZ; BRM PDNO (REQ. NUM.); SPACE 1
       LDA CGAN; BRM JONO; BRM PONO; SPACE 1
       LDA =CUNAME; LDB =12; LDX FNO; BRS 34; SPACE 1
       LDA =CPROJ ; LDB =12; LDX FNO; BRS 34; SPACE 1
       LDA CDATE; BRM REQDAT
       LDA =155B; CIO FNO; CLA; LDB CTYPE; LSH 12; LDB =2; BRM PFOR
       LDA CTYPE; ETR =7777B; LDB =2; BRM PFOR
       LDA CCHR; LDB =10; BRM PFOR; SPACE 1
PRI05  LDA CPAGE; LDB =7;  BRM PFOR; SPACE 1
PRI10  LDA CPART; LDB =3; BRM PFOR; SPACE 1
PRI20  LDA CCARPR; LDB =7; BRM PFOR; SPACE 1
PRI40  LDA CTAPPU; LDB =8; BRM PFOR; SPACE 1
PRI50  LDA CTAPCO; LDB =5; BRM PFOR; SPACE 1
PRI60  LDA CDECCO; LDB =4; BRM PFOR; SPACE 1
PRI70  LDA CDELCH; LDB =7; BRM PFOR; SPACE 1
PRI80  LDB CCUREN; LDX =-3; CLA; LSH 8; CIO FNO; BRX *-3
       BRR PRIPRO
CT1    ZRO
*
*      THIS ROUTINE FINDS OUT WHAT CURRENCY YOU WANT
*
CUR1   ASC     '$ CURRENCY: /'
CUR2   ASC     '$OPTION        DESCRIPTION$'
       ASC     '$USD           UNITED STATES DOLLAR'
       ASC     '$FFR           FRENCH FRANC'
       ASC     '$BFR           BELGIAN FRANC'
       ASC     '$UKL           UNITED KINGDOM POUND'
       ASC     '$YEN           JAPANESE YEN'
       ASC     '$DM            GERMAN MARK'
       ASC     '$DFL           HOLLAND$$/'

CURTAB ASC     'DSURFFRFBLKUNEY MDLFD'
CUREND ZRO
WHACUR ZRO
WHA1   MSG CUR1
WHAIN1     CIO     CIN
        SNE     =155B
        BRU     WHAERR
        SNE     =0
        BRU     WHAIN1
       SNE     ='?'
       BRU     WHAERR
        LRSH    8
WHAIN2     CIO     CIN
       SNE     =155B
       BRU     WHA1
       SNE     =0
       BRU     WHA1
       LRSH    8
WHAIN3     CIO     CIN
       SKE     =155B
       BRU     WHA2
       CLA; LRSH 8; LDA =155B; BRU WHAIN5
WHA2    LRSH    8
WHAIN4     CIO     CIN
        SNE     =155B
        BRU     WHAIN5
        SKE     =0
        BRU     WHAIN4
WHAIN5     STA     TERMCH
       LDX     =CURTAB-CUREND
       CBA
       SKE     CUREND,2
       BRX     *-1
       COPY AB,XA
       SNE     =0
       BRU WHAERR
       STB     CURREN
       BRR WHACUR
WHAERR MSG     CUR2
       BRU     WHA1
*
*      THIS ROUTINE WILL PRINT A FORMATED INTEGER TO FNO
*              ON CALL A REG MUST CONTAIN FIELD WIDTH
*              ON CALL B REGISTER MUST HAVE NUMBER TO BE PRINTED
*              ON CALL FNO MUST HAVE FILE NUMBER
*

PFOR   ZRO
       STA     T1              SAVE IT
       COPY BA,B
       LSH     9
       MRG     =1B7
       MRG FNO
       CAX
       LDA T1
       CLB
       BRS 53
       BRR PFOR
MTDOPN ZRO     0               -1=> MTD FILE OPEN 0=> IT IS CLOSED
*
*      CLOMTD WRITES ACCT AND CLOSES FILE
*

CLOMTD ZRO
       SKN     MTDOPN
       BRR     CLOMTD          ALREADY CLOSED
       BRM     WRACCT          OPEN SO LETS WRITE ACCOUNTING
       LDA     MTDFNO
       BRS     2               NOW IT IS CLOSED
       CLA
       STA MTDOPN
       BRR     CLOMTD
       IF      RCHG
GUSER  ZRO; LDA =8; LDB =CALLER; LDX =1; BRS 67
       LDA =31; LDB =USEGAN; LDX =1; BRS 67
       LDA =33; LDB =LUDLOC; LDX =1; BRS 67; BRM WHO; BRR GUSER
WHO    ZRO; LDA LUDLOC; LRSH 10; ADD =LUDBUF; STA LUDLOC; CLA; LSH 10
       STA BLNO; BRM GE1; LDX =-4; LDA* LUDLOC; STA WHONAM+4,2
       MIN LUDLOC; BRX *-3; MIN LUDLOC; MIN LUDLOC; MIN LUDLOC
       LDA* LUDLOC; STA USEUUN
       LDP CPT; BRM EDLIN; STP CPT; BRR WHO
LUDLOC ZRO
WHONAM BSS 4
CPT    DATA 3*WHONAM-1,3*WHONAM-1+12
CALLER ZRO
USEGAN ZRO
USEUUN ZRO


LUDBUF BSS 100B
GE1    ZRO; LDA BLNO; LRSH 23; DIV =128; STB MTEMP; CLB; LSH 13
       ADD =320200B; ADD MTEMP; CAB; LDA =LUDBUF; LDX =100B
       BRS 124; EAX LUDBUF; BRR GE1

MTEMP  ZRO
GLDIST ZRO
       CLA; LDX =-4; ADD UNAME+4,2; BRX *-1
       LRSH 23; DIV =887; STB BLNO; CBA; SKG =895; BRU *+2; HLT
GLD1 BRM GE1
GLD2 LDA 0,2; SKE =0; BRU *+2; BRR GLDIST (NOT HERE ANY LONGER USE 0 DIST)
       SKE =-1; BRU *+3; MIN BLNO; BRU GLD1-1
       SKE =-2; BRU *+2; BRU GLD3
       SKE UNAME; BRU GLD3
       LDA 1,2; SKE UNAME+1; BRU GLD3
       LDA 2,2; SKE UNAME+2; BRU GLD3
       LDA 3,2; SKE UNAME+3; BRU GLD3
       LDA 8,2; LRSH 2; ETR =1777B; BRR GLDIST
GLD3 EAX 9,2; BRU GLD2
       ENDF
       END
1RCHARGE ** FICH/FRAME BREAK *****
RCHARGE1400 SYMSORT

SYM.  PG.LN. IDENT.

2BUSY  14 31 RCHG    AB1    51 28 RCHG    AB2    51 32 RCHG    
ABSW   53 14 RCHG    ABUS   52 21 RCHG    ABUS1  52 22 RCHG    ABUS2  52 23 RCHG    
ACCRC1 66 24 RCHG    ACCREC 19 22 RCHG    ACCUM  73  1 RCHG    ACID   55 18 RCHG    
ACT    16 29 RCHG    ACT    16  9 RCHG    ACT    15 29 RCHG    ACT    15 11 RCHG    
ACTBUS 51 14 RCHG    ACTDAT 53 12 RCHG    ACTPTR 16 36 RCHG    ACTPTR 16 19 RCHG    
ACTPTR 15 35 RCHG    ACTPTR 15 17 RCHG    ACTREC 55 17 RCHG    ADDMTD 82 18 RCHG    
ADJTYP 64 30 RCHG    AFIL   18 28 RCHG    AGAIN  62 20 RCHG    AGINSW  8 24 RCHG    
AID    55 26 RCHG    AID    55 21 RCHG    AIDFNI 55 30 RCHG    AIDPT  55 28 RCHG    
AIDPT  55 23 RCHG    ALLCUR 70 36 RCHG    ALLHOL  8 21 RCHG    ALLSW  73  8 RCHG    
ANAME  22 33 RCHG    ANAME  22 31 RCHG    ANOTH  60 20 RCHG    AUNO   22 36 RCHG    
AX     55 25 RCHG    AX     55 20 RCHG    AXFNI  55 31 RCHG    AXPT   55 27 RCHG    
AXPT   55 22 RCHG    B1      3 34 RCHG    B200   35 17 RCHG    B200A  35 22 RCHG    
BADTYP 70  6 RCHG    BADX   59 31 RCHG    BAREC  16 21 RCHG    BAREC  16  5 RCHG    
BAREC  15 25 RCHG    BAREC  15  7 RCHG    BBRECP 16 32 RCHG    BBRECP 16 11 RCHG    
BBRECP 15 31 RCHG    BBRECP 15 13 RCHG    BCHARG  1  6 RCHG    BCUST  88 19 RCHG    
BEGIN   3 10 RCHG    BELGIU 58 13 RCHG    BELGSW 73  6 RCHG    BELSUR  3  6 RCHG    
BLANK  81 39 RCHG    BLNO   23  2 RCHG    BLX    23  3 RCHG    BMTD   16 23 RCHG    
BMTD   16  6 RCHG    BMTD   15 26 RCHG    BMTD   15  8 RCHG    BMTDPT 16 33 RCHG    
BMTDPT 16 12 RCHG    BMTDPT 15 32 RCHG    BMTDPT 15 14 RCHG    BNUM   90 18 RCHG    
BNUMP  90 19 RCHG    BOBMTD 19 16 RCHG    BRECP  16 31 RCHG    BRECP  16 10 RCHG    
BRECP  15 30 RCHG    BRECP  15 12 RCHG    BRUTAB 59 28 RCHG    BTBLND  6 29 RCHG    
BUF    23  4 RCHG    BUF2   49 21 RCHG    BUSCNT 14 36 RCHG    BUSY   14 24 RCHG    
CALC   65 10 RCHG    CALLER 93 33 RCHG    CARPRO  8 38 RCHG    CC1     9 17 RCHG    
CCARPR 36 16 RCHG    CCHR   36 13 RCHG    CCUR   36 26 RCHG    CCUREN 36 21 RCHG    
CCUST  90 21 RCHG    CDATE  36  9 RCHG    CDECCO 36 20 RCHG    CDELCH 36 22 RCHG    
CEMPTR 36 23 RCHG    CENTS  40 16 RCHG    CFILPR 36 17 RCHG    CGAN   36  6 RCHG    
CHECK  75 39 RCHG    CHECK1 76  4 RCHG    CHECK2 76 15 RCHG    CHG    56  6 RCHG    
CHG1   56  9 RCHG    CHG2   56 20 RCHG    CHG22  56 27 RCHG    CHG2A  57 25 RCHG    
CHG2B  56 35 RCHG    CHG2C  57  1 RCHG    CHG2D  57 13 RCHG    CHG2E  57 21 RCHG    
CHG2F  57 12 RCHG    CHG3   59 13 RCHG    CHG3A  59  6 RCHG    CHG4   59 24 RCHG    
CHGA1  71  4 RCHG    CHGA2  71 19 RCHG    CHGA3  71 21 RCHG    CHGA4  71 25 RCHG    
CHGALL 70 37 RCHG    CHGNUM 70 27 RCHG    CHGOPT 70 11 RCHG    CHGUS  58  7 RCHG    
CHK     6  1 RCHG    CHOST  36  8 RCHG    CIN     9 10 RCHG    CINSW   2 38 RCHG    
CJOB   36 11 RCHG    CKACT  51  2 RCHG    CKCUR  81 27 RCHG    CKCUR1 81 30 RCHG    
CKDAY  25 23 RCHG    CKDAY1 25 24 RCHG    CKDAYX 25 38 RCHG    CKSPL  75  4 RCHG    
CKSPL1 75 10 RCHG    CKSPL2 75 21 RCHG    CKSPL3 75 31 RCHG    CLBUF   6 31 RCHG    
CLC1   78 21 RCHG    CLIST1 36 37 RCHG    CLIST2 37  7 RCHG    CLIST3 37  1 RCHG    
CLOMTD 93 12 RCHG    CNUMSW 73  3 RCHG    COMLST 36 29 RCHG    COR    76 22 RCHG    
COR1   76 30 RCHG    COR2   76 37 RCHG    COR2AA 77  5 RCHG    COR3   77 16 RCHG    
COR3A  77 21 RCHG    COR4   77 29 RCHG    COR5   78  2 RCHG    COR5A  78 16 RCHG    
CORAGN 79  3 RCHG    CORCUR 79  7 RCHG    CORHOL 78 22 RCHG    CORM1  79  6 RCHG    
CORNO1 78 25 RCHG    CORNON 78 24 RCHG    CORSW  27 12 RCHG    CPAGE  36 14 RCHG    
CPART  36 15 RCHG    CPOST  90 22 RCHG    CPREC  37 15 RCHG    CPROJ  36 10 RCHG    
CPT    93 32 RCHG    CPTOP  12 30 RCHG    CPTRA  63  3 RCHG    CR      2 23 RCHG    
CREATE 82 35 RCHG    CRECBF 36  2 RCHG    CRECST 36  3 RCHG    CREQBY 36 12 RCHG    
CRESW  27 14 RCHG    CT1    91 13 RCHG    CTAPCO 36 19 RCHG    CTAPPU 36 18 RCHG    
CTBL    6 26 RCHG    CTBL    6 23 RCHG    CTBLND  6 27 RCHG    CTBLND  6 24 RCHG    
CTOTAL 90 23 RCHG    CTYPE  36  5 RCHG    CUNAME 36  4 RCHG    CUR1   91 17 RCHG    
CUR2   91 18 RCHG    CURBUF 82 30 RCHG    CUREND 91 28 RCHG    CURREN  9  4 RCHG    
CURTAB 91 27 RCHG    CUST   90 24 RCHG    CUUN   36  7 RCHG    CVOL   90 25 RCHG    
CVT    10 21 RCHG    CVTDAT 10 34 RCHG    CZONE   3  2 RCHG    DATBUF 53 24 RCHG    
DATE   90 28 RCHG    DATEPT  9 13 RCHG    DAY     8 16 RCHG    DEBUG   1  9 RCHG    
DECCOL  9  3 RCHG    DELETE 20 20 RCHG    DIST   49  3 RCHG    ECHG1  61 18 RCHG    
ECHG1A 61 34 RCHG    ECHG1B 62 10 RCHG    ECHG1C 62 15 RCHG    EDATE   8 31 RCHG    
EDLIN  50 15 RCHG    EDLIN1 50 28 RCHG    EDLIN2 50 17 RCHG    EDPT   50 30 RCHG    
EDVER  50 10 RCHG    END1   61  8 RCHG    END1A  61  9 RCHG    END2   61 16 RCHG    
ENDAT  24  3 RCHG    ENDCHG 60 36 RCHG    ENG    58 29 RCHG    ERFLG   6 18 RCHG    
ERMSG   6 19 RCHG    ERMSG1  6 20 RCHG    ERR     6 10 RCHG    ERR1    6 16 RCHG    
ERV    49 33 RCHG    ERV1   49 32 RCHG    ERV2   49 35 RCHG    ERV3   49 39 RCHG    
FACT1  69 27 RCHG    FACTOR 65  9 RCHG    FBUSY1 14 35 RCHG    FC1    53 35 RCHG    
FC3    54 35 RCHG    FC3A   54 32 RCHG    FC4    55  7 RCHG    FC4A   55  4 RCHG    
FCUST  53 30 RCHG    FCUST1 54  2 RCHG    FCUST2 54 25 RCHG    FCUST3 54 27 RCHG    
FCUST4 54 38 RCHG    FCUST5 55 10 RCHG    FILDAT 13 26 RCHG    FILPRO  8 39 RCHG    
FILPT  17  4 RCHG    FILTYP 14 37 RCHG    FJOB   12 28 RCHG    FLAG    9  6 RCHG    
FNDREC 11  1 RCHG    FNO     9 12 RCHG    FNO1   21  4 RCHG    FONO   48 31 RCHG    
FR1    58 22 RCHG    FREC1  11  9 RCHG    FREC1A 12  2 RCHG    FREC1B 12  5 RCHG    
FREC1C 11 23 RCHG    FREC2  12  9 RCHG    FREC3  11  4 RCHG    FREC4  12 16 RCHG    
FREC5  12 21 RCHG    FRENCH 58 21 RCHG    FRENSW 73  5 RCHG    FSUR    3  5 RCHG    
GAN     8 28 RCHG    GAUN   21  8 RCHG    GDIR   21 16 RCHG    GDIR2  22  2 RCHG    
GDIR3  22 28 RCHG    GDSTG  53 16 RCHG    GE1    93 39 RCHG    GERMAN 58 37 RCHG    
GERSW  73  7 RCHG    GETREC 34  8 RCHG    GIP    13 17 RCHG    GLD1   94  8 RCHG    
GLD2   94  9 RCHG    GLD3   94 17 RCHG    GLDIST 94  5 RCHG    GLTCH   4 39 RCHG    
GPROJ  89 25 RCHG    GPS    47 30 RCHG    GPS1   47 32 RCHG    GREC1  34 16 RCHG    
GREC1A 34 23 RCHG    GREC2  35  6 RCHG    GRECER 35 29 RCHG    GREQNO 72 31 RCHG    
GSTG2  88 39 RCHG    GTDAT1  8  2 RCHG    GTDAT2  8 11 RCHG    GTDATE  6 37 RCHG    
GTDIST 55 35 RCHG    GTNAME 89  9 RCHG    GTREQB 89 17 RCHG    GTSTG  88 21 RCHG    
GTSTG1 88 29 RCHG    GUSER  93 22 RCHG    GVREC  28  5 RCHG    GVREC1 28 12 RCHG    
GVREC2 28 27 RCHG    GVREC3 28 30 RCHG    HBUF    9  8 RCHG    HDAY   26  1 RCHG    
HEL    73 15 RCHG    HMSG   32 34 RCHG    HOLD   63  4 RCHG    HOLDSW  8 22 RCHG    
HOLMSG 32 26 RCHG    HOST    8 30 RCHG    HPARTS 67 27 RCHG    HRATE  67 26 RCHG    
HSTGPT 53 25 RCHG    HTOTAL 72 39 RCHG    HVOL   69 37 RCHG    ILLTYP  9 18 RCHG    
IN1     5 11 RCHG    IN2     5 17 RCHG    IN3     5 23 RCHG    IN4     5 29 RCHG    
IN5     5 34 RCHG    JDNO2  39 32 RCHG    JDNO4  39 24 RCHG    JDNO5  39 14 RCHG    
JOB     8 33 RCHG    JONO   38 39 RCHG    KTCB   25 39 RCHG    L*FIND 10 36 RCHG    
LBUF   88 20 RCHG    LEADZ  38 22 RCHG    LERR   26 30 RCHG    LHEAD  10 11 RCHG    
LHEAD1 10 14 RCHG    LHEADV 10 12 RCHG    LHSW   31 25 RCHG    LIST   26  9 RCHG    
LIST1  26 12 RCHG    LM1    33 38 RCHG    LM2    33 39 RCHG    LM3    34  1 RCHG    
LM4    34  2 RCHG    LM5    34  3 RCHG    LSTNUM 26 35 RCHG    LSTSW  36 28 RCHG    
LUDBUF 93 38 RCHG    LUDLOC 93 30 RCHG    LVOID  41 21 RCHG    LVOID1 41 27 RCHG    
LVOID2 41 36 RCHG    LVOID3 42 22 RCHG    LVOID4 42 27 RCHG    LVOID5 42 31 RCHG    
LVOID6 42 36 RCHG    LVOID7 43  2 RCHG    LVOID8 42 17 RCHG    LVOIDX 42  4 RCHG    
LVOIDY 43  6 RCHG    LZERO  38 34 RCHG    M1      9 19 RCHG    M10     9 28 RCHG    
M11     9 29 RCHG    M12     9 30 RCHG    M13     9 31 RCHG    M14     9 32 RCHG    
M15     9 33 RCHG    M16     9 34 RCHG    M17     9 35 RCHG    M18     9 36 RCHG    
M19     9 37 RCHG    M2      9 20 RCHG    M20     9 38 RCHG    M21     9 39 RCHG    
M22    10  1 RCHG    M23    10  2 RCHG    M24    10  3 RCHG    M25    10  4 RCHG    
M26    10  5 RCHG    M27    10  6 RCHG    M28    10  7 RCHG    M29    10  8 RCHG    
M3      9 21 RCHG    M30    10  9 RCHG    M31    10 10 RCHG    M4      9 22 RCHG    
M5      9 23 RCHG    M6      9 24 RCHG    M7      9 25 RCHG    M8      9 26 RCHG    
M9      9 27 RCHG    MAKE   83 35 RCHG    MAKE2  84 29 RCHG    MAKE3  84  9 RCHG    
MAKERR 84 39 RCHG    MAKTT9 19 23 RCHG    MBADT  70  5 RCHG    MBAID  54 37 RCHG    
MBAX   55  9 RCHG    MCR1   83 23 RCHG    MCR2   83 24 RCHG    MCR3   83 25 RCHG    
MCR4   83 26 RCHG    MCR5   83 27 RCHG    MCR6   83 28 RCHG    MCR7   83 29 RCHG    
MCR8   83 30 RCHG    MCR9   83 31 RCHG    MEOF   37 13 RCHG    MGREC  35 39 RCHG    
MHELP  73 22 RCHG    MHELP1 74 29 RCHG    MHELP2 74 32 RCHG    MINMUM 67 25 RCHG    
MINPOS  1 16 RCHG    MKNUM  85  7 RCHG    MKPTR  89 33 RCHG    MNOTIF 17 26 RCHG    
MO      8 15 RCHG    MONPTR 16 39 RCHG    MONPTR 16 17 RCHG    MONPTR 15 38 RCHG    
MONPTR 15 20 RCHG    MOPNA  18 27 RCHG    MOPURF 20 18 RCHG    MOREC  17 25 RCHG    
MOVACC 66 26 RCHG    MOVE   44 35 RCHG    MOVOID 21  3 RCHG    MOVREC 63  6 RCHG    
MR1    63 10 RCHG    MSG     1 28 RCHG    MSGP    1 38 RCHG    MSGP2   2  8 RCHG    
MSGSW  35 38 RCHG    MTDFNO 19 17 RCHG    MTDOPN 93  7 RCHG    MTEMP  94  4 RCHG    
MTHRU  73 14 RCHG    MVER    1 24 RCHG    MVER    1 22 RCHG    MVOID  72 29 RCHG    
MVREC  78 29 RCHG    NAME   22 35 RCHG    NCHR    8 35 RCHG    NM1    81 26 RCHG    
NOGOOD 22 37 RCHG    NONAME 49 10 RCHG    NONO   22 39 RCHG    NOPASS 49  4 RCHG    
NOPE    3 31 RCHG    NOREQ  86  7 RCHG    NOREQ1 86 18 RCHG    NOREQ2 86 30 RCHG    
NOREQ3 86 33 RCHG    NOREQ4 86 36 RCHG    NPAG    8 36 RCHG    NTEMP  88 16 RCHG    
NULL   79 27 RCHG    NULL1  79 37 RCHG    NULL2  80  5 RCHG    NULL3  80 20 RCHG    
NULL4  80 29 RCHG    NULL5  80 36 RCHG    NULL6  81  9 RCHG    NULL7  81 14 RCHG    
NULL8  81 23 RCHG    NULLSW 27 13 RCHG    NUMFNO 90 16 RCHG    NUMLST 27  2 RCHG    
NUMSW  24  2 RCHG    OBMTD  18 32 RCHG    OBMTD1 19 13 RCHG    OBNUM  90  1 RCHG    
OBNUM1 90 13 RCHG    OPFER  49 37 RCHG    OPFI1  14  5 RCHG    OPFI2  14 12 RCHG    
OPFI3  14 15 RCHG    OPFI4  13 35 RCHG    OPFIL  13 32 RCHG    OPNA1  18 24 RCHG    
OPNACT 18 12 RCHG    OPNAM  49 19 RCHG    OPOUT  38  6 RCHG    OPOUT1 38 18 RCHG    
OPTLST 26 32 RCHG    OPURF  20  3 RCHG    OPURF1 20 16 RCHG    ORECF  17  8 RCHG    
ORECF1 17 22 RCHG    ORECFA 17 31 RCHG    ORECSW 27 11 RCHG    ORF1A  18  6 RCHG    
OVOID  20 27 RCHG    OVOID1 21  1 RCHG    PARTS   8 37 RCHG    PCARD  67 39 RCHG    
PDNO   23 26 RCHG    PDOLS  39 36 RCHG    PFOR   92 35 RCHG    POINT  36 24 RCHG    
POINT1 36 25 RCHG    PONO   23 31 RCHG    POST    9  5 RCHG    PPART  37 19 RCHG    
PRI05  91  4 RCHG    PRI10  91  5 RCHG    PRI20  91  6 RCHG    PRI40  91  7 RCHG    
PRI50  91  8 RCHG    PRI60  91  9 RCHG    PRI70  91 10 RCHG    PRI80  91 11 RCHG    
PRINT  59 34 RCHG    PRINT1 59 39 RCHG    PRINT2 60 12 RCHG    PRINT3 60 18 RCHG    
PRIPRO 90 33 RCHG    PRIV   23  1 RCHG    PROJ    8 32 RCHG    PSTG   37 26 RCHG    
PSTG1  37 27 RCHG    PSTG2  37 31 RCHG    PT1    66 22 RCHG    PT2    66 23 RCHG    
PTRA   63  1 RCHG    PTRB   63  2 RCHG    PUCR1  31 33 RCHG    PUCREC 31 26 RCHG    
PURGE  43 14 RCHG    PURGE1 43 20 RCHG    PURGE2 43 25 RCHG    PURGE3 43 28 RCHG    
PURGE4 43 33 RCHG    PURGE5 44  4 RCHG    PURGE6 44 14 RCHG    PURGE7 45  1 RCHG    
PURGF  16 25 RCHG    PURGF  16  7 RCHG    PURGF  15 27 RCHG    PURGF  15  9 RCHG    
PURPT  16 34 RCHG    PURPT  16 13 RCHG    PURPT  15 33 RCHG    PURPT  15 15 RCHG    
PVREC  28 35 RCHG    PZERO  40 10 RCHG    RAMT   66 39 RCHG    RAMT1  67 18 RCHG    
RBLK   21 26 RCHG    RCHARG  1  3 RCHG    RDCARD 67 30 RCHG    RDNO   23  6 RCHG    
RDX    32 37 RCHG    READT9 19 37 RCHG    RECBUF  8 25 RCHG    RECCUR 12 29 RCHG    
RECFB  17 28 RCHG    RECFNO 17 27 RCHG    RECLEN  1 10 RCHG    RECMV  78 35 RCHG    
RECVT  10 27 RCHG    REQBY   8 34 RCHG    REQDAT 32 38 RCHG    REQNO  86 38 RCHG    
RESACT 52 28 RCHG    RESET   4 22 RCHG    RSTART 26  2 RCHG    RSTG   35 10 RCHG    
RTAPE  68  4 RCHG    RWREC  79 11 RCHG    SAVA    2 36 RCHG    SAVB    2 37 RCHG    
SAVX    2 35 RCHG    SF     49 17 RCHG    SFBUF  49 22 RCHG    SFIL   49 31 RCHG    
SFPTR  49 16 RCHG    SGPS   47 22 RCHG    SKNE    1 17 RCHG    SPACE   2 11 RCHG    
SPLSW  75 34 RCHG    SPM1   32 35 RCHG    SPM2   32 36 RCHG    SPMSG1 32 28 RCHG    
SPMSG2 32 30 RCHG    SPMSG3 32 32 RCHG    SPOREC 63 23 RCHG    SPR1   63 34 RCHG    
SPR2   64  4 RCHG    STASW  49  2 RCHG    STCOLL 64  6 RCHG    STGCNT 89  7 RCHG    
STGPTR 53 26 RCHG    SUB1   82 27 RCHG    SUBACC 82 26 RCHG    SYSNAM  3  3 RCHG    
SYSNO   3  1 RCHG    SYSPTR 16 37 RCHG    SYSPTR 16 15 RCHG    SYSPTR 15 36 RCHG    
SYSPTR 15 18 RCHG    SYSXXX  3  4 RCHG    T      85  4 RCHG    T1     62 14 RCHG    
T2     86  4 RCHG    T3     86  5 RCHG    TAPBUY 70  2 RCHG    TAPCON  9  2 RCHG    
TAPE1  69 30 RCHG    TAPEC  68 39 RCHG    TAPEIO 69 28 RCHG    TAPGOT 68 30 RCHG    
TAPPUR  9  1 RCHG    TDIST  73  2 RCHG    TDNO   23 16 RCHG    TEMP   23  5 RCHG    
TERMCH  2 39 RCHG    TERMWD 49 14 RCHG    THRU   73  9 RCHG    TLV1   48 37 RCHG    
TLV11  48 38 RCHG    TONO   23 21 RCHG    TOTAL  90 26 RCHG    TOUT    9 11 RCHG    
TPUR   69 36 RCHG    TRYC1  27 23 RCHG    TRYC2  27 28 RCHG    TRYC3  27 33 RCHG    
TRYC4  27 36 RCHG    TRYC5  27 31 RCHG    TRYCOM 27 16 RCHG    TWOFLG  8 23 RCHG    
TYPE    8 26 RCHG    UKSW   73  4 RCHG    UNAME   8 27 RCHG    UNCL1  29 34 RCHG    
UNCL2  30  5 RCHG    UNCL3  30 11 RCHG    UNCL4  30 23 RCHG    UNCL5  30 24 RCHG    
UNCL6  30 38 RCHG    UNCL7  31  1 RCHG    UNCLST 29 28 RCHG    UNCLX  31 12 RCHG    
UNCLX1 31 18 RCHG    UNCLX2 31 15 RCHG    UNCLY  31  7 RCHG    UNCLZ  31 20 RCHG    
USEGAN 93 34 RCHG    USEUUN 93 35 RCHG    UUN     8 29 RCHG    VCUST  87  1 RCHG    
VCUST1 87 13 RCHG    VCUST2 87 26 RCHG    VCUST3 88 14 RCHG    VCUSTB 88 17 RCHG    
VER    45 12 RCHG    VER1   46 13 RCHG    VER1A  45 20 RCHG    VER1B  45 37 RCHG    
VERRET 50  2 RCHG    VERSW  49  1 RCHG    VM1    50 36 RCHG    VM2    50 37 RCHG    
VME    50 32 RCHG    VME1   50 31 RCHG    VME2   50 33 RCHG    VME3   50 34 RCHG    
VME4   50 35 RCHG    VME5   50 38 RCHG    VME6   50 39 RCHG    VOID   71 33 RCHG    
VOID1  71 36 RCHG    VOID2  71 38 RCHG    VOIDF  16 27 RCHG    VOIDF  16  8 RCHG    
VOIDF  15 28 RCHG    VOIDF  15 10 RCHG    VOIDN1 72 23 RCHG    VOIDNO 72 12 RCHG    
VOIDPT 16 35 RCHG    VOIDPT 16 14 RCHG    VOIDPT 15 34 RCHG    VOIDPT 15 16 RCHG    
VOIMIS 72 27 RCHG    VOL    90 27 RCHG    VPTR1  49 18 RCHG    VPTR2  49 20 RCHG    
VT1    49 23 RCHG    VT2    49 24 RCHG    VXT1   49 25 RCHG    VXT2   49 26 RCHG    
VXT3   49 27 RCHG    VXT4   49 28 RCHG    VXT5   49 29 RCHG    VXT8   49 30 RCHG    
WCHG   65 16 RCHG    WCHG1  65 24 RCHG    WCHG2  65 38 RCHG    WCHG5  66  4 RCHG    
WHA1   91 30 RCHG    WHA2   92 10 RCHG    WHACUR 91 29 RCHG    WHAERR 92 26 RCHG    
WHAIN1 91 31 RCHG    WHAIN2 91 39 RCHG    WHAIN3 92  6 RCHG    WHAIN4 92 11 RCHG    
WHAIN5 92 16 RCHG    WHO    93 25 RCHG    WHONAM 93 31 RCHG    WKPTR  89  6 RCHG    
WKWORD 86  3 RCHG    WORK   67 24 RCHG    WRACCT 66 11 RCHG    WREC   12 34 RCHG    
WREC1  12 39 RCHG    WREC2  13  1 RCHG    WTAPE  68 25 RCHG    YN     40 21 RCHG    
YN1    40 30 RCHG    YN2    41  9 RCHG    YNERR  41 17 RCHG    YR      8 17 RCHG    

1RCHARGE ** FICH/FRAME BREAK *****
BUILDRCHARGE
NARP
RCHARGE1400
RCHARGEBIN


RES
XDDT
;TRCHARGEBIN
%QSAVE 3,14777 O 1RCHARGE

240

CON
1%L
%FDUMP DUMPRCHARGE



"CHECKSUM


CHECKSUM
.BUILDRCHARGE
RCHARGE1400
1RCHARGE
.
COM T
    :@_