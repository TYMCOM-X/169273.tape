TIO ** FICHE/FRAME BREAK *****
TIOSYM
      PROGRAM TIO
*
      STRING COM(35)(12),LINE(132),L1(50),ID(1),ITEM(50)
      STRING UC(256)
      INTEGER A,B,C,IN,OUT,ERR,CMDNO, NDX, CNT
      LOGICAL K(8),ALL,T,F
*
      DATA COM/"HELP","INSTRUCTIONS","CAPABILITIES","VERSION",
+          "SAMPLE","CREDITS","CHARGES","QUIT","A","B","C",
+          "INPUT","OUTPUT","HDX","FDX","LIST","TIC","ECHO",
+          "PARITY","DELAY","TAB","LFCR","CRLF","?","SAVE","TERMINAL","ID",
+          "FULLDUPLEX","HALFDUPLEX"/
      DATA T,F/.TRUE.,.FALSE./
*
*    SAVE UPPER/LOWER CASE STATUS
      CALL BRS(40,LCUC,0,-1)
      LCUC=IAND(LCUC,103B5)
      I=IOR(1B5,IAND(LCUC,2B5))
      CALL BRS(24,I,0,-1)
*
      CONNECT ESCAPE, GO TO 4
      CMDNO = 1
      WRITE(-2,10000)
10000 FORMAT (/"TIO - VERSION 3.00")
C     FALL THRU TO STEP 1
1     CALL GETTC(A,B,C,IN,OUT,K)
*
      GO TO 5
4     CALL CLOB
      CALL CLIB
      WRITE(-2,40000)
40000 FORMAT(/"(ESC)")
      CLOSE
C      5       DONT INC PROMPT NO.
C      50000   INC PROMPT
50000  CMDNO = CMDNO + 1
5     WRITE(-2,10) RIGHT(STR(CMDNO),LENGTH(STR(CMDNO))-1)+": "
10    FORMAT(/S,Z)
      READ(-1,3) LINE
3     FORMAT(S)
      IF LIN.Q."", GO TO 5
      LINE=UC(LINE)
      L=LENGTH(LINE)
      ISP=INDEX(LINE," ")
*    ISOLATE MAIN COMMAND IN L1
      IF ISP>0, L1=LEFT(LINE,ISP-1) .ELSE. L1 = LINE
*    LOOK IT UP BY EXACT MATCH
      DO 50 I=1,29
      IF COM(I).EQ.L1, GO TO (1$...29$) I
50    CONTINUE
*    LOOK IT UP BY ABBREVIATION
C     NDX IS LAST INDEX FOUND, CNT IS NO. OF MATCHES FOUND
      NDX = 0; CNT = 0
      DO 60 I=1,29
      IF INDEX(COM(I),L1).EQ.1, NDX = I; CNT = CNT + 1
60    CONTINUE
      IF CNT.EQ.1, GO TO (1$...29$) NDX
      IF CNT.EQ.0, WRITE(-2,61) .ELSE. WRITE(-2,62)
61    FORMAT(/"COMMAND NOT RECOGNIZED")
62    FORMAT(/"AMBIGUOUS COMMAND")
      CALL BRS(14,0,0,-1)
      CALL CLIB
      GO TO 5
*
*    HELP
1$    CALL INFO(1)
      GO TO 5
*
*    INSTRUCTIONS
2$    CALL INFO(2)
      GO TO 5
*
*    CAPABILITIES
3$    CALL INFO(3)
      GO TO 5
*
*    VERSION
4$    OUTPUT(-2) "VRSION 3.00"
      GO TO 5
*
*    SAMPLE
5$    CALL INFO(4)
      GO TO 5
*
*    CREDITS
6$    OUTPUT(-2) "WRITTEN BY TYMSHARE"
      GO TO 5
*
*    CHARGES
7$    OUTPUT(-2) "NO PREMIUM CHARGES"
      GO TO 5
*
*    QUIT
*    RESTORE UPPER/LOWER CASE STATUS TO STATE AT ENTERING PROGRAM
8$    WRITE(-2,8000)
8000  FORMAT(/'E.O.J.')
      CALL BRS(24,LCUC,0,-1)
      QUIT
*
*    A
9$    CONNECT I/O ERROR, GO TO 910
      CALL PROMPT(ISP,LINE,"TO: ")
      IA=VAL(SUBSTR(LINE,ISP))
      CALL SETTC(IA,B,C,IN,OUT,K,ERR)
      IF ERR>0, DISPLAY '"'+SUBSTR(LINE,ISP)+'" IS AN ILLGAL VALU FOR A'
       .ELSE. A=IA
      IF ERR.EQ.0, GO TO 50000 .ELSE. GO TO 5
910   DISPLAY "A MAY BE ANY VALUE OF: 1,2,4,8,16,32,64,128"
      GO TO 5
*
*    B
10$   CONNECT I/O ERROR, GO TO 1010
      CALL PROMPT(ISP,LINE,"TO: ")
      IB=VAL(SUBSTR(LINE,ISP))
      CALL SETTC(A,IB,C,IN,OUT,K,ERR)
      IF ERR>0, DISPLAY '"'+SUBSTR(LINE,ISP)+'" IS AN ILLGAL VALU FOR B'
       .ELSE. B=IB
      IF ERR.EQ.0, GO TO 50000 .ELSE. GO TO 5
1010  DISPLAY "B MAY BE FROM 0 TO 7, INCLUSIVE"
      GO TO 5
*
*    C
11$   CONNECT I/O ERROR, GO TO 1110
      CALL PROMPT(ISP,LINE,"TO: ")
      IC=VAL(SUBSTR(LINE,ISP))
      CALL SETTC(A,B,IC,IN,OUT,K,ERR)
      IF ERR>0, DISPLAY '"'+SUBSTR(LINE,ISP)+'" IS AN ILLGAL VALU FOR C'
       .ELSE. C=IC
      IF ERR.EQ.0, GO TO 50000 .ELSE. GO TO 5
1110  DISPLAY "C MAY BE ANY VALUE OF: 0,1,2,3,4,5,7,10,14,19,26,36,50,69,95,131"
      GO TO 5
*
*    INPUT
12$   CONNECT I/O ERROR, GO TO 1210
      CALL PROMPT(ISP,LINE,"INPUT BAUD RATE: ")
      INP=VAL(SUBSTR(LINE,ISP))
      CALL SETTC(A,B,C,INP,OUT,K,ERR)
      IF ERR>0, DISPLAY '"'+SUBSTR(LINE,ISP)+'" IS AN ILLGAL VALU FOR INPUT'
       .ELSE. C=IC
      IF ERR.EQ.0, GO TO 50000 .ELSE. GO TO 5
1210  DISPLAY "INPUT MAY BE ANY VALUE OF: 110,150,300"
      GO TO 5
*
*    OUTPUT
13$   CONNECT I/O ERROR, GO TO 1310
      CALL PROMPT(ISP,LINE,"OUTPUT BAUD RATE: ")
      IOUT=VAL(SUBSTR(LINE,ISP))
      CALL SETTC(A,B,C,IN,IOUT,K,ERR)
      IF ERR>0, DISPLAY '"'+SUBSTR(LINE,ISP)+'" IS AN ILLGAL VALU FOR OUTPUT'
       .ELSE. OUT=IOUT
      IF ERR.EQ.0, GO TO 50000 .ELSE. GO TO 5
1310  DISPLAY "OUTPUT MAY BE ANY OF: 110,150,300,400,600,1200"
      GO TO 5
*
*    HDX
29$   CONTINUE
14$   K(7)=T
1400  CALL SETTC(A,B,C,IN,OUT,K,ERR)
      GO TO 50000
*
*    FDX
28$   CONTINUE
15$   K(7)=F
      GO TO 1400
*
*    LIST
16$   CONTINUE
      ALL=F
      CALL PROMPT(ISP,LINE,"OPTION: ")
1610  IF SUBSTR(LINE,ISP,1).EQ.'', GO TO 5
      IF SUBSTR(LINE,ISP,1).EQ.' ', ISP=ISP+1; GO TO 1610
      M=INDEX(LINE,' ',ISP)
      IF M.EQ.0, M=INDEX(LINE,',',ISP)
      IF M.EQ.0, ITEM=SUBSTR(LINE,ISP); LINE=''; ISP=0 .ELSE. ITEM=SUBSTR(LINE,ISP,M-ISP); ISP=M+1
*
1630  IF ITEM.EQ.'ALL', ALL=T ; GO TO 1640
*
      IF ITEM.EQ.'A', GO TO 1640
      IF ITEM.EQ.'B', GO TO 1645
      IF ITEM.EQ.'C', GO TO 1650
      IF ITEM.EQ.'INPUT', GO TO 1655
      IF ITEM.EQ.'OUTPUT', GO TO 1660
      IF ITEM.EQ.'FDX' .OR. ITEM.EQ.'HDX', GO TO 1665
      IF ITEM.EQ.'ECHO', GO TO 1670
      IF ITEM.EQ.'PARITY', GO TO 1675
      IF ITEM.EQ.'DELAY', GO TO 1680
      IF ITEM.EQ.'TAB', GO TO 1685
      IF ITEM.EQ.'LFCR', GO TO 1690
      IF ITEM.EQ.'CRLF', GO TO 1695
      IF INDEX('VERSION',ITEM).EQ.1, GO TO 4$
      IF INDEX('CHARGES',ITEM).EQ.1, GO TO 7$
      IF INDEX('CAPABILITIES',ITEM).EQ.1, GO TO 3$
      IF INDEX('CREDITS',ITEM).EQ.1, GO TO 6$
      IF INDEX('INSTRUCTIONS',ITEM).EQ.1, GO TO 2$
      DISPLAY 'LIST ITEM "'+ITEM+'" IS INVALID'
      GO TO 1610
*
1640  OUTPUT(-2) 'A ='+STR(A)
      IF .NOT.ALL, GO TO 1610
*
1645  OUTPUT(-2) 'B ='+STR(B)
      IF .NOT.ALL, GO TO 1610
*
1650  OUTPUT(-2) 'C ='+STR(C)
      IF .NOT.ALL, GO TO 1610
*
1655  OUTPUT(-2) STR(IN)+' BAUD INPUT'
      IF .NOT.ALL, GO TO 1610
*
1660  OUTPUT(-2) STR(OUT)+' BAUD OUTPUT'
      IF .NOT.ALL, GO TO 1610
*
1665  IF K(7), OUTPUT(-2) 'HALF-DUPLX' .ELSE. OUTPUT(-2) 'FULL-DUPLX'
      IF .NOT.ALL, GO TO 1610
*
1670  IF K(1), OUTPUT(-2) 'CHARACTRS CHO' .ELSE. OUTPUT(-2)
       'CHARACTRS DO NOT CHO'
      IF .NOT.ALL, GO TO 1610
*
1675  IF K(6), OUTPUT(-2) 'PARITY SNT' .ELSE. OUTPUT(-2)
       'PARITY NOT SNT'
      IF .NOT.ALL, GO TO 1610
*
1680  IF K(5), OUTPUT(-2) 'DLAY FOLLOWS CARRIAG RTURN' .ELSE.
       OUTPUT(-2) 'DLAY FOLLOWS LIN-FD'
      IF .NOT.ALL, GO TO 1610
*
1685  IF K(2), OUTPUT(-2) 'CONTROL-I (TAB) CHOS' .ELSE.
       OUTPUT(-2) 'CONTROL-I (TAB) DOS NOT CHO'
      IF .NOT.ALL, GO TO 1610
*
1690  IF K(4), OUTPUT(-2)
       'LIN FD CHOS AFTR USR TYPD CARRIAG RTURN'
       .ELSE. OUTPUT(-2)
       'LIN FD DOS NOT CHO AFTR USR TYPD CARRIAG RTURN'
      IF .NOT.ALL, GO TO 1610
*
1695  IF K(3), OUTPUT(-2)
       'CARRIAG RTURN AND RUBOUT CHO AFTR USR TYPD LIN FD'
       .ELSE. OUTPUT(-2)
       'CARRIAG RTURN AND RUBOUT DO NOT CHO AFTR USR TYPD LIN FD'
      GO TO 1610
*
*    TIC & ID
27$   CONTINUE
17$   CONTINUE
      CALL PROMPT(ISP,LINE,"TERMINAL ID CHARACTER? ")
* BECAUSE OF HOW PROMPT WORKS, NO LEADING SPACES ARE ENCOUNTERED
* IF LENGTH(LINE)-ISP > 0 THEN GIVE UP
      IF LENGTH(LINE)-ISP .GT. 0, GO TO 1720
      ID = SUBSTR(LINE,ISP)
*
      IF LENGTH(LINE)-(ISP+1).GT.0, GO TO 1720
      K(1)=K(3)=K(4)=K(5)=T
      K(2)=K(6)=K(7)=F
*
      IF ID.EQ.'A', K(5)=T; A= 1 ; B=0 ; C= 0 ; IN=300 ; OUT=300 ; GO TO 1400
      IF ID.EQ.'B',K(5)=T; A=64 ; B=0 ; C= 2 ; IN=150 ; OUT=150 ; K(6)=F; GO TO 1400
      IF ID.EQ.'C', K(5)=T; A=16 ; B=0 ; C= 4 ; IN=300 ; OUT=300 ; GO TO 1400
      IF ID.EQ.'D', K(5)=T; A=64 ; B=0 ; C= 2 ; IN=110 ; OUT=110 ; GO TO 1400
      IF ID.EQ.'E', K(5)=T; A=16 ; B=3 ; C= 7 ; IN=300 ; OUT=300 ; GO TO 1400
      IF ID.EQ.'F', K(5)=T; A= 4 ; B=0 ; C= 4 ; IN=150 ; OUT=300 ; GO TO 1400
      IF ID.EQ.'G', K(5)=F; A= 4 ; B=5 ; C=26 ; IN=300 ; OUT=300 ; GO TO 1400
      IF ID.EQ.'J', K(5)=T; A=64 ; B=0 ; C= 2 ; IN=150 ; OUT=150 ; K(6)=T ;
       GO TO 1400
      IF ID.EQ.'N', K(5)=T; A=16 ; B=3 ; C= 7 ; IN=150 ; OUT=300 ; GO TO 1400
      IF ID.EQ.'I', K(5)=F; A=2; B=5; C=2; IN=300; OUT=300; GO TO 1400
1720  DISPLAY 'TERMINAL ID "'+ID+'" IS INVALID'
      DISPLAY "VALID TIC CHARACTERS ARE: A,B,C,D,E,F,G,J,N,I"
      GO TO 5
*
*    ECHO
18$   CALL PROMPT(ISP,LINE,"ECHO OF CHARACTERS ON OR OFF: ")
      IF INDEX(SUBSTR(LINE,ISP),'ON')>0, K(1)=T ; GO TO 1400
      IF INDEX(SUBSTR(LINE,ISP),'OFF')>0, K(1)=F ; GO TO 1400
      DISPLAY 'ECHO MAY BE ANY OF: ON,OFF'
      GO TO 5
*
*    PARITY
19$   CALL PROMPT(ISP,LINE,"EVEN PARITY ON OR OFF: ")
      IF INDEX(SUBSTR(LINE,ISP),'ON')>0, K(6)=T ; GO TO 1400
      IF INDEX(SUBSTR(LINE,ISP),'OFF')>0, K(6)=F ; GO TO 1400
      DISPLAY 'PARITY MAY BE ANY OF: ON,OFF'
      GO TO 5
*
*    DELAY
20$   CALL PROMPT(ISP,LINE,"DELAY AFTER LF OR CR: ")
      IF INDEX(SUBSTR(LINE,ISP),'LF')>0, K(5)=F ; GO TO 1400
      IF INDEX(SUBSTR(LINE,ISP),'CR')>0, K(5)=T ; GO TO 1400
      DISPLAY 'DELAY MAY BE ANY OF: LF,CR'
      GO TO 5
*
*    TAB
21$   CALL PROMPT(ISP,LINE,"ECHO CONTROL-I (TAB) ON OR OFF: ")
      IF INDEX(SUBSTR(LINE,ISP),'ON')>0, K(2)=T ; GO TO 1400
      IF INDEX(SUBSTR(LINE,ISP),'OFF')>0, K(2)=F ; GO TO 1400
      DISPLAY 'TAB MAY BE ANY OF: ON,OFF'
      GO TO 5
*
*    LFCR
22$   CALL PROMPT(ISP,LINE,"LF ECHOES AFTER CR TYPED ON OR OFF: ")
      IF INDEX(SUBSTR(LINE,ISP),'ON')>0, K(4)=T ; GO TO 1400
      IF INDEX(SUBSTR(LINE,ISP),'OFF')>0, K(4)=F ; GO TO 1400
      DISPLAY 'LFCR MAY BE ANY OF: ON,OFF'
      GO TO 5
*
*    CRLF
23$   CALL PROMPT(ISP,LINE,"CR ECHOES AFTER LF TYPED ON OR OFF: ")
      IF INDEX(SUBSTR(LINE,ISP),'ON')>0, K(3)=T ; GO TO 1400
      IF INDEX(SUBSTR(LINE,ISP),'OFF')>0, K(3)=F ; GO TO 1400
      DISPLAY 'CRLF MAY BE ANY OF: ON,OFF'
      GO TO 5
*
*      ?
24$   CALL INFO(5)
      GO TO 5
*
*      SAVE
25$   CALL PROMPT(ISP,LINE,"TO FILE: ")
25000 IF SUBSTR(LINE,ISP,1).EQ." ", ISP=ISP+1; GO TO 25000
      OPEN OUTPUT,6:SOURCE SUBSTR(LINE,ISP),TYPE 1,CONFIRM,ERROR GO TO 2500
*
* WRITE THE FOLLOWING PROGRAM:
* 100/ LDA 105
* 101/ LDX 106
* 102/ BRS 132
* 103/ BRS 10
* 104/ BRS 10
* 105/ <TERMINAL CHARACTERISTICS BITS>
* 106/ -1
      CALL BRS(132,ISP,0,-1)
      WRITE(6) 64,70,64,2031685,1867846,-4357984,-4358134,-4358134
      WRITE(6) ISP,-1
      CLOSE(6)
      GO TO 50000
2500  OUTPUT(-2) "CANT OPEN FILE - "+SUBSTR(LINE,ISP)
      GO TO 5
*
*      TERMINAL
26$   CALL PROMPT(ISP,LINE,"WHAT TYPE OF TERMINAL DO YOU HAVE? ")
      LINE=SUBSTR(LINE,ISP)
      IF LINE.EQ."CRT", GO TO 26001
      IF LINE.EQ."TTY37", GO TO 26002
      IF LINE.EQ."TYM310", GO TO 26003
      IF LINE.EQ."TYM311", GO TO 26003
      IF LINE.EQ."DCT500", GO TO 26003
      IF LINE.EQ."TTY33", GO TO 26004
      IF LINE.EQ."TTY35", GO TO 26004
      IF LINE.EQ."TYM200", GO TO 26004
      IF LINE.EQ."TYM201", GO TO 26004
      IF LINE.EQ."TYM100", GO TO 26005
      IF LINE.EQ."TYM211", GO TO 26005
      IF LINE.EQ."TYM221", GO TO 26005
      IF LINE.EQ."TI725", GO TO 26005
      IF LINE.EQ."NCR260", GO TO 26005
      IF LINE.EQ."EXECUPORT", GO TO 26005
      IF LINE.EQ."UNIVAC", GO TO 26006
      IF LINE.EQ."MEMOREX", GO TO 26007
      IF LINE.EQ."TERMINET360", GO TO 26007
      IF LINE.EQ."TYM212", GO TO 26008
      IF LINE.EQ."TYM213", GO TO 26008
      IF LINE.EQ."TYM110", GO TO 26008
      IF LINE.EQ."TI733", GO TO 26008
      IF LINE.EQ."TI735", GO TO 26008
      WRITE(-2,26111)
26111 FORMAT(/"INVALID TERMINAL TYPE. TYPES ARE:",/"CRT,TTY37,TYM310,TYM311,DCT500,TTY33,TTY35,TYM200,TYM201,TYM100,TYM211",/"TYM221,TI725,NCR260,EXECUPORT,UNIVAC,MEMOREX,TERMINET360,TYM212,TYM213",/"TYM110,TI733,TI735"/)
      GO TO 5
26001 K(5)=T; A=1; B=0; C=0; IN=300; OUT=300; GO TO 1400
26002 K(5)=T; A=64; B=0; C=2; IN=150; OUT=150; K(6)=F; GO TO 1400
26003 K(5)=T; A=16; B=0; C=4; IN=300; OUT=300; GO TO 1400
26004 K(5)=T; A=64; B=0; C=2; IN=110; OUT=110; GO TO 1400
26005 K(5)=T; A=16; B=3; C=7; IN=300; OUT=300; GO TO 1400
26006 K(5)=T; A=4; B=0; C=4; IN=150; OUT=300; GO TO 1400
26007 K(5)=F; A=4; B=5; C=26; IN=300; OUT=300; GO TO 1400
26008 K(5)=T; A=1; B=5; C=5; IN=300; OUT=300; GO TO 1400
      END
      SUBROUTINE INFO(LOC)
*
* THE FILE 'TIOINFO' CONTAINS HELP TEXT
* CALL IS: INFO(HELP NO.)
* VALID NO.S ARE:
*      1       HELP
*      2       INSTRUCTIONS
*      3       CAPABILITIES
*      4       SAMPLE
*      5       ?
*
      OUTPUT(-2) ""
      OPEN RANDIN,5,(*6LT)TIOINFO
      NLOC=(LOC-1)*13+5
      POSITION(5,NLOC)
      READ(5,10) L1,L2
10    FORMAT(2I6)
      LDIF=L2-L1
      POSITION(5,L1)
      CALL SCOPY(5,-2,LDIF)
      CLOSE(5)
      OUTPUT(-2) ""
      RETURN
      END
      SUBROUTINE PROMPT(IISP,LLINE,MSG)
      STRING LLINE(132),MSG(132)
      INTEGER IISP
      IF IISP.GT.0, GO TO 7003
7002  WRITE (-2,7000) MSG
7000  FORMAT(/S,Z)
      READ(-1,7001) LLINE
7001  FORMAT(S)
      IISP=1
7003  IF SUBSTR(LLINE,IISP).EQ."", GO TO 7002
      IF SUBSTR(LLINE,IISP,1).EQ." ", IISP=IISP+1; GO TO 7003
      RETURN
      END
TIO ** FICHE/FRAME BREAK *****
TIOSYM SYMSORT

SYM.  PG.LN. IDENT.

+       1 12         +       1 11         +       1 10         +       1  9         
1       1 26         1$      2 27         10     11  3         10      1 38         
10$     3 34         10000   1 24         1010    4  2         11$     4  6         
1110    4 13         12$     4 17         1210    4 24         13$     4 28         
1310    4 35         14$     5  1         1400    5  2         15$     5  7         
16$     5 11         1610    5 14         1630    5 20         1640    6  3         
1645    6  6         1650    6  9         1655    6 12         1660    6 15         
1665    6 18         1670    6 21         1675    6 25         1680    6 29         
1685    6 33         1690    6 37         1695    7  4         17$     7 12         
1720    7 34         18$     7 39         19$     8  7         2$      2 31         
20$     8 14         21$     8 21         22$     8 28         23$     8 35         
24$     9  3         25$     9  7         2500    9 24         25000   9  8         
26$     9 28         26001  10 17         26002  10 18         26003  10 19         
26004  10 20         26005  10 21         26006  10 22         26007  10 23         
26008  10 24         26111  10 15         27$     7 11         28$     5  6         
29$     4 39         3       2  1         3$      2 35         4       1 29         
4$      2 39         40000   1 32         5       1 37         5$      3  4         
50      2 11         50000   1 36         6$      3  8         60      2 17         
61      2 20         62      2 21         7$      3 12         7000   11 16         
7001   11 18         7002   11 15         7003   11 20         8$      3 17         
8000    3 18         9$      3 23         910     3 30         
C       2 13         C       1 35         C       1 34         C       1 25         

TIO ** FICHE/FRAME BREAK *****
PACKERSYM
       PROGRAM PACKER
      STRING FNAM(48),FOUT(48)
      DISPLAY "FILE MERGING ROUTINE"
      TYPE '(/"HOW MANY FILES ARE TO BE MERGED: ",Z)' ; INPUT(*) NFIL
C
      TYPE '(/"OUTPUT FILE NAME: ",Z)' ; INPUT(*) FOUT
      OPEN RANDOUT,4:FOUT
      WRITE(4,5) NFIL
5     FORMAT(I3)
      NEXPOS=13*NFIL+5
C
      DO 100 NF=1,NFIL
      TYPE 20,NF
20    FORMAT(/"SECTION ",I,"FILE: ",Z)
      INPUT(*) FNAM
      IF FNAM.EQ."", GO TO 200
      OPEN RANDIN,3:FNAM
      POSITION(4,NEXPOS)
      NSIZ=SIZE(3)
      CALL SCOPY(3,4,NSIZ)
      CLOSE(3)
      INDX=5+(NF-1)*13
      POSITION(4,INDX)
      WRITE(4,80) NEXPOS,NEXPOS+NSIZ-1
80    FORMAT(2I6)
      NEXPOS=NEXPOS+NSIZ
100   CONTINUE
C
200   CLOSE(4)
      DISPLAY "ALL DONE"
      STOP
      END
TIO ** FICHE/FRAME BREAK *****
PACKERSYM SYMSORT

SYM.  PG.LN. IDENT.

100     1 25         20      1 12         5       1  8         80      1 23         
CM      1 10         CM      1  5         CM200   1 26         

TIO ** FICHE/FRAME BREAK *****
@TIOSAM

-TIO

TIO - VERSION N.NN

1: A
TO: 32

2: B 33
"33" IS AN ILLEGAL VALUE FOR B

2: B ?
B MAY BE FROM 0 TO 7, INCLUSIVE

2: B 3

3: C 7

4: LIST A,B,C
A = 32
B = 3
C = 7

4: QUIT

E.O.J.

TIO ** FICHE/FRAME BREAK *****
FILESTIO
TIOSYM
PACKERSYM
TIOINFO
TIOGO
PACKERGO
MAKETIO
LOADTIO
MAKEPACKER
LOADPACKER
RUNPACKER
@TIOHELP
@TIOINS
@TIOCAP
@TIOSAM
@TIOQUES
FILESTIO
TIO ** FICHE/FRAME BREAK *****
LOADPACKER
RESET
BFORTRAN
LOAD PACKERBIN, *BFL3
WRITE PACKERGO

QUIT
"DONE!" COM TEL
TIO ** FICHE/FRAME BREAK *****
LOADTIO
RESET
BFORTRAN
LOAD TIOBIN, #XBFL, *BFL3
WRITE TIOGO

QUIT
"DONE!" COM TEL
TIO ** FICHE/FRAME BREAK *****
MAKEPACKER
RESET
BFORTRAN
OFF ARG
COMPILE PACKERSYM,PACKERBIN

LOAD PACKERBIN, *BFL3
WRITE PACKERGO

QUIT
"DONE!" COM TEL
TIO ** FICHE/FRAME BREAK *****
MAKETIO
RESET
BFORTRAN
OFF ARG
COMPILE TIOSYM,TIOBIN

LOAD TIOBIN, #XBFL, *BFL3
WRITE TIOGO

QUIT
"DONE!" COM TEL
TIO ** FICHE/FRAME BREAK *****
RUNPACKER
GO PACKERGO
5
TIOINFO

@TIOHELP
@TIOINS
@TIOCAP
@TIOSAM
@TIOQUES
"DONE!" COM TEL
TIO ** FICHE/FRAME BREAK *****
TIOINF
TIO, VERSION 3.00

1. THE SAVE COMMAND NOW WORKS PROPERLY AND IS
   THE SAME AS THAT ON THE TYMCOM-X TIO.

2. THE TERMINAL COMMAND HAS BEEN IMPLEMENTED. IT WORKS THE
   SAME AS THAT ON THE TYMCOM-X TIO.

3. FULLDUPLEX/HALFDUPLEX NOW COMPLEMENT FDX/HDX, AS PER
   TIO ON THE TYMCOM-X.

4. ID COMMAND NOW COMPLEMENTS TIC COMMAND, AS PER TIO
   ON THE TYMCOM-X.

5. COMMAND SCANNING NOW WORKS BETTER.

6. THE FILE 'TIOINFO' IS NOW LOOKED FOR IN
   THE DIRECTORY OF   (*6LT)

7. LIST CREDITS, LIST CHARGES, ETC. NOW WORKS AS PER TIO
   ON THE TYMCOM-X.


TIO, VERSION 2.00

THIS IS THE FIRST RELEASE OF TIO FOR THE SYSTEM LIBRARY.
CHANGES FROM #TIO ARE DESCRIBED BELOW.

1. TIO NOW INCORPORATES A FULL STANDARD FRONT END (IE, PROMPT
   NUMBER AMAND LEVEL, ESCAPE TRAPPING, ETC)

2. TIO NOW PROMPTS WHEN MORE INFORMATION IS NEEDED TO COMPLETE
   A COMMAND.  FOR EXAMPLE, TYPING "ECHO<CR>" WILL RESULT
   IN THE PROMPT "ECHO OF CHARACTERS ON OR OFF: ".

3. ADDITION OF THE "?" COMMAND

4. IMPROVED TYPOUT FOR "SAMPLE" COMMAND

5. WHENEVER INCORRECT INFORMATION IS GIVEN TO A COMMAND, TIO WILL
   NOW GIVE A LIST OF WHAT IS VALID.  FOR EXAMPLE,

       P: B ?
       B MAY BE FROM 0 TO 7, INCLUSIVE

   NOTE: ON NUMERIC INPUT, IF A BAD NUMBER IS GIVEN, THE MESSAGE

       "NNN" IS AN ILLEGAL VALUE FOR <COMMAND>

   IS GIVEN. TYPING ANYTHING OTHER THAN A NUMBER WILL RESULT IN
   A LIST OF VALID OPTIONS.

6. "SAVE <FILE>" SAVES A GO FILE WHICH SETS PARAMETERS TO
   WHAT IS CURRENTLY SET.
TIO ** FICHE/FRAME BREAK *****
TIOSQA

QA INSTRUCTIONS FOR TIO:

THE FILE 'FILESTIO' CONTAINS A LIST OF ALL TIO FILES.
THE FOLLOWING COMMAND FILES ARE AVAILABLE:

MAKETIO        - MAKES 'TIOGO' - THE TIO GO FILE
LOADTIO        - AFTER MAKETIO RUN ONCE, RE-LOADS AND SAVES 'TIOGO'
MAKEPACKER     - MAKES 'PACKERGO' - THE INFORMATION FILE BUILDER
LOADPACKER     - SAME AS LOADTIO BUT FOR PACKER
RUNPACKER      - RUNS PACKERGO AND GENERATES 'TIOINFO'

THE FILE 'TIOINFO' SHOULD BE AVAILABLE AS    (*6LT)TIOINFO
AND SHOULD BE READABLE FROM ANYWHERE IN THE SYSTEM.
THIS CONTAINS ALL TIO INFORMATION MESSAGES.

TIOINFO IS GENERATED BY THE FOLLOWING COMMANDS:

       -COM MAKEPACKER
       -COM RUNPACKER

IT TAKES THE @TIOHELP,@TIOSAM,@TIOCAP,@TIOINS,@TIOQUES FILES AND
GENERATES THE TIOINFO FILE.

TIO IS GENERATED BY THE FOLLOWING COMMAND:

       -COM MAKETIO

IT TAKES TIOSYM AND GENERATES THE TIOGO FILE.
t 
M