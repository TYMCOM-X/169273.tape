1STORE ** FICHE/FRAME BREAK *****
STORE4303
STO43  IDENT   5-13-77   (SUPERVISOR SYSTEMS ONLY)

       REM STORE VERSION 43 APRIL 1977 FIXED BUG WHICH PREVENTED
       REM FILE NAMES AND COMMENTS GREATER 64 CHARTERS
       REM ADDED COMMANDS TOTALS AND TYPE TOTALS TO ACCUMULATE
       REM TOTAL CHARACTERS AND NUMBER OF FILES STORED
       REM ADDED TWICE COMMAND TO CAUSE FILES TO BE STORED ON TAPE TWICE
       REM AND ONCE COMMAND TO RESUME STORING ONLY ONCE
       REM CHANGED TO REPORT LAST TAPE POSITION WHEN USEING THE APPEND
       REM COMMAND TO INIT TAPE.
       REM ADDED CAPABILITY OF ENTERING SEVERAL FILE NAMES SEPARATED BY
       REM COMMAS
       REM CHANGED SO THAT IF WHEN CONTINUEING TO A NEW TAPE
       REM IF TAPE IS WRITE PROTECTED OPER WILL BE GIVEN A CHANCE TO
       REM INSERT WRITE RING AND INDICATE BY TYPING CR THAT TAPE IS AGAIN READY
       REM  VERSION 4301 FIXED BUG WHICH PREVENTED STORE ALL FROM WORKING
       REM IN VERSION 43
       REM VERSION 4302 FIXED BUG WHICH CAUSED BAD FILE NAME WHEN STORE
       REM COMMAND (OTHER THAN IMPLIED STORE) WAS USED.
       REM  VERSION 4303 WHILE UNABLE DETERMINE CAUSE OF 3000000 BEING
       REM SOMETIMES MERGED INTO FPN ADDED AN EXTRACT AT OPNTAP+2 AND
       REM GPW+6 TO ATTEMPT TO REMEMDY THE SITUATION


LIBP   EQU     1B6-1            LAST INDEX BLK PTR
LUNO   EQU     5577B       LAST VALID USER NO.
SOV    EQU     4000B
ENFD   EQU     SOV-1
FCHB   EQU     20000000B       CHANGED FILE FLAG
       BRU BEGIN1; BRS 10
VERS   ASC 'S43.3$/'
       ASC 'BLOOD'
MSG    POPD    10100000B,2
       LDB =1; EAX* 0; CXA; COPY XA,BX; ETR =37777B; LDB =-1
       BRS 34; BRR 0
FORMAT DATA 30011000B
BEGIN1 STP CIN; CBA; ADM FORMAT; BRS 39; SKA =14B6; BRU *+2; BRU ERR
       LDA 10000B; LDA 14000B; LDA 30000B; LDA 34000B
       BRS 104; STA WHAT; STX CHAN; SKN WHAT; BRU *+2; BRU BEGIN2
       MSG EM1; LDA CHAN; BRM TDNO; MSG EM2; LDA WHAT; SKG =0; BRU TAPE0
       SKE =2; BRU TAPE1; MSG EM3; CLA; STA B10SW; BRS 10
TAPE0  MSG EM4; CLA; STA B10SW; BRS 10
TAPE1  MSG EM5; CLA; STA B10SW; BRS 10
ERR    MSG EM6; CLA; STA B10SW; BRS 10
ERR1   MSG EM7; CLA; STA B10SW; BRS 10
ERR2   LDA WCNT; SKG =20; BRU *+2; BRU ERR2A; SKG =0
       MSG EM12; MIN WCNT; LDA =6000; BRS 81; BRU BEG2A
ERR2A  MSG EM10; BRU ESCAPE+1
ERR3   MSG I11; BRU ESCAPE+1
WCNT   ZRO
EM1     ASC '$CHANNEL /'
EM2     ASC ' HAS /'
EM3     ASC 'THE PRINTER ASSIGNED$/'
EM4     ASC 'TD 0 ASSIGNED$/'
EM5     ASC 'TD 1 ASSIGNED$/'
EM6     ASC '$MIN. OF OPER STATUS REQUIRED$/'
EM7     ASC '$BRS 100 FAIL$/'
EM9     ASC '$ABORT$/'
EM10   ASC '$TAPE DRIVE NOT READY AFTER 2 MIN. WAIT$/'
EM11   ASC '$TAPE ALREADY INITIALIZED$/'
EM12   ASC '$AWAITING TAPE DRIVE TO COME READY$/'
EM13   ASC '$SYSTEM: /'
EM15   ASC 'TYPE CR WHEN RING IN AND TAPE READY: /'
SYSTEM ZRO
       ASC '  /'

FST    BSS     128
OVFP   EQU     *-4
       DATA    -1,-1,-1,-1,-1
FST1   BSS 128
       DATA -1,-1,-1,-1
SYSNO  ZRO
ESCAPE ZRO ESC; SKN USEFLG; BRM ESC1; BRS 101; MSG EM9
       BRM CLINP; CLA; STA B10SW; BRS 10
ESC1   ZRO; BRM ENTAP; BRM REWIND; BRM POSNO; BRR ESC1
ESC    ZRO
BEGIN2 COPY AX,A; STA WHAT; BRS 100; BRU ERR1
       BRM VERMSG; MSG EM13; LDA =SYSTEM; LDX =11; BRS 7
       MSG SYSTEM; BRM PCDAT; BRS 43; STP HREL; XAB; ETR =@7777B; XAB
       BRS 44
BEG2A  BRS 110; BRU ERR2; LDA =8; BRS 105; SKE =11B5; BRU *+2; BRU ERR3
       BRM DMSG
       LDA =BEGA; STA TABLE; BRS 43; STP TABLE+4
FORK   LDA =TABLE; MRG =734B5; BRS 9; BRU FKERR
BEGA   BRM MLUDT
       SKR INITSW; BRU *-1 (SET SW TO MODIFY MLUDT SUBROUTINE)
START  LDA =-1; STA ALLSW (NOT ALL FILES, JUST NEW)
       STA BKUPSW; STA REBSW; STA STALSW
       STA USEFLG (USER COMMAND NOT YET REACHED)
       LDA =INFO; STA WP
       LDA =BUF; LDB =200B; LDX =100B; BRS 124
       LDA BUF+63; STA SYSNO
RESET  LDA =4B4; LDX =-1; BRS 12 (SET TO COMMAND EDIT)
       CLA; LDX =-4; STA USERN+4,2; BRX *-1; STA PUNSW
GLTCH  LDA =155B; CIO =1; LDA =32B; CIO =1; BRM CLBUF
GLTCH1 CIO CIN; SKG =77B; BRU *+2; BRU GLTCH1
       SKE ='('; BRU *+2; BRU STO1 (ASSUME STORE OPTION)
       LRSH 8; CIO CIN
       SKG =77B; BRU *+2; BRU CHK; LRSH 8; CIO CIN; SKG =77B
       BRU *+2; BRU GERR; LRSH 8; CIO CIN; SKG =77B; BRU *-2
       LDX =CTBL-CTBLND; CBA; SKE CTBLND,2; BRX *-1; BRU* BTBLND,2
CHK    CLA; LSH 8; SKE =61B; BRU *+2; BRU QUI; SKE =37B
       BRU GERR; BRU HEL
GERR    LDA ERFLG; SKE =0; BRU GERR1A; MIN ERFLG; MSG ERMSG; BRU GLTCH
GERR1A   MSG ERMSG1; BRU RESET
CTBL   ASC 'LEHPPASOPWENOTSCAB YBNAGLLALOHIUQREV ONSNITOTPYTIWTCNO'
CTBLND DATA 0,HEL,APP,POS,NEW,STO,BAC,BYD,GAN,ALL,HOL,QUI
       DATA VERIFY,NVER,INS,TOT,TYP,TWICE,ONCE
BTBLND DATA GERR

*SET SWITCH TO PUT INTO VERIFY MODE

VERIFY SKR TESTSW; BRU *-1; BRU RESET

*RESET FROM VERIFY MODE TO NORMAL MODE

NVER   CLA; STA TESTSW; BRU RESET
HEL    BRM EXCREL; BRU HEL1
$HEL2  BRM EXCREL; BRU RESET
INS    BRM EXCREL; BRU INS1
EXCREL ZRO; BRS 43; XMA HREL; XAB; XMA HREL+1; XAB; BRS 44; BRR EXCREL
HREL   BSS 2
ERMSG  ASC '$?$/'
ERMSG1 ASC '$TYPE HELP$/'
ERFLG  ZRO

*SET SWITCH TO CAUSE EACH FILE TO BE STORED TWICE

TWICE  SKR AGNSW; BRU *-1; BRU RESET

*RESET AGAIN SWITCH TO RESUME ONLY STORING FILES ONCE

ONCE   CLA; STA AGNSW; BRU RESET

WRTCNT ZRO;*CELL TO RECORD WRITE COUNT FOR TWICE OPTION
AGNSW  ZRO;*SWITCH TO CAUSE FILES TO BE STORED TWICE IF NEG.

*SET SWITCH TO ACCUMLATE TOTAL CHARACTERS AND COUNT OF FILES UNTIL
*SWITCH RESET OR TYPE TOTALS COMMAND EXECUTED

TOT    SKR TOTSW; BRU *-1; CLEAR; STP TNCHAR; STA TNFIL; BRU RESET

*TYP ACCUMLATED CHARACTERS AND NUMBER OF FILES

TYP    TCO =155B; LDP TNCHAR; LDX FORMAT; BRS 53; MSG CHARS
       LDA TNFIL; BRM TDNO; MSG MFILES; CLEAR; STA TOTSW
       STA TNFIL; STP TNCHAR; BRU RESET

TOTSW  ZRO

NCHAR  ZRO
NFIL   ZRO

TNCHAR BSS 2
TNFIL  ZRO

CHARS  ASC ' CHARACTERS$/'
MFILES ASC ' FILES$/'

*TAPE INITIAL ROUTINES

*INIT. AS NEW TAPE

NEW    SKN POSSW; BRU *+2; BRU IERR
       BRM CLINP
       MSG NTM1 (ARE YOU SURE?); BRM CLBUF; BRM YN; BRU RESET
       BRM REWIND; BRM ERASE; LDA =1; STA CTP; SKR NTF; BRU *-1; BRU IRET
NTM1   ASC '$ARE YOU SURE? /'
NTF    DATA 0

*INIT. TAPE TO WRITE AFTER LAST TAPE FILE

APP    SKN POSSW; BRU *+2; BRU IERR; BRM PWE; BRM POSNO; BRU IRET

*INIT. TAPE TO WRITE BEGINNING AT SPECIFIED TAPE POS.

POS    SKN POSSW; BRU *+2; BRU IERR
POS1   MSG N2 (TAPE POS.); BRM CLBUF; BRM RONO; SKG =0; BRU POS1
       STA DP; BRM PW; BRU IRET

*COMMON RETURN FOR THE THREE ROUTINES ABOVE

IRET   SKR POSSW; BRU *-1; CLA; STA USEFLG (ALTMODES WILL NOW WRITE EOT)
       BRU RESET

*COMMON ERROR RETURN FOR THE NEW APP AND POS ROUTINES

IERR   MSG EM11 (TAPE ALREADY INITIALIZED); BRU RESET

*ERROR RETURNS FOR THE FOLLOWING COMMANDS

CERR   MSG CM1 (TAPE NOT INIT.); BRM CLINP
       BRU RESET
CERR1  MSG CM2 (SYNTAX ERROR)
       CIO CIN; SKE =155B; BRU *-2; BRU RESET
CM1    ASC '$TAPE NOT INITIALIZED$/'
CM2    ASC '$SYNTAX ERROR - CORRECT ENTRY IS:'
       ASC '$(UNAME)FILE$/'
*STORE A SPECIFIED FILE OR ALL FILES FOR AN USER

STO    BRM STO2; BRU STO3
STO1   BRM STO2; LDA ='('; BRU STO3A
STO2   ZRO; SKN POSSW; BRU CERR; LDA USPTRA; STA USPTR; STA USPTR+1
       LDA SPTRA; STA SPTR;; STA SPTR+1; LDA =-1; STA CONCH; BRR STO2
STO3   MSG N3; BRM CLBUF; LDA =377B; CIT CIN; NOP
       SKE ='('; BRU CERR1; BRU *+2
STO3A  WCI USPTR; CIO CIN; SNE =155B; BRU CERR1; SNE =')'
       BRU *+3; WCI USPTR; BRU STO3A+1; WCI USPTR; LDP USPTR; STP HUSPTR
S3B    CIO CIN; SNE =155B; BRU S3CA; WCI SPTR; BRU S3B
S3CA   WCI SPTR
S3CAA  LDA =-1; STA PROTC; LDP HUSPTR; STP PTR
S3CAB  GCI SPTR; BRU RESET (END OF STRING)
       SNE =152B; BRU S3C; SNE =155B; BRU S3C; SNE ='/'; BRM STGPRO
       SNE ="'"; BRM STGPRO; SNE ='"'; BRM STGPRO; SKE =','; BRU S3CAC
       SKN PROTC; BRU S3CAC (IN PROTECTED STRING); BRU S3C (FILE END PROCESS)
S3CAC  WCI PTR; BRU S3CAB
S3C    LDP PTR; BRS 48; BRU S8 (BAD FILE NAME)
       LDX =40; STA FLX; LDB =FST; BRS 96
       LDA FST; ETR =7777B; STA UNO
       LDX =FST+1; STX FDL; SKR FILSW; BRU *-1; BRM CPFIL; CLA
       STA FILSW
S6B    SKN CONCH; BRU ENJB; BRU S9
S8     LDP PTR; STP PTR2; LDA UNPTRA; STA UNPTR; STA UNPTR1
       GCI PTR (THROW AWAY ()
       BRU S8A
S8AA   GCI PTR; BRU S8A; SKE =')'; BRU *+2; BRU *+3; WCI UNPTR
       BRU S8AA; GCI PTR; BRU S8A; SKE ='*'; BRU S8A
       STA ALLSW; LDA =S8A; STA ERRRTN
       BRM GFDPTR; STA UNO; BRM PUN
       LDA =-1; STA ALLSW (RESET ALL SW.)
S9     BRM ENTAP; LDA =2; BRS 105; BRU S3CAA
S8A    MSG E1 (ERROR ON NAME)
       LDP PTR2; LDX =1; BRS 35; TCO =155B; BRU S6B

STGPRO ZRO; SKN PROTC; BRU *+3; STA PROTC; BRR STGPRO (SET PROTECTED)
       SKE PROTC; BRR STGPRO (WITHIN PROTECTED STRING)
       SKR PROTC; BRU *-1; BRR STGPRO (SET NOT PROTECTED)
PROTC  ZRO
USERBF BSS 20
USPTRA DATA 3*USERBF-1
USPTR  BSS 2
HUSPTR BSS 2
ALL    SKN POSSW; BRU CERR
       STA ALLSW; BRU STALL
S5C    SKN CONSW; BRU ST3; STA BKUPSW
S5A    MSG M1  (ENTIRE DISC?)
       BRM CLBUF; BRM YN; BRU S5A1 (NO)
       SKN NTF; BRU S5A2; BRM GCBNUM; HLT; STA UNO
       LDP REBSW; STP TEMPTT; CLA; STA ALLSW; STA NTF
       LDA =-1; STA REBSW; LDA UNO; BRM PUN
       LDP TEMPTT; STP REBSW (ASSUMES REBSW AND ALLSW ARE CONTIGUOUS)
S5A2   CLA; STA UNO; BRU ST
TEMPTT BSS 2
S5A1   MSG M2 (FIRST FILE DIR. NUMBER)
       BRM RONO; STA UNO; BRU ST3+1
BAC    SKN POSSW; BRU CERR; BRU S5C
GAN    SKN POSSW; BRU CERR; BRU UAD
HOL    SKN POSSW; BRU CERR; BRU HOLD
BYD    SKN POSSW; BRU CERR; BRU BACKUP
END    BRM ENTAP; BRM REWIND
       BRM POSNO; BRS 101; CLA; STA B10SW; BRS 10
QUI    SKN POSSW; BRU *+2; BRU END; BRS 101; BRM CLINP
       CLA; STA B10SW; BRS 10

POSNO  ZRO; TCO =155B; TCO =155B; MSG LPOS; LDA CTP; SUB =1
       BRM TONO; TCO =155B; BRR POSNO
ST     STA CONSW
ST3    MIN     UNO
       LDA     UNO
       SKG     =ENFD           CK IF AT LAST USER NO.
       BRU     ST4             NO
ENJB   SKR SSW; BRU *-1; MSG M3    END OF JOB, TYPE TAPE POSN
       LDA     FPN
       SUB     =1
       BRM     TONO            TYPE TAPE POSN OF LAST FILE
       SKN BKUPSW; BRU ENJ1
ENJ    MSG     M5              WAIT OR GO ON (LOOP HERE)
       CIO     =0
       SKE     CR
       BRU     *+2
       BRU     *-3
       STA     T               SAVE 1ST CHAR TYPED
       CIO     =0
       SKE     CR
       BRU     *-2             IGNORE OTHERS CHARSUNTIL C.R.
       LDA     T
       SKE     ='N'         CK IF NO
       BRU     *+2
       BRU PUN6
       SKE     ='E'         FOR END JOB
       BRU     ENJNE
ENJ1   BRM     ENTAP           WRITES EOF
       SKN     ALLSW
       BRU *+4
       MSG M6
       BRM WFD            WRITE FILE DIR. IF CHANGED FILES WRITTEN
       BRU VTRL; BRM REWIND
       SKN BKUPSW; BRU *+2; BRU ENJ2; SKN SSW
       BRU     START
ENJ2   BRS 101; BRM CLINP; CLA; STA B10SW; BRS 10

ENJNE  SKE     'Y'
       BRU     ENJ
       LDA     5MIN            WAIT 5 MINS.
       BRS     81
       BRU     ENJ
ST4    SKG =417B; SKG =377B; BRU *+2; BRU ST3; SKN REBSW; BRU ST5
       BRM     PUN             PROCESS USER NO
       BRU ST3
ST5    BRM REB; BRU ST3
TPARA  ZRO
       SKR TPSW; BRU *-1; SKR ONSW; BRU *-1; LDX UNO; BRM GLUD
       CLA; STA ONSW; STA TPSW; SKN BNSW; BRM TPARA1; CLA; STA BNSW
       MSG M13; LDA UNO; BRM TONO
       MSG M3; LDA FPN; SUB =1; BRM TONO; TCO CR; BRR TPARA
TPARA1 ZRO; MSG M12; LDA BLX; LDB =12; LDX =1; BRS 34; BRR TPARA1
*WITH USER NO IN A, GETS F.D. (& OVERFLOW), SEARCHES FOR
*NEW FILES, THEN WRITES FILES ON TAPE, REWRITES DIR.

PUNSW  ZRO
PUN    ZRO
       SKR PUNSW; BRU *-1
       SKG     =ENFD
       SKG     =0
       HLT     PUN             NOT VALID USER NO.
       SKN     ALLSW
       BRU     PUNA            (ALL)
       LDX UNO; SKR ONSW; BRU *-1; BRM GLUD; ABC; STA ONSW; CBA
       LDX =5; BRS 141; BRU *+2; BRU PUNB
       SKR ACTUSW; BRU *-1; BRU PUNB (SET SWITCH TO NOT WRITE F.D.)
PUNB   LDA UNO
PUNA   BRM GFD; LDX =FST; LDB =-1; STB CHFD (SET FLAG TO NOT CHANGED)
       BRU *+2
PUN1   LDA 0,2; SKG =0 (CK IF EMPTY); BRU PUN2 (EMPTY OR END)
       LDA 1,2; SKA =FCHB (SEE IF FLAG SET); BRU PUN3 (YES SET PROCESS)
       LDA UNO; SKE =1; BRU *+2; BRU PUN3A (ALWAYS USER 1)
       SKN ALLSW; BRU PUN3A (ALL SW SET)
PUN4   EAX     3,2             GO TO NEXT FILE
       EAX     1,2
       SKN     0,2
       BRU     *-2
       EAX     1,2
       BRU     PUN1
PUN2   SKE     =0              CK IF EMPTY
       BRU     PUN2A           NO
       SKN     CHFD            CK IF DIR. WAS CHANGED
       BRU     *+2             YES
       BRU PUN5                NO, EXIT
       LDA     =-2             CK FOR OVERFLOW
       STA     0,2             FORCE END FLAG
       BRU     PUN2C           WRITE F.D. BACK

PUN2A  SKE     =-2             CK FOR OVERFLOW
       BRU     PUN2B           YES
       SKN     CHFD            CK IF DIR. CHANGED
       BRU     PUN2C
       BRU PUN5
PUN2C  LDA UNO; SKG =1; BRU PUN5
       SKN ACTUSW; BRU *+2; BRU PUN5
       BRM SFD; BRU PUN5
PUN2B  SKN     CHFD
       BRM     SFD
       LDA     OVFP
       SKG     =LUNO           CK FOR VALID OVERFLOW PTR.
       SKG     =ENFD
       BRU     *+2
       BRU     PUNA
       SKE     UNO
       BRU PUN5                NOT OVERFLOW FOR THIS USER
       LDA     OVFP+1
       SKG     =LUNO
       SKG     =ENFD
       BRU PUN5
       BRU     PUNA

ACTUSW ZRO
PUN3   SKN ALLSW; BRU PUN3A; SUB =FCHB
       STA     1,2             REMOVE FLAGS
       CLA
       STA CHFD
PUN3A  LDA     2,2
       SKA     =20000000B      CK IF DISC FILE
       BRU     *+2             YES
       BRU     PUN4            NO, GO TO NEXT
       STX     FDL
       LDA     3,2             GET INDEX BLK PTR
       SKG     =LIBP
       SKG     =0              CK IF VALID
       BRU     PUN4
       BRM     CPFIL
       LDX     FDL
       BRU     PUN4



PUN5   CLA; STA ACTUSW
       LDX =-1; BRS 13; BRU *+2; BRU PUN6; LDA =377B
       CIT =0; BRU *+2; HLT; SKE =155B; BRU *+3; CIO =0; BRU PUN6
       SKE ='L'; BRU PUN5A; CIO =0; BRM TPARA; BRU PUN6
PUN5A  SKE ='P'; BRU PUN5B; CIO =0; BRM TPARA; BRU ENJ
PUN5B  SKE ='S'; BRU PUN6; CIO =0; BRM TPARA; BRU ENJ1
PUN6   SKN REBSW; BRR REB; BRR PUN
PUNER2 STX BRS1X; SKR BRS1SW; BRU *-1; MSG M10; BRU CFE1A
BRS1SW ZRO
BRS1X  ZRO



TONO   ZRO
       LDB     =8
       LDX     =1
       BRS     36
       BRR     TONO

TDNO   ZRO
       LDB     =10
       LDX     =1
       BRS     36
       BRR     TDNO


*PRINT THE CURENT DATE AND TIME TO THE TOUT FILE

PCDAT ZRO; STP PCA; STX PCX; BRS 76; STB TB; ABC; DIV =1800
 ADD TB; BRM PDAT3
 LDA =155B; CIO TFIL; LDP PCA; LDX PCX; BRR PCDAT
PDAT3 ZRO; STA TIME; LRSH 16; ETR =17B; ADD =1; BRM PDN; LDA ='/'
 CIO TFIL; LDA TIME; ETR =177777B; LRSH 23; DIV =1440; STB SECOND
 ADD =1; BRM PDN; CLA; CIO TFIL; CIO TFIL; LDA SECOND; LRSH 23
 DIV =60; STB SECOND; STA TMPA; SKG =9; CLA; BRM PDN; LDA TMPA
 SKG =9; BRM PDN; LDA =':'; CIO TFIL; LDA SECOND; SKG =9; CLA
 BRM PDN; LDA SECOND; SKG =9; BRM PDN; BRR PDAT3
PCA ZRO
PCB ZRO
PCX ZRO
TIME ZRO
SECOND ZRO
TB ZRO
TC ZRO
TMPA ZRO
TMPX ZRO
PDN ZRO; STX TMPX; LDB =10; LDX TFIL; BRS 36; LDX TMPX; BRR PDN

*GET FILE DIR.

GFD    ZRO; STA GRP; RSH 23; DIV =64; SKG =3; BRU GFD1
       SKG =35; BRU *+3; SUB =16; BRU GFD1
       SUB =4; XAB; SUB =100B; XAB
GFD1   STB T2; CLB; LSH 12; ADD T2; LSH 1; ADD =200B; CAB
       LDA =FST; LDX =128; STB DISC; BRS 124; LDA FST
BADFD  BRR GFD
*WRITES FILE DIR. BACK ON DISC
SFD    ZRO; LDA UNO; SKG =1; BRR SFD
       STX T1 (SAVE X); LDA GRP; LDX =7; BRS 141 (SET GRP BUSY)
       LDA =FST1; LDB DISC; LDX =128; BRS 124 (GET NEW PICTURE OF GRP)
       EAX FST; CXB; EAX FST1
SFD1   LDA 0,2; XXB; SKE 0,2; BRU SFD2 (NO MATCH)
       LDA 3,2; XXB; SKE 3,2; BRU SFD2 (NO MATCH)
*GET NEXT FILE IN FST1
       EAX 3,2; EAX 1,2; SKN 0,2; BRU *-2; EAX 1,2
*GET NEXT FILE IN FST
       XXB; EAX 3,2; EAX 1,2; SKN 0,2; BRU *-2; EAX 1,2
       LDA 0,2; SKG =0; BRU *+3; XXB; BRU SFD1
       XXB; LDA 0,2; SKG =0; BRU *+2; BRU SFD2 (NO MATCH)
       LDA =FST; LDX =128; LDB DISC; BRS 125 (MATCH ALL THE WAY SO
*WRITE OUT COPY WITH FLAGS OFF)
SFD2   LDX =7; LDA =7777B; BRS 141 (SET GRP UNBUSY); LDX T1
BFDWR  BRR SFD




*STORES ALL FILES FOR ALL USERS WITHIN A CUSTOMER NO.

UAD    STA ALLSW; MSG U1; LDA UNPTRA; STA UNPTR; STA UNPTR1
UAD1   CIO CIN; SKE =155B; BRU *+2; BRU UAD2; SKE =141B; BRU *+3
       BRM ACONT; BRU UAD1; WCI UNPTR; BRU UAD1
UAD2   LDA UNPTR1; SUB UNPTR; SKG =12; BRU *+2; BRU LNAME
       LDA =UADERR; STA ERRRTN; BRM GENTRY; LDA 6,2; ETR =1777777B
       STA ACCT
       BRM MABUF (MAKE TABLE OF FD PTRS IN ABUF)
       BRM SABUF (SORT THEM)
       BRM PABUF (PROCESS THEM)
       LDA =-1; STA ALLSW; BRU S9
UADERR MSG UE1; LDA =-1; STA ALLSW; BRU RESET
UE1    ASC '$NO ENTRY FOR THIS NAME IN THE LUD$/'
LNAME  MSG UE2; LDX =-4; CLA; STA USERN+4,2; BRX *-1; BRU UAD+1
UE2    ASC '$NAME OVER 12 CHARACTERS$/'

*WRITES COMPLETE FILE DIR. ON TAPE (NOT STANDARD FILE FORMAT)
*FIRST WORD FOR EACH USERS DIR. IS 44444444, ENDS WITH 55555555
WFD    ZRO; CLA; STA UNO
WFD1   MIN UNO; LDA UNO; SKG =ENFD; BRU WFD2 (NOT END YET)
*      END OF DIR.
       LDA CFLAG; BRM WW; BRM CLRCD; BRM CLSTAP; BRR WFD
WFD2   SKG =417B; SKG =377B; BRU *+2; BRU WFD1
       BRM GFD; SKE =0; BRU *+2; BRU WFD1
       LDA FLAG4; BRM WW; LDA UNO; BRM WW; LDA FST+126; BRM WW (F.D.CONT)
       LDA OVFP
WFD2A  STA PTR; LDX =FST
WFD3   STX FLX; LDA 0,2; SKG =0; BRU WFD4
       LDA 2,2; ETR =7B7; SKE =2B7; BRU WFD6 (NOT DISC FILE)
       LDA 3,2; SKE =0; BRU *+2; BRU WFD7 (NO INDEX BLK PTR)
WFD31  LDA 0,2; BRM WW; LDX FLX; LDA 1,2; BRM WW; LDX FLX; LDA 2,2; BRM WW
       LDX FLX; EAX 4,2
WFD3A  STX FLX; LDA 0,2; BRM WW (NAME)
       LDX FLX; EAX 1,2; SKN -1,2; BRU WFD3A; BRU WFD3
*END OF GROUP OR DIR.
WFD4   SKE =-2; BRU *+2; BRU WFD1
       LDA PTR; SKG =LUNO; SKG =ENFD; BRU WFD1
       BRM GFD; SKE =0; BRU *+2; BRU WFD1
       LDA OVFP; SKE UNO; BRU WFD1
       LDA OVFP+1; BRU WFD2A
WFD6   SKE =0; BRU WFD7
      3,2; SKE =0; BRU WFD7; BRU WFD31 (DUMMY OR INIT ENTRY OK)
WFD7   EAX 4,2; EAX 1,2; SKN -1,2; BRU *-2; BRU WFD3

*WRITES WORD ON TAPE
WW     ZRO
       STA* WP; MIN COUNT; MIN WP; LDA COUNT; SKE =199; BRR WW
       BRM CLRCD; BRR WW

*CLOSE TAPE RECORD, WRITE ON TAPE
CLRCD  ZRO; CLA; STA* WP; MIN WP; STA* WP; LDA COUNT; ADD =1
       STA COMM1
CLRCDX LDA =COMM; BRS 103; LDA COMM; SKA =@77777B; BRU *+2
       BRU CLRCD1
       STA ETEMP; LDA =CLRCDX; STA TERRET; BRU TER
CLRCD1 SKN TESTSW; BRU *+2; BRM RTEST
       CLA; STA WCNTE; STA COUNT; LDA =INFO; STA WP; BRR CLRCD
TER    LDA ETEMP; LRSH 15; SKG =13B; SKG =6B; BRU *+2; BRU WHY+2
       SKE =14B; BRU *+2; BRU ESCAPE+1; SKE =6; BRU TER1
       SKN CLSW; BRU *+2; BRU CLRCD1
       BRU TAPEND
TER1   LDA =2; BRS  105 (BACK UP 1 RCD); LDA =5; BRS 105 (ERASE)
       MIN WCNTE; LDA WCNTE; SKG =10; BRU* TERRET
       MSG TAPERR
TER2   LDA FPN; BRM TONO; BRU ESCAPE+1
TAPERR ASC '$EXCESSIVE TAPE WRITE ERRORS AT TAPE POS. /'

*IF IN VERIFY MODE REFEAD EACH RECORD AND VERIFY

RTEST  ZRO; LDA =2; BRS 105 (BACKUP 1 REC)
       LDA =BUF; LDB =3777B; LDX =1; BRS 102
       LDA BUF; LRSH 15; SKE =5
       BRU RDT2 (ERROR); LDA BUF; ETR =7777B; SUB =1; SKE RCOUNT
       BRU RDT3 (WORD COUNT ERROR)); LDX =-3775B; LDA =-1; ADM RCOUNT
RDT1   SKR RCOUNT; BRU *+4; CLA; STA RDTCNT; BRR RTEST (OKAY)
       LDA BUF-1+4000B,2; SKE COMM+4000B,2; BRU RDT4 (DATA ERROR)
       BRX RDT1; HLT 0
RDT2   MIN RDTCNT; LDA RDTCNT; SKE =3; BRU RDT5; MSG RTM1 (READ ERRORS)
       BRU RDT6
RDT3   MIN RDTCNT; LDA RDTCNT; SKE =3; BRU RDT5; MSG RTM2 (WD CNT ERROR)
       BRU RDT6
RDT4   MIN RDTCNT; LDA RDTCNT; SKE =3; BRU RDT5; MSG RTM3 (DATA ERRORS)
       BRU RDT6
RDT5   LDA =2; BRS 105; BRU CLRCDX
RDT6   LDA FPN; BRM TONO; BRM REWIND; BRS 101; MSG EM9; BRM CLINP
       CLA; STA B10SW; BRS 10
TESTSW ZRO
RDTCNT ZRO
RTM1   ASC '$TAPE READ ERRORS AT POS.: /'
RTM2   ASC '$WORD COUNT ERRORS AT POS.: /'
RTM3   ASC '$DATA ERRORS AT TAPE POS.: /'

*CLOSE TAPE FILE
CLSTAP ZRO; LDA =7; BRS 105 (WRITE EOF); BRR CLSTAP

*ERASE 9 INCHES TAPES
ERASE  ZRO; LDA =5; BRS 105; SKA =77B5; BRU WHY; BRS 105
       SKA =77B5; BRU WHY; BRS 105; SKA =77B5; BRU WHY; BRR ERASE

*OPEN TAPE FILE
OPNTAP ZRO; LDA FPN; ETR =77777B; BRM WW; LDA SYSNO; MRG =4B7; BRM WW
       LDX TA; LDA DENSE,2; BRM WW; BRM CLRCD
       BRR OPNTAP

BUF    EQU 10001B
RCOUNT EQU BUF+1
RINFO  EQU BUF+2
DENSE  DATA 200
       DATA 556
       DATA 800

*REWIND TAPE
REWIND ZRO; LDA =6; BRS 105; BRR REWIND

*WRITE END OF TAPE FLAG, REWIND
ENTAP  ZRO; LDA =-1; BRM WW; BRM CLRCD
       BRR ENTAP
LPOS   ASC 'LAST FILE STORED AT POS. /'

HOLD   BRM ENTAP; BRM POSNO; LDA CTP; SKG =2B; BRU *+2; BRU HOLD2
       BRM REWIND
HOLD1  BRS 101; CLA; STA B10SW; BRS 10
HOLD2  BRM BF; BRM BF; BRM BF; BRU HOLD1


WP     DATA 14003B
COMM   EQU 14000B
COMM1  EQU COMM+1
COUNT  EQU COMM+2
INFO   EQU COMM+3

*CREATE DATE WORD FOR CONTROL OF B OPTION

GDATE  ZRO; BRS 42; STX YR
GDATE1 MSG DATMSG; BRM CLBUF; BRM RDNO; SKG =12; SKG =0
       BRU GDATE1; SUB =1; STA MO; CBA; SKE ='-'; BRU *+2; BRU GDATE2
       SKE ='/'; BRU GDATE1
GDATE2 BRM RDNO; SKG =31; SKG =0; BRU GDATE1; STA DAY; CBA; SKE =155B
       BRU *+2; BRU GDATE3; CIO CIN; BRU *-4
GDATE3 LDA DAY; SUB =1; LRSH 5; LDA MO; LRSH 4; LDA YR; LSH 9; SUB =1
       STA DATE; BRR GDATE
DATMSG ASC '$ENTER DATE AS MONTH-DAY: /'
DATE   ZRO

*B OPTION CODE

BACKUP STA REBSW; BRM GDATE; BRU S5C

REB    ZRO; SKG =ENFD; SKG =0; HLT 0  ERROR, INVALID USER NO.
REBA   BRM GFD; LDX =FST
REB1   LDA 0,2; SKG =0; BRU REB3   FILE DIR END OR EMPTY
       ETR =17777B; SKG DATE; BRU *+2; BRU REB4   PROCESS
       LDA UNO; SKE =1; BRU *+2; BRU REB4  UN1 ALWAYS PROCESS
REB2   EAX 3,2; EAX 1,2; SKN 0,2; BRU *-2; EAX 1,2; BRU REB1
REB3   SKE =0; BRU *+2; BRU PUN5  EMPTY EXIT
       SKE =-2; BRU *+2; BRU PUN5  NO OVERFLOW EXIT
       LDA OVFP; SKG =LUNO; SKG =ENFD; BRU *+2
       BRU REBA  PROCESS OVERFLOW
       SKE UNO; BRU PUN5  ERROR NOT FOR THIS USER EXIT
       LDA OVFP+1; SKG =LUNO; SKG =ENFD; BRU PUN5 BAD PTR EXIT
       BRU REBA
REB4   LDA 2,2; SKA =2B7; BRU *+2; BRU REB2 BAD FILE GO TO NEXT
       STX FDL; LDA 3,2; SKG =LIBP; SKG =0; BRU REB2 BAD IBP G T NEXT
       BRM CPFIL; LDX FDL; BRU REB2
YR     ZRO
MO     ZRO
DAY    ZRO
$CLBUF  ZRO; LDA =155B; CIT CIN; BRR CLBUF; BRU *-2

*POS. TAPE TO WRITE, POS. IN DP
PW     ZRO
PWA    BRM FF; BRM GPW; SKA =@3777B; BRU PW2
       STA CTP; SKG DP; BRU PW1
       BRM BF; BRM BF; BRU PWA
PW1    SKE DP; BRU PW2; BRM BF
PW1A   BRM FF; LDA DP; STA CTP; BRR PW
PW2    SKE =-1; BRU PW3; BRM REWIND; BRU PWA
PW3    SKA =@3777B; BRU PW4
       ADD =1; SKE DP; BRU PWA; BRU PW1A
PW4    MSG E3; LDA CTP; BRM TONO; BRU PWA

*POS. TAPE AT END TO WRITE
PWE    ZRO; BRM FF; BRM GPW; SKE =-1; BRU PWE1
       BRM BF; BRM FF; MIN CTP; BRR PWE
PWE1   STA CTP; BRU PWE+1

*GET TAPE POS. WORD
GPW    ZRO; LDA =BUF; LDB =202; LDX =1; BRS 102
       LDA BUF+2; ETR =77777B; BRR GPW

FF     ZRO; LDA =INFO; STA WP; CLA; STA COUNT; LDA =3; BRS 105
       SKA =77B5; BRU *+2; BRR FF
       BRU WHY
BF     ZRO; LDA =INFO; STA WP; CLA; STA COUNT; LDA =4; BRS 105
       SKA =77B5; BRU *+2; BRR BF
       BRU WHY

*COPIES FILE TO TAPE

CPFIL  ZRO; CLA; STA WRTCNT
CPFIL2 BRM OPNTAP  OPEN TAPE FOR THIS FILE
       LDA FLAG; BRM WW; LDX UNO; BRM GLUD (9 WORD LUD ENTRY)
       BRS 42; STX T2; STB T1; ABC; DIV =1800; ADD T1
       STA T1; LDA T2; CLB; LSH 20; MRG T1; BRM WW (DATE AND TIME)
       LDX FDL; LDA 0,2; BRM WW; LDA 1,2; BRM WW; LDA 2,2; BRM WW
       CLA; BRM WW (SAVE WORD FOR CPTOP)
       CLA; BRM WW (SAVE WORD FOR DBITS)
       EAX 3,2
CPFILN   EAX 1,2; LDA 0,2; BRM WW; SKN 0,2; BRU CPFILN
       LDX FDL; LDA 3,2; LDB =41B; BRS 1; BRU PUNER2  CANT OPEN
       STA DFIL; SKR OPENSW; BRU *-1; RSP DFIL
       STB T1; STA INFO+14; SKN TOTSW; BRU *+3; MIN TNFIL; BRM ADDCH
       LDA T1; LRSH 23; DIV =768
       STA INFO+15 (DBITS)
CPFIL1 LDA =2000; LDX WP; STX STADR; BIO DFIL; NOP; STA WP; SUB STADR
       ADM COUNT; LDA DFIL; SKA =4B5; BRU CPFILE; BRM CLRCD
       LDA DFIL; SKA =2B5; BRU *+2; BRU CPFIL1
XX     BRM CLSTAP; MIN WRTCNT; MIN FPN; LDA DFIL; BRS 2; CLA; STA OPENSW
       SKN AGNSW; BRR CPFIL; LDA WRTCNT; SKG =1; BRU CPFIL2; BRR CPFIL
CPFILE LDA DFIL; BRS 2; MSG BIOERR
CFE1A  SKN FILSW; BRU *+2; BRU CFE1
       MSG UNMSG; LDA UNO; BRM TONO
CFE1AA TCO =155B; BRM WFILN
CFE1   SKN BRS1SW; BRU CFE1B; LDA BRS1X; SKE =1; BRU *+3
       MSG FLBSY; BRU CFE1C; SKE =4; BRU *+2; MSG FLBAD
CFE1C  CLA; STA BRS1SW
CFE1B  LDA FPN; SKG =1; BRU ESCAPE+3; BRM CLSTAP; BRM BF; BRM BF; BRM FF
CFE1D  BRR CPFIL
CFE1E  LDA DFIL; BRS 2; BRU CFE1A
WFILN  ZRO; MSG FILMSG; LDX FDL; EAX 3,2
WFILN1 EAX 1,2; LDB 0,2; BRM TWORD; SKN 0,2; BRU WFILN1; TCO =155B
       BRR WFILN
UNMSG  ASC '$FOR USER NO. /'
FILMSG ASC  '$FILE NAME: /'
TWORD  ZRO; STX TX; LDX =-3; CBA; ETR =37777777B; CAB
TWORD1 CLA; LSH 8; SKG =77B; BRU *+2; BRM CONTL; CIO =1; BRX TWORD1
TWORD2 LDX TX; BRR TWORD
ADDCH  ZRO; BRS 51; FAD TNCHAR; STP TNCHAR; BRR ADDCH
CONTL  ZRO; STA TEMPA; SKE =136B; BRU *+2; BRU TWORD2
       LDA =6; CIO =1; LDA TEMPA; ETR =77B; BRR CONTL
BIOERR ASC '$BIO ERROR/'

TEMPA  ZRO

*SYMBOLS, CONTSTANTS, VARIABLES, ETC.

*PLEASE LEAVE THESE FIRST TWO SYMBOLS CONTIGUOUS
REBSW  ZRO
ALLSW  ZRO
FLX    ZRO
POSSW  ZRO
BKUPSW ZRO
GRP    ZRO
PTR    ZRO
PTR1   ZRO
PTR2   BSS     2
PTRA   DATA 3*NBF-1
FBUF   EQU 34000B
SPTRA  DATA 3*FBUF-1
SPTR   BSS 2
NBF    BSS     50
FPN    ZRO     1               FILE POS. NUMBER, NEXT TO WRITE
CTP    EQU     FPN
UNO    ZRO     0               USER NO.
CONCH  ZRO
CHFD   DATA    -1              CH. FD. FLAG
CR     ZRO     155B
FLAG   DATA    54545454B       1ST DATA BLOCK FLAG
CFLAG  DATA    55555555B       TRL END DIR FLAG
FLAG4  DATA    44444444B       F.D. FLAG
5MIN   DATA    300000
DISC   ZRO     0               FILE DIR. DISC LOC.
FDL    ZRO     0               LOCATION IN DIR.
$CIN   ZRO
TFIL ZRO
T      ZRO
T1     ZRO
T2     ZRO
CHAN   ZRO
WHAT   ZRO


DP     ZRO
DFIL   ZRO

DMSG   ZRO; BRS 108; STA TA; MSG MSGD; LDX TA; LDA DTAB,2
       STA DENSE; BRM TDNO; MSG MSGD1; BRR DMSG

MSGD   ASC '$TAPE DRIVE SET AT /'
MSGD1  ASC 'BPI$/'
DTAB   DATA 200,556,800
WHY    LRSH 15; ETR =77B; CAX; LDA MWHY,2; LDB =-1; LDX =1
       BRS 34
       BRU ESCAPE+1

MWHY   DATA I0,I1,I2,I3,I4,I5,I6,I7,I10,I11,I12,I13,I14

I0     ZRO
I1     ASC '$TAPE READ OR WRITE ERROR/'
I2     ASC '$E.O.F./'
I3     ASC '$NO CORE FOR TAPE RECORD/'
I4     ASC '$TAPE RECORD TRUNCATED DUE TO OVERRUN OF'
       ASC '$3 SECOND TIME LIMIT/'
I5     ASC '$RECORD COUNT EXCEEDED/'
I6     ASC '$END OF TAPE/'
I7     ASC '$TAPE NOT READY/'
I10    ASC '$PAGE BOUNDARY VIOLATED/'
I11    ASC '$TAPE WRITE PROTECTED/'
I12    ASC '$TAPE NOT INITIALIZED/'
I13    ASC '$DEVICE NO LONGER ASSIGNED/'
I14    ASC '$ALTMODE/'
*DELETE PREVIOUS CHARACTER IN FILE NAME IF CONTROL A

ACONT  ZRO; GCD UNPTR; NOP; TCO =77B; BRR ACONT

E1     ASC '$ERROR ON NAME /'
E3     ASC '$GARBAGE IN POS. WORD AFTER POS. /'
N1     ASC '$NEW TAPE ?(Y OR N) /'
N2     ASC '$TAPE POS.: /'
N3     ASC '$USER: /'
M3     ASC     ' LAST FILE NO.: /'
M4     ASC '$ENTER FIRST GAN /'
M1     ASC '$ENTIRE DISC? (Y OR N) /'
M2     ASC '$FIRST FILE DIR. NUMBER: /'
M5     ASC     '$WAIT? /'
M6     ASC '$WRITING FD TRAILER$/'
M10    ASC     '$UNABLE TO OPEN DISC FILE/'
M12    ASC     ' LAST USER /'
M13    ASC ' FILE DIR. NO. /'
M14    ASC '$ENTIRE GAN? /'
M15    ASC '$START WITH WHICH UNIV. USER NO.? /'

U1     ASC '$ENTER NAME OF A USER IN THIS'
       ASC '$CUSTOMER GROUP /'
ACCT   ZRO
CONSW  DATA 77777777B
USEFLG DATA 77777777B
BNSW   ZRO
TPSW   ZRO
FILSW  ZRO
TA     ZRO
TX     ZRO
TERRET ZRO
WCNTE  ZRO
STADR  ZRO
SSW    ZRO
CLABUF ZRO; LDX =-2000B; CLA; STA ABUF+2000B,2; STA BBUF+2000B,2; BRX *-2
       BRR CLABUF
ABUF   EQU 24000B
BBUF   EQU 26000B
APTR   ZRO
APTR1  ZRO
BPTR   ZRO
BPTR1  ZRO
EPTR   ZRO
BEPTR  ZRO
LPTR   ZRO
BLPTR  ZRO
ABUFSW ZRO
SGANSW ZRO
DUUN   ZRO
MABUF  ZRO; SKR ABUFSW; BRU *-1; LDA 24000B (GRAB PAGE IF DONT HAVE IT)
       LDA =ABUF; STA EPTR; LDA =BBUF
       STA BEPTR; LDA PGINST; STA RPAGE1; BRM MLUDT; CLA; STA ABUFSW
       BRR MABUF
PGINST LDX =4000B

SABUF  ZRO; LDA ABUF; SKG =0; BRU STALL4+3; LDA =ABUF; ADD =1
       SKE EPTR; BRU *+2; BRR SABUF
       LDA EPTR; SUB =1; STA LPTR; LDA BEPTR; SUB =1; STA BLPTR
       LDA =ABUF; STA APTR; ADD =1; STA APTR1; LDA =BBUF
       STA BPTR; ADD =1; STA BPTR1
SABUF1 LDA* APTR1; SKE* APTR; BRU *+2; BRU MPTR1; SKG* APTR
       BRU *+2; BRU MPTR1; BRM EXCH; BRU SABUF1
MPTR1  MIN APTR1; MIN BPTR1; LDA APTR1; SKE EPTR; BRU SABUF1; MIN APTR
       MIN BPTR; LDA APTR; SKE LPTR; BRU *+2; BRR SABUF
       ADD =1; STA APTR1; LDA BPTR; ADD =1; STA BPTR1; BRU SABUF1
EXCH   ZRO; XMA* APTR; STA* APTR1; LDA* BPTR1; XMA* BPTR; STA* BPTR1
       BRR EXCH

PABUF  ZRO; LDA =BBUF; STA APTR; LDA =ABUF; STA BPTR
PABUF1 LDA* APTR; SKG =0; BRU PABUF2; STA UNO
       SKN SGANSW (SPLIT GAN SWITCH); BRU *+3; BRM FFUUN (FIND UUN)
       LDA UNO; BRM PUN
PABUF3 MIN APTR; MIN BPTR; BRU PABUF1
PABUF2 BRM CLABUF; BRR PABUF
FFUUN  ZRO; LDA* BPTR; SKE DUUN (DESIRED UUN); BRU PABUF3
       CLA; STA SGANSW; BRR FFUUN
ETEMP  ZRO
STALL  STA STALSW; STA BKUPSW; LDA PGINST; STA RPAGE1
       BRM MGTAB; MSG M1 (ENTIRE DISC)
       BRM CLBUF; BRM YN; BRU STALL5 (NO); BRU STALL1
STALL5 MSG M4 (FIRST GAN)
       BRM CLBUF; BRM RONO; STA ACCT
STALL6 MSG M14 (ENTIRE GAN); BRM CLBUF; BRM YN; BRU *+2 (NO)
       BRU STALL2; MSG M15 (FIRST UUN); BRM CLBUF
       BRM RONO; STA DUUN (DESIRED FIRST UUN)
       SKR SGANSW (SPLIT GAN SWITCH); BRU *-1; BRU STALL2
STALL1 LDA =1; STA ACCT
STALL2 BRM FACT
STALL3 LDA GPTR; SKE EGPTR; BRU STALL4; MSG M3; LDA FPN; SUB =1
       BRM TONO; BRM ENTAP; BRU ENJ2
STALL4 LDA* GPTR; STA ACCT; BRM MABUF; BRM SABUF; BRM PABUF
       MIN GPTR; BRU STALL3
GPTR   ZRO
GPTR1  ZRO
GANSW  ZRO
LGPTR  ZRO
EGPTR  ZRO
FACT   ZRO; LDA =20000B; STA GPTR
FACT1  LDA* GPTR; SKE ACCT; BRU *+2; BRR FACT; MIN GPTR; LDA GPTR
       SKE EGPTR; BRU FACT1; MSG SM1 (GAN NOT FOUND)
       BRM CLINP; BRU STALL5
SM1    ASC '$GAN NUMBER NOT IN LUD$/'
MGTAB  ZRO; LDA 20000B; LDA =20000B; STA GPTR; SKR GANSW; BRU *-1; BRM MLUDT
       CLA; STA GANSW; LDA GPTR; STA EGPTR; SUB =1; STA LGPTR
       LDA =20000B; STA GPTR; ADD =1; STA GPTR1
MGTAB1 LDA* GPTR1; SKE* GPTR; BRU *+2; BRU GMPTR1
       SKG* GPTR; BRU *+2; BRU GMPTR1; BRM GEXCH; BRU MGTAB1
GMPTR1 MIN GPTR1; LDA GPTR1; SKE EGPTR; BRU MGTAB1
       MIN GPTR; LDA GPTR; SKE LGPTR; BRU *+2; BRR MGTAB
       ADD =1; STA GPTR1; BRU MGTAB1
GEXCH  ZRO; XMA* GPTR; STA* GPTR1; BRR GEXCH
STALSW ZRO
TAPEND SKN OPENSW; BRU *+3; LDA DFIL; BRS 2
 BRM BF; BRM FF ; BRS 101; LDA WHAT
       LDX =-1; BRS 100
       BRU ERR1; SKR CLSW; BRU *-1 SET FLAG TO IGNORE FURTHER EOT'S
       LDA =INFO; STA WP; CLA; STA COUNT
       BRM ENTAP (WRITE END OF TAPE FLAG); CLA; STA CLSW
       LDA FPN; SUB =1; STA FPN; BRM REWIND
       BRS 101; MSG ET1 (END OF TAPE)
       MSG M3 (LAST POS.)
       LDA FPN; BRM TONO; TCO =155B
       SKN ALLSW; BRU *+2; BRU BKET (BACKUP RUNNING)
       SKN PUNSW; BRU *+2; BRU TEND1
       CLA; STA B10SW
       BRS 10
TEND1  BRM GNEWT (STORE ALL RUNNING GET NEXT TAPE)
       LDX FDL; BRU PUN3A
BKET   LDA UNO; SUB =1; BRM TONO; MSG ET4
       BRM GNEWT; LDX FDL; BRU PUN3A

ET1    ASC '$END OF TAPE$/'
ET2    ASC '$TAPE DRIVE 0 READY? (Y OR N) /'
ET3    ASC '$NOT SAME DENSITY AS PREVIOUS TAPE$/'
ET4    ASC ' LAST USER COMPLETELY PROCESSED$/'
ET5    ASC '$TAPE DRIVE 1 IS NOT READY, MOUNT AND READY NEW TAPE'
       ASC '$AND TYPE 0 OR 1 TO INDICATE WHICH DRIVE YOU WISH TO USE: /'

GNEWT  ZRO; LDA WHAT; SKE =1; BRU *+2; BRU GNEWT0; LDA =1
GNEWT1 STA WHAT; LDX =-1; BRS 100; BRU ERR1
GNEWT2 BRS 110; BRU NTERR (UNIT NOT READY)
       CLA; STA NRCNT; BRS 108; SKE TA; BRU NTERR1 (NOT SAME DENSITY)
       BRM WRTEST
       LDA =1; STA CTP; BRM REWIND; BRM ERASE; BRR GNEWT
GNEWT0 MSG ET2; BRM CLINP; CIO =0; SKE ='Y'; BRU GNEWT0
       CLA; BRU GNEWT1
NTERR  MIN NRCNT; LDA NRCNT; SKG =5; BRU *+2
       BRU ERR1A; LDA =2000; BRS 81; BRU GNEWT2
ERR1A  MSG ET5; BRM CLINP; CIO =0; SKE =20B; BRU *+2
       BRU GNEWD0; SKE ='O'; BRU *+2; BRU GNEWD0; SKE =21B
       BRU ERR1A; LDA =2000; BRS 81; BRU GNEWT2
GNEWD0 BRS 101; CLA; STA WHAT; LDX =-1; BRS 100; BRU ERR1; LDA =2000; BRS 81
       BRU GNEWT2
WRTEST ZRO; LDA =8; BRS 105; SKA =11B5; BRU *+2; BRR WRTEST
       MSG I11 (TAPE WRITE PROTECTED)
       MSG EM15 (TYPE CR WHEN RING INSERTED AND TAPE AT LOAD POINT)
       LDA =-1; BRS 11; LDA =377B; CIT CIN; SKE =155B; BRU *-3
       CIO CIN;; BRU GNEWT2

NRCNT  ZRO
NTERR1 MSG ET3; BRS 101; CLA; STA B10SW; BRS 10
OPENSW ZRO
CLSW   ZRO
VTRL   BRM BF; BRM BF; BRM BF
VTRL2  LDA =-1; STA RWP; BRM RGW; SKE =-1; BRU *+2
       BRU VTRL3; BRM FF; BRU VTRL2
VTRL3  BRM RGW; SKE CFLAG; BRU *+2; BRU VTRL4; SKE FLAG4
       BRU VTRL3; BRM RGW; CAX; CLA; STA 34000B,2; BRU VTRL3
VTRL4  LDX =-3777B; LDA 34000B+3777B,2; SKE =0; BRM VTRL5
       BRX VTRL4+1; SKN BADSW; MSG TRLOK; BRU VTRL6
VTRL5  ZRO; STA HA; STX HX; SKN BADSW; MSG TRLBAD; SKR BADSW; BRU *-1
       LDX HX; CXA; ADD =3777B; BRM TONO; TCO =155B; LDX HX; BRR VTRL5
VTRL6  BRM REWIND;; BRS 101; CLA; STA B10SW; BRS 10
TRLOK  ASC '$TRAILER VERIFIED$/'
TRLBAD ASC "$FOLLOWING UUN'S APPEAR IN THE LUD BUT ARE"
       ASC '$NOT ON THE F.D. TRAILER.  IF THEY ARE VALID'
       ASC '$USERS ASCERTAIN THAT F.D. FLAGS ARE SET AND REMAKE THE'
       ASC '$TRAILER.  IF THEY ARE NOT VALID USERS, CONTACT SYSTEMS'
       ASC '$FOR CORRECTIVE ACTION$/'
RGW    ZRO; SKN RWP; BRU RGW2
RGW1   LDA =10; STA ERCT
RGW1A  BRM RDT; BRU RGWE; LDA =RINFO; STA RWP
       LDA RCOUNT; ETR =3777B; STA RCOUNT
RGW2   SKR RCOUNT; BRU *+2; BRU RGW1; LDA* RWP; MIN RWP; BRR RGW
RGWE   SKR ERCT; BRU RGWE2
       MSG I1; BRS 101; CLA; STA B10SW; BRS 10
RGWE2  LDA =2; BRS 105; BRU RGW1A
RDT    ZRO; LDA =BUF; LDB =202; LDX =1; BRS 102; LDA BUF; SKA =5B5
       BRU *+2; BRU RDT+1; MIN RDT; BRR RDT
ERCT   ZRO
RWP    ZRO
HA     ZRO
HX     ZRO
BADSW  ZRO
VERMSG ZRO; MSG VER; MSG VERS; BRR VERMSG
VER    ASC '$VERSION /'
FLBSY  ASC 'FILE BUSY$/'
FLBAD  ASC 'FILE ERROR$/'
TABLE  BSS 8
FKERR  BRM SAVREG; LDA TABLE+6; SKE =0; BRU FKERR1
       SKN B10SW; BRS 10; BRU ESCAPE+1
FKERR1 LDA TABLE; ETR =37777B
       SKE =CPFILN+13; BRU *+2; BRU RSPTP (READ SIZE PARAM TRAP)
       SKE =CPFILN+8; BRU *+2; BRU BRS1TP BRS 1 TRAP
       SKE =CPFIL1+3; BRU *+2; BRU BIOTP BIO TRAP
       SKE =XX+4; BRU *+2; BRU BRS2T BRS 2 TRAP
       SKE =CPFILE+1; BRU *+2; BRU BRS2T BRS 2 TRAP
       SKE =TAPEND+3; BRU *+2; BRU BRS2T1 BRS 2 TRAP
       SKE =RPAGE1+2; BRU *+2; BRU LUDTP LUD READ TRAP
       SKE =GFD1+10; BRU *+2; BRU FDBAD UNABLE READ FD
       SKE =SFD+5; BRU *+2; BRU WRBFD UNABLE WRITE FD
       SKG =DENSE-1; SKG =CLRCD; BRU *+2; BRU TDFAIL  TD ERROR
       SKG =BUF-1; SKG =GPW; BRU *+2; BRU TDFAIL  TD ERROR
INSTTP MSG UNDTP; LDA TABLE; ETR =37777B; BRM TONO; TCO =155B
       BRU ESCAPE+1   UNDEFINED TRAP
UNDTP  ASC '$I. TRAP AT /'
LUDTP  MSG LTMSG; BRU ESCAPE+1
LTMSG  ASC '$I. TRAP WHILE ATTEMPTING TO READ LUD$/'
FDBAD  MSG FDBR; BRM TGRP; LDA GFD; ETR =37777B; SKE =PUNA
       BRU FDBAD1; LDA =PUN5
FKRTN  STA TABLE; BRM GETREG; BRU FORK
FDBAD1 SKE =REBA; BRU INSTTP; BRU FKRTN-1
TGRP   ZRO; LDA GRP; BRM TONO; TCO =155B; BRR TGRP
SAVREG ZRO; STA A; STB B; STX X; BRR SAVREG
GETREG ZRO; LDA A; LDB B; LDX X; BRR GETREG
A      ZRO
B      ZRO
X      ZRO
FDBR   ASC '$UNABLE READ F.D. NO. /'
WRBFD  MSG FDBW; BRM TGRP; LDA SFD; ETR =37777B; SKE =PUN2C
       BRU WRBFD1; LDA =PUN2C+1; BRU FKRTN
WRBFD1 SKE =PUN2B+1; BRU INSTTP; LDA =PUN2B+2; BRU FKRTN
FDBW   ASC '$UNABLE WRITE F.D. NO. /'
TDFAIL MSG TDF; LDA TABLE; ETR =37777B; STA GTINST; LDA* GTINST
       ETR =37777B; BRM TDNO; BRU INSTTP
TDF    ASC '$TAPE DRIVE TROUBLE'
       ASC '$FAILED ON BRS /'
GTINST ZRO
BRS1TP MSG TPBRS1; LDA =5; STA BRS1X; LDA =PUNER2+1; BRU FKRTN
TPBRS1 ASC '$BRS 1 TRAP/'
BIOTP  MSG BIOT; LDA =CPFILE; BRU FKRTN
BIOT   ASC '$BIO TRAP/'
RSPTP  MSG RSPT; LDA =CFE1E; BRU FKRTN
RSPT   ASC '$COULD NOT READ SIZE PARAMETER/'
BRS2T  MSG TPBRS2; LDA FPN; BRM TONO; TCO =155B
       MSG UNMSG; LDA UNO; BRM TONO; TCO =155B
       BRM WFILN; SKN T1SW; BRU *+2; BRU BRS2TA
       LDA =CFE1D; BRU FKRTN
BRS2T1 SKR T1SW; BRU *-1; BRU BRS2T
BRS2TA CLA; STA T1SW; LDA =TAPEND+4; BRU FKRTN
T1SW   ZRO
TPBRS2 ASC '$BRS 2 TRAP UNABLE CLOSE FILE AT TAPE POS. /'
B10SW  DATA 77777777B
*MAKES TABLE OF LUD LOCATORS XREF TO FD NO. TABLE LOCATED AT
*34000B  USING PAGE AT 30000B AS TEMP BUFFER

MLUDT  ZRO
       CLA; STA BLNO; BRM RPAGE
MLUDT1 LDA BLNO; SKG =895; BRU *+4; LDA INSTR; STA RPAGE1; BRR MLUDT
       LRSH 23; DIV =128; STB MTEMP; CLB; LSH 13; ADD =320200B
       ADD MTEMP; SKG EDISC; BRU *+2; BRM RPAGE; LDX BLX
MLUDT2 LDA 0,2; SKE =0; BRU *+2; BRU NBLK; SKE =-1; BRU *+2
       BRU NBLK; SKE =-2; BRU *+2; BRU NBLK-2; LDA 4,2 (FD POINTER)
       SKG =0; HLT; SKN ABUFSW; BRU *+2; BRU MLUDT3
       SKN GANSW; BRU *+2; BRU MLUDT6
       STA MA; STX MX; CXA; SUB =30000B; CLB
       ETR =77B; CLB; LSH 10; MRG BLNO; LDX MA; STA 34000B,2
       LDX MX; EAX 9,2; BRU MLUDT2
NBLK   LDA =64; ADM BLX; MIN BLNO; BRU MLUDT1
MLUDT3 LDA 6,2; ETR =1777777B; SKE ACCT; BRU MLUDT4
       LDA 4,2; STA* BEPTR; MIN BEPTR; LDA 7,2; ETR =377777B
       STA* EPTR; MIN EPTR
MLUDT4 EAX 9,2; BRU MLUDT2
MLUDT6 STX MX; LDA 6,2; ETR =1777777B; STA MA; LDA =20000B; STA GPTR1
MLUDT7 LDA GPTR1; SKE GPTR; BRU *+2; BRU MLUDT8; LDA* GPTR1; MIN GPTR1
       SKE MA; BRU MLUDT7; BRU MLUDT9
MLUDT8 LDA MA; STA* GPTR; MIN GPTR
MLUDT9 LDX MX; BRU MLUDT4

RPAGE  ZRO; LDA BLNO; LRSH 23; DIV =128; STB MTEMP; CLB; LSH 13
       ADD MTEMP; ADD =320200B; CAB; LDA =30000B
RPAGE1 LDX =4000B; BRS 124; CBA; ADD =37B; STA EDISC; EAX 30000B
       STX BLX; BRR RPAGE
EDISC  ZRO
BLX    ZRO
BLNO   ZRO
MX     ZRO
MA     ZRO
MTEMP  ZRO
INSTR  LDX =100B

*GET LUD ENTRY FOR FIRST DATA RECORD OF TAPE FILE

GLUD   ZRO; LDA 34000B,2; STA MA; ETR =1777B; STA BLNO; LDA MA
       LRSH 10; STA MX; BRM RPAGE; LDA MX; ADD =30000B; CAX
GLUD1  LDA 0,2; SKE =0; BRU *+2; BRU BADNAM
       SKE =-1; BRU *+2; BRU GNBLK
       LDA 4,2; SKE UNO; BRU *+2; BRU GLUD2; EAX 9,2; BRU GLUD1
GLUD2  SKN ONSW; BRU *+2; BRU GLUD4
       LDA =8; STA MTEMP
GLUD3  STX BLX; LDA 0,2; BRM WW; LDX BLX; EAX 1,2; SKR MTEMP
       BRU GLUD3; BRR GLUD
GLUD4  STX BLX; LDA 7,2; ETR =377777B; BRR GLUD
ONSW   ZRO
GNBLK  MIN BLNO; BRU GLUD+1
BADNAM SKN ONSW; BRU *+2; BRU LBAD2
       MSG M13 (FILE DIR. NO.)
       LDA UNO; BRM TONO; MSG LBAD1; BRU CFE1AA
LBAD1  ASC ' DOES NOT HAVE CORRESPONDING'
       ASC '$LUD ENTRY/'
LBAD2  CLA; STA ONSW; SKN TPSW; BRU *+2; BRU LBAD3
       SKN REBSW; BRR REB; BRR PUN
LBAD3  SKR BNSW; BRU *-1; BRR GLUD
USERN  BSS 4
UNPTRA DATA 3*USERN-1
UNPTR  ZRO
UNPTR1 ZRO
*FIND FD POINTER FROM USER NAME IN FOUR CELLS STARTING WITH USERN

GFDPTR ZRO; BRM GENTRY; LDA 4,2; BRR GFDPTR

GENTRY ZRO; CLA; LDX =-4; ADD USERN+4,2; BRX *-1
       LRSH 23; DIV =887; STB BLNO; BRM RPAGE
GENT1  LDA =8; STA MTEMP
GENT2  STX BLX; LDA 0,2; SKE =0; BRU *+2; BRU* ERRRTN; SKE =-1
       BRU *+2; BRU EXBLK; SKE USERN; BRU *+2; BRU GENT4
GENT3  EAX 9,2; SKR MTEMP; BRU GENT2; BRU* ERRRTN
GENT4  LDA 1,2; SKE USERN+1; BRU GENT3; LDA 2,2; SKE USERN+2
       BRU GENT3; LDA 3,2; SKE USERN+3; BRU GENT3; BRR GENTRY
EXBLK  MIN BLNO; BRU GENT1-1
ERRRTN ZRO
INITSW ZRO
*YES NO ROUTINE EXPECTS CALL TO BE IN FOLLOWING SEQUENCE
*MSG, BRM CLBUF, BRM YN  NO SKIP REPLY NO  SKIP REPLY YES

YN     ZRO; LDP HYNPTR; STP YNPTR
YN1    CIO CIN; SKE =141B; BRU YN2; GCD YNPTR; NOP; TCO =77B
       BRU YN1
YN2    SKG =72B; BRU *+2; BRU YN3
       WCI YNPTR; BRU YN1
YN3    STA YTERCH; GCI YNPTR; NOP; SKE =' N'; BRU *+2; BRR YN
       SKE =' Y'; BRU *+3; MIN YN; BRR YN
       BRM CLINP; LDA YN; SUB =3
       STA YN; BRR YN
YTERCH  ZRO
HYNPTR DATA 3*YNBUF-1,3*YNBUF-1
YNPTR  BSS 2
YNBUF  BSS 30
CLINP  ZRO; LDX =-1; BRS 11; BRR CLINP
*LOOKS UP THE FILE DIR NUMBER FOR COPYBATCH
GCBNUM ZRO; LDA POINT; MUL =3; LSH 23; SUB =1; CAB; ADD =12; XAB
       STP GEPTR; CLA; LDX =-4; ADD* POINT; MIN POINT; BRX *-2
       LRSH 23; DIV =887; STB LBN; CBA; SKG =895; BRU *+2; HLT
       BRM GE1
GE2    STX BPT; LDA 0,2; SKE =0; BRU *+3; LDX =1; BRR GCBNUM (NOT IN LUD)
       SKE =-1; BRU *+3; MIN LBN; BRU GE2-1; SKE =-2; BRU *+2
       BRU GE3; CXA; MUL =3; LSH 23; SUB =1; CAB; ADD =12; XAB
       SKSE GEPTR; BRU GE3; LDX BPT; LDA 4,2; STA CBFDN
       MIN GCBNUM; BRR GCBNUM
GE3    LDX BPT; EAX 9,2; BRU GE2
GE1    ZRO; LDA LBN; LRSH 23; DIV =128; STB GE1T; CLB; LSH 13
       ADD BASADR; ADD GE1T; CAB; STB LDISC; LDA =LUDBUF; LDX =100B
       BRS 124; EAX LUDBUF; BRR GE1
POINT DATA CBNAM
CBNAM ASC '*1COPYBATCH '
GEPTR BSS 2
LBN ZRO
GE1T ZRO
BASADR DATA 320200B
LDISC ZRO
LUDBUF BSS 64
CBFDN ZRO
BPT ZRO
       NOLIST EXT
RDNO   ZRO; LDB =10; LDX CIN; BRS 38; BRR RDNO
RONO   ZRO; LDB =8; LDX CIN; BRS 38; BRR RONO
       END
1STORE ** FICHE/FRAME BREAK *****
STORE4303 SYMSORT

SYM.  PG.LN. IDENT.

5MIN   20  3 STO43   A      26 36 STO43   ABUF   22  3 STO43   
ABUFSW 22 13 STO43   ACCT   21 28 STO43   ACONT  21  7 STO43   ACTUSW 10 25 STO43   
ADDCH  19  9 STO43   AGNSW   4 19 STO43   ALL     7  9 STO43   ALLSW  19 20 STO43   
APP     5 17 STO43   APTR   22  5 STO43   APTR1  22  6 STO43   B      26 37 STO43   
B10SW  27 24 STO43   BAC     7 22 STO43   BACKUP 16 35 STO43   BADFD  12 22 STO43   
BADNAM 28 38 STO43   BADSW  26  4 STO43   BASADR 30 23 STO43   BBUF   22  4 STO43   
BEG2A   3  3 STO43   BEGA    3  7 STO43   BEGIN1  1 37 STO43   BEGIN2  2 38 STO43   
BEPTR  22 10 STO43   BF     18  4 STO43   BFDWR  12 39 STO43   BIOERR 19 12 STO43   
BIOT   27 13 STO43   BIOTP  27 12 STO43   BKET   24 17 STO43   BKUPSW 19 23 STO43   
BLNO   28 18 STO43   BLPTR  22 12 STO43   BLX    28 17 STO43   BNSW   21 31 STO43   
BPT    30 27 STO43   BPTR   22  7 STO43   BPTR1  22  8 STO43   BRS1SW 11 14 STO43   
BRS1TP 27 10 STO43   BRS1X  11 15 STO43   BRS2T  27 16 STO43   BRS2T1 27 20 STO43   
BRS2TA 27 21 STO43   BTBLND  3 31 STO43   BUF    15 32 STO43   BYD     7 25 STO43   
CBFDN  30 26 STO43   CBNAM  30 19 STO43   CERR    5 36 STO43   CERR1   5 38 STO43   
CFE1   18 34 STO43   CFE1A  18 31 STO43   CFE1AA 18 33 STO43   CFE1B  18 37 STO43   
CFE1C  18 36 STO43   CFE1D  18 38 STO43   CFE1E  18 39 STO43   CFLAG  20  1 STO43   
CHAN   20 11 STO43   CHARS   5  1 STO43   CHFD   19 37 STO43   CHK     3 24 STO43   
CIN    20  6 STO43   CLABUF 22  1 STO43   CLBUF  17 17 STO43   CLINP  30  3 STO43   
CLRCD  14 17 STO43   CLRCD1 14 22 STO43   CLRCDX 14 19 STO43   CLSTAP 15 21 STO43   
CLSW   25 12 STO43   CM1     6  1 STO43   CM2     6  2 STO43   COMM   16 15 STO43   
COMM1  16 16 STO43   CONCH  19 36 STO43   CONSW  21 29 STO43   CONTL  19 10 STO43   
COUNT  16 17 STO43   CPFIL  18 10 STO43   CPFIL1 18 25 STO43   CPFIL2 18 11 STO43   
CPFILE 18 30 STO43   CPFILN 18 19 STO43   CR     19 38 STO43   CTBL    3 28 STO43   
CTBLND  3 29 STO43   CTP    19 34 STO43   DATE   16 31 STO43   DATMSG 16 30 STO43   
DAY    17 16 STO43   DENSE  15 35 STO43   DFIL   20 16 STO43   DISC   20  4 STO43   
DMSG   20 18 STO43   DP     20 15 STO43   DTAB   20 23 STO43   DUUN   22 15 STO43   
E1     21  9 STO43   E3     21 10 STO43   EDISC  28 16 STO43   EGPTR  23 24 STO43   
EM1     2 12 STO43   EM10    2 20 STO43   EM11    2 21 STO43   EM12    2 22 STO43   
EM13    2 23 STO43   EM15    2 24 STO43   EM2     2 13 STO43   EM3     2 14 STO43   
EM4     2 15 STO43   EM5     2 16 STO43   EM6     2 17 STO43   EM7     2 18 STO43   
EM9     2 19 STO43   END     7 26 STO43   ENFD    1 28 STO43   ENJ     8  4 STO43   
ENJ1    8 19 STO43   ENJ2    8 27 STO43   ENJB    7 38 STO43   ENJNE   8 29 STO43   
ENTAP  16  4 STO43   EPTR   22  9 STO43   ERASE  15 24 STO43   ERCT   25 39 STO43   
ERFLG   4  8 STO43   ERMSG   4  6 STO43   ERMSG1  4  7 STO43   ERR     2  5 STO43   
ERR1    2  6 STO43   ERR1A  24 37 STO43   ERR2    2  7 STO43   ERR2A   2  9 STO43   
ERR3    2 10 STO43   ERRRTN 29 24 STO43   ESC     2 37 STO43   ESC1    2 36 STO43   
ESCAPE  2 34 STO43   ET1    24 20 STO43   ET2    24 21 STO43   ET3    24 22 STO43   
ET4    24 23 STO43   ET5    24 24 STO43   ETEMP  23  4 STO43   EXBLK  29 23 STO43   
EXCH   22 32 STO43   EXCREL  4  4 STO43   FACT   23 25 STO43   FACT1  23 26 STO43   
FBUF   19 29 STO43   FCHB    1 29 STO43   FDBAD  26 29 STO43   FDBAD1 26 32 STO43   
FDBR   26 39 STO43   FDBW   27  4 STO43   FDL    20  5 STO43   FF     18  1 STO43   
FFUUN  23  2 STO43   FILMSG 19  5 STO43   FILSW  21 33 STO43   FKERR  26 10 STO43   
FKERR1 26 12 STO43   FKRTN  26 31 STO43   FLAG   19 39 STO43   FLAG4  20  2 STO43   
FLBAD  26  8 STO43   FLBSY  26  7 STO43   FLX    19 21 STO43   FORK    3  6 STO43   
FORMAT  1 36 STO43   FPN    19 33 STO43   FST     2 28 STO43   FST1    2 31 STO43   
GAN     7 23 STO43   GANSW  23 22 STO43   GCBNUM 30  5 STO43   GDATE  16 22 STO43   
GDATE1 16 23 STO43   GDATE2 16 26 STO43   GDATE3 16 28 STO43   GE1    30 15 STO43   
GE1T   30 22 STO43   GE2    30  9 STO43   GE3    30 14 STO43   GENT1  29 17 STO43   
GENT2  29 18 STO43   GENT3  29 20 STO43   GENT4  29 21 STO43   GENTRY 29 15 STO43   
GEPTR  30 20 STO43   GERR    3 26 STO43   GERR1A  3 27 STO43   GETREG 26 35 STO43   
GEXCH  23 38 STO43   GFD    12 17 STO43   GFD1   12 20 STO43   GFDPTR 29 13 STO43   
GLTCH   3 17 STO43   GLTCH1  3 18 STO43   GLUD   28 26 STO43   GLUD1  28 28 STO43   
GLUD2  28 31 STO43   GLUD3  28 33 STO43   GLUD4  28 35 STO43   GMPTR1 23 35 STO43   
GNBLK  28 37 STO43   GNEWD0 25  1 STO43   GNEWT  24 27 STO43   GNEWT0 24 33 STO43   
GNEWT1 24 28 STO43   GNEWT2 24 29 STO43   GPTR   23 20 STO43   GPTR1  23 21 STO43   
GPW    17 37 STO43   GRP    19 24 STO43   GTINST 27  9 STO43   HA     26  2 STO43   
HEL     4  1 STO43   HEL2    4  2 STO43   HOL     7 24 STO43   HOLD   16  8 STO43   
HOLD1  16 10 STO43   HOLD2  16 11 STO43   HREL    4  5 STO43   HUSPTR  7  8 STO43   
HX     26  3 STO43   HYNPTR 29 39 STO43   I0     20 30 STO43   I1     20 31 STO43   
I10    20 39 STO43   I11    21  1 STO43   I12    21  2 STO43   I13    21  3 STO43   
I14    21  4 STO43   I2     20 32 STO43   I3     20 33 STO43   I4     20 34 STO43   
I5     20 36 STO43   I6     20 37 STO43   I7     20 38 STO43   IERR    5 32 STO43   
INFO   16 18 STO43   INITSW 29 25 STO43   INS     4  3 STO43   INSTR  28 22 STO43   
INSTTP 26 24 STO43   IRET    5 27 STO43   LBAD1  29  2 STO43   LBAD2  29  4 STO43   
LBAD3  29  6 STO43   LBN    30 21 STO43   LDISC  30 24 STO43   LGPTR  23 23 STO43   
LIBP    1 25 STO43   LNAME  13 19 STO43   LPOS   16  6 STO43   LPTR   22 11 STO43   
LTMSG  26 28 STO43   LUDBUF 30 25 STO43   LUDTP  26 27 STO43   LUNO    1 26 STO43   
M1     21 16 STO43   M10    21 20 STO43   M12    21 21 STO43   M13    21 22 STO43   
M14    21 23 STO43   M15    21 24 STO43   M2     21 17 STO43   M3     21 14 STO43   
M4     21 15 STO43   M5     21 18 STO43   M6     21 19 STO43   MA     28 20 STO43   
MABUF  22 16 STO43   MFILES  5  2 STO43   MGTAB  23 30 STO43   MGTAB1 23 33 STO43   
MLUDT  27 28 STO43   MLUDT1 27 30 STO43   MLUDT2 27 33 STO43   MLUDT3 28  2 STO43   
MLUDT4 28  5 STO43   MLUDT6 28  6 STO43   MLUDT7 28  7 STO43   MLUDT8 28  9 STO43   
MLUDT9 28 10 STO43   MO     17 15 STO43   MPTR1  22 29 STO43   MSG     1 33 STO43   
MSGD   20 21 STO43   MSGD1  20 22 STO43   MTEMP  28 21 STO43   MWHY   20 28 STO43   
MX     28 19 STO43   N1     21 11 STO43   N2     21 12 STO43   N3     21 13 STO43   
NBF    19 32 STO43   NBLK   28  1 STO43   NCHAR   4 34 STO43   NEW     5  8 STO43   
NFIL    4 35 STO43   NRCNT  25  9 STO43   NTERR  24 35 STO43   NTERR1 25 10 STO43   
NTF     5 13 STO43   NTM1    5 12 STO43   NVER    3 39 STO43   ONCE    4 16 STO43   
ONSW   28 36 STO43   OPENSW 25 11 STO43   OPNTAP 15 28 STO43   OVFP    2 29 STO43   
PABUF  22 35 STO43   PABUF1 22 36 STO43   PABUF2 23  1 STO43   PABUF3 22 39 STO43   
PCA    12  4 STO43   PCB    12  5 STO43   PCDAT  11 34 STO43   PCX    12  6 STO43   
PDAT3  11 37 STO43   PDN    12 13 STO43   PGINST 22 20 STO43   POINT  30 18 STO43   
POS     5 21 STO43   POS1    5 22 STO43   POSNO   7 31 STO43   POSSW  19 22 STO43   
PROTC   7  4 STO43   PTR    19 25 STO43   PTR1   19 26 STO43   PTR2   19 27 STO43   
PTRA   19 28 STO43   PUN     9  9 STO43   PUN1    9 22 STO43   PUN2    9 32 STO43   
PUN2A  10  2 STO43   PUN2B  10 10 STO43   PUN2C  10  7 STO43   PUN3   10 26 STO43   
PUN3A  10 30 STO43   PUN4    9 26 STO43   PUN5   11  6 STO43   PUN5A  11 10 STO43   
PUN5B  11 11 STO43   PUN6   11 12 STO43   PUNA    9 20 STO43   PUNB    9 19 STO43   
PUNER2 11 13 STO43   PUNSW   9  8 STO43   PW     17 20 STO43   PW1    17 24 STO43   
PW1A   17 25 STO43   PW2    17 26 STO43   PW3    17 27 STO43   PW4    17 29 STO43   
PWA    17 21 STO43   PWE    17 32 STO43   PWE1   17 34 STO43   QUI     7 28 STO43   
RCOUNT 15 33 STO43   RDNO   30 29 STO43   RDT    25 37 STO43   RDT1   15  2 STO43   
RDT2   15  5 STO43   RDT3   15  7 STO43   RDT4   15  9 STO43   RDT5   15 11 STO43   
RDT6   15 12 STO43   RDTCNT 15 15 STO43   REB    16 37 STO43   REB1   16 39 STO43   
REB2   17  3 STO43   REB3   17  4 STO43   REB4   17 11 STO43   REBA   16 38 STO43   
REBSW  19 19 STO43   RESET   3 15 STO43   REWIND 16  1 STO43   RGW    25 29 STO43   
RGW1   25 30 STO43   RGW1A  25 31 STO43   RGW2   25 33 STO43   RGWE   25 34 STO43   
RGWE2  25 36 STO43   RINFO  15 34 STO43   RONO   30 30 STO43   RPAGE  28 12 STO43   
RPAGE1 28 14 STO43   RSPT   27 15 STO43   RSPTP  27 14 STO43   RTEST  14 36 STO43   
RTM1   15 16 STO43   RTM2   15 17 STO43   RTM3   15 18 STO43   RWP    26  1 STO43   
S3B     6 14 STO43   S3C     6 22 STO43   S3CA    6 15 STO43   S3CAA   6 16 STO43   
S3CAB   6 17 STO43   S3CAC   6 21 STO43   S5A     7 12 STO43   S5A1    7 20 STO43   
S5A2    7 18 STO43   S5C     7 11 STO43   S6B     6 27 STO43   S8      6 28 STO43   
S8A     6 37 STO43   S8AA    6 31 STO43   S9      6 36 STO43   SABUF  22 22 STO43   
SABUF1 22 27 STO43   SAVREG 26 34 STO43   SECOND 12  8 STO43   SFD    12 24 STO43   
SFD1   12 28 STO43   SFD2   12 38 STO43   SGANSW 22 14 STO43   SM1    23 29 STO43   
SOV     1 27 STO43   SPTR   19 31 STO43   SPTRA  19 30 STO43   SSW    21 39 STO43   
ST      7 33 STO43   ST3     7 34 STO43   ST4     8 34 STO43   ST5     8 37 STO43   
STADR  21 38 STO43   STALL  23  5 STO43   STALL1 23 14 STO43   STALL2 23 15 STO43   
STALL3 23 16 STO43   STALL4 23 18 STO43   STALL5 23  8 STO43   STALL6 23 10 STO43   
STALSW 23 39 STO43   START   3  9 STO43   STGPRO  7  1 STO43   STO     6  6 STO43   
STO1    6  7 STO43   STO2    6  8 STO43   STO3    6 10 STO43   STO3A   6 12 STO43   
SYSNO   2 33 STO43   SYSTEM  2 25 STO43   T      20  8 STO43   T1     20  9 STO43   
T1SW   27 22 STO43   T2     20 10 STO43   TA     21 34 STO43   TABLE  26  9 STO43   
TAPE0   2  3 STO43   TAPE1   2  4 STO43   TAPEND 24  1 STO43   TAPERR 14 32 STO43   
TB     12  9 STO43   TC     12 10 STO43   TDF    27  7 STO43   TDFAIL 27  5 STO43   
TDNO   11 25 STO43   TEMPA  19 14 STO43   TEMPTT  7 19 STO43   TEND1  24 15 STO43   
TER    14 24 STO43   TER1   14 28 STO43   TER2   14 31 STO43   TERRET 21 36 STO43   
TESTSW 15 14 STO43   TFIL   20  7 STO43   TGRP   26 33 STO43   TIME   12  7 STO43   
TMPA   12 11 STO43   TMPX   12 12 STO43   TNCHAR  4 37 STO43   TNFIL   4 38 STO43   
TONO   11 19 STO43   TOT     4 24 STO43   TOTSW   4 32 STO43   TPARA   8 38 STO43   
TPARA1  9  4 STO43   TPBRS1 27 11 STO43   TPBRS2 27 23 STO43   TPSW   21 32 STO43   
TRLBAD 25 24 STO43   TRLOK  25 23 STO43   TWICE   4 12 STO43   TWORD  19  6 STO43   
TWORD1 19  7 STO43   TWORD2 19  8 STO43   TX     21 35 STO43   TYP     4 28 STO43   
U1     21 26 STO43   UAD    13  7 STO43   UAD1   13  8 STO43   UAD2   13 10 STO43   
UADERR 13 17 STO43   UE1    13 18 STO43   UE2    13 20 STO43   UNDTP  26 26 STO43   
UNMSG  19  4 STO43   UNO    19 35 STO43   UNPTR  29  9 STO43   UNPTR1 29 10 STO43   
UNPTRA 29  8 STO43   USEFLG 21 30 STO43   USERBF  7  5 STO43   USERN  29  7 STO43   
USPTR   7  7 STO43   USPTRA  7  6 STO43   VER    26  6 STO43   VERIFY  3 35 STO43   
VERMSG 26  5 STO43   VERS    1 31 STO43   VTRL   25 13 STO43   VTRL2  25 14 STO43   
VTRL3  25 16 STO43   VTRL4  25 18 STO43   VTRL5  25 20 STO43   VTRL6  25 22 STO43   
WCNT    2 11 STO43   WCNTE  21 37 STO43   WFD    13 24 STO43   WFD1   13 25 STO43   
WFD2   13 28 STO43   WFD2A  13 32 STO43   WFD3   13 33 STO43   WFD31  13 36 STO43   
WFD3A  13 38 STO43   WFD4   14  2 STO43   WFD6   14  7 STO43   WFD7   14  9 STO43   
WFILN  19  1 STO43   WFILN1 19  2 STO43   WHAT   20 12 STO43   WHY    20 24 STO43   
WP     16 14 STO43   WRBFD  27  1 STO43   WRBFD1 27  3 STO43   WRTCNT  4 18 STO43   
WRTEST 25  3 STO43   WW     14 12 STO43   X      26 38 STO43   XX     18 28 STO43   
YN     29 29 STO43   YN1    29 30 STO43   YN2    29 32 STO43   YN3    29 34 STO43   
YNBUF  30  2 STO43   YNPTR  30  1 STO43   YR     17 14 STO43   YTERCH 29 38 STO43   

1STORE ** FICHE/FRAME BREAK *****
MAKESTORE4303
DATE
SYSNO
ME
NARP
STORE4303
BSTORE4303


NARP
STORE4303HELP
BSTORE4303A


RES
DDT
;TBSTORE4303
30000;TBSTORE4303A
;U
%F
SAVE 3 T 37777 ON GSTORE4303

240
"

CHECKSUMS


CHECKSUM
.
(SS940UTIL)STORE4303
(SS940UTIL)STORE4303HELP
(SS940UTIL)MAKESTORE4303
(SS940UTIL)GSTORE4303
.
"


DATE
SYSNO
ME
COM TEL
1STORE ** FICHE/FRAME BREAK *****
STORE4303HELP
S43HEL IDENT   4-5-77     LOAD AT 34000B WITH OUTPUT OF STORE42

IMSG   POPD 100B5,2
       EAX* 0; CXA; ETR =37777B; LDB =-1; LDX IFNO; BRS 34; BRR 0
MSG    OPD 101B5,2

$HEL1  MSG HELMSG; BRU HEL2
HELMSG ASC '$$VALID COMMANDS ARE:'
       ASC '$$NEW TAPE'
       ASC '$POSITION TAPE'
       ASC '$APPEND'
       ASC '$STORE'
       ASC '$BACKUP'
       ASC '$BY DATE'
       ASC '$GAN STORE'
       ASC '$ALL FILES'
       ASC '$HOLD POSITION'
       ASC '$TOTALS'
       ASC '$TYPE TOTALS'
       ASC '$INSTRUCTIONS'
       ASC '$HELP OR ?'
       ASC '$QUIT OR Q'
       ASC '$$ANY OF THE ABOVE COMMANDS MAY BE SHORTENED TO THE FIRST'
       ASC '$THREE CHARACTERS'
       ASC '$$SUPPLEMENTARY COMMANDS:'
       ASC '$$L'
       ASC '$P'
       ASC '$S'
       ASC '$$DETAILED DESCRIPTIONS OF ALL COMMANDS MAY BE OBTAINED BY'
       ASC '$USING THE INSTRUCTIONS COMMAND$/'
$INS1  MSG INM1
INS2   LDA =155B; CIO =1; LDA ='>'; CIO =1; BRM CLBUF
INS3   CIO CIN; SKG =77B; BRU *+2; BRU INS3; LRSH 8; CIO CIN
       SKG =77B; BRU *+2; BRU ICLK; LRSH 8; CIO CIN; SKG =77B
       BRU *+2; BRU INSERR; LRSH 8; CIO CIN; SKG =77B; BRU *-2
       LDX =ICTBL-ICTBLN; CBA; SKE ICTBLN,2; BRX *-1
       BRU* IBTBLN,2
ICLK   CLA; LSH 8; SKE =37B; BRU *+2; BRU IHELP
       SKE ='S'; BRU *+2; BRU ISUP
       SKE ='P'; BRU *+2; BRU ISUP
       SKE ='L'; BRU *+2; BRU ISUP
       BRU INSERR
INSERR LDA IERFLG; SKE =0; BRU IERR; MIN IERFLG; MSG IEMSG (?); BRU INS2
IERR   MSG IEMSG2 (FOR ASS ETC); CLA; STA IERFLG; BRU INS2
IEMSG  ASC '$ ?$/'
IEMSG2 ASC '$FOR ASSISTANCE TYPE HELP AT THE PROMPT CHARACTER >$/'
INM1   ASC '$TO RETURN TO MAIN PROGRAM TYPE  RETURN  AT THE PROMPT'
       ASC '$CHARACTER >$/'
INM2   ASC '$$EXPLANATION OF ALL COMMANDS MAY BE OBTAINED BY ENTERING'
       ASC '$THE COMMAND  COMPLETE  AT THE PROMPT CHARACTER >, OR AN'
       ASC '$EXPLANATION OF AN INDIVIDUAL COMMAND MAY BE OBTAINED BY'
       ASC '$ENTERING THAT COMMAND AT THE PROMPT CHARACTER >.$/'
INM3   ASC '$OUTPUT TO: /'

ICTBL  ASC 'TERLEHMOCPPASOPWENOTSCAB YBNAGLLALOHIUQREV ONSNITOTYPTIWTCNO'
ICTBLN DATA RETURN,IHELP,ICOM,IAPP,IPOS,INEW,ISTO,IBAC,IBYD,IGAN
       DATA IALL,IHOL,IQUI,IVER,INVER,IINS,ITOT,ITYP,ITWI,IONE
IBTBLN DATA INSERR
IHELP  MSG INM2; BRU INS2
RETURN BRU HEL2

IOUT   ZRO; MSG INM3 (OUTPUT TO); BRM CLBUF; LDA CIN; LDX =3; BRS 63
       BRU IOUT+1; STA IFNO; BRR IOUT
IFNO   DATA 1
IERFLG ZRO
IAPP   BRM APPI; BRU INS2
IPOS   BRM POSI; BRU INS2
INEW   BRM NEWI; BRU INS2
ISTO   BRM STOI; BRU INS2
IBAC   BRM BACI; BRU INS2
IBYD   BRM BYDI; BRU INS2
IGAN   BRM GANI; BRU INS2
IALL   BRM ALLI; BRU INS2
IHOL   BRM HOLI; BRU INS2
IQUI   BRM QUII; BRU INS2
IVER   BRM VERI; BRU INS2
INVER  BRM NVERI; BRU INS2
ITOT   BRM TOTI; BRU INS2
ITYP   BRM TYPI; BRU INS2
ITWI   BRM TWII; BRU INS2
IONE   BRM ONEI; BRU INS2
IINS   BRM INSI; BRU INS2
ISUP   BRM SUPI; BRU INS2

APPI   ZRO; IMSG MSGAPP; BRR APPI
POSI   ZRO; IMSG MSGPOS; BRR POSI
NEWI   ZRO; IMSG MSGNEW; BRR NEWI
STOI   ZRO; IMSG MSGSTO; BRR STOI
BACI   ZRO; IMSG MSGBAC; BRR BACI
BYDI   ZRO; IMSG MSGBYD; BRR BYDI
GANI   ZRO; IMSG MSGGAN; BRR GANI
ALLI   ZRO; IMSG MSGALL; BRR ALLI
HOLI   ZRO; IMSG MSGHOL; BRR HOLI
TOTI   ZRO; IMSG MSGTOT; BRR TOTI
TYPI   ZRO; IMSG MSGTYP; BRR TYPI
TWII   ZRO; IMSG MSGTWI; BRR TWII
ONEI   ZRO; IMSG MSGONE; BRR ONEI
QUII   ZRO; IMSG MSGQUI; BRR QUII
VERI   ZRO; IMSG MSGVER; BRR VERI
NVERI  ZRO; IMSG MSGNVE; BRR NVERI
INSI   ZRO; IMSG INM2; BRR INSI
SUPI   ZRO; IMSG MSGSUP; BRR SUPI

ICOM   BRM IOUT; BRM APPI; BRM POSI; BRM NEWI; BRM STOI; BRM BACI; BRM BYDI
       BRM GANI; BRM ALLI; BRM HOLI; BRM VERI; BRM NVERI; BRM INSI
       BRM QUII; BRM SUPI
       LDA IFNO; BRS 20; LDA =1; STA IFNO; BRU INS2

MSGAPP ASC '$$APPEND            POSITIONS TAPE AT END OF TAPE MARK.$/'
MSGPOS ASC '$$POSITION TAPE     POSITIONS TAPE AT SPECIFIED TAPE POSITION NO.$/'
MSGNEW ASC '$$NEW TAPE          WRITES NINE INCHES OF BLANK TAPE FROM THE LOAD'
       ASC '$                  POINT AND WILL BEGIN WRITING AT TAPE POSITION 1.$/'
MSGSTO ASC '$$STORE             REQUIRES INPUT IN THE FORM:'
       ASC '$                  (USERNAME)FILENAME,FILENAME,FILNAME'
       ASC '$                  OR (USERNAME)* FOR ALL OF A USERS FILES.'
       ASC '$                  IF A ( IS DETECTED AT THE COMMAND DISPATCHER'
       ASC '$                  THE STORE COMMAND WILL BE ASSUMED. THUS'
       ASC '$                  IT IS POSSIBLE TO ENTER SEVERAL STORE COMMANDS'
       ASC '$                  AS:'
       ASC '$                  (USERNAME)FILENAME,FILENAME'
       ASC '$                  (USERNAME)FILENAME'
       ASC '$                  ETC.$/'
MSGBAC ASC '$$BACKUP            IF A NEW TAPE HAS BEEN DONE AND THE ENTIRE'
       ASC '$                  DISC QUESTION ANSWERED YES, THIS PROGRAM WILL COPY'
       ASC '$                  ALL DISC FILES FROM *1COPYBATCH TO FRONT'
       ASC '$                  OF TAPE. COPIES ALL DISC FILES FROM'
       ASC '$                  UN1 TO TAPE, THEN ALL OTHER DISC FILES WHICH'
       ASC '$                  HAVE BEEN CHANGED SINCE THE LAST TIME THIS'
       ASC '$                  OPTION WAS RUN.$/'
MSGBYD ASC '$$BY DATE           IF A NEW TAPE HAS BEEN DONE AND THE ENTIRE'
       ASC '$                  DISC QUESTION ANSWERED YES, THIS PROGRAM WILL COPY'
       ASC '$                  ALL DISC FILES FROM *1COPYBATCH TO FRONT'
       ASC '$                  OF TAPE. COPIES ALL DISC FILES FROM'
       ASC '$                  UN1 TO TAPE, THEN ALL OTHER DISC FILES CREATED'
       ASC '$                  ON OR AFTER THE SPECIFIED DATE. THIS COMMAND'
       ASC '$                  IS TO ALLOW THE REMAKING OF A BACKUP TAPE.$/'
MSGGAN ASC '$$GAN STORE         COPIES ALL DISC FILES TO TAPE BELONGING TO ALL'
       ASC '$                  USERS OF A SPECIFIED GLOBAL ACCOUNT.$/'
MSGALL ASC '$$ALL FILES         COPIES ALL DISC FILES TO TAPE.$/'
MSGHOL ASC '$$HOLD POSITION     WRITES END OF TAPE MARK, BACKS UP THREE TAPE'
       ASC '$                  FILES, AND EXITS THE PROGRAM.$/'
MSGVER ASC '$$VERIFY            SETS SWITCH TO CAUSE EACH RECORD TO BE'
       ASC '$                  READ AND VERIFIED IMMEDIATELY AFTER WRITING.$/'
MSGNVE ASC '$$NO VERIFY         RESETS FROM VERIFY TO NORMAL MODE.$/'
MSGTOT ASC '$$TOTALS            SETS SWITCH TO ACCUMULATE TOTAL CHARACTERS'
       ASC '$                  AND NUMBER OF FILES STORED UNTIL TYPE TOTALS'
       ASC '$                  IS RUN.$/'
MSGTYP ASC '$$TYPE TOTALS       TYPES OUT ACCUMULATED CHARACTES AND NUMBER OF'
       ASC '$                  FILES RESTORED SINCE TOTALS OPTION WAS RUN.$/'
MSGTWI ASC '$$TWICE             SETS SWITCH TO STORE FILES TWICE.$/'
MSGONE ASC '$$ONCE              RESETS TWICE SWITCH TO RESUME STORING FILES'
       ASC '$                  ONCE.  THIS IS DEFAULT MODE.$/'
MSGQUI ASC '$$QUIT OR Q         IF APPEND, POSITION TAPE, OR NEW TAPE HAVE'
       ASC '$                  BEEN EXECUTED THIS COMMAND WILL CAUSE AN END'
       ASC '$                  OF TAPE MARK TO BE WRITTEN, REWIND THE TAPE, AND'
       ASC '$                  EXIT THE PROGRAM. IF NONE OF THESE COMMANDS HAVE'
       ASC '$                  EXECUTED, THIS COMMAND WILL MERELY EXIT THE'
       ASC '$                  PROGRAM.$/'
MSGSUP ASC '$$        *** SUPPLEMENTARY COMMANDS ***'
       ASC '$$WHILE THE BACKUP, BY DATE, GAN STORE, OR ALL FILES OPTIONS ARE'
       ASC '$RUNNING THE OPERATOR MAY TYPE L, P, S WITH THE FOLLOWING RESULTS:'
       ASC '$$L                 REPORTS THE LAST USER COMPLETELY PROCESSED.'
       ASC '$$P                 UPON COMPLETION OF PROCESSING OF THE CURRENT'
       ASC '$                  USERS FILES, THE PROGRAM WILL PAUSE AND ASK'
       ASC '$                  THE QUESTION "WAIT?".  A YES REPLY WILL CAUSE'
       ASC '$                  THE PROGRAM TO DISMISS FOR FIVE MINUTES AND'
       ASC '$                  AGAIN AS THE QUESTION "WAIT?".  A NO REPLY'
       ASC '$                  WILL CAUSE PROCESSING TO PROCEED.  A REPLY OF'
       ASC '$                  "END" WILL CAUSE AN END OF TAPE MARK TO BE'
       ASC '$                  WRITTEN, THE TAPE TO REWIND, AND THE PRO-'
       ASC '$                  GRAM EXITED.'
       ASC '$$S                 UPON COMPLETION OF PROCESSING OF THE CURRENT'
       ASC '$                  USERS FILES, AN END OF TAPE MARK WILL BE'
       ASC '$                  WRITTEN, THE TAPE TO REWIND, AND THE PRO-'
       ASC '$                  GRAM EXITED$/'
       NOLIST EXT
       END
   1 \