1PACKCOPY ** FICH/FRAME BREAK *****
PACKCOPY1900
PKCOPY IDENT 1-12-77
*DOES DUMMY DATA-CHAINED READ AT BEGINNING OF EACH 64 DISC COMMAND
*      GROUP TO SLOW DOWN COPY.  SEEMS TO ALLEVIATE SELECTOR 
*      CHANNEL-TO-MEMORY FAILURES
*DOES NOT WRITE SECOND PACK ID RECORD ON DUAL DENSITY PACKS
*DUAL CHANNAL DUAL DENSITY DISC COMPATABLE
*FOR USE WITH DIM VERSION 7 AND UP


START BRU GO; BRS 10

 ASC 'G. BLOOD  S. REID'
M1 ASC '$PACKCOPY VERSION 19.00 JANUARY 1977$/'
M1A ASC '$PACKCOPY MDSI VERSION 18.00 MARCH 1976$/'

MSG POPD 100B5,2; EAX* 0; CXA; ETR =37777B; LDB =-1
 LDX =1; BRS 34; BRR 0



GO BRU *+2; BRS 10; BRS 39; SKA =1B7; BRU *+2; BRU OPERR
 LDA =SPSYS; LDX =31; BRS 7; BRM GEQUIP
 LDA SPSYS; SKA =1; BRU *+2; BRU GO1; MSG M1A; BRU GO2
GO1 MSG M1 (VERSION NO)
GO2 SKN CCOMSW; BRU 2314M; MSG M2 (DUAL DENSITY VERSION)
GO3 BRM IZ INITIALIZE PROGRAM

L1 MSG M3 (READ FROM PACK)
L1A3 LDA =SUER; BRM ARM
L1A1 BRM RPAKNO; SKG =-1; BRU L1; STA R; STX RD1; STX TEMPK
 BRM CKAB; BRU ER1 (GET PACK NUMBER TO READ FROM); LDA R
 SKN CCOMSW; BRU *+2; BRM EPAK; LDA R; BRM RDPAK
 SKN TPAKSW; BRU *+2; BRU TL1; BRM CRPAK
L1A MSG M4 (WRITE ON PACK); BRM RPAKNO; SKG =-1; BRU L1A
 STA W; STX WT1; STX TEMPK; BRM CKAB
 BRU L1A (GET PACK NUMBER TO WRITE ON); LDA W; LDX R
 SKN CCOMSW; BRU *+2; BRU WEPAK; SKE COUPLE,2
 BRU ER3 (TRAP, HE WANTS TO WRITE ON AN ILLEGAL PACK)
L1A2 LDA W; BRM RDPAK; SKN TPAKSW; BRU *+2; BRU TL1A; BRM CWPAK
 LDX R; SKR RUSE,2; BRU ER2 (NOT FATAL ERR)

L1E MSG M46
L1C LDA R; MUL =128000/2; STB R1 DP ADRS OF BEGINNING OF PACK
 LDA W; MUL =128000/2; STB W1 DP ADRS OF BEGINNING OF PACK

L1B LDA =FORK2; BRM ARM
L1D LDA R1; RSH 23; DIV =128000; SKG R; BRU FORK1
 SKN TPAKSW; BRU *+2; BRU L1D2; BRM WUPDAT; BRM RUPDAT
 SKN CCOMSW; BRU *+2; BRM CKSEC
L1D1 MSG M5 (PACK COPIED); SKN TPAKSW; BRU L1; BRU EOJ
L1D2 SKN CCOMSW; BRU L1D1; BRM CKSEC; BRU L1D1
M46 ASC '$$COPY STARTED$/'

FORK1 EQU * READ AND WRITE THE DISC IN PAGES. OUTPUT 64 DISC 
* COMMANDS THEN DISMISS WHILE THE DISC CATCHES UP WITH THE DISC
* LIST IN THE MONITOR. QUIT WHEN R1 POINTS TO THE NEXT DISC PACK.
* NOTE THAT THE DP ADRS GOES UP BY 1024 EVERY 32 PAGES
 LDA =BFR; LDB R1; LDX =100B; SKB =-1; BRU
L1D 
 LDB =7B7 (SPECIAL WAY OF GETTING AT LOC. 0)
 SKB =1023; BRU *+2; BRS 122 (DUMMY READ STALLS WHILE CHANNEL COOLS OFF)
 LDX =4000B
 BRS 122 READ A PAGE WITHOUT DISMISSING; LDB W1
 SKB =-1; BRU *+2; LDB =7B7
 BRS 123 WRITE A PAGE WITHOUT DISMISSING; LDA R1
 ADD =40B INCREMENT DISC ADRS BY 1 PAGE; SKA =1023
 BRU *+2 DISMISS AFTER 32 WRITES (64 IO NDS)
 BRS 55 DISMISS UNTIL NO DISC COMMANDS PENDING IN THE MONITOR
* NOTE THAT IO ERROR WILL COME ON BRS 55 OR MAYBE BEFORE. R1 SHOULD
* NOT BE UPDATED UNTIL BRS 55 IS COMPLETED OR ERROR LOGIC WILL FAIL
 STA R1; LDA =40B; ADM W1; BRU L1D
 BSS 1 MARK LOCATION FOR FORK2
FORK2 0 *-1 FORK2 RUNS WHEN AN ERROR WAS DETECTED SOMEWHERE IN A 
* GROUP OF 64 DISC COMMANDS ISSUED BY FORK1. FORK2 BACKS
* UP R1 AND W1 TO BEGINNING OF 64 COMMAND GROUP AND
* READS ONE FULL GROUP OF 32 PAGES.
 LDA =SOLID
 BRM ARM ANY DISC ERRORS IN FORK2 ARE SOLID ERRORS; LDA R1
 ETR =-1024; STA R1 REDUCE R1 TO BEG. OF 32 PAGE GROUP
 LDA W1; ETR =-1024; STA W1
F2A LDA =BFR; LDB R1; LDX =400B; SKB =-1; BRU *+2
 LDB =7B7

BRS124 BRS 124 READ SMALL RECORD. NO COMMAND CHAINING OR DATA CHAINING
 LDB W1; SKB =-1; BRU *+2; LDB =7B7; BRS 125; LDA =4
 ADM R1; ADM W1 INCR. DISC ADRS BY SMALL RECORD LENGTH
 LDA R1; SKA =1023; BRU F2A 
 BRU L1B R1 POINTS AT NEXT 32 PAGE GROUP.(MAYBE AT NEXT PACK)


SOLIDR BSS 1 MARK CELL FOR SOLID SUBROUTINE
SOLID 0 *-1; STP A; STX X; LDA =SOLID; BRM ARM
 LDX SOLIDR; LDA 0,2; EOR BRS124; SKA =-2
 BRM PF (NOT A BRS 124 OR BRS 125)
 SKR SC; BRU S1
* OUTPUT HEADING FOR ERRORS
 MSG M6 (DISC ERROS ETC)
S1 TCO =155B; LDB B DP ADRS; LDA =7B6
 BRM TFNO TYPE DP ADRS WITH LEADING SPACES
 LDA B; RSH 23; DIV =128000
 CAB TYPE PACK WITH LEADING SPACES; LDA =7B4; BRM TFNO
 LDA B; RSH 23+5; DIV =20; RSH 23; DIV =200
 LDA =7B3; BRM TFNO TYPE CYL WITH LEADING SPACES; 
 LDA B; RSH 23+5 (5 TO SHIFT OUT RECORD NUMBER); DIV =20
 LDA =7B4; BRM TFNO
 LDA B; ETR =37B; ADD =4; RSH 26 RECORD NUMBER PLUS 1
 LDA =7B3; BRM TFNO TYPE REC NUMBER BETWEEN 1 AND 10
 LDX SOLIDR; LDA 0,2; SKA =1; BRU S2; MSG M7 (READ)
 BRU S3
S2 MSG M8 (WRITE)
S3 LDP A; LDX X; BRR SOLIDR RE-ENTER FORK2 AFTER FAILING BRS

IZ 0
* INTIALIZE PACKCOPY
 BRM CKSUP; MSG M9A (SUP MAP NHANG MSG); BRM CKOK
 MSG M9 (CHECK NO OF USER MSG); LDX =-1; BRS 11
 CIO =0; SKE =155B; BRU EOJ; LDX =3
 BRS 141 READ NUMBER OF USERS; SKG =3; BRU IZ1
 MSG M10 (TOO MANY USERS); BRU EOJ
IZ1 BRM HANG; BRM CKHOST; LDX =-8; LDA =4B7+1
 STA RUSE+8,2; BRX *-1; STA RUSE1; STA SC; LDA =8*128000-1
 STA BFR; LDA =BFR+4B7; LDX =10; BRS 7; LDA =BFR+4B7
 LDX =32; BRS 7; BRR IZ

*HANG SUP AND MAP AND SET SWITCH TO CRASH SYSTEM UPON COMPLETION

HANG 0; BRS 166 (HANG SUP); LDA =1; BRS 129 (HANG MAP)
 SKR CRSHSW; BRU *-1 (SET SWITCH TO CRASH); BRR HANG
CRSHSW ZRO

EOJ LDA =BFR; LDB =200B; LDX =100B; BRS 124; LDA BFR+76B
 CNA; SKG =7; SKG =0; HLT; ADD =1; STA NDISC
 MUL =128000; LSH 23; SUB =1; STA BFR; LDA =BFR+4B7
 LDX =10; BRS 7; LDA SPSYS; SKA =1; BRU MDSI
 LDA =BFR+4B7; LDX =32; BRS 7
EOJ1 MSG M11 (EOJ); SKN CRSHSW; BRS 10
EOJ2 MSG M43; LDX =-1; BRS 11; CIO =0; SKE =155B; BRU EOJ2
EOJ3 MSG M42 (CRASHING); LDA =5000; BRS 81; BRS 180

MDSI LDA BFR+61B; CNA; ADD NDISC; MUL =128000; LSH 23; SUB =1
 STA BFR; LDA =BFR+4B7; LDX =32; BRS 7; BRU EOJ1

ER1 SKN BSW; BRU ER1A; MSG M12 (VALID ARE 8 TO F)
 BRU ER1B
ER1A MSG M13 (VALID ARE 0 TO 7)
ER1B SKN TPAKSW; BRU L1; BRU TPAK1

ER2 SKR RUSE1; BRU L1A; MSG M14; LDA RD1; CIO =1; MSG M15
 LDX =-1; BRS 11; CIO =0; SKE =155B; BRU L1; BRU L1C

ER3 MSG M16; LDA RD1; CIO =1; MSG M17; LDX R; LDA CPL,2
 SKN CCOMSW; LDA COUPLE,2; SKN BSW; BRU *+2; BRU BER3
 BRM TONO
AER3 SKN TPAKSW; BRU L1; BRU TPAK1
BER3 LDA CPLB,2; CIO =1; BRU AER3
CPLB ASC '  E  E  E  E  E  E  C  C'

SUERH BSS 1
SUER 0 *-1 STARTUP ERROR PLUGS MIXED NOT UP TO SPEED ETC
 MSG M45; LDA =SUER; BRM ARM; BRU L1
M45 ASC '$DISC ERROR, CHECK TO SEE THAT PACKS ARE UP TO SPEED,$'
 ASC 'AND ONLINE.$$/'

PF 0
* PROGRAM FAILURE
 MSG M18; BRU EOJ

ARM 0
 STA 213B ARM DISC ERROR INTERRUPT TO TRAP AT LOCATION IN A
 LDA =1000B (BIT FOR INTERRUPT 11); BRS 78; BRR ARM

RPAKNO 0
* READ HEX DEC NUMBER INTO X AND CONVERTED PACKNO INTO A
 LDX =-1; BRS 11 CLEAR INPUT BUFFER; CIO =0; CAB
 CIO =0; SKG =72B; BRU *-2; CBA; SKE =' Q'; BRU *+2
 BRU EOJ; SKE =' T'; BRU *+2; BRU TPAK; SKG =31B
 SKG =17B; BRU *+2; BRU RPKNO1; SKG =46B; SKG =40B; BRU *+2
 BRU RPKNO2; LDA =-1; BRR RPAKNO
RPKNO1 SUB =20B; SKG =7; BRU RPKNO3; SUB =8; BRU RPKNO3
RPKNO2 SUB =37B
RPKNO3 CBX; BRR RPAKNO

TPAK SKR TPAKSW; BRU *-1
TPAK1 MSG M19 (WHERE IS TEST PACK); BRU L1A1

TL1 LDA BFR; SKE =31000400B; BRU *+2; BRU L1A
 MSG M20 (NOT A TEST PACK); BRU EOJ

TL1A LDA SYSNO; LDX =SYST-ESYST; SKE ESYST,2; BRU *+2; BRU ER4
 BRX *-3; BRU L1C

SYST ASC ' C1 C2 V3 V4 C5 H6 C7 H8 C9C10C11H12C13P14C15C16C17C18C19'
 ASC 'C20H21H22H23V24V25C26C27C28C29C30'
ESYST EQU *

ER4 MSG M21 (WRITING ON SYS); LDB SYSNO; BRM TSYSNO
ER4A MSG M22 (PROCEED?); BRM CLBUF; CIO =0; SKE =' Y'
 BRU *+2; BRU L1C; SKE =' N'; BRU *+2; BRU EOJ; LDX =-1
 BRS 11; BRU ER4A
TPAKSW ZRO

TONO 0
* TYPE OCTAL NUMBER
 LDB =8; LDX =1; BRS 36; BRR TONO

TFNO 0; STB TFB
* TYPE FORMATTED NUMBER. OUTPUT LEADING BLANKS
TF1 SKA =7; BRU TF2; SKA TFB; BRU TF2; TCO =0 (BLANK)
 LRSH 3; BRU TF1
TF2 LDA TFB; LDB =8; LDX =1; BRS 36; BRR TFNO
TFB 0

SC 0
* SWITCH THAT CAUSES ERROR HEADING TO BE TYPED ONLY ONCE.
R 0
* PACK NUMBER TO READ FROM.
W 0
* PACK NUMBER TO WRITE ON.
R1 0
* DISC ADDRESS TO READ FROM. USED BY FORK1 AND FORK2.
W1 0
* FORK1 IS ENTERED WITH R1,W1 SET AT BEGINNING OF 32 PAGES ON DISC.
RD1 0
* READ PACK NUMBER AS BEFORE CONVERSION
WT1 0
* WRITE PACK NUMBER BEFORE CONVERSION
RUSE BSS 8 TABLE TO COUNT HOW MANY TIMES READ IS REQUESTED FOR A PACK
RUSE1 BSS 1 SWITCH TO MAKE ER2 MESSAGE TYPE ONLY ONCE
COUPLE DATA 7,7,7,7,7,7,7,6 TABLE TO FOR A CERTAIN WRITE GIVEN A PACK
* NUMBER TO READ FROM
CPL DATA 6,6,6,6,6,6,4,4 DUAL DENSITY TABLE

A BSS 1
B BSS 1
X BSS 1

BFR EQU 4000B DISC IO BUFFER
PAKNO EQU BFR+1
SYSNO EQU BFR
SETNO EQU BFR+2
MPTIM EQU BFR+3
COPDAT EQU BFR+4
RSYS ZRO
RSET ZRO
RMPTIM ZRO

*CHECK READ PAK FOR CORRECT DRIVE

CRPAK ZRO; LDA PAKNO; SKE R; BRU CRPAKE ON WRONG DRIVE
 LDA SYSNO; STA RSYS; LDA SETNO; STA RSET; LDA MPTIM
 STA RMPTIM; BRR CRPAK

*CHECK WRITE ON PAK TO BE SURE NOT WRITING ON PAK FROM SAME
*SET

CWPAK ZRO; LDA SETNO; SKN FSET; BRU *+2; BRU CWPAK1; SKR FSET
 BRU *-1; STA CSET; SKG =5; SKG =0; BRU GSETNO
CWPAK1 SKE RSET; BRU *+2; BRU SETER1; SKE CSET; BRU SETER2
CWPAK2 LDA SYSNO; SKE RSYS; BRU SYSERR; LDA MPTIM; SKE RMPTIM
 BRU *+2; BRU MAPERR; SKG RMPTIM; BRR CWPAK; BRU MAPER1

*IF MAP TIMES ON BOTH READ AND WRITE PACKS ARE IDENTICAL
*HE MUST HAVE COPIED THIS PACK BEFORE, ASK HIM

MAPERR MSG M23 (MAP TIMES IDENTICAL); MSG M22 (PROCEED?)
 BRM CLBUF; CIO =0; SKE =' Y'; BRU *+2; BRR CWPAK
 SKE =' N'; BRU *+2; BRU EOJ; LDX =-1; BRS 11; BRU MAPERR

*UPDATE WRITE ON PAK WITH SET NO. AND DATE COPIED
*WRITE PACK LAST MAPPED TIME GREATER THAN READ PACK LAST MAPPED TIME
*IS HE TRYING TO WRITE ON RUNNING PACKS? BETTER WARN HIM

MAPER1 MSG M44 (WRITE PACK MAP TIME GREATER); LDX =-1
 BRS 11; CIO =0; SKE ='Y'; BRU *+2; BRR CWPAK; SKE ='N'
 BRU MAPER1; BRU EOJ


WUPDAT ZRO; LDA W; BRM RDPAK; LDA CSET; STA SETNO
 BRM GCTIME; STA COPDAT; LDA W; BRM WPAK; BRR WUPDAT

*UPDATE READ PAK WITH DATE COPIED

RUPDAT ZRO; LDA R; BRM RDPAK; BRM GCTIME; STA COPDAT; LDA R; BRM WPAK
 BRR RUPDAT

*READ A PACK ID RECORD PAK NO. IN A UPON ENTRY

RDPAK  ZRO; SKA =1; SKN CCOMSW; BRU *+2; BRR RDPAK
       MUL =128000; LSH 23; ADD =64000; CAB; STB DISC
 LDA =BFR; LDX =400B; BRS 124; BRR RDPAK

*WRITE PAK RECORD BACK TO LAST PAK READ

WPAK   ZRO; SKA =1; SKN CCOMSW; BRU *+2; BRR WPAK
       LDA =BFR; LDB DISC; LDX =400B; BRS 125; BRR WPAK

*GET DATE AND TIME PAK COPIED

GCTIME ZRO; BRS 42; STB TEMP; LRSH 23; DIV =3600; ADD TEMP
 BRR GCTIME
TEMP ZRO
DISC ZRO
CSET ZRO
FSET ZRO

*PACKS MIXED ON DRIVES ERROR ROUTINE 

CRPAKE MSG M24; LDA PAKNO; SKN BSW; BRU *+2; BRM BTONO
 BRM TONO; MSG M25; LDA RD1; CIO =1; TCO =155B
 BRU L1
BTONO ZRO; CAX; LDA BPAKNO,2; CIO =1; MIN BTONO; BRR BTONO
BPAKNO ASC '  8  9  A  B  C  D  E  F'

*PACKS IN SAME SET ERROR ROUTINE 

SETER1 MSG M26 (PACKS SAME SET)
SETE1 MSG M22 (PROCEED?); BRM CLBUF; CIO =0; SKE =' Y'
 BRU *+2; BRU CWPAK2; SKE =' N'; BRU *+2; BRU EOJ; LDX =-1
 BRS 11; BRU SETE1
SETER2 MSG M27; LDA CSET; BRM TONO; MSG M28
 LDA SETNO; BRM TONO; BRU SETE1

*PACKS FROM DIFFERENT SYSTEMS ERROR ROUTINE 

SYSERR MSG M29 (PACK NOT SAME SYSTEM); LDB RSYS; BRM TSYSNO
 MSG M30 (BUT WRITTING ON); LDB SYSNO; BRM TSYSNO
SYSE1 MSG M22 (PROCEED?); BRM CLBUF; CIO =0; SKE =' Y'
 BRU *+2; BRR CWPAK; SKE =' N'; BRU *+2; BRU EOJ; LDX =-1
 BRS 11; BRU SYSE1

TSYSNO ZRO; LDX =-3; CLA; LSH 8; CIO =1; BRX *-3; BRR TSYSNO

GSETNO MSG M31 (WHAT SET)
GSETN3 BRM CLBUF; BRM RDNO; SKG =5; SKG =0; BRU GSETN1
 SKE RSET; BRU *+2; BRU GSETN2; STA SETNO; STA CSET
 BRU CWPAK2
GSETN1 LDX =-1; BRS 11; BRU GSETNO+1
GSETN2 MSG M32 (STILL SAME SET); LDX =-1; BRS 11; BRU GSETN3
RDNO ZRO; LDB =10; CLX; BRS 38; BRR RDNO

CLBUF ZRO; LDA =155B; CIT =0; BRR CLBUF; BRU *-2


OPERR MSG M33; BRS 10
GEQUIP ZRO; LDA =EQBUF; LDB =200B; LDX =100B; BRS 124
 LDA EQWD; RSH 9; ETR =7; SKE =3; BRU *+2; BRU NDDEN
 SKE =4; BRU NPSYS; SKR CCOMSW; BRU *-1; BRR GEQUIP

NDDEN MSG M34A; BRS 10
NPSYS MSG M34; BRS 10

EPAK ZRO; LRSH 23; DIV =2; CBA; SKG =0; BRR EPAK; SKN BSW
 BRU *+2; BRU BEPAK; MSG M35 (VALID PACK NUMBERS)
 BRU ER1B
BEPAK MSG M41; BRU ER1B

WEPAK LRSH 23; DIV =2; CBA; SKG =0; BRU *+2; BRU ER3A
 SKN BSW; BRU *+2; BRU BWEPAK; LDA W; SKE CPL,2
 BRU ER3; BRU L1A2
BWEPAK LDA WT1; SKE CPLB,2; BRU ER3; BRU L1A2

ER3A SKN BSW; BRU *+2; BRU ER3C
 MSG M36 (ERROR, VALID PACK NUMBERS ARE 4 OR 6)
ER3B SKN TPAKSW; BRU L1; BRU TPAK1
ER3C MSG M37 (ERROR, VALID PACKNUMBERS ARE C OR E); BRU ER3B
CKSEC ZRO; LDA R; LRSH 23; DIV =2; CBA; SKE =0; BRR CKSEC
 MIN R; MIN W; BRU L1C
CKOK ZRO; MSG M38 ($OK? ); LDX =-1; BRS 11; CIO =0
 SKE =' Y'; BRU EOJ; LDX =-1; BRS 11; BRR CKOK
2314M MSG M39 ($SINGLE DENSITY VERSION$); BRM CKOK; BRU GO3
EQBUF BSS 100
EQWD EQU EQBUF+75B
CCOMSW ZRO

*PREVENTS PACKCOPY IF SUPERVISOR IS ACTIVE ON THIS SYSTEM

CKSUP ZRO; LDX =211B; BRS 127; SKG =0; BRR CKSUP
 MSG M40 ($SUPERVISOR ACTIVE ON THIS SYSTEM); BRU EOJ
LOOK ZRO

*CHECKS TO SEE IF A OR B SYSTEM ON DUAL SELECTOR CHANNEL SYSTEMS

CKHOST ZRO; LDX =207B; BRS 127; STA LOOK; SKN LOOK; BRR CKHOST
 SKR BSW; BRU *-1; BRR CKHOST
BSW ZRO
* NEGATIVE IF B SYSTEM AND USES DRIVES 8 THRU F



*CHECKS PACK NO AGAINS A OR B HOST SWITCH

CKAB ZRO; MIN CKAB; LDA TEMPK; SKG =27B; BRU CKAB3
 SKN BSW; BRU *+2; BRU CKAB2
CKAB1 SKR CKAB; NOP
CKAB2 BRR CKAB
CKAB3 SKN BSW; BRU CKAB2; BRU CKAB1
TEMPK ZRO
M2 ASC '$DUAL DENSITY VERSION$/'
M3 ASC '$READ FROM PACK: /'
M4 ASC '$WRITE ON PACK: /'
M5 ASC '$PACK COPIED$/'
M6 ASC '$DISC ERRORS, VALUES ARE OCTAL'
 ASC '$DP ADRS PACK CYL HEAD REC/'
M7 ASC ' READ/'
M8 ASC ' WRITE/'
M9 ASC '$TYPE CAR. RET. IF USER DO NOT EXCEED SUP, MAP, AND YOURSELF'
 ASC '$AND THE SHUT COMMAND IS IN EFFECT. /'
M9A ASC '$SUP (IF LOGGED ON) AND MAP WILL BE HUNG, ALTMODES INHIBITED,'
 ASC '$AND SYSTEM WILL BE CRASHED UPON COMPLETION OF THE PACKCOPY$/'
M10 ASC '$MORE THAN THREE USERS ON./'
M11 ASC '$EOJ$/'
M12 ASC '$ERROR, VALID PACK NUMBERS ARE 8 TO F/'
M13 ASC '$ERROR, VALID PACK NUMBERS ARE 0 TO 7/'
M14 ASC '$THIS IS THE SECOND READ FROM PACK /'
M15 ASC '. TYPE CARRIAGE RETURN TO CONTINUE: /'
M16 ASC '$IF YOU ARE READ FROM PACK /'
M17 ASC ', YOU MUST WRITE ON PACK /'
M18 ASC '$PROGRAM FAILURE'
 ASC '$PUT RUNNING PACKS BACK ON PROPER DRIVES THEN'
 ASC '$USE THE EXEC DUMP COMMAND TO SAVE THE STATE OF MEMORY'
 ASC '$AND NOTIFY SYSTEMS$/'
M19 ASC '$GOOD TEST PACK IS ON WHICH DRIVE? /'
M20 ASC '$THIS NOT A TEST PACK - PROGRAM ABORTED$/'
M21 ASC '$YOU ARE WRITING ON A PACK FROM SYSTEM /'
M22 ASC '$DO YOU WISH TO PROCEED? "Y OR N" /'
M23 ASC '$MAP TIMES ON BOTH READ AND WRITE PACKS ARE IDENTICAL'
 ASC '$INDICATING YOU ARE ATTEMPTING TO WRITE ON A PACK'
 ASC '$FOR THE SECOND TIME/'
M24 ASC '$PACKS ARE ON WRONG DRIVES'; ASC '$PACK NO. /'
M25 ASC ' IS ON DRIVE /'
M26 ASC '$YOU ARE ATTEMPTING TO READ AND WRITE ON PACKS'
 ASC '$BELONGING TO THE SAME SET/'
M27 ASC '$YOU WERE WRITING ON SET NO. /'
M28 ASC '$NOW YOU ARE ATTEMPTING TO WRITE ON A PACK'
 ASC '$BELONGING TO SET /'
M29 ASC '$PACKS ARE NOT FROM THE SAME SYSTEM'
 ASC '$YOU ARE READING FROM A PACK FROM SYSTEM /'
M30 ASC '$AND YOU ARE ATTEMPTING TO WRITE ON A PACK'
 ASC '$BELONGING TO SYSTEM /'
M31 ASC '$WHAT SET ARE YOU TRYING TO WRITE ON "1 2 3 4 OR 5"? /'
M32 ASC '$THE SET NUMBER ENTERED IS SAME AS SET NUMBER OF THE'
 ASC '$PACK YOU ARE READING. ON WHICH SET ARE YOU TRYING'
 ASC '$WRITE "1 2 3 4 OR 5"? /'
M33 ASC '$OPERATOR STATUS IS REQUIRED/'
M34 ASC 'NOT DISC PACK SYSTEM - ABORT$/'
M34A ASC 'NOT DUAL DENSITY - ABORT$/'
M35 ASC '$ERROR, VALID PACK NUMBERS ARE 0,2,4,6/'
M36 ASC '$ERROR, VALID PACK NUMBERS ARE 4 OR 6/'
M37 ASC '$ERROR, VALID PACK NUMBERS ARE C OR E/'
M38 ASC '$OK? /'
M39 ASC '$SINGLE DENSITY VERSION$/'
M40 ASC '$SUPERVISOR ACTIVE ON THIS SYSTEM - PROGRAM ABORTED$/'
M41 ASC '$ERROR, VALID PACK NUMBERS ARE 8,A,C,E/'
M42 ASC '$$CRASHING$$/'
M43 ASC '$TYPE CR WHEN PACK 0 IS ON DRIVE 0: /'
M44 ASC '$THE MAP TIME ON THE PACK YOU ARE ATTEMPTING TO WRITE ON'
 ASC '$IS LATER THAN THE MAP TIME ON THE PACK YOU ARE COPYING'
 ASC '$FROM, RAISING THE POSSIBILITY THAT YOU MAY BE'
 ASC '$ATTEMPTING TO WRITE ON THE RUNNING SET.'
 ASC '$$DO YOU WISH TO PROCEED? /'
SPSYS ZRO
NDISC ZRO; END
1PACKCOPY ** FICH/FRAME BREAK *****
PACKCOPY1900 SYMSORT

SYM.  PG.LN. IDENT.

2314M  10 18 PKCOPY  A       6 37 PKCOPY  AER3    4 36 PKCOPY  
ARM     5 11 PKCOPY  B       6 38 PKCOPY  BEPAK  10  3 PKCOPY  BER3    4 37 PKCOPY  
BFR     7  2 PKCOPY  BPAKNO  8 38 PKCOPY  BRS124  3  5 PKCOPY  BSW    10 33 PKCOPY  
BTONO   8 37 PKCOPY  BWEPAK 10  8 PKCOPY  CCOMSW 10 21 PKCOPY  CKAB   11  1 PKCOPY  
CKAB1  11  3 PKCOPY  CKAB2  11  4 PKCOPY  CKAB3  11  5 PKCOPY  CKHOST 10 31 PKCOPY  
CKOK   10 16 PKCOPY  CKSEC  10 14 PKCOPY  CKSUP  10 25 PKCOPY  CLBUF   9 28 PKCOPY  
COPDAT  7  7 PKCOPY  COUPLE  6 33 PKCOPY  CPL     6 35 PKCOPY  CPLB    4 38 PKCOPY  
CRPAK   7 14 PKCOPY  CRPAKE  8 34 PKCOPY  CRSHSW  4 11 PKCOPY  CSET    8 29 PKCOPY  
CWPAK   7 21 PKCOPY  CWPAK1  7 23 PKCOPY  CWPAK2  7 24 PKCOPY  DISC    8 28 PKCOPY  
EOJ     4 13 PKCOPY  EOJ1    4 18 PKCOPY  EOJ2    4 19 PKCOPY  EOJ3    4 20 PKCOPY  
EPAK    9 39 PKCOPY  EQBUF  10 19 PKCOPY  EQWD   10 20 PKCOPY  ER1     4 25 PKCOPY  
ER1A    4 27 PKCOPY  ER1B    4 28 PKCOPY  ER2     4 30 PKCOPY  ER3     4 33 PKCOPY  
ER3A   10 10 PKCOPY  ER3B   10 12 PKCOPY  ER3C   10 13 PKCOPY  ER4     5 39 PKCOPY  
ER4A    6  1 PKCOPY  ESYST   5 37 PKCOPY  F2A     3  2 PKCOPY  FORK1   2 15 PKCOPY  
FORK2   2 33 PKCOPY  FSET    8 30 PKCOPY  GCTIME  8 25 PKCOPY  GEQUIP  9 32 PKCOPY  
GO      1 21 PKCOPY  GO1     1 24 PKCOPY  GO2     1 25 PKCOPY  GO3     1 26 PKCOPY  
GSETN1  9 24 PKCOPY  GSETN2  9 25 PKCOPY  GSETN3  9 21 PKCOPY  GSETNO  9 20 PKCOPY  
HANG    4  9 PKCOPY  IZ      3 34 PKCOPY  IZ1     4  2 PKCOPY  L1      1 28 PKCOPY  
L1A     1 34 PKCOPY  L1A1    1 30 PKCOPY  L1A2    1 39 PKCOPY  L1A3    1 29 PKCOPY  
L1B     2  7 PKCOPY  L1C     2  4 PKCOPY  L1D     2  8 PKCOPY  L1D1    2 11 PKCOPY  
L1D2    2 12 PKCOPY  L1E     2  3 PKCOPY  LOOK   10 27 PKCOPY  M1      1 13 PKCOPY  
M10    11 19 PKCOPY  M11    11 20 PKCOPY  M12    11 21 PKCOPY  M13    11 22 PKCOPY  
M14    11 23 PKCOPY  M15    11 24 PKCOPY  M16    11 25 PKCOPY  M17    11 26 PKCOPY  
M18    11 27 PKCOPY  M19    11 31 PKCOPY  M1A     1 14 PKCOPY  M2     11  7 PKCOPY  
M20    11 32 PKCOPY  M21    11 33 PKCOPY  M22    11 34 PKCOPY  M23    11 35 PKCOPY  
M24    11 38 PKCOPY  M25    11 39 PKCOPY  M26   1 PKCOPY  M27    12  3 PKCOPY  
M28    12  4 PKCOPY  M29    12  6 PKCOPY  M3     11  8 PKCOPY  M30    12  8 PKCOPY  
M31    12 10 PKCOPY  M32    12 11 PKCOPY  M33    12 14 PKCOPY  M34    12 15 PKCOPY  
M34A   12 16 PKCOPY  M35    12 17 PKCOPY  M36    12 18 PKCOPY  M37    12 19 PKCOPY  
M38    12 20 PKCOPY  M39    12 21 PKCOPY  M4     11  9 PKCOPY  M40    12 22 PKCOPY  
M41    12 23 PKCOPY  M42    12 24 PKCOPY  M43    12 25 PKCOPY  M44    12 26 PKCOPY  
M45     5  4 PKCOPY  M46     2 13 PKCOPY  M5     11 10 PKCOPY  M6     11 11 PKCOPY  
M7     11 13 PKCOPY  M8     11 14 PKCOPY  M9     11 15 PKCOPY  M9A    11 17 PKCOPY  
MAPER1  7 38 PKCOPY  MAPERR  7 30 PKCOPY  MDSI    4 22 PKCOPY  MPTIM   7  6 PKCOPY  
MSG     1 16 PKCOPY  NDDEN   9 36 PKCOPY  NDISC  12 32 PKCOPY  NPSYS   9 37 PKCOPY  
OPERR   9 31 PKCOPY  PAKNO   7  3 PKCOPY  PF      5  7 PKCOPY  R       6 19 PKCOPY  
R1      6 23 PKCOPY  RD1     6 27 PKCOPY  RDNO    9 26 PKCOPY  RDPAK   8 14 PKCOPY  
RMPTIM  7 10 PKCOPY  RPAKNO  5 15 PKCOPY  RPKNO1  5 22 PKCOPY  RPKNO2  5 23 PKCOPY  
RPKNO3  5 24 PKCOPY  RSET    7  9 PKCOPY  RSYS    7  8 PKCOPY  RUPDAT  8  9 PKCOPY  
RUSE    6 31 PKCOPY  RUSE1   6 32 PKCOPY  S1      3 19 PKCOPY  S2      3 31 PKCOPY  
S3      3 32 PKCOPY  SC      6 17 PKCOPY  SETE1   9  4 PKCOPY  SETER1  9  3 PKCOPY  
SETER2  9  7 PKCOPY  SETNO   7  5 PKCOPY  SOLID   3 13 PKCOPY  SOLIDR  3 12 PKCOPY  
SPSYS  12 31 PKCOPY  START   1 10 PKCOPY  SUER    5  2 PKCOPY  SUERH   5  1 PKCOPY  
SYSE1   9 14 PKCOPY  SYSERR  9 12 PKCOPY  SYSNO   7  4 PKCOPY  SYST    5 35 PKCOPY  
TEMP    8 27 PKCOPY  TEMPK  11  6 PKCOPY  TF1     6 12 PKCOPY  TF2     6 14 PKCOPY  
TFB     6 15 PKCOPY  TFNO    6 10 PKCOPY  TL1     5 29 PKCOPY  TL1A    5 32 PKCOPY  
TONO    6  6 PKCOPY  TPAK    5 26 PKCOPY  TPAK1   5 27 PKCOPY  TPAKSW  6  4 PKCOPY  
TSYSNO  9 18 PKCOPY  W       6 21 PKCOPY  W1      6 25 PKCOPY  WEPAK  10  5 PKCOPY  
WPAK    8 20 PKCOPY  WT1     6 29 PKCOPY  WUPDAT  8  4 PKCOPY  X       6 39 PKCOPY  

1PACKCOPY ** FICH/FRAME BREAK *****
MAKEPACKCOPY1900
NARP
PACKCOPY1900
BPC1900

T
RES
XDD
;TBPC1900
%FSAV 3 TO 3777 ON GPACKCOPY1900

240
"

FILES AND CHECKSUMS

"
CHECKSUM
.
PACKCOPY1900-SOURCE
GPACKCOPY1900-GO-FILE
MAKEPACKCOPY1900-COMMANDS-FILE
.
COM T
 # e8