1TAPELIB ** FICHE/FRAME BREAK *****
TAPELIB
TAPLIB IDENT   BUILD AUX CIRCUIT TO 38, PASSES AND ACCEPTS CHAR.
*
       BRU     START           SKIP ROUTINES
*
TYPE   POPD    101B5
       EAX*    0
       CXA
       ETR     =37777B
       LDB     =-1
       LDX     =1
       BRS     34
       BRR     0
*
*  BUILD AUX CIRCUIT TO SYS 38
*
START  BRS     39              GET WHO WE ARE
       SKA     =4B7            MUST BE TYMSHARE
       BRU     *+2
       BRS     10
       TYPE    HEADR
       BRM     ONCEO           GET PASSWORD AND USERNAME
       LDX     =-1
       BRS     161
       BRS     168
*
*  GET CIRCUIT TO TAPELIB
*
       BRS     138
       SKE     =0
       HLT
       LDP     LOGPTR
       LDX     =1
       BRS     35
       BRS     138
       SKE     =0
       BRU     NOCIR
*
       CXA                     GET PORT FROM A
       SKG     =1              IF 1, THEN ERROR
       BRU NOCIR
       STX     IPORT           STORE INPUT PORT NUMBER
       STX     OPORT           STORE IN OUTPORT LOC ALSO
       MIN     OPORT           CORRECT OUTPUT PORT NO.
       LDX     IPORT
       LDA     =4B7+4B2+2B6
       BRS     12
*
       LDA     =PANIC          WHERE ON ESCAPES
       STA     201B
       LDA     =LEAVE
       STA     212B
       LDA     =2B3+2B6
       BRS     78
*
*
       CIO     IPORT
       NOP
       LDA     =215B           GET A CR
       CIO     OPORT           RESPONSE TO PROJECT CODE
       LDA     =215B           IN CASE OF DETATCHED JOB
       CIO     OPORT
*
*SEND RUN (TAPELIB)TAPSLV STRING TO GET BALL ROLLING
*
       LDP     RUNPTR          GET POINTER
       STP     STRPTR
       GCI     STRPTR          GET A CHARACTER
       BRU     GORUN           END OF STRING
       ADD     =40B
       CIO     OPORT           SEND CHAR OUT
       BRU     *-4             GET NEXT CHAR
GORUN  LDA     =215B           GET CR
       CIO     OPORT           SEND IT OUT
*
       LDP     FILPTR          GET POINTER TO STORAGE
       STP     STRPTR          SAVE FOR LATER
       LDA     =12
       STA     COUNT
*
NXTCHR CIO     IPORT           GET A CHARACTER
       SUB     =40B            MAKE INTERNAL ASCII
       ETR     =177B           KEEP ONLY REVELENT BITS
       SNE     =155B             SEE IF CR
       BRU     NXTCHR          BYPASS CR
       SNE     =152B             SEE IF LF
       BRU     CHECK           END OF STRING, SEE IF IT WAS TAPE LIBRARY
*
*  NO, NOT END OF STRING, SAVE CHAR FOR CHECKING
*
       SKR     COUNT           SKIP IF CANT STORE ANY MORE
       WCI     STRPTR          STORE CHAR INTO STRING
       BRU     NXTCHR          GET NEXT CHARACTER
*
* SEE IF INPUT STRING EQUATES TO TAPE LIBRARY STRING
*
CHECK  LDA     FILLER
       SKE     TAPLBL
       BRU     CLEAR           NO MATCH
       LDA     FILLER+1
       SKE     TAPLBL+1
       BRU     CLEAR
       LDA     FILLER+2
       SKE     TAPLBL+2
       BRU     CLEAR
       LDA     FILLER+3
       SKE     TAPLBL+3
       BRU     CLEAR
*
* GET SYSTEM CENTER AND SEND IT DOWN
*
       LDA     =FILLER         WHERE TO STUFF INFO
       LDX     =11             TABLE TO GET
       BRS     7
       LDB     FILLER          GET INFO
       CLA                     CLEAR A
       LSH     8               GET A CHAR INTO A
       SKE     =0              SKIP IF NOTHING THERE
       BRU     DIGIT2          GO SEND 2 DIGITS
       LSH     8               GET CENTER CODE
       BRU     DIGIT1          ONLY 1 DIGIT TO SEND
DIGIT2 CLA
       LSH     8               GET 1ST DIGIT
       ADD     =40B
       CIO     OPORT           SEND IT OUT
DIGIT1 CLA
       LSH     8               GET LAST DIGIT
       ADD     =40B
       CIO     OPORT           SEND IT DOWN
       LDA     =215B           CR
       CIO     OPORT
*
* SEND OUT TYPE OF PERSON WE IS 1=OPER, 2=CS, 4=ACCNTNG
*
*
*  SEE IF WE IN GAN 11447
       LDA     =31
       LDB     =PPN
       LDX     =1
       BRS     67
       LDA     PPN
       SNE     =11447B         11447 GAN=C/S
       BRU     BAKDOR
*
       LDA     STASW           SAYS WHAT WE ARE
       SNE     ZERO            MUST HAVE SOMETHING
       BRU     NOTUSR          CANT USE THIS
       SNE     MONE            SKIP IF NOT C/S
BAKDOR LDA     THREE           FLAG AS CS
       ADD     =60B            MAKE EXTERNAL ASCII
       CIO     OPORT
       LDA     =215B
       CIO     OPORT
*
* SEND OUT USERNAME OF RUNNING PERSON
*
       LDP     NAMPTR          POINTER TO UNAME STORAGE
       STP     STRPTR
MORNAM GCI     STRPTR          GET A CHAR
       BRU     OUTNAM          END OF STRING
       SNE     =0              SKIP IF GOT SOMETHING
       BRU     OUTNAM          PRE-MATURE ENDING, NOT FULL LENGTH
       ADD     =40B            MAKE EXTERNAL
       CIO     OPORT           SEND IT OUT
       BRU     MORNAM          GET MORE OF IT
OUTNAM LDA     =215B           END WITH CR
       CIO     OPORT
       LDX     =-1
       BRS     162
       BRS     169
*
       BRU     RECNOW
       LDX     IPORT           WAIT TIL WE GET SOMETHIING
       BRS     155
       BRU     RECNOW          GO IF GOT SOMETHING
       BRU     *-3             KEEP WAITING TIL WE GET SOMETHING
CLEAR  CLAB                    CLEAR A AND B
       STP     FILLER          ZERO FILLER AREA
       STP     FILLER+2        ZERO REST OF FILLER
       LDA     =12             RESET COUNTER
       STA     COUNT
       LDP     FILPTR          SET POINTER BACK UP
       STP     STRPTR
       BRU     NXTCHR          GET NEXT STRING
*
* HERE TO PASS I/O STRINGS BACK AND FORTH
* SEE IF ANYTHING COMING FROM AUX SYSTEM, IF SO PROCESS TIL LF
* SEE IF ANYTHING COMING FROM TERMINAL, IF SO PROCESS TIL CR, SEND LF
*
* RECEIVE FROM THE TERMINAL, SEND DOWN AUX CIRCUIT
*
SNDAUX CLX                     INPUT PORT FROM TTY
       BRS     155             SEE IF ANYTHING THERE
       BRU     *+2             IF GOT SOMETHING
       BRU     RECAUX          IF NOTHING
SNDAU1 CIO     =0              GET SOMETHING
       ADD     =40B            MAKE EXTERNAL
       SKE     =212            SKIP IF LF
       BRU     SNDAU2
       LDA     =155B           REPLACE LF WITH CR
       CIO     =1
       LDA     =215B           SEND CR IN ITS PLACE
SNDAU2 CIO     OPORT           SEND IT OUT
       SKE     =201B           RUBOUT
       BRU     SNDAUX          END OF LINE
       LDA     =77B           BACK ARROW
       CIO     =1
       BRU     SNDAUX
*
* RECEIVE FROM AUX CIRCUIT, PUT OUT TO TERMINAL
*
RECAUX LDX     IPORT           GET INPUT PORT NO.
       BRS     155             SKIP IF NOTHING THERE
       BRU     *+2             SKIP IF GOT SOMETHING
       BRU     SNDAUX          NONE, CHECK IN FORM TTY
RECNOW CIO     IPORT           GET THAT SOMETHING
       SUB     =40B             MAKE INTERNAL
       ETR     =177B           
       CIO     =1              PUT TO TERMINAL
       SKE     =155B           SEE IF CR
       BRU     RECAUX          GET NEXT CHAR
       CIO     IPORT           GET LF AFTER CR
       BRU     RECAUX          IGNORE IT
*
*
*
*  HERE ON ESCAPES, SEND DOWN ESCAPE, CLEAR INPUT BUFFER
*
PANIC  ZRO     DUMMY
       LDA     =233B           ESCAPE
       CIO     OPORT           SEND IT DOWN
       LDA     =215B
       CIO     OPORT
       LDA     =2B3+2B6        SET INTERRUPTS AGAIN
       BRS     78
       BRU     RECAUX
*
LEAVE  ZRO     DUMMY
       BRS     10
DUMMY  ZRO
NOTUSR TYPE    BADUSR
       BRS     10
NOCIR  TYPE    NOAUX
       BRS     10              EXIT
*
TAPLBL ASC  'TAPE LIBRARY'
PPN    ZRO
COUNT  ZRO   0                 COUNTS CHARACTERS INPUT
STRPTR ZRO   0
       ZRO
FILPTR DATA 3*FILLER-1,3*FILLER-1
FILLER ZRO
       ZRO
       ZRO
       ZRO
RUNPTR DATA 3*RUNLBL-1,3*RUNLBL+20
RUNLBL ASC 'RUN (TAPELIB)TAPSLV'
GOAUX  ASC     '$GOT AUX CIRCUIT/'
NOAUX  ASC     '$NO AUXILIARY CIRCUITS/'
LOGPTR DATA 3*LOGSTR-1,3*LOGSTR+11-1
LOGSTR ASC 'TAPELIB:29-'
CRLFLG ZRO
IPORT  ZRO
OPORT  ZRO
HEADR  ASC '$TAPE LIBRARY$$/'
BADUSR ASC '$MUST BE OPER, CS OR ACCTNG$$/'
CIRZAP ASC '$CIRCUIT ZAP$$/'
NAMPTR DATA 3*OPNAM-1,3*OPNAM-1+12

SPTR OPD 514B5,2


ONCEO  ZRO; CLX; BRS 168 DISABLE CONTROL SHIFT O'S
       BRS 71 (SKIP IF SYS OR EXEC STATUS SET); BRU VER1A
       CBA; SKE =6B7; BRU VER1A; SKR STASW (IF EXEC STATUS SET)
       BRU *-1; BRU VER1B
VER1A  LDP SFPTR; BRS 64 (OPEN PASSWORD FILE); BRU OPFER
       STA DFIL; CLA; SCP DFIL; HLT 0
VER1B LDA =20; CNA; CAX; CLA; STA OPNAM+20,2; BRX *-1
       TYPE VM1 (ENTER NAME)
       LDA VPTR1; STA VPTR1+1; LDA =VPTR1; LDB =CR; CLX; BRS 33
       SKN STASW; BRU *+2; BRU MAKMAP
       LDA VPTR1+1; SUB VPTR1; STA VT1
VER1   CIO DFIL; SKE =137B; BRU *+2; BRU NONAME
       SKE =CR; BRU VER1; CIT DFIL; BRU *+2; BRU NONAME
       LDA VPTR2; STA VPTR2+1; LDA =VPTR2; LDB =CR
       LDX DFIL; BRS 33; LDA VPTR2+1; SUB VPTR2
       SKG ZERO; BRU NONAME; SKE VT1; BRU VER1 (STRING LENGTH MATCHES)
       LDP VPTR2; SKSE VPTR1; BRU VER1; GCI VPTR1; HLT 0
       SKR VPTR1; NOP; STA VXT8; BRM FONO
       STA TEMP; ETR =377B; STA TDIST; LDA TEMP; SKA =40000B
       BRU *+2; BRU ERV3; SKA =1B7; BRU *+2; BRU ERV3; LDB =1; STB STASW
       SKA =4B6; BRU *+2; BRU *+3; LDA MONE; STA STASW FOR CUST SERV.
       BRM FONO; STA VT1; BRM FONO; STA VT2; LDA DFIL; BRS 20 (CLOSE FILE)
       LDX MONE; LDA THREE; BRS 12 (SET NO ECHO)
       TYPE VM2 (ENTER YOUR PASSWORD PLEASE)
SGPS   LDP TERMWD; STP VXT1; STP VXT3; STB VXT5
       CLA; STA TLV1; LDA VXT8; ADM VXT3
GPS    LDA =20; STA TLV11
GPS1   LDX TLV1; LDA VXT1,2; MUL =6065B
       DIV =37777761B; CBA; ADD VXT2,2; CAB; ETR =3
       STA TLV1; LDA VXT1,2; XAB; STP VXT1,2; LDA VXT5
       XMA VXT1; STA VXT5; SKR TLV11
       BRU GPS1; CIO ZERO; SKE =CR; BRU *+2; BRU *+3
       ADM VXT1; BRU GPS
       LDX MONE; LDA TWO; BRS 12 (RESET ECHO)
       LDA VXT1; ADD VXT2; SKE VT1; BRU NOPASS; LDA VXT3; ADD VXT4
       SKE VT2; BRU NOPASS
       BRU MAKMAP


FONO   ZRO; LDB =BOCTAL; LDX DFIL; BRS 38 (READ A NUMBER); BRR FONO

NOPASS TYPE VME5; LDX MONE; LDA THREE; BRS 12; BRU SGPS

NONAME TYPE VME6; LDX MONE; BRS 11; BRU VER1B-3

TERMWD DATA 27657537B,55555555B

SFPTR  DATA 3*SF-1,3*SF+6-1
SF     ASC '()PSWD'
VPTR2   DATA 3*BUF2-1,3*BUF2-1
BUF2   BSS 20
VT1    ZRO
VT2    ZRO
VXT1   ZRO
VXT2   ZRO
VXT3   ZRO
VXT4   ZRO
VXT5   ZRO
VXT8   ZRO
OPFER  TYPE VME3; BRS 10
ERV3   TYPE VME4; BRS 10
VME3   ASC '$PASSWORD FILE BUSY-TRY LATER$/'
VME4   ASC '$UNVALIDATED NAME/'
VM1    ASC '$ENTER YOUR NAME: /'
VM2    ASC 'PASSWORD: /'
VME5   ASC '$ERROR, TYPE PASSWORD: /'
VME6   ASC '$NAME DOES NOT APPEAR IN PASSWORD FILE$/'
TLV1   ZRO
TLV11  ZRO


MAKMAP LDA ZERO; STA ASYS
       LDP JOBPT; BRS 64; BRM TRAP; STA DFIL
       LDX =-13B; WIO DFIL; BRX *-1
MKM1   WIO DFIL; SKE MONE; BRU *+2; BRM TRAP; SKA =4B6; BRU MKM2; BRU MKM1
MKM2   ETR =77B; STA ASYS; LDA DFIL; BRS 20
MAKEND LDA     STASW
       SKE     =1
       BRR     ONCEO
       LDA     TDIST           SEE IF OPER OR ACCOUNTING
       SNE     =0              0 = OPER
       BRR     ONCEO           FLAGED AS OPER
       LDB     =4              POSSIBLE FLAG FOR ACCOUNTING
       SKE     =2              ACCT - OPER, DIST 2
       LDB     =0              FLAG AS NOBODY
       STB     STASW           SAVE FLAG
       BRR     ONCEO
JOBPT  DATA 3*JOBS-1,3*JOBS-1+8
JOBS   ASC '(PJ)JOBS'
MTEMP  ZRO

TRAP   ZRO
       TYPE    NOGOOD
       BRS     10

NOGOOD ASC '$(PJ)JOBS NOT FOUND OR ERROR WITHIN, CALL SOFTWARE SUPPORT$/'
VPTR1 DATA 3*OPNAM-1,3*OPNAM-1
OPNAM BSS 20
STASW ZRO 0 NEGATIVE IF EXEC LICENSE SET
TDIST ZRO 0 THIS USER'S DISTRICT
THISD ZRO 0 THIS USER'S FILE DIRECTORY NUMBER
DFIL   ZRO
TEMP   ZRO
ASYS   ZRO
BLNO   ZRO
ZERO   ZRO
ONE    DATA 1
TWO    DATA 2
THREE  DATA 3
FOUR   DATA 4
BOCTAL EQU 10B
SIZNAM EQU 12
CR     EQU 155B
MONE   DATA -1


       END
1TAPELIB ** FICHE/FRAME BREAK *****
TAPELIB SYMSORT

SYM.  PG.LN. IDENT.

ASYS   10 24 TAPLIB  BADUSR  7 31 TAPLIB  BAKDOR  4 31 TAPLIB  
BLNO   10 25 TAPLIB  BOCTAL 10 31 TAPLIB  BUF2    9 10 TAPLIB  CHECK   3 18 TAPLIB  
CIRZAP  7 32 TAPLIB  CLEAR   5 20 TAPLIB  COUNT   7 13 TAPLIB  CR     10 33 TAPLIB  
CRLFLG  7 27 TAPLIB  DFIL   10 22 TAPLIB  DIGIT1  4  8 TAPLIB  DIGIT2  4  4 TAPLIB  
DUMMY   7  5 TAPLIB  ERV3    9 20 TAPLIB  FILLER  7 17 TAPLIB  FILPTR  7 16 TAPLIB  
FONO    8 38 TAPLIB  FOUR   10 30 TAPLIB  GOAUX   7 23 TAPLIB  GORUN   2 33 TAPLIB  
GPS     8 25 TAPLIB  GPS1    8 26 TAPLIB  HEADR   7 30 TAPLIB  IPORT   7 28 TAPLIB  
JOBPT  10  8 TAPLIB  JOBS   10  9 TAPLIB  LEAVE   7  3 TAPLIB  LOGPTR  7 25 TAPLIB  
LOGSTR  7 26 TAPLIB  MAKEND  9 36 TAPLIB  MAKMAP  9 31 TAPLIB  MKM1    9 34 TAPLIB  
MKM2    9 35 TAPLIB  MONE   10 34 TAPLIB  MORNAM  5  2 TAPLIB  MTEMP  10 10 TAPLIB  
NAMPTR  7 33 TAPLIB  NOAUX   7 24 TAPLIB  NOCIR   7  8 TAPLIB  NOGOOD 10 16 TAPLIB  
NONAME  9  3 TAPLIB  NOPASS  9  1 TAPLIB  NOTUSR  7  6 TAPLIB  NXTCHR  3  2 TAPLIB  
ONCEO   7 38 TAPLIB  ONE    10 27 TAPLIB  OPFER   9 19 TAPLIB  OPNAM  10 18 TAPLIB  
OPORT   7 29 TAPLIB  OUTNAM  5  9 TAPLIB  PANIC   6 33 TAPLIB  PPN     7 12 TAPLIB  
RECAUX  6 16 TAPLIB  RECNOW  6 20 TAPLIB  RUNLBL  7 22 TAPLIB  RUNPTR  7 21 TAPLIB  
SF      9  8 TAPLIB  SFPTR   9  7 TAPLIB  SGPS    8 23 TAPLIB  SIZNAM 10 32 TAPLIB  
SNDAU1  5 39 TAPLIB  SNDAU2  6  7 TAPLIB  SNDAUX  5 35 TAPLIB  SPTR    7 35 TAPLIB  
START   1 16 TAPLIB  STASW  10 19 TAPLIB  STRPTR  7 14 TAPLIB  TAPLBL  7 11 TAPLIB  
TDIST  10 20 TAPLIB  TEMP   10 23 TAPLIB  TERMWD  9  5 TAPLIB  THISD  10 21 TAPLIB  
THREE  10 29 TAPLIB  TLV1    9 27 TAPLIB  TLV11   9 28 TAPLIB  TRAP   10 12 TAPLIB  
TWO    10 28 TAPLIB  TYPE    1  5 TAPLIB  VER1    8 10 TAPLIB  VER1A   8  3 TAPLIB  
VER1B   8  5 TAPLIB  VM1     9 23 TAPLIB  VM2     9 24 TAPLIB  VME3    9 21 TAPLIB  
VME4    9 22 TAPLIB  VME5    9 25 TAPLIB  VME6    9 26 TAPLIB  VPTR1  10 17 TAPLIB  
VPTR2   9  9 TAPLIB  VT1     9 11 TAPLIB  VT2     9 12 TAPLIB  VXT1    9 13 TAPLIB  
VXT2    9 14 TAPLIB  VXT3    9 15 TAPLIB  VXT4    9 16 TAPLIB  VXT5    9 17 TAPLIB  
VXT8    9 18 TAPLIB  ZERO   10 26 TAPLIB  
1TAPELIB ** FICHE/FRAME BREAK *****
TAPELIB/CMD/
NARP
TAPELIB
TAPELIB/SAV/


RES
XDDT
;TTAPELIB/SAV/
%F
SAVE 3,17777 ON 1TAPELIB

240
COM T
