FET ** FICHE/FRAME BREAK *****
FETCOM
       NOLIST  ALL
       LIST    LCT,SLCT,SRC,COM,CALL,DEF,EXT,GO
FETCOM IDENT   ***FET COMMANDS 5/2/72 JPS***
SKU    OPD     536B5,2
POPS   MACRO   D
D(1) OPD ($100B+CPOP).&*1B5,D(2)
CPOP EQU CPOP+1
 ENDM
CPOP   EQU     0
       POPS    TYPE,(2)
       POPS    CALL,(2)
       POPS    RET,(1)
       POPS    SET,(2)
       POPS    RESET,(2)
       POPS    SKSET,(2)
       POPS    SKUSET,(2)
       POPS    ERROR,(2)
       POPS    FERR,(2)
       POPS    TCI,(2)
       POPS    TCL,(2)
       POPS    TCO,(2)
       POPS    PUSH,(2)
       POPS    POP,(2)
       POPS    LDW,(2)
       POPS    LDINT,(2)
       POPS    LDFLT,(2)
       POPS    STINT,(2)
       POPS    STFLT,(2)
       POPS    ENABLE,(1)
       POPS    DISABL,(1)
$FIRTN LDX*    SEMIX
       SKN     FILES,2
       RET
       ERROR   NOFILE
NOFILE ASC     "NO FILE OPEN/"
$NARTN SKN     SECNT
       ERROR   NOARGS
       RET
NOARGS ASC     "NO ARGUMENTS ALLOWED/"
$CLRTN RESET   CLSE
       RET
$SCRTN LDA     COMM3
       ETR     =77B
       CAX
       LDA     COMM3
       SKA     FLOAT1
       BRU     SCRTN2          MAY FLOAT
       SKA     FLOAT2
       BRU     SCRTN3          MUST FLOAT
       LDINT   OPERND          MUST NOT FLOAT
SCRTN4 STINT   CELTYP,2
       RET
SCRTN2 LDW     OPERND
       BRU     SCRTN4
SCRTN5 STFLT   CELTYP,2
       RET
SCRTN3 LDFLT   OPERND
       BRU     SCRTN5
$ADRTN LDA*    DOT
       ADD     LSIZE
       BRU     *+3
$SBRTN LDA*    DOT
       SUB     LSIZE
       SKG     =-1
       ERROR   NEGADD
       CALL    GETIT
       SET     CLSE
       LDA     SIZE
       STA     SIZE
       RET
NEGADD ASC     "NEGATIVE ADDRESS/"
$CRRTN TCO     =155B
       RET
$PARTN LDA*    DOT
       LDX     =P9G
       CALL    PRINT1
       RET
$SARTN CLA
       STA     SECNT
       RET
$A2RTN LDA     COMCNT
       SKG     =0
       RET
       SKE     =1
       ERROR   A2RTNQ
       LDA     COMM2
       ETR     A2MSK1
       MRG     A2MSK2
       STA     COMM2
       LDINT   ARG2
       STINT   ARG2
       LDINT   ARG1
       STINT   ARG1
       SKG     ARG2
       BRU     *+2
       ERROR   RANGEQ
       CALL    SLMRTN
       TCO     =155B
       TCO     =155B
A2RET  SKR     CALPTR
       BRU     DIS2
A2RTNQ ASC     "MUST HAVE EITHER 0, 1 OR 2 ARGUMENTS/"
$CWRTN LDA     COMM3
       LRSH    12
       ETR     =3
       CAX
       BRU*    CWTAB1,2
CWTAB1 DATA    CW1,CW2,CW4
CW1    LSH     6
       ETR     =77B
       BRU     CW3
CW2    LDA     LMODE
CW3    SKU     =P3G
CW4    LDA     CMODE
       CAX
       LDA     CWTAB2,2
       SKG     =-1
       BRU     CW4
       STA     SIZE
       RET
CWTAB2 DATA    0,1,1,-1,2,1,1
$PCRTN LDA     COMM3
       LRSH    6
       ETR     =77B
       CAX
LMC    LDA     SIZE
       SKU     =0
       RET
       SKE     =2
       BRU     PC1
       LDA     FCELL
       LDB     FCELL+1
       CALL    PRINT2
       TYPE    SPACES
       RET
PC1    LDA     FCELL
       CALL    PRINT1
       TYPE    SPACES
       RET
$LMRTN LDX     LMODE
       BRU     LMC
$SCMRTN LDA    COMM3
       LRSH    6
       ETR     =77B
       STA     CMODE
       RET
$SLMRTN SKN    SECNT
       BRU     *+2
       RET
       LDA     COMM3
       LRSH    6
       ETR     =77B
       STA     LMODE
       SKU     =P3G
       LDA     CMODE
       CAX
       LDA     CWTAB2,2
       SKG     =0
       LDA     =1
       STA     LSIZE
       RET
$STRTN SKN     SECNT
       SKSET   CLSE
       RET
       LDX     SIZE
       BRU*    STTAB,2
STTAB  DATA    STRTN0,STRTN1,STRTN2
STRTN0 LDW     OPERND
       BRU     STRTN1+1
       BRU     STRTN2+1
STRTN1 LDINT   OPERND
       LDB*    DOT
       LDX     =1
       STX     LSIZE
       LDX*    SEMIX
       CALL    STORE
       RET
STRTN2 LDFLT   OPERND
       LDB*    DOT
       LDX     =2
       STX     LSIZE
       LDX*    SEMIX
       CALL    STORE
       LDFLT   OPERND
       LDA*    DOT
       ADD     =1
       XAB
       LDX*    SEMIX
       CALL    STORE
       RET
$EXRTN LDX     COMM1
       CALL    0,2
       TCO     =155B
       RET
$OPRTN SKN     SECNT
       RESET   CLSE
       LDA     COMCNT
       SKE     =1
       BRU     OPRTN2
       LDINT   ARG1
       BRU     OPRTN3
OPRTN2 LDINT   SEMIQ
       SKN     SAVCNT
       BRU     *+2
       CALL    FIXADD
OPRTN3 CALL    GETIT
       SKN     SECNT
       SET     CLSE
       RET
FIXADD LDB*    SEMIA
       SKB     =-1
       BRU     *+2
       RET
       ETR*    SEMIA
       SKB     =1
       RET
       LRSH    1
       BRU     *-3
GETIT  LDX*    SEMIX
       CAB
       LDA     SIZE
       SKG     =0
       BRU     GETIT2
       XAB
       SKG*    SEMIE
       BRU     *+2
       ERROR   EOFERR
       SKE*    SEMIE
       BRU     *+2
       ERROR   EOFERR
       XAB
GETIT2 STB*    DOT
       SKG     =0
       RET
       CALL    FETCH
       STA     FCELL
       LDA     SIZE
       SKE     =2
       RET
       LDA*    DOT
       ADD     =1
       CAB
       LDX*    SEMIX
       CALL    FETCH
       STA     FCELL+1
       RET
EOFERR ASC     "    ?/"
$RSRTN CALL    RESCAN
       RET
$PQRTN LDA     COMM3
       LRSH    6
       ETR     =77B
       CAX
       LDW     SEMIQ
       BRU     PQ1
       CALL    PRINT2
       TYPE    SPACES
       RET
PQ1    CALL    PRINT1
       TYPE    SPACES
       RET
$RPRTN TCO     =155B
       LDA     SIZE
       ADM*    ARG1
       LDA*    ARG1
       SKG*    ARG2
       BRU     A2RET
       RESET   CLSE
       TCO     =155B
       TCO     =155B
       RET
$SPRTN TYPE    SPACES
       RET
SPACES ASC     "    /"
$NIRTN ERROR   NIMP
$NIMP  ASC     "NOT IMPLEMENTED/"
$DSEMI LDA     =10
       STA*    SEMIR
       RET
$OSEMI LDA     =8
       STA*    SEMIR
       RET
$ESEMI LDX*    SEMIX
       LDA     FILES,2
       SKA     =2B7
       FERR    NOWRIT
       ETR     =7777B
       STA     TFILE
       CXA
       CALL    RELEAS
       LDINT   OPERND
       SKG     =-1
       ERROR   NEGEOF
       MUL     =3
       LSH     1
       SKA     =-1
       ERROR   BIGEOF
       LSH     22
       STA     CURSET
       MRG     =4B7
       SCP     TFILE
       ERROR   SETERR
       LDX*    SEMIX
       SKE     EOFTB1,2
       BRU     *+2
       RET
       DISABL
       SKG     EOFTB1,2
       BRU     SETE2
       CLA
       WIO     TFILE
SETE1  LDA     CURSET
       LDX*    SEMIX
       STA     EOFTB1,2
       STA     EOFTB2,2
       SET     CALEOF
       ENABLE
       RET
SETE2  RSP     TFILE
       PCE     TFILE
       ERROR   SETERR
       BRU     SETE1
$NOWRIT ASC     "FILE READ ONLY/"
NEGEOF ASC     "NEGATIVE EOF???/"
BIGEOF ASC     "EOF TOO LARGE/"
SETERR ASC     "ERROR SETTING EOF/"
$XSEMI LDINT   PERND
       SKG     =9
       SKG     =-1
       ERROR   BADFN
       CAX
       SKN     FILES,2
       BRU     *+2
       ERROR   NOTOPN
       SET     CALEOF
       STX*    SEMIX
       RET
BADFN  ASC     "FILE NUMBER MUST BE 0-9/"
NOTOPN ASC     "FILE NOT OPEN/"
$TSEMI LDINT   OPERND
       SKE     =6
       SKU     =8
       BRU     *+2
       ERROR   CHRERR
       STA*    SEMIT
       RET
CHRERR ASC     "CHAR SIZE MUST BE 6 OR 8/"
$RSEMI LDINT   OPERND
       SKG     =10
       SKG     =1
       ERROR   BADRAD
       STA*    SEMIR
       RET
BADRAD ASC     "RADIX MUST BE 2-10 DECIMAL/"
$ISEMI CALL    FREADY
       DISABL
       BRS     64
       FERR    BADFIL
       STA     TFILE
       MRG     =2B7
ISEMI2 SKR     AFCNT
       NOP
       LDX     FNDEX
       STX*    SEMIX
       STA     FILES,2
       RSP     TFILE
       LDX     FNDEX
       STA     EOFTB1,2
       STA     EOFTB2,2
       ADD     =2
       LRSH    23
       DIV     =3
       STA*    SEMIE
       SUB     =1
       STA*    SEMI2
       ENABLE
       RET
BADFIL ASC     "CANNOT OPEN FILE/"
$CSEMI CALL    FREADY
       MRG     =116B5
       LDX     =2
       DISABL
       BRS     65
       FERR    BADFIL
       STA     TFILE
       RSP     TFILE
       PCE     TFILE
       BRU     BADE
CSEMI2 LDA     =4
       STA     STRY
       LDA     =@6B7
       SSP     TFILE
       BRU     *+3
       LDA     TFILE
       BRU     ISEMI2
       SKR     STRY
       BRU     *-5
       LDA     TFILE
       BRS     20
       ENABLE
       FERR    ESIZE
BADE   LDA     TFILE
       BRS     20
       ENABLE
       FERR    ERASEQ
ERASEQ ASC     "ERROR ERASING CONTENTS/"
ESIZE  ASC     "CANNOT SET FILE SIZE/"
$USEMI CALL    FREADY
       STA     CSAVE1
       STB     CSAVE2
       DISABL
       BRS     64
       FERR    BADFIL
       BRS     20
       CBA
       ETR     =7
       CAX
       LDA     CSAVE1
       LDB     CSAVE2
       MRG     =116B5
       BRS     65
       FERR    BADFIL
       STA     TFILE
       BRU     CSEMI2
$QPER  CLA
       LDX     =-9
       CALL    CLOSE
       ADD     =1
       BRX     *-2
       BRS     10
       CLA
       LDB     =1
       BRU     FAKEIT
$SPER  SKN     SECNT
       BRU     SPER2
       FERR    ARGP
ARGP   ASC     "NEEDS ARGUMENT/"
SPER2  CALL    ROPC
       TCI     CHAR
       LDB     =PRT2
       SKE     =","
       BRU     SPER3
       TCI     CHAR
       SUB     =20B
       SKG     =3
       SKG     =-1
       ERROR   BADS1
       CAX
       LDB     SPTAB,2
       TCI     CHAR
SPER3  SKE     =155B
       SKU     =152B
       BRU     *+2
       ERROR   BADS1
       STB     TAG
       LDINT   OPERND
       STA     OPVAL
       LDA     NAM1
       LDB     NAM2
       CALL    HADD
       RET
SPTAB  DATA    PRT2,PRT1,PRT3,PRT0
$KPER  TCL     CHAR
       SKE     =155B
       SKU     =152B
       BRU     KPER2
       CALL    ROPC
       TCI     CHAR
       SKE     =155B
       SKU     =152B
       BRU     *+2
       FERR    BADS1
       LDA     NAM1
       LDB     NAM2
       CALL    HSRCH
       RET
       LDA     HTAB+2,2
       MRG     =KILLED
       STA     HTAB+2,2
       RET
KPER2  TCI     CHAR
       TYPE    OKQ
       TCI     CHAR
       SKE     ="Y"
       SKU     =155B
       BRU     *+2
       FERR    HUH
       DISABL
       LDA     =HTAB
       STA     TADDR
       LDA     =HTABL
       MUL     =HENTL
       LSH     23
       CNA
       COPY    AX,A
       STA*    TADDR
       MIN     TADDR
       BRX     *-2
       STA     OPW
       STA     FLW
       STA     HFILL
       ENABLE
       RET
OKQ    ASC     "OK? /"
HUH    ASC     "?/"
$IPER  CALL    RFNAME
       BRM*    CLSIN
       SKN     AFCNT
       BRU     *+2
       FERR    TOOM
       DISABL
       BRS     64
       FERR    BADFIL
       ETR     =7777B
       STA     TIN
       SKE     =0
       MIN     AFCNT
       ENABLE
       RET
$OPER  CALL    RFNAME
       BRM*    CLSOUT
       SKN     AFCNT
       BRU     *+2
       FERR    TOOM
       DISABL
       LDX     =3
       BRS     65
       FERR    BADFIL
       ETR     =7777B
       STA     TOUT
       SKE     =1
       MIN     AFCNT
       ENABLE
       RET
$SSEMI LDA     COMCNT
       SKE     =1
       FERR    ARGQ2
       LDA     =-1
       STA     TRUE
       STA     RTEST
       STA     DTEST
       LDA     =-2
       STA     STEST
       CLA
       STA     PTEST
       LDW     ARG2
       CLB
       STA     TCELL
       STB     TCELL+1
       LDW     ARG1
       MIN     STEST
       LDW     ARG2
       MIN     STEST
       LDW     ARG1
       MIN     DTEST
       STA     RCELL
       STB     RCELL+1
       BRU     SCON
ARGQ2  ASC     "NEEDS TWO ARGUMENTS/"
ARGQ   ASC     "NEEDS AN ARGUMENT/"
PEREQ  ASC     "SYSTEM ERROR: PERCENT E NOT FLOATING/"
RANGEQ ASC     "RANGE OUT OF ORDER/"
$WSEMI LDA     =-1
       BRU     *+2
$PDSEMI CLA
       STA     TRUE
       SKN     SECNT
       BRU     *+2
       FERR    ARGQ
       LDA     CMODE
       STA     LMODE
       CLA
       STA     RTEST
       LDA     =-1
       STA     PTEST
       STA     STEST
       LDW     OPERND
       MIN     STEST
       STA     TCELL
       STB     TCELL+1
       LDA     STEST
       STA     DTEST
SCON   LDW     PERE
       FERR    PEREQ
       SKA     =4B7
       BRS     21
       STA     TEP
       STB     TEP+1
       LDA*    SEMI1
       STA     TDOT
       SKG*    SEMI2
       BRU     *+2
       FERR    RANGEQ
       TCO     =155B
       TCO     =155B
TEST1  LDB     TDOT
       LDX*    SEMIX
       CALL    FETCH
       STA     FCELL
       SKN     DTEST
       BRU     TEST2
       LDA     TDOT
       ADD     =1
       CAB
       LDX*    SEMIX
       CALL    FETCH
       STA     FCELL+1
       CAB
       LDA     FCELL
       STE
       NOD     48
       SKE     =0
       LDE
       FSB     TCELL
       SKA     =4B7
       BRS     21
       FSB     TEP
       SKG     =0
       BRU     YES
       BRU     NO
TEST2  LDB*    SEMIM
       SKM     TCELL
       BRU     NO
YES    SKN     TRUE
       BRU     TEST3
AFF    LDA     TDOT
       STA*    DOT
       SKN     PTEST
       BRU     AFF3
       LDX     =P9G
       CALL    PRINT1
       TYPE    SPACES
       LDA     FCELL
       LDB     FCELL+1
       LDX     CMODE
       SKN     DTEST
       BRU     AFF2
       CALL    PRINT2
       BRU     *+2
AFF2   CALL    PRINT1
       TCO     =155B
AFF3   SKN     RTEST
       BRU     AFF4
       LDA     RCELL
       LDB     TDOT
       LDX*    SEMIX
       CALL    STORE
       SKN     STEST
       BRU     AFF4
       LDA     TDOT
       ADD     =1
       CAB
       LDA     RCELL+1
       LDX*    SEMIX
       CALL    STORE
AFF4   SKN     STEST
       BRU     TEST3
       MIN     TDOT
       BRU     TEST3
NO     SKN     TRUE
       BRU     AFF
TEST3  MIN     TDOT
       LDA     TDOT
       SKG*    SEMI2
       BRU     TEST1
PDONE  TCO     =155B
       TCO     =155B
       TYPE    DONEM
       RET
DONEM  ASC     "<DONE>$$/"
$ZSEMI SKN     COMCNT
       BRU     Z2
       TYPE    OKQ
       TCI     CHAR
       SKE     ="Y"
       SKU     =155B
       BRU     *+2
       ERROR   HUH
       SKE     =155B
       TCO     =155B
       LDA*    SEMIE
       SKG     =0
       BRU     PDONE
       SUB     =1
       STA     TOA
       CLA
       STA     FROMA
       BRU     Z3
Z2     LDA     COMCNT
       SKG     =1
       BRU     *+2
       FERR    ARGQ2
       CAX
       LDINT   ARG1
       STA     FROMA
       BRU     *+1,2
       BRU     *+2
       LDINT   ARG2
       STA     TOA
Z3     LDA     FROMA
       SKG     TOA
       BRU     *+2
       FERR    RANGEQ
       TCO     =155B
ZLOOP  COPY    AB,A
       LDX*    SEMIX
       CALL    STORE
       MIN     FROMA
       LDA     FROMA
       SKG     TOA
       BRU     ZLOOP
       BRU     PDONE
$MPER  CALL    MSETUP
       LDA     TOA
       SKG     FROMA
       BRU     MPER4
       BRU     MLPE1
MLP1   LDB     FROMA
       LDX     FROMF
       CALL    FETCH
       LDB     TOA
       LDX     TOF
       CALL    STORE
       MIN     FROMA
       MIN     TOA
MLPE1  SKR     COUNT
       BRU     MLP1
       BRU     PDONE
MPER4  LDA     COUNT
       ADM     FROMA
       ADM     TOA
       BRU     MLPE2
MLP2   LDB     FROMA
       LDX     FROMF
       CALL    FETCH
       LDB     TOA
       LDX     TOF
       CALL    STORE
MLPE2  SKR     FROMA
       SKR     TOA
       NOP
       SKR     COUNT
       BRU     MLP2
       BRU     PDONE
$CPER  SKN     SECNT
       BRU     CPER2
       CLA
       LDX     =-9
       CALL    CLOSE
       ADD     =1
       BRX     *-2
       RET
CPER2  LDINT   OPERND
       SKG     =9
       SKG     =-1
       FERR    BADFN
       CAX
       SKN     FILES,2
       BRU     *+2
       FERR    NOTOPN
       CALL    CLOSE
       RET
$FSEMI SKN     SECNT
       BRU     FSEMI2
       CLA
       LDX     =-9
       CALL    FLUSH
       ADD     =1
       BRX     *-2
       RET
FSEMI2 LDINT   OPERND
       SKG     =9
       SKG     =-1
       FERR    BADFN
       CAX
       SKN     FILES,2
       BRU     *+2
       FERR    NOTOPN
       CALL    FLUSH
       RET
$LPER  SKN     AFCNT
       BRU     *+2
       FERR    TOOM
       CALL    RFNAME
       DISABL
       BRS     64
       FERR    BADFIL
       STA     TFILE
       STA     SYMF
       ENABLE
       WIO     TFILE
       STA     COUNT
       BRU     LPERE
LPER2  WIO     TFILE
       STA     NAM1
       WIO     TFILE
       STA     NAM2
       ETR     =7777B
       STA     TAG
       WIO     TFILE
       STA     OPVAL
       LDA     NAM1
       LDB     NAM2
       CALL    HADD
LPERE  SKN     TFILE
       BRU     *+2
       FERR    RERR
       SKR     COUNT
       BRU     LPER2
       DISABL
       LDA     TFILE
       BRS     20
       RESET   SYMF
       ENABLE
       RET
RERR   ASC     "READ ERROR/"
$YPER  SKN     AFCNT
       BRU     *+2
       FERR    TOOM
       CALL    RFNAME
       MRG     =116B5
       LDX     =2
       DISABL
       BRS     65
       FERR    BADFIL
       STA     TFILE
       SET     SYMF
       ENABLE
       RSP     TFILE
       PCE     TFILE
       FERR    ERASEQ
       CLA
       STA     COUNT
       WIO     TFILE
       LDA     OPW
       CALL    DOWN
       LDA     FLW
       CALL    DOWN
       LDA     =4B7
       SCP     TFILE
       FERR    CLERR1
       LDA     COUNT
       WIO     TFILE
       RSP     TFILE
       ETR     =@4B7
       SCP     TFILE
       FERR    CLERR1
$CLSYM DISABL
       LDA     TFILE
       BRS     20
       RESET   SYMF
       ENABLE
       RET
$NPER  CALL    MSETUP
       LDA     CMODE
       STA     LMODE
       BRU     NLPE
NLP1   LDB     FROMA
       LDX     FROMF
       CALL    FETCH
       STA     FCELL
       LDB     TOA
       LDX     TOF
       CALL    FETCH
       SKE     FCELL
       BRU     NPER2
NLPE2  MIN     FROMA
       MIN     TOA
NLPE   SKR     COUNT
       BRU     NLP1
       BRU     PDONE
NPER2     FCELL+1
       LDA     FROMA
       LDX     =P9G
       CALL    PRINT1
       TYPE    SPACES
       LDA     FCELL
       LDX     CMODE
       CALL    PRINT1
       TYPE    SPACES
       LDA     TOA
       LDX     =P9G
       CALL    PRINT1
       TYPE    SPACES
       LDA     FCELL+1
       LDX     CMODE
       CALL    PRINT1
       TCO     =155B
       BRU     NLPE2
       END
FET ** FICHE/FRAME BREAK *****
FETCOM SYMSORT

SYM.  PG.LN. IDENT.

A2RET   3 22         A2RTN   3  3         A2RTNQ  3 24         
ADRTN   2 20         AFF    17  2         AFF2   17 16         AFF3   17 18         
AFF4   17 32         ARGP   12  8         ARGQ   15 14         ARGQ2  15 13         
BADE   11 12         BADFIL 10 27         BADFN   9 26         BADRAD 10  3         
BIGEOF  9 13         CHRERR  9 35         CLRTN   2  1         CLSYM  22 29         
CPER   20  4         CPER2  20 12         CPOP    1  9         CPOP    1  7         
CRRTN   2 33         CSEMI  10 28         CSEMI2 10 38         CW1     3 31         
CW2     3 34         CW3     3 35         CW4     3 36         CWRTN   3 25         
CWTAB1  3 30         CWTAB2  4  4         D(1)    1  6         DONEM  18  7         
DSEMI   8  4         EOFERR  7 13         ERASEQ 11 16         ESEMI   8 10         
ESIZE  11 17         EXRTN   5 35         FETCOM  1  3         FIRTN   1 31         
FIXADD  6 15         FSEMI  20 22         FSEMI2 20 30         GETIT   6 24         
GETIT2  6 37         HUH    13 37         IPER   13 38         ISEMI  10  4         
ISEMI2 10 10         KPER   12 34         KPER2  13 13         LMC     4  9         
LMRTN   4 23         LPER   21  1         LPER2  21 14         LPERE  21 25         
MLP1   19 16         MLP2   19 31         MLPE1  19 24         MLPE2  19 37         
MPER   19 11         MPER4  19 27         NARTN   1 36         NEGADD  2 32         
NEGEOF  9 12         NIMP    8  3         NIRTN   8  2         NLP1   22 39         
NLPE   23 11         NLPE2  23  9         NO     17 36         NOARGS  1 39         
NOFILE  1 35         NOTOPN  9 27         NOWRIT  9 11         NPER   22 35         
NPER2  23 14         OKQ    13 36         OPER   14 13         OPRTN   5 39         
OPRTN2  6  7         OPRTN3  6 11         OSEMI   8  7         PARTN   2 35         
PC1     4 19         PCRTN   4  5         PDONE  18  3         PDSEMI 15 19         
PEREQ  15 15         POPS    1  5         PQ1     7 25         PQRTN   7 16         
QPER   11 35         RANGEQ 15 16         RERR   21 36         RPRTN   7 28         
RSEMI   9 36         RSRTN   7 14         SARTN   2 39         SBRTN   2 23         
SCMRTN  4 25         SCON   15 37         SCRTN   2  3         SCRTN2  2 14         
SCRTN3  2 18         SCRTN4  2 12         SCRTN5  2 16         SETE1   8 39         
SETE2   9  7         SETERR  9 14         SKU     1  4         SLMRTN  4 30         
SPACES  8  1         SPER   12  5         SPER2  12  9         SPER3  12 22         
SPRTN   7 38         SPTAB  12 33         SSEMI  14 28         STRTN   5  6         
STRTN0  5 12         STRTN1  5 15         STRTN2  5 22         STTAB   5 11         
TEST1  16 11         TEST2  16 36         TEST3  17 38         TSEMI   9 28         
USEMI  11 18         WSEMI  15 17         XSEMI   9 15         YES    16 39         
YPER   21 37         Z2     18 26         Z3     18 37         ZLOOP  19  3         
ZSEMI  18  8         
FET ** FICHE/FRAME BREAK *****
FETDIS
       NOLIST  ALL
       LIST    LCT,SLCT,SRC,COM,CALL,DEF,EXT,GO
FETDIS IDENT   ***FET DISPATCHER 10/3/74 TKB***
SKU    OPD     536B5,2
POPS   MACRO   D
D(1) OPD ($100B+CPOP).&*1B5,D(2)
CPOP EQU CPOP+1
 ENDM
CPOP   EQU     0
       POPS    TYPE,(2)
       POPS    CALL,(2)
       POPS    RET,(1)
       POPS    SET,(2)
       POPS    RESET,(2)
       POPS    SKSET,(2)
       POPS    SKUSET,(2)
       POPS    ERROR,(2)
       POPS    FERR,(2)
       POPS    TCI,(2)
       POPS    TCL,(2)
       POPS    TCO,(2)
       POPS    PUSH,(2)
       POPS    POP,(2)
       POPS    LDW,(2)
       POPS    LDINT,(2)
       POPS    LDFLT,(2)
       POPS    STINT,(2)
       POPS    STFLT,(2)
       POPS    ENABLE,(1)
       POPS    DISABL,(1)
FILL   MACRO   D
X      EQU     *-PZERO
Y      EQU     D(1)-X
       IF      Y<0
       REM     FILL OVERFLOW
       NOW LET US FORCE AN ERROR!!!!!
       ELSF    Y>0
       BSS     Y
       ENDF
       ENDM
DEF    OPD     0,1
PZERO  DEF     POP XFER WORD
$CHRFLG DEF    TCI/TCL FLAG
$ESCNT DEF     ENABLE/DISABLE COUNT FOR ESCAPES
$FLAGS DEF     FLAG WORD FOR FLAG POPS
$OCHAR DEF     OLD CHAR FOR TCI/TCL
$SCHAR DEF     SAVE CHAR FOR TCI/TCL (TEMP CELL)
$SS01  DEF     FOR SAVING 'A' IN POPS
$SS02  DEF     FOR SAVING 'B' IN POPS
$SS03  DEF     FOR SAVING 'X' IN POPS
$TIN   DEF     TELETYPE INPUT FILE NUMBER
$TOUT  DEF     TELETYPE OUTPUT FILE NUMBER
$CHAR  DEF     LAST CHAR READ IN WITH TCI/TCL
$COMCNT DEF    COUNT OF ARGUMENTS READ IN IN RESCAN
$COMM1 DEF     FIRST COMMAND WORD RETURNED BY SCAN
$COMM2 DEF     SECOND COMMAND WORD RETURNED BY SCAN
$COMM3 DEF     THIRD COMMAND WORD RETURNED BY SCAN
$WRSAV1 DEF    USED BY DISK ROUTINES. TEMP CELL
$WRSAV2 DEF    USED BY DISK ROUTINES. TEMP CELL
$FLSAV2 DEF    USED BY DISK ROUTINES. TEMP CELL
$FLSAV3 DEF    USED BY DISK ROUTINES. TEMP CELL
$CLSAV2 DEF    USED BY DISK ROUTINES. TEMP CELL
$CLSAV3 DEF    USED BY DISK ROUTINES. TEMP CELL
$BLCK2 DEF     USED BY DISK ROUTINES. TEMP CELL
$BADDR2 DEF    USED BY DISK ROUTINES. TEMP CELL
$TD    DEF     USED BY DISK ROUTINES. TEMP CELL
$CURSE2 DEF    USED BY DISK ROUTINES. TEMP CELL
$LEN   DEF     USED BY DISK ROUTINES. TEMP CELL
$TFILE2 DEF    USED BY DISK ROUTINES. TEMP CELL
$BNDEX2 DEF    USED BY DISK ROUTINES. TEMP CELL
$AFCNT DEF     NUMBER OF FILES AVAILABLE MINUS ONE.
$STRY  DEF     RETRY COUNT FOR SETTING SIZE PARAMETERS
$CURSE DEF     USED BY DISK ROUTINES. TEMP CELL
$SAVDAT DEF    USED BY DISK ROUTINES. TEMP CELL
$WORD  DEF     USED BY DISK ROUTINES. TEMP CELL
$BPTR  DEF     USED BY DISK ROUTINES. TEMP CELL
$BNDEX DEF     USED BY DISK ROUTINES. INDEX TO BUFFER TABLES
$FNDEX DEF     USED BY DISK ROUTINES. INDEX TO FILE TABLES
$TFILE DEF     USED BY DISK ROUTINES. TRUE FILE NUMBER
$BADDR DEF     USED BY DISK ROUTINES. CORE ADDRESS OF BUFFER
$CURSOR DEF    USED BY DISK ROUTINES. CHAR ADDRESS OF BLOCK
$BLOCK DEF     USED BY DISK ROUTINES. BLOCK ADDRESS OF BLOCK
$OFFSET DEF    USED BY DISK ROUTINES. POSITION OF WORD IN BLOCK
$CLEAN DEF     USED BY DISK ROUTINES. INDEX TO A CLEAN BUFFER
$FREE  DEF     USED BY DISK ROUTINES. INDEX TO A FREE BUFFER
$DIRTY DEF     USED BY DISK ROUTINES. INDEX TO A DIRTY BUFFER
$SIZE  DEF     NUMBER OF WORDS TO FETCH. CALCULATED BY "CWRTN".
$WORDA DEF     USED BY DISK ROUTINES. TEMP CELL.
$CTEMP DEF     TEMP CELL
$INDFLG DEF    INDIRECT FLAG ("*")
$NPTR  BSS     2 STRING POINTERS FOR READING NUMBERS
$OPERND DEF    OPERAND WORD FOR SCAN/RESCAN
$OPERTR DEF    OPERATOR WORD FOR SCAN/RESCAN
SAVEB  DEF     TEMP CELL FOR DISPATCHER LOOP
SAVEX  DEF     TEMP CELL FOR DISPATCHER LOOP
$SAVCNT DEF    FOR SAVING "SECNT" AS ARGUMENT INDICATOR..
$SECNT DEF     HALF/FULL SECTION INDICATOR FOR SCAN/RESCAN
$TNUM  DEF     NUMBER ACCUMULATOR FOR READING NUMBERS
$CMODE DEF     CURRENT PRINT MODE
$LMODE DEF     LAST PRINT MODE
$TRAD  DEF     TEMP CELL FOR RADIX WHEN READING NUMBERS
$TOP   BSS     2 'RIGHT OPERAND FOR COMPILER ROUTINES
       FILL    100B            MAKE SURE WE ARENT INTO POP VECTOR
       FILL    212B            MAKE ROOM FOR POPS AND TRAPS
$CELTYP BSS    25              POINTERS TO CELLS. ***DO NOT MOVE***
$CELLS BSS     25              ACTUAL CELLS
$RET1  BSS     2 FUNNY SUBROUTINE CALL WORDS
$RET2  BSS     2
$RET3  BSS     2
$RET4  BSS     2
$CSAVE1 DEF    USED BY COMMAND FILE CLOSE ROUTINES. TEMP CELL.
$CSAVE2 DEF    USED BY COMMAND FILE CLOSE ROUTINES. TEMP CELL.
$CSAVE3 DEF    USED BY COMMAND FILE CLOSE ROUTINES. TEMP CELL.
$CURSET DEF    USED BY SET EOF ROUTINES. TEMP CELL.
$TMASK DEF     TEMP CELL. USED BY STRING ROUTINES.
$XCHAR DEF     TEMP CELL. USED BY STRING ROUTINES.
$HPTR  DEF     TEMP CELL. USED BY SYMBOL TABLE ROUTINES
$HSAVE DEF     TEMP CELL. USED BY SYMBOL TABLE ROUTINES
$HFILL DEF     NUMBER OF SLOTS IN USE IN SYMBOL TABLE.
$FLW   DEF     POINTER TO FULL WORD OPCODE TREE.
$OPW   DEF     POINTER TO OPCODE ONLY OPCODE TREE.
$HSTEP DEF     TEMP CELL. USED BY SYMBOL TABLE ROUTINES.
$NAM1  DEF     TEMP CELL. USED BY SYMBOL TABLE ROUTINES.
$NAM2  DEF     TEMP CELL. USED BY SYMBOL TABLE ROUTINES.
$OPVAL DEF     TEMP CELL USED BY SYMBOL TABLE ROUTINES
$TAG   DEF     TEMP CELL USED BY SYMBOL TABLE ROUTINES
$SYMX  DEF     TEMP CELL USED BY SYMBOL TABLE ROUTINES
$SAVEX2 DEF    TEMP CELL. USED BY PRINT ROUTINES.
$TADDR DEF     TEMP CELL. USED BY PRINT ROUTINES.
$TINST DEF     TEMP CELL. USED BY PRINT ROUTINES.
$LSIZE DEF     WORD SIZE OF LAST PRINT MODE.
$SAVQ  BSS     2 PRINT ROUTINE STORES VALUE TO BE PRINTED.
$FCELL BSS     2 STORE FETCHED CELL HERE...
$TRUE  DEF     TRUE/FALSE SWITCH FOR SEARCHES
$RESTK DEF     RESCAN QUEUE POINTER
$FROMF DEF     "FROM FILE", FOR MOVE COMMAND
$FROMA DEF     "FROM ADDRESS", FOR MOVE AND ZERO COMMAND
$TOF   DEF     "TO FILE", FOR MOVE COMMAND
$TOA   DEF     "TO ADDRESS", FOR MOVE AND ZERO COMMAND
$COUNT DEF     "COUNT OF WORDS", FOR MOVE COMMAND
$DTEST DEF     DOUBLE FETCH SWITCH FOR SEARCHES
$PTEST DEF     PRINT SWITCH FOR SEARCHES
$RTEST DEF     REPLACE SWITCH FOR SEARCHES
$STEST DEF     DOUBLE SKIP SWITCH FOR SEARCHES
$RCELL BSS     2 REPLACEMENT CELL FOR SEARCHES
$TDOT  DEF     CURRENT SEARCH LOCATION
$TEP   BSS     2 ABSOLUTE VALUE OF PERCENT E FOR SEARCHES
$TCELL BSS     2 TEST WORD FOR SEARCHES
$NBUFF BSS     50              STRING BUFFER FOR READING NUMBERS
STACK  MACRO   D
$D(1).&STL EQU D(2)
$D(1).&STK BSS D(2)+2
 ENDM
       STACK   AE,30
       STACK   OP,50
       STACK   SAV,50
       STACK   TMP,100
       STACK   COM,10
$ARG1  EQU     COMSTK+2
$ARG2  EQU     COMSTK+3
$ARG3  EQU     COMSTK+4
$ARG4  EQU     COMSTK+5
$ARG5  EQU     COMSTK+6
$CALPTR ZRO
CALSTK BSS     100
NUMFIL EQU     9
$FILES BSS     NUMFIL
$EOFTB1 BSS    NUMFIL
$EOFTB2 BSS    NUMFIL
$HTAB  EQU     20000B
CODEST EQU     30000B
NW     EQU     *-PZERO
NW     EQU     HTAB-NW
NUMBUF EQU     [NW-3]/258
$BTAB1 BSS     NUMBUF
$BTAB1E EQU    *
$BTAB2 BSS     NUMBUF
$BTAB2E EQU    *
BUFFST EQU     *-PZERO
BUFFST EQU     [[BUFFST+255]/256]*256
$HENTL EQU     4
$HTABL EQU     [CODEST-HTAB]/HENTL
$HFULL EQU     [HTABL*85]/100
FLAG   MACRO   D
       IF      FLGNUM>24
       REM     TOO MANY FLAGS
       NOW LET US FORCE AN ERROR!!!!!
       ELSE
$D(1)  EQU     FLGNUM
FLGNUM EQU     FLGNUM+1
       ENDF
       ENDM
FLGNUM EQU     1
*
*
*      FLAG DEFINITIONS FOR FLAG POPS
*
*
       FLAG    SCANF           SCAN/RESCAN FLAG
       FLAG    G1FLAG          CELL=CELL/COMMAND FLAG
       FLAG    CLSE            CELL OPEN/CLOSED FLAG
       FLAG    CALEOF          FLAG TO FORCE RECALCULATION OF EOF
       FLAG    SYMF            FLAG TO INDICATE SYMBOL FILE IS OPENED.
*      HERE PUT VALUES AND POINTERS TO PLACES TO STORE THEM
*      AT START UP
       FILL    CODEST
$MNBUFF DATA   -NUMBUF
$TRPMSK DATA   2B6
STAB   DATA    8; ZRO* SEMIR
       DATA    1; ZRO LSIZE
       NOP     ESCR; ZRO 201B
       DATA    2; ZRO CMODE
       DATA    2; ZRO LMODE
       DATA    8; ZRO* SEMIT
       DATA    37777B; ZRO* SEMIA
       DATA    -1; ZRO* SEMIM
STABL  DATA    STAB-*
RTAB1  BRR* RET1; BRR* RET2; BRR* RET3
       BRR*    RET4
RTAB1E DATA    RET1+1,RET2+1,RET3+1,RET4+1
RTABL  DATA    RTAB1E-*
DSTART CLA; LDB =1
START  BRU     GO
$FAKEIT BRU    RESTRT
GO     STA     TIN
       STB     TOUT
       LDA     SOPW
       STA     OPW
       LDA     SFLW
       STA     FLW
       LDA     SHFILL
       STA     HFILL
       LDA     TIN
       LDB     TOUT
       EAX     *+2
       BRU     INIT
       TYPE    VER
       BRU     DIS
VER    ASC     "VERSION 1:02$$/"
CONM   ASC     "FET$$/"
RESTRT EAX     *+2
       BRU     INIT
       TYPE    CONM
       BRU     DIS
$INIT  STX     TRAD
       STA     TIN
       STB     TOUT
       BRS     147
       LDA     =3
       STA     AFCNT
       LDA     TIN
       SKE     =0
       SKR     AFCNT
       LDA     TOUT
       SKE     =1
       SKR     AFCNT
       LDX     RTABL
       LDA     RTAB1E,2
       STA*    RTABL,2
       BRX     *-2
       BRM*    PINIT
       LDA     =CELTYP
       STA     CTEMP
       LDX     NUMC
       LDA     NUMC,2
       STA*    CTEMP
       MIN     CTEMP
       BRX     *-3
       LDA     =CALPTR
       STA     CALPTR
       LDA     =TMPSTK+1
       STA     TMPSTK
       LDA     =TMPSTL
       STA     TMPSTK+1
       LDX     STABL
       LDA     STABL,2
       STA*    STABL+1,2
       EAX     1,2
       BRX     *-3
       LDX     MNBUFF
       LDA     =BUFFST
       CLB
       STB     BTAB1E,2
       STA     BTAB2E,2
       ADD     =256
       BRX     *-3
       LDX     =-9
       LDA     =-1
       STA     FILES+9,2
       BRX     *-1
       LDX     =-1
       CLA
       BRS     12
       LDX     =-1
*      BRS     168
       LDA     TRPMSK
       BRS     78
       LDX     TRAD
       BRU     0,2
$DIS   LDA     =CALPTR
       STA     CALPTR
       LDA     =TMPSTK+1
       STA     TMPSTK
       LDA     =TMPSTL
       STA     TMPSTK+1
       LDA     =-1
       STA     ESCNT
       ENABLE
       SKUSET  SYMF
       CALL    CLSYM
       SKSET   CALEOF
       BRU     DISC
       LDX*    SEMIX
       SKN     FILES,2
       BRU     *+2
       BRU     DISC
       LDA     EOFTB2,2
       LRSH    23
       DIV     =3
       STA*    SEMIE
       RESET   CALEOF
DISC   LDX     MNBUFF
       BRU     *+2
SNL    CALL    WRITE1
       STX     SAVEX
       LDX     =-1
       BRS     13
       BRU     *+3
       LDX     SAVEX
       BRX     SNL
       CALL    SCAN
       LDA     SECNT
       STA     SAVCNT
       SKG     =-1
       BRU     DIS2
       LDW     OPERND
       BRU     *+3
       STFLT   SEMIQ
       BRU     *+2
       STINT   SEMIQ
$DIS2  LDB     COMM2
       LDX     BTTABL
DIS3   SKB     =1
       BRU     *+2
       BRU     DIS4
       STB     SAVEB
       STX     SAVEX
       CALL*   BTTABL,2
       LDB     SAVEB
       LDX     SAVEX
DIS4   LRSH    1
       BRX     DIS3
       BRU     DIS
       END
FET ** FICHE/FRAME BREAK *****
FETDIS SYMSORT

SYM.  PG.LN. IDENT.

AFCNT   2 32         ARG1    5  3         ARG2    5  4         
ARG3    5  5         ARG4    5  6         ARG5    5  7         BADDR   3  2         
BADDR2  2 26         BLCK2   2 25         BLOCK   3  4         BNDEX   2 38         
BNDEX2  2 31         BPTR    2 37         BTAB1   5 19         BTAB1E  5 20         
BTAB2   5 21         BTAB2E  5 22         BUFFST  5 24         BUFFST  5 23         
CALPTR  5  8         CALSTK  5  9         CELLS   3 28         CELTYP  3 27         
CHAR    2 14         CHRFLG  2  4         CLEAN   3  6         CLSAV2  2 23         
CLSAV3  2 24         CMODE   3 21         CODEST  5 15         COMCNT  2 15         
COMM1   2 16         COMM2   2 17         COMM3   2 18         CONM    7  6         
COUNT   4 23         CPOP    1  9         CPOP    1  7         CSAVE1  3 33         
CSAVE2  3 34         CSAVE3  3 35         CTEMP   3 11         CURSE   2 34         
CURSE2  2 28         CURSET  3 36         CURSOR  3  3         D(1)    5 33         
D(1)    1  6         DEF     2  2         DIRTY   3  8         DIS     8 27         
DIS2    9 29         DIS3    9 31         DIS4    9 39         DISC    9 10         
DSTART  6 27         DTEST   4 24         EOFTB1  5 12         EOFTB2  5 13         
ESCNT   2  5         FAKEIT  6 29         FCELL   4 16         FETDIS  1  3         
FILES   5 11         FILL    1 31         FLAG    5 28         FLAGS   2  6         
FLGNUM  5 37         FLGNUM  5 34         FLSAV2  2 21         FLSAV3  2 22         
FLW     4  3         FNDEX   2 39         FREE    3  7         FROMA   4 20         
FROMF   4 19         GO      6 30         HENTL   5 25         HFILL   4  2         
HFULL   5 27         HPTR    3 39         HSAVE   4  1         HSTEP   4  5         
HTAB    5 14         HTABL   5 26         INDFLG  3 12         INIT    7 11         
L(1).&  4 34         LEN     2 29         LMODE   3 22         LSIZE   4 14         
MNBUFF  6 12         NAM1    4  6         NAM2    4  7         NBUFF   4 32         
NPTR    3 13         NUMBUF  5 18         NUMFIL  5 10         NW      5 17         
NW      5 16         O(1).&  4 35         OCHAR   2  7         OFFSET  3  5         
OPERND  3 14         OPERTR  3 15         OPVAL   4  8         OPW     4  4         
POPS    1  5         PTEST   4 25         PZERO   2  3         RCELL   4 28         
RESTK   4 18         RESTRT  7  7         RET1    3 29         RET2    3 30         
RET3    3 31         RET4    3 32         RTAB1   6 23         RTAB1E  6 25         
RTABL   6 26         RTEST   4 26         SAVCNT  3 18         SAVDAT  2 35         
SAVEB   3 16         SAVEX   3 17         SAVEX2  4 11         SAVQ    4 15         
SCHAR   2  8         SECNT   3 19         SIZE    3  9         SKU     1  4         
SNL     9 12         SS01    2  9         SS02    2 10         SS03    2 11         
STAB    6 14         STABL   6 22         STACK   4 33         START   6 28         
STEST   4 27         STRY    2 33         SYMX    4 10         TADDR   4 12         
TAG     4  9         TCELL   4 31         TD      2 27         TDOT    4 29         
TEP     4 30         TFILE   3  1         TFILE2  2 30         TIN     2 12         
TINST   4 13         TMASK   3 37         TNUM    3 20         TOA     4 22         
TOF     4 21         TOP     3 24         TOUT    2 13         TRAD    3 23         
TRPMSK  6 13         TRUE    4 17         VER     7  5         WORD    2 36         
WORDA   3 10         WRSAV1  2 19         WRSAV2  2 20         X       1 32         
XCHAR   3 38         Y       1 33         
FET ** FICHE/FRAME BREAK *****
FETPOPS
       NOLIST  ALL
       LIST    LCT,SLCT,SRC,COM,CALL,DEF,EXT,GO
POPS   IDENT   *** FET POPS 4/27/72 JPS ***
POPS   MACRO   D
D(1) OPD ($100B+CPOP).&*1B5,D(2)
CPOP EQU CPOP+1
POP.&($CPOP-1) EQU *
 ENDM
SKU    OPD     536B5,2
CPOP   EQU     0
*
*      TYPE    POP
*
       POPS    TYPE,(2)
       STA     SS01
       STB     SS02
       STX     SS03
       EAX*    0
       CXA
       ETR     =37777B
       LDB     =-1
       LDX     TOUT
       BRS     34
       LDA     SS01
       LDB     SS02
       LDX     SS03
       BRR     0
*
*      CALL    POP
*
       POPS    CALL,(2)
       MIN     CALPTR
       XMA     0
       STA*    CALPTR
       XMA     0
       BRU*    0
*
*      RET     POP
*
       POPS    RET,(1)
       STA     0
       LDA*    CALPTR
       XMA     0
       SKR     CALPTR
       BRR     0
       BRR     0
*
*      SET     POP
*
       POPS    SET,(2)
       STA     SS01
       STB     SS02
       LDB     FLAGS
       LSH*    0
       MRG     =1
       LRSH*   0
       STB     FLAGS
       LDA     SS01
       LDB     SS02
       BRR     0
*
*      RESET   POP
*
       POPS    RESET,(2)
       STA     SS01
       STB     SS02
       LDB     FLAGS
       LSH*    0
       ETR     =@1
       LRSH*   0
       STB     FLAGS
       LDA     SS01
       LDB     SS02
       BRR     0
*
*      SKSET   POP
*
       POPS    SKSET,(2)
       STA     SS01
       STB     SS02
       LDB     FLAGS
       LSH*    0
       SKA     =1
       MIN     0
       LDA     SS01
       LDB     SS02
       BRR     0
*
*      SKUSET  POP
*
       POPS    SKUSET,(2)
       STA     SS01
       STB     SS02
       LDB     FLAGS
       LSH*    0
       SKA     =1
       BRU     *+2
       MIN     0
       LDA     SS01
       LDB     SS02
       BRR     0
*
*      ERROR   POP
*
       POPS    ERROR,(2)
       BRM*    ERR
       TYPE    SPACES
       BRU     DIS
SPACES ASC     "    /"
ERR    NOP     RET1
       CLA
       STA     CHRFLG
       CIO     TOUT
       EAX*    0
       TYPE    0,2
       LDA     TOUT
       BRM*    CLSIN
       BRM*    CLSOUT
       SKE     =1
       TYPE    0,2
       LDA     =120000
       LDX     =-1
       BRS     164
       LDX     =-1
       BRS     11
       BRR     RET1
*
*      FERR    POP   (FATAL ERROR)
*
       POPS    FERR,(2)
       BRM*    ERR
       RESET   CLSE
       TCO     =155B
       BRU     DIS
*
*      TCI POP
*
       POPS    TCI,(2)
       SKN     CHRFLG
       BRU     TCIP2
       MIN     CHRFLG
       LDA     OCHAR
       BRR     0
TCIP2  BRM*    TCI1
       SKE     =";"
       BRU     TCIP3
       BRM*    TCI1
       ADD     =SEM
       BRU     TCIP4
TCIP3  SKE     ="%"
       BRU     TCIP4
       BRM*    TCI1
       ADD     =PER
TCIP4  STA     OCHAR
       STA*    0
       BRR     0
TCI1   NOP     RET1
       BRM*    GETCHR
       SKE     ="?"
       BRU     *+2
       ERROR   ="/  "
       SKG     =132B
       SKG     =100B
       BRU     TCI2
       SUB     =40B
       BRR     RET1
TCI2   SKG     =172B
       SKG     =140B
       BRR     RET1
       SKE     =155B
       SKU     =152B
       BRR     RET1
       SKU     =147B
       BRU     TCI3
       STA     SCHAR
       LDA     =";"
       CIO     TOUT
       LDA     SCHAR
       SUB     =100B
       CIO     TOUT
       ADD     =SEM
       BRR     RET1
TCI3   SUB     =100B
       ADD     =SEM
       BRR     RET1
$GETCHR NOP    RET2
       CIO     TIN
       SKN     TIN
       BRU     GET2
       BRM*    CLSIN
       BRU     GETCHR+1
GET2   STA     SCHAR
       LDA     TIN
       ETR     =77B
       SKE     =0
       BRU     GET3
       LDA     TOUT
       ETR     =77B
       SKE     =1
       BRU     GET3
       LDA     SCHAR
       BRR     RET2
GET3   LDA     SCHAR
       CIO     TOUT
       BRR     RET2
*
*      TCL     POP
*
       POPS    TCL,(2)
       SKN     CHRFLG
       BRU     *+4
       LDA     OCHAR
       STA*    0
       BRR     0
       SKR     CHRFLG
       BRU     *-1
       BRU     TCIP2
*
*      TCO     POP
*
       POPS    TCO,(2)
       STA     SS01
       LDA*    0
       CIO     TOUT
       LDA     SS01
       BRR     0
*
*      PUSH    POP
*
       POPS    PUSH,(2)
       STA     SS01
       STX     SS03
       EAX*    0
       LDA     1,2
       SUB     =1
       SKA     =4000B
       FERR    OVERF
       ADD     =10000B
       STA     1,2
       MIN     0,2
       LDA     SS01
       STA*    0,2
       LDX     SS03
       BRR     0
OVERF  ASC     "STACK OVER FLOW/"
*
*      POP     POP
*
       POPS    POP,(2)
       STX     SS03
       EAX*    0
       LDA     1,2
       SUB     =10000B
       SKA     =4B7
       FERR    UNDERF
       ADD     =1
       STA     1,2
       LDA*    0,2
       SKR     0,2
       NOP
       LDX     SS03
       BRR     0
UNDERF ASC     "STACK UNDER FLOW/"
*
*      LDW     POP
*
       POPS    LDW,(2)
       STX     SS03
       EAX*    0
       LDB     0,2
       CBX
       LSH     9
       ETR     =77B
       SKE     =1
       MIN     0
       LDA     0,2
       LDB     1,2
       LDX     SS03
       BRR     0
*
*      LDINT   POP
*
       POPS    LDINT,(2)
       STB     SS02
       STX     SS03
       EAX*    0
       LDB     0,2
       CBX
       LSH     9
       ETR     =77B
       SKE     =2
       BRU     LDI2
       LDA     0,2
       LDB     1,2
       BRS     50
       BRU     *+2
LDI2   LDA     0,2
       LDB     SS02
       LDX     SS03
       BRR     0
*
*      LDFLT   POP
*
       POPS    LDFLT,(2)
       STX     SS03
       EAX*    0
       LDB     0,2
       CBX
       LSH     9
       ETR     =77B
       SKE     =1
       BRU     LDF2
       LDA     0,2
       BRS     51
       BRU     *+3
LDF2   LDA     0,2
       LDB     1,2
       LDX     SS03
       BRR     0
*
*      STINT   POP
*
       POPS    STINT,(2)
       STA     SS01
       STX     SS03
       EAX*    0
       LDA     0,2
       ETR     =@77B5
       MRG     =1B5
       STA     0,2
       LDA     SS01
       STA*    0,2
       LDX     SS03
       BRR     0
*
*      STFLT   POP
*
       POPS    STFLT,(2)
       STA     SS01
       STX     SS03
       EAX*    0
       LDA     0,2
       ETR     =@77B5
       MRG     =2B5
       STA     0,2
       CAX
       LDA     SS01
       STA     0,2
       STB     1,2
       LDX     SS03
       BRR     0
*
*      ENABLE  POP
*
       POPS    ENABLE,(1)
       BRM*    ESCON
       BRR     0
$ESCOFF NOP     RET3
       SKN     ESCNT
       BRS     113
       SKR     ESCNT
       BRU     *-1
$ESCON  BRR     RET3
       MIN     ESCNT
       SKN     ESCNT
       BRS     114
       BRR     RET3
*
*      DISABL  POP
*
       POPS    DISABL,(1)
       BRM*    ESCOFF
       BRR     0
*
*
*
*      GENERATE POP VECTOR
*
*
       RPT     (X=0,CPOP-1)
       BRU     POP.&($X)
       ENDR
POPE   EQU     *
POPL   DATA    -CPOP
POPI   STA     64+CPOP,2
$PINIT NOP     RET1
       LDX     POPL
       LDA     POPE,2
       EXU     POPI
       BRX     *-2
       BRR     RET1
       END
FET ** FICHE/FRAME BREAK *****
FETPOPS SYMSORT

SYM.  PG.LN. IDENT.

CPOP    1 10         CPOP    1  6         D(1)    1  5         
ERR     3 32         ESCOFF 10  7         ESCON  10 12         GET2    5 36         
GET3    6  8         GETCHR  5 30         LDF2    9  4         LDI2    8 24         
OVERF   7 11         PINIT  10 35         POPE   10 32         POPI   10 34         
POPL   10 33         POPS    1  4         POPS    1  3         SKU     1  9         
SPACES  3 31         TCI1    5  1         TCI2    5 11         TCI3    5 27         
TCIP2   4 27         TCIP3   4 33         TCIP4   4 37         UNDERF  7 29         
_OP.&(  1  7         
FET ** FICHE/FRAME BREAK *****
FETPRT
       NOLIST  ALL
       LIST    LCT,SLCT,SRC,COM,CALL,DEF,EXT,GO
FETPRT IDENT   ***FET PRINTER 5/9/72 JPS***
SKU    OPD     536B5,2
POPS   MACRO   D
D(1) OPD ($100B+CPOP).&*1B5,D(2)
CPOP EQU CPOP+1
 ENDM
CPOP   EQU     0
       POPS    TYPE,(2)
       POPS    CALL,(2)
       POPS    RET,(1)
       POPS    SET,(2)
       POPS    RESET,(2)
       POPS    SKSET,(2)
       POPS    SKUSET,(2)
       POPS    ERROR,(2)
       POPS    FERR,(2)
       POPS    TCI,(2)
       POPS    TCL,(2)
       POPS    TCO,(2)
       POPS    PUSH,(2)
       POPS    POP,(2)
       POPS    LDW,(2)
       POPS    LDINT,(2)
       POPS    LDFLT,(2)
       POPS    STINT,(2)
       POPS    STFLT,(2)
       POPS    ENABLE,(1)
       POPS    DISABL,(1)
$PRINT1 STA    SAVQ
       BRU*    PTAB1,2
$PRINT2 STA    SAVQ
       STB     SAVQ+1
       BRU*    PTAB2,2
PTAB1  DATA    NONE            BACK SLASH
       DATA    INST1           INSTRUCTION
       DATA    UINT1           UNSIGNED INTEGER
       DATA    CURR1           CURRENT FORMAT
       DATA    FLT1            FLOATING POINT
       DATA    SINT1           SIGNED INTEGER
       DATA    TXT1            TEXT
       DATA    DINT1           DECIMAL INTEGER
       DATA    OINT1           OCTAL INTEGER
       DATA    ADDR            ADDRESS
PTAB2  DATA    SERR            BEST NOT GET HERE.
       DATA    INST2           INSTRUCTION
       DATA    UINT2           UNSIGNED INTEGER
       DATA    CURR2           CURRENT FORMAT
       DATA    FLT2            FLOATING POINT
       DATA    SINT2           SIGNED INTEGER
       DATA    TXT2            TEXT
       DATA    DINT2           DECIMAL INTEGER
       DATA    OINT2           OCTAL INTEGER
       DATA    SERR            BEST NOT GET HERE.
SERR   FERR    SERRM
SERRM  ASC     "SYSTEM ERROR: PRINT MODE DOES NOT MATCH DATA/"
NONE   RET
INST1  CALL    INST
       BRU     STQ1
UINT1  CALL    UINT
       BRU     STQ1
CURR1  LDX     CMODE
       BRU     PRINT1
FLT1   BRS     51
       CALL    SFLT
       BRU     STQ1
SINT1  CALL    SINT
       BRU     STQ1
TXT1   CALL    TXT
       BRU     STQ1
DINT1  CALL    DINT
       BRU     STQ1
OINT1  CALL    OINT
       BRU     STQ1
ADDR   CALL    SADDR
       LDX     LMODE
       TCO     ADCHR,2
       RET
ADCHR  ASC     "  \  ]  [  /  :  $"
       DATA    2
CURR2  LDX     CMODE
       BRU     PRINT2
INST2  CALL    INST
       TYPE    DC
       LDA     SAVQ+1
       CALL    INST
       BRU     STQ2
UINT2  CALL    UINT
       TYPE    DC
       LDA     SAVQ+1
       CALL    UINT
       BRU     STQ2
FLT2   CALL    SFLT
       BRU     STQ2
SINT2  CALL    SINT
       TYPE    DC
       LDA     SAVQ+1
       CALL    UINT
       BRU     STQ2
TXT2   CALL    TXT
       LDA     SAVQ+1
       CALL    TXT
       BRU     STQ2
DINT2  CALL    DINT
       TYPE    DC
       LDA     SAVQ+1
       CALL    DINT
       BRU     STQ2
OINT2  CALL    OINT
       TYPE    DC
       LDA     SAVQ+1
       BRU     STQ2
DC     ASC     ",,/"
STQ1   LDA     SAVQ
       STINT   SEMIQ
       RET
STQ2   LDA     SAVQ
       LDB     SAVQ+1
       STFLT   SEMIQ
       RET
INST   STA     TINST
       ETR     =777B5
       SKE     =777B5
       BRU     INSTGO
       LDA     TINST
       BRU     SINT
INSTGO LDA     TINST
       CALL    FSRCH
       BRU     *+2
       BRU     INSTG2
       LDA     TINST
       CALL    OSRCH
       BRU     *+2
       BRU     INSTG2
       LDA     TINST
       LRSH    15
       ETR     =177B
       SKG     =0
       BRU     INSTG3
       CALL    UINT
       TCO     ="@"
       LDA     TINST
       ETR     =@177B5
       STA     TINST
INSTG3 LDB     =PRT1
       BRU     PREST
INSTG2 LDA     3,2
       EOR     =-1
       ETR     TINST
       STA     TINST
       LDA     2,2
       PUSH    TMPSTK
       LDB     1,2
       LDA     2,2
       LDX     =-6
       LCY     6
       SKA     =77B
       BRU     *+2
       BRU     PRST
       ETR     =77770077B
       CIO     TOUT
       BRX     *-6
PRST   POP     TMPSTK
       CAB
PREST  LDA     TINST
       SKA     =40000B
       TCO     ="*"
       TCO     =0
       SKB     =PRT2
       BRU     PRSTN
       SKB     =PRT1
       BRU     PRST2
       SKB     =PRT3
       BRU     *+2
       BRU     PRSTN
       SKA     =-1
       BRU     *+2
       BRU     PRSTN
PRST2  ETR     =37777B
       CALL    SADDR
PRSTN  LDB     TINST
       LSH     3
       ETR     =7
       SKG     =0
       RET
       TCO     =","
       ADD     =20B
       CIO     TOUT
       RET
UINT   LDB*    SEMIR
NPRT1  STB     TRAD
NPRT2  LRSH    23
       DIV     TRAD
       XAB
       PUSH    TMPSTK
       CBA
       SKE     =0
       CALL    NPRT2
       POP     TMPSTK
       ADD     =20B
       CIO     TOUT
       RET
SINT   SKA     =4B7
       BRU     *+2
       BRU     UINT
       CNA
       TCO     ="-"
       BRU     UINT
TXT    CAB
       LDA*    SEMIT
       SKE     =6
       BRU     TXT8
       LDX     =-4
       LSH     6
       ETR     =77B
       CIO     TOUT
       BRX     *-3
       RET
TXT8   SKE     =8
       ERROR   SEMTQ
       LDX     =-3
       LSH     8
       ETR     =177B
       SKA     =100B
       TCO     ="&"
       ETR     =77B
       CIO     TOUT
       BRX     *-6
       RET
SEMTQ  ASC     "SEMI T NOT 6 OR 8/"
DINT   LDB     =10
       BRU     NPRT1
OINT   LDB     =8
       BRU     NPRT1
SFLT   LDX     =NBUFF*3-1
       STX     NPTR
       STX     NPTR+1
       STE
       NOD     48
       SKE     =0
       LDE
       CLX
       CLX
       ISC     NPTR
       GCD     NPTR
       FERR    HELP1
       SKE     ="0"
       BRU     *+2
       BRU     *-4
       WCI     NPTR
       SKE     ="."
       BRU     *+3
       LDA     ="0"
       WCI     NPTR
       GCI     NPTR
       FERR    HELP1
       SKG     =0
       BRU     *-3
       BRU     *+3
FLT3   GCI     NPTR
       RET
       SKE     ="."
       BRU     *+2
       LDB     =-1
       CIO     TOUT
       BRU     FLT3
HELP1  ASC     "ERROR CONVERTING/"
SADDR  STA     TADDR
       SKN*    SEMIV
       BRU     *+2
       BRU     SADD2
       CALL    ASRCH
       BRU     SADD2
       LDB     1,2
       LDA     2,2
       LDX     =-6
       SKB     =77B6
       BRU     *+2
       BRU     *+5
       LCY     6
       ETR     =77770077B
       CIO     TOUT
       BRX     *-6
       LDA     OFFSET
       SKG     =0
       RET
       STA     TADDR
       TCO     ="+"
SADD2  LDA     TADDR
       CALL    UINT
       RET
       END
FET ** FICHE/FRAME BREAK *****
FETPRT SYMSORT

SYM.  PG.LN. IDENT.

ADCHR   3  2         ADDR    2 37         CPOP    1  9         
CPOP    1  7         CURR1   2 24         CURR2   3  4         D(1)    1  6         
DC      3 36         DINT    6 37         DINT1   2 33         DINT2   3 27         
FETPRT  1  3         FLT1    2 26         FLT2    3 16         FLT3    7 27         
HELP1   7 34         INST    4  5         INST1   2 20         INST2   3  6         
INSTG2  4 31         INSTG3  4 29         INSTGO  4 11         NONE    2 19         
NPRT1   5 36         NPRT2   5 37         OINT    6 39         OINT1   2 35         
OINT2   3 32         POPS    1  5         PREST   5 10         PRINT1  1 31         
PRINT2  1 33         PRST    5  8         PRST2   5 24         PRSTN   5 26         
PTAB1   1 36         PTAB2   2  7         SADD2   8 17         SADDR   7 35         
SEMTQ   6 36         SERR    2 17         SERRM   2 18         SFLT    7  2         
SINT    6  9         SINT1   2 29         SINT2   3 18         SKU     1  4         
STQ1    3 37         STQ2    4  1         TXT     6 15         TXT1    2 31         
TXT2    3 23         TXT8    6 25         UINT    5 35         UINT1   2 22         
UINT2   3 11         
FET ** FICHE/FRAME BREAK *****
FETSCAN
       NOLIST  ALL
       LIST    LCT,SLCT,SRC,COM,CALL,DEF,EXT,GO
SCAN   IDENT   *** FET SCANNER 4/28/72 JPS ***
SKU    OPD     536B5,2
POPS   MACRO   D
D(1) OPD ($100B+CPOP).&*1B5,D(2)
CPOP EQU CPOP+1
 ENDM
CPOP   EQU     0
       POPS    TYPE,(2)
       POPS    CALL,(2)
       POPS    RET,(1)
       POPS    SET,(2)
       POPS    RESET,(2)
       POPS    SKSET,(2)
       POPS    SKUSET,(2)
       POPS    ERROR,(2)
       POPS    FERR,(2)
       POPS    TCI,(2)
       POPS    TCL,(2)
       POPS    TCO,(2)
       POPS    PUSH,(2)
       POPS    POP,(2)
       POPS    LDW,(2)
       POPS    LDINT,(2)
       POPS    LDFLT,(2)
       POPS    STINT,(2)
       POPS    STFLT,(2)
       POPS    ENABLE,(1)
       POPS    DISABL,(1)
SET1   MACRO   D
X      EQU     D(1)
Y      NARG
       RPT     (Z=2,Y)
D(Z)   EQU     X
       BRU     D(Z).&RTN
X      EQU     X*2
       ENDR
       ENDM
$BTTAB SET1    1,NI,FI,NA,RS,CW,A2,SC,ST,CL,SA,OP,SB,AD,CR,PA,SP,PQ
       SET1    X,PC,LM,SCM,SLM,EX,RP
$BTTABL DATA   BTTAB-*
$A2MSK1 DATA   @FI+NA+RS+CW+A2
$A2MSK2 DATA   PA+SP+RP
FL1    EQU     4B7
FL2    EQU     2B7
$FLOAT1 DATA   FL1
$FLOAT2 DATA   FL2
CEL    EQU     1B7
UM     EQU     0               WORD SIZE DEFINED BY PRINT MODE
UL     EQU     1B4             WORD SIZE DEFINED BY LAST PRINT MODE
UC     EQU     2B4             WORD SIZE DEFINED BY CURRENT PRINT MODE
P0     EQU     0               BACK SLASH MODE
P1     EQU     1B2             INSTRUCTION FORMAT
P2     EQU     2B2             UNSIGNED INTEGER FORMAT
P3     EQU     3B2             CURRENT FORMAT
$P3G   EQU     3B
P4     EQU     4B2             FLOATING POINT FORMAT
P5     EQU     5B2             SIGNED INTEGER FORMAT
P6     EQU     6B2             TEXT FORMAT
P7     EQU     7B2             DECIMAL INTEGER FORMAT
P8     EQU     10B2            OCTAL INTEGER FORMAT
P9     EQU     11B2            ADDRESS FORMAT
$P9G   EQU     11B
TOTAL  LMACRO  E
Y1     NARG
E(0)   EQU     0
       RPT     (Y2=1,Y1)
E(0)   EQU     E(0)+E(Y2)
       ENDR
       ENDM
MAC    LMACRO  D
X4     NARG
X1     NCHR    D(0)
       IF      X4>1
X2     TOTAL   D(2)
       ELSE
X2     EQU     0
       ENDF
       IF      X4>2
X3     TOTAL   D(3)
       ELSE
X3     EQU     0
       ENDF
       IF      X4<4
       DATA    [D(1)]*4B4
       ELSE
       DATA    [D(1)]*4B4+D(4)
       ENDF
       IF      X1>0
X2     EQU     X2+CL
X3     EQU     X3+CEL+CNUM
$.&D(0) EQU    CELTYP+CNUM
X6     EQU     CELLP+1B5
CELLP  EQU     CELLP+1
       IF      [X3&[FL1+FL2]]#0
CELLP  EQU     CELLP+1
       IF      [X3&FL2]#0
X6     EQU     X6+1B5
       ENDF
       ENDF
CELL.&($CNUM) EQU X6
CNUM   EQU     CNUM+1
       IF      X4<4
X2     EQU     X2+SC+CR
       ENDF
       ENDF
       IF      X4>3
X2     EQU     X2+EX
       ENDF
       DATA    X2
       DATA    X3
       ENDM
COMS   EQU     *
$SEM   EQU     400B
$PER   EQU     200B
CELLP  EQU     0
CNUM   EQU     0
CELTYP EQU     212B
DOT    MAC     "."
SEMI1  MAC     SEM+"1"
SEMI2  MAC     SEM+"2"
SEMI3  MAC     SEM+"3"
SEMI4  MAC     SEM+"4"
SEMI5  MAC     SEM+"5"
SEMI6  MAC     SEM+"6"
SEMI7  MAC     SEM+"7"
SEMI8  MAC     SEM+"8"
SEMI9  MAC     SEM+"9"
PERE   MAC     PER+"E",0,FL2
SEMIV  MAC     SEM+"V"
PERR   MAC     PER+"R"
SEMIM  MAC     SEM+"M"
SEMIQ  MAC     SEM+"Q",0,FL1
SEMIA  MAC     SEM+"A"
SEMIX  MAC     SEM+"X",0,0,XSEMI
SEMIE  MAC     SEM+"E",0,0,ESEMI
SEMIR  MAC     SEM+"R",0,0,RSEMI
SEMIT  MAC     SEM+"T",0,0,TSEMI
       MAC     SEM+"D",0,0,DSEMI
       MAC     SEM+"O",0,0,OSEMI
       MAC     SEM+"I",(SP,CL),0,ISEMI
       MAC     SEM+"U",(SP,CL),0,USEMI
       MAC     SEM+"C",(SP,CL),0,CSEMI
       MAC     "=",(SP,PQ),P2
       MAC     "#",(SP,PQ),P5
       MAC     "_",(SP,PQ),P1
       MAC     PER+"D",(SP,PQ),P7
       MAC     PER+"B",(SP,PQ),P8
       MAC     PER+"F",(SP,PQ),P4
       MAC     7,(SP,PQ),P6
       MAC     SEM+"$",(NA,CL,CR,SCM),P5
       MAC     SEM+"[",(NA,CL,CR,SCM),P2
       MAC     SEM+"]",(NA,CL,CR,SCM),P1
       MAC     SEM+":",(NA,CL,CR,SCM),P4
       MAC     SEM+7,(NA,CL,CR,SCM),P6
       MAC     "[",(RS,A2,FI,OP,SP,PC,SLM,CW),(UM,P2)
       MAC     "/",(RS,A2,FI,OP,SP,PC,SLM,CW),(UC,P3)
       MAC     "]",(RS,A2,FI,OP,SP,PC,SLM,CW),(UM,P1)
       MAC     "$",(RS,A2,FI,OP,SP,PC,SLM,CW),(UM,P5)
       MAC     ":",(RS,A2,FI,OP,SP,PC,SLM,CW),(UM,P4)
       MAC     2,(RS,A2,FI,OP,SP,PC,SLM,CW),(UM,P6)
       MAC     "\",(FI,OP,SP,SLM,CW),(UM,P0)
       MAC     "^",(CR,FI,SB,PA,SP,LM,ST,CW),UL
       MAC     152B,(FI,AD,PA,SP,LM,ST,CW),UL
       MAC     155B,(ST,CL)
       MAC     ">",(PA,FI,SA,CR,OP,SP,LM,CW),UL
       MAC     PER+"Q",NA,0,QPER
       MAC     SEM+"G",NA,0,QPER
       MAC     PER+"K",(CL,NA,SP),0,KPER
       MAC     PER+"S",(CL,SP),0,SPER
       MAC     PER+"I",(CL,SP),0,IPER
       MAC     PER+"O",(CL,SP),0,OPER
       MAC     SEM+"W",(CL,CR,FI),0,WSEMI
       MAC     SEM+"#",(CL,CR,FI),0,PDSEMI
       MAC     SEM+"S",(CL,CR,FI,RS),0,SSEMI
       MAC     SEM+"Z",(CL,CR,FI,RS),0,ZSEMI
       MAC     PER+"M",(CL,FI,RS,CR),0,MPER
       MAC     PER+"N",(CL,FI,RS,CR),0,NPER
       MAC     PER+"C",(CL,FI,CR),0,CPER
       MAC     SEM+"F",(CL,FI,CR),0,FSEMI
       MAC     PER+"L",(CL,SP),0,LPER
       MAC     PER+"Y",CL,SP,0,YPER
COML   DATA    COMS-*
CELTAB RPT     (X=0,CNUM-1)
       DATA    CELLS+CELL.&($X)
       ENDR
$NUMC  DATA    CELTAB-*
UA     EQU     1B6             IF UNARY, ADD ONE
NU     EQU     2B6             MUST NOT BE UNARY
MU     EQU     3B6             MUST BE UNARY
IU     EQU     4B6             IGNORE. UNARY NOT RELATIVE.
OPERS  DATA    " "+NU
       DATA    "+"+NU
       DATA    "-"+UA
       DATA    777777B
       DATA    SEM+"*"+NU
       DATA    SEM+"/"+NU
       DATA    "&"+NU
       DATA    "("+MU
       DATA    ")"+NU
       DATA    "*"+IU
       DATA    ","+NU
       DATA    "@"+NU
       DATA    777777B+IU
       DATA    777777B
OPERL  DATA    OPERS-*
SET2   MACRO   D
X      EQU     D(1)
Y      NARG
       RPT     (Z=2,Y)
D(Z)   EQU     X
       BRU     D(Z).&RTN
X      EQU     X+1
       ENDR
       ENDM
MATTAB SET2    0,E1,E2,S1,S2,S3,C1,C2,C3,C4,C5,C6,C7,C8
       SET2    X,T1,T2,T3,F1,F2,F3,F4,DN
MAT    MACRO   D
X      NARG
Y      EQU     1
SHFT1  EQU     1B6
SHFT2  EQU     1B4
SHFT3  EQU     1B2
SHFT4  EQU     1
V      EQU     0
       RPT     (Z=1,X)
V      EQU     D(Z)*SHFT($Y)+V
       IF      Y=4
       DATA    V
Y      EQU     1
V      EQU     0
       ELSF    Z=X
       DATA    V
       ELSE
Y      EQU     Y+1
       ENDF
       ENDR
       ENDM
*
*                    PRECEDENCE MATRIX
*
*
*                         IN-HAND                          TOP-OF-STACK
*             BLK  +  - U- S* S/  &  (  )  *  ,  @ CM SL
MATRIX MAT     C1,S2,S2,S1,S2,S2,C1,S3,C1,F1,C1,F4,C1,E1   BLANK
       MAT     C2,C2,C2,S1,S2,S2,C2,S3,C2,F1,C2,F4,C2,E1     +
       MAT     C3,C3,C3,S1,S2,S2,C3,S3,C3,F1,C3,F4,C3,E1     -
       MAT     C4,C4,C4,F2,C4,C4,C4,S3,C4,F1,C4,F4,C4,E1   UNARY MINUS
       MAT     C5,C5,C5,S1,C5,C5,C5,S3,C5,F1,C5,F4,C5,E1   SEMI *
       MAT     C6,C6,C6,S1,C6,C6,C6,S3,C6,F1,C6,F4,C6,E1   SEMI /
       MAT     S2,S2,S2,S1,S2,S2,C7,S3,C7,F1,T1,F4,C7,E1     &
       MAT     S2,S2,S2,S1,S2,S2,S2,S3,F3,F1,T2,F4,E2,E1     (
       MAT     E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1     )
       MAT     E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1     *
       MAT     S2,S2,S2,S1,S2,S2,C8,S3,C8,F1,C8,F4,C8,E1     ,
       MAT     E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1     @
       MAT     E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1,E1   COMMAND
       MAT     S2,S2,S2,S1,S2,S2,S2,S3,E2,F1,T3,F4,DN,E1   START-OF-LINE
MATW   EQU     16
SL     EQU     14
CM     EQU     13
$RESCAN SET    SCANF           SAYS WE'RE IN RESCAN
       LDA     =COMSTK+1       SET UP ARGUMENT STACK
       STA     COMSTK
       LDA     =COMSTL
       STA     COMSTK+1
       LDA     =SAVSTK+2
       STA     RESTK
       BRU     SCANC
$SCAN  RESET   SCANF           SAYS WE'RE IN SCAN
       LDA     =SAVSTK+1       SET UP STACKS
       STA     SAVSTK
       LDA     =SAVSTL
       STA     SAVSTK+1
SCANC  LDA     =AESTK+1
       STA     AESTK
       LDA     =AESTL
       STA     AESTK+1
       LDA     =OPSTK+1
       STA     OPSTK
       LDA     =OPSTL
       STA     OPSTK+1
       LDA     =4B7+SL
       PUSH    AESTK
       LDA     =-1
       STA     COMCNT
SCAN0  CLA
       STA     INDFLG
       STA     OPERND
       LDA     =-1
       STA     SECNT
SCAN1  CALL    GSECT
       BRU     OP1
OP2    LDA     =OP2TAB-1
       BRU     OP1+1
OP1    LDA     =OP1TAB-1
       STA     CTEMP
       LDA     OPERTR
       ETR     =77B
       CAX
       LDB     OPERS-1,2
       LSH     6
       ETR     =77B
       ADD     CTEMP
       CAX
       BRU*    0,2
OP1TAB DATA    ADD1,UERR1,SCAN2,SCAN2
OP2TAB DATA    SCAN2,SCAN2,UERR2,SCAN2
UERR1  ERROR   UERRM1
UERR2  ERROR   UERRM2
UERRM1 ASC     "MISSING OPERAND/"
UERRM2 ASC     "MISSING OPERATOR/"
ADD1   MIN     OPERTR
SCAN2  SKN*    AESTK
       ERROR   UERRM2
       LDA*    AESTK
       ETR     =77B
       MUL     =MATW
       LSH     23
       PUSH    TMPSTK
       LDA     OPERTR
       ETR     =77B
       ADM*    TMPSTK
       POP     TMPSTK
       SUB     =MATW+1
       LRSH    23
       DIV     =4
       COPY    AX,BA
       LDB     MATRIX,2
       CAX
       LSH*    SHFTAB,2
       ETR     =77B
       CAX
       BRU*    MATTAB,2
SHFTAB DATA    6,12,18,24
E1RTN  FERR    SYSERR
SYSERR ASC     "SYSTEM ERROR/"
E2RTN  ERROR   BADPAR
BADPAR ASC     "UNBALANCED PARANS/"
S3RTN  LDA     INDFLG
       PUSH    AESTK
       CLA
       STA     INDFLG
S1RTN  SKN     SECNT
       ERROR   UERRM2
S1CON  LDA     OPERTR
       PUSH    AESTK
       BRU     SCAN1
S2RTN  SKN     SECNT
       BRU     *+2
       ERROR   UERRM1
       LDA     OPERND
       PUSH    AESTK
       BRU     S1CON
C1RTN  POP     AESTK
       SKN     SECNT
       BRU     C1CON
       POP     AESTK
       STA     OPERND
       MIN     SECNT
       BRU     OP2
C1CON  CALL    SETUP
       BRU     *+1,2
       BRU     *+2
       BRU     C2CON
       STA     CTEMP
       ETR     =7774B4
       XMA     CTEMP
       ADD     TOP
       ETR     =37777B
       MRG     CTEMP
       BRU     DOR
C2RTN  POP     AESTK
       CALL    SETUP
C2CON  BRU     *+1,2
       BRU     C2CON2
       FAD     TOP
       BRU     DOR
C2CON2 ADD     TOP
DOR    CALL    DORSTR
       BRU     SCAN2
DORSTR BRU     *+1,2
       BRU     DORINT
DORFLT PUSH    TMPSTK
       XAB
       PUSH    TMPSTK
       LDA     =2B5
       STA     OPERND
       RET
DORINT PUSH    TMPSTK
       LDA     =1B5
       STA     OPERND
       RET
C3RTN  POP     AESTK
       CALL    SETUP
       BRU     *+1,2
       BRU     C3INT
       FSB     TOP
       BRU     DOR
C3INT  SUB     TOP
       BRU     DOR
C4RTN  POP     AESTK
       CALL    FETR
       BRU     *+1,2
       BRU     C4INT
       BRS     21
       BRU     DOR
C4INT  CNA
       BRU     DOR
C5RTN  POP     AESTK
       CALL    SETUP
       BRU     *+1,2
       BRU     C5INT
       FMP     TOP
       BRU     DOR
C5INT  MUL     TOP
       LSH     23
       BRU     DOR
C6RTN  POP     AESTK
       CALL    SETUP
       BRU     *+1,2
       BRU     C6INT
       FDV     TOP
       BRU     DOR
C6INT  RSH     23
       DIV     TOP
       STB*    PERR
       BRU     DOR
C7RTN  POP     AESTK
       CALL    FETR
       BRU     *+1,2
       BRU     *+2
       BRS     50
       STA     TOP
       CALL    FETL
       BRU     *+1,2
       BRU     *+2
       BRS     50
       ETR     TOP
       LDX     =1
       BRU     DOR
C8RTN  POP     AESTK
       CALL    FETR
       BRU     *+1,2
       BRU     *+2
       BRS     50
       CLB
       LSH     21
       STA     TOP
       CALL    FETL
       BRU     *+1,2
       BRU     *+2
       BRS     50
       ADD     TOP
       CLX
       BRU     DOR
T1RTN  SKUSET  SCANF
       BRU     C7RTN
       BRU     S2RTN
T2RTN  SKUSET  SCANF
       ERROR   BADCOM
       BRU     S2RTN
BADCOM ASC     "ILLEGAL COMMA IN PARANS/"
T3RTN  SKSET   SCANF
       BRU     S2RTN
       CALL    SAVARG
       BRU     SCAN0
F1RTN  LDA     =4B4
       STA     INDFLG
       SKN     SECNT
       BRU     *+2
       BRU     SCAN1
       LDA     OPERND
       STA     TOP
       CALL    GSECT
       BRU     F1HALF
       LDA     TOP
       PUSH    AESTK
       LDA     =4B7+1
       PUSH    AESTK
       BRU     OP2
F1HALF MIN     SECNT
       BRU     OP2
F2RTN  POP     AESTK
       BRU     SCAN1
F3RTN  POP     AESTK
       SKN     SECNT
       BRU     F3RT2
       LDA     INDFLG
       SKG     =0
       ERROR   UERRM1
       LDX     =1
       CALL    DORSTR
       CLA
       STA     SECNT
       BRU     F3RT3
F3RT2  LDA     INDFLG
       SKG     =0
       BRU     F3RT3
       CALL    FETR
       ADD     INDFLG
       CALL    DORSTR
F3RT3  POP     AESTK
       STA     INDFLG
       CALL    GSECT
       ERROR   UERRM2
       STA     OPERTR
       CLA
       STA     SECNT
       BRU     OP2
F4RTN  CALL    FETR
       BRU     *+1,2
       BRU     *+2
       BRS     50
       CLB
       LSH     15
       PUSH    OPSTK
       LDA     OPSTK
       MRG     =1B5
       STA     OPERND
       CALL    GET2
       ERROR   UERRM2
       STA     OPERTR
       BRU     OP2
DNRTN  CALL    SAVARG
       RET
SAVARG SKN     SECNT
       BRU     SAV2
       LDA     INDFLG
       SKG     =0
       RET
       CALL    VALINT
       CLA
       STA     SECNT
SAV1   POP     SAVSTK
       STA     OPERND
       MIN     COMCNT
       SKUSET  SCANF
       PUSH    COMSTK
       RET
SAV2   LDA     INDFLG
       SKG     =0
       BRU     SAV4
       CALL    FETR
       ADD     INDFLG
SAV3   CALL*   *+2,2
       BRU     SAV1
       NOP     VALINT
       NOP     VALFLT
SAV4   CALL    FETR
       BRU     SAV3
SETUP  CALL    FETR
       BRU     *+1,2
       BRU     *+2
       BRU     SETUP3
       STA     TOP
       CALL    FETL
       BRU     *+1,2
       RET
       XMA     TOP
       STB     TOP+1
       BRS     51
       XMA     TOP
       XAB
       XMA     TOP+1
       XAB
       RET
SETUP3 STA     TOP
       STB     TOP+1
       CALL    FETL
       BRU     *+1,2
       BRU     *+2
       RET
       BRS     51
       LDX     =2
       RET
FETR   SKN     SECNT
       BRU     *+2
       ERROR   UERRM1
       LDA     OPERND
       BRU     FET
FETL   POP     AESTK
       SKA     =4B7
       ERROR   UERRM1
FET    COPY    AB,AX
       ETR     =77B5
       SKE     =1B5
       BRU     FET3
       SKB     =37777B
       BRU     FET2
       POP     TMPSTK
       CLX
       RET
FET2   LDA     0,2
       CLX
       RET
FET3   SKB     =37777B
       BRU     FET4
       POP     TMPSTK
       CAB
       POP     TMPSTK
       LDX     =1
       RET
FET4   LDA     0,2
       LDB     1,2
       LDX     =1
       RET
GSECT  LDA     =-1
       STA     SECNT
       CALL    GET1
       BRU     *+3
       STA     OPERTR
       RET
       STA     OPERND
       CALL    GET2
       ERROR   UERRM2
       MIN     SECNT
       STA     OPERTR
       MIN*    CALPTR
       RET
GET1   SET     G1FLAG
       BRU     GET2+1
GET2   RESET   G1FLAG
       SKSET   SCANF
       BRU     GETS
       LDA*    RESTK
       MIN     RESTK
       SKA     =4B7
       MIN*    CALPTR
       RET
GETS   SKSET   G1FLAG
       BRU     GETS2
       TCL     CHAR
       SKE     =0
       BRU     GETS2+1
       TCI     CHAR
       BRU     *-4
GETS2  TCL     CHAR
       SKG     ="9"
       SKG     ="0"-1
       BRU     *+2
       BRU     DIGIT2
       SKU     ="."
       BRU     DIGIT1
       SKU     =2
       SKSET   G1FLAG
       BRU     *+2
       BRU     STRNG1
       SKG     ="Z"
       SKG     ="A"-1
       BRU     *+2
       BRU     OPCODE
       TCI     CHAR
       LDB     =777777B
       LDX     OPERL
GET3   SKM     OPERL,2
       BRU     GET4
       CXA
       SUB     OPERL
       ADD     =1
       ETR     =77B
TRF    MRG     =4B7
       PUSH    SAVSTK
       MIN*    CALPTR
       RET
GET4   BRX     GET3
*      CAN ALSO COME HERE IF A "." TURNS OUT NOT TO BE A NUMBER
GET5   LDX     COML
       LSH     14
       LDB     =7774B4
       SKM     COML,2
       BRU     *+2
       BRU     GET6
       EAX     2,2
       BRX     *-4
       ERROR   UNDEF
UNDEF  ASC     "UNDEFINED/"
GET6   SKSET   G1FLAG
       BRU     GET7
       LDA     COML+2,2
       SKA     =CEL
       BRU     *+2
       BRU     GET7
       ETR     =77B
       CAX
       LDA     CELTYP,2
       CAX
       ETR     =77B5
       SKE     =1B5
       BRU     VALT
       LDA     0,2
VALINT PUSH    OPSTK
       LDA     OPSTK
       MRG     =1B5
       PUSH    SAVSTK
       RET
VALT   LDA     0,2
       LDB     1,2
VALFLT PUSH    OPSTK
       XAB
       PUSH    OPSTK
       LDA     OPSTK
       SUB     =1
       MRG     =2B5
       PUSH    SAVSTK
       RET
GET7   LDA     COML,2
       STA     COMM1
       LDA     COML+1,2
       STA     COMM2
       LDA     COML+2,2
       STA     COMM3
       LDA     =CM
       BRU     TRF
DIGIT1 TCI     CHAR
       TCL     CHAR
       SKG     ="9"
       SKG     ="0"-1
       BRU     *+3
       LDA     ="."
       BRU     DIGIT3
       LDA     ="."
       BRU     GET5
DIGIT2 TCI     3
DIGIT3 STA     CHAR
       LDA     =NBUFF*3-1
       STA     NPTR
       STA     NPTR+1
       CALL    DIGIT
       BRU     VALINT
       BRU     VALFLT
DIGIT  LDA     NPTR
       PUSH    TMPSTK
       LDA     NPTR+1
       STA     NPTR
       PUSH    TMPSTK
       LDA     =1
       PUSH    TMPSTK
       LDA     CHAR
       BRU     *+2
DIG1   TCI     CHAR
       WCI     NPTR
       SKE     ="."
       BRU     DIG2
       SKR*    TMPSTK
       BRU     DIG2
       ERROR   BADPT
BADPT  ASC     "TWO DECIMAL POINTS/"
DIG2   TCL     CHAR
       SKG     ="9"
       SKG     ="0"-1
       BRU     *+2
       BRU     DIG1
       SKU     ="."
       BRU     DIG1
       SKE     ="D"
       SKU     ="B"
       BRU     DIG4
       SKU     ="O"
       BRU     DIG4
       SKE     ="R"
       BRU     DIG3
       SKR*    TMPSTK
       BRU     *+2
       ERROR   BADRD1
       MIN*    TMPSTK
       TCI     CHAR
       TCI     CHAR
       SKG     ="9"
       SKG     ="0"-1
       ERROR   BADRD2
       CALL    DIGIT
       BRU     DIG5
       ERROR   BADRD3
BADRD1 ASC     "RADIX ALWAYS TEN FOR FLOATING POINT/"
BADRD2 ASC     "RADIX = ??/"
BADRD3 ASC     "FLOATING POINT RADIX??/"
DIG3   LDA*    SEMIR
       BRU     DIG5
DIG4   TCI     CHAR
       SKR*    TMPSTK
       BRU     *+2
       ERROR   BADRD1
       MIN*    TMPSTK
       SKU     ="D"
       LDB     =10
       SKE     ="B"
       SKU     ="O"
       LDB     =8
       CBA
DIG5   SKG     =10
       SKG     =1
       ERROR   BADRD4
       STA     TRAD
       POP     TMPSTK
       SKE     =1
       BRU     DIGF
       CLA
       STA     TNUM
DIG6   GCI     NPTR
       BRU     DIG7
       SUB     =20B
       XMA     TNUM
       MUL     TRAD
       LSH     23
       ADM     TNUM
       BRU     DIG6
DIG7   POP     TMPSTK
       STA     NPTR+1
       POP     TMPSTK
       STA     NPTR
       LDA     TNUM
       RET
DIGF   CLX
       SIC     NPTR
       NOP     0  PUT "ERROR FLTQ" HERE WHEN VERNE FIXES "SIC"
       MIN*    CALPTR
       RET
FLTQ   ASC     "BAD NUMBER?/"
BADRD4 ASC     "RADIX MUST BE TWO TO TEN/"
STRNG1 TCI     CHAR
       LDA     =-1
       STA     XCHAR
       CALL    RSTRG
       SKB     =-1
       BRU     VALINT
       SKN     SECNT
       ERROR   STRGQ
STRNG2 STB     TINST
       SKSET   CLSE
       BRU     STRNG3
       LDB*    DOT
       LDX*    SEMIX
       CALL    STORE
STRNG3 SKN     TINST
       BRU     STRNG4
       RESET   CLSE
       TCO     =155B
       BRU     DIS
STRNG4 SKUSET  CLSE
       MIN*    DOT
       CALL    RSTRG
       BRU     STRNG2
STRGQ  ASC     "STRING TOO LONG/"
OPCODE CALL    ROPC
       CALL    HSRCH
       ERROR   BADS2
       LDA     HTAB+3,2
       BRU     VALINT
BADS2  ASC     "(U)/"
       END
FET ** FICHE/FRAME BREAK *****
FETSCAN SYMSORT

SYM.  PG.LN. IDENT.

.&D(0)  3 15         A2MSK1  2  4         A2MSK2  2  5         
ADD1    9  2         BADCOM 12 35         BADPAR  9 28         BADPT  20  8         
BADRD1 20 35         BADRD2 20 36         BADRD3 20 37         BADRD4 22  2         
BADS2  22 32         BTTAB   2  1         BTTABL  2  3         C1CON  10 12         
C1RTN  10  5         C2CON  10 25         C2CON2 10 29         C2RTN  10 23         
C3INT  11 11         C3RTN  11  5         C4INT  11 19         C4RTN  11 13         
C5INT  11 27         C5RTN  11 21         C6INT  11 36         C6RTN  11 30         
C7RTN  12  1         C8RTN  12 14         CEL     2 10         CELLP   3 39         
CELLP   3 19         CELLP   3 17         CELTAB  5 29         CELTYP  4  2         
CM      7 28         CNUM    4  1         CNUM    3 25         COML    5 28         
COMS    3 36         CPOP    1  9         CPOP    1  7         D(1)    1  6         
D(Z)    6 17         D(Z)    1 35         DIG1   20  1         DIG2   20  9         
DIG3   20 38         DIG4   21  1         DIG5   21 12         DIG6   21 21         
DIG7   21 29         DIGF   21 35         DIGIT  19 31         DIGIT1 19 14         
DIGIT2 19 23         DIGIT3 19 24         DNRTN  14 19         DOR    10 30         
DORFLT 10 34         DORINT 11  1         DORSTR 10 32         DOT     4  3         
E(0)    2 30         E(0)    2 28         E1RTN   9 25         E2RTN   9 27         
F1HALF 13 15         F1RTN  13  1         F2RTN  13 17         F3RT2  13 30         
F3RT3  13 36         F3RTN  13 19         F4RTN  14  5         FET    16  1         
FET2   16 10         FET3   16 13         FET4   16 20         FETL   15 37         
FETR   15 32         FL1     2  6         FL2     2  7         FLOAT1  2  8         
FLOAT2  2  9         FLTQ   22  1         GET1   16 37         GET2   16 39         
GET3   17 33         GET4   18  4         GET5   18  6         GET6   18 16         
GET7   19  6         GETS   17  8         GETS2  17 15         GSECT  16 24         
IU      5 36         MAC     2 33         MAT     6 24         MATRIX  7 12         
MATTAB  6 22         MATW    7 26         MU      5 35         NU      5 34         
NUMC    5 32         OP1     8 24         OP1TAB  8 35         OP2     8 22         
OP2TAB  8 36         OPCODE 22 27         OPERL   6 12         OPERS   5 37         
P0      2 14         P1      2 15         P2      2 16         P3      2 17         
P3G     2 18         P4      2 19         P5      2 20         P6      2 21         
P7      2 22         P8      2 23         P9      2 24         P9G     2 25         
PER     3 38         PERE    4 13         PERR    4 15         POPS    1  5         
RESCAN  7 29         S1CON   9 35         S1RTN   9 33         S2RTN   9 38         
S3RTN   9 29         SAV1   14 29         SAV2   14 35         SAV3   15  1         
SAV4   15  5         SAVARG 14 21         SCAN    7 37         SCAN    1  3         
SCAN0   8 15         SCAN1   8 20         SCAN2   9  3         SCANC   8  3         
SEM     3 37         SEMI1   4  4         SEMI2   4  5         SEMI3   4  6         
SEMI4   4  7         SEMI5   4  8         SEMI6   4  9         SEMI7   4 10         
SEMI8   4 11         SEMI9   4 12         SEMIA   4 18         SEMIE   4 20         
SEMIM   4 16         SEMIQ   4 17         SEMIR   4 21         SEMIT   4 22         
SEMIV   4 14         SEMIX   4 19         SET1    1 31         SET2    6 13         
SETUP  15  7         SETUP3 15 23         SHFT1   6 27         SHFT2   6 28         
SHFT3   6 29         SHFT4   6 30         SHFTAB  9 24         SKU     1  4         
SL      7 27         STRGQ  22 26         STRNG1 22  3         STRNG2 22 11         
STRNG3 22 17         STRNG4 22 22         SYSERR  9 26         T1RTN  12 29         
T2RTN  12 32         T3RTN  12 36         TOTAL   2 26         TRF    17 39         
UA      5 33         UC      2 13         UERR1   8 37         UERR2   8 38         
UERRM1  8 39         UERRM2  9  1         UL      2 12         UM      2 11         
UNDEF  18 15         V       6 37         V       6 33         V       6 31         
VALFLT 18 37         VALINT 18 30         VALT   18 35         X       6 25         
X       6 19         X       6 14         X       1 37         X       1 32         
X1      2 35         X2      3 31         X2      3 27         X2      3 13         
X2      2 39         X2      2 37         X3      3 14         X3      3  5         
X3      3  3         X4      2 34         X6      3 21         X6      3 16         
Y       7  2         Y       6 36         Y       6 26         Y       6 15         
Y       1 33         Y1      2 27         _ELL.&  3 24         
FET ** FICHE/FRAME BREAK *****
FETSUB
       NOLIST  ALL
       LIST    LCT,SLCT,SRC,COM,CALL,DEF,EXT,GO
FETSUB IDENT   ***FET SUBROUTINES 5/2/72 JPS***
SKU    OPD     536B5,2
POPS   MACRO   D
D(1) OPD ($100B+CPOP).&*1B5,D(2)
CPOP EQU CPOP+1
 ENDM
CPOP   EQU     0
       POPS    TYPE,(2)
       POPS    CALL,(2)
       POPS    RET,(1)
       POPS    SET,(2)
       POPS    RESET,(2)
       POPS    SKSET,(2)
       POPS    SKUSET,(2)
       POPS    ERROR,(2)
       POPS    FERR,(2)
       POPS    TCI,(2)
       POPS    TCL,(2)
       POPS    TCO,(2)
       POPS    PUSH,(2)
       POPS    POP,(2)
       POPS    LDW,(2)
       POPS    LDINT,(2)
       POPS    LDFLT,(2)
       POPS    STINT,(2)
       POPS    STFLT,(2)
       POPS    ENABLE,(1)
       POPS    DISABL,(1)
$CLSIN NOP     RET4
       STA     CSAVE1
       LDA     TIN
       SKG     =1
       BRU     CLINR
       STB     CSAVE2
       STX     CSAVE3
       CLA
       BRM*    ESCOFF
       BRS     151
       CLA
       STA     TIN
       MIN     AFCNT
       BRM*    ESCON
       LDB     CSAVE2
       LDX     CSAVE3
CLINR  LDA     CSAVE1
$CLSOUT BRR    RET4
       STA     CSAVE1
       LDA     TOUT
       SKG     =1
       BRU     CLOUTR
       STB     CSAVE2
       STX     CSAVE3
       LDA     =1
       BRM*    ESCOFF
       BRS     77
       LDA     =1
       STA     TOUT
       MIN     AFCNT
       BRM*    ESCON
       LDB     CSAVE2
       LDX     CSAVE3
CLOUTR LDA     CSAVE1
       BRR     RET4
$STORE STA     WORD
       STB     CURSE
       LDA     FILES,2
       SKA     =2B7
       FERR    NOWRIT
       CALL    FETCH
       LDX     FNDEX
       LDA     CURSE
       ADD     =1
       MUL     =3
       LSH     23
       SKG     EOFTB2,2
       BRU     STORE2
       STA     EOFTB2,2
       SET     CALEOF
STORE2 LDA     WORD
       SKE*    WORDA
       BRU     *+2
       RET
       LDX     BNDEX
       SKN     BTAB2E,2
       BRU     *+2
       BRU     STORE3
       LDA     BTAB2E,2
       MRG     =4B7
       STA     BTAB2E,2
       LDA     WORD
STORE3 STA*    WORDA
       RET
$FETCH STX     FNDEX
       LSH     1
       CLA
       DIV     =256
       STB     OFFSET
       STA     BLOCK
       LDA     FNDEX
       CLB
       STB     CLEAN
       STB     FREE
       LSH     18
       MRG     BLOCK
       MRG     =4B7
       STA     SAVDAT
       LDX     MNBUFF
GLOOP  SKN     BTAB1E,2
       BRU     GFREE
       SKE     BTAB1E,2
       BRU     *+2
       BRU     GFND
       SKN     BTAB2E,2
       STX     CLEAN
       BRU     *+2
GFREE  STX     FREE
       BRX     GLOOP
       SKN     FREE
       BRU     *+3
       LDX     FREE
       BRU     READ1
       SKN     CLEAN
       BRU     *+3
       LDX     CLEAN
       BRU     READ1
       LDA     DIRTY
       ADD     =1
       SKG     =-1
       BRU     *+2
       LDA     MNBUFF
       STA     DIRTY
       CAX
       CALL    WRITE1
READ1  STX     BNDEX
       LDA     BTAB2E,2
       ETR     =37777B
       STA     BADDR
       CLA
       STA     BTAB1E,2
       LDX     FNDEX
       LDA     FILES,2
       ETR     =7777B
       STA     TFILE
       LDA     BLOCK
       MUL     =3*256
       LSH     1
       SKA     =-1
       FERR    TOOBIG
       LSH     22
       STA     CURSOR
       ADD     =1
       SKG     EOFTB1,2
       BRU     READ2T
       LDA     BADDR
       STA     BPTR
       LDX     =-256
ZLOOP  CLA
       STA*    BPTR
       MIN     BPTR
       BRX     *-2
       BRU     RDONE
READ2T SUB     =1
READ2  SCP     TFILE
       ERROR*  SCPERR-1,2
       LDX     BADDR
       LDA     =256
       BIO     TFILE
       BRU     *+2
       BRU     RDONE
       STA     BPTR
       LDA     TFILE
       SKA     =4B5
       FERR    READER
       LDA     BPTR
       SUB     BADDR
       SUB     =256
       CAX
       BRU     ZLOOP
RDONE  LDX     BNDEX
       LDA     SAVDAT
       STA     BTAB1E,2
       LDA     BTAB2E,2
       ETR     =@4B7
       STA     BTAB2E,2
       BRU     GFND2
GFND   STX     BNDEX
       LDA     BTAB2E,2
       ETR     =37777B
       STA     BADDR
GFND2  LDA     BADDR
       ADD     OFFSET
       STA     WORDA
       LDA*    WORDA
       RET
READER ASC     "READ ERROR/"
TOOBIG ASC     "ADDRESS TOO LARGE, CANNOT SET CURSOR/"
SCPERR DATA    SCPER1,TOOBIG
SCPER1 ASC     "CANNOT SET READ MODE FOR FILE/"
$FREADY CLA
       SKN     SECNT
       LDINT   OPERND
       SKG     =9
       SKG     =-1
       FERR    BADFIL
       STA     FNDEX
       CALL    CLOSE
       SKN     AFCNT
       BRU     *+2
       FERR    TOOM
       CALL    RFNAME
       RET
BADFIL ASC     "BAD FILE NUMBER/"
$TOOM  ASC     "4 FILES ALREADY OPEN/"
$CLOSE STA     FNDEX
       STB     CLSAV2
       STX     CLSAV3
       CAX
       SKN     FILES,2
       BRU     *+2
       BRU     CLOSE2
       LDA     FILES,2
       ETR     =7777B
       STA     TFILE
       LDA     FNDEX
       CALL    RELEAS
       RCP     TFILE
       ETR     =@4B7
       SCP     TFILE
       FERR    CLERR1
       DISABL
       LDA     TFILE
       BRS     20
       LDX     FNDEX
       LDA     =-1
       STA     FILES,2
       MIN     AFCNT
       ENABLE
       LDA     FNDEX
       LDB     CLSAV2
CLOSE2 LDX     CLSAV3
       RET
$CLERR1 ASC     "ERROR CLOSING FILE/"
$RELEAS STA    FNDEX
       STB     FLSAV2
       STX     FLSAV3
       CLB
       LSH     18
       MRG     =4B7
       LDB     =77B6
       LDX     MNBUFF
REL1   SKM     BTAB1E,2
       BRU     REL2
       SKN     BTAB2E,2
       BRU     *+2
       CALL    WRITE1
       CLB
       STB     BTAB1E,2
       LDB     =77B6
REL2   BRX     REL1
       LDB     FLSAV2
       LDX     FLSAV3
       LDA     FNDEX
       RET
$FLUSH STA     FNDEX
       STB     FLSAV2
       STX     FLSAV3
       CLB
       LSH     18
       MRG     =4B7
       LDB     =77B6
       LDX     MNBUFF
FLUSH1 SKN     BTAB2E,2
       BRU     FLUSH2
       SKM     BTAB1E,2
       BRU     FLUSH2
       CALL    WRITE1
FLUSH2 BRX     FLUSH1
       LDA     FNDEX
       LDB     FLSAV2
       LDX     FLSAV3
       RET
$WRITE1 SKN    BTAB1E,2
       RET
       SKN     BTAB2E,2
       RET
       STA     WRSAV1
       STB     WRSAV2
       STX     BNDEX2
       LDA     BTAB2E,2
       ETR     =37777B
       STA     BADDR2
       LDA     BTAB1E,2
       ETR     =@77B6
       STA     BLCK2
       LDB     BTAB1E,2
       LSH     6
       ETR     =37B
       CAX
       SKN     FILES,2
       BRU     *+2
       RET
       LDA     FILES,2
       STA     TFILE2
       LDA     BLCK2
       MUL     =3*256
       LSH     23
       STA     CURSE2
       MRG     =4B7
       SCP     TFILE2
       FERR    WRERR1
       LDX     FNDEX
       LDA     CURSE2
       SKG     EOFTB2,2
       BRU     *+2
       FERR    SYSERR
       SKE     EOFTB2,2
       BRU     *+2
       FERR    SYSERR
       ADD     =3*256
       LDB     =256
       STB     LEN
       SKG     EOFTB2,2
       BRU     WRITE2
       SUB     EOFTB2,2
       RSH     23
       DIV     =3
       CNA
       ADD     =256
       STA     LEN
       MUL     =3
       LSH     23
       ADD     CURSE2
WRITE2 STA     TD
       LDA     LEN
       LDX     BADDR2
       DISABL
       BIO     TFILE2
       FERR    WRERR2
       LDX     FNDEX
       LDA     TD
       SKG     EOFTB2,2
       BRU     *+2
       STA     EOFTB2,2
       LDX     BNDEX2
       LDA     BTAB2E,2
       ETR     =@4B7
       STA     BTAB2E,2
       LDA     WRSAV1
       LDB     WRSAV2
       ENABLE
       RET
SYSERR ASC     "SYSTEM ERROR: BAD EOF TABLE/"
WRERR1 ASC     "CANNOT SET CURSOR FOR WRITE/"
WRERR2 ASC     "WRITE ERROR/"
$RFNAME LDA    =NBUFF*3-1
       STA     NPTR
       STA     NPTR+1
RFNL   BRM*    GETCHR
       LDX     CHRTBE
       SKE     CHRTBE,2
       BRU     *+2
       BRU*    EDITE,2
       BRX     *-3
       WCI     NPTR
       BRU     RFNL
CHRTB  DATA    141B,167B,161B,152B,155B
CHRTBE DATA    CHRTB-*
EDIT   DATA    CA,CW,CQ,CRLF,CRLF
EDITE  EQU     *
CA     TCO     ="_"
       GCD     NPTR
       BRU     RFNAME
       BRU     RFNL
CW     TCO     ="\"
       GCD     NPTR
       BRU     RFNAME
       SKU     =0
       BRU     *-3
CWL    GCD     NPTR
       BRU     RFNAME
       SKE     =0
       SKU     =","
       BRU     *+2
       BRU     CWL
       WCI     NPTR
       BRU     RFNL
CQ     TCO     ="^"
       TCO     =155B
       BRU     RFNAME
CRLF   LDA     NPTR
       LDB     NPTR+1
       RET
$ESCR  NOP     CTEMP
       LDA     TRPMSK
       BRS     78
       BRM*    CLSIN
       BRM*    CLSOUT
       CLA
       STA     CHRFLG
       LDX     =-1
       BRS     11
       BRS     29
       TCO     =155B
       TCO     =155B
       BRU     DIS
$SFLW  ZRO
$SOPW  ZRO
$SHFILL ZRO
HMASK1 EQU     777B
HMASK2 EQU     17B
HPRIME EQU    16001
$HSRCH XAB
       ETR     =7777B4
       XAB
       SKE     =0
       BRU     *+2
       ERROR   BADSYM
       STA     NAM1
       STB     NAM2
       LRSH    11
       DIV     =HPRIME
       ETR     =HMASK1
       STA     HPTR
       ETR     =HMASK2
       MRG     =1
       MUL     =HENTL
       LRSH    1
       STB     HSTEP
       LDA     HPTR
       MUL     =HENTL
       LSH     23
       STA     HPTR
RETRY  CAX
       LDA     HTAB+1,2
       SKE     =0
       BRU     *+2
       RET
       SKE     NAM1
       BRU     RESTEP
       LDA     HTAB+2,2
       SKA     =KILLED
       BRU     RESTEP
       ETR     =7777B4
       SKE     NAM2
       BRU     RESTEP
       MIN*    CALPTR
       RET
RESTEP LDA     HPTR
       SUB     HSTEP
       SKA     =4B7
       ADD     =HTABL
       STA     HPTR
       BRU     RETRY
$HADD  CALL    HSRCH
       BRU     HFIND
       LDA     HTAB+3,2
       SKE     OPVAL
       BRU     HADD2
       LDA     HTAB+2,2
       ETR     =7777B4
       MRG     TAG
       LDB     OPVAL
       STA     HTAB+2,2
       STB     HTAB+3,2
       RET
HADD2  LDA     HTAB+2,2
       MRG     =KILLED
       STA     HTAB+2,2
       LDA     NAM1
       LDB     NAM2
       BRU     HADD
HFIND  LDA     HFILL
       SKG     =HFULL
       BRU     *+2
       ERROR   SFULL
       CXA
       ADD     =1
       STA     HPTR
       LDA     NAM1
       STA     HTAB+1,2
       LDA     NAM2
       MRG     TAG
       STA     HTAB+2,2
       LDA     OPVAL
       STA     HTAB+3,2
       LDA     TAG
       EAX     OPW
       SKA     =PRT2
       EAX     FLW
       BRU     GTEST
HGO1   LRSH    12
HGO2   ETR     =7777B
       ADD     =HTAB-1
       CAX
       LDA     OPVAL
       SKG     3,2
       BRU     *+2
       BRU     GTEST
       SKE     3,2
       BRU     HLT
GTEST  LDA     0,2
       SKA     =7777B
       BRU     HGO2
       MRG     HPTR
       DISABL
       STA     0,2
       LDX     HPTR
       CLA
       STA     HTAB-1,2
       MIN     HFILL
       ENABLE
       RET
HLT    LDA     0,2
       SKA     =7777B4
       BRU     HGO1
       STA     HSAVE
       LDA     HPTR
       LSH     12
       ETR     =7777B4
       MRG     HSAVE
       DISABL
       STA     0,2
       LDX     HPTR
       CLA
       STA     HTAB-1,2
       MIN     HFILL
       ENABLE
       RET
SFILL  ASC     "SYMBOL TABLE IS FULL/"
$BADSYM ASC     "ILLEGAL SYMBOL/"
SFULL  ASC     "SYMBOL TABLE FULL/"
$FSRCH EAX     FLW
       BRU     *+3
$OSRCH ETR     =OPMASK
       EAX     OPW
       STA     OPVAL
       BRU     OGT
NX1    LRSH    12
NX2    ETR     =7777B
       ADD     =HTAB-1
       CAX
       LDA     OPVAL
       SKE     3,2
       BRU     NX4
       LDA     2,2
       SKA     =KILLED
       BRU     NX3
       SKA     =PRT0
       BRU     NX3
       MIN*    CALPTR
       RET
NX3    LDA     OPVAL
NX4    SKG     3,2
       BRU     *+2
       BRU     OGT
       SKE     3,2
       BRU     OLT
OGT    LDA     0,2
       SKA     =7777B
       BRU     NX2
       RET
OLT    LDA     0,2
       SKA     =7777B4
       BRU     NX1
       RET
OPMASK EQU     577B5
$ASRCH EAX     FLW
       STA     OPVAL
       LDB     =241B
       STB     OFFSET
       BRU     NA4
NA0    LRSH    12
NA1    ETR     =7777B
       ADD     =HTAB-1
       CAX
       LDA     OPVAL
       SKE     3,2
       BRU     NA3
       LDA     2,2
       SKA     =KILLED
       BRU     NA2
       SKA     =PRT0
       BRU     NA2
       CLA
       STA     OFFSET
       MIN*    CALPTR
       RET
NA2    LDA     OPVAL
NA3    SKG     3,2
       BRU     *+2
       BRU     NA3C
       SKE     3,2
       BRU     NA5
NA3C   LDB     2,2
       SKB     =KILLED
       BRU     NA4
       SKB     =PRT0
       BRU     NA4
       SUB     3,2
       SKG     OFFSET
       BRU     *+2
       BRU     NA4
       SKE     OFFSET
       BRU     *+2
       BRU     NA4
       STA     OFFSET
       STX     SAVEX2
NA4    LDA     0,2
       SKA     =7777B
       BRU     NA1
       BRU     NAD
NA5    LDA     0,2
       SKA     =7777B4
       BRU     NA0
NAD    LDA     OFFSET
       SKG     =240B
       BRU     *+2
       RET
       LDX     SAVEX2
       MIN*    CALPTR
       RET
$ROPC  CLB
       STB     NAM1
       STB     NAM2
       TCL     CHAR
       SKG     ="Z"
       SKG     ="A"-1
       FERR    BADS1
       LDX     =-7
OPLOOP TCL     CHAR
       SKG     ="Z"
       SKG     ="A"-1
       BRU     *+2
       BRU     OPL2
       SKG     ="9"
       SKG     ="0"-1
       BRU     OPE
OPL2   TCI     CHAR
       BRX     *+2
       BRU     OPLOOP
       LSH*    OTAB1+6,2
       ADM*    OTAB2+6,2
       BRU     OPLOOP
OTAB1  DATA    18,12,6,0,18,12
OTAB2  DATA    NAM1,NAM1,NAM1,NAM1,NAM2,NAM2
OPE    LDA     NAM1
       LDB     NAM2
       SKE     =0
       RET
       ERROR   BADS1
$BADS1 ASC     "BAD SYMBOL/"
$RSTRG LDA*    SEMIT
       LRSH    1
       SUB     =3
       SKG     =1
       SKG     =-1
       ERROR   STGBAD
       CAX
       LDA     RTAB1,2
       STA     TINST
       LDA     RTAB2,2
       STA     TMASK
       LDX     RTAB3,2
       CLAB
       STA     TNUM
       XMA     XCHAR
       SKA     =4B7
       BRU     RLOOP
       BRU     RLOOP+1
RTAB1  LSH*    RTAB4+4,2; LSH* RTAB5+3,2
RTAB2  DATA    77B,377B
RTAB3  DATA    -4,-3
RTAB4  DATA    18,12,6,0
RTAB5  DATA    16,8,0
RLOOP  BRM*    GETCHR
       SKE     ="V"+100B
       BRU     *+3
       BRM*    GETCHR
       BRU     RSTRG2
       SKE     ="D"+100B
       BRU     RSTRG2
RLD    LDB     =-1
       LDA     TNUM
       TCO     =2
       RET
RSTRG2 ETR     TMASK
       EXU     TINST
       ADM     TNUM
       BRX     RLOOP
       BRM*    GETCHR
       SKE     ="D"+100B
       BRU     *+2
       BRU     RLD
       STA     XCHAR
       LDA     TNUM
       RET
STGBAD ASC     "SEMIT NOT 6 OR 8/"
$DOWN  SKG     =0
       RET
       PUSH    TMPSTK
       CAX
       LDA     HTAB-1,2
       ETR     =7777B
       CALL    DOWN
       LDX*    TMPSTK
       LDA     HTAB-1,2
       LRSH    12
       CALL    DOWN
       POP     TMPSTK
       CAX
       LDA     HTAB+1,2
       SKA     =KILLED
       RET
       LDA     HTAB,2
       WIO     TFILE
       LDA     HTAB+1,2
       WIO     TFILE
       LDA     HTAB+2,2
       WIO     TFILE
       MIN     COUNT
       RET
$MSETUP LDA    COMCNT
       SKE     =4
       BRU     MPER3
       LDX     =-5
       LDINT   ARG1+5,2
       STA*    MPTB1+5,2
       BRX     *-2
       BRU     MPER3
MPTB1  DATA    FROMF,FROMA,TOF,TOA,COUNT
MPTB2  DATA    FROMA,TOA,COUNT
MPER2  SKE     =2
       FERR    MARGQ
       LDX     =-3
       LDINT   ARG1+3,2
       STA*    MPTB2+3,2
       BRX     *-2
       LDA*    SEMIX
       STA     FROMF
       STA     TOF
MPER3  LDX     FROMF
       SKN     FILES,2
       BRU     *+2
       FERR    FILE1Q
       LDX     TOF
       SKN     FILES,2
       BRU     *+2
       FERR    FILE2Q
       SKN     COUNT
       BRU     *+2
       FERR    NEGCNT
       SKN     FROMA
       BRU     *+2
       FERR    ADD1Q
       SKN     TOA
       BRU     *+2
       FERR    ADD2Q
       TCO     =155B
       RET
FILE1Q ASC     "FIRST FILE NOT OPEN/"
FILE2Q ASC     "SECOND FILE NOT OPEN/"
NEGCNT ASC     "COUNT IS NEGATIVE/"
MARGQ  ASC     "MUST HAVE EITHER 3 OR 5 ARGUMENTS/"
ADD1Q  ASC     "FIRST ADDRESS IS NEGATIVE/"
ADD2Q  ASC     "SECOND ADDRESS IS NEGATIVE/"
       END
FET ** FICHE/FRAME BREAK *****
FETSUB SYMSORT

SYM.  PG.LN. IDENT.

ADD1Q  20 25         ADD2Q  20 26         ASRCH  15 23         
BADFIL  6 19         BADS1  17 29         BADSYM 14 25         CA     10 21         
CHRTB  10 17         CHRTBE 10 18         CLERR1  7 10         CLINR   2  8         
CLOSE   6 21         CLOSE2  7  8         CLOUTR  2 25         CLSIN   1 31         
CLSOUT  2  9         CPOP    1  9         CPOP    1  7         CQ     10 38         
CRLF   11  2         CW     10 25         CWL    10 30         D(1)    1  6         
DOWN   18 37         EDIT   10 19         EDITE  10 20         ESCR   11  5         
FETCH   3 17         FETSUB  1  3         FILE1Q 20 21         FILE2Q 20 22         
FLUSH   7 32         FLUSH1  8  1         FLUSH2  8  6         FREADY  6  6         
FSRCH  14 27         GFND    5 32         GFND2   5 36         GFREE   4  1         
GLOOP   3 32         GTEST  13 35         HADD   12 27         HADD2  12 39         
HFIND  13  6         HGO1   13 25         HGO2   13 26         HLT    14  8         
HMASK1 11 21         HMASK2 11 22         HPRIME 11 23         HSRCH  11 24         
MARGQ  20 24         MPER2  19 32         MPER3  20  2         MPTB1  19 30         
MPTB2  19 31         MSETUP 19 22         NA0    15 28         NA1    15 29         
NA2    16  5         NA3    16  6         NA3C   16 11         NA4    16 25         
NA5    16 29         NAD    16 32         NEGCNT 20 23         NX1    14 33         
NX2    14 34         NX3    15  8         NX4    15  9         OGT    15 14         
OLT    15 18         OPE    17 24         OPL2   17 16         OPLOOP 17  8         
OPMASK 15 22         OSRCH  14 29         OTAB1  17 22         OTAB2  17 23         
POPS    1  5         RDONE   5 25         READ1   4 19         READ2   5  9         
READ2T  5  8         READER  6  2         REL1    7 19         REL2    7 27         
RELEAS  7 11         RESTEP 12 21         RETRY  12  6         RFNAME 10  6         
RFNL   10  9         RLD    18 21         RLOOP  18 14         ROPC   16 39         
RSTRG  17 30         RSTRG2 18 25         RTAB1  18  9         RTAB2  18 10         
RTAB3  18 11         RTAB4  18 12         RTAB5  18 13         SCPER1  6  5         
SCPERR  6  4         SFILL  14 24         SFLW   11 18         SFULL  14 26         
SHFILL 11 20         SKU     1  4         SOPW   11 19         STGBAD 18 36         
STORE   2 27         STORE2  3  3         STORE3  3 15         SYSERR 10  3         
TOOBIG  6  3         TOOM    6 20         WRERR1 10  4         WRERR2 10  5         
WRITE1  8 11         WRITE2  9 23         ZLOOP   5  3         
FET ** FICHE/FRAME BREAK *****
FETSYMS
       NOLIST  ALL
       LIST    LCT,SLCT,SRC,COM,CALL,DEF,EXT,GO
SYMS   IDENT   ***FETSYMS 5/15/72/ JPS***
SKU    OPD     536B5,2
POPS   MACRO   D
D(1) OPD ($100B+CPOP).&*1B5,D(2)
CPOP EQU CPOP+1
 ENDM
CPOP   EQU     0
       POPS    TYPE,(2)
       POPS    CALL,(2)
       POPS    RET,(1)
       POPS    SET,(2)
       POPS    RESET,(2)
       POPS    SKSET,(2)
       POPS    SKUSET,(2)
       POPS    ERROR,(2)
       POPS    FERR,(2)
       POPS    TCI,(2)
       POPS    TCL,(2)
       POPS    TCO,(2)
       POPS    PUSH,(2)
       POPS    POP,(2)
       POPS    LDW,(2)
       POPS    LDINT,(2)
       POPS    LDFLT,(2)
       POPS    STINT,(2)
       POPS    STFLT,(2)
       POPS    ENABLE,(1)
       POPS    DISABL,(1)
DOP    MACRO   D
Y      NARG
       RPT     (X=2,Y)
       TEXT    ".&D(X$1,4).&"
Z      NCHR    D(X)
Q      EQU     D(1)
       IF      Z>4
Q      EQU     Q+".&D(X$5).&"*1B6
       ENDF
       IF      Z>5
Q      EQU     Q+".&D(X$6).&"*1B4
       ENDF
       DATA    Q
       D(X)    0
       ENDR
       ENDM
$KILLED EQU    2B2             KILLED SYMBOL.
$PRT0  EQU     1               NEVER PRINTED, ONLY ACCEPTED FOR INPUT
$PRT1  EQU     2               ALWAYS PRINT ADDRESS FIELD
$PRT2  EQU     4               NEVER PRINT ADDRESS FIELD
$PRT3  EQU     10B             PRINT ADDRESS FIELD IF NON-ZERO
$INSTB DOP     PRT1,LDA,STA,LDB,STB,LDX,STX,EAX,XMA
       DOP     PRT1,ADD,ADC,ADM,MIN,SUB,SUC,MUL,DIV
       DOP     PRT1,ETR,MRG,EOR
       DOP     PRT2,CLA,CLB,CLAB,CLX,CLEAR,CAB,CBA,XAB,BAC
       DOP     PRT2,ABC,CXA,CAX,XXA,CBX,CXB,XXB,STE,LDE,XEE
       DOP     PRT2,CNA,AXC
       DOP     PRT1,RCH,BRU,BRX,BRM,BRR,BRI
       DOP     PRT1,SKS,SKE,SKG,SKR,SKM,SKN,SKA,SKB,SKD
       DOP     PRT1,RSH,RCY,LRSH,LSH,LCY,NOD
       DOP     PRT3,NOP
       DOP     PRT2,BPT1,BPT2,BPT3,BPT4
       DOP     PRT2,ROV,REO,OVT,OTO
       DOP     PRT2,EIR,DIR,AIR,IET,IDT
       DOP     PRT2,ALCW,DISW,ASCW,TOPW
       DOP     PRT2,CATW,CETW,CZTW,CITW
       DOP     PRT1,EOD,MIW,WIM,PIN,POT,EOM
       DOP     PRT2,BETW,BRTW
       DOP     PRT2,TSN,CKN,CKF,LRR1,LRR2,LRR3
       DOP     PRT1,BIO,BRS,CIO,CIT
       DOP     PRT1,FAD,FDV,FFAD,FFADD,FFDI,FFDID
       DOP     PRT1,FFDV,FFDVD,FFMP,FFMPD,FFSB,FFSBD,FFSI,FFSID
       DOP     PRT1,FMP,FSB,GCD,GCI,ISC,LDP,LDFM,LDFMD
       DOP     PRT1,SBRM,SBRR,SIC,SKSE,SKSG,STFM,STFMD
       DOP     PRT1,STP,TCI,TCO,WCD,WCH,WCI,WIO
       DOP     PRT0,HLT,ZRO
$INSTL DATA    INSTB-*
$SYMINT ZRO
       CLA
       LDB     =1
       EAX     *+2
       BRU     INIT
       CLA
       STA     FLW
       STA     OPW
       STA     HFILL
       LDX     INSTL
SYML   LDA     INSTL+2,2
       STA     OPVAL
       LDA     INSTL+1,2
       ETR     =7777B
       STA     TAG
       LDA     INSTL,2
       LDB     INSTL+1,2
       STX     SYMX
       CALL    HADD
       LDX     SYMX
       EAX     2,2
       BRX     SYML
       LDA     FLW
       STA     SFLW
       LDA     OPW
       STA     SOPW
       LDA     HFILL
       STA     SHFILL
       BRR     SYMINT
       END
FET ** FICHE/FRAME BREAK *****
FETSYMS SYMSORT

SYM.  PG.LN. IDENT.

CPOP    1  9         CPOP    1  7         D(1)    1  6         
DOP     1 31         INSTB   2 13         INSTL   2 38         KILLED  2  8         
POPS    1  5         PRT0    2  9         PRT1    2 10         PRT2    2 11         
PRT3    2 12         Q       2  2         Q       1 38         Q       1 36         
SKU     1  4         SYMINT  2 39         SYML    3 10         SYMS    1  3         
Y       1 32         Z       1 35         
FET ** FICHE/FRAME BREAK *****
FETCMD
NARP
FETDIS
BDIS

LDIS

NARP
FETCOM
BCOM

LCOM

NARP
FETSCAN
BSCAN

LSCAN

NARP
FETPRT
BPRT

LPRT

NARP
FETSUB
BSUB

LSUB

NARP
FETPOPS
BPOPS

LPOPS

NARP
FETSYMS
BSYMS

LSYMS

COM FETLOAD
FET ** FICHE/FRAME BREAK *****
FETLOAD
RESET
XDDT
0;TBDIS
;TBCOM
;TBSCAN
;TBSUB
;TBPRT
;TBPOPS
;F/SEMIF:BUFFST;TBSYMS
SEMIF;F;UBRM SYMINT;UHTAB=;F-1=START=%QDUMP DEBUG

COM T
   u+d"