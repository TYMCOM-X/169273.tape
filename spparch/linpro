LINPROG ** FICHE/FRAME BREAK *****
LINPROGSYM
      DIMENSION A(30,98),NSIGN(30),B(30),C(98),Z(98),IBASE(30),CB(30)
      DIMENSION LIST(77),LSTADD(5),ZMC(98),NAME(20),XXYYXX(2)
      IF(LISTFLAG) 1,9999,1
9999  OPEN(2,INPUT,LPLIST)
      CALL RDLIST(LIST,LSTADD,2)
      LISTFLAG=1
      STOP
1     ASSIGN 299 TO NESC1
       NSOLU=0
       NO=1
      CALL DCLESC(NESC1)
      CALL ARM
      TYPE 1000
1000  FORMAT(//$LINEAR PROGRAMMING PROGRAM$/)
       GO TO 301
C
C
C STANDARD FRONT END FOR TYMESHARE PROGRAMS
C 
C
C
601    XXYYXX(1)=6H(@6LI) ; XXYYXX(2)=6HLPCAP 
       GO TO 6000
602    XXYYXX(1)=6H(@6LI) ; XXYYXX(2)=6HLPINS 
6000   CALL COPY(XXYYXX,1HT)
       GO TO 301
603    TYPE 604
604    FORMAT(/$ANALYSIS PORTION COURTESY-PEAT,MARWICK AND LIVINGSTON,$
+ $INC$/$INTERFACE-TYMSHARE,INC$/)
       GO TO 301
605    TYPE 606
606    FORMAT($NO PREMIUM CHARGE$/)
       GO TO 301
607    TYPE 608
608    FORMAT($VERSION 3.0$/)
C
C
C      COME BACK TO HERE NORMALLY
C
C
C
301   TYPE 300
       NREAD=0
300   FORMAT(/$:$)
      CALL EDIT EMPTY
      IF(JESCNEW(IRLDUM)) 301,301,302
299   CALL ARM
      CLOSE
      CALL BRS(29,0,0,-1)
      GO TO 301
302   CALL EDIT SAVE
       IF(NO) 30211,30211,3022
30211  IF(NSOLU) 3021,3021,3022
3021  GO TO(303,301,3031,360,9500,370,375,380,390,400,4777,4888,601,602,
+603,605,607,390,4888),KOMMAND(1,1)+2
3022  GO TO(303,301,3031,360,9500,3023,3023,3023,3023,3023,3023,4888,601,602,
+603,605,607,3023,4888),KOMMAND(1,1)+2
3023   IF(NSOLU) 30231,30231,30232
30232  TYPE 30233
30233  FORMAT(/$MATRIX OVERWRITTEN IN COURSE OF SOLUTION$/)
       GO TO 301
30231  TYPE 3024
3024   FORMAT(/$ENTER CONSTRAINTS FIRST !$//)
      GO TO 301
C
C
C      HELP  !A SOCCORO !
C
C
4888  XXYYXX(1)=6H(@6LI) ; XXYYXX(2)=6HLPHLP 
       GO TO 6000
C
C
C     WRITE
C
C
400   IF(FILE(NAME,-1,3,J,6HSYMOUT)) 401,401,410
401   TYPE 403
403   FORMAT($TO: $)
      IF(JESCNEW(IRLDUM)) 401,299,400
410   WRITE 3,310,NROW,NVAR
      DO 411 I=1,NROW
      DO 411 J=NROW+1,NROW+NVAR
411   WRITE 3,311,A(I,J)
      DO 412 I=NROW+1,NROW+NVAR
412   WRITE 3,311,C(I)
      DO 413 I=1,NROW
413   WRITE 3,315,NSIGN(I),B(I)
       WRITE 3,372
      CLOSE
      GO TO 301
C
C
C
C     ENTER
C
C
3031  TYPE 3032
      NG=0
       NSOLU=0
3032  FORMAT($# 1 $)
      IF(JESCNEW(IRLDUM)) 301,301,3033
3033  IF(NUMBER(X)) 305,305,320
C
C
C      LIST
C
C
370   IF(NVAR*NROW) 301,301,3700
3700  IF(KOMMAND(4,1)) 371,378,3750
371   IF(NUMBER(X)) 305,378,373
373   NM=X
      TYPE 3740,(A(NM,J),J=NROW+1,NVAR+NROW)
3740   FORMAT(5F13.6)
      TYPE 3721,NSIGN(NM),B(NM)
3721  FORMAT(A1,F12.6/)
372   FORMAT(/)
      GO TO 301
3750   TYPE 3740,(C(I),I=NROW+1,NROW+NVAR)
      TYPE 372
      GO TO 301
378   DO 379 I=1,NROW
      TYPE 3740,(A(I,J),J=NROW+1,NVAR+NROW)
      TYPE 3721,NSIGN(I),B(I)
379   CONTINUE
      GO TO 3750
C
C
C      READ
C
C
360    NREAD=1
      IF(NOWCHR(0)) 3601,3601,304
3601  TYPE 3602
3602  FORMAT($FROM FILE: $)
      IF(JESCNEW(IRLDUM)) 3601,301,304
C
C
C      CHANGE
C
C
375   IF(NOWCHR(0)) 391,391,3911
391   TYPE 3910
3910  FORMAT($CHANGE WHAT ? $)
      IF(JESCNEW(IRLDUM)) 301,301,3911
3911  IF(NUMBER(X)) 3912,391,3926
3912  GO TO (391,391,3913,3924),KOMMAND(4,1)+2
C
C      COST
C
3913  CALL KOMMA(0)
      IF(NOWCHR(0)) 3922,3922,3915
3915  IF(NUMBER(X)) 391,3922,3916
3916   MS=X
      IF(MS-NVAR) 3917,3917,391
3917  MS=MS+NROW
      TYPE 3740,C(MS)
      TYPE 372
3920  IF(JESCNEW(IRLDUM)) 301,301,3918
3918  IF(NUMBER(X)) 3919,3919,3921
3919  TYPE 325
      GO TO 3920
3921  C(MS)=X
      GO TO 3501
3922  TYPE 3740,(C(I),I=NROW+1,NROW+NVAR)
      TYPE 372
      IF(JESCNEW(IRLDUM)) 301,301,3923
3923  I=NROW
      GO TO 3341
C
C     RHS
C
3924  CALL KOMMA(0)
      IF(NUMBER(X)) 391,391,3925
3925  MR=X
      GO TO 3931
3926  MR=X
      CALL KOMMA(0)
      IF(NUMBER(X)) 3928,3945,3940
3928  IF(KOMMAND(4,1)-2) 391,3931,391
3931  TYPE 3721,NSIGN(MR),B(MR)
3933  IF(JESCNEW(IRLDUM)) 301,301,3932
3932  GO TO (3938,3934,3935,3936,3937),KOMMAND(3,-1)+2
3934  TYPE 325
      GO TO 3933
3935  NSIGN(MR)=1H<
      GO TO 3938
3936  NSIGN(MR)=1H=
      GO TO 3938
3937  NSIGN(MR)=1H>
3938  IF(NUMBER(X)) 3934,340,3939
3939  B(MR)=X
      GO TO 340
3940  MS=NROW+X
      TYPE 3740 ,A(MR,MS)
      TYPE 372
3943  IF(JESCNEW(IRLDUM)) 301,301,3941
3941  IF(NUMBER(X))3942,301,3944
3942  TYPE 325
      GO TO 3943
3944  A(MR,MS)=X
      GO TO 301
3945  TYPE 3740,(A(MR,J),J=NROW+1,NVAR+NROW)
      TYPE 3721,NSIGN(MR),B(MR)
3947  J=0
      IF(JESCNEW(IRLDUM)) 301,301,3946
3946  IF(NUMBER(X)) 3932,301,3949
3948  TYPE 325
      GO TO 3947
3949  J=J+1
      A(MR,NROW+J)=X
      CALL KOMMA(0)
      GO TO 3946
C
C
C      SOMETHING NOT VERY NICE THIS WAY COMES
C
C
303   CALL EDIT RESTORE
      IF(NUMBER(X)) 304,301,320
C
C       FROM A FILE (MAYBE)
C
304   ON  END FILE NALL,X1
       ASSIGN 307 TO NALL
      IF(FILE(NAME,-1,3,J,6HSYMINP)) 305,305,308
305   TYPE 306
306   FORMAT(/$**INVALID COMMAND !$/)
307   CLOSE
      GO TO 301
308   IF(J-3) 305,309,305
309   READ 3,310,NROW,NVAR
310   FORMAT(2I/)
       NSOLU=0
      DO 3100 I=1,30
      NSIGN(I)=0.
      B(I)=0.
      IBASE(I)=0.
      CB(I)=0.
      DO 3100 J=1,98
3100  A(I,J)=0.
      DO 3101 I=1,98
      C(I)=0.
      Z(I)=0.
3101  ZMC(I)=0.
      DO 312 I=1,NROW
      DO 312 J=NROW+1,NROW+NVAR
312   READ 3,311, A(I,J)
311    FORMAT(F15.6)
      DO 313 I=NROW+1,NROW+NVAR
313   READ 3,311,C(I)
      DO 314 I=1,NROW
314   READ 3,315,NSIGN(I),B(I)
315   FORMAT(A1,F14.6)
      CLOSE
      GO TO 340
C
C
C       HES TYPING THE COEFFS IN NOW !
C
320    NO=0
       NSOLU=0
      DO 3200 I=1,30
      NSIGN(I)=0.
      B(I)=0.
      IBASE(I)=0.
      CB(I)=0.
      DO 3200 J=1,98
3200  A(I,J)=0.0
      DO 3201 I=1,98
      C(I)=0.
      Z(I)=0.
3201  ZMC(I)=0.
      NROW=0
      NVAR=0
      NADD=0
      I=0
      J=0
321   I=I+1
322   J=J+1
      IF(NADD) 3221,3221,3222
3221  NVAR=J
3222  A(I,J)=X
323   CALL KOMMA(0)
      IF(NUMBER(X)) 326,324,322
324   TYPE 325
325   FORMAT(/$**INPUT ERROR-TYPE LINE OVER**$/)
C
      I=I-1
      GO TO 3311
326   GO TO(324,324,327,328,329),KOMMAND(3,-1)+2
327   NSIGN(I)=1H<
      GO TO 330
328   NSIGN(I)=1H=
      GO TO 330
329   NSIGN(I)=1H>
330   IF(NUMBER(X)) 324,324,331
331   B(I)=X
      IF(I-1) 332,332,3322
3322  IF(NADD) 3327,3327,3328
3328  IF(NVAR-J+NROW) 3323,3011,3323
3327  IF(NVAR-J) 3323,332,3323
C
C
C        ADDDDDDDDDDDDDDDD
C
C
4777  I=NROW
      J=NROW
      NADD=1
      GO TO 3312
3323  TYPE 3324
3324  FORMAT(/$DIFFERENT NO. OF VARIABLES FROM LINE ABOVE !**$/)
332   IF(NADD) 3311,3311,3011
3011  NROW=NROW+1
      CALL BRS(45)
      CALL ESCOFF
      DO 3330 I=1,NROW
      DO 3330 J= NROW+NVAR,NROW+1,-1
3330  A(I,J)=A(I,J-1)
      DO 3331 I=NROW+NVAR,NROW+1,-1
3331  C(I)=C(I-1)
      CALL ESCON
      GO TO 340
3311  J=0
3312  JT=I+1
3325  TYPE 3321 ,JT
3321  FORMAT($#$,I2,1X)
      IF(JESCNEW(IRLDUM)) 301,301,333
333   IF(NUMBER(X)) 334,324,321
334   IF(KOMMAND(4,1)) 324,324,3340
3340   NROW=I
3341   IF(NUMBER(X))3342,3361,335
3342  I=I+1
      GO TO 324
335   I=I+1
      C(I)=X
      IF((I-NROW)-NVAR) 336,337,337
336   CALL KOMMA(0)
      GO TO 3341
3361  TYPE 3362
3362  FORMAT(/$NOT ENOUGH COST COEFFICIENTS$/)
      I=JT-1
      GO TO 3325
337   DO 338 I=1,NROW
      DO 338 J=NVAR,1,-1
338   A(I,J+NROW)=A(I,J)
C
C
340    NO=0
   DO 343 I=1,NROW
      IF(B(I)) 341,343,343
341   B(I)=-B(I)
      DO 342 J=NROW+1,NROW+NVAR
342   A(I,J)=-A(I,J)
      IF(NSIGN(I)-1H>) 3420,3421,3420
3421   NSIGN(I)=1H<
      GO TO 343
3420   IF(NSIGN(I)-1H<) 343,3422,343
3422   NSIGN(I)=1H>
343   CONTINUE
C
      DO 345 I=1,NROW
      DO 344 J=1,NROW
344   A(I,J)=0.0
345   A(I,I)=1.
      K=1
      NG=0
      DO 3500 I=1,NROW
      IF(NSIGN(I)-1H>) 347,346,347
346   C(I)=-1E13
      NG=NG+1
      A(I,NROW+NVAR+K)=-1.
      K=K+1
      GO TO 3500
347   IF(NSIGN(I)-1H=) 3481,348,3481
348   C(I)=-1E13
      GO TO 3500
3481  C(I)=0.0
3500   CONTINUE
C
C
3501  DO 355 I=1,NROW
      IBASE(I)=I
355   CB(I)=C(I)
       IF(NREAD) 35544,35544,301
35544  TYPE 35555
35555  FORMAT(/$YOUR MATRIX WILL BE DESTROYED IN COURSE OF SOLUTION$//$WRITE $)
       GO TO 401
C
C
C
C      DETAILED SOLUTION
C
C
390   IFLAG=1
      TYPE 3903
3903  FORMAT(//$      VALUE       VECTORS IN THE PRESENT BASIS$//)
      GO TO 381
C
C
C      SOLUTION
C
C
380   IFLAG=2
381   M=NROW
       NSOLU=1
      N=NVAR+NROW+NG
      NR=NROW+1
      NRO=NROW+NVAR
19    SUM=0.
      DO 20 I=1,M
20      SUM=SUM+B(I)*CB(I)
      ZM=SUM
      DO 40 J=1,N
      SUM=0.
      DO 30 I=1,M
30    SUM=SUM+A(I,J)*CB(I)
40    Z(J)=SUM
      DO 50 J=1,N
50    ZMC(J)=Z(J)-C(J)
52    GO TO (55,65),IFLAG
55    TYPE 5500 ,ZM
5500  FORMAT(1PE15.5)
      DO 5501 I=1,M
      CALL SLACVEC(I,IBASE,NROW)
      IF((I/10)*10-I) 5501,5567,5501
5567  TYPE 372
5501  CONTINUE
      TYPE 372
65    T1=0.
      DO 80 J=1,N
      IF(ZMC(J)-T1) 70,80,80
70    T1=ZMC(J)
      KC=J
80    CONTINUE
      IF(T1) 90,85,85
85    DO 67 I=1,M
      IF(IBASE(I)-K1) 66,66,67
66    IF(B(I)) 266,67,266
67    CONTINUE
      TYPE 8500
8500  FORMAT(//$      BASE        VALUE$ /)
      DO 87 I=1,M
      TYPE 8777
8777  FORMAT(4X)
      CALL SLACVEC(I,IBASE,NROW)
87    TYPE 8701,B(I)
8701  FORMAT(F14.3/)
      TYPE 8700 ,ZM
8700  FORMAT(//$ OPTIMUM VALUE = $,1PE15.6/)
89    GO TO 301
90    KR=0
      T2=1E13
      DO 120 I=1,M
      IF(A(I,KC)) 120,120,100
100   RAD=B(I)/A(I,KC)
      IF(RAD-T2) 110,102,120
102   KT=I
      DO 104 J=1,N
      TQ=A(KR,J)/A(KR,KC)
      TX=A(KT,J)/A(KT,KC)
      IF(TX-TQ) 110,104,120
104   CONTINUE
110   T2=RAD
      KR=I
120   CONTINUE
      IF(KR) 130,250,130
130   PIVOT=A(KR,KC)
      DO 140 J=1,N
140   A(KR,J)=A(KR,J)/PIVOT
      B(KR)=B(KR)/PIVOT
      DO 180 I=1,M
      IT=I
      IF(IT-KR) 150,180,150
150   T3=A(I,KC)
      DO 160 J=1,N
      A(I,J)=A(I,J)-A(KR,J)*T3
160   CONTINUE
      B(I)=B(I)-B(KR)*T3
180   CONTINUE
      IBASE(KR)=KC
      CB(KR)=C(KC)
      GO TO 19
266   TYPE 6601
6601   FORMAT(//$NO FEASIBLE SOLUTION $//)
      GO TO 301
250   TYPE 2500
2500  FORMAT(//$SOLUTION UNBOUNDED$//)
      GO TO 301
C
C
C      QUIT
C
C
9500  CALL BRS(10)
9000  CLOSE
      END
      FUNCTION  JESCNEW(NESC)
      CALL NEWLINE(NESC)
      JESCNEW=NESC
      RETURN
      END
      SUBROUTINE SLACVEC(I,IBASE,NROW)
      DIMENSION IBASE(30)
      IF(IBASE(I)-NROW) 5502,5502,5507
5502  IF(IBASE(I)-10) 5503,5505,5505
5503  TYPE 5504,IBASE(I)
5504  FORMAT($   S$,I1)
      RETURN
5505  TYPE 5506,IBASE(I)
5506  FORMAT($  S$,I2)
      RETURN
5507  LVEC=IBASE(I)-NROW
      IF(LVEC-10) 5508,5510,5510
5508  TYPE 5509,LVEC
5509  FORMAT($   X$,I1)
      RETURN
5510  TYPE 5511,LVEC
5511  FORMAT($  X$,I2)
      RETURN
      END
LINPROG ** FICHE/FRAME BREAK *****
LPCAP
LINPROG IS A PROGRAM WHICH USES THE SIMPLEX METHOD TO MAXIMIZE
A LINEAR OBJECTIVE FUNCTION SUBJECT TO A GIVEN SET OF LINEAR EQUALITY/
INEQUALITY CONSTRAINTS.
THE METHOD EMPLOYED IN LINPROG CLOSELY APPROXIMATES THAT DESCRIBED
IN SECTION 4-10 OF HADLEY'S "LINEAR ALGEBRA".  A METHOD DEVELOPED
BY CHARNES HAS BEEN USED TO AVOID DEGENERACY.
FOR FURTHER INFORMATION ON SPECIFIC CAPABILITIES AND OPERATING
PROCEDURES FOR LINPROG, PLEASE REFER TO THE LINPROG DOCUMENT.
LINPROG ** FICHE/FRAME BREAK *****
LPHLP
LEGAL COMMANDS FOR LINPROG ARE:
ENTER - TO ENTER YOUR CONSTRAINTS
READ - TO READ CONSTRAINTS FROM A DATA FILE
QUIT - TO RETURN TO THE EXECUTIVE LEVEL
LIST - TO TYPE YOUR CONSTRAINTS TO THE TELETYPE
CHANGE - TO MODIFY A CONSTRAINT OR VECTOR
SOLUTION - TO OBTAIN AN ANALYSIS
DETAILED SOLUTION - TO OBTAIN A SOLUTION CONTAINING BASIS PRINTOUTS
WRITE - TO WRITE OUT YOUR CONSTRAINTS TO A DATA FILE
ADD - TO ADD CONSTRAINTS
HELP - TO REPRINT THIS FILE
CAPABILITIES - BRIEF DESCRIPTION OF LINPROGS CAPABILITIES
INSTRUCTIONS - HOW TO USE LINPROG
CREDITS  - AUTHOR(S)
CHARGES - PREMIUM CHARGE (IF ANY)
VERSION - PROGRAM VERSION NUMBER
FOR FURTHER INFORMATION ON THESE COMMANDS AND THE OPERATION
OF THE LINEAR PROGRAMMING PACKAGE,REFER TO THE LINPROG DOCUMENT.
LINPROG ** FICHE/FRAME BREAK *****
LPINS


TO CALL THE PROGRAM FROM THE EXECUTIVE, TYPE

   LINPROG (RETURN)

THE PROGRAM WILL RESPOND WITH :.  YOU CAN THEN RESPOND WITH A
COMMAND FROM THE FOLLOWING LIST.

ENTER - TO TYPE IN YOUR CONSTRAINTS
   LINPROG WILL TYPE #1. YOU RESPOND WITH COEFFICIENTS OF THE FIRST
   CONSTRAINT FOLLOWED BY <, =, OR > FOLLOWED BY THE RIGHT HAND SIDE
   OF THE INEQUALITY OR EQUATION.  CONSTRAINTS 2 THROUGH N ARE ENTERED
   SIMILARLY.  FINALLY, ENTER THE OBJECTIVE FUNCTION (COST LINE).

   FOR EXAMPLE:

   TO MAXIMIZE THE OBJECTIVE FUNCTION

     Z = 2 X1 + 17 X2 + 3.7 X3

   UNDER THE CONSTRAINTS

        X1 + 2 X2 + 3 X3 <10
     3 X1 + 5 X2 + 6.8 X3 = 20
          7.6 X2 + 2.7 X3 >  5

   PROCEED AS FOLLOWS:

     :ENTER (RETURN)
     #1 1,2,3<10 (RETURN)
     #2 3 5 6.8 = 20 (RETURN)
     #3 0,7.6 2.7 > 5 (RETURN)
     #4 COST 2 17 3.7 (RETURN)
     :                      NOW USE A SOLUTION OR DETAILED SOLUTION.

READ - TO READ AN INPUT MATRIX FROM A DATA FILE
WRITE - TO WRITE A DATA MATRIX TO A DATA FILE
   YOU MUST WRITE YOUR DATA (CONSTRAINTS, ETC.) BEFORE YOU DO A
   SOLUTION OR DETAILED SOLUTION BECAUSE THESE COMMANDS MODIFY
   THE DATA MATRIX.
LIST - TO LIST OUT ALL OR SOME OF YOUR CONSTRAINTS
CHANGE - TO CHANGE INDIVIDUAL COEFFICIENTS OR COMPLETE CONTRAINTS
SOLUTION - TO OBTAIN AN OPTIMUM SOLUTION ONLY
DETAILED SOLUTION - AS SOLUTION PLUS THE VALUE OF AND CONTENTS OF THE
                    BASIS AT EACH ITERATION
ADD - TO ADD OTHER CONSTRAINTS 
QUIT - TO RETURN TO EXECUTIVE LEVEL

LINPROG WILL ACCOMODATE UP TO 30 CONSTRAINTS. THE NUMBER OF COST
COEFFICIENTS IS RELATED TO THE NUMBER OF CONSTRAINTS BY THE FORMULA

   N + M + G =100
WHERE

N = NUMBER OF CONSTRAINTS
M = NUMBER OF COST COEFFICIENTS
G = NUMBER OF GREATER THAN (>) CONSTRAINTS
LINPROG ** FICHE/FRAME BREAK *****
LPLIST
4
17
3
ENTER
3
READ
3
QUIT
3
LIST
3
CHANGE
4
SOLUTION
7
DETAILED SOLUTION
3
WRITE
2
ADD
3
HELP
5
CAPABILITIES
5
INSTRUCTIONS
4
CREDITS
4
CHARGES
4
VERSION
2
RUN
2
?
1
2
;
3
2
<
2
=
2
>
2
3
COST
2
RHS
LINPROG ** FICHE/FRAME BREAK *****
LPSTRUCT
XFTC
I LINPROGSYM
C LINPROGBIN

XFOS
LINPROGBIN
"COMMAND"
"OVERLAY"
"XFL5"
"XFL1"
G
WRI LINPROG

Q
COM TEL
    