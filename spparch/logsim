LOGSIM ** FICHE/FRAME BREAK *****
L1GSINPSYM
C  L1GSINPSYM V4.03  2/18/71 RJT
       DIMENSION IELEM(2,19),ITRANS(2,19),IGEN(32),IFNAM(10)
       DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID
       COMMON IFNAM,ICOM,LENGTH,IFLG
       IF(-IDUM)2000
       OPEN(3,INPUT,$INST$)
       READ(3,40)(IGEN(1),I=1,62)
       READ(3,30)
30     FORMAT(/)
       READ(3,40)(IGEN(I),I=1,32)
40     FORMAT(A3)
       IDUM=1
       CLOSE(3)
       STOP


C TEST FOR FILE NAME
C2000   TYPE 4
4      FORMAT($LINK INP$/)
2000   TYPE 100
100    FORMAT(/)
       IFLAG=0
       CALL REARM
       CALL ALTMODE(2,IFLAG)
       IF(INTRP(1))5000
       DO 2001 I=144,1,-1
       IF(NCHAR(I))2001,2001,2002
2001   CONTINUE
2002   LENGTH=I
       DO 2003 I=1,LENGTH
       IF(NCHAR(I))2004,2004
2003   CONTINUE
       GO TO 2008
2004   IF(NCHAR(I+1))2008,2008   ;C MUST HAVE CHAR AFTER BLANK
       DO 2005 J=I+1,LENGTH
2005   NCHAR(J-I)=NCHAR(J)
       LENGTH=LENGTH-I
       GO TO 2011
2008   TYPE 2010
2010   FORMAT($INPUT FROM: $)
       OPEN(3,INPUT,$TEL$)
       CALL STRING(NCHAR,LENGTH,IEND,1,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)5000
2011   IBIN=3   ;C SYMBOLIC FILE
       IOFILE=3
       IOD=2
       IST=-2
       DO 2012 I=1,10
       IST=IST+3
       IFIN=IST+2
       CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       IFNAM(I)=NALPH1
2012   CONTINUE
       TYPE 2013
2013   FORMAT(/)
       CALL OPEN(IOD,LENGTH,IFNAM,IOFILE,IBIN)
       IF(IOD)5000,2014,2016
2014   ITEL=1
       GO TO 2020
2016   IF(IOD-2)2000,2000
2017   ITEL=2
       IPN=3
2020   IF(1-ITEL)2035
       TYPE 2030
2030   FORMAT($BLK DES: $)
       IPN=IFN
2035   CALL STRING(NCHAR,LENGTH,IEND,2,ITEL,IFLAG,LABEL,IPN)
       IF(-IFLAG)5000
       GO TO (2040,5000)IEND
2040   IF(LENGTH)5000,5000
2050   CALL BLKDES(NCHAR,LENGTH,NELEM,IELEM,NERROR,IPRES,NTYPE)
       IF(NERROR)2070,2070
2060   CALL ERROR(NERROR,NCHAR,LENGTH,ITEL)
       IFN=3
       GO TO 2020
2070   DO 2072 I=1,LENGTH
       IF(NCHAR(I)-1H,)2072,2074
2072   CONTINUE
2074   IFIN=I-1
       CALL ALPHA(NCHAR,1,IFIN,NALPH1,NALPH2,IE)
       GO TO (2076,2075)IE
2075   NERROR=2  ;C INVALID BLOCK NO. DES.
       GO TO 2060
2076   CALL GIVENO(NALPH1,NALPH2,NUM,IPRES,IE)
       GO TO (2079,2078,2077)IE
2077   NERROR=3  ;C NO. OF BLOCKS EXCEEDS 250
       GO TO 2060
2078   NERROR=11 ;C BLOCK PRESENTLY BEING USED
       GO TO 2060
2079   IELEM(1,1)=NUM
       IPRES(NUM+250)=NALPH1
       IPRES(-NUM-250)=NALPH2
       IF(NTYPE-22)2200
C  BLOCK TYPES >=22
       IF(NTYPE-22)2090,2086
       IF(NTYPE-23)2090,2086
       IF(NTYPE-24)2090,2086
       IF(NTYPE-26)2090,2086
       IF(NTYPE-28)2090,2086
       IF(NTYPE-30)2090,2086
       IF(NTYPE-31)2090,2090
2086   IF(33-IELEM(1,4))2088,2090,2090
2088   NERROR=16   ;C GENERATED BLOCKS EXEEDS LIMITS
       GO TO 2060
2090   CALL BLKGEN(NTYPE,IELEM,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,
          IPOINT,NERROR,IPRES,IREACT,IGEN)
       IF(NTYPE-30)2095,2091,2092
2091   IWID=IELEM(1,4)
       GO TO 2095
2092   DO 2094 I=1,32
       IF(IPRES(-NUM-250)-IGEN(I))2094,2093,2094
2093   IWID=I+1
2094   CONTINUE
2095   IF(NERROR)2020,2020,2060
2200   CALL NORMBK(IELEM,NELEM,NTYPE,ITRANS,NCHAR,LENGTH,ITEL,
         IPRES,IREACT,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IGEN)
       IF(NERROR)2020,2020,2060
5000   IFLAG=0
       CLOSE (3)
       DO 5010 I=1,144
5010   NCHAR(I)=0
       CALL DISALT
       CALL LINK(12,LINK1)
       END
LOGSIM ** FICHE/FRAME BREAK *****
L1GSINPSYM SYMSORT

SYM.  PG.LN. IDENT.

100     1 28 C       2000    1 27 C       2001    1 35 C       2002    1 36 C       
2003    1 39 C       2004    2  2 C       2005    2  4 C       2008    2  7 C       
2010    2  8 C       2011    2 12 C       2012    2 21 C       2013    2 23 C       
2014    2 26 C       2016    2 28 C       2017    2 29 C       2020    2 31 C       
2030    2 33 C       2035    2 35 C       2040    2 38 C       2050    2 39 C       
2060    3  2 C       2070    3  5 C       2072    3  7 C       2074    3  8 C       
2075    3 11 C       2076    3 13 C       2077    3 15 C       2078    3 17 C       
2079    3 19 C       2086    3 31 C       2088    3 32 C       2090    3 34 C       
2091    3 37 C       2092    3 39 C       2093    4  2 C       2094    4  3 C       
2095    4  4 C       2200    4  5 C       30      1 16 C       4       1 26 C       
40      1 18 C       5000    4  9 C       5010    4 12 C       
C       3 23 C       C       1 24 C       C2000   1 25 C       
LOGSIM ** FICHE/FRAME BREAK *****
L1GSRUNSYM
C  L1GSRUNSYM V4.03 2/18/71 RJT
       DIMENSION IGEN(32),JCYCLE(10),NTYPE(31),IFNAM(10)
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID
       COMMON IFNAM,ICOM,LENGTH,IFLG
C LOAD IGEN
       IF(-IDUM)50
       CLOSE(3)
       OPEN(3,INPUT,$INST$)
       READ(3,40)(IGEN(1),I=1,62)
       READ(3,20)
20     FORMAT(/)
       READ(3,40)(IGEN(I),I=1,32)
40     FORMAT(A3)
       IDUM=1
       CLOSE(3)
        STOP


50     IFLAG=0
C     TYPE 1444
1444   FORMAT($LINK RUN$/)
       ASSIGN 700 TO LABEL
       CALL REARM
       CALL ALTMODE(2,IFLAG)
       IF(INTRP(1))710
       IRETRN=1
55     DO 56 I=144,1,-1
       IF(NCHAR(I))58,56,58
56     CONTINUE
58     LENGTH=I
59     CALL NUMERIC(NCHAR,1,LENGTH,ITSTRT,IE)
       GO TO (80,60)IE
60     TYPE 70
70     FORMAT(//$*** START TIME NOT NUMERIC$/$START TIME= $)
75     CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)700
       GO TO 59
80     IF(-ITSTRT)90,90
       TYPE 85
85     FORMAT(/$*** TIME < ZERO$/)
       TYPE 550
       GO TO 75


C DEFINE INPUT NAMES
90     IF(-ICOMP)500   ;C ICOMP=1 WHEN COMPILING IS NOT REQUIRED
       DO 100 I=250,1,-1
       IF(-ITYPE(I))110
100    CONTINUE
110    IMAX=I
       LMAX=IBLOCK(IMAX)
       IF(-IMAX)140
120    TYPE 130
130    FORMAT(//$*** NO CIRCUIT$/)
       CALL DISALT
       CALL LINK(12,LINK1)
       STOP


C CONVERTS ALL KNOWN BLOCKS
140    DO 410 K=1,IMAX
       IF(1-K)150
       K1=1
       GO TO 160
150    K1=IBLOCK(K-1)+1
160    K2=IBLOCK(K)
       IF(ITYPE(K)-9)170,410    ;C TIME
       IF(ITYPE(K)-15)170,410    ;C AD*
       IF(ITYPE(K)-18)170,410
       IF(ITYPE(K)-19)170,410    ;C NUL
170    DO 400 I=K1,K2
       IF(IABS(INPUT(I))-538)400
200    IF(ITYPE(K)-8)208,204,208  ;C SS
204    IF(I-K1)220,400,220
208    IF(ITYPE(K)-11)220,210,220  ;C SWG
210    IF(I-K2)221,400,221
221    IF(I-K2+1)220,400,220
220    DO 224 L=251,(IMAX+250)
       IF(IABS(INPUT(I))-IPRES(L))224,222,224
222    IF(IREACT(I)-IPRES(-L))224,226
224    CONTINUE
       GO TO 260
226    NUM=L-250
230    MINUS=1
       IF(-INPUT(I))250,250
240    MINUS=-1
250    INPUT(I)=NUM*MINUS
       IREACT(I)=0
       GO TO 400


C CONVERT GAT & ORR INPUTS
260    DO 270 J=1,15
       IF(IREACT(I)-IGEN(J))270,280,270
270    CONTINUE
       GO TO 350
280    DO 290 L=251,(250+IMAX)
       IF(IABS(INPUT(I))-IPRES(L))290,300
290    CONTINUE
       GO TO 350
300    NUM=L-250
       MINUS=1
       IF(-INPUT(I))320,320
310    MINUS=-1
320    INPUT(I)=(NUM+J)*MINUS
       IREACT(I)=0
       GO TO 400


C ERROR - PRINT UNDEFINED INPUT
350    IF(-IZERO)380
351    IF(-INPUT(I))358,358
352    NVALUE=IABS(INPUT(I))
       TYPE 354,NVALUE,IREACT(I),IPRES(K+250),IPRES(-K-250)
354    FORMAT($*** INPUT -$2A3$ FOR BLOCK NAME $2A3$ IS UNDEFINED$/)
       GO TO 370
358    TYPE 360,INPUT(I),IREACT(I),IPRES(K+250),IPRES(-K-250)
360    FORMAT($*** INPUT  $2A3$ FOR BLOCK NAME $2A3$ IS UNDEFINED$/)
370    IRETRN=2
       IF(-IFLAG)700
       GO TO 400
380    INPUT(I)=0
       IREACT(I)=0
       IRETRN=1
400    CONTINUE
410    CONTINUE


C SET ARRAY IPRES
       DO 420 I=1,250
       IF(IPRES(I))420,415,420
415    IPRES(I)=-1
       IPRES(-I)=1
420    CONTINUE
       DO 430 I=501,537
       IF(IPRES(I))430,425,430
425    IPRES(I)=-1
       IPRES(-I)=1
430    CONTINUE
       IPRES(0)=-1



C SETUP INITIAL CONDITIONS FOR LAST,PRESENT, & PREDICTED CHANGE OF STATE
450    DO 480 I=1,IMAX
       ITPRED(I)=8388607
       ITLAST(I)=-1
480    CONTINUE


500    GO TO (505,620)IRETRN
505    TYPE 510
510    FORMAT($FINISH TIME = $)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)700
       CALL NUMERIC(NCHAR,1,LENGTH,ITSTOP,IE)
       GO TO (530,520)IE
520    TYPE 525
525    FORMAT(//$*** FINISH TIME NOT NUMERIC$/)
       GO TO 500
530    IF(ITSTOP)532,538,538
532    TYPE 85
       GO TO 505
538    IF(ITSTRT-ITSTOP)580,580
       TYPE 540
540    FORMAT(//$*** FINISH TIME LESS THAN START TIME$/)
545    TYPE 550
550    FORMAT(/$START TIME = $)
560    CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)700
       CALL NUMERIC(NCHAR,1,LENGTH,ITSTOP,IE)
       GO TO (500,570)IE
570    TYPE 70
       GO TO 560
580    IF(ITSTOP-8388607)600,600
       TYPE 590
590    FORMAT(//$*** START OR FINISH TIME EXCEEDS 8388607$/)
       GO TO 545


600    IF(-IFLAG)700
       IF(-ICOMP)610
       CALL PUTRAD(IREAL)
610    ICOMP=1
       CALL DISALT
       CALL LINK(12,LINK4)
       STOP
620    CLOSE(10)
       IFN=3
       TYPE 640
640    FORMAT(//$CONTINUE RUN WITH UNDEFINED INPUTS ASSUMED$
     1 $ LOGICAL FALSE? $)
645    CALL YESNO(IYES,IFLAG,LABEL)
       IF(-IFLAG)700
       GO TO (690,700)IYES
690    IZERO=1
       IRETRN=1
       GO TO 140
700    IFLAG=0
       ICOMP=1
       CALL UNCOMP(ICOMP)
710    DO 720 I=1,144
720    NCHAR(I)=0
       CALL DISALT
       CALL LINK(12,LINK1)
       STOP
       END


       SUBROUTINE YESNO(IYES,IFLAG,LABEL)
       IF(-IFLAG)300
204    READ(0,205)IY
205    FORMAT(A3/)
       IF(-IFLAG)300
206    IF(IY-3HYES)208,220
208    IF(IY-3HYE )210,220
210    IF(IY-3HY  )212,220
212    IF(IY-3HNO )214,250
214    IF(IY-3HN  )216,250
216    TYPE 218
218    FORMAT($WHAT ? $)
       IF(-IFLAG)300
       GO TO 204
220    IYES=1
       RETURN
250    IYES=2
       RETURN
300    GO TO LABEL
       END
LOGSIM ** FICHE/FRAME BREAK *****
L1GSRUNSYM SYMSORT

SYM.  PG.LN. IDENT.

100     2 17 C       110     2 18 C       120     2 21 C       130     2 22 C       
140     2 29 C       1444    1 28 C       150     2 33 C       160     2 34 C       
170     2 39 C       20      1 18 C       200     3  2 C       204     6 24 C       
204     3  3 C       205     6 25 C       206     6 27 C       208     6 28 C       
208     3  4 C       210     6 29 C       210     3  5 C       212     6 30 C       
214     6 31 C       216     6 32 C       218     6 33 C       220     6 36 C       
220     3  7 C       221     3  6 C       222     3  9 C       224     3 10 C       
226     3 12 C       230     3 13 C       240     3 15 C       250     6 38 C       
250     3 16 C       260     3 22 C       270     3 24 C       280     3 26 C       
290     3 28 C       300     7  1 C       300     3 30 C       310     3 33 C       
320     3 34 C       350     4  1 C       351     4  2 C       352     4  3 C       
354     4  5 C       358     4  7 C       360     4  8 C       370     4  9 C       
380     4 12 C       40      1 20 C       400     4 15 C       410     4 16 C       
415     4 22 C       420     4 24 C       425     4 27 C       430     4 29 C       
450     4 35 C       480     4 38 C       50      1 26 C       500     5  2 C       
505     5  3 C       510     5  4 C       520     5  9 C       525     5 10 C       
530     5 12 C       532     5 13 C       538     5 15 C       540     5 17 C       
545     5 18 C       55      1 34 C       550     5 19 C       56      1 36 C       
560     5 20 C       570     5 24 C       58      1 37 C       580     5 26 C       
59      1 38 C       590     5 28 C       60      2  1 C       600     5 32 C       
610     5 35 C       620     5 39 C       640     6  3 C       645     6  5 C       
690     6  8 C       70      2  2 C       700     6 11 C       710     6 14 C       
720     6 15 C       75      2  3 C       80      2  6 C       85      2  8 C       
90      2 14 C       C       4 34 C       C       4 19 C       
C       3 39 C       C       3 21 C       C       2 28 C       C       2 13 C       
C       1 27 C       C       1 12 C       
LOGSIM ** FICHE/FRAME BREAK *****
L1GSSFESYM
C  L1GSSFESYM V4.03  2/18/71 RJT
       DIMENSION IFNAM(10),NTYPE(31),KOMAND(31),JCYCLE(10)
       DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID
       COMMON IFNAM,ICOM,LENGTH,IFLG
       IF(-IDUM)4
       OPEN(3,INPUT,$INST$)
       READ(3,2)(NTYPE(I),I=1,31)
2      FORMAT(A3)
       READ(3,6)
6      FORMAT(/)
       READ(3,2)(KOMAND(I),I=1,31)
       CLOSE(3)
       IDUM=1
       STOP
4      CONTINUE
C4      TYPE 99999
99999  FORMAT($LINK SFE$/)
43     IFLAG=0
       CALL REARM
       CALL ALTMODE(2,IFLAG)
       IF(INTRP(1))678
       DO 45 I=144,1,-1
       IF(NCHAR(I))46,45,46
45     CONTINUE
46     LENGTH=I
       IF(-LENGTH)60
678    IER=0
       IFLAG=0
776    TYPE 50
50     FORMAT(//$:$)
60     IFLG=1
       IF(-IFLAG)999
       OPEN(3,INPUT,$TEL$)
       ITEL=1
       JNUM=-1
       ITRACE=-1
       IF(-LENGTH)65
       CALL STRING(NCHAR,LENGTH,IEND,1,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)999
65     CALL ALPHA(NCHAR,1,3,NALPH1,NALPH2,IE)
       IF(LENGTH)78,776
78     DO 20 ICOM=1,31
       IF(NALPH1-KOMAND(ICOM))20,25,20
20     CONTINUE
       IER=IER+1
       IF(IER-2) 11
80     TYPE 15
15     FORMAT($FOR ASSISTANCE TYPE 'HELP'$/)
       GO TO 999
11     TYPE 34
34     FORMAT($ ?$)
       IER=IER+1
       LENGTH=0
90     GO TO 776
25     IER=0
C   ALL 900 GO TO LOGSTR LINK FILE
       GO TO (100,200,300,400,500,600,750,600,700,700,
     1        900 ,900 ,900 ,900 ,900 ,4000,900 ,900,901,901,
     2        4000,4000,900 ,900 ,900 ,850 ,800,875 ,1000,1100,900)ICOM
100    CALL PRINT(2,IFLAG)
       GO TO 999
200    IF(NCHAR(4)-1HE)220,210,220
210    ICOM=14
       GO TO 900
220    IF(NCHAR(4)-1HT)225,240,225
225    TYPE 230
230    FORMAT($AMBIGUOUS COMMAND, TYPE MORE CHARACTERS  $)
       GO TO 999
240    CALL PRINT(3,IFLAG)
       GO TO 999
300    TYPE 301
301    FORMAT(/$VERSION 4.03$/)
       GO TO 999
400    TYPE 401
401    FORMAT(/,$NO PREMIUM CHARGE$)
       GO TO 999
500    TYPE 501
501    FORMAT(/$WRITTEN BY TYMSHARE$/)
       GO TO 999
600    TYPE 601
601    FORMAT(/)
       CALL EXIT
       STOP
700    CALL PRINT(1,IFLAG)
       GO TO 999

C  INITIALIZE

750    IF(ICOMP)752,752
       CALL UNCOMP(ICOMP)
       CALL GETRAD(IREAL)
       ITSTRT=0
       ITSTOP=0
       ITIME=0
752    WRITE(1,760)
760    FORMAT($OK$/)
       GO TO 999
C751     IFNAM(1)=3HLOG
C       IFNAM(2)=3HLST
C       CALL DISALT
C       CALL LINK(6,IFNAM);C LINK TO LOGLST
800    CALL PRINT(4,IFLAG)
        GO TO 999


C TRACE  #26
850    TYPE 4330
       ITRACE=1
       GO TO 875 


C RUN  #28
875    IF(-ITYPE(1))880
       TYPE 4070
       GO TO 999 
880    TYPE 885
885    FORMAT($START TIME = $)
       OPEN(3,INPUT,$TEL$)
       CALL STRING(NCHAR,LENGTH,IEND,1,2,IFLAG,LABEL,IFN)
       IF(-IFLAG)999 
       CALL DISALT
       CALL LINK(12,LINK3);C  LINK TO "RUN"
900    IFNAM(1)=3H(@6
       IFNAM(2)=3HLI)
       IFNAM(3)=3HL1G
       IFNAM(4)=3HSST
       CALL DISALT
       CALL LINK(12,IFNAM);C  LINK TO "STR"
C FILE COMMANDS
901    CLOSE(4)
       DO 910 I=1,LENGTH
       IF(NCHAR(I))910,922
910    CONTINUE
912    FORMAT(/$INPUT FROM: $)
914    FORMAT(/$OUTPUT TO: $)


C NO FILE NAME
       GO TO (918,916)(ICOM-18)
916    TYPE 912
       GO TO 920
918    TYPE 914
920    CALL STRING(NCHAR,LENGTH,IEND,1,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)999
       CLOSE(3)
       IST=-2
       GO TO 924
922    LENGTH=LENGTH-I
       IST=I-2
924    DO 926 I=1,10
       IST=IST+3
       IFIN=IST+2
       CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       IFNAM(I)=NALPH1
926    CONTINUE
       IF(ICOM-19)999,950
       IF(ICOM-20)999,950,999
928    IBIN=2   ;C BINARY FILE
       GO TO (936,934)(ICOM-18)
934    IOD=2   ;C INPUT
       GO TO 938
936    IOD=3   ;C OUTPUT
       IF(-IFLAG)999
938    CALL OPEN(IOD,LENGTH,IFNAM,4,IBIN)
       IF(IOD)999,940,942
940    ITEL=1
       GO TO 946
942    IF(2-IOD)944
944    ITEL=2
946    CLOSE(3)
       GO TO (5000,  3000 )(ICOM-18)
C             DUMP  RECOVER
950    IF(IFNAM(1)-3HTEL)951,960
951    IF(IFNAM(1)-3HTE )952,960
952    IF(IFNAM(1)-3HT  )928,960,928
960    TYPE 970
970    FORMAT(/$*** DUMP OR RECOVER COMMANDS CAN NOT HAVE THE TERMINAL
 AS A FILE NAME$/)
       GO TO 999
999    LENGTH=0
       GO TO 678
C  OPEN A SYMBOLIC FILE FOR OUTPUT OF THE SOLUTION
1000   CLOSE(6)
       DO 1010 I=1,LENGTH
       IF(NCHAR(I))1010,1022
1010   CONTINUE
       IWRT=1
       TYPE 914
1020   CALL STRING(NCHAR,LENGTH,IEND,1,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)999
       CLOSE(3)
       IST=-2
     TO 1024
1022   LENGTH=LENGTH-I
       IST=I-2
1024   DO 1026 I=1,10
       IST=IST+3
       IFIN=IST+2
       CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       IFNAM(I)=NALPH1
1026   CONTINUE
1036   IOD=3;C  OUTPUT FILE
       IBIN=3;C  SYMBOLIC FILE
       IF(-IFLAG)999
       IWHICH=6
1038   CALL OPEN(IOD,LENGTH,IFNAM,IWHICH,IBIN)
       IF(-IFLAG)1062,999,999
1062   IWRT=0
       IWHICH=1
       GO TO 999
1100   CLOSE(IWHICH)
       IWHICH=1
       GO TO 752
C PRINT  #16
3000   DO 3010 I=1,250    ;C ZERO ARRAYS
       ITYPE(I)=0
       IDELAY(I)=0
       IBLOCK(I)=0
       ITPRED(I)=0
       ITLAST(I)=0
3010   IAFECT(I)=0
       DO 3020 I=-537,537
3020   IPRES(I)=0
       DO 3030 I=1,1400
       INPUT(I)=0
3030   IREACT(I)=0
       ITSTRT=0
       ITSTOP=0
       ITIME=0
       IMAX=0
       GO TO 5500


C PRINT # 16
3500   IF(1-I)3515
       GO TO (3505,3515)IFLG
3505   IFLG=2
       TYPE 3510
3510   FORMAT(//$NAME        TLAST    PRES    TPRED$/)
3515   DO 3610 J=K1,K2
       IF(250-J)3519,3519
3516   IF(500-J)3610,3610
3518   IF(536-J)3610
3519   IF(-IFLAG)999
       IF(500-J)3621
       TYPE 3520,IPRES(J+250),IPRES(-J-250),ITLAST(J)
3520   FORMAT(/2A3,2X,I9,5X)
       GO TO 3529
3621   JJ=J-500
       IF(9-JJ)3622
       TYPE 3710,JJ
       GO TO 3529
3622   TYPE 3720,JJ
3529   IF(-IPRES(J))3570,3550
3530   TYPE 3540
3540   FORMAT($F$,3X)
       GO TO 3590
3550   TYPE 3560
3560   FORMAT($U$,3X)
       GO TO 3590
3570   TYPE 3580
3580   FORMAT($T$,3X)
3590   IF(500-J)3610
       IF(ITPRED(J))3610,3610
3595   TYPE 3600,ITPRED(J)
3600   FORMAT(I9)
3610   CONTINUE
3710   FORMAT(/$*$I1,20X)
3720   FORMAT(/$*$I2,19X)
       GO TO 4285


C NAMES & RANGE
4000   DO 4002 I=1,LENGTH    ;C CHECK FOR BLK NAMES
       IF(NCHAR(I))4004,4004
4002   CONTINUE
       GO TO 4008
4004   IF(NCHAR(I+1))4008,4008
       DO 4006 J=I+1,LENGTH
4006   NCHAR(J-I)=NCHAR(J)
       LENGTH=LENGTH-I
       GO TO 4015
4008   TYPE 4026
4026   FORMAT(/$BLK OR SW: $)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)999
4015   CLOSE(3)
       CALL ALPHA(NCHAR,1,LENGTH,NALPH1,NALPH2,IE)
       IF(NALPH1-3HALL)4018,4017,4018
4017   LENGTH=0
4018   NELEM=1
       DO 4030 I=1,LENGTH
       IF(NCHAR(I)-1H,)4030,4020,4030
4020   NELEM=NELEM+1
4030   CONTINUE
       IF(-LENGTH)4100
4040   GO TO (4045,999,999,4045,4045,999,999,999,4045,
              4045,4045,4045)(ICOM-12)
4045   DO 4050 I=250,1,-1
       IF(ITYPE(I))4055,4050,4055
4050   CONTINUE
4055   IMAX=I
       IF(-IMAX)4080
4060   TYPE 4070
4070   FORMAT(/$*** NO CIRCUIT$/)
       GO TO 999


C LIST ALL BLOCKS
4080   K1=1
       K2=IMAX
       NELEM=1
       I=1
       GO TO 4250
4100   IST=1     ;C FIND END OF FIRST ELEM
       DO 4110 I=1,LENGTH
       IF(NCHAR(I)-1H,)4110,4120
4110   CONTINUE
4120   IFIN=I-1


       DO 4310 I=1,NELEM
       DO 4140 J=IST,IFIN   ;C BLOCK RANGE
       IF(NCHAR(J)-1H-)4140,4180
4140   CONTINUE


C SINGLE BLOCK
       CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       GO TO (4160,4155)IE
4155   CALL SWITCH(NCHAR,IST,IFIN,NUM,ISW)
       GO TO (4170,4145)ISW
4145   TYPE 4150   ;C ILLEGAL CHAR IN NAME
4150   FORMAT(/$*** INVALID BLOCK OR SWITCH DESCRIPTION$/)
       GO TO 999
4160   CALL GIVENO(NALPH1,NALPH2,NUM,IPRES,IE)
       GO TO (4145,4170,4145)IE
4170   K1=NUM
       K2=NUM
4175   GO TO 4250


C BLOCK RANGE
4180   CALL ALPHA(NCHAR,IST,J-1,NALPH1,NALPH2,IE)
        GO TO (4190,4185)IE
4185   CALL SWITCH(NCHAR,IST,J-1,K1,ISW)
       GO TO (4200,4145)ISW
4190   CALL GIVENO(NALPH1,NALPH2,K1,IPRES,IE)
       GO TO (4145,4200,4145)IE
4200   CALL ALPHA(NCHAR,J+1,IFIN,NALPH1,NALPH2,IE)
       GO TO (4210,4205)IE
4205   CALL SWITCH(NCHAR,J+1,IFIN,K2,ISW)
       GO TO (4250,4145)ISW
4210   CALL GIVENO(NALPH1,NALPH2,K2,IPRES,IE)
       GO TO (4145,4250,4145)IE


C LIST
4250   IF((K2-K1)-250)4256
       TYPE 4254
4254   FORMAT(/$*** RANGE CAN NOT INCLUDE BLOCK AND SWITCH$/)
       GO TO 999
4256   IF(K1-K2)4270,4270
       TYPE 4260
4260   FORMAT(/$*** INVALID BLOCK OR SWITCH RANGE$/)
       GO TO 999
4270   GO TO (999 ,999,3000,3500,4285,4285,999,999,6000,6500,
     1        999,999 )(ICOM-12)
4285   IST=IFIN+2
       DO 4290 L=IST,LENGTH
       IF(NCHAR(L)-1H,)4290,4300
4290   CONTINUE
4300   IFIN=L-1
       IF(NELEM-1)4310,4320
4310   CONTINUE
4320   WRITE(4,4321)
4321   FORMAT(/)
       CLOSE(4)
       IF(ICOM-15)999,3000
       IF(ICOM-18)999,4325,999
4325   TYPE 4330
4330   FORMAT($OK$/)
       GO TO 999


C DUMP  #19
5000   ISKIP=1
       NFLAG=1928374
5010   WRITE(4)NFLAG
       WRITE(4)IPRES,ITPRED,ITLAST,ITSTRT,ITIME,ITSTOP,ITYPE,IDELAY,
               IBLOCK,INPUT,IREACT,IAFECT,JOUT,ITRACE,JNUM,IMAX,
               JDELAY,ICOMP
       GO TO (5020,5030)ISKIP
5020   CALL GETRAD(IREAL)
       ISKIP=2
       GO TO 5010
5030   TYPE 4330
       CLOSE(4)
       GO TO 999


C RECOVER  #20
5500   ISKIP=1
       ASSIGN 5600 TO NEOF
       CALL EOF(NEOF)
5510   READ(4)NFLAG
       IF(NFLAG-1928374)5600,5515,5600
5515   READ(4)IPRES,ITPRED,ITLAST,ITSTRT,ITIME,ITSTOP,ITYPE,IDELAY,
               IBLOCK,INPUT,IREACT,IAFECT,JOUT,ITRACE,JNUM,IMAX,
               JDELAY,ICOMP
       GO TO (5520,5530,5540)ISKIP
5520   ISKIP=2
       GO TO 5510
5530   CALL PUTRAD(IREAL)
       CLOSE(4)
       IOD=2
       CALL OPEN(IOD,LENGTH,IFNAM,4,IBIN)
       ISKIP=3
       GO TO 5510
5540   TYPE 5550,ITSTOP
5550   FORMAT($LAST STOP TIME = $I8/)
       CLOSE(4)
       GO TO 999
5600   CLOSE(4)
       WRITE(1,5610)
5610   FORMAT(//$*** RECOVER FILE NOT CREATED BY DUMP COMMAND$/)
       GO TO 999


C SET  #21
6000   DO 6010 J=K1,K2
       IPRES(J)=1
       IPRES(-J)=-1
       IF(-IFLAG)999
6010   CONTINUE
       TYPE 4330
       GO TO 4285


C RESET  #22
6500   DO 6510 J=K1,K2
       IPRES(J)=-1
       IPRES(-J)=1
       IF(-IFLAG)999
6510   CONTINUE
       TYPE 4330
       GO TO 4285


       STOP
       END
       SUBROUTINE PRINT(IPRINT,IFLAG)
       DIMENSION NCHAR(72)
       CLOSE(9)
       OPEN(9,INPUT,$(@6LI)L1GSFI$)
       GO TO (10,20,30,40)IPRINT
10     IST=1H1
       IFIN=1H2
       GO TO 200
20     IST=1H2
       IFIN=1H3
       GO TO 200
30     IST=1H3
       IFIN=1H4
       GO TO 200
40     IST=1H4
       IFIN=1H5
200    ISTEP=1
210    READ(9,910)(NCHAR(I),I=1,72)
       IF(-IFLAG)400
       IF(NCHAR(1)-IST)230,220,230
220    ISTEP=2
       GO TO 210
230    IF(NCHAR(1)-IFIN)240,400
240    GO TO (210,245)ISTEP
245    DO 250 J=72,1,-1
       IF(NCHAR(J))260,250,260
250    CONTINUE
260    LENGTH=J
       IF(LENGTH)280,280
265    DO 270 J=1,LENGTH
270    WRITE(1,920)NCHAR(J)
280    WRITE(1,930)
       GO TO 210
400    CLOSE(9)
       RETURN
910    FORMAT(72A1)
920    FORMAT(A1)
930    FORMAT(/)
       END


       SUBROUTINE SWITCH(NCHAR,IST,IFIN,NUM,ISW)
       DIMENSION NCHAR(1)
       ISW=1
       IF(NCHAR(IST)-1H*)10,20,10
10     ISW=2
       RETURN
20     CALL NUMERIC(NCHAR,IST+1,IFIN,NUM,IE)
       GO TO (30,10)IE
30     IF(NUM)10,10
       IF(36-NUM)10
       NUM=NUM+500
       RETURN
       END
LOGSIM ** FICHE/FRAME BREAK *****
L1GSSFESYM SYMSORT

SYM.  PG.LN. IDENT.

10     13 36 C       10     12 35 C       100     2 28 C       1000    5 34 C       
1010    5 37 C       1020    6  1 C       1022    6  6 C       1024    6  8 C       
1026    6 13 C       1036    6 14 C       1038    6 18 C       1062    6 20 C       
11      2 18 C       1100    6 23 C       15      2 16 C       2       1 15 C       
20     13 38 C       20     12 38 C       20      2 12 C       200    13  7 C       
200     2 30 C       210    13  8 C       210     2 31 C       220    13 11 C       
220     2 33 C       225     2 34 C       230    13 13 C       230     2 35 C       
240    13 14 C       240     2 37 C       245    13 15 C       25      2 23 C       
250    13 17 C       260    13 18 C       265    13 20 C       270    13 21 C       
280    13 22 C       30     14  1 C       30     13  2 C       300     2 39 C       
3000    6 27 C       301     3  1 C       3010    6 33 C       3020    6 35 C       
3030    6 38 C       34      2 19 C       3500    7  8 C       3505    7 10 C       
3510    7 12 C       3515    7 13 C       3516    7 15 C       3518    7 16 C       
3519    7 17 C       3520    7 20 C       3529    7 27 C       3530    7 28 C       
3540    7 29 C       3550    7 31 C       3560    7 32 C       3570    7 34 C       
3580    7 35 C       3590    7 36 C       3595    7 38 C       3600    7 39 C       
3610    8  1 C       3621    7 22 C       3622    7 26 C       3710    8  2 C       
3720    8  3 C       4       1 22 C       40     13  5 C       400    13 24 C       
400     3  3 C       4000    8  8 C       4002    8 10 C       4004    8 12 C       
4006    8 14 C       4008    8 17 C       401     3  4 C       4015    8 21 C       
4017    8 24 C       4018    8 25 C       4020    8 28 C       4026    8 18 C       
4030    8 29 C       4040    8 31 C       4045    8 33 C       4050    8 35 C       
4055    8 36 C       4060    8 38 C       4070    8 39 C       4080    9  5 C       
4100    9 10 C       4110    9 13 C       4120    9 14 C       4140    9 20 C       
4145    9 28 C       4150    9 29 C       4155    9 26 C       4160    9 31 C       
4170    9 33 C       4175    9 35 C       4180    9 39 C       4185   10  2 C       
4190   10  4 C       4200   10  6 C       4205   10  8 C       4210   10 10 C       
4250   10 15 C       4254   10 17 C       4256   10 19 C       4260   10 21 C       
4270   10 23 C       4285   10 25 C       4290   10 28 C       43      1 25 C       
4300   10 29 C       4310   10 31 C       4320   10 32 C       4321   10 33 C       
4325   10 37 C       4330   10 38 C       45      1 31 C       46      1 32 C       
50      1 37 C       500     3  6 C       5000   11  4 C       501     3  7 C       
5010   11  6 C       5020   11 11 C       5030   11 14 C       5500   11 20 C       
5510   11 23 C       5515   11 25 C       5520   11 29 C       5530   11 31 C       
5540   11 37 C       5550   11 38 C       5600   12  2 C       5610   12  4 C       
6       1 17 C       60      1 38 C       600     3  9 C       6000   12  9 C       
601     3 10 C       6010   12 13 C       65      2  8 C       6500   12 19 C       
6510   12 23 C       678     1 34 C       700     3 13 C       750     3 18 C       
752     3 24 C       760     3 25 C       776     1 36 C       78      2 10 C       
80      2 15 C       800     3 31 C       850     3 36 C       875     4  3 C       
880     4  6 C       885     4  7 C       90      2 22 C       900     4 13 C       
901     4 20 C       910    13 26 C       910     4 23 C       912     4 24 C       
914     4 25 C       916     4 30 C       918     4 32 C       920    13 27 C       
920     4 33 C       922     4 38 C       924     5  1 C       926     5  6 C       
928     5  9 C       930    13 28 C       934     5 11 C       936     5 13 C       
938     5 15 C       940     5 17 C       942     5 19 C       944     5 20 C       
946     5 21 C       950     5 24 C       951     5 25 C       952     5 26 C       
960     5 27 C       970     5 28 C       999     5 31 C       99999   1 24 C       
C      12 18 C       C      12  8 C       C      11 19 C       
C      11  3 C       C      10 14 C       C       9 38 C       C       9 23 C       
C       9  4 C       C       8  7 C       C       7  7 C       C       6 26 C       
C       5 33 C       C       5 23 C       C       4 28 C       C       4 19 C       
C       4  2 C       C       3 35 C       C       3 30 C       C       3 29 C       
C       3 28 C       C       3 16 C       C       2 24 C       C4      1 23 C       
C751    3 27 C       
LOGSIM ** FICHE/FRAME BREAK *****
LOGBLDE
C  LOGBLDE FOR VERSIONS 4.00 AND SUBSEQUENT, CONTAINING THE
C  PARALLEL WORD GENERATOR....JOHN OWINGS   OCTOBER 1970
C GENERATES BLOCKS FOR MULTIPLE BLOCK STATEMENTS
       SUBROUTINE BLKGEN(NTYPE,IELEM,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,
          IPOINT,NERROR,IPRES,IREACT,IGEN)
       DIMENSION IELEM(2,19),ITYPE(1),IBLOCK(1),INPUT(1),IDELAY(1),
         IPRES(-537/537),IREACT(1),ITRANS(2,19),IGEN(1)
       ITRANS(2,1)=0
       ITRANS(2,2)=0
       ITRANS(2,3)=0
       K=NTYPE-21
       IF(NTYPE-22)10,20,20
10     RETURN   ;C NOT A BLOCK GEN TYPE
20     IF(NERROR)30,40,30
30     RETURN  ;C TYPE NOT A VALID BLOCK
40     GO TO (100,200,300,45,400,45,500,45,400,45)K
45     CALL MOVE(IELEM,NELEM,NTYPE,ITRANS)
       CALL TRANS(ITRANS,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IF(NERROR)60,60
50     RETURN
60     GO TO (100,200,70,70,70,70,70,70,70,70)K
70     RETURN


C GATE REGISTOR
100    IBLKNO=IELEM(1,1)
       IG1=IELEM(1,6)  ;C GATE 
       IG2=IELEM(2,6)
       DO 180 I=1,IELEM(1,4)
       IF(1-I)116
       K=1
       GO TO 118
116    K=I-1
118    CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(K),NUM,IPRES,IE)
       GO TO (130,120,120)IE
120    NERROR=17  ;C GENERATED BLOCK NO. USED
       IPRES(IELEM(1,1)+250)=0
       IPRES(-IELEM(1,1)-250)=0
       RETURN
130    IF(I-1)150,150
       CALL EXPAND(IBLKNO,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,
     1 IPRES,NELEM-1,NERROR,IPOINT)
       IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
150    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=2  ;C AND GATE
       ITRANS(1,3)=IELEM(1,3)  ;C PD
       ITRANS(1,5)=IG1         ;C G FROM GAT
       ITRANS(2,5)=IG2
       ITRANS(1,4)=IELEM(1,5)
       IF(1-I)160,160
       ITRANS(2,4)=IELEM(2,5)
       GO TO 165
160    ITRANS(2,4)=IGEN(I-1)
165    CALL TRANS(ITRANS,5,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IBLKNO=IBLKNO+1
       IF(NERROR)180,180
170    RETURN
180    CONTINUE
       RETURN


C OR REGISTER
200    IBLKNO=IELEM(1,1)
       DO 280 I=1,IELEM(1,4)
       IF(1-I)216
       K=1
       GO TO 218
216    K=I-1
218    CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(K),NUM,IPRES,IE)
       GO TO (220,120,120)IE
220    IF(I-1)240,240
       CALL EXPAND(IBLKNO,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,
     1 IPRES,NELEM-1,NERROR,IPOINT)
       IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
240    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=3   ;C   OR GATE
       ITRANS(1,3)=IELEM(1,3)   ;C  PD
       DO 260 J=5,NELEM
       ITRANS(1,J-1)=IELEM(1,J)
       IF(1-I)250,250
       ITRANS(2,J-1)=IELEM(2,J)
       GO TO 260
250    ITRANS(2,J-1)=IGEN(I-1)
260    CONTINUE
       CALL TRANS(ITRANS,NELEM-1,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IBLKNO=IBLKNO+1
       IF(NERROR)280,280
270    RETURN
280    CONTINUE
       RETURN


C COUNTER
300    LTYPE=25  ;C CNB
       GO TO 510


C SHIFT REGISTER OR PARALLEL WORD GENERATOR
400    IF(26-NTYPE)404
       LTYPE=27
       GO TO 409
404    LTYPE=31
409    IBLKNO=IELEM(1,1)-1
       DO 480 I=1,IELEM(1,4)
       IBLKNO=IBLKNO+1
       CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(I),NUM,IPRES,IE)
       GO TO (430,120,120)IE
430    IF(I-1)440,440
       CALL EXPAND(IBLKNO,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,
     1 IPRES,NELEM-1,NERROR,IPOINT)
       IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
440    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=LTYPE
       ITRANS(1,3)=IELEM(1,3)  ;C PD
       ITRANS(1,4)=IELEM(1,5)
       ITRANS(2,4)=IELEM(2,5)
       IF(1-I)442
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IELEM(2,6)
       IF(NTYPE-30)421
       ITRANS(1,6)=IELEM(1,7)
       ITRANS(2,6)=IELEM(2,7)
       GO TO 450
421    ITRANS(1,6)=IPRES(IBLKNO+250)
       ITRANS(2,6)=IGEN(I)
       GO TO 450
442    IF(NTYPE-30)443
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IELEM(2,6)
       GO TO 444
443    ITRANS(1,5)=IPRES(IBLKNO+249)
       ITRANS(2,5)=IPRES(-IBLKNO-249)
444    IF(NTYPE-30)445,446
445    IF(IELEM(1,4)-I)446,446
       ITRANS(1,6)=IPRES(IBLKNO+249)
       ITRANS(2,6)=IGEN(I)
       GO TO 450
446    ITRANS(1,6)=IELEM(1,7)
       ITRANS(2,6)=IELEM(2,7)
450    DO 460 J=8,9
       ITRANS(1,J-1)=IELEM(1,J)
       ITRANS(2,J-1)=IELEM(2,J)
460    CONTINUE
       CALL TRANS(ITRANS,8,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IF(NERROR)480,480
470    RETURN
480    CONTINUE
       RETURN


C PRESET COUNTER
500    LTYPE=29  ;C PRB
       GO TO 510


510    IBLKNO=IELEM(1,1)-1
       DO 580 I=1,IELEM(1,4)
       IBLKNO=IBLKNO+1
       CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(I),NUM,IPRES,IE)
       GO TO (530,120,120)IE
530    IF(I-1)540,540
       CALL EXPAND(IBLKNO,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,
     1 IPRES,NELEM-1,NERROR,IPOINT)
       IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
540    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=LTYPE
       ITRANS(1,3)=IELEM(1,3)  ;C PD
       IF(1-I)545
       ITRANS(1,4)=IELEM(1,5)
       ITRANS(2,4)=IELEM(2,5)
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IELEM(2,6)
       GO TO 550
545    ITRANS(1,4)=IPRES(IBLKNO+249)
       ITRANS(2,4)=IPRES(-IBLKNO-249)
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IGEN(I-1)
550    DO 560 J=7,8
       ITRANS(1,J-1)=IELEM(1,J)
       ITRANS(2,J-1)=IELEM(2,J)
560    CONTINUE
       CALL TRANS(ITRANS,7,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IF(NERROR)580,580
570    RETURN
580    CONTINUE
       RETURN
       END


C   GENERATES OUTPUT TO ARRAYS FOR BLOCKS <22
       SUBROUTINE NORMBK(IELEM,NELEM,NTYPE,ITRANS,NCHAR,LENGTH,ITEL,
         IPRES,IREACT,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,IGEN)
       DIMENSION IELEM(2,19),ITRANS(2,19),NCHAR(1),ITYPE(1),IBLOCK(1),
         INPUT(1),IDELAY(1),IPRES(-537/537),IREACT(1),IGEN(1)
C FIXED LENGTH BLOCK
       CALL MOVE(IELEM,NELEM,NTYPE,ITRANS)
       CALL TRANS(ITRANS,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,
         NERROR,IPRES,IREACT)
       IF(NTYPE-16)2210,2270
2210   RETURN


C ADDER
C   MAKE AN AD*
2270   ITRANS(1,1)=IELEM(1,1)+1
       CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(1),NUM,IPRES,IE)
       GO TO (2280,2400,2400)IE
2280   CALL EXPAND(IELEM(1,1),ITYPE,IDELAY,IBLOCK,INPUT,IREACT,
     1 IPRES,NELEM-3,NERROR,IPOINT)
       IPRES(ITRANS(1,1)+250)=IPRES(IELEM(1,1)+250)
       IPRES(-ITRANS(1,1)-250)=IGEN(1)
       ITRANS(1,2)=15   ;C AD*
       ITRANS(1,3)=IELEM(1,3)    ;C PD
       CALL TRANS(ITRANS,3,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,
         NERROR,IPRES,IREACT)
       IBLOCK(IELEM(1,1)+1)=IBLOCK(IELEM(1,1))
2300   RETURN
2400   WRITE(1,2410)
2410   FORMAT(//$*** CARRY BLOCK NAME PREVIOUSLY USED$/)
       RETURN
       END


       SUBROUTINE TRANS(ITRANS,NTRANS,ITYPE,IBLOCK,INPUT,IDELAY,
         IPOINT,NERROR,IPRES,IREACT)
       DIMENSION ITRANS(2,19),ITYPE(1),IBLOCK(1),INPUT(1),IDELAY(1),
         IREACT(1),IPRES(-537/537)
20     ITYPE(ITRANS(1,1))=ITRANS(1,2)
       IDELAY(ITRANS(1,1))=ITRANS(1,3)
       IF(NTRANS-4)32
22     DO 30 I=4,NTRANS
       INPUT(IPOINT)=ITRANS(1,I)
       IREACT(IPOINT)=ITRANS(2,I)
       IPOINT=IPOINT+1
30     CONTINUE
32     IBLOCK(ITRANS(1,1))=IPOINT-1
       IF(IPOINT-1400)70,70
40     TYPE 50,IPRES(ITRANS(1,1)+250),IPRES(-ITRANS(1,1)-250)
50     FORMAT(//$*** NUMBER OF INPUTS EXCEEDED ON BLOCK NO. $2A3 //)
       STOP
70     DO 80 I=1,19
       ITRANS(1,I)=0
80     ITRANS(2,I)=0
       RETURN
       END


       SUBROUTINE EXPAND(IBLKNO,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,
     1 IPRES,NELEM,NERROR,IPOINT)
       DIMENSION ITYPE(1),IDELAY(1),IBLOCK(1),INPUT(1),IREACT(1),
     1 IPRES(-537/537)
       N=NELEM-3
       DO 30 L=250,1,-1
       IF(-ITYPE(L))40
30     CONTINUE
40     IMAX=L
       LMAX=IBLOCK(IMAX)
       IF(IMAX-250)60
50     NERROR=13   ;C NO BLOCKS EXCEED 250
       RETURN
60     IF(LMAX+N-1401)90
70     TYPE 80,IPRES(IBLKNO+249),IPRES(-IBLKNO-249)
80     FORMAT(//$*** NO. OF INPUTS EXCEEDED BY ENTERING AFTER $2A3/)
       NERROR=14
       RETURN
90     DO 100 J=IMAX,IBLKNO,-1
       ITYPE(J+1)=ITYPE(J)
       IDELAY(J+1)=IDELAY(J)
       IPRES(J+251)=IPRES(J+250)
       IPRES(-J-251)=IPRES(-J-250)
       IBLOCK(J+1)=IBLOCK(J)+N
100    CONTINUE
       IF(1-IBLKNO)120
110    K=1
       GO TO 130
120    K=IBLOCK(IBLKNO-1)+1
       IF(N)150,150
130    DO 140 J=LMAX,K,-1
       INPUT(J+N)=INPUT(J)
       IREACT(J+N)=IREACT(J)
140    CONTINUE
150    IPOINT=K
       RETURN
       END
LOGSIM ** FICHE/FRAME BREAK *****
LOGBLDE SYMSORT

SYM.  PG.LN. IDENT.

10      1 13 C       100     8  8 C       100     1 27 C       110     8 10 C       
116     1 34 C       118     1 35 C       120     8 12 C       120     1 37 C       
130     8 14 C       130     2  2 C       140     8 17 C       150     8 18 C       
150     2  7 C       160     2 16 C       165     2 17 C       170     2 21 C       
180     2 22 C       20      7  3 C       20      1 14 C       200     2 27 C       
216     2 32 C       218     2 33 C       22      7  6 C       220     2 35 C       
2210    6 14 C       2270    6 19 C       2280    6 22 C       2300    6 31 C       
240     3  1 C       2400    6 32 C       2410    6 33 C       250     3  9 C       
260     3 10 C       270     3 15 C       280     3 16 C       30      7 30 C       
30      7 10 C       30      1 15 C       300     3 21 C       32      7 11 C       
40      7 31 C       40      7 13 C       40      1 16 C       400     3 26 C       
404     3 29 C       409     3 30 C       421     4 13 C       430     3 35 C       
440     4  1 C       442     4 16 C       443     4 20 C       444     4 22 C       
445     4 23 C       446     4 27 C       45      1 17 C       450     4 29 C       
460     4 32 C       470     4 36 C       480     4 37 C       50      7 34 C       
50      7 14 C       50      1 21 C       500     5  3 C       510     5  7 C       
530     5 12 C       540     5 17 C       545     5 26 C       550     5 30 C       
560     5 33 C       570     5 37 C       580     5 38 C       60      7 36 C       
60      1 22 C       70      7 37 C       70      7 16 C       70      1 23 C       
80      7 38 C       80      7 18 C       90      8  2 C       
C       6 18 C       C       6 17 C       C       6  9 C       C       6  4 C       
C       5  2 C       C       3 25 C       C       3 20 C       C       2 26 C       
C       1 26 C       C       1  3 C       C       1  2 C       
LOGSIM ** FICHE/FRAME BREAK *****
LOGBLDR
C  LOGBLDR FOR VERSIONS 4.XX AND SUBSEQUENT;CONTAINING THE
C  PARALLEL WORD GENERATOR...JOHN OWINGS  OCT 1970
C GENERATES BLOCKS FOR MULTIPLE BLOCK STATEMENTS
       SUBROUTINE BLKGEN(NTYPE,IELEM,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,
          IPOINT,NERROR,IPRES,IREACT,IGEN)
       DIMENSION IELEM(2,19),ITYPE(1),IBLOCK(1),INPUT(1),IDELAY(1),
         IPRES(-537/537),IREACT(1),ITRANS(2,19),IGEN(1)
       ITRANS(2,1)=0
       ITRANS(2,2)=0
       ITRANS(2,3)=0
       K=NTYPE-21
       IF(NTYPE-22)10,20,20
10     RETURN   ;C NOT A BLOCK GEN TYPE
20     IF(NERROR)30,40,30
30     RETURN  ;C TYPE NOT A VALID BLOCK
40     GO TO (100,200,300,45,400,45,500,45,400,45)K
45     CALL MOVE(IELEM,NELEM,NTYPE,ITRANS)
       CALL TRANS(ITRANS,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IF(NERROR)60,60
50     RETURN
60     GO TO (100,200,70,70,70,70,70,70,70,70)K
70     RETURN


C GATE REGISTOR
100    IBLKNO=IELEM(1,1)
       IG1=IELEM(1,6)  ;C GATE 
       IG2=IELEM(2,6)
       DO 180 I=1,IELEM(1,4)
       IF(1-I)116
       K=1
       GO TO 118
116    K=I-1
118    CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(K),NUM,IPRES,IE)
       GO TO (130,120,120)IE
120    NERROR=17  ;C GENERATED BLOCK NO. USED
       IPRES(IELEM(1,1)+250)=0
       IPRES(-IELEM(1,1)-250)=0
       RETURN
130    IF(I-1)150,150,140
140    IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
150    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=2  ;C AND GATE
       ITRANS(1,3)=IELEM(1,3)  ;C PD
       ITRANS(1,5)=IG1         ;C G FROM GAT
       ITRANS(2,5)=IG2
       ITRANS(1,4)=IELEM(1,5)
       IF(1-I)160,160
       ITRANS(2,4)=IELEM(2,5)
       GO TO 165
160    ITRANS(2,4)=IGEN(I-1)
165    CALL TRANS(ITRANS,5,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IBLKNO=IBLKNO+1
       IF(NERROR)180,180
170    RETURN
180    CONTINUE
       RETURN


C OR REGISTER
200    IBLKNO=IELEM(1,1)
       DO 280 I=1,IELEM(1,4)
       IF(1-I)216
       K=1
       GO TO 218
216    K=I-1
218    CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(K),NUM,IPRES,IE)
       GO TO (220,120,120)IE
220    IF(I-1)240,240
230    IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
240    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=3   ;C   OR GATE
       ITRANS(1,3)=IELEM(1,3)   ;C  PD
       DO 260 J=5,NELEM
       ITRANS(1,J-1)=IELEM(1,J)
       IF(1-I)250,250
       ITRANS(2,J-1)=IELEM(2,J)
       GO TO 260
250    ITRANS(2,J-1)=IGEN(I-1)
260    CONTINUE
       CALL TRANS(ITRANS,NELEM-1,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IBLKNO=IBLKNO+1
       IF(NERROR)280,280
270    RETURN
280    CONTINUE
       RETURN


C COUNTER
300    LTYPE=25  ;C CNB
       GO TO 510


C SHIFT REGISTER OR PARALLEL WORD GENERATOR
400    IF(26-NTYPE)404
       LTYPE=27
       GO TO 409
404    LTYPE=31
409    IBLKNO=IELEM(1,1)-1
       DO 480 I=1,IELEM(1,4)
       IBLKNO=IBLKNO+1
       CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(I),NUM,IPRES,IE)
       GO TO (430,120,120)IE
430    IF(I-1)440,440
       IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
440    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=LTYPE
       ITRANS(1,3)=IELEM(1,3)  ;C PD
       ITRANS(1,4)=IELEM(1,5)
       ITRANS(2,4)=IELEM(2,5)
       IF(1-I)442
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IELEM(2,6)
       IF(NTYPE-30)421
       ITRANS(1,6)=IELEM(1,7)
       ITRANS(2,6)=IELEM(2,7)
       GO TO 450
421    ITRANS(1,6)=IPRES(IBLKNO+250)
       ITRANS(2,6)=IGEN(I)
       GO TO 450
442    IF(NTYPE-30)443
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IELEM(2,6)
       GO TO 444
443    ITRANS(1,5)=IPRES(IBLKNO+249)
       ITRANS(2,5)=IPRES(-IBLKNO-249)
444    IF(NTYPE-30)445,446
445    IF(IELEM(1,4)-I)446,446
       ITRANS(1,6)=IPRES(IBLKNO+249)
       ITRANS(2,6)=IGEN(I)
       GO TO 450
446    ITRANS(1,6)=IELEM(1,7)
       ITRANS(2,6)=IELEM(2,7)
450    DO 460 J=8,9
       ITRANS(1,J-1)=IELEM(1,J)
       ITRANS(2,J-1)=IELEM(2,J)
460    CONTINUE
       CALL TRANS(ITRANS,8,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IF(NERROR)480,480
470    RETURN
480    CONTINUE
       RETURN


C PRESET COUNTER
500    LTYPE=29  ;C PRB
       GO TO 510


510    IBLKNO=IELEM(1,1)-1
       DO 580 I=1,IELEM(1,4)
       IBLKNO=IBLKNO+1
       CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(I),NUM,IPRES,IE)
       GO TO (530,120,120)IE
530    IF(I-1)540,540
       IPRES(IBLKNO+250)=IPRES(IELEM(1,1)+250)
       IPRES(-IBLKNO-250)=IGEN(I-1)
540    ITRANS(1,1)=IBLKNO
       ITRANS(1,2)=LTYPE
       ITRANS(1,3)=IELEM(1,3)  ;C PD
       IF(1-I)545
       ITRANS(1,4)=IELEM(1,5)
       ITRANS(2,4)=IELEM(2,5)
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IELEM(2,6)
       GO TO 550
545    ITRANS(1,4)=IPRES(IBLKNO+249)
       ITRANS(2,4)=IPRES(-IBLKNO-249)
       ITRANS(1,5)=IELEM(1,6)
       ITRANS(2,5)=IGEN(I-1)
550    DO 560 J=7,8
       ITRANS(1,J-1)=IELEM(1,J)
       ITRANS(2,J-1)=IELEM(2,J)
560    CONTINUE
       CALL TRANS(ITRANS,7,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IPRES,IREACT)
       IF(NERROR)580,580
570    RETURN
580    CONTINUE
       RETURN
       END


C   GENERATES OUTPUT TO ARRAYS FOR BLOCKS <22
       SUBROUTINE NORMBK(IELEM,NELEM,NTYPE,ITRANS,NCHAR,LENGTH,ITEL,
         IPRES,IREACT,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,IGEN)
       DIMENSION IELEM(2,19),ITRANS(2,19),NCHAR(1),ITYPE(1),IBLOCK(1),
         INPUT(1),IDELAY(1),IPRES(-537/537),IREACT(1),IGEN(1)
C FIXED LENGTH BLOCK
       CALL MOVE(IELEM,NELEM,NTYPE,ITRANS)
       CALL TRANS(ITRANS,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,
         NERROR,IPRES,IREACT)
       IF(NTYPE-16)2210,2270
2210   RETURN


C ADDER
C   MAKE AN AD*
2270   ITRANS(1,1)=IELEM(1,1)+1
       CALL GIVENO(IPRES(IELEM(1,1)+250),IGEN(1),NUM,IPRES,IE)
       GO TO (2280,2400,2400)IE
2280   IPRES(ITRANS(1,1)+250)=IPRES(IELEM(1,1)+250)
       IPRES(-ITRANS(1,1)-250)=IGEN(1)
       ITRANS(1,2)=15   ;C AD*
       ITRANS(1,3)=IELEM(1,3)   ;C PD
       CALL TRANS(ITRANS,3,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,
         NERROR,IPRES,IREACT)
2300   RETURN
2400   WRITE(1,2410)
2410   FORMAT(//$*** CARRY BLOCK NAME PREVIOUSLY USED$/)
       RETURN
       END
LOGSIM ** FICHE/FRAME BREAK *****
LOGBLDR SYMSORT

SYM.  PG.LN. IDENT.

10      1 13 C       100     1 27 C       116     1 34 C       118     1 35 C       
120     1 37 C       130     2  2 C       140     2  3 C       150     2  5 C       
160     2 14 C       165     2 15 C       170     2 19 C       180     2 20 C       
20      1 14 C       200     2 25 C       216     2 30 C       218     2 31 C       
220     2 33 C       2210    6  6 C       2270    6 11 C       2280    6 14 C       
230     2 34 C       2300    6 20 C       240     2 36 C       2400    6 21 C       
2410    6 22 C       250     3  5 C       260     3  6 C       270     3 11 C       
280     3 12 C       30      1 15 C       300     3 17 C       40      1 16 C       
400     3 22 C       404     3 25 C       409     3 26 C       421     4  7 C       
430     3 31 C       440     3 34 C       442     4 10 C       443     4 14 C       
444     4 16 C       445     4 17 C       446     4 21 C       45      1 17 C       
450     4 23 C       460     4 26 C       470     4 30 C       480     4 31 C       
50      1 21 C       500     4 36 C       510     5  1 C       530     5  6 C       
540     5  9 C       545     5 18 C       550     5 22 C       560     5 25 C       
570     5 29 C       580     5 30 C       60      1 22 C       70      1 23 C       
C       6 10 C       C       6  9 C       C       6  1 C       
C       5 35 C       C       4 35 C       C       3 21 C       C       3 16 C       
C       2 24 C       C       1 26 C       C       1  3 C       C       1  2 C       

LOGSIM ** FICHE/FRAME BREAK *****
LOGFORM
C  LOGFORM FOR VER 4.03 FEB. 1971 RJT
C  STRING INPUT.  ICOMPRESS=1, NO BLANK SUPRESSION =2 BLANK SUPRESSION
       SUBROUTINE STRING(NCHAR,LENGTH,IEND,ICOMPRESS,ITEL,IFLAG,LABEL,IFN)
       DIMENSION NCHAR(1)
       IEND=1
1      I=1
2      CALL CHAR(IFN,ICHAR)
       IF(-IFLAG)230
       IF(ICHAR)121,65
3      IF(ICHAR-6356992)4,8       ;C CTR A
4      IF(ICHAR-7405568)6,10      ;C CTR Q
6      IF(ICHAR-7143424)60,17     ;C CR
60     IF(ICHAR-6946816)7,2,7     ;C LF
65     GO TO (7,2)ICOMPRESS
7      IF(4200000-ICHAR)2
       NCHAR(I)=ICHAR
       I=I+1
       GO TO 2
8      TYPE 9
9      FORMAT($_$)
       I=I-1
       IF(I)1,1,95
95     NCHAR(I)=0
       GO TO 2
10     TYPE 11
11     FORMAT($^  $)
       DO 12 I=1,144
12     NCHAR(I)=0
       GO TO 1
121    IEND=2
       CLOSE(10)
       IF(IFN-10)13,888,13
888    TYPE 122
122    FORMAT(/$END OF FILE IN COMMANDS FILE$/)
13     IFN=3
17     DO 14 J=I,144
14     NCHAR(J)=O
20     DO 21 I=144,1,-1
       IF(-NCHAR(I))22
21     CONTINUE
22     LENGTH=I
       IF(1-I)70
18     IF(-NCHAR(1))70
19     LENGTH=0
       GO TO 210
70     IF(NCHAR(1)-1HE)210,80,210
80     IF(NCHAR(2)-1HN)110,90,110
90     IF(NCHAR(3)-1HD)120,100,120
100    IF(NCHAR(4))210,200,210
110    IF(NCHAR(2))210,120,210
120    IF(NCHAR(3))210,100,210
200    IEND=2
210    IF(NCHAR(LENGTH)-1H,)230,220,230
220    LENGTH=LENGTH-1
       IF(LENGTH)240,240
230    RETURN
240    IEND=2
       RETURN
       END


C  NUMBER INTEGER CONVERTER FROM A1 FORMAT
       SUBROUTINE NUMERIC(NCHAR,IST,IFIN,NUM,IE)
       DIMENSION NCHAR(1)
       IE=1;       NUM=0
       DO 30 I=IST,IFIN
       IF(NCHAR(I)-1H+)5,30     ;C  +
5      IF(NCHAR(I)-1H-)10,30     ;C   -
10     IF(NCHAR(I)-1H0)40        ;C   0
20     IF(1H9-NCHAR(I))40        ;C   9
30     CONTINUE
       GO TO 50
40     IE=2  ;C NOT NUMERIC
       RETURN
50     MINUS=1
       DO 70 I=IST,IFIN
       IF(NCHAR(I)-1H-)70,60,70  ;C   -
60     MINUS=-1
       GO TO 80
70     CONTINUE
80     J=1
       DO 120 I=IST,IFIN
       IF(NCHAR(I)-1H-)110,120
110    IADD=(NCHAR(I)-1H0)/(1H1-1H0)
       IDIFF=8388607-NUM*10
       IF(IDIFF-IADD)40
       NUM=NUM*10+IADD
115    J=J+1
120    CONTINUE
       NUM=NUM*MINUS
       RETURN
       END


C A1 TO A3 ALPHABETIC CHAR CONVERTER
       SUBROUTINE ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       DIMENSION NCHAR(1)
       IE=1
       NALPH1=0
       NALPH2=0
       ISTEP=1
       DO 8 I=IST,IFIN
       IF(NCHAR(I)-1H+)8,160
8      CONTINUE
       DO 30 I=IST,IFIN
       IF(NCHAR(I)-1H*)10,20  ;C EXCLUDE *
10     IF(NCHAR(I)-1H-)30,20,30  ;C EXCLUDE MINUS SIGN
20     IE=2   ;C  NOT ALL ALPHABETIC -- FLAG, BUT DO NOT ABORT
30     CONTINUE
       IF((IFIN-IST)-2)50,50
40     ISTEP=2
50     IF=IFIN
       IF(IF-IST)60,70
60     IF((IF-IST)-1)80,80,90
70     NALPH1=NCHAR(IST)
       RETURN
80     NALPH1=NCHAR(IST)+NCHAR(IF)/256
       RETURN
90     NALPH1=NCHAR(IST)+NCHAR(IST+1)/256+NCHAR(IST+2)/65536
       IF(NALPH1-3HAD*)94,92,94
92     IE=1  ;C VALID NAME
94     GO TO(95,100)ISTEP
95     RETURN
100    IS=IST+3
       IF(IF-IS)110,120
110    IF(IF-IS-1)130,130,140
120    NALPH2=NCHAR(IS)
       RETURN
130    NALPH2=NCHAR(IS)+NCHAR(IS+1)/256
       RETURN
140    NALPH2=NCHAR(IS)+NCHAR(IS+1)/256+NCHAR(IS+2)/65536
150    RETURN
160    IS1=IST
       IS2=I
       IF1=I-1
       IF2=IFIN
       IF(IF1-IS1)170,180
170    IF((IF1-IS1)-1)190,190,200
180    NALPH1=NCHAR(IS1)
       GO TO 210
190    NALPH1=NCHAR(IS1)+NCHAR(IS1+1)/256
       GO TO 210
200    NALPH1=NCHAR(IS1)+NCHAR(IS1+1)/256+NCHAR(IS1+2)/65536
210    IF(IF2-IS2)220,230
220    IF((IF2-IS2)-1)240,240,250
230    NALPH2=NCHAR(IS2)
       RETURN
240    NALPH2=NCHAR(IS2)+NCHAR(IS2+1)/256
       RETURN
250    NALPH2=NCHAR(IS2)+NCHAR(IS2+1)/256+NCHAR(IS2+2)/65536
       RETURN
       END


       FUNCTION IPWR(N,K)
       IF(-K)10
       IPWR=1
       RETURN
10     NUM=1
       DO 20 I=1,K
       NUM=NUM*N
20     CONTINUE
       IPWR=NUM
       RETURN
       END


       SUBROUTINE UNCOMP(ICOMP)
       DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL
       IF(-ICOMP)2
       RETURN
2      DO 3 I=250,1,-1
       IF(ITYPE(I))4,3,4
3      CONTINUE
4      IMAX=I


       K=IBLOCK(IMAX)
       DO 6 I=501,536
       IPRES(I)=0
6      IPRES(-I)=0
       DO 7 I=1,250
       IPRES(I)=0
       IPRES(-I)=0
       ITLAST(I)=0
7      ITPRED(I)=0
       DO 8 I=1,1400
8      IREACT(I)=0
       DO 11 I=1,IMAX
       IF(ITYPE(I)-11)11,9,11   ;C SWG
9      INPUT(IBLOCK(I))=INPUT(IBLOCK(I)-1)  ;C RESET SWG
11     CONTINUE
       DO 50 K=1,IMAX
       IF(1-K)10
       K1=1
       GO TO 15
10     K1=IBLOCK(K-1)+1
15     K2=IBLOCK(K)
       IF(ITYPE(K)-9)20,50   ;C TIM
       IF(ITYPE(K)-15)20,50   ;C AD*
       IF(ITYPE(K)-18)20,50   ;C THL
       IF(ITYPE(K)-19)20,50   ;C NUL
20     DO 45 I=K1,K2
       IF(ITYPE(K)-8)28,22    ;C SS
       IF(ITYPE(K)-11)28,24,28 ;C SWG
22     IF(I-K1)28,45,28
24     IF(I-K2)26,45,26
26     IF(I-K2+1)28,45
28     IF(IABS(INPUT(I))-251)30,45,45
30     MINUS=1
       IF(-INPUT(I))40,36,38
36     IREACT(I)=0
       GO TO 45
38     MINUS=-1
40     IREACT(I)=IPRES(-IABS(INPUT(I))-250)
       INPUT(I)=IPRES(IABS(INPUT(I))+250)*MINUS
45     CONTINUE
50     CONTINUE
       ITSTRT=0
       ITSTOP=0
       ITIME=0
       ICOMP=0
       RETURN
       END
LOGSIM ** FICHE/FRAME BREAK *****
LOGFORM SYMSORT

SYM.  PG.LN. IDENT.

1       1  6 C       10      6  8 C       10      5  3 C       10      3 29 C       
10      2 30 C       10      1 25 C       100     4  7 C       100     2 10 C       
11      6  3 C       11      1 26 C       110     4  9 C       110     3  6 C       
110     2 11 C       115     3 10 C       12      1 28 C       120     4 10 C       
120     3 11 C       120     2 12 C       121     1 30 C       122     1 34 C       
13      1 35 C       130     4 12 C       14      1 37 C       140     4 14 C       
15      6  9 C       150     4 15 C       160     4 16 C       17      1 36 C       
170     4 21 C       18      2  4 C       180     4 22 C       19      2  5 C       
190     4 24 C       2       5 22 C       2       1  7 C       20      6 14 C       
20      5  6 C       20      3 30 C       20      2 31 C       20      1 38 C       
200     4 26 C       200     2 13 C       21      2  1 C       210     4 27 C       
210     2 14 C       22      6 17 C       22      2  2 C       220     4 28 C       
220     2 15 C       230     4 29 C       230     2 17 C       24      6 18 C       
240     4 31 C       240     2 18 C       250     4 33 C       26      6 19 C       
28      6 20 C       3       5 24 C       3       1 10 C       30      6 21 C       
30      3 31 C       30      2 32 C       36      6 23 C       38      6 25 C       
4       5 25 C       4       1 11 C       40      6 26 C       40      3 33 C       
40      2 34 C       45      6 28 C       5       2 29 C       50      6 29 C       
50      3 34 C       50      2 36 C       6       5 31 C       6       1 12 C       
60      3 36 C       60      2 39 C       60      1 13 C       65      1 14 C       
7       5 36 C       7       1 15 C       70      3 37 C       70      3  2 C       
70      2  7 C       8       5 38 C       8       3 26 C       8       1 19 C       
80      3 39 C       80      3  3 C       80      2  8 C       888     1 33 C       
9       6  2 C       9       1 20 C       90      4  2 C       90      2  9 C       
92      4  4 C       94      4  5 C       95      4  6 C       95      1 23 C       
C       3 17 C       C       2 23 C       C       1  2 C       

LOGSIM ** FICHE/FRAME BREAK *****
LOGSWAPSYM
CSWAP5 IDENT   T.FLORYAN    DEC.26,1969
*
*  TWO ROUTINES TO SWAP HIGH COMMON IN FOS.  HIGH COMMON IS DEFINED
*  AS PAGE 5, OR OCTAL LOCATIONS 24000-27777 (2048 DECIMAL WORDS),
*  IN THE MAP:
*
*                                 PAGES
*              CORE:  0   1   2   3 / 4   5   6   7
*
*  FOS RESIDES IN PAGES 6 AND 7
*
*  CALL PUTRAD(KOMMON)
*      PLACES THE CURRENT CONTENTS OF PAGE 5 ON THE RAD AND LEAVES
*      IT IN CORE
*
*  CALL GETRAD(KOMMON)
*      REPLACES THE CURRENT CONTENTS OF PAGE 5 WITH THE CONTENTS THAT
*      WERE PUT ON THE RAD WITH 'CALL PUTRAD(KOMMON)'
*
*  CALL PUTRAD(KOMMON) MUST BE EXECUTED BEFORE ANY OCCURANCE OF
*  CALL GETRAD(KOMMON) OR INST. TRAPS WILL RESULT
*
*  'KOMMON' CONTAINS DATA THAT IS USED BY GETRAD AND PUTRAD AND MUST
*  NOT BE AFFECTED BY THE CALLING PROGRAM IN ANY WAY...IT IS ONLY TO BE
*  USED AS THE ARGUMENT FOR PUTRAD AND GETRAD
*
*  IF GETRAD AND PUTRAD ARE TO BE USED BETWEEN LINKS, 'KOMMON' MUST
*  BE PUT IN COMMON OR INST. TRAPS WILL RESULT
*
$PUTRAD ZRO    RTN
       LDA*    EOIND
       LRSH    6
       BRS     121
       BRS     43
       STP     OLDPAG
       XAB
       ETR     =77770077B
       XAB
       BRS     44
       LDX     =-4000B
       LDA     30000B,2
       STA     34000B,2
       BRX     *-2
       BRS     43
       CBA
       ETR     =7700B
       STA*    EOIND
       LDP     OLDPAG
       BRS     44
       BRR     RTN
$GETRAD ZRO    RTN
       LDA*    EOIND
       STA     LABEL
       BRS     43
       STP     OLDPAG
       XAB
       ETR     =77770077B
       MRG*    EOIND
       XAB
       BRS     44
       LDX     =-4000B
       LDA     34000B,2
       STA     30000B,2
       BRX     *-2
       LDP     OLDPAG
       BRS     44
       LDA     LABEL
       STA*    EOIND
       BRR     RTN
RTN    ZRO
LABEL  ZRO
OLDPAG BSS     2
EOIND  EQU     402B
       END
LOGSIM ** FICHE/FRAME BREAK *****
LOGSWAPSYM SYMSORT

SYM.  PG.LN. IDENT.

EOIND   2 34 CSWAP5  GETRAD  2 12 CSWAP5  LABEL   2 32 CSWAP5  
OLDPAG  2 33 CSWAP5  PUTRAD  1 30 CSWAP5  RTN     2 31 CSWAP5  
LOGSIM ** FICHE/FRAME BREAK *****
L1GSCOMSYM
C  L1GSCOMSYM VERSION 4.03  2/18/71 RJT
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),IGEN(32),WORD(0/15),IFNAM(10)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
C      TYPE 999
999    FORMAT(/$LINK COM$/)
       IF(-IRP)5
       OPEN(3,INPUT,$INST$)
       READ(3,49)(IGEN(1),I=1,62)
       READ(3,39)
39     FORMAT(/)
       READ(3,49)(IGEN(I),I=1,32)
49     FORMAT(A3)
       IRP=1
       CLOSE(3)
       STOP
5      OPEN(3,INPUT,$TEL$)
       IF(INTRP(1))9992
       ISKP=-1
       ISKP1=1
       LOUT=-1
       ASSIGN 1000 TO IRESTR
       GO TO 1010
1000   ISKP1=1
       ISKP=-1
       IF(ICOMP-2)1004,1002,1004

C ACCEPT A NEW OUT BLOCK
1002   LOUT=-1
       GO TO 90

C KEEP PREVIOUS OUT BLOCK SETUP
1004   LOUT=0
       GO TO 90
1010   DO 10 I=1,IMAX
       IF(ITYPE(I)-12)10,20,10
10     CONTINUE
       GO TO 90
20     LOUT=I
C: ALL UNUSED BLOCKS ARE ASSUMED TO BE NULL BLOCKS AND IBLOCK(J)
C: WHERE J IS A NULL BLOCK POINTS TO THE LAST INPUT OF J-1 BLOCK.
C: NOW DETERMINT THE REACTION TABLE
90     IPOINT=0
C: IBLK IS THE BLOCK # THAT AFFECTS ICHK
       DO 101 IBLK=1,IMAX
       IAFECT(IBLK)=IPOINT
       ILOOP=1
       DO 102 ICHK=1,IMAX
       K=IBLOCK(ICHK)
       IF(ITYPE(ICHK)-11)98,96,98
96     K=K-2
98     IF (K-ILOOP)102
       DO 103 I=ILOOP,K
       IF(IBLK-IABS(INPUT(I)))103,110,103
C: IBLK AFFECTS ICHK
110    IF(ITYPE(IBLK)-19)111,112,111
112    IP=0
       IF(ITYPE(ICHK)-20)113,114,113
113    IF(ITYPE(ICHK)-2) 111,114,111
114    IP=-537
       INPUT(I)=IP
       GOTO 103
111    IPOINT=IPOINT+1
       IREACT(IPOINT)=ICHK
       IAFECT(IBLK)=IPOINT
103    CONTINUE
       ILOOP=IBLOCK(ICHK)+1
102    CONTINUE
101    CONTINUE
C:IBLK IS THE BLOCK THAT AFFECTS BLOCK ICHK WHERE THE INPUTS OF ICHK
C: ARE COMPARED TO IBLK. IPOINT IS THE PRESENT POSITION IN THE IREACT
C: TABLE. IAFECT POINTS INTO THE IREACT TABLE.
C:
C: RUN TIME OUTPUT REQUEST GENERATES A COMBO OUT AND TRIGGER BLOCK
       ASSIGN 800 TO LABEL
       IFLAG=0
       CALL REARM
       CALL ALTMODE(1,IFLAG,LABEL)
       IF(ITIME-ITSTRT)200
       CALL INCON(LABEL,IFLAG)
200    CALL RUN(ISKP,ISKP1,LOUT,LABEL,IFLAG,IGEN)
       STOP
800    IFLAG=0
       TYPE 801
801    FORMAT(/$ABORTED$/)
       CALL COMAND(LABEL,IFLAG)
       GO TO 9993
9992   CALL DISALT
       CALL LINK(12,LINK1)
9993   END
       SUBROUTINE RUN(ISKP,ISKP1,LOUT,LABEL,IFLAG,IGEN)
       DIMENSION IT(100),JTRIG(16),IBIN(5),IGEN(32),IFNAM(10)
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
9010   ILOOP=1
       IF(ISKP)198
       CALL INCON(LABEL,IFLAG)
198    IF(ISKP1)253,253
       IF(-ITRACE)253
       IF(LOUT)196,253
       K1=IBLOCK(LOUT-1)+1
       K2=IBLOCK(LOUT)
       K3=K2-K1
       DO 20 I=1,K3
20     JOUT(I+1)=IABS(INPUT(K1+I))
       JOUT(1)=K3
       JTRIG(1)=1
       JTRIG(2)=IABS(INPUT(K1))
       JDELAY=IDELAY(LOUT)
       GOTO 253
196    WRITE(1,910)  ;C BLOCKS TO TRIGGER OUTPUT
       IJUMP=1
295    CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       NELEM=1
       DO 310 I=1,LENGTH
       IF(NCHAR(I)-1H,)310,300,310
300    NELEM=NELEM+1
310    CONTINUE
       IST=1
       DO 400 I=1,NELEM
       DO 320 J=IST,LENGTH
       IF(NCHAR(J)-1H,)320,330
320    CONTINUE
330    IFIN=J-1
       CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       CALL GIVENO(NALPH1,NALPH2,NUM,IPRES,IE)
       GO TO (340,370,340)IE
340    TYPE 350
350    FORMAT(//$*** INVALID BLOCK NAME DESCRIPTION$/)
       GO TO (355,360)IJUMP
355    DO 356 L=1,36
356    JTRIG(L)=0
       GO TO 196
360    DO 362 L=1,16
362    JOUT(L)=0
       GO TO 410
370    GO TO (380,390)IJUMP
380    JTRIG(I+1)=NUM
       GO TO 395
390    JOUT(I+1)=NUM
395    IST=J+1
400    CONTINUE
       GO TO (410,420)IJUMP
410    WRITE(1,915)  ;C BLOCKS TO OUTPUT
       IJUMP=2
       JTRIG(1)=NELEM
       GO TO 295
420    JOUT(1)=NELEM
251    WRITE(1,916)   ;C OUTPUT DELAY
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       CALL NUMERIC(NCHAR,1,LENGTH,JDELAY,IE)
       GO TO (253,500)IE
500    TYPE 510
510    FORMAT(//$*** VALUE NOT NUMERIC$/)
       GO TO 251
253    LC=IPWR(2,(JNUM/2))-1
       IF(JNUM)795,795,800
795    LC=0
       GO TO 850
800    DO 212 LC1=0,LC
       CALL INCON(LABEL,IFLAG)
       LL=LC1
       DO 802 K=1,5
802    IBIN(K)=-1
       K=1
805    IF(LL-1)810,807
806    IF((FLOAT(LL)/2.-FLOAT(LL/2))-.001)810,810
807    IBIN(K)=1
       GO TO 820
810    IBIN(K)=-1
820    LL=LL/2
       IF(LL)830,830
       K=K+1
       GO TO 805
830    K=1
       DO 840 JJ=1,JNUM,2
       IPRES(JCYCLE(JJ))=IBIN(K)
       IPRES(-JCYCLE(JJ))=-IBIN(K)
       K=K+1
840    CONTINUE
       CALL CYCLE
850    IF(ITRACE)240,240
       WRITE(IWHICH,920)
       GOTO 100
240    WRITE(IWHICH,600)
600    FORMAT(/$  BLOCK  $)
       DO 610 LL=1,JOUT(1)
610    WRITE(IWHICH,620)IPRES(JOUT(LL+1)+250)
620    FORMAT(1X,A3)
       WRITE(IWHICH,630)
630    FORMAT(/$  NAME   $)
       DO 632 LL=1,JOUT(1)
       IF(IPRES(-JOUT(LL+1)-250))634,632,634
632    CONTINUE
       GO TO 626
634    DO 625 LL=1,JOUT(1)
625    WRITE(IWHICH,620)IPRES(-JOUT(LL+1)-250)
626    K=2H01
       WRITE(IWHICH,922)(K,I=1,JOUT(1))
C: DETERMINE PREDICTED CHANGES IN INITIAL CONDITIONS
C   CHECK ALL BLOCKS AT TIME ZERO UNTIL NO CHANGES OCCUR
C   IF CHANGES CONTINUE TO OCCUR AFTER IMAX PASSES, CIRCUIT IS OSCILLATING
100    JPRINT =ITSTRT
       DO 2068 ICHECK=1,IMAX
       IAGAIN=1  ;C  SET NO STATE CHANGE FLAG
       DO 2066 I=1,IMAX
       IF(ITYPE(I))2066,2066
       NSTATE=IPRES(I)
       CALL STATE(I,NEXT,0,LABEL,IFLAG,IGEN)
       IF(IPRES(I)-NSTATE)2060,2066
2060   IAGAIN=0  ;C STATE CHANGE FOUND, CHECK ALL AGAIN
2066   CONTINUE
       IF(-IAGAIN)2072
2068   CONTINUE
       WRITE(1,2070)
2070   FORMAT(/$*** CIRCUIT OSCILLATING AT TIME=0$/)
       CALL DISALT
       CALL LINK(12,LINK1);C LINK TO 'SFE'
2072   JPRINT=ITIME
       CALL OUTPUT(1,0,JPRINT,LABEL,IFLAG)
202    ITMIN=8388607
       I3=0
       DO 203 I=1,IMAX
       IF(ITMIN-ITPRED(I))203,209,204
209    IF(8388607-ITMIN)203,203
       I4=I4+1
       IT(I4)=I
       GOTO 203
204    I4=1
       ITMIN=ITPRED(I)
       IT(I4)=I
203    CONTINUE
       IF(ITMIN-8388607)205,210,210
205    IF(ITSTOP-ITMIN)213
       ITIME=ITMIN
       IF(ITIME-JPRINT)700,700
       CALL OUTPUT(I3,-1,JPRINT,LABEL,IFLAG)
700    I3=0
       DO 219 I=1,I4
       MIN=IT(I)
219    CALL STATE(MIN,NEXT,1,LABEL,IFLAG,IGEN)
       DO 220 I=1,I4
       MIN=IT(I)
       I1=IAFECT(MIN-1)
       I2=IAFECT(MIN)
       I3=I3+IO(MIN,JTRIG)
       CALL TRACE(MIN,LABEL,IFLAG)
       IF(I2-I1)224,224,223
223    DO 206 J=I1+1,I2
       K=IREACT(J)
       CALL STATE(K,NEXT,0,LABEL,IFLAG,IGEN)
206    CONTINUE
224    CONTINUE
220    CONTINUE
       IF(I3)202,202
       IF(JPRINT-8388607)202
       JPRINT=ITIME+JDELAY
       GOTO 202
213    ILOOP=-1
       JPRINT=ITIME
       GO TO 301
210    CONTINUE
       JPRINT=ITIME
301    CALL OUTPUT(1,1,JPRINT,LABEL,IFLAG)
       IF(ILOOP)211
       WRITE(IWHICH,914)ITIME
       GOTO 212
211    WRITE(IWHICH,913)ITSTOP
212    CONTINUE
       IF(JNUM)905,905
       CALL INCON(LABEL,IFLAG)
905    CALL COMAND(LABEL,IFLAG)
       STOP
910    FORMAT(/$BLOCKS TO TRIGGER OUTPUT = $)
911    FORMAT(15F6.0/)
913    FORMAT(/I8,$  STOP AT TIME LIMIT$/)
914    FORMAT(/I8,$  STOP AT STEADY STATE$/)
915    FORMAT($BLOCKS TO BE OUTPUT = $)
916    FORMAT($OUTPUT DELAY = $)
917    FORMAT(F12.0/)
920    FORMAT(/$    TIME   BLK   TYP STATE$)
922    FORMAT(/$    TIME$,15(2X,A2))
       END


       SUBROUTINE COMAND(LABEL,IFLAG)
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15),IFNAM(10)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
9010   CONTINUE
600    WRITE(1,918)
       JNUM=0   ;C ELIMINATE CYCLING
       CALL STRING(NCHAR,LENGTH,IEND,1,1,IFLAG,LABEL,IFN)
       CALL ALPHA(NCHAR,1,3,ICOM,NALPH2,IE)
       IF(ICOM-3HRUN)303,300,303
303    IF(ICOM-3HTRA)304,301,304
304    IF(ICOM-3HQUI)310,309,310
310    IF(ICOM-3HQU )311,309,311
311    IF(ICOM-3HQ  )302,309,302
C: OTHER GO TO 'SFE'
C309    CLOSE
309    CALL EXIT
       STOP
300    ITRACE=0
       GOTO 305
301    ITRACE=1
       TYPE 315
315    FORMAT($OK$/)
305    WRITE(1,930)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       CALL NUMERIC(NCHAR,1,LENGTH,ITSTRT,IE)
       GO TO (390,380)IE
380    TYPE 405
       GO TO 305
390    IF(ITSTRT)395,398,398
395    TYPE 396
396    FORMAT(//$*** TIME < ZERO$/)
       GO TO 305
398    WRITE(1,932)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       CALL NUMERIC(NCHAR,1,LENGTH,ITSTOP,IE)
       GO TO (410,400)IE
400    TYPE 405
405    FORMAT(//$*** VALUE NOT NUMERIC$/)
       GO TO 390
410    IF(ITSTOP)412,414,414
412    TYPE 396
       GO TO 398
414    IF(ITSTOP-ITSTRT)416,418,418
416    TYPE 417
417    FORMAT(//$*** FINISH TIME LESS THAN START TIME$/)
       GO TO 305
418    IF(-ITRACE)253
       WRITE(1,933)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       CALL ALPHA(NCHAR,1,1,ICOM,NALPH2,IE)
       ICOMP=2
       IF(ICOM-1HY) 306,196,306
306    IF (ICOM-1HN)308,253,308
253    ICOMP=1
196     GO TO IRESTR
       STOP
308    WRITE(1,935)
       GOTO 418
302    CALL DISALT;C     LINK TO "SFE"
       CALL LINK(12,LINK1)
930    FORMAT($START TIME = $)
932    FORMAT($FINISH TIME = $)
933    FORMAT(/$OUTPUT CHANGES (Y OR N) ? $)
935    FORMAT($WHAT ? $)
918    FORMAT(/$:$)
       END


       SUBROUTINE CYCLE
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15),IFNAM(10)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
       DO 370 I=1,JNUM,2
       I1=JCYCLE(I)
       IF(IPRES(I1))371,371
       I1=I1-500
       WRITE(IWHICH,98)I1
98     FORMAT(/$*$,I2,$=T$)
       GOTO 370
371    I1=I1-500
       WRITE(IWHICH,99)I1
99     FORMAT(/$*$,I2,$=F$)
370    CONTINUE
2      RETURN
       END


       SUBROUTINE INCON(LABEL,IFLAG)
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15),IFNAM(10)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
9010   CALL GETRAD(IREAL)
C      TYPE 9020
9020   FORMAT($..?????.$)
       DO 100 I=1,IMAX
       IF(ITYPE(I)-11)100,50,100
50     INPUT(IBLOCK(I))=INPUT(IBLOCK(I)-1)
100    CONTINUE
       ITIME=0
C      IF(ITIME-ITSTRT)200,200
C      WRITE(IWHICH,937) ITIME
C      ITIME=ITSTRT
200    CONTINUE
198    RETURN
937    FORMAT(//$THE FOLLOWING COMPUTATION IS BASED UPON$/
     1 ,$INITIAL CONDITIONS OF TIME =$,I8//)
       END


C  MAIN2 OF LOGSIMCOM
       SUBROUTINE STATE(J,NEXT,ICHG,LABEL,IFLAG,IGEN)
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15),IFNAM(10)
       DIMENSION IGEN(32)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
9010   IF(ICHG)1000,1000
       GOTO(2500,2500,2500,2500,2500,2500,2500,81,1009,1010,1011,
     1 2002,2500,140,2500,2500,2500,2004,2004,2500,2500,2004,2004,
     2 2004,2500,2004,2500,2004,2500,2004,2500)ITYPE(J)
1000   GOTO(1001,1002,1003,1004,1005,1005,1005,1008,1009,1010,1011,
     1 1012,1013,1014,1015,1016,1017,2002,2002,1020,1021,2004,
     2 2004,2004,1025,2004,1027,2004,1029,2004,1400)ITYPE(J)
C: INVERTOR
1001   K=INPUT(IBLOCK(J))
       IF(IPRES(K))2,2,1
1      NEXT=-1
       GO TO 2000
2      NEXT=1
       GOTO 2000
C: AND
1002   IP=1
11     NEXT=1
       K1=IBLOCK(J-1)+1
       K2=IBLOCK(J)
       DO 10 I=K1,K2
       K=INPUT(I)
       NEXT=IAND(NEXT,IPRES(K))
10     CONTINUE
       NEXT=NEXT*IP
       GO TO 2000
C: OR
1003   IP=1
21     NEXT=-1
       K1=IBLOCK(J-1)+1
       K2=IBLOCK(J)
       DO 20 I=K1,K2
       K=INPUT(I)
20     NEXT=IOR(NEXT,IPRES(K))
       NEXT=NEXT*IP
       GO TO 2000
C: EOR
1004   K1=IBLOCK(J-1)+1
       K2=IBLOCK(J)
       K=INPUT(K1)
       K3=INPUT(K2)
       IF(IPRES(K)) 31,31,30
30     IF (IPRES(K3))32,32,33
32     NEXT=1
       GO TO 2000
31     IF (IPRES(K3))33,33,32
33     NEXT=-1
       GO TO 2000
C: RS FLIP FLOP
1005   K=IBLOCK(J)
       K1=INPUT(K-1)
       K2=INPUT(K)
       IS=IPRES(K1)
       IR=IPRES(K2)
       IF(ITYPE(J)-5)46,47,46
46     IF(ITYPE(J)-7)60,50,60
47     IF(IS)41,41,40
40     IF(IR)41,41,42
42      WRITE(1,45)IPRES(J+250),IPRES(-J-250),ITIME
45     FORMAT(//$*** R AND S OF BLOCK $,2A3,$ ARE BOTH ON AT TIME= $,I9/)
       IFN=3
       CALL COMAND(LABEL,IFLAG)
41     NEXT=-(IOR(IR,-(IOR(IS,IPRES(J)))))
       GO TO 2000
C: JK F F
50     K4=IBLOCK(J)-4
       K2=INPUT(K-2)
       KK=IPRES(K2)
       K3=INPUT(K-3)
       KJ=IPRES(K3)
       ITOG=INPUT(K4)
56     IF(IS)51,51,40
51     IF(IR)52,52,41
52     IF(ITLAST(IABS(ITOG))-ITIME)2004,53,2004
53     IF(IPRES(ITOG))54,54,55
55     NEXT=IAND(-(IPRES(J)),KJ)
       NEXT1=IAND(-(KK),IPRES(J))
       NEXT=IOR(NEXT,NEXT1)
       GO TO 2000
54     NEXT=IPRES(J)
       GO TO 2000
C: RST F F
60     K2=K-2
       ITOG=INPUT(K2)
65     IF(IS)61,61,40
61     IF(IR) 62,62,41
62     IF(ITIME-ITPRED(J))64,2004,64
64     IF(IPRES(ITOG))2004,2004
1999   IF(ITIME-ITLAST(IABS(ITOG)))2004,2600,2004
2000   IF(IPRES(J)-NEXT)2001,2002,2001
2001   IF(ITPRED(J)-8388607)2004,2600,2600
2002   ITPRED(J)=8388607
2004   RETURN
C: SINGLE SHOT #,SS,PD,PW,T
1008   K=INPUT(IBLOCK(J))
       IF(ITIME-ITPRED(J))80,2004
80     IF(IPRES(K))2004,2004
       IF(ITPRED(J)-8388607)2004
       IF(ITIME-ITLAST(IABS(K)))2004,2600,2004
81     IF(IPRES(J))85,85
       ITPRED(J)=8388607
       IP=-1
       GOTO 2700
85     ITPRED(J)=ITIME+INPUT(IBLOCK(J)-1)
       IP=1
       GOTO 2700
C: TIME  #,TIM,TIME
1009   ITPRED(J)=IDELAY(J)
       IF(ITIME-ITPRED(J))90
10091  ITPRED(J)=8388607
       IPRES(J)=1
       IPRES(-J)=-1
       ITLAST(J)=ITIME
       RETURN
90     IPRES(J)=-1
       IPRES(-J)=1
       ITLAST(J)=ITIME
       RETURN
C: CLOCK  #,CLK,PERIOD/2,T
1010   ITRIG=INPUT(IBLOCK(J))
       IF(IPRES(ITRIG))10091,10091
C:     IF(ITLAST(IABS(ITRIG))-ITIME)103
       IF(ITPRED(J)-ITIME-IDELAY(J))103,103
       ITPRED(J)=ITIME+IDELAY(J)
103    IF(ITIME-ITPRED(J))102,101,102
102    RETURN
101    ITPRED(J)=ITIME+IDELAY(J)
       GOTO 2501
C : PARALLEL WORD GENERATOR   #,PWB,PD,N,T,IA1,IA2,IA4,IA8
1400   IT=INPUT(IBLOCK(J)-4)
       IF(ITIME-ITPRED(J))1401,1599,1401
1401   IF(IPRES(IT))1599,1599,1402
1402   K=IBLOCK(J)
       IF(ITLAST(IABS(IT))-ITIME)1411,1403,1411
1403   IA8=IPRES(INPUT(K));C EIGHTS
       IA4=IPRES(INPUT(K-1));C  FOURS
       IA2=IPRES(INPUT(K-2));C TWOS
       IA1=IPRES(INPUT(K-3));C  ONES
       IF(IA8)1420,1420
1410   IA8=8
       GO TO 1425
1420   IA8=0
1425   IF(IA4)1440,1440
1430   IA4=4
       GO TO 1445
1440   IA4=0
1445   IF(IA2)1460,1460
1450   IA2=2
       GO TO 1465
1460   IA2=0
1465   IF(IA1)1480,1480
1470   IA1=1
       GO TO 1485
1480   IA1=0
1485   IWRD=IA8+IA4+IA2+IA1
1490   CALL CONB(WORD(IWRD),Z,IWID)
       DO 1498 KJ=1,IWID-1
       IF(IPRES(-J-250)-IGEN(KJ))1498,1497,1498
1497   IF(IBITF(Z,KJ+1))1493,1493,1598
1498   CONTINUE
       IF(-IBITF(Z,1))1598
1493   IF(-IPRES(J))1491,1411,1411
1598   IF(-IPRES(J))1411
1491   ITPRED(J)=ITIME+IDELAY(J)
1599   RETURN
1411   ITPRED(J)=8388607
       RETURN
C: SERIAL WORD GENERATOR  #,SWG,PD,T,R,OCTAL WORD
1011   K=IBLOCK(J)
       IADD=0
       IR=INPUT(K-2)  ;C RESET
       IT=INPUT(K-3)  ;C TRIGGER
       IP=INPUT(K)    ;C LATEST VALUE OF OCTAL WORD
       IF(IPRES(IR))110,110
       IF(8388607-ITPRED(J))2600,2600
       IF(ITIME-ITPRED(J))2004
       INPUT(K)=INPUT(K-1)  ;C PUT IN NEW OCTAL WORD
       IF(-IPRES(IT))1112
       ITPRED(J)=8388607
       RETURN
1112   IP=INPUT(K-1)  ;C RESET TO ORGINAL OCTAL WORD
110    NP=IABS(IP)
       IF(-IPRES(IR))1113
       IF(ITIME-ITPRED(J))114
1113   XP=NP
       IP=IP/2
       I=-1   ;C EVEN FALSE
       IF(XP/2.-FLOAT(NP/2))111,111
       I=1    ;C ODD TRUE
       IADD=1
111    IF(NP)112,115,112
115    I=1
       IF(INPUT(K-1))116,221
       I=-1
       GO TO 116
112    IF(-INPUT(K))116,221
       IP=IP-IADD
116    IPRES(J)=I
       IPRES(-J)=-I
       GO TO 222
221    IPRES(J)=0
       IPRES(-J)=1
222    ITPRED(J)=8388607
       ITLAST(J)=ITIME
       INPUT(K)=IP
       RETURN
114    K=IT
       GOTO 80
C: OUTPUT- #,OUT,PD,TRIGGER,I1,...I15
C: PRESENT IMPLEMENTATION NEEDS ONLY A RETURN
1012   GOTO 2002
C: TRIGGER- #,TRG,PD,I1,...I15
1013   K1=IBLOCK(J-1)+1
       K2=IBLOCK(J)
       IF(ITIME-ITPRED(J))130,2004
130    DO 132 I=K1,K2
       IF(ITLAST(IABS(INPUT(I)))-ITIME)132,133
132    CONTINUE
       RETURN
133    IF(ITPRED(J)-8388607)2004,2600,2600
C: STOP- #,STO,0
1014   NEXT=IPRES(INPUT(IBLOCK(J)))
       IF(NEXT)2002,2002,140
140    IF(8388607-ITPRED(J))2600,2600
       IF(ICHG)2004,2004
       IPRES(J)=1
       IPRES(-J)=-1
       ITLAST(J)=ITIME
       CALL TRACE(J,LABEL,IFLAG)
       JPRINT=ITIME
       CALL OUTPUT(1,1,JPRINT,LABEL,IFLAG)
       WRITE(IWHICH,145)ITIME
145    FORMAT(/I8,$  STOP BLOCK ACTIVATED$/)
       CALL COMAND(LABEL,IFLAG)
       STOP
C: AD* - #,AD*,0
1015   RETURN
C: FULL ADDER #,ADD,PD,I1,I2,C
1016   K=IBLOCK(J)
       IC=IPRES(INPUT(K))
       I2=IPRES(INPUT(K-1))
       I1=IPRES(INPUT(K-2))
       IS1=IAND(I1,-I2)
       IS1=IAND(IS1,-IC)
       IS2=IAND(-I1,I2)
       IS2=IAND(IS2,-IC)
       IS3=IAND(-I1,-I2)
       IS3=IAND(IS3,IC)
       IS=IAND(I1,I2)
       IS=IAND(IS,IC)
       IS=IOR(IS,IS1)
       IS=IOR(IS,IS2)
       IS=IOR(IS,IS3)
       IS1=IAND(I1,I2)
       IS2=IAND(I1,IC)
       IC=IAND(IC,I2)
       IC=IOR(IC,IS2)
       IC=IOR(IC,IS1)
       K=J
164    IF(IPRES(K)-IS)160,161,160
160    IF(ITPRED(K)-8388607)163,165,165
161    ITPRED(K)=8388607
       GOTO 162
163    IF(ICHG)162,162
       IPRES(K)=-IPRES(K)
       IPRES(-K)=IPRES(-K)
       ITLAST(K)=ITIME
       GOTO 161
165    ITPRED(K)=ITIME+IDELAY(K)
162    IF(J+1-K)2004,2004
       K=J+1
       IS=IC
       GOTO 164
C: THRESHOLD #,THR,PD,THL #,I1,...I4
1017   K1=IBLOCK(J-1)+1
       K2=IBLOCK(J)
       IT=INPUT(K1)
       IF(ITYPE(IT)-18)170,171,170
170    WRITE(1,173)IPRES(IT+250),IPRES(-IT-250),IPRES(J+250),
                   IPRES(-J-250)
173    FORMAT(//$*** BLOCK NAME$,1X,2A3,1X,$ IS NOT A THRESHOLD LEVEL
 FOR BLOCK $,2A3/)
       IFN=3
       CALL COMAND(LABEL,IFLAG)
171    K1=K1+1
       K3=IBLOCK(IT-1)+1
       K4=IBLOCK(IT)
       IW=IDELAY(IT)
       IF(K2-K1-K4+K3)174,175,174
174    WRITE(1,176)IPRES(J+250),IPRES(-J-250)
176    FORMAT(//$*** MISMATCH IN NUMBER OF WEIGHTS FOR THRESHOLD BLOCK$
                1X,2A3/)
       IFN=3
       CALL COMAND(LABEL,IFLAG)
175    IP=0
       DO 177 I=K1,K2
       IF(IPRES(IABS(INPUT(I))))177,177
       IP=IP+INPUT(K3)
177    K3=K3+1
       NEXT=-1
       IF(IP-IW)2000,2000
       NEXT=1
       GOTO 2000
C: NAND - #,NAN,PD,I1,...I5
1020   IP=-1
       GOTO 11
C: NOR - #,NOR,PD,I1,...I5
1021   IP=-1
       GOTO 21
C: COUNTER-#,CNB,PD,T,S,R,D/U
1025   K=IBLOCK(J)
       IR=IPRES(INPUT(K-1))
       IS=IPRES(INPUT(K-2))
253    IU=IPRES(INPUT(K))
       IT=INPUT(K-3)
       IF(IU)252,252
       ITOG=IT
       GOTO 65
252    ITOG=IT
       IF(IPRES(-J-250))66,65,66
66     DO 67 I=1,32
       IF(IPRES(-J-250)-IGEN(I))67,10096,67
67     CONTINUE
       GO TO 65
10096  ITOG=-IT
       GOTO 65
C: SHIFT REG- #,SFB,PD,T,RD,LD,R,L/R
1027   K=IBLOCK(J)
       IS=-1
       IU=IPRES(INPUT(K))
       IR=IPRES(INPUT(K-1))
       ILD=IPRES(INPUT(K-2))
       IRD=IPRES(INPUT(K-3))
       ITOG=INPUT(K-4)
       KJ=IOR(IAND(ILD,IU),IAND(IRD,-IU))
       KK=-KJ
       GOTO 56
C: PRESET COUNTER BLOCK- #,PRB,PD,T,SD,SC,U/D
1029   K=IBLOCK(J)
       IS=IPRES(INPUT(K-1))
       IF(IS)290,290
       IS=IPRES(INPUT(K-2))
       IR=-IS
       GOTO 253
290    IS=-1
       IR=-1
       GOTO 253
2500   ITPRED(J)=8388607
2501   IPRES(J)=-IPRES(J)
       IPRES(-J)=-IPRES(-J)
       ITLAST(J)=ITIME
       RETURN
2600   ITPRED(J)=IDELAY(J)+ITIME
       RETURN
2700   IPRES(J)=IP
       IPRES(-J)=-IP
       ITLAST(J)=ITIME
       RETURN
       END
       FUNCTION IAND(I1,I2)
       IF(I1)2,2,1
1      IF(I2)2,2,3
3      IAND=1
       RETURN
2      IAND=-1
       RETURN
       END
       FUNCTION IOR(I1,I2)
       IF(I1)2,2,1
2      IF (I2)3,3,1
3      IOR=-1
       RETURN
1      IOR=1
       RETURN
       END
       FUNCTION NOT(I1)
       IF(I1)2,2,1
2      NOT=-1
       RETURN
1      NOT=1
       RETURN
       END
       FUNCTION IO(MIN,JOUT)
       DIMENSION JOUT(16)
       IF(JOUT(1))3,3
       DO 1 J=2,JOUT(1)+1
       IF(MIN-JOUT(J))1,2,1
1      CONTINUE
3      IO=0
       RETURN
2      IO=1
       RETURN
       END


C  MAIN3 OF LOGSIMCOM
       SUBROUTINE OUTPUT(I3,LAB,IPRINT,LABEL,IFLAG)
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15),IFNAM(10)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
C: I3-OUTPUT-NO(-,0),YES(+)
C: LABEL- S(0),RUN(-),STOP(+)
C: IPRINT- TIME FOR NEXT OUTPUT
9010   IF(ITIME-ITSTRT)1
       IF(ITRACE)3,3,1
3      IF(ITIME-IPRINT)13,2,2
13     IF(I3)1,1,2
1      RETURN
2      IF(JOUT(1))1,1
       JTIME=ITIME
       IF(IPRINT-ITIME)12,11
       IF(IPRINT-8388607)1
       IPRINT=JDELAY+ITIME
       IF(JDELAY)11,11,1
12     JTIME=IPRINT
11     IPRINT=8388607
       IF(LAB)7,5,6
5      WRITE(IWHICH,96)JTIME
       GOTO 8
6      WRITE(IWHICH,95)JTIME
       GOTO 8
7      WRITE(IWHICH,99)JTIME
99     FORMAT(/I8,2X)
8      DO 4 I=2,JOUT(1)+1
       IF(IPRES(JOUT(I)))10,10,20
10     WRITE(IWHICH,98)
       GOTO 4
20     WRITE(IWHICH,97)
4      CONTINUE
       RETURN
98     FORMAT(4H0   )
97     FORMAT(4H 1  )
96     FORMAT(/I8,2HS )
95     FORMAT(/I8,2HF )
       END
       SUBROUTINE TRACE(MIN,LABEL,IFLAG)
       DIMENSION NTYPE(31),IFNAM(10)
      DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID,IRESTR
       COMMON IFNAM,ICOM,LENGTH,IFLG
9010   IF(ITIME-ITSTRT)1
       IF(ITRACE)1,1,2
1      RETURN
2      IST=1HT
       ISF=1HF
       NTYPE(1)=3HINV
       NTYPE(2)=3HAND
       NTYPE(3)=2HOR
       NTYPE(4)=3HEOR
       NTYPE(5)=2HRS
       NTYPE(6)=3HRST
       NTYPE(7)=2HJK
       NTYPE(8)=2HSS
       NTYPE(9)=3HTIM
       NTYPE(10)=3HCLK
       NTYPE(11)=3HSWG
       NTYPE(12)=3HOUT
       NTYPE(13)=3HTRG
       NTYPE(14)=3HSTO
       NTYPE(15)=3HAD*
       NTYPE(16)=3HADD
       NTYPE(17)=3HTHR
       NTYPE(18)=3HTHL
       NTYPE(19)=3HNUL
       NTYPE(20)=3HNAN
       NTYPE(21)=3HNOR
       NTYPE(25)=3HCNB
       NTYPE(27)=3HSFB
       NTYPE(29)=3HPRB
       NTYPE(30)=3HPWG
       NTYPE(31)=3HPWB
       IF(IPRES(MIN))10,10,20
10     WRITE(IWHICH,99)ITIME,IPRES(MIN+250),IPRES(-MIN-250),
              NTYPE(ITYPE(MIN)),ISF
       RETURN
20     WRITE(IWHICH,99)ITIME,IPRES(MIN+250),IPRES(-MIN-250),
              NTYPE(ITYPE(MIN)),IST
       RETURN
99     FORMAT(/I8,2X,2A3,1X,A3,3X,A1)
       END


       FUNCTION IPWR(N,K)
       IF(-K)10
       IPWR=1
       RETURN
10     NUM=1
       DO 20 I=1,K
       NUM=NUM*N
20     CONTINUE
       IPWR=NUM
       RETURN
       END
LOGSIM ** FICHE/FRAME BREAK *****
L1GSENTSYM
C  L1GSENTSYM  VERSION 4.03 2/18/71 RJT
       DIMENSION IELEM(2,19),ITRANS(2,19),IGEN(32),IFNAM(10)
       DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID
       COMMON IFNAM,ICOM,LENGTH,IFLG
       IF(-IDUM)2000
       OPEN(3,INPUT,$INST$)
       READ(3,40)(IGEN(1),I=1,62)
       READ(3,30)
30     FORMAT(/)
       READ(3,40)(IGEN(I),I=1,32)
40     FORMAT(A3)
       IDUM=1
       CLOSE(3)
       STOP


C TEST FOR FILE NAME
C2000   TYPE 9999
9999   FORMAT($LINK ENT$/)
2000   TYPE 2010
       IFLAG=0
       CALL REARM
       CALL ALTMODE(2,IFLAG)
       IF(INTRP(1))5000
2010   FORMAT(/)
       ITEL=1
       OPEN(3,INPUT,$TEL$)
2020   IF(I-ITEL)2035
       TYPE 2030
2030   FORMAT($BLK DES: $)
2035   CALL STRING(NCHAR,LENGTH,IEND,2,ITEL,IFLAG,LABEL,IFN)
       IF(-IFLAG)5000
       GO TO (2040,5000)IEND
2040   IF(LENGTH)5000,5000
2050   CALL BLKDES(NCHAR,LENGTH,NELEM,IELEM,NERROR,IPRES,NTYPE)
       IF(NERROR)2070,2070
2060   CALL ERROR(NERROR,NCHAR,LENGTH,ITEL)
       GO TO 2020
2070   DO 2072 I=1,LENGTH
       IF(NCHAR(I)-1H,)2072,2074
2072   CONTINUE
2074   IFIN=I-1
       CALL ALPHA(NCHAR,1,IFIN,NALPH1,NALPH2,IE)
       GO TO (2076,2075)IE
2075   NERROR=2  ;C INVALID BLOCK NO. DES.
       GO TO 2060
2076   CALL GIVENO(NALPH1,NALPH2,NUM,IPRES,IE)
       GO TO (2079,2078,2077)IE
2077   NERROR=3  ;C NO. OF BLOCKS EXCEEDS 250
       GO TO 2060
2078   NERROR=11 ;C BLOCK PRESENTLY BEING USED
       GO TO 2060
2079   KNUM=NTYPE-21
       IELEM(1,1)=JNUM
       JNELEM=NELEM
       IF(NTYPE-22)2084
       GO TO (2082,2082,2082,2084,2082,2084,2082,2084,2082,2084)KNUM
2082   JNELEM=NELEM-1
2084   CALL EXPAND(JNUM,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,
     1 IPRES,JNELEM,NERROR,IPOINT)
       IPRES(JNUM+250)=NALPH1
       IPRES(-JNUM-250)=NALPH2
       IF(NTYPE-22)2200
C  BLOCK TYPES >=22
   4   GO TO (2086,2086,2086,2090,2086,2090,2086,2090,2086,2086,2090)KNUM
2086   IF(33-IELEM(1,4))2088,2090,2090
2088   NERROR=16   ;C GENERATED BLOCKS EXEEDS LIMITS
       GO TO 2060
2090   CALL BLKGEN(NTYPE,IELEM,NELEM,ITYPE,IBLOCK,INPUT,IDELAY,
          IPOINT,NERROR,IPRES,IREACT,IGEN)
       IF(NERROR)4000,4000,2060
2200   CALL NORMBK(IELEM,NELEM,NTYPE,ITRANS,NCHAR,LENGTH,ITEL,
         IPRES,IREACT,ITYPE,IBLOCK,INPUT,IDELAY,IPOINT,NERROR,
         IGEN)
       IF(-NERROR)2060
4000   JNUM=JNUM+1
       GO TO 2020
5000   IFLAG=0
       CLOSE (3)
       DO 5010 I=1,144
5010   NCHAR(I)=0
       CALL DISALT
       CALL LINK(12,LINK1);C    LINK TO "SFE"
       END
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMC
L1GSCOMSYM,L1GC
NOTHING,CONB
LOGFORM,LOGFORMB
LOGDES,LOGDESB
SWAPSYM,SWAPBIN
LIB,LIB1
NOTHING,ILIB
***,;G;LL1GSCO
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMC
L1GSCOMSYM,L1GC
NOTHING,CONB
LOGFORM,LOGFORMB
LOGDES,LOGDESB
SWAPSYM,SWAPBIN
LIB,LIB1
NOTHING,ILIB
***,;G;LL1GSCO
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIME
L1GSENTSYM,L1GE
LOGBLDE,LOGBLDEB
LOGDES,LOGDESB
LOGFORM,LOGFORMB
NOTHING,ILIB
LIB,LIB1
***,;G;LL1GSEN
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMI
L1GSINPSYM,L1GI
LOGBLDR,LOGBLDRB
LOGDES,LOGDESB
LOGFORM,LOGFORMB
NOTHING,ILIB
LIB,LIB1
***,;G;LL1GSIN
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMM
L1GSIMSYM,L1GSIMB
NOTHING,*ILIB
***,;WFTLOGSIM
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMR
L1GSRUNSYM,L1GR
LOGFORM,LOGFORMB
SWAPSYM,SWAPBIN
NOTHING,ILIB
LIB,LIB1
***,;G;LL1GSRU
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMS
L1GSSFESYM,L1GS
LOGFORM,LOGFORMB
LOGDES,LOGDESB
SWAPSYM,SWAPBIN
LIB,LIB1
NOTHING,ILIB
***,;G;LL1GSSF
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMST
L1GSSTRSYM,L1GST
LOGPUT,LOGPUTB
LOGDES,LOGDESB
LOGFORM,LOGFORMB
NOTHING,ILIB
LIB,LIB1
***,;G;LL1GSST
***,@
***,;QCOM TEL
LOGSIM ** FICHE/FRAME BREAK *****
L1GSIMSYM
C  L1GSIMSYM       START OF LOGSIM PROGRAM
       DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),JCYCLE(10),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,IREACT,IAFECT,INPUT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID
       COMMON IFNAM,ICOM,LENGTH,IFLG
       CALL REARM
       CALL ALTMODE(2,IFLAG)
       LINK1(1)=3H(@6
       LINK1(2)=3HLI)
       LINK1(3)=3HL1G
       LINK1(4)=3HSSF
       LINK2(1)=3H(@6
       LINK2(2)=3HLI)
       LINK2(3)=3HL1G
       LINK2(4)=3HSIN
       LINK3(1)=3H(@6
       LINK3(2)=3HLI)
       LINK3(3)=3HL1G
       LINK3(4)=3HSRU
       LINK4(1)=3H(@6
       LINK4(2)=3HLI)
       LINK4(3)=3HL1G
       LINK4(4)=3HSCO
       LINK5(1)=3H(@6
       LINK5(2)=3HLI)
       LINK5(3)=3HL1G
       LINK5(4)=3HSEN
       IWHICH=1
       IFN=10
       NUM=12
       CALL DISALT
       CALL LINK(NUM,LINK1)
       STOP
       END
LOGSIM ** FICHE/FRAME BREAK *****
L1GSSTRSYM
C  L1GSSTRSYM VERSION 4.03 2/18/71 RJT
       DIMENSION IFNAM(10),NTYPE(31),JCYCLE(10)
       DIMENSION ITYPE(250),IBLOCK(250),INPUT(1400),IAFECT
     1 (250),IREACT(1400),IDELAY(250),ITPRED(250),IPRES(-537/537),
     2 ITLAST(250),JOUT(16),LINK1(4),LINK2(4),LINK3(4),LINK4(4),LINK5(4),
     3 NCHAR(144),WORD(0/15)
       COMMON IPRES,ITPRED,ITLAST,IDELAY,INPUT,IREACT,IAFECT,IBLOCK
     1 ,ITYPE,JOUT,ITRACE,JNUM,ITSTRT,ITSTOP,ITIME,IMAX,JDELAY,
     2 IPOINT,LINK1,LINK2,LINK3,LINK4,LINK5,NCHAR,JCYCLE,ICOMP,IREAL,IFN
     3 ,WORD,IWHICH,IWID
       COMMON IFNAM,ICOM,LENGTH,IFLG
       IF(-IDUM)4
1      OPEN(3,INPUT,$INST$)
       READ(3,2)(NTYPE(I),I=1,31)
2      FORMAT(A3)
       CLOSE(3)
       IDUM=1
       STOP
C4      TYPE 40
40     FORMAT($LINK STR$/)
4      IFLAG=0
       ASSIGN 9999 TO LABEL
       CALL REARM
       CALL ALTMODE(2,IFLAG)
       IF(INTRP(1))9999
       GO TO (9999,9999,9999,9999,9999,9999,9999,9999,9999,9999,
     1        1000,1500,4000,4000,4000,9999,3950,900 ,9999,9999,
     2        9999,9999,4000,4000,7500,9999,9999,9999,9999,9999,4000)ICOM
C FILE COMMANDS
900    CLOSE(4)
       DO 910 I=1,LENGTH
       IF(NCHAR(I))910,922
910    CONTINUE
912    FORMAT(/$INPUT FROM: $)
914    FORMAT(/$OUTPUT TO: $)


C NO FILE NAME
       GO TO (916,916,9999,9999,9999,9999,9999,918,9999,9999)(ICOM-10)
916    TYPE 912
       GO TO 920
918    TYPE 914
920    CALL STRING(NCHAR,LENGTH,IEND,1,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)9999
       CLOSE(3)
       IST=-2
       GO TO 924
922    LENGTH=LENGTH-I
       IST=I-2
924    DO 926 I=1,10
       IST=IST+3
       IFIN=IST+2
       CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       IFNAM(I)=NALPH1
926    CONTINUE
       GO TO (930,930,9999,9999,9999,9999,9999,930,9999,9999)(ICOM-10)
928    IBIN=2   ;C BINARY FILE
       GO TO 932
930    IBIN=3  ;C SYMBOLIC FILE
932    GO TO (934,934,9999,9999,9999,9999,9999,936,9999,9999)(ICOM-10)
934    IOD=2   ;C INPUT
       GO TO 938
936    IOD=3   ;C OUTPUT
       IF(-IFLAG)9999
938    CALL OPEN(IOD,LENGTH,IFNAM,4,IBIN)
       IF(IOD)9999,940,942
940    ITEL=1
       GO TO 946
942    IF(2-IOD)944
944    ITEL=2
946    CLOSE(3)
       GO TO 4045
C INPUT #11
1000   DO 1010 I=1,250    ;C ZERO ARRAYS
       ITYPE(I)=0
       IDELAY(I)=0
       IBLOCK(I)=0
       ITPRED(I)=0
       ITLAST(I)=0
1010   IAFECT(I)=0
       DO 1020 I=-537,537
1020   IPRES(I)=0
       DO 1030 I=1,1400
       INPUT(I)=0
1030   IREACT(I)=0
       ITSTRT=0
       ITSTOP=0
       ITIME=0
       IMAX=0
1040   IPOINT=1
1200   ICOMP=0
       CALL DISALT
       CALL LINK(12,LINK2)  ;C LINK TO INPUT SECTION


C ADD  #12
1500   DO 1510 I=250,1,-1
       IF(-ITYPE(I))1520
1510   CONTINUE
1520   IPOINT=IBLOCK(I)+1
       CALL UNCOMP(ICOMP)
       GO TO 1200


C DELETE  #13
2000   IF(-IFLAG)9999
2005   CALL UNCOMP(ICOMP)
       DO 2120 J=K2,K1,-1
       IF(1-J)2030
2020   K=IBLOCK(J)
       J1=1
       GO TO 2035
2030   K=IBLOCK(J)-IBLOCK(J-1)
       J1=IBLOCK(J-1)+1
2035   DO 2060 L=250,1,-1
       IF(-ITYPE(L))2070
2060   CONTINUE
2070   IMAX=L
       LMAX=IBLOCK(IMAX)
       DO 2080 L=J,IMAX
       IF(250-L-1)2076
2074   ITYPE(L)=ITYPE(L+1)
       IDELAY(L)=IDELAY(L+1)
       IPRES(L+250)=IPRES(L+251)
       IPRES(-L-250)=IPRES(-L-251)
       IAFECT(L)=IAFECT(L+1)
       ITPRED(L)=ITPRED(L+1)
       ITLAST(L)=ITLAST(L+1)
       IF(IBLOCK(L+1))2078,2078
       IBLOCK(L)=IBLOCK(L+1)-K
       GO TO 2080
2076   ITYPE(L)=0
       IDELAY(L)=0
       IPRES(L+250)=0
       IPRES(-L-250)=0
       IAFECT(L)=0
       ITPRED(I)=0
       ITLAST(L)=0
2078   IBLOCK(L)=0
2080   CONTINUE
       DO 2110 L=J1,LMAX
       IF(1400-L-K)2100
2090   INPUT(L)=INPUT(L+K)
       IREACT(L)=IREACT(L+K)
       GO TO 2110
2100   INPUT(L)=0
       IREACT(L)=0
2110   CONTINUE
2120   CONTINUE
       IF(ICOM-15)2130,3010
2130   TYPE 4330
       GO TO 4285


C INSERT  #14
2520   JNUM=K1
       CALL UNCOMP(ICOMP)
       CALL DISALT
       CALL LINK(12,LINK5)   ;C @LOGSIMENT
       STOP


C ALTER  # 15
3000   IF(-IFLAG)9999
3005   K2=K1
       CALL UNCOMP(ICOMP)
       NELEM=1
       GO TO 2000
3010   JNUM=J+1
       CALL DISALT
       CALL LINK(12,LINK5)  ;C @LOGSIMENT
       STOP


C LIST  #17
3950   IF(-IFLAG)9999
       OPEN(4,OUTPUT,$TEL$)
       ITEL=1
C NAMES & RANGE
4000   DO 4002 I=1,LENGTH    ;C CHECK FOR BLK NAMES
       IF(NCHAR(I))4004,4004
4002   CONTINUE
       GO TO 4008
4004   IF(NCHAR(I+1))4008,4008
       DO 4006 J=I+1,LENGTH
4006   NCHAR(J-I)=NCHAR(J)
       LENGTH=LENGTH-I
       GO TO 4015
4008   IF(ICOM-14)4009,4012
4009   IF(ICOM-15)4022,4024,4022
4024   TYPE 4026
4026   FORMAT(/$BLK NAME: $)
       GO TO 4014
4022   TYPE 4010
4010   FORMAT(/$BLK NAMES: $)
       GO TO 4014
4012   TYPE 4013
4013   FORMAT(/$BEFORE BLK NAME: $)
4014   CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)9999
4015   CLOSE(3)
       CALL ALPHA(NCHAR,1,LENGTH,NALPH1,NALPH2,IE)
       IF(NALPH1-3HALL)4018,4017,4018
4017   LENGTH=0
4018   NELEM=1
       DO 4030 I=1,LENGTH
       IF(NCHAR(I)-1H,)4030,4020,4030
4020   NELEM=NELEM+1
4030   CONTINUE
       IF(-LENGTH)4100
4040   GO TO (4045,9999,9999,4045,4045,9999,9999,9999,4045,
              4045,4045,4045,9999,9999,9999,9999,9999,9999,4045)(ICOM-12)
4045   DO 4050 I=250,1,-1
       IF(ITYPE(I))4055,4050,4055
4050   CONTINUE
4055   IMAX=I
       IF(-IMAX)4080
4060   TYPE 4070
4070   FORMAT(/$*** NO CIRCUIT$/)
       GO TO 9999


C LIST ALL BLOCKS
4080   IF(ICOM-31)4081,7300
4081   K1=1
       K2=IMAX
       NELEM=1
       I=1
       GO TO 4250
4100   IST=1     ;C FIND END OF FIRST ELEM
       DO 4110 I=1,LENGTH
       IF(NCHAR(I)-1H,)4110,4120
4110   CONTINUE
4120   IFIN=I-1


       DO 4310 I=1,NELEM
       DO 4140 J=IST,IFIN   ;C BLOCK RANGE
       IF(NCHAR(J)-1H-)4140,4180
4140   CONTINUE


C SINGLE BLOCK
       CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       GO TO (4160,4145)IE
4145   NERROR=2  ;C ILLEGAL CHAR IN NAME
4150   CALL ERROR(NERROR,NCHAR,LENGTH,ITEL)
       IFN=3
       GO TO 9999
4160   CALL GIVENO(NALPH1,NALPH2,NUM,IPRES,IE)
       GO TO (4145,4170,4145)IE
4170   K1=NUM
       K2=NUM
       IF(ICOM-14)4175,2520
4175   GO TO 4250


C BLOCK RANGE
4180   CALL ALPHA(NCHAR,IST,J-1,NALPH1,NALPH2,IE)
        GO TO (4190,4145)IE
4190   CALL GIVENO(NALPH1,NALPH2,K1,IPRES,IE)
       GO TO (4145,4200,4145)IE
4200   CALL ALPHA(NCHAR,J+1,IFIN,NALPH1,NALPH2,IE)
       GO TO (4210,4145)IE
4210   CALL GIVENO(NALPH1,NALPH2,K2,IPRES,IE)
       GO TO (4145,4250,4145)IE


C LIST
4250   IF(K1-K2)4270,4270
       TYPE 4260
4260   FORMAT(/$*** INVALID BLOCK RANGE$/)
       GO TO 9999
4270   GO TO (2000,9999,3000,9999,4275,4275,9999,9999,9999,9999,
     1        7000,7250,9999,9999,9999,9999,9999,9999,7000)(ICOM-12)
4275   DO 4280 N=K1,K2
       CALL LIST(N,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,IPRES,NTYPE,ITEL)
       IF(-IFLAG)9999
4280   CONTINUE
4285   IST=IFIN+2
       DO 4290 L=IST,LENGTH
       IF(NCHAR(L)-1H,)4290,4300
4290   CONTINUE
4300   IFIN=L-1
       IF(NELEM-1)4310,4320
4310   CONTINUE
4320   WRITE(4,4321)
4321   FORMAT(/)
       CLOSE(4)
       IF(ICOM-15)9999,3000
       IF(ICOM-18)9999,4325,9999
4325   TYPE 4330
4330   FORMAT($OK$/)
       GO TO 9999


C WRITE  #23
7000   DO 7110 J=K1,K2
       IF(-IFLAG)9999
       IF((ITYPE(J)-11)*(ITYPE(J)-31))7110,7030,7110
C7010   TYPE 7020,IPRES(J+250),IPRES(-J-250)
C7020   FORMAT(/2A3,//$*** BLOCK NAME NOT A SERIAL WORD GENERATOR$/)
C       GO TO 7110
7030   ITEL=1
       IF(ITYPE(J)-31)7031,7300,7031
7031   CALL LIST(J,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,IPRES,NTYPE,ITEL)
       TYPE 7035,INPUT(IBLOCK(J))
7035   FORMAT(/$PRESENT OCTAL WORD = $O8)
       TYPE 7040
7040   FORMAT(/$NEW OCTAL WORD = $)
       OPEN(3,INPUT,$TEL$)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)9999
       CLOSE(3)
       IF(-LENGTH)7060
7045   TYPE 7050
7050   FORMAT(/$OCTAL WORD NOT CHANGED$/)
       GO TO 7110
7060   IF(LENGTH-9)7080
7070   NERROR=15  ;C SWG OCTAL WORD ERROR
       ITEL=1
       CALL ERROR(NERROR,NCHAR,LENGTH,ITEL)
       IFN=3
       GO TO 7110
7080   KJ=0
       IOCTAL=0
       DO 7100 L=LENGTH,1,-1
       IF(NCHAR(L)-1H0)7070
       IF(1H7-NCHAR(L))7070
       CALL NUMERIC(NCHAR,L,L,NUM,IE)
       GO TO (7090,7070)IE
7090   IOCTAL=IOCTAL+NUM*IPWR(8,KJ)
       KJ=KJ+1
7100   CONTINUE
       INPUT(IBLOCK(J)-1)=IOCTAL
       INPUT(IBLOCK(J))=IOCTAL
7110   CONTINUE
       GO TO 4285


C READ  #24
7250   DO 7290 J=K1,K2
       IF(-IFLAG)9999
       IF(-ITRON)7255
       IF(ITYPE(J)-31)7255,7291,7255
7255   IF(ITYPE(J)-11)7290,7280,7290
C7260   TYPE 7020,IPRES(J+250),IPRES(-J-250)
C       GO TO 7290
7280   ITEL=1
       CALL LIST(J,ITYPE,IDELAY,IBLOCK,INPUT,IREACT,IPRES,NTYPE,ITEL)
7288   TYPE 7035,INPUT(IBLOCK(J))
7290   CONTINUE
       ITRON=0
       GO TO 4285
7291   ITRON=1
       DO 7292 IJ=O,15
       IF(-WORD(IJ))7294,7292
7292   CONTINUE
       TYPE 7293
7293   FORMAT(/$***NO WORDS STORED IN BLOCK$/)
       GO TO 7290
7294   TYPE 7295
7295   FORMAT(//$ LOCATION     DECIMAL WORD STORED$/)
       DO 7299 IJ=0,15
       IF(-WORD(IJ))8883,7296
8883   TYPE 7296,IJ,WORD(IJ)
7296   FORMAT(3X,I2,6X,F12.0/)
7299   CONTINUE
       GO TO 7290
C
C
C
C DEFINE THE ARRAY OF WORDS FOR THE PARALLEL WORD GENERATOR.
7300   GO TO(7303,9999,9999,9999,9999,9999,9999,9999,7301)(ICOM-22)
7301   DO 7302 K=0,15
       WORD(K)=0
7302   CONTINUE
       GO TO 4325
7303   TYPE 7304
7304   FORMAT(/$LOCATIONS AND WORDS: $)
       OPEN(3,INPUT,$TEL$)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)9999
       CLOSE(3)
7308   IST=1
7309   DO 7312 I=IST,LENGTH
       IF(NCHAR(I)-1H,)7312,7313
7312   CONTINUE
7313   IFIN=I-1
7315   CALL NUMERIC(NCHAR,IST,IFIN,NUM,IE)
       LOC=NUM
       GO TO(7320,7317)IE
7317   TYPE 7318
7318   FORMAT(/$***WORD ADDRESS NON-NUMERIC$/)
       GO TO 9999
7320   IF(NUM-15)7330,7330,7322
7322   TYPE 7324
7324   FORMAT(/$***ILLEGAL WORD ADDRESS$/)
       GO TO 9999
C7330   CALL ALPHA(NCHAR,IFIN+2,IFIN+2,NALPH1,NALPH2,IE)
7330   IF(NCHAR(IFIN+2)-1HD)7332,7340
7332   IF(NCHAR(IFIN+2)-1HB)7334,7342
7334   IF(NCHAR(IFIN+2)-1HO)7346,7344,7346
7340   IBASE=10
       GO TO 7345
7342   IBASE=2
       GO TO 7345
7344   IBASE=8
7345   IST=IFIN+3
       GO TO 7347
7346   IBASE=8
       IST=IFIN+2
7347   DO 7350 I=IST,LENGTH
       IF(NCHAR(I)-1H,)7350,7352
7350   CONTINUE
       IFIN=LENGTH
       GO TO 7353
7352   IFIN=I-1
7353   CALL NUMERO(NCHAR,IST,IFIN,WORD(LOC),IE,IBASE)
       IST=IFIN+2
       IF(IFIN-LENGTH)7309,9999,7309
C CYCLE #25
7500   DO 7402 I=1,LENGTH    ;C CHECK FOR SWITCH NUMBERS
       IF(NCHAR(I))7404,7404
7402   CONTINUE
       GO TO 7408
7404   IF(NCHAR(I+1))7408,7408
       DO 7406 J=I+1,LENGTH
7406   NCHAR(J-I)=NCHAR(J)
       LENGTH=LENGTH-I
       GO TO 7412
7408   TYPE 7510
7510   FORMAT(/$SWITCH NUMBER: $)
       CALL STRING(NCHAR,LENGTH,IEND,2,1,IFLAG,LABEL,IFN)
       IF(-IFLAG)9999
7412   CLOSE(3)
       DO 7515 I=1,10
7515   JCYCLE(I)=0
       JNUM=-1
       IF(LENGTH)9999,9999
       NELEM=1
       DO 7530 J=1,LENGTH
       IF(NCHAR(J)-1H,)7530,7520,7530
7520   NELEM=NELEM+1
7530   CONTINUE
       IST=1
       JNUM=0
       DO 7630 J=1,NELEM
       K1=0
       K2=0
       DO 7540 L=IST,LENGTH
       IF(NCHAR(L)-1H,)7540,7550
7540   CONTINUE
7550   L=L-1
       DO 7580 L1=IST,L
       IF(NCHAR(L1)-1H-)7580,7560,7580
7560   IF(NCHAR(IST)-1H*)7564,7566
7564   IS=IST
       GO TO 7570
7566   IS=IST+1
7570   CALL NUMERIC(NCHAR,IS,L1-1,K1,IE)
       IST=L1+1
       GO TO (7585,7640)IE
7580   CONTINUE
7585   IF(NCHAR(IST)-1H*)7586,7588
7586   IS=IST
       GO TO 7590
7588   IS=IST+1
7590   CALL NUMERIC(NCHAR,IS,L,K2,IE)
       GO TO (7595,7640)IE
7595   IF(8-JNUM)7680
7600   IF(-K1)7610
       IF(36-K2)7660
       JNUM=JNUM+1
       JCYCLE(JNUM)=K2+500
       JNUM=JNUM+1
       JCYCLE(JNUM)=-JCYCLE(JNUM-1)
       GO TO 7625
7610   DO 7620 M=K1,K2
       IF(36-M)7660
       IF(8-JNUM)7680
       JNUM=JNUM+1
       JCYCLE(JNUM)=M+500
       JNUM=JNUM+1
       JCYCLE(JNUM)=-JCYCLE(JNUM-1)
7620   CONTINUE
7625   IST=L+2
7630   CONTINUE
       TYPE 7632
7632   FORMAT($TRACE ? $)
       CALL YESNO(IYES,IFLAG,LABEL,IFN)
       GO TO (7633,7635)IYES
7633   ITRACE=1
7635   TYPE 4330
       GO TO 9000


7640    TYPE 7650
7650    FORMAT($*** SWITCH NUMBER NOT NUMERIC$/)
7655   JNUM=-1
       GO TO 9999
7660   TYPE 7670
7670   FORMAT($*** ILLEGAL SWITCH NUMBER$)
       GO TO 7655
7680   TYPE 7690
7690   FORMAT($*** A MAXIMUM OF 5 SWITCHES MAY BE CYCLED$/)
       GO TO 7655


C RUN #28
9000   IF(-ITYPE(1))9008
       TYPE 4070
       GO TO 9999
9008   TYPE 9010
9010   FORMAT($START TIME = $)
       OPEN(3,INPUT,$TEL$)
       CALL STRING(NCHAR,LENGTH,IEND,1,2,IFLAG,LABEL,IFN)
       IF(-IFLAG)9999
       CALL DISALT
       CALL LINK(12,LINK3);C LINK TO "RUN"
9999   DO 10000 I=1,144
10000  NCHAR(I)=0
       CALL DISALT
       CALL LINK(12,LINK1);C LINK TO "SFE"
       END


       SUBROUTINE YESNO(IYES,IFLAG,LABEL,IFN)
       IF(IFN-3)326,325,326
325    JP=0
       GO TO 201
326    JP=10
201    IF(-IFLAG)300
204    READ(JP,205)IY
205    FORMAT(A1/)
       IF(-IFLAG)300
       IF(IY-1HY)212,220
212    IF(IY-1HN)216,250
216    TYPE 218
218    FORMAT($WHAT ? $)
       IF(-IFLAG)300
       GO TO 204
220    IYES=1
       RETURN
250    IYES=2
       RETURN
300    GO TO LABEL
       END
       SUBROUTINE NUMERO(NCHAR,IST,IFIN,FNUM,IE,IBASE)
       DIMENSION NCHAR(1)
       IE=1;      FNUM=0.
       DO 30 I=IST,IFIN
       IF(NCHAR(I)-1H+)5,30
5      IF(NCHAR(I)-1H-)10,30
10     IF(NCHAR(I)-1H0)40
20     IF(1H9-NCHAR(I))40
       GO TO(122,22,122,122,122,122,122,25,122,30)IBASE
22     IF(1H2-NCHAR(I))500,500,30
25     IF(1H8-NCHAR(I))500,500,30
30     CONTINUE
       GO TO 50
40     IE=2;C    NON NUMERIC
       RETURN
50     MINUS=1
       DO 70 I=IST,IFIN
       IF(NCHAR(I)-1H-)70,60,70
60     MINUS=-1
       GO TO 80
70     CONTINUE
80     J=1
       DO 120 I=IST,IFIN
       IF(NCHAR(I)-1H-)110,120
110    IADD=(NCHAR(I)-1H0)/(1H1-1H0)
       FNUM=FNUM*IBASE+IADD
115    J=J+1
120    CONTINUE
       FNUM=FNUM*MINUS
122    RETURN
500    TYPE 502
502    FORMAT(/$***IMPROPER NUMBER FOR BASE SPECIFIED.$//)
       GO TO 122
       END
LOGSIM ** FICHE/FRAME BREAK *****
LOGDES
C  LOGDES FOR VERSION 4.XXX CONTAINING PWG. OCT 1970   JEO
       SUBROUTINE BLKDES(NCHAR,LENGTH,NELEM,IELEM,NERROR,IPRES,NTYPE)
       DIMENSION IELEM(2,19),NCHAR(1),IPRES(-537/537)
       NERROR=0;        NELEM=0
       IELEM(2,1)=0
       IELEM(2,2)=0
       IELEM(2,3)=0
       DO 30 I=1,LENGTH
       IF(NCHAR(I)-1H,)30,20,30
20     NELEM=NELEM+1
30     CONTINUE
       IF(-NELEM)60
40     IF(-LENGTH)50
45     RETURN
50     NERROR=1  ;C BLOCK DES. NOT COMPLETE
       RETURN
60     NELEM=NELEM+1
       IF(2-NELEM)80
70     NERROR=1   ;C  BLCK DES. NOT COMPLETE
       RETURN
80     IST=1
       DO 300 I=1,3
       IFIN=LENGTH
       DO 90 J=IST,IFIN
       IF(NCHAR(J)-1H,)90,100
90     CONTINUE
100    IFIN=J-1
       IF(I-1)160,110,160  ;C BLOCK NUMBER
110    GO TO 280
160    IF(I-2)220,170,220   ;C  TYPE
170    CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
       GO TO (190,180)IE
180    NERROR=4   ;C  BLOCK TYPE NOT ALPHABETIC
       RETURN
190    IF(-NALPH1)210
200    NERROR=5   ;C  BLOCK TYPE NOT RECOGNIZED
       RETURN
210    CALL TYPENO(NALPH1,NTYPE,NERROR)  ;C CHECK FOR VALID BLK TYPE
       IF(NERROR)216,216
215    RETURN  ;C BLOCK TYPE NOT RECOGNIZED
216    IELEM(1,2)=NALPH1
       GO TO 280
220    IF(I-3)280,230,280  ;C  PROPAGATION DELAY
230    CALL NUMERIC(NCHAR,IST,IFIN,NUM,IE)
       GO TO (240,250)IE
240    IF(-NUM)260,260
250    NERROR=6   ;C   PD NOT NUMERIC, <0, OR >8388607
       RETURN
260    IF(8388607-NUM)250
270    IELEM(1,3)=NUM
280    IST=IFIN+2
300    CONTINUE
       IF(ITYPE-9)310,320
       IF(NTYPE-15)310,320
       IF(NTYPE-19)310,320
310    CALL TYPE(NCHAR,IST,LENGTH,NELEM,IELEM,NERROR,NTYPE)
320    RETURN
       END


       SUBROUTINE GIVENO(NALPH1,NALPH2,NUM,IPRES,IE)
       DIMENSION IPRES(-537/537)
       DO 30 I=251,500
       IF(NALPH1-IPRES(I))10,20
10     IF(IPRES(I))30,50,30
20     IF(NALPH2-IPRES(-I))30,40
30     CONTINUE
       IE=3  ;C 250 BLOCKS USED
       NUM=0
       RETURN
40     IE=2  ;C NO. USED, NUM=MATCH NO.
       NUM=I-250
       RETURN
50     IE=1  ;C NO MATCH FOUND, SET NUM=FIRST UNUSED NO.
       NUM=I-250
       IF(NALPH1-1H$)70,60,70
60     IE=2
       NUM=NUM-1
70     RETURN
       END


       SUBROUTINE TYPE(NCHAR,IST,LENGTH,NELEM,IELEM,NERROR,NTYPE)
       DIMENSION IELEM(2,19),NCHAR(1)
       CALL TYPENO(IELEM(1,2),NTYPE,NERROR)
       IF(NERROR)20,20
10     RETURN
C  CHECK FOR PROPER NO. OF PARAMETERS
20     GO TO (110,120,120,130,130,140,150,130,160,110,140,170,
              180,110,160,140,190,200,160,120,120,140,190,150,
              210,220,150,150,210,220,150)NTYPE

110    IF(NELEM-4)990,1000,990  ;C INV, CLK, STO
120    IF(NELEM-4)990           ;C AND, OR, NAN, NOR
122    IF(NELEM-8)1000,1000,990
130    IF(NELEM-5)990,1000,990  ;C EOR, RS, SS
140    IF(NELEM-6)990,1000,990  ;C RST, ADD, CAT, SWG
150    IF(NELEM-8)990,1000,990  ;C JK, CNT, SFB, PRE,PWB
160    IF(NELEM-3)990,1000,990  ;C TIM, AD*, NUL
170    IF(NELEM-5)990           ;C OUT
172    IF(NELEM-19)1000,1000,990
180    IF(NELEM-4)990          ;C TRG
182    IF(NELEM-18)1000,1000,990
190    IF(NELEM-5)990           ;C THR, ORR
192    IF(NELEM-8)1000,1000,990
200    IF(NELEM-4)990           ;C THL
202    IF(NELEM-7)1000,1000,990
210    IF(NELEM-7)990,1000,990   ;C CNB, PRB
220    IF(NELEM-9)990,1000,990  ;C SFT,PWG
990    NERROR=8   ;C  TYPE REQUIRES A DIFFERENT NO. OF PARAMETERS
       RETURN
1000   K=0
       DO 1006 I=1,LENGTH
       IF(NCHAR(I)-1H,)1006,1002,1006
1002   K=K+1
       IF(K-3)1006,1004,1008
1004   IST=I+1
1006   CONTINUE
1008   IFIN=I-1
       DO 1060 I=4,NELEM
       GO TO (1010,1010,1010,1010,1010,1010,1010,1030,1010,1010,
              1010,1010,1010,1010,1010,1010,1010,1040,1010,1010,
              1010,1030,1030,1030,1010,1030,1010,1030,1010,1030,1010)NTYPE
1010   IF(NTYPE-11)1011,1020,1011
1020   IF(I-6)1011,1022
1011   MINUS=1  ;C ALL BLOCKS EXCEPT 8,22,23,24,26,28, & 30
       IF(IST-IFIN)840,800,840
800    IF(NCHAR(IST)-1HT)820,810,820
810    IELEM(1,I)=-537   ;C TRUE
       IELEM(2,I)=0
       GO TO 1050
820    IF(NCHAR(IST)-1HF)840,830,840
830    IELEM(1,I)=0   ;C FALSE
       IELEM(2,I)=0
       GO TO 1050
840    IF(NCHAR(IST)-1H-)890,850,890
850    MINUS=-1
860    IF(NCHAR(IST+1)-1H*)910,870,910
870    CALL NUMERIC(NCHAR,IST+2,IFIN,NUM,IE)   ;C  -*SW
       GO TO (880,1034)IE
880    IF(IABS(NUM)-37)885
882    NERROR=18  ;C SW NO. >36
       RETURN
885    IELEM(1,I)=(NUM+500)*MINUS    ;C SET SW
       IELEM(2,I)=0
       GO TO 1050
890    IF(NCHAR(IST)-1H*)1018,900,1018
900    CALL NUMERIC(NCHAR,IST+1,IFIN,NUM,IE)   ;C  *SW
       GO TO (880,1034)IE
910    CALL ALPHA(NCHAR,IST+1,IFIN,NALPH1,NALPH2,IE) ;C NEG. BLK NO.
       GO TO 1019
1018   CALL ALPHA(NCHAR,IST,IFIN,NALPH1,NALPH2,IE)
1019   IELEM(1,I)=NALPH1*MINUS
       IELEM(2,I)=NALPH2
       GO TO 1050
C OCTAL WORD FOR SWG
1022   IF(IST-LENGTH)1024,1024
1023   NERROR=15  ;C SWG OCTAL WORD ERROR
       RETURN
1024   IF(7-(LENGTH-IST))1023
       K=0
       IOCTAL=0
       DO 1026 J=LENGTH,IST,-1
       IF(NCHAR(J)-1H0)1023
       IF(1H7-NCHAR(J))1023
       CALL NUMERIC(NCHAR,J,J,NUM,IE)
       GO TO (1025,1023)IE
1025   NSUM=NUM*IPWR(8,K)
       IOCTAL =IOCTAL+NSUM
       K=K+1
1026   CONTINUE
       IELEM(1,6)=IOCTAL
       IELEM(2,6)=0
       IELEM(1,7)=IOCTAL
       IELEM(2,7)=0
       NELEM=NELEM+1
       RETURN
C FOURTH PARAMATER
1030   IF(4-I)1010
1032   CALL NUMERIC(NCHAR,IST,IFIN,NUM,IE)
       GO TO (1038,1034)IE
1034   TYPE 1036,(NCHAR(I),I=IST,IFIN)
1036   FORMAT(/$*** $(10A1)$ IS AN INVALID PARAMETER IN THIS BLOCK$/)
       NERROR=13  ;C PARAMER IS NOT NUMERIC
       RETURN
1038   IELEM(1,4)=NUM
       IELEM(2,4)=0
       GO TO 1050


C THRESHOLD LEVEL BLOCK -- CHECKING FOR PROPER WEIGHT VALUES
1040   CALL NUMERIC(NCHAR,IST,IFIN,NUM,IE)
       GO TO (1042,1034)IE
1042   IF(-NUM)1046
1044   NERROR=9  ;C THRESHOLD WEIGHT <0 OR >250
       RETURN
1046   IF(250-NUM)1044
1048   IELEM(1,I)=NUM
       IELEM(2,I)=0
1050   IST=IFIN+2
       DO 1052 J=IST,LENGTH
       IF(NCHAR(J)-1H,)1052,1054
1052   CONTINUE
1054   IFIN=J-1
1060   CONTINUE
       RETURN
       END


       SUBROUTINE TYPENO(IELEM,ITYPE,NERROR)
       DIMENSION NTYPE(31)
       ITYPE=0
       NTYPE( 1)=3HINV
       NTYPE( 2)=3HAND
       NTYPE( 3)=3HOR 
       NTYPE( 4)=3HEOR
       NTYPE( 5)=3HRS 
       NTYPE( 6)=3HRST
       NTYPE( 7)=3HJK 
       NTYPE( 8)=3HSS 
       NTYPE( 9)=3HTIM
       NTYPE(10)=3HCLK
       NTYPE(11)=3HSWG
       NTYPE(12)=3HOUT
       NTYPE(13)=3HTRG
       NTYPE(14)=3HSTO
       NTYPE(15)=3HAD*
       NTYPE(16)=3HADD
       NTYPE(17)=3HTHR
       NTYPE(18)=3HTHL
       NTYPE(19)=3HNUL
       NTYPE(20)=3HNAN
       NTYPE(21)=3HNOR
       NTYPE(22)=3HGAT
       NTYPE(23)=3HORR
       NTYPE(24)=3HCNT
       NTYPE(25)=3HCNB
       NTYPE(26)=3HSFT
       NTYPE(27)=3HSFB
       NTYPE(28)=3HPRE
       NTYPE(29)=3HPRB
       NTYPE(30)=3HPWG
       NTYPE(31)=3HPWB
       DO 50 I=1,31
       IF(IELEM-NTYPE(I))50,100
50     CONTINUE
       NERROR=7   ;C  TYPE NOT A VALID BLOCK
       RETURN
100    ITYPE=I
       RETURN
       END


       SUBROUTINE ERROR(NERROR,NCHAR,LENGTH,ITEL)
       DIMENSION NCHAR(1)
       IF(ITEL)20,20
       GO TO (20,2)ITEL   ;C  ITEL=1 INPUT FROM TEL
2      TYPE 4,(NCHAR(I),I=1,LENGTH)
       TYPE 6
20     GO TO (110,120,130,140,150,160,170,180,190,200,210,220,
              230,240,250,260,270,280)NERROR
       GO TO 1000
110    TYPE 115
       GO TO 1000
120    TYPE 125
       GO TO 1000
130    TYPE 135
       GO TO 1000
140    TYPE 145
       GO TO 1000
150    TYPE 155
       GO TO 1000
160    TYPE 165
       GO TO 1000
170    TYPE 175
       GO TO 1000
180    TYPE 185
       GO TO 1000
190    TYPE 195
       GO TO 1000
200    TYPE 205
       GO TO 1000
210    TYPE 215
       GO TO 1000
220    TYPE 225
       GO TO 1000
230    TYPE 235
       GO TO 1000
240    TYPE 245
       GO TO 1000
250    TYPE 255
       GO TO 1000
260    TYPE 265
       GO TO 1000
270    TYPE 275
       GO TO 1000
280    TYPE 285
1000   NERROR=0
       CLOSE(10)
       RETURN
4      FORMAT(72A1)
6      FORMAT(/)
115    FORMAT(/$*** BLOCK DESCRIPTION NOT COMPLETE$/)
125    FORMAT(/$*** INVALID BLOCK NAME DESCRIPTION$/)
135    FORMAT(/$*** NUMBER OF BLOCKS EXCEED 250$/)
145    FORMAT(/$*** BLOCK TYPE NOT ALPHABETIC$/)
155    FORMAT(/$*** BLOCK TYPE NOT RECOGNIZED$/)
165    FORMAT(/$*** PROGATION DELAY ERROR,  0<=PD<=8388607$/)
175    FORMAT(/$*** NOT A VALID BLOCK TYPE$/)
185    FORMAT(/$*** TYPE REQUIRES A DIFFERENT NUMBER OF PARAMETERS$/)
195    FORMAT(/$*** THRESHOLD WEIGHT <0 OR >250$/)
205    FORMAT(/$*** INVALID PARAMETER$/)
215    FORMAT(/$*** BLOCK NAME PREVIOUSLY USED$/)
225    FORMAT(/$*** FOURTH PARAMETER NOT NUMERIC$/)
235    FORMAT(/$*** PARAMETER NOT NUMERIC$/)
245    FORMAT(/)  ;C RESERVED FOR EXTERNAL ERROR MESSAGES
255    FORMAT(/$*** ILLEGAL OCTAL WORD IN SWG$/)
265    FORMAT(/$*** GENERATED BLOCKS EXCEED TYPE LIMIT$/)
275    FORMAT(/$*** GENERATED BLOCK NAME USED$/)
285    FORMAT(/$*** SWITCH NUMBER >36$/)
       END


C MOVES VALUES OF IELEM TO ITRANS EXCEPT ITRANS(1,2)=NTYPE
       SUBROUTINE MOVE(IELEM,NELEM,NTYPE,ITRANS)
       DIMENSION IELEM(2,19),ITRANS(2,19)
       ITRANS(2,1)=0
       ITRANS(2,2)=0
       ITRANS(2,3)=0
       DO 130 I=1,NELEM
       IF(I-2)120,110,120
110    ITRANS(1,2)=NTYPE
       ITRANS(2,2)=0
       GO TO 130
120    ITRANS(1,I)=IELEM(1,I)
       ITRANS(2,I)=IELEM(2,I)
130    CONTINUE
       RETURN
       END


C  TRANSFERS BLOCK DESC. TO ARRAYS
       SUBROUTINE TRANS(ITRANS,NTRANS,ITYPE,IBLOCK,INPUT,IDELAY,
         IPOINT,NERROR,IPRES,IREACT)
       DIMENSION ITRANS(2,19),ITYPE(1),IBLOCK(1),INPUT(1),IDELAY(1),
         IREACT(1),IPRES(-537/537)
       IF(ITYPE(ITRANS(1,1)))20,20
10     NERROR=11   ;C BLOCK NO. USED
       RETURN
20     ITYPE(ITRANS(1,1))=ITRANS(1,2)
       IDELAY(ITRANS(1,1))=ITRANS(1,3)
       IF(NTRANS-4)32
22     DO 30 I=4,NTRANS
       INPUT(IPOINT)=ITRANS(1,I)
       IREACT(IPOINT)=ITRANS(2,I)
       IPOINT=IPOINT+1
30     CONTINUE
32     IBLOCK(ITRANS(1,1))=IPOINT-1
       IF(IPOINT-1400)70,70
40     TYPE 50,IPRES(ITRANS(1,1)+250),IPRES(-ITRANS(1,1)-250)
50     FORMAT(//$*** NUMBER OF INPUTS EXCEEDED ON BLOCK NO. $2A3 //)
       STOP
70     DO 80 I=1,19
       ITRANS(1,I)=0
80     ITRANS(2,I)=0
       RETURN
       END
LOGSIM ** FICHE/FRAME BREAK *****
LOGSFI
1

COMMAND           DESCRIPTION

HELP (OR) ?    REPRINTS THIS LIST.
CAPABILITIES   DESCRIBES PROGRAM CAPABILITIES.
INSTRUCTIONS   HOW TO EXECUTE THE PROGRAM.
CHARGES        NO PREMINUM CHARGE
CREDITS        IMPLEMENTED BY TYMSHARE
VERSION        LATEST UPDATE

SAMPLE         SAMPLE PROBLEM RUN WITH LOGSIM.

INPUT          DELETES CIRCUIT. ENTER A NEW CIRCUIT.
ADD            ADD BLOCK(S) TO CIRCUIT.
 
DELETE         DELETES ANY OR ALL CIRCUIT BLOCKS.
INSERT         INSERT A BLOCK IN FRONT OF ANY BLOCK.
ALTER          REPLACE A BLOCK WITH NEW BLOCK(S).
INITIALIZE     REINITIALIZES ALL BLOCKS AND SWITCH REGISTERS TO
               TO THE UNDEFINED STATE.

PRINT          PRINTS TIMES FOR CHANGE OF STATE.
LIST           LISTS ANY OR ALL BLOCKS.
SAVE           SAVES THE CIRCUIT ON A FILE.
DUMP           DUMPS THE PRESENT STATUS OF A CIRCUIT SIMULATION FOR
               RECOVERY LATER.
RECOVER        ALLOWS RESUMPTION OF SIMULATION FROM DUMP FILE.

SET            SETS SPECIFIED BLOCKS TO LOGICAL TRUE.
RESET          RESETS SPECIFIED BLOCKS TO LOGICAL FALSE.
WRITE          WRITE NEW WORD(S) INTO THE SERIAL OR PARALLEL WORD
               GENERATOR BLOCKS.
ERASE          RESETS ALL WORD LOCATIONS IN THE PARALLEL WORD
               GENERATOR TO ZERO.
READ           PRINTS THE WORD(S) STORED IN THE SERIAL OR PARALLEL
               WORD GENERATOR BLOCKS
CYCLE          SIMULATES A CIRCUIT FOR A SPECIFIED TIME PERIOD WITH
               SWITCH REGISTERS (5 MAX.) CYCLED THRU EVERY POSSIBLE
               COMBINATION OF TRUE AND FALSE.
TRACE          STARTS SUMULATION SUCH THAT FOR EVERY LOGICAL CHANGE,
               DURING SIMULATION, THE BLOCK NAME, THE NEW LOGICAL
               STATE AND THE TIME OF THE STATE CHANGE WILL BE LISTED
               TO THE TERMINAL.
FILE           PLACES PROGRAM IN FILE OUTPUT MODE, SO THAT RESULTS
               OF THE SIMULATION WILL BE WRITTEN TO A SPECIFIED 
               FILE INSTEAD OF TO THE TERMINAL.
NO FILE        RETURNS PROGRAM TO TERMINAL OUTPUT FROM FILE OUTPUT.

RUN            SIMULATES CIRCUIT AND PRINTS ANSWERS ON TERMINAL.
QUIT (OR) Q    QUITS TO EXEC.


ANY OF THESE COMMANDS MAY BE SHORTENED TO THE FIRST THREE LETTERS
EXCEPT 'INSTRUCTIONS' AND 'INSERT' WHICH REQUIRE AT LEAST THE FIRST
FOUR LETTERS.

2


THIS PROGRAM ALLOWS THE LOGIC DESIGN ENGINEER TO SIMULATE A LOGIC
CIRCUIT BEFORE BUILDING A BREADBOARD.  THIS SIMULATION INCLUDES
THE CAPABILITY TO SPECIFY PROPAGATION DELAYS THROUGH THE LOGIC ELEMENTS
CHOSEN. THE OUTPUT OF THE PROGRAM CAN BE:

       1. A TIMING DIAGRAM OF UP TO 15 DIFFERENT LOGICAL BLOCKS
          WHICH WILL BE GENERATED AT TIMES AS SPECIFIED BY USER.

       2. A TRACE OF EVERY LOGICAL CHANGE IN THE CIRCUIT OVER SOME
          SPECIFIED TIME RANGE.

THE PROGRAM CAN HANDLE UP TO 250 LOGIC BLOCKS. AN EXTENSIVE COMMAND
SET ALLOWS THE USER TO INPUT CIRCUIT DESCRIPTIONS FROM THE TERMINAL
OR A FILE.

THE CIRCUIT CONFIGURATION CAN BE MODIFIED ON-LINE BY THE USER.  A
MODIFIED CIRCUIT MAY BE STORED ON A FILE.

AFTER COMPLETION OF A TIME PERIOD, A DUMP FILE MAY BE SAVED TO RESUME
SIMULATION AT SOME LATER DATE.

PROGRAM ERROR DIAGNOSTICS HELP THE USER WITH ON-LINE DEBUGGING.


3


THE FOLLOWING ARE BUILT IN LOGICAL BLOCKS WHICH THE USER MAY SELECT
FOR THE SIMULATION.  OTHER BLOCKS CAN OF COURSE BE MADE OF THE BUILT-IN
BLOCKS BY THE USER.  THE BLOCKS ARE DESCRIBED IN THE FORM SHOWN BELOW.

  #,TYPE,PD,I1,I2,...IN

       #       - BLOCK NAME   (1 TO 6 CHARACTERS IN LENGTH)
       TYPE    - TWO OR THREE LETTER DESCRIPTOR OF THE BLOCK TYPE
       PD      - PROPAGATION DELAY WHERE PD MUST BE AN INTEGER AND
                 0<=PD<=8388607
       I1 - IN - INPUT PARAMETER LIST WHERE THE LIST MAY BE IN GENERAL
                   1. BLOCK NAMES
                   2. TRUE OR FALSE (T OR F)
                   3. SWITCH REGISTERS (*1 THRU *36)

    INVERTER                   #,INV,PD,I
    AND GATE                   #,AND,PD,I1,...,I5
    OR GATE                    #,OR,PD,I1,...,I5
    EXCLUSIVE OR GATE          #,EOR,PD,I1,I2
    NAND GATE                  #,NAN,PD,I1,...,I5
    NOR GATE                   #,NOR,PD,I1,...,I5
    R S FLIP FLOP              #,RS,PD,SET,RESET
    J K FLIP FLOP              #,JK,PD,TRIGGER,J,K,SET,RESET
    RST FLIP FLOP              #,RST,PD,TRIGGER,SET,RESET
    SINGLE SHOT MULTIVIBRATOR  #,SS,PD,PULSE WIDTH,TRIGGER
    CLOCK                      #,CLK,PERIOD/2,ON/OFF
    TIME GENERATOR             #,TIM,TIME
    SERIAL WORD GENERATOR      #,SWG,PD,TRIGGER,RESET,OCTAL WORD
    PARALLEL WORD GENERATOR    #,PWG,PD,N,T,I1,I2,I4,I8
    FULL ADDER                 #,ADD,PD,I1,I2,CARRY IN
    THRESHOLD GATE             #,THR,PD,THL #,I1,...,I4
    GATE REGISTER              #,GAT,PD,N,I,GATE
    OR REGISTER                #,ORR,PD,N,I1,...,I4
    UP/DOWN COUNTER            #,CNT,PD,N,T,S,R,UP/DOWN
    PRESET UP/DOWN COUNTER     #,PRE,PD,N,T,SET DATA,SET CTRL,UP/DOWN
    SHIFT REGISTER             #,SFT,PD,N,T,RGHT DATA,LFT DATA,R,R/L
    OUTPUT MODULE              #,OUT,PD,T,I1,...,I15
    TRIGGER MODULE             #,TRG,PD,I1,...,I15
    STOP BLOCK                 #,STO,PD,I
    NULL BLOCK                 #,NUL,0

4


-LOGSIM


:INPUT T


BLK DES: A,INV,1,*1
BLK DES: B,INV,2,*2
BLK DES: C,AND,3,A,B
BLK DES: D,OUT,2,E,A,B,C
BLK DES: E,TRG,0,A,B,C
BLK DES: END

:LIST ALL

A       INV         1  *1     
B       INV         2  *2     
C       AND         3  A       B      
D       OUT         2  E       A       B       C      
E       TRG         0  A       B       C      


:CYCLE *1-*2
TRACE ? N
OK
START TIME = 0
FINISH TIME = 10


* 1=F
* 2=F
  BLOCK   A   B   C  
  NAME               
    TIME  01  01  01  
       0S 0   0   0   
       3   1   1  0   
       5F  1   1   1  
       5  STOP AT STEADY STATE

* 1=T
* 2=F
  BLOCK   A   B   C  
  NAME               
    TIME  01  01  01  
       0S 0   0   0   
       2F 0    1  0   
       2  STOP AT STEADY STATE

* 1=F
* 2=T
  BLOCK   A   B   C  
  NAME               
    TIME  01  01  01  
       0S 0   0   0   
       1F  1  0   0   
       1  STOP AT STEADY STATE

* 1=T
* 2=T
  BLOCK   A   B   C  
  NAME               
    TIME  01  01  01  
       0S 0   0   0   
       0F 0   0   0   
       0  STOP AT STEADY STATE

:QUIT

-

 
5
@z,qC