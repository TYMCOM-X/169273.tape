PROCEDURE INITTABLES ;

BEGIN

(* INITPROCEDURE *)  (*RUNTIMEROUTINEMNEMONICS*)
  BEGIN
    RNA[ERRN] := 'ERRN ';
    RNA[EQUR] := 'EQUR ';
    RNA[NEQR] := 'NEQR ';
    RNA[LESR] := 'LESR ';
    RNA[LEQR] := 'LEQR ';
    RNA[GRTR] := 'GRTR ';
    RNA[GEQR] := 'GEQR ';
    RNA[ADR] := 'ADDR ';
    RNA[SBR] := 'SUBR ';
    RNA[SQRR] := 'SQRR ';
    RNA[MPR] := 'MULR ';
    RNA[DVR] := 'DIVR ';
    RNA[FLO] := 'FLO  ';
    RNA[FLT] := 'FLT  ';
    RNA[TRC] := 'TRC  ';
    RNA[RND] := 'RND  ';
    RNA[EXITP] := 'EXITP';
    RNA[EXITB] := 'EXITB';
    RNA[GRTM] := 'GRTM ';
    RNA[GRTM2] := 'GRTM2';
    RNA[LESM] := 'LESM ';
    RNA[LESM2] := 'LESM2';
    RNA[GEQM] := 'GEQM ';
    RNA[GEQM2] := 'GEQM2';
    RNA[LEQM] := 'LEQM ';
    RNA[LEQM2] := 'LEQM2';
    RNA[EQUM] := 'EQUM ';
    RNA[EQUM2] := 'EQUM2';
    RNA[EQUS4] := 'EQUS4';
    RNA[NEQM] := 'NEQM ';
    RNA[NEQM2] := 'NEQM2';
    RNA[NEQS4] := 'NEQS4';
    RNA[EQU] := 'EQU  ';
    RNA[NEQ] := 'NEQ  ';
    RNA[GRT] := 'GRT  ';
    RNA[GEQ] := 'GEQ  ';
    RNA[LES] := 'LES  ';
    RNA[LEQ] := 'LEQ  ';
    RNA[DVI] := 'DIVI ';
    RNA[MODI] := 'MODI ';
    RNA[SQI] := 'SQI  ';
    RNA[MPI] := 'MULI ';
    RNA[MOVM] := 'MOVM ';
    RNA[MOVM2] := 'MOVM2';
    RNA[WRCHA] := 'WRCHA';
    RNA[INN] := 'INN  ';
    RNA[SGSIN] := 'SGSIN';
    RNA[INITS] := 'INITS';
    RNA[UNI4] := 'UNI4 ';
    RNA[INT4] := 'INT4 ';
    RNA[DIF4] := 'DIF4 ';
    RNA[EXPST] := 'EXPST';
    RNA[EXPSN] := 'EXPSN';
    RNA[REDST] := 'REDST';
    RNA[REDSN] := 'REDSN';
    RNA[IXB] := 'IXB  ';
    RNA[STPB] := 'STPB ';
    RNA[LPB] := 'LPB  ';
    RNA[CLRAREA] := 'CLRAR';
    RNA[CLRSTK] := 'CLRST';
    RNA[RDC] := 'RDC  ';
    RNA[RDI] := 'RDI  ';
    RNA[RDR] := 'RDR  ';
    RNA[RDREC] := 'RDREC';
    RNA[WRREC] := 'WRREC';
    RNA[RDSTR] := 'RDSTR';
    RNA[WRC] := 'WRC  ';
    RNA[WRS] := 'WRS  ';
    RNA[WRI] := 'WRI  ';
    RNA[WRR] := 'WRR  ';
    RNA[MARKP] := 'MARK';
    RNA[RELEASEP] := 'RLEAS';
    RNA[NEWP] := 'NEW';
    RNA[DISPOSEP] := 'DISPOSE';
    RNA[OVFLCHK] := 'OVFLC';
    RNA[SUBRCHK] := 'SUBRC';
    RNA[LEQS1] := 'LEQS1';
    RNA[LEQS4] := 'LEQS4';
    RNA[GEQS1] := 'GEQS1';
    RNA[GEQS4] := 'GEQS4';
    RNA[TRACK] := 'P.TRC';
    RNA[FREQV] := 'P.FRQ';
    RNA[DDTINIT] := 'P.DDT';
    RNA[GETCH] := 'GET  ';
    RNA[GETLINE] := 'GETLN';
    RNA[INITA] := 'INITA';
    RNA[INITB] := 'INITB';
    RNA[WRIOCT] := 'WROCT';
    RNA[RESETF] := 'RESET';
    RNA[REWRITEF] := 'REWRI';
    RNA[PUTCH] := 'PUT  ';
    RNA[PUTLINE] := 'PUTLN';
    RNA[BRK] := 'BRK  ';
    RNA[FORMFD] := 'PAGE ';
    RNA[RUNTM] := 'RUNTM';
    RNA[TIME1] := 'TIME ';
    RNA[DATE1] := 'DATE ';
    RNA[WRB] := 'WRB  ';
    RNA[WRBFX] := 'WRBFX';
    RNA[GETR] := 'GETRM';
    RNA[PUTR] := 'PUTRM';
    RNA[DUMP] := 'DUMP ';
    RNA[WRFIX] := 'WRFIX';
    RNA[FORTR] := 'FORTR';
    RNA[TTPAR] := 'TTPAR';
    RNA[MOVTS] := 'MOVTS';
    RNA[MOVFS] := 'MOVFS';
    RNA[MOVMR] := 'MOVMR';
    RNA[TWPOW] := 'TWPOW';
    RNA[SPLTRL] := 'SPTRL';
    RNA[RSIN] := 'RSIN ';
    RNA[RCOS] := 'RCOS ';
    RNA[RARCTAN] := 'ARCTN';
    RNA[REXP] := 'REXP ';
    RNA[RLOG] := 'RLOG ';
    RNA[RSQRT] := 'RSQRT';
    RNA[SUBSTRCHECK] := 'STRCH';
    RNA[STRINGINDEX] := 'STIND';
  END;
  (*RTRMNEMONICS*)

  (*$Z+*)
  (* INITPROCEDURE *)  (*INSTRMNEMONICS*)
  BEGIN
    REGNAMES[0] := (* 'AR' *) 'R0';
    REGNAMES[1] := (* 'R ' *) 'R1';
    REGNAMES[2] := (* 'AD' *) 'R2';
    REGNAMES[3] := (* 'GP' *) 'R3';
    REGNAMES[4] := (* 'MP' *) 'R4';
    REGNAMES[5] := (* 'SP' *) 'R5';
    REGNAMES[6] := (* 'HP' *) 'SP';
    REGNAMES[7] := 'PC';
    MN[CLRB] := 'CLR';
    MN[MOVB] := 'MOV';
    MN[CMPB] := 'CMP';
    MN[CLR] := 'CLR';
    MN[DEC] := 'DEC';
    MN[INC] := 'INC';
    MN[TST] := 'TST';
    MN[COM] := 'COM';
    MN[ASL] := 'ASL';
    MN[ASR] := 'ASR';
    MN[JMP] := 'JMP';
    MN[JSR] := 'JSR';
    MN[SOB] := 'SOB';
    MN[MULT] :='MUL';
    MN[DIVV] := 'DIV';
    MN[XOR] := 'XOR';
    MN[BR] := 'BR ';
    MN[BEQ] := 'BEQ';
    MN[BNE] := 'BNE';
    MN[BGE] := 'BGE';
    MN[BGT] := 'BGT';
    MN[BLE] := 'BLE';
    MN[BLT] := 'BLT';
    MN[BPL] := 'BPL';
    MN[BMI] := 'BMI';
    MN[MOV] := 'MOV';
    MN[ADD] := 'ADD';
    MN[SUB] := 'SUB';
    MN[CMP] := 'CMP';
    MN[BIS] := 'BIS';
    MN[BIT] := 'BIT';
    MN[BIC] := 'BIC';
    MN[RTS] := 'RTS';
    MN[NEG] := 'NEG';
    MN[HALT] := 'HLT';
    MN[TRAP] := 'TRP';
    MN[EMT] := 'EMT';
    MN[RTI] := 'RTI';
  END (*INSTRMNEMONICS*);
  (*$Z-*)

  (* INITPROCEDURE *) (*INITSCALARS*)
  BEGIN
    FWPTR := NIL ;
    FSTLABP := NIL ;
    ERRDETECTED := FALSE;
    SRCLEVEL := 0;
    FOR CH:='A' TO 'Z' DO BEGIN
      ONSWITCH[CH]:=FALSE;
      OFFSWITCH[CH]:=FALSE
    END;
    SWITCHINIT( DEFLEVEL,PAGEWIDTH,LINEWIDTH,EXTSET,FLTSET,FPPUNIT,LIST, PRCODE,
      CONDCOMP,WARNINGS,RUNTMCHECK,HEAPCHECK,MAIN,PSECTGEN, TRACE,DEBUG,
	FREQUENCE,NOIO);
    IDRECSIZE[TYPES] := 12;
    IDRECSIZE[KONST] := 14;
    IDRECSIZE[VARS] := 15;
    IDRECSIZE[FIELD] := 13;
    IDRECSIZE[PROC] := 19;
    IDRECSIZE[FUNC] := 19;
    STRECSIZE[SCALAR] := 6;
    STRECSIZE[SUBRANGE] := 7;
    STRECSIZE[POINTER] := 5;
    STRECSIZE[POWER] := 5;
    STRECSIZE[ARRAYS] := 8;
    STRECSIZE[RECORDS] := 7;
    STRECSIZE[FILES] := 5;
    STRECSIZE[BOUNDLESS] := 7;
    STRECSIZE[VARIANT] := 7;
    STRECSIZE[TAGFWITHID] := 6;
    STRECSIZE[TAGFWITHOUTID] := 7;
    PAGEEJECT := FALSE;
    POINTERCNT := 0;
    BODYCOUNT:= 0;
    CIX := -1 ;
    GLOBALINDEX := 0 ;
    DCIX := -1;
    PSECT := '.MAIN.    ';
    OBJIDENT := '          ';
    CXPOPENED := 100000B<0 (*TRUE FOR PDP 11*);
    FIRSTMODULE := TRUE;
    DP := TRUE;
    PRTERR := TRUE;
    HAVEGLOBALS := FALSE;
    STATBASE := 0;
    ERRINX := 0;
    KK := ALFALENG;
    CH := ' ';
    LC := -2;
    CHCNT := 0;
    LINENO := 1;
    PAGENO := 0;
    LINECNT := 1;
    HEADER := '  .       ';
    IF VERSION > 999 THEN
      HEADER[1] := CHR( VERSION DIV 1000 + 48 );
    HEADER[2] := CHR( (VERSION DIV 100) MOD 10 + 48 );
    HEADER[4] := CHR( (VERSION DIV 10) MOD 10 + 48 );
    HEADER[5] := CHR( VERSION MOD 10 + 48 );
  END (*INITSCALARS*);

  (* INITPROCEDURE *)  (*INITSETS*)
  BEGIN
    DIGITS := ['0','1','2','3','4','5','6','7','8','9'];
    LETTERS := ['A','B','C','D','E','F','G','H','I','J','K','L','M', 'N','O','P'
      ,'Q','R','S','T','U','V','W','X','Y','Z'];
    IDENTCHARS:= LETTERS OR DIGITS OR ['_'];
    CONSTBEGSYS := [ADDOP,INTCONST,REALCONST,STRINGCONST,IDENT];
    SIMPTYPEBEGSYS := [ LPARENT , ADDOP , INTCONST , REALCONST , STRINGCONST ,
      IDENT ] ;
    TYPEBEGSYS := [ARROW,PACKEDSY,ARRAYSY,RECORDSY,SETSY,FILESY,LPARENT,ADDOP,
      INTCONST,REALCONST,STRINGCONST,IDENT];
    TYPEDELS := [ARRAYSY,RECORDSY,SETSY,FILESY];
    BLOCKBEGSYS := [LABELSY,CONSTSY,TYPESY,VARSY,PROCEDURESY,FUNCTIONSY, BEGINSY,
      PUBLICSY,EXTERNALSY];
    SELECTSYS := [ARROW,PERIOD,LBRACK];
    FACBEGSYS := [INTCONST,REALCONST,STRINGCONST,IDENT,LPARENT,LBRACK,NOTSY];
    STATBEGSYS := [BEGINSY,GOTOSY,IFSY,WHILESY,REPEATSY,LOOPSY,FORSY,WITHSY,
      CASESY,LOCALSY];
  END (*INITSETS*);

  (* INITPROCEDURE *)  (*RESWORDS*)
  BEGIN
    RW[ 1] := 'IF        ';
    RW[ 2] := 'DO        ';
    RW[ 3] := 'OF        ';
    RW[ 4] := 'TO        ';
    RW[ 5] := 'IN        ';
    RW[ 6] := 'OR        ';
    RW[ 7] := 'END       ';
    RW[ 8] := 'FOR       ';
    RW[ 9] := 'VAR       ';
    RW[10] := 'DIV       ';
    RW[11] := 'MOD       ';
    RW[12] := 'SET       ';
    RW[13] := 'AND       ';
    RW[14] := 'NOT       ';
    RW[15] := 'THEN      ';
    RW[16] := 'ELSE      ';
    RW[17] := 'WITH      ';
    RW[18] := 'GOTO      ';
    RW[19] := 'LOOP      ';
    RW[20] := 'CASE      ';
    RW[21] := 'TYPE      ';
    RW[22] := 'FILE      ';
    RW[23] := 'EXIT      ';
    RW[24] := 'BEGIN     ';
    RW[25] := 'UNTIL     ';
    RW[26] := 'WHILE     ';
    RW[27] := 'ARRAY     ';
    RW[28] := 'LABEL     ';
    RW[29] := 'CONST     ';
    RW[30] := 'OTHERS    ';
    RW[31] := 'REPEAT    ';
    RW[32] := 'RECORD    ';
    RW[33] := 'DOWNTO    ';
    RW[34] := 'PACKED    ';
    RW[35] := 'EXTERN    ';
    RW[36] := 'PUBLIC    ';
    RW[37] := 'FORWARD   ';
    RW[38] := 'FUNCTION  ';
    RW[39] := 'EXTERNAL  ';
    RW[40] := 'PROCEDURE ';
    FRW[1] := 1;
    FRW[2] := 1;
    FRW[3] := 7;
    FRW[4] := 15;
    FRW[5] := 24;
    FRW[6] := 30;
    FRW[7] := 37;
    FRW[8] := 38;
    FRW[9] := 40;
    FRW[10] := 41;
    FRW[11] := 41;
  END (*RESWORDS*);

  (* INITPROCEDURE *)  (*SYMBOLS *)
  BEGIN
    RSY[1] := IFSY;
    RSY[2] := DOSY;
    RSY[3] := OFSY;
    RSY[4] := TOSY;
    RSY[5] := RELOP;
    RSY[6] := ADDOP;
    RSY[7] := ENDSY;
    RSY[8] := FORSY;
    RSY[9] := VARSY;
    RSY[10] := MULOP;
    RSY[11] := MULOP;
    RSY[12] := SETSY;
    RSY[13] := MULOP;
    RSY[14] := NOTSY;
    RSY[15] := THENSY;
    RSY[16] := ELSESY;
    RSY[17] := WITHSY;
    RSY[18] := GOTOSY;
    RSY[19] := LOOPSY;
    RSY[20] := CASESY;
    RSY[21] := TYPESY;
    RSY[22] := FILESY;
    RSY[23] := EXITSY;
    RSY[24] := BEGINSY;
    RSY[25] := UNTILSY;
    RSY[26] := WHILESY;
    RSY[27] := ARRAYSY;
    RSY[28] := LABELSY;
    RSY[29] := CONSTSY;
    RSY[30] := DEFAULTSY;
    RSY[31] := REPEATSY;
    RSY[32] := RECORDSY;
    RSY[33] := DOWNTOSY;
    RSY[34] := PACKEDSY;
    RSY[35] := EXTERNSY;
    RSY[36] := PUBLICSY;
    RSY[37] := FORWARDSY;
    RSY[38] := FUNCTIONSY;
    RSY[39] := EXTERNALSY;
    RSY[40] := PROCEDURESY;
    SSY['A'] := OTHERSY;
    SSY['B'] := OTHERSY;
    SSY['C'] := OTHERSY;
    SSY['D'] := OTHERSY;
    SSY['E'] := OTHERSY;
    SSY['F'] := OTHERSY;
    SSY['G'] := OTHERSY;
    SSY['H'] := OTHERSY;
    SSY['I'] := OTHERSY;
    SSY['J'] := OTHERSY;
    SSY['K'] := OTHERSY;
    SSY['L'] := OTHERSY;
    SSY['M'] := OTHERSY;
    SSY['N'] := OTHERSY;
    SSY['O'] := OTHERSY;
    SSY['P'] := OTHERSY;
    SSY['Q'] := OTHERSY;
    SSY['R'] := OTHERSY;
    SSY['S'] := OTHERSY;
    SSY['T'] := OTHERSY;
    SSY['U'] := OTHERSY;
    SSY['V'] := OTHERSY;
    SSY['W'] := OTHERSY;
    SSY['X'] := OTHERSY;
    SSY['Y'] := OTHERSY;
    SSY['Z'] := OTHERSY;
    SSY['0'] := OTHERSY;
    SSY['1'] := OTHERSY;
    SSY['2'] := OTHERSY;
    SSY['3'] := OTHERSY;
    SSY['4'] := OTHERSY;
    SSY['5'] := OTHERSY;
    SSY['6'] := OTHERSY;
    SSY['7'] := OTHERSY;
    SSY['8'] := OTHERSY;
    SSY['9'] := OTHERSY;
    SSY['_'] := OTHERSY;
    SSY['+'] := ADDOP;
    SSY['-'] := ADDOP;
    SSY['*'] := MULOP;
    SSY['/'] := MULOP;
    SSY['('] := LPARENT;
    SSY[')'] := RPARENT;
    SSY['$'] := OTHERSY;
    SSY['='] := RELOP;
    SSY[' '] := OTHERSY;
    SSY[','] := COMMA;
    SSY['.'] := PERIOD;
    SSY[''''] := OTHERSY;
    SSY['['] := LBRACK;
    SSY[']'] := RBRACK ;
    SSY[':'] := COLON;
    SSY['#'] := RELOP;
    SSY['%'] := OTHERSY;
    SSY['!'] := ADDOP;
    SSY['&'] := MULOP;
    SSY['^'] := ARROW ;
    SSY['\'] := OTHERSY;
    SSY['<'] := RELOP;
    SSY['>'] := RELOP ;
    SSY['@'] := RELOP;
    SSY['"'] := RELOP;
    SSY['?'] := NOTSY ;
    SSY[';'] := SEMICOLON;
  END (*SYMBOLS*);
END (* INITTABLES ( TOO LONG IF INIT2 INCLUDED ) *);

PROCEDURE INIT2 (*$Y+*);

BEGIN

(* INITPROCEDURE *)  (* OPERATORS*)
  BEGIN
    ROP[ 1] := NOOP;
    ROP[ 2] := NOOP;
    ROP[ 3] := NOOP;
    ROP[ 4] := NOOP;
    ROP[ 5] := INOP;
    ROP[ 6] := OROP;
    ROP[ 7] := NOOP;
    ROP[ 8] := NOOP;
    ROP[ 9] := NOOP;
    ROP[10] := IDIV;
    ROP[11] := IMOD;
    ROP[12] := NOOP;
    ROP[13] :=ANDOP;
    ROP[14] := NOOP;
    ROP[15] := NOOP;
    ROP[16] := NOOP;
    ROP[17] := NOOP;
    ROP[18] := NOOP;
    ROP[19] := NOOP;
    ROP[20] := NOOP;
    ROP[21] := NOOP;
    ROP[22] := NOOP;
    ROP[23] := NOOP;
    ROP[24] := NOOP;
    ROP[25] := NOOP;
    ROP[26] := NOOP;
    ROP[27] := NOOP;
    ROP[28] := NOOP;
    ROP[29] := NOOP;
    ROP[30] := NOOP;
    ROP[31] := NOOP;
    ROP[32] := NOOP;
    ROP[33] := NOOP;
    ROP[34] := NOOP;
    ROP[35] := NOOP;
    ROP[36] := NOOP;
    ROP[37] := NOOP;
    ROP[38] := NOOP;
    ROP[39] := NOOP;
    ROP[40] := NOOP;
    SOP['+'] := PLUS;
    SOP['-'] := MINUS;
    SOP['*'] := MUL;
    SOP['/'] := RDIV;
    SOP['='] := EQOP;
    SOP['#'] := NEOP;
    SOP['!'] := OROP;
    SOP['&'] := ANDOP;
    SOP['<'] := LTOP;
    SOP['>'] := GTOP;
    SOP['@'] := LEOP;
    SOP['"'] := GEOP;
    SOP[' '] := NOOP;
    SOP['$'] := NOOP;
    SOP['%'] := NOOP;
    SOP['('] := NOOP;
    SOP[')'] := NOOP;
    SOP[','] := NOOP;
    SOP['.'] := NOOP;
    SOP['0'] := NOOP;
    SOP['1'] := NOOP;
    SOP['2'] := NOOP;
    SOP['3'] := NOOP;
    SOP['4'] := NOOP;
    SOP['5'] := NOOP;
    SOP['6'] := NOOP;
    SOP['7'] := NOOP;
    SOP['8'] := NOOP;
    SOP['9'] := NOOP;
    SOP[':'] := NOOP;
    SOP[';'] := NOOP;
    SOP['?'] := NOOP;
    SOP['E'] := NOOP;
    SOP['F'] := NOOP;
    SOP['G'] := NOOP;
    SOP['H'] := NOOP;
    SOP['A'] := NOOP;
    SOP['B'] := NOOP;
    SOP['C'] := NOOP;
    SOP['D'] := NOOP;
    SOP['I'] := NOOP;
    SOP['J'] := NOOP;
    SOP['K'] := NOOP;
    SOP['L'] := NOOP;
    SOP['M'] := NOOP;
    SOP['N'] := NOOP;
    SOP['O'] := NOOP;
    SOP['P'] := NOOP;
    SOP['Q'] := NOOP;
    SOP['R'] := NOOP;
    SOP['S'] := NOOP;
    SOP['T'] := NOOP;
    SOP['U'] := NOOP;
    SOP['V'] := NOOP;
    SOP['W'] := NOOP;
    SOP['X'] := NOOP;
    SOP['Y'] := NOOP;
    SOP['Z'] := NOOP;
    SOP['['] := NOOP;
    SOP['\'] := NOOP;
    SOP[']'] := NOOP;
    SOP['^'] := NOOP;
    SOP['_'] := NOOP;
    SOP[''''] := NOOP;
    (*END OPERATORS*)
  END;

  (* INITPROCEDURE *)   (*INSTRUCTIONVALUES*)
  BEGIN
    INSTRVAL[MOVB]:=110000B;
    INSTRVAL[CLRB]:=105000B;
    INSTRVAL[CMPB]:=120000B;
    INSTRVAL[CLR]:=005000B;
    INSTRVAL[DEC]:=005300B;
    INSTRVAL[INC]:=005200B;
    INSTRVAL[NEG]:=005400B;
    INSTRVAL[TST]:=005700B;
    INSTRVAL[COM]:=005100B;
    INSTRVAL[ASL]:=006300B;
    INSTRVAL[ASR]:=006200B;
    INSTRVAL[JMP]:=000100B;
    INSTRVAL[JSR]:=004000B;
    INSTRVAL[SOB]:=077000B;
    INSTRVAL[XOR]:=074000B;
    INSTRVAL[MULT]:=070000B;
    INSTRVAL[TRAP]:=104400B;
    INSTRVAL[EMT]:=104000B;
    INSTRVAL[BR]:= 000400B;
    INSTRVAL[BEQ]:=001400B;
    INSTRVAL[BNE]:=001000B;
    INSTRVAL[BGE]:=002000B;
    INSTRVAL[BGT]:=003000B;
    INSTRVAL[BLE]:=003400B;
    INSTRVAL[BLT]:=002400B;
    INSTRVAL[BPL]:=100000B;
    INSTRVAL[BMI]:=100400B;
    INSTRVAL[MOV]:=010000B;
    INSTRVAL[ADD]:=060000B;
    INSTRVAL[SUB]:=160000B;
    INSTRVAL[CMP]:=020000B;
    INSTRVAL[BIS]:=050000B;
    INSTRVAL[BIT]:=030000B;
    INSTRVAL[BIC]:=040000B;
    INSTRVAL[RTS]:=000200B;
    INSTRVAL[RTI]:=000002B;
  END (* INSTUCTIONVALUES *);
  TIMESTR := '          ';
  DATESTR := DATE;
  FOR RTR := ERRN TO LASTRTR DO
    NOTCALLED[RTR] := TRUE;
    (* INITPROCEDURE *) (*ARRAYS FOR EXPRESSION: CALLS OF RUNTIMEROUTINES*)
  BEGIN
    SCALRT[LEOP,FALSE] := LEQ;
    SCALRT[LEOP,TRUE] := LEQR;
    SCALRT[GEOP,FALSE] := GEQ;
    SCALRT[GEOP,TRUE] := GEQR;
    SCALRT[GTOP,FALSE] := GRT;
    SCALRT[GTOP,TRUE] := GRTR;
    SCALRT[LTOP,FALSE] := LES;
    SCALRT[LTOP,TRUE] := LESR;
    SCALRT[EQOP,FALSE] := EQU;
    SCALRT[EQOP,TRUE] := EQUR;
    SCALRT[NEOP,FALSE] := NEQ;
    SCALRT[NEOP,TRUE] := NEQR;
    ARRT[LTOP,FALSE,FALSE] := ERRN ;
    ARRT[LTOP,FALSE,TRUE] := ERRN ;
    ARRT[LTOP,TRUE ,FALSE] := LESM ;
    ARRT[LTOP,TRUE ,TRUE] := LESM2;
    ARRT[LEOP,FALSE,FALSE] := ERRN ;
    ARRT[LEOP,FALSE,TRUE] := ERRN ;
    ARRT[LEOP,TRUE ,FALSE] := LEQM ;
    ARRT[LEOP,TRUE ,TRUE] := LEQM2;
    ARRT[GEOP,FALSE,FALSE] := ERRN ;
    ARRT[GEOP,FALSE,TRUE] := ERRN ;
    ARRT[GEOP,TRUE ,FALSE] := GEQM ;
    ARRT[GEOP,TRUE ,TRUE] := GEQM2;
    ARRT[GTOP,FALSE,FALSE] := ERRN ;
    ARRT[GTOP,FALSE,TRUE] := ERRN ;
    ARRT[GTOP,TRUE,FALSE] := GRTM ;
    ARRT[GTOP,TRUE ,TRUE] := GRTM2;
    ARRT[NEOP,FALSE,FALSE] := NEQM;
    ARRT[NEOP,FALSE,TRUE] := NEQM2;
    ARRT[NEOP,TRUE ,FALSE] := NEQM;
    ARRT[NEOP,TRUE ,TRUE] := NEQM2;
    ARRT[EQOP,FALSE,FALSE] := EQUM;
    ARRT[EQOP,FALSE,TRUE] := EQUM2;
    ARRT[EQOP,TRUE ,FALSE] := EQUM;
    ARRT[EQOP,TRUE ,TRUE] := EQUM2;
  END;
  (* INITPROCEDURE *)   (* OBJECTRECORDS *)
  BEGIN
    GSD.VALUE[1] := 1 ;
    GSD.LEN := 1 ;
    RLD.VALUE[1] := 4 ;
    RLD.LEN := 1 ;
    CODE.VALUE[1] := 3 ;
    CODE.LEN := 1 ;
  END (* OBJECTRECORDS *);
END (* INIT2 *);
