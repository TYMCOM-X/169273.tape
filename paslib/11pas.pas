$OPTIONS SPECIAL, NOCHECK, STORAGE=4000, LENGTH=44, PROGRESS, INFO, MAIN


(*$W-,X+*)
(*$R-*)


(**********************************************************
   *                                                   *
   *                                                       *
   *     STEP 5:   SYNTAX ANALYSIS INCLUDING ERROR         *
   *               HANDLING; CHECKS BASED ON DECLARATIONS  *
   *                                                       *
   *     AUTHOR:   URS AMMANN                              *
   *               FACHGRUPPE COMPUTERWISSENSCHAFTEN       *
   *               EIDG. TECHNISCHE HOCHSCHULE             *
   *       CH-8006 ZUERICH                                 *
   *                                                       *
   *               ADAPTED TO GENERATE CODE FOR A          *
   *               PDP 11 BY:                              *
   *               W. DE VRIES                             *
   *               UNDER GUIDANCE OF DRS C. BRON           *
   *               VAKGROEP  INFORMATICA                   *
   *               TECHNISCHE HOGESCHOOL TWENTE ENSCHEDE   *
   *               APRIL '75                               *
   *                                                       *
   *               CHANGED TO RUN UNDER RSX-11M BY:        *
   *               SEVED TORSTENDAHL                       *
   *               TELEFONAKTIEBOLAGET LM ERICSSON         *
   *               S-126 25  STOCKHOLM                     *
   *                                                       *
   **********************************************************)







CONST
    DISPLIMIT = 20;
    MAXADDR = 32767;
    MAXSTRGUB = 77; (*MAXIMUM STRINGLENGTH = 78*)
    STARTADDR = 00000B;
    CIXMAX = 32767;
    CODEMAX = 32767;
    ALFALENG = 10;
    VERSION = 650 (*  6.50  *);
    OPTIONCONSTR = '$' ;
    SRCNESTMAX = 3 (* MAX 3 LEVELS OF SROURCE CODE NESTING *);
    MAXFILES = 5 ;
    TEXTBUFFSIZE = 132 (* BYTES *);
    FILESIZECORR = 104 (* BYTES *);
    FDBSIZE = 96 (* BYTES *);
    (* RECORD *)
    (* FDB: FILE DESCR BLOCK *)
    EOLNSTATUS = -8; (* EOLN: BOOLEAN *)
    EOFSTATUS = -6; (* EOF: BOOLEAN *)
    IORESULT = -4 (* IORESULT:INTEGER *);
    (* FILTYP: SET OF [RANDOM,UPDATE,APPEND,TEMPORARY,INSERT,SHARED,SPOOL] *)


    (*ADDRESSES OF  'PREDECLARED' VARIABLES *)
    (*WHICH BY THEIR ADDRESS HAVE THE STATUS OF *)
    (*PARAMETERS TO THE MAIN PROGRAM.*)

    DAPADDR = 8;
    MARKADDR = 6;
    LINEADDR = 2;


    (*NAMES OF THE PDP11-INSTRUCTIONS THAT MAY *)
    (*APPEAR IN THE INLINE CODE *)


    (*NAMES OF THE PDP11 REGISTERS *)

    AR = 0;
    R = 1;
    AD = 2;
    GP = 3;
    MP = 4;
    SP = 5;
    HP = 6;
    PC = 7;

    (*NAMES REPRESENTING THE PDP11 ADDRESSING- *)
    (* MODES *)
    REG = 0;
    REGDEF = 8;
    AUTINC = 16;
    AUTDEC = 32;
    AUTINCDEF = 24;
    AUTDECDEF = 40;
    INDEX = 48;
    INDEXDEF = 56;
    OBJECTRECSIZE = 25 ;
    GBLDFMAX = 30 ;
    PSECTDEFFLAGS = 2450B ;
    GLBLPSECTFLAGS = 2750B;
    STATPSECTFLAGS = 2650B;
    GLOBALDEFFLAGS = 2150B ;
    GLOBALREFFLAGS = 2100B ;
    RELOCFCN = 6 ; (* GLOBAL ADDITIVE DISPLACED RELOCATION*)
    DIRECTRELOC = 5; (* GLOBAL ADDITIVE RELOCATION *)
    STATICPSECT = '.LOCAL     ';
    GLOBALPSECT = '.GLOBL     ';
    STATICRELOC = 15B;



TYPE
(*DESCRIBING:*)
(*************)

(*BASIC SYMBOLS*)
(***************)

    INSTRRANGE = (CLRB,MOVB,CMPB,CLR,DEC,INC,NEG,TST,COM,ASL,ASR,HALT, JMP,JSR,
      SOB,XOR,MULT,DIVV,TRAP,EMT,MOV,ADD,SUB,CMP, BIS,BIT,BIC,BR,BEQ,BNE,BGE,BGT
	,BLE,BLT,BPL,BMI,RTI,RTS) ;
    SYMBOL = (IDENT,INTCONST,REALCONST,STRINGCONST,NOTSY,MULOP,ADDOP,RELOP,
      LPARENT,RPARENT,LBRACK,RBRACK,COMMA,SEMICOLON,PERIOD,ARROW, COLON,BECOMES,
	LABELSY,CONSTSY,TYPESY,VARSY,LOCALSY,FUNCTIONSY, PROCEDURESY,SETSY,
	  PACKEDSY,ARRAYSY,RECORDSY,FILESY,FORWARDSY, BEGINSY,IFSY,CASESY,
	    REPEATSY,WHILESY,FORSY,WITHSY,LOOPSY, GOTOSY,EXITSY,ENDSY,ELSESY,
	      UNTILSY,OFSY,DOSY,TOSY,DOWNTOSY, THENSY,OTHERSY,DEFAULTSY,
		EXTERNSY,EXTERNALSY,STATICSY,PUBLICSY,FORTRANSY);
    OPERATOR = (MUL,RDIV,ANDOP,IDIV,IMOD,PLUS,MINUS,OROP,LTOP,LEOP,GEOP,GTOP,
      NEOP,EQOP,INOP,NOOP);
    SETOFSYS = SET OF SYMBOL;
    BOOLARR = PACKED ARRAY ['A'..'Z'] OF BOOLEAN;

    (*CONSTANTS*)
    (***********)

    CSTCLASS = (REEL,PSET,STRG);
    CSP = ^ CONSTANT;
    CONSTANT = RECORD
      SELFCSP: INTEGER;
      NOCODE: INTEGER;
      CASE CSTCLASS OF (*CCLASS NEVER SET NORE TESTED*)
	REEL: (
	  HEAD,TAIL: INTEGER;
	  RVAL: REAL);
	PSET: (
	  PVAL: SET OF 0..63);
	STRG: (
	  SLGTH: 0..MAXSTRGUB;
	  SVAL: ARRAY [0..MAXSTRGUB] OF CHAR)
    END;
    VALU = RECORD
      CASE BOOLEAN OF (*INTVAL NEVER SET NORE TESTED*)
	TRUE: (
	  IVAL: INTEGER);
	FALSE: (
	  VALP: CSP)
    END;

    (*DATA STRUCTURES*)
    (*****************)
    LEVRANGE = 0..MAXADDR;
    ADDRRANGE = -MAXADDR..MAXADDR;
    STRUCTFORM = (SCALAR,SUBRANGE,POINTER,POWER,ARRAYS,RECORDS,FILES, BOUNDLESS,
      TAGFWITHID,TAGFWITHOUTID,VARIANT,STRINGPARM);
    DECLKIND = (STANDARD,DECLARED);
    STP = ^ STRUCTURE;
    CTP = ^ IDENTIFIER;
    INTP = ^ INTEGER;
    STRUCTURE = PACKED RECORD
      SELFSTP: INTEGER;
      NOCODE: BOOLEAN;
      SIZE: ADDRRANGE;
      CASE FORM: STRUCTFORM OF
	SCALAR: (
	  CASE SCALKIND: DECLKIND OF
	    DECLARED: (
	      FCONST: CTP));
	SUBRANGE: (
	  RANGETYPE: STP;
	  MIN,MAX: VALU);
	POINTER: (
	  ELTYPE: STP);
	POWER: (
	  ELSET: STP);
	ARRAYS: (
	  AELTYPE,INXTYPE: STP;
	  ADDRCORR: INTEGER;
	  PACKOPT: BOOLEAN);
	RECORDS: (
	  FSTFLD: CTP;
	  RECVAR: STP;
	  PACKSTRUCT: BOOLEAN);
	FILES: (
	  FILTYPE: STP);
	BOUNDLESS:(
	  SUBSTRUCT,INDEXTYPE: STP;
	  UNSPECLEVEL: INTEGER);
	TAGFWITHID, TAGFWITHOUTID:(
	  FSTVAR: STP;
	  CASE BOOLEAN OF
	    TRUE: (
	      TAGFIELDP: CTP);
	    FALSE: (
	      TAGFIELDTYPE: STP));
	VARIANT: (
	  NXTVAR,SUBVAR: STP;
	  VARVAL: VALU)
    END;

    (*NAMES*)
    (*******)

    IDCLASS = (TYPES,KONST,VARS,FIELD,PROC,FUNC);
    SETOFIDS = SET OF IDCLASS;
    IDKIND = (ACTUAL,FORMAL);
    ALFA = PACKED ARRAY [1..ALFALENG] OF CHAR;
    FORWARDOREXT = (INTERNAL,FORWDECL,FORWFOUND,EXTRNL, EXTERNALTX,EXTERNFORTRAN
      ) ;
    CODERANGE = 0 .. CODEMAX ;
    ALFAP = ^ ALFA ;
    IDENTIFIER = PACKED RECORD
      SELFCTP: INTEGER;
      NOCODE: BOOLEAN;
      NAME: ALFA;
      LLINK, RLINK: CTP;
      IDTYPE: STP;
      NEXT: CTP;
      CASE KLASS: IDCLASS OF
	KONST: (
	  VALUES: VALU;
	  KADDR: CODERANGE; (* SAVES ADDR WHERE STRINGCONST EMITTED *)
	  BODYINDEX: INTEGER); (* SAVES PSECT INDEX WHERE EMITTED *)
	VARS: (
	  VKIND: IDKIND;
	  VLEV: LEVRANGE;
	  VADDR: ADDRRANGE;
	  VNOTUSED: BOOLEAN;
	  VCLASS: SYMBOL);
	FIELD: (
	  FLDADDR: ADDRRANGE);
	PROC, FUNC: (
	  CASE PFDECKIND: DECLKIND OF
	    STANDARD: (
	      KEY: 1..25);
	    DECLARED: (
	      PFLEV: LEVRANGE;
	      PFADDR, PARLISTSIZE: ADDRRANGE;
	      CASE PFKIND: IDKIND OF
		ACTUAL: (
		  DECLPLACE: FORWARDOREXT;
		  PNOTUSED: BOOLEAN;
		  EXTNAME: ALFAP);
		FORMAL: (
		  PARMLIST: CTP)))
    END;
    DISPRANGE = 0..DISPLIMIT;
    WHERE = (BLCK,CREC,VREC);



    (*NAMES OF THE RUNTIMEROUTINES *)

    RUNTIMEROUTS = (ERRN, EQUR,NEQR,LESR,LEQR,GRTR,GEQR,ADR,SBR, SQRR,MPR,DVR,
      FLO,FLT,TRC,RND,EXITP, EXITB, GRTM,GRTM2,LESM,LESM2,GEQM,GEQM2,LEQM,LEQM2, EQUM,
	EQUM2,EQUS4,NEQM,NEQM2,NEQS4, EQU,NEQ,GRT,GEQ,LES,LEQ, DVI,MODI,SQI,MPI,
	  MOVM,MOVM2, WRCHA,INN,SGSIN,INITS,UNI4,INT4,DIF4, EXPST,EXPSN,REDST,
	    REDSN, IXB,STPB,LPB,CLRAREA,CLRSTK, RDC,RDI,RDR,RDREC,WRREC,RDSTR,
	      WRC,WRS,WRI,WRR, MARKP,RELEASEP,OVFLCHK,SUBRCHK, LEQS1,LEQS4,GEQS1
		,GEQS4, TRACK,FREQV,DDTINIT, GETCH,GETLINE,INITA,INITB,WRIOCT,RESETF,
		  REWRITEF, PUTCH,PUTLINE, BRK,FORMFD,RUNTM,TIME1,DATE1,WRB,
		    WRBFX, GETR,PUTR,DUMP,WRFIX,FORTR,TTPAR,MOVTS, MOVFS,MOVMR,
		      TWPOW,SPLTRL,RSIN,RCOS, RARCTAN,REXP,RLOG,RSQRT,
			SUBSTRCHECK, STRINGINDEX,DUMRTR,NEWP,DISPOSEP,LASTRTR);


			(*EXPRESSIONS*)
			(*************)
    ATTRKIND = (CST,VARBL,EXPR);
    VACCESS = (DRCT, INDRCT, PACKD);
    ATTR = RECORD
      TYPTR: STP;
      CASE KIND: ATTRKIND OF
	CST: (
	  CVAL: VALU);
	VARBL: (
	  CASE ACCESS: VACCESS OF
	    DRCT: (
	      VLEVEL: LEVRANGE;
	      VID: CTP;
	      VSCLASS: SYMBOL;
	      DPLMT: ADDRRANGE);
	    INDRCT: (
	      IDPLMT: ADDRRANGE))
    END;

    (*LABELS*)
    (********)
    REFLINKP = ^ REFLINK ;
    REFLINK = RECORD
      NEXTREF: REFLINKP;
      REFADDR: ADDRRANGE
    END;
    LBP = ^ LABL;
    LABL = RECORD
      NEXTLAB: LBP;
      LABVAL: INTEGER;
      DECLARED: BOOLEAN;
      CASE DEFINED: BOOLEAN OF
	TRUE: (
	  LABADDR: ADDRRANGE);
	FALSE: (
	  LABCHAIN: REFLINKP)
    END;

    (* CODE GENERATION *)
    (*******************)

    TEXT = FILE OF CHAR;
    INTFILE = FILE OF INTEGER;
    GBLDFRANGE = 0 .. GBLDFMAX ;
    OBJECTRECORD = RECORD
      LEN: 1..OBJECTRECSIZE ;
      VALUE: ARRAY [1..OBJECTRECSIZE] OF INTEGER
    END;
    TEXTFDB = ARRAY [-19..0] OF INTEGER;
    LINEBUFF = PACKED ARRAY [1..80] OF CHAR;
    STR20 = PACKED ARRAY [0..20] OF CHAR;
    SRCDESCR = RECORD
      FDB: TEXTFDB;
      FNAME: STR20;
      LINNR: INTEGER
    END;

    (*------------------------------------------------------------------------------*)




VAR


(*RETURNED BY SOURCE PROGRAM SCANNER
 INSYMBOL:

 **********)

    SY: SYMBOL; (*LAST SYMBOL*)
    OP: OPERATOR; (*CLASSIFICATION OF LAST SYMBOL*)
    VAL: VALU; (*VALUE OF LAST CONSTANT*)
    LGTH: INTEGER; (*LENGTH OF LAST STRING CONSTANT*)
    ID:ALFA; (*LAST IDENTIFIER (POSSIBLY TRUNCATED)*)
    KK: 1..ALFALENG; (*NR OF CHARS IN LAST IDENTIFIER*)
    CH: CHAR; (*LAST CHARACTER*)


    (* OBJECT CODE GENERATION *)
    (**************************)


    BODYCOUNT: INTEGER; (* COUNTS NUMBER OF PSECTS EMITTED *)
    GSD,CODE,RLD: OBJECTRECORD ; (* EGSD,EM *)
    PSECT,OBJIDENT: ALFA ; (* CURRENT PSECTION NAME *)
    GLOBALENTRY: ARRAY [GBLDFRANGE] OF RECORD
      R50P1,R50P2,EPADDR:INTEGER
    END;
    GLOBALINDEX: GBLDFRANGE ; (* POINTER IN GLOBALENTRY*)
    NOTCALLED: PACKED ARRAY [ RUNTIMEROUTS] OF BOOLEAN ;

    (*COUNTERS:*)
    (***********)

    RTR: RUNTIMEROUTS; (*RUNTIMEROUTINECOUNTER*)
    CIXX: INTEGER;
    DATASIZE, I, RTIME: INTEGER; (*RUNTIME COUNT/CONTRL VAR*)
    CHCNT: INTEGER; (*CHARACTER COUNTER*)
    CIX: INTEGER; (*COMPILER-INSTRUCTIONCOUNTER*)
    LC: INTEGER; (*DATA LOCATION*)
    PDPWORD, CHECKSUM: INTEGER;
    OLDLINENO,LINEWIDTH,POINTERCNT, LINENO,PAGENO,LINECNT,PAGEWIDTH: INTEGER;
    EPMAIN: CODERANGE; (*STARTADDRESS OF MAIN PROGRAM*)
    SELECTOR, (*RUNTIME ERROR BEHAVIOUR SELECTION*)
    DEFLEVEL: INTEGER; (* DEFAULT DECLARATION LEVEL *)

    (*SWITCHES:*)
    (***********)

VAR
    TRACE: BOOLEAN; (* RUNTIME TRACE OF EXECUTED STATEMENTS*)


PUBLIC VAR
    INTPROC, (*INTERRUPT PROCEDURES*)
    ERRDETECTED, (*DETECTION OF ERRORS*)
    DP, (*DECLARATION PART*)
    PRTERR, (*TO ALLOW FORWARD REFERENCES IN POINTER TYPE
	     DECLARATION BY SUPPRESSING ERROR MESSAGE*)
    PAGEEJECT, (*PREMATURE PAGE EJECT*)
    LIST,PRCODE, MAIN, (*MAIN PROGRAM OR PROCEDUREONLY*)
    DEBUG, (* DEBUG SELECTOR *)
    NOIO, (* NO I/O DONE BY PROGRAM *)
    FREQUENCE, (* MEASUREMENT OF STATEMENT EXECUTION FREQUENCIES*)
    CONDCOMP, (* CONDITIONAL COMPILATION *)
    WARNINGS, (* WARNING MESSAGES *)
    HEAPCHECK, (*RUNTIME CHECK OF HEAP VS STACK*)
    CXPOPENED, (*BOOKKEEPING OF CEX STATUS*)
    RUNTMCHECK, (*OUTPUT OPTIONS FOR
		 -- SOURCE PROGRAM LISTING
		 -- PRINTING SYMBOLIC CODE
		 -- RUNTIME CHECKING
		 --> PROCEDURE OPTION*)
    PSECTGEN, (*   -- PSECTION GENERATION*)
    FIRSTMODULE, (* TO GENERATE MODULE ID *)

    EXTSET, FPPUNIT, (* OPTIONS FOR CODEGENERATION:
		      --EXTENDED PDP11 INSTRUCTIONSET
		      --FLOATING POINT PROCESSOR*)
    FLTSET : BOOLEAN; (* FLOATING POINT INSTRUCTION SET *)
    HAVEGLOBALS: BOOLEAN; (* TRUE IF PUBLIC VARS DECLARED IN COMPILATION *)
    STATBASE: INTEGER;	(* SIZE OF STATIC AREA *)
    PUBLICBASE: INTEGER;(* SIZE OF PUBLIC DATA AREA FOR THIS COMPILATION *)
    ONSWITCH,OFFSWITCH: BOOLARR;


    (*POINTERS:*)
    (***********)

VAR
    INTPTR,REALPTR,CHARPTR,IOSPECPTR, BOOLPTR,NILPTR,TEXTPTR: STP; (*POINTERS TO ENTRIES OF STANDARD IDS*)
    INPUTPTR,OUTPUTPTR, TTYINPTR,TTYOUTPTR, (*POINTERS TO STANDARD FILES*)
    UTYPPTR,UCSTPTR,UVARPTR, UFLDPTR,UPRCPTR,UFCTPTR, (*POINTERS TO ENTRIES FOR UNDECLARED IDS*)
    FWPTR: CTP; (*HEAD OF CHAIN OF FORW DECL TYPE IDS*)
    FSTLABP: LBP; (*HEAD OF LABEL CHAIN*)


    (*BOOKKEEPING OF DECLARATION LEVELS:*)
    (************************************)

    LEVEL: LEVRANGE; (*CURRENT STATIC LEVEL*)
    DISX, (*LEVEL OF LAST ID SEARCHED BY SEARCHID*)
    TOP: DISPRANGE; (*TOP OF DISPLAY*)

    DISPLAY: (*WHERE:   MEANS:*)
    ARRAY [DISPRANGE] OF PACKED RECORD (*=BLCK:   ID IS VARIABLE ID*)
      FNAME: CTP; (*=CREC:   ID IS FIELD ID IN RECORD WITH*)
      CASE OCCUR: WHERE OF (*         CONSTANT ADDRESS*)
	CREC: (
	  CLEV: LEVRANGE; (*=VREC:   ID IS FIELD ID IN RECORD WITH*)
	  CDSPL: ADDRRANGE); (*         VARIABLE ADDRESS*)
	VREC: (
	  VDSPL: ADDRRANGE)
    END; (* --> PROCEDURE WITHSTATEMENT*)


    (*ERROR MESSAGES:*)
    (*****************)

    ERRINX: 0..10; (*NR OF ERRORS IN CURRENT SOURCE LINE*)
    ERRLIST: ARRAY [1..10] OF PACKED RECORD
      POS: INTEGER;
      NMR: 1..999
    END;


    (*EXPRESSION COMPILATION:*)
    (*************************)

    GATTR: ATTR; (*DESCRIBES THE EXPR CURRENTLY COMPILED*)


    (*STRUCTURED CONSTANTS:*)
    (***********************)


PUBLIC VAR
    LETTERS,DIGITS,IDENTCHARS: SET OF CHAR;
    CONSTBEGSYS,SIMPTYPEBEGSYS,TYPEBEGSYS,BLOCKBEGSYS,SELECTSYS,FACBEGSYS,
      STATBEGSYS,TYPEDELS: SETOFSYS;
    RW: ARRAY [1..40 (*NR. OF RES. WORDS*)] OF ALFA;
    FRW: ARRAY [1..11 (*ALFALENG+1*)] OF 1..41 (*NR. OF RES. WORDS + 1*);
    RSY: ARRAY [1..40 (*NR. OF RES. WORDS*)] OF SYMBOL;
    SSY: ARRAY [' '..'_'] OF SYMBOL;
    ROP: ARRAY [1..40 (*NR. OF RES. WORDS*)] OF OPERATOR;
    SOP: ARRAY [' '..'_'] OF OPERATOR;
    INSTRVAL: ARRAY[INSTRRANGE] OF INTEGER ;
    RNA: ARRAY[RUNTIMEROUTS] OF PACKED ARRAY[1..5] OF CHAR; (*RUNTIME NAMES*)
    (*$Z+*)
    REGNAMES: ARRAY [0..7] OF PACKED ARRAY[1..2] OF CHAR;
    MN: ARRAY[INSTRRANGE] OF PACKED ARRAY[1..3] OF CHAR; (*DISSEMBLER*)
    (*$Z-*)

    ARRT : ARRAY [LTOP..EQOP,BOOLEAN,BOOLEAN] OF RUNTIMEROUTS;
    SCALRT : ARRAY [LTOP..EQOP,BOOLEAN] OF RUNTIMEROUTS;
    HEADER,TIMESTR,DATESTR: ALFA;
    PDP11OBJ: TEXT ; (*OBJECT CODE FILE FOR PDP-11 COMPILER*)
    (*$Z+*)
    OUTPHGH: FILE OF INTEGER; (*CODE FILE IN BIN. FORMAT*)
    CEX: FILE OF CHAR ; (*CODE EXPANSION LIST FILE *)
    (*$Z-*)
    FILENAME: STR20; (*NAME OF INPUT FILE*)
    MCRLINE: LINEBUFF;
    MCRLEN: INTEGER;
    SRCLEVEL: -1..SRCNESTMAX;
    SRCNEST: ARRAY [1..SRCNESTMAX] OF SRCDESCR;


    (* DEBUG *)
    (*********)

    LASTLINE: RECORD
      LLADDR: ADDRRANGE;
      LLPSECT: ALFA
    END;
    DCIX: INTEGER (* POINTER IN PSECT $DDTDF *);
    IDRECSIZE: ARRAY [ IDCLASS ] OF INTEGER;
    STRECSIZE: ARRAY [ STRUCTFORM ] OF INTEGER;


    (*------------------------------------------------------------------------------*)




PROCEDURE SWITCHINIT( VAR I1,I2,I3: INTEGER;
  VAR B1,B2,B3,B4,B5, B6,B7,B8,B9,B10,B11,B12,B13,B14,B15: BOOLEAN );

EXTERN;

EXTERNAL FUNCTION INCLUDE (STRING): BOOLEAN;

EXTERNAL PROCEDURE CLOSEINCLUDE;

$INCLUDE 11INI.PAS

PROCEDURE WRITOFILE ( VAR REC: OBJECTRECORD ; VAR PDPOBJ: TEXT (*$Z+*);
  VAR OUTPHGH: INTFILE (*$Z-*));

EXTERN;

PROCEDURE READFILEIDENTIFIER( VAR FDL,FPW,PLW: INTEGER; VAR SWL,SWC: BOOLARR;
(* VAR CML: LINEBUFF; VAR CMLLEN: INTEGER; *)VAR FILENAME: STR20 ;
  VAR PDPOBJ:TEXT ; (*$Z+*)VAR OUTPHGH: INTFILE; (*$Z-*)
  VAR INPUT: TEXT; VAR OUTPUT: TEXT (*$Z+*); VAR CODE: TEXT (*$Z-*); VAR CEXOPENED: BOOLEAN);

EXTERN;



(*$Y+*)  (* NEW MODULE *)


$INCLUDE 11LEX.PAS

(*$Y+*)   (*  NEW MODULE   *)

$INCLUDE 11BLK.PAS


(*$Y+*)   (* NEW MODULE *)




PROCEDURE BODY(FSYS: SETOFSYS);

VAR
    I: INTEGER;
    CIX1: CODERANGE ;
    LCMAX,LLC1,ADDR: ADDRRANGE;
    LCP: CTP;
    LLP: LBP;
    INTRPT: BOOLEAN;
    FIRSTPASS: BOOLEAN;


$INCLUDE 11CG.PAS

    (*$Y+*)     (*  NEW MODULE  *)



$INCLUDE 11CLL.PAS

    (*$Y+*)   (* NEW MODULE *)




$INCLUDE 11EXP.PAS

$INCLUDE 11BOD.PAS



    (*$Y+*)     (*  NEW MODULE  *)




  PROCEDURE GETSTORAGECLASS;

  BEGIN
    STCLASS := DEFAULTSY;
    IF SY = PUBLICSY THEN
      STCLASS := PUBLICSY
    ELSE IF SY = EXTERNALSY THEN
      STCLASS := EXTERNALSY;
    IF STCLASS <> DEFAULTSY THEN BEGIN
      INSYMBOL;
      IF LEVEL > 1 THEN
	ERROR (301);
    END;
  END;

BEGIN (*BLOCK*)
  HEAPMARK(HEAPM);
  TESTPACKED := FALSE;
  FLABP := FSTLABP;
  DP := TRUE;
  IF NOT MAIN AND (LEVEL = 1) THEN
    FSYS := FSYS OR [PERIOD];
  OLDPSECT := PSECT;
  IF FPROCP <> NIL THEN
    IF FPROCP^.EXTNAME <> NIL THEN
      PSECT := FPROCP^.EXTNAME^
    ELSE
      PSECT := FPROCP^.NAME;
  OLDCIX := CIX ;
  CIX := -1 ;
  OLDGLOBALINDEX := GLOBALINDEX ;
  WHILE SY IN BLOCKBEGSYS - [BEGINSY] DO BEGIN
    GETSTORAGECLASS;
    IF SY = LABELSY THEN BEGIN
      IF STCLASS <> DEFAULTSY THEN
	ERROR (302);
      INSYMBOL;
      LABELDECLARATION
    END
    ELSE IF SY = CONSTSY THEN BEGIN
      IF STCLASS <> DEFAULTSY THEN
	ERROR (302);
      INSYMBOL;
      CONSTDECLARATION
    END
    ELSE IF SY = TYPESY THEN BEGIN
      IF STCLASS <> DEFAULTSY THEN
	ERROR (302);
      INSYMBOL;
      TYPEDECLARATION
    END
    ELSE IF SY = VARSY THEN BEGIN
      IF STCLASS = PUBLICSY THEN
	HAVEGLOBALS := TRUE;
      INSYMBOL;
      VARDECLARATION
    END
    ELSE IF SY IN [PROCEDURESY,FUNCTIONSY] THEN BEGIN
      LSY := SY;
      INSYMBOL;
      PROCEDUREDECLARATION(LSY)
    END
    ELSE
      ERROR (302);
  END;
  DP := FALSE;
  IF MAIN OR ( LEVEL > 1 ) THEN BEGIN
    IF SY = BY THEN
      INSYMBOL
    ELSE
      ERROR(17);
    REPEAT
      BODY(FSYS OR [CASESY]);
      IF ( SY <> FSY ) AND ( SY <> PERIOD ) THEN BEGIN
	ERROR(6);
	SKIP(FSYS OR [FSY])
      END
    UNTIL (SY = FSY) OR (SY IN BLOCKBEGSYS) OR (SY = PERIOD);
  END (* IF MAIN OR LEVEL > 1 *)
  ELSE IF SY <> PERIOD THEN
    ERROR(183);
  HEAPRELEASE(HEAPM); (*DELETE LOCAL ENTRIES IN THE RUNTIME ''HEAP''*)
END (*BLOCK*);

$INCLUDE 11INI2.PAS

PROCEDURE OPENFILES (*$Y+*);

BEGIN
  READFILEIDENTIFIER( DEFLEVEL, PAGEWIDTH, LINEWIDTH, ONSWITCH, OFFSWITCH,
  (*MCRLINE, MCRLEN,*)FILENAME, PDP11OBJ, (*--MCR PARAMETERS NOT DECLARED IN P11CRS *)
  (*$Z+*)OUTPHGH, (*$Z-*)INPUT, OUTPUT (*$Z+*), CEX (*$Z-*), CXPOPENED) ;
END (* OPENFILES *);

PROCEDURE WRITESTAT;

BEGIN
  IF ERRDETECTED THEN
    WRITE('**** ')
  ELSE
    WRITE('NO ');
  WRITELN('ERROR DETECTED');
  WRITELN('TOTAL PROGRAM SIZE     ', 2*CIXX+2:7:O);
  WRITELN('OUTERMOST DATA SIZE    ', -LC+STATBASE+PUBLICBASE:7:O );
  WRITELN;
  WRITELN ( MCRLINE : MCRLEN );
END;

(*$Y+*)  (* NEW MODULE *)



BEGIN
  INITTABLES;
  INIT2;

  (*ENTER STANDARD NAMES AND STANDARD TYPES:*)
  (******************************************)

  RTIME := RUNTIME;
  LEVEL := 0;
  TOP := 0;
  WITH DISPLAY[0] DO BEGIN
    FNAME := NIL;
    OCCUR := BLCK
  END;



  (*OPEN COMPILER FILES*)
  (*********************)

  OPENFILES;
  LIST := LIST AND NOT OFFSWITCH['L'] OR ONSWITCH['L'];

  (*WRITE HEADER*)
  (**************)

  WTTHEAD( HEADER, DATESTR, TIMESTR );
  IF LIST THEN BEGIN
    NEWPAGE;
    WRITELN;
    IF ONSWITCH['C'] OR PRCODE THEN BEGIN
      WRITELN('INSTRUCTIONCOUNT');
      WRITELN('-LOCATIONCOUNT');
      WRITE('-000002    ');
      LINECNT := 3;
    END;
    WRITE ( LINENO:5, ' ':3 );
  END;

  (*COMPILE:*)
  (**********)

  PROGRAMHEADING ;
  ENTERSTANDARD ;
  WITH DISPLAY[1] DO BEGIN
    FNAME := NIL;
    OCCUR := BLCK
  END;
  TOP := 1;
  LEVEL := 1;
  CIXX := CIX;
  BLOCK(BLOCKBEGSYS OR STATBEGSYS - [CASESY],PERIOD,NIL);
  SRCLEVEL := -1;
  ENDOFLINE ;
  WRITELN;
  RTIME := RUNTIME - RTIME;
  IF LIST THEN
    WRITESTAT;
  WTTSTAT( ERRDETECTED, 2*CIXX+2, DATASIZE, -LC+STATBASE+PUBLICBASE, RTIME );
END (*$Y+*)   (* HEAP IN SEPARATE MODULE *).
   U@@