;+--------------------------------------------------------------+
;|                        D A Y T I M E                         |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Return current local day/time in internal form.
;USAGE:
;   EXTERNAL FUNCTION DAYTIME: DTIME_INT;
;OUTPUT:
;   <return value>
;               the  current  local  day/time  is   returned   in
;               internal form.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	DAYTIME
	TWOSEG
	ENTRY	DAYTIM
	EXTERN	EC%DCD
	EXTERN	EC%DCT
	RELOC	0
FCNADR: BLOCK	1		; SAVE FCN RET VALUE ADDRESS
TIMINT: BLOCK	1		; INTERNAL TIME RETURNED HERE
	RELOC	400000
DAYTIM:
	HRRZM	2,FCNADR	; SAVE ADDRESS OF FUNC RET VALUE
	MOVEI	3,(2)
	DATE	2,		; GET DEC DATE
	PUSHJ	17,EC%DCD	; CONVERT DEC DATE TO DATE_INT
	
	MSTIME	2,		; GET DEC TIME
	MOVEI	3,TIMINT	; HAVE EC_DCTIME RETURN ITS RESULT IN REG 4
	PUSHJ	17,EC%DCT	; CONVERT DEC TIME TO DTIME_INT
	MOVE	2,TIMINT
	HRRM	2,@FCNADR	; MOVE TO USER LOCN
	POPJ	17,		; RETURN
	prgend
;+--------------------------------------------------------------+
;|                        G M D T I M E                         |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Return the current Greenwich Mean day/time in internal
;   form.
;USAGE:
;   EXTERNAL FUNCTION GMDTIME: DTIME_INT;
;OUTPUT:
;   <return value>
;               the  current  Greenwich Mean day/time in internal
;               form.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
        ENTRY   GMDTIM
	EXTERN	EC%DCD
	EXTERN	EC%DCT
	reloc	0
fcnadr:	block	1		; fcn return value addr saved here
timdec:	block	1		; DEC time saved here
timint:	block	1		; internal time saved here
	reloc	400000
	opdef	datuuo	[calli	-55]
GMT=20
GMDTIM:
	hrrzm	2,fcnadr	; save addr of func ret slot
        DATE    2,              ; GET LOCAL DEC DATE
        TIMER   3,              ; GET LOCAL DEC TIME
        MOVEI    4,GMT           ; TIME TO GMT
        MOVEI   5,2
        DATUUO  5,
        HALT
	imuli	3,^D1000	; convert GMT in jiffies to GMT in
	idivi	3,^D60		; millisecs since midnight
	movem	3,timdec	; save DEC format time
        MOVEI   3,@fcnadr           ; convert DEC date to DATE_INT FORM
        PUSHJ   17,EC%DCD
        MOVE    2,timdec             ; CONVERT TIME TO 
        MOVEI   3,timint             ; DTIME_INT FORM
        PUSHJ   17,EC%DCT
        MOVE    2,timint
        HRRM    2,@fcnadr
        POPJ    17,             ; RETURN TO CALLER
        END     
;+--------------------------------------------------------------+
;|                      E X T R _ D A T E                       |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Extract the date portion of an internal day/time.
;USAGE:
;   EXTERNAL FUNCTION EXTR_DATE(DTIME: DTIME_INT): DATE_INT;
;INPUT:
;   DTIME       a day/time in internal form.
;OUTPUT:
;   <return value>
;               the date portion of 'DTIME' in internal form.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	EXTR%DATE
	TWOSEG
	RELOC	400000
	ENTRY	EXTR%D
	SEARCH	PASSYM
AC10=10
AC11=11
EXTR%D:
	HLLZ	REG,0(REG)		; RETURN DATE,,0.
	MOVEM	REG,0(REG1)
	POPJ	TOPP,
	PRGEND
;+--------------------------------------------------------------+
;|                      E X T R _ T I M E                       |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Extract the time portion of an internal day/time.
;USAGE:
;   EXTERNAL FUNCTION EXTR_TIME(DTIME: DTIME_INT): TIME_INT;
;INPUT:
;   DTIME       a day/time in internal form.
;OUTPUT:
;   <return value>
;               the time portion of 'DTIME' in internal form.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	EXTR%TIME
	TWOSEG
	RELOC	400000
	ENTRY	EXTR%T
	SEARCH	PASSYM
AC10=10
AC11=11
EXTR%T:
	HRRZ	REG,0(REG)		; RETURN 0,,TIME.
	MOVEM	REG,0(REG1)
	POPJ	TOPP,
	PRGEND
;+--------------------------------------------------------------+
;|                     D T _ C O M B I N E                      |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:   Combine  an  internal  date  with  an  internal  time
;   yielding an internal day/time.
;USAGE:
;   EXTERNAL FUNCTION DT_COMBINE(DATE: DATE_INT;
;      TIME: TIME_INT): DTIME_INT;
;INPUT:
;   DATE        a date in internal form.
;   TIME        a time in internal form.
;OUTPUT:
;   <return value>
;               the   internal   day/time   resulting   from  the
;               composition of the two input parameters.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	DT%COMBINE
	TWOSEG
	RELOC	400000
	ENTRY	DT%COM
	SEARCH	PASSYM
AC10=10
AC11=11
DT%COM:
	HLLZ	REG,0(REG)		; MOVE DATE TO RESULT WORD.
	HRR	REG,0(REG1)		; MOVE TIME TO RESULT WORD.
	MOVEM	REG,0(REG2)		; RETURN RESULT WORD.
	POPJ	TOPP,
	PRGEND
;+--------------------------------------------------------------+
;|                      D A Y S _ D I F F                       |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Compute  the  number  of  days  between  two  internal
;   day/times.
;USAGE:
;   EXTERNAL FUNCTION DAYS_DIFF(DTIME1, DTIME2: DTIME_INT): DAYS;
;INPUT:
;   DTIME1      a day/time in internal form.
;   DTIME2      a day/time in internal form.
;OUTPUT:
;   <return value>
;               whole  number  of days between the two day/times.
;               This value may be negative; the  second  day/time
;               is subtracted from the first day/time.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	DAYS%DIFF
	TWOSEG
	RELOC	400000
	ENTRY	DAYS%D
	SEARCH PASSYM
AC10=10
AC11=11
DAYS%D:
	MOVE	REG,0(REG)
	SUB	REG,0(REG1)		; SUBTRACT DAY/TIMES.
	IDIV	REG,[1000000]		; SCALE DOWN RESULT - A SHIFT WILL
					;NOT WORK!
	MOVEM	REG,4(TOPP)		; MOVE TO FUNCTION RETURN LOCATION.
	POPJ	TOPP,
	PRGEND
;+--------------------------------------------------------------+
;|                      S E C S _ D I F F                       |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Compute the number of  seconds  between  two  internal
;   day/times.
;USAGE:
;   EXTERNAL FUNCTION SECS_DIFF(DTIME1, DTIME2: DTIME_INT): SECONDS;
;INPUT:
;   DTIME1      a day/time in internal form.
;   DTIME2      a day/time in internal form.
;OUTPUT:
;   <return value>
;               rounded   number   of  seconds  between  the  two
;               internal day/times.  This value may be  negative;
;               the  second day/time is subtracted from the first
;               day/time.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	SECS%DIFF
	TWOSEG
	RELOC	400000
	ENTRY	SECS%D
	SEARCH	PASSYM
SECS%D:
	MOVE	REG,0(REG)
	SUB	REG,0(REG1)		; DAYS DIFFERENCE.
	MULI	REG,^D24 * ^D60 * ^D60	; MULT BY SECONDS PER DAY.
	DIV	REG,[1000000]		; SCALE RESULT - A SHIFT WILL NOT
					;WORK!
	JUMPL	REG1,REMNEG		; ROUND RESULT.
	
	CAIL	REG1,400000
	AOS	REG
	JRST	MOVANS
REMNEG:	CAMG	REG1,[777777400000]
	SOJ	REG,
MOVANS:
	MOVEM	REG,4(TOPP)		; MOVE TO FUNCTION RETURN LOCATION.
	POPJ	TOPP,
	PRGEND
;+--------------------------------------------------------------+
;|                       A D D _ D A Y S                        |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Add a given number of days to an internal day/time.
;USAGE:
;   EXTERNAL FUNCTION ADD_DAYS(DTIME: DTIME_INT;
;      NUM_DAYS: DAYS): DTIME_INT;
;INPUT:
;   DTIME       a day/time in internal form.
;   NUM_DAYS    a (possibly negative) number of days.
;OUTPUT:
;   <return value>
;               an  internal  day/time  formed  by   adding   the
;               specified  number  of days to the given day/time.
;               If a negative  day/time  would  result  then  the
;               internal day/time for day zero is returned.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	ADD%DAYS
	TWOSEG
	RELOC	400000
	ENTRY	ADD%DA
	SEARCH	PASSYM
ADD%DA:
	HRLZ	REG1,REG1		; MOVE DAYS TO DATE HALFWORD.
	ADD	REG1,0(REG)		; ADD DAYS TO DAY/TIME.
	
	SKIPGE	REG1			; IF RESULT IS NEGATIVE,
	SETZ	REG1,			;RETURN A ZERO DAY/TIME.
	MOVEM	REG1,0(REG2)		
	POPJ	TOPP,
	PRGEND
;+--------------------------------------------------------------+
;|                       A D D _ S E C S                        |
;+--------------------------------------------------------------+
;DTIME - day/time manipulation routines
;PURPOSE:  Add a given number of seconds to an internal day/time.
;USAGE:
;   EXTERNAL FUNCTION ADD_SECS(DTIME: DTIME_INT;
;      NUM_SECS: SECONDS): DTIME_INT;
;INPUT:
;   DTIME       a day/time in internal form.
;   NUM_SECS    a (possibly negative) number of seconds.
;OUTPUT:
;   <return value>
;               an  internal  day/time  formed  by   adding   the
;               specified   number   of   seconds  to  the  given
;               day/time.  If a negative  day/time  would  result
;               then  the  internal  day/time  for  day  zero  is
;               returned.
;INCLUDE FILES REQUIRED:
;   DTIME.TYP
;   DTIME.INC
;----------------------------------------------------------------
	TITLE	ADD%SECS
	TWOSEG
	RELOC	400000
	ENTRY	ADD%SE
	SEARCH	PASSYM
ADD%SE:
	MOVE	REG3,REG2		; SAVE RESULT ADDR
	MUL	REG1,[1000000]		; SCALE SECONDS UP SO BINARY POINT
					;CORRECT.
	DIVI	REG1,^D24 * ^D60 * ^D60	; DIVIDE BY SECS/DAY TO GET
					;FRACTION OF DAY.
	JUMPL	REG2,REMNEG		; ROUND RESULT OF DIVIDE.
	CAIL	REG2,^D12 * ^D60 * ^D60	; 
	AOS	REG1
	JRST	ADDRES
REMNEG:
	CAMG	REG2,[-^D12 * ^D60 * ^D60]  ; ROUND - NEGATIVE CASE.
	SOJ	REG1,
ADDRES:
	ADD	REG1,0(REG)		; ADD TO DAY/TIME.
	SKIPGE	REG1			; IF RESULT NEGATIVE THEN
	SETZ	REG1,			;RETURN ZERO.
	MOVEM	REG1,0(REG3)		; MOVE TO FN RETURN VALUE LOCATION.
	POPJ	TOPP,
	END
   