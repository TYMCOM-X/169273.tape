        TITLE   PROMPT
        SUBTTL  Tymshare REMOTE Printer Spooler
;***
;	Entire spool edit history moved into the file SPOOL.INF
;	hereafter, it is wise to only specify those patches which
;	are entered into this file here, with duplicate in spool.inf.
;***
;(see next page)

        VER==6			; VERSION / RELEASE 6.3
        REL==3

	TYMEDT==125		;1981+ edits, begun at 100, customer ver
				;to help avoid confusion, kept in (136)
	LOC 136
	EXP	TYMEDT		;customer version - use for "REAL" edit #
        XWD	VER,REL		;SET VER AND REL - Tymshare style
        RELOC
        MLON
;
;
;	*** Revision History ***	(See Spool.inf)
;
;  125	CPROMP:  Add commands to set NODE and PRINTER location which
;	will be used instead of the user's "real" node and location.
;	These commands require that the user has set license.
;
;  124	CPROMP:  Change Fremont to printer locaton "94" instead of 93.
;	Change numbers in the SITE table to be decimal.  Fix "magic"
;	numbers used for "lockheed" and site-table length.  Add error
;	message for falling off table, default to Bldg A, site #1.
;	/CAB 20-Nov-81
;
;  123	CPROMP:  Remove a "redundant" dummy OUTPUT which causes
;	the monitor (P034/J :: /J50) to crash or hang. /CAB 12-Nov-81
;
;  122	CPROMP:  Fix edit 107 which allowed a skip into the FORTAP
;	routine (each time a "new" buffer [block] was read) to
;	erroneously translate the next character into a Carriage 
;	control character (usually a spurious "LF"). /CAB 12-Nov-81
;
;  121	CPROMP:  Add a check to the FORTAP code to check for "nulls"
;	and ignore them "before" trying to interpret them as carriage
;	controls.  /CAB 11-Nov-81
;
;  120	CPROMP:  Fix edit 117 to initialize values and do CRs the
;	correct way for PRINTing from TAPE.  /CAB 3-Nov-81
;
;  117	CPROMP:  Fix position on line (CPOL) to work correctly for
;	edit 113 and cleanup duplicate code in CENTER vs REMOTE code.
;	/CAB 20-Oct-81
;
;  116	CPROMP:  Associated with #111 and #107, Use USRLPP when making
;	the decision to trim to top-of-form for ESKIPE (fortran option)
;	form skips for 1/2, 1/3 1/6th of page, etc.  /CAB 22-Sep-81
;
;  113	CPROMP:  Fix FF logic to also check for any data on the
;	current line to decide whether to print a real FF or not.
;	This catches "FF 'data' FF 'data'" and also for FORTRAN
;	files "FF 'data' CR LF '1' 'data'" which **NEVER** worked
;	correctly on the TYMCOM-X version of SPOOL.
;	/CAB 18-Sep-81
;
;  112	CPROMP:  Fix bug introduced by "misprint" while installing
;	edit # 107 in CPARSE:  SKIPL AC,ENDPPR =/= JUMPL AC,ENDPPR
;	/CAB 17-Sep-81
;
;  111	CPARSE-CPROMP:  Change calls to FORPGS to always use USRLPP
;	rather than MAXLIN for calculating fortran carriage controls.
;	If we are 'faking' it, we should do it right... A different
;	tape format for each lines= that the user wants.
;	/CAB 15-Sep-81
;
;  110	CPROMP:  Make SCAN, SCAN1, SCAN2 routines consistant and
;	delete duplicate code which jumped into these routines.
;	Streamline SCAN5 portion of SCANx. /CAB 9-Sep-81
;
;  107	CPROMP:  Standardize the FORTRAN option code throughout to do
;	the correct page spacing for the carriage control characters.
;	This is related directly to edit # 104 installed in CPARSE.
;	Also, some general code cleanup was done to make each FORTRAN
;	option routine consistant with all the others, and to eliminate
;	duplicate code where reasonably obvious.  /CAB 11-Sep-81
;
;  106	CPROMP:  Change special forms handling to be consistant and
;	use GDBUFF+144 for figuring out the form size.  This was already
;	done correctly in the same routine under TAPE printing.
;	The code was doing 'andi ac,137' to the page size which must
;	have created havoc with forms with sizes 31.lt.X.lt.64 because
;	of the bit loss.  /CAB 4-Sep-81
;


        INTERNAL DELBLK
        INTERNAL OPRSET,OUTTMP,LFACR,SPLGAN,INTAB,TYMSHR,USRPPN,INNTMP
        INTERNAL CPOL,PTOUT,DSTRCT,CALSPL,LOKHED,USRLOC
        INTERNAL TTYON,ALTTYP,TOTSPC,TOTCHR,TEMPAC,SITENO,GETGAN,SUPCHK
        INTERNAL FULMSK,FULLCH
        INTERNAL %CDC,%VOGUE,%2780,%DP
        ENTRY  MAKTMP,DECLIC,INCLIC
        ENTRY  OUTAC1,CHROUT,OUTLIN,YORN
        ENTRY   PROMPT,DISABL,RENABL,LOKAGN,UPCASE
        ENTRY   UPCADD,PNTLST,SEEREP,LFPASS
        ENTRY  BINDEC,WDATE,WTIME
        ENTRY  VALPPN,GETNAM,ERRNUM
        ENTRY    PNTOUT

 EXTERNAL CTLFLG,FTNMOD		;[104] For FORTRAN C/C stuff.
 EXTERNAL GDBUFF,DATAND,FNDFD,DELFD,NCOPFD,CURFD,SETTOT
 EXTERNAL CANAME
 EXTERNAL FLIST
 EXTERNAL REMDSR
 EXTERNAL RESTAP
 EXTERNAL RESFIL
 EXTERNAL RESEXT
 EXTERNAL RESPAG
 EXTERNAL FORTRN
 EXTERNAL CANOVR
 EXTERNAL HALFP
 EXTERNAL THIRDP
 EXTERNAL SIXTHP
 EXTERNAL HEAD
 EXTERNAL PAGECT
 EXTERNAL TOTPGS
 EXTERNAL NCOPYS
 EXTERNAL FCOPYS
 EXTERNAL HCOPYS
 EXTERNAL MAXLIN
 EXTERNAL LINECT
 EXTERNAL USRLPP
 EXTERNAL LINPAG
 EXTERNAL RELFLG
 EXTERNAL REMPNT
 EXTERNAL REPORT
 EXTERNAL TUSER
 EXTERNAL CKDATE
 EXTERNAL MONTH
 EXTERNAL DAY
 EXTERNAL FONADR
 EXTERNAL YEAR
 EXTERNAL PTYPE
 EXTERNAL DELFLG
 EXTERNAL RECORD
 EXTERNAL DUPREQ
 EXTERNAL PAGPAG
 EXTERNAL ESCSET
 EXTERNAL VALIN
 EXTERNAL FILIN
 EXTERNAL FILOUT
 EXTERNAL TWOBLE
 EXTERNAL PAGLOL
 EXTERNAL LINSKP
 EXTERNAL MARGIN
 EXTERNAL FILESP
 EXTERNAL PAGESP
 EXTERNAL TAPSTO
 EXTERNAL RESFLG
 EXTERNAL NODFLG
        EXTERNAL READFD,MAP
        EXTERNAL CANHOL,FINWHE,GODGAN,SAVBUF,BLKPTR,BUFLFD,FDPTR,RDNEXT
        EXTERNAL CURTYP,CURFOR,INPMAP,FINBNO,FNDTYP,COUNT1,NEXTGD,RELFD
        EXTERNAL NEXTRE,JOBFF,UPDGD,STAGET,SAVREG,RESREG,RELGD
        EXTERNAL OPNOUT,SIXNUM,RELMAP,GETGD
        EXTERNAL CURBLK,CURSTA
        EXTERNAL  PRTLIT,PRIADR,SWITCH
        EXTERNAL SUPCPY,SUPOUT,VRFY1
        EXTERNAL   SPOOL,GETDIS,GITVAL,FORPGS
        EXTERNAL   WRIPRI,FINPRI,GETPRI
        EXTERNAL  HRDCPY,ACTREC,REQTTL,FILTTL,RSTORE
        EXTERNAL  LINOUT,FILPGE,DTAOUT,DTEOUT,FILPG1
        EXTERNAL  GETLIC,TAILER
        INTERNAL INBLK,OUTBLK,ECHO
;
;       WITHIN THIS SPOOLER ROUTINE THERE ARE TWO
;       RECORDS REFERED TO AS A GD AND A FD.
;       A GD IS A GROUP DESCRIPTOR AND ONE IS CREATED
;       FOR EACH REQUEST MADE.  THEY ARE 1 BLOCK IN 
;       LENGTH AND ARE KEPT IN A FILE CALLED SPOOL.GDF
;       A FD IS A FILE DESCRIPTOR AND ONE OF THESE IS
;       CREATED FOR EACH FILE SPOOLED.  ITS LENGTH
;       IS 8 WORDS AND IS KEPT IN THE FILE SPOOL.FDF.
;
;       THE FOLLOWING IS THE GD AND FD RECORDS
;
;               GROUP DESCRIPTOR  (GD)
;                                                        WORD
;       ------------------------------------------------
;       I        I                                      I
;       I STATUS I  BATCH REQUEST NUMBER (SIXBIT)       I   0
;       -------------------------------------------------
;       I NO. FILES  I INDENT  I                        I
;       I (10 BITS)  I (8 BITS)I    TIME OF REQUEST     I   1
;       -------------------------------------------------
;       I                                               I
;       I       GAN/UUN  OF  REQUESTOR                  I   2
;       -------------------------------------------------
;       I                       I I  I    I   I  I  I   I
;       I   DATE OF REQUEST     IQI RI S  ITT I WI ZI X I   3
;       -------------------------------------------------
;       I                       I MAX. CHAR  I          I
;       I  TOTAL PAGES SPOOLED  I  LINE OUT  I    ZZ    I   4
;       -------------------------------------------------
;       I   I   I   I   I   I   I                       I
;       I A I B I C I D I E I F I G I   #LINES/PAGE     I   5
;       -------------------------------------------------
;       I                                               I
;       I     REQUESTOR NAME      (SIXBIT)              I   6
;       -------------------------------------------------
;       I                                               I
;       I     REQUESTOR NAME      (SIXBIT)              I   7
;       -------------------------------------------------
;       I                                               I
;       I     REQUESTOR NAME      (SIXBIT)              I  10
;       -------------------------------------------------
;       I                                               I
;       I     REQUESTOR NAME      (SIXBIT)              I  11
;       -------------------------------------------------
;       I                                               I
;       I     PROJECT CODE        (SIXBIT)              I  12
;       -------------------------------------------------
;       I                                               I
;       I     PROJECT CODE        (SIXBIT)              I  13
;       -------------------------------------------------
;       I                                               I
;       I     TELEPHONE NUMBER    (SIXBIT)              I  14
;       -------------------------------------------------
;       I                                               I
;       I     TELEPHONE NUMBER    (SIXBIT)              I  15
;       -------------------------------------------------
;       I                                               I
;       I     TELEPHONE NUMBER    (SIXBIT)              I  16
;       -------------------------------------------------
;       I                                               I
;       I     TELEPHONE NUMBER    (SIXBIT)              I  17
;       -------------------------------------------------
;       I                                               I
;       I      GAN/UUN REQUEST TO BE CHARGE TO          I  20
;       -------------------------------------------------
;       I MAX COPYS I  CHARGED  I    COMPLETION         I
;       I PER FILE  I  DISTRICT I      DATE             I  21
;       -------------------------------------------------
;       I                                               I
;       I   TRANSFER LOCATION     (ASCII)               I  22
;       -------------------------------------------------
;       I                                               I
;       I    REQUESTOR USERNAME   (SIXBIT)              I  27
;       -------------------------------------------------
;       I                                               I
;       I    REQUESTOR USERNAME   (SIXBIT)              I  30
;       -------------------------------------------------
;       I                                               I
;       I    CHARGED USERNAME     (SIXBIT)              I  31
;       -------------------------------------------------
;       I                                               I
;       I    CHARGED USERNAME     (SIXBIT)              I  32
;       -------------------------------------------------
;       I                                       I ORG.  I
;       I              FREE                     I LOC.  I  33
;       -------------------------------------------------
;	I						I
;	I    BLOCK NO. IN FD FILE OF 1ST FD ENTRY	I  34
;	-------------------------------------------------
;       I                                               I
;       I   FREE FOR ANYTHING NEEDED  WORDS 35-37       I  35
;       -------------------------------------------------
;       I                                               I
;       I      DELIVERY ADDRESS    (SIXBIT)             I  40
;       -------------------------------------------------
;       I                                               I
;       I   ADDITIONAL DELIVERY INSTR. (ASCII)          I 110
;       -------------------------------------------------
;	I						I
;	I   NO. OF LINES PER PAGE (SPECIAL FORMS ONLY)	I 144
;       -------------------------------------------------
;       I      SPECIAL  FORMS                           I
;       I      INSTRUCTIONS          (ASCII)            I 145
;       -------------------------------------------------
;
;       A = PAPER SIZE (3 BITS)
;          1 = SMALL PAPER
;          2 = LARGE-BIG PAPER
;          3 = TTY PAPER
;          4 = SPECIAL PAPER
;          5 = SMALL WHITE PAPER (REVERSE)
;          6 = LARGE WHITE PAPER (REVERSE)
;
;       B = FORMS TO USE  (3 BITS)
;          1 = 1 PART PAPER
;          2 = 2 PART PAPER
;          3 = 3 PART PAPER
;          4 = 4 PART PAPER
;
;       C = DECOLATION DESIRED  (3 BITS)
;          0 = NOT WANTED
;          1 = DO DECOLATE
;
;       D = DELIVERY MODE  (3 BITS)
;          0 = US MAIL
;          1 = PICKUP
;          2 = COURIER
;          3 = SPECIAL DELIVERY
;          4 = AIR MAIL  (NOT USED ANYMORE)
;          5 = AIR EXPRESS
;          6 = INTER-OFFICE MAIL
;
;       E = 2 FIELDS WITHIN 3 BITS
;         1ST BIT = CUSTORMER FLAG
;           0 = IN HOUSE TO BE CHARGED
;           1 = CUSTOMER TO BE CHARGED
;          NEXT 2 BITS = ANOTHER TO BE CHARGE
;          OTHER THAN REQUESTOR
;           0 = NO
;           1 = YES
;
;       F = KATAKANA FLAG (1 BIT)
;	    1 = AT LEAST ONE FILE IN THIS REQUEST IS KATAKANA
;    	    0 = NO FILES IN THIS REQUEST ARE KATAKANA
;
;	G = NOT USED (2 BITS)
;
;
;       Q = FULLCASE PRINTING WANTED (2 BITS)
;         0 = NO
;         1 = YES
;
;       R = HEADING DESIRED  (1 BIT)
;         0 = NO
;         1 = YES
;
;       S = TOTAL PRINTS TO MAKE OF EACH FILE (6 BITS)
;
;       TT  3 BITS USED AS THE FOLLOWING
;         LEFTMOST BIT  0 = NOT A TRANSFER TRANSFER REQ.
;                       1 = TRANSFERED TRANSFER REQ.
;         CENTER BIT    QUEST SWITCH
;         RIGHTMOST BIT 0 = NOT FORTRAN CONVERSION WANTED
;                       1 = FORTRAN CONVERSION WANTED
;
;       W = DOUBLE SWITCH  (1 BIT)
;           0 = NO DOUBLE SWITCH
;            1 = USE DOUBLE SWITCH
;
;       Z = WHERE REQUEST COMPLTED (2 BITS)
;         1 = CENTER SITE
;         2 = REMOTE SITE
;
;       X = WHERE TO PRINT REQUEST (3 BITS)
;           1 = COMPUTER CENTER
;           2 = REMOTE PRINTER
;
;       ZZ = PRINTER LOCATION OF WHERE TO PRINT (9 BITS)
;
;       STATUS INDICATOR  (6 BITS)
;         0 = PENDING (FILES NOT PRINTED YET)
;         1 = REQUEST PUT ON HOLD
;         2 = TRANSFER REQUEST TO DIFFERENT SITE
;         3 = REQUEST BEING PROCESSED
;         4 = TAPE TRANSFER
;         5 = TAPE TRANSFER COMPLETED
;         6 = REQUEST COMPLETED
;         7 = FILES DELETED FROM COMPLETED REQUEST
;        10 = REQUEST CANCELED
;
;
;
;               FILE DESCRIPTOR  (FD)
;                                                        WORD
;       ------------------------------------------------
;       I NO.   I                                       I
;       I COPYS I  BATCH REQUEST NUMBER (SIXBIT)        I  0
;       -------------------------------------------------
;       I                                               I
;       I  ORIGINAL AND DIRECTORY FILE NAME (SIXBIT)    I  1
;       -------------------------------------------------
;       I  DIRECTORY EXTENSION  I  ORIGINAL EXTENSION   I
;       I    NAME  (SIXBIT)     I    NAME   (SIXBIT)    I  2
;       -------------------------------------------------
;       I                                               I
;       I               GAN/UUN OF REQUESTOR            I  3
;       -------------------------------------------------
;       I                                               I
;       I  1ST HALF OF OWNER OF THIS FILE (6 BIT)       I  4
;       -------------------------------------------------
;       I SAME AS LEFT HALF WD. I                       I
;       I  5 OF THE GD ***      I     DATE OF REQUEST   I  5
;       -------------------------------------------------
;       I 15 BITS  I         21 BITS                    I
;       I # PAGES  I  NO. CHAR. FOR XMIT TO REMOTE      I  6
;       -------------------------------------------------
;       I                                               I
;       I  2ND HALF OF OWNER OF THIS FILE (6 BIT)       I  7
;       -------------------------------------------------
;
;  ***  EXCEPTION:  BIT 15 IS THE KATAKANA FILE BIT
;			(SET IF KATAKANA FILE)
;
;       THIS IS THE "MAIN DRIVER" OF THE PRINT SPOOLING 
;       SYSTEM.  ITS PURPOSE IS TO INTERPET THE COMMAND
;       TYPED IN AND TO BRANCH TO THE CORRECT PROGRAM
;       TO PROCESS THE COMMAND
;
;       ACCUMULATOR ASSIGNMENTS
;
        AC= 0                   ;BASIC ACCUMULATOR
        AC1= 1                  ;
        AC2= 2                  ;HOLD POINTER TO COMMAND LIST
        AC3= 3                  ;HOLDS POINTER TO INPUT COMMAND
        AC4= 4                  ;HOLDS INPUT COMMAND CHAR. LENGTH
        AC5= 5                  ;HOLD COMMAND POINTER
        AC6= 6                  ;HOLDS MIN. LENGTH ON COMMAND NEEDED
        AC10= 10                ;HOLD THE NEXT CHAR FOR THE ROUTINES
        AC11= 11                ;STORAGE OF INPUT CMND. LENGTH
        GANUUN=12               ;HOLD GDS PPN
        CRADTE=13               ;HOLDS GD CREATION DATE
        BUFADR= 10              ;HOLDS ADDRESS OF GD BUFFER
        FDCHL= 1                ;CHANNEL FOR FD TABLE
        GDCHL= 2                ;CHANNEL FOR GD TABLE
        FILCHL= 3               ;CHANNEL FOR FILES TO DELETE
        P==17           ;FOR PUSHJ
;
;
;
;
;       STATUS FLAGS, MAY HAVE TO BE CHANGED IN OTHER
;       ROUTINES ALSO
;
%REQPEN==0              ;REQUEST PENDING
%REQHLD==1              ;REQUEST PUT ON HOLD
%TRAREQ==2              ;TRANSFER REQUEST
%REQPRI==3              ;IN PROCESS OF BEING PRINTED
%TAPXFR==4              ;REQ. XFERED TO TAPE
%TAPCOM==5              ;REQ. XFER TO TAPE AND COMPLETED
%COMREQ==6              ;REQ. COMPLETED BY NORMAL MEANS
%COMDEL==7              ;REQ. COMPLETED, FILES PURGED
%CANREQ==10     ;REQ. HAS BEEN CANCELED
;
;
REQMSK==770000          ;TO MASK OFF STATUS
LARLIN==^D60            ;DEFAULT LINE/PAGE LARGE & TTY PAPER
LARMAX==^D66            ;MAX LINE/PAGE
SMLLIN==^D45            ;DEFAULT LINE?PAGE SMALL PAPER
SMLMAX==^D51            ;MAX LINE/PAGE
;
;       THE FOLLOWING MASKS MUST BE CHANGED IN PARSE AND HRDCPY
;
QSTMSK==200             ;PRINT CONTROL CHARACTERS
FTNMSK==100             ;FORTRAN TEST
FULMSK==200000          ;FULL CHARSET WANTED TEST
TWO40              ;DOUBLE SPACING
HEDMSK==100000          ;HEADING TEST
TRAMSK==400             ;TRANSFER REQEST TRANSFERED
KFMSK==4		;KATAKANA FILE SWITCH TEST
;
;

        IFNDEF DEBUG<
SPLGAN: 1,,133677      ;SPOOLERS PPN>
        IFDEF DEBUG<
SPLGAN: 3,,234620>
        BLOCK 1
PDL:    BLOCK 61
FASTST: 0
ESCAPE: -1
TOTRAN: 0               ;TOTAL REMAINING TRANSFER REQUESTS
ORGLIC: 0               ;HOLDS EVERYONES LICENSE
OPRSET: 0
REMSET: 0                       ;REMOTE USER WITH REMOTE PRINT
TYMSHR: 0
USRPPN: 0
DSTRCT: 0
NODLOC:	0			;[125] Holds location/node flag
;[125] ***** These next 4 locations must not be re-arranged *****
USTNOD:	0			;[125] NODE SET BY USER
USTLOC:	0			;[125] PRI. LOC. NO. SET BY USER
USRNOD: 0                       ;NODE USER LOGED INTO
USRLOC: 0                       ;USERS CORRESPONDING PRI. LOC. NO.
;[125] ***** These previous 4 locations must not be re-arranged *****
SITENO: 0               ;DESIGNATOR OF COMPUTER SITE

		
	Xwd ^D1,"C"	;  1 = Cupertino, California (940's) [default]
SITE:	Xwd ^D2,"V"	;  2 = Valley Forge, Pa. USA
        Xwd ^D3,"H"	;  3 = Houston, Texas USA
        		;  4 = Paris, France (CEGI)
        Xwd ^D5,"L"	;  5 = Lockheed (Sunnyvale, CA)
    SITELK==5		;  -------------------------- define a variable!
	Xwd ^D6,"C"	;  6 = Cupertino, California (10's)
        Xwd ^D7,"P"	;  7 = Paris, France (SLIGOS)
        Xwd ^D47,"D"	; 47 = Dallas, Texas USA
	Xwd ^D94,"F"	; 94 = Fremont, California USA
    SITELN==.-SITE

LOKHED: 0               ;NON-ZERO INDICATES LOCKHEED
TEMPAC: BLOCK 2
INBLK:  BLOCK 3
OUTBLK: BLOCK 3
LOGOUT: SIXBIT/SYS/
        SIXBIT/LOGOUT/
        0
        0
        0
        0
;
;       THE FOLLOWING DEFINE HOW THINGS ARE DONE WITHIN SPOOL
;       IF CALSPL = 0, THEN THIS IS A CALL VIA R SPOOL
;       IF CALSPL > 0, THEN THIS IS A NON-COEES FORTRAN CALL
;       IF CALSPL < 0, THEN THIS IS A COEES FORTRAN CALL
;
;       THE FORTRAN CALL IS FROM A FILE CALLED CSPOOL.MAC
;       THE PROGRAM HAS TWO ENTRY POINTS CSPOOL & FSPOOL
;       CSPOOL SETS COEES CALL AND FSPOOL SETS NON-COEES CALL
;
CALSPL: 0
;
;
SUPCHK: 0               ;MUST ALWAYS BE RESET TO 0 WHEN DONE
                        ;FLAG TO WRITE TO SUPCHECK FILE
SUPCHL==14
OUTCHL==17
INCHL==16
TTYON:  777777
TRMTYP:	0			;used to store result of auxcal 56
ECHO:   0
;
SITUNK:	asciz	\
*** SPOOL ERROR ***

The default printer site for your request is UNKNOWN.
CENTER requests will be defaulted to the printer site
at Building "A" in Cupertino, California USA.

Please contact your Tymshare representative.

\
;
INTAB:  BLOCK ^D70
;
	SUBTTL	START HERE

START:  JRST    START1          ;ENTRY POINT FOR R SPOOL
        SETOM   CALSPL  ;ENTRY POINT FOR FORTRAN CALL OF SPOOL
        MOVE    AC,[5,,SAVBUF]  ;SAVE FORTRAN BUFFER
        BLT     AC,SAVBUF+7     ;SAVE IT
START1: RESET
        MOVE    P,[IOWD 60,PDL] ;SET UP PUSH DOWN LIST
;
;       GET EVERYONES LICENSE
;
        HRROI   AC1,-20
        GETTAB  AC1,
        JFCL
        MOVEM   AC1,ORGLIC
;
;       GET SITTE DESIGNATOR
;
        HRRZI   AC,11           ;TO GET DESIGNATOR
        GETTAB  AC,             ;GET IT
        JFCL
        LSH     AC,-^D29        ;SAME
        MOVEI   AC1,SITELN      ;[124] NO. OF COMPUTER SITES
        HRRZ    AC2,SITE-1(AC1) ;GET POSSIBLE DESIGNATOR
        CAME    AC,AC2          ;SEE IF MATCCH
        SOJG    AC1,.-2         ;NOT YET
	SKIPN	AC1		;[124] Make sure we didn't fall off the end
	 Outstr	SITUNK		;[124] Give an error for an unknown system.
				;[124] This can happen if the system name is
				;[124] bad.  ie. Not "xNNN-Pnnn/c".
        HLRZ    AC1,SITE-1(AC1) ;GET NODE NO.P
        MOVEM   AC1,SITENO      ;SAVE INDICATOR
        CAIN    AC1,SITELK      ;[124] CHECK FOR LOOKHEED
        SETOM   LOKHED          ;YES, THEN SET FLAG
;
;       COME HERE TO SET UP THE INTERRUPT SYSTEM
;
        MOVEI   AC,ALTTYP
        MOVEM   AC,INTAB+1
        MOVEI   AC1,INTAB       ;GET ADDRESS OF TABLE
        HRLI    AC1,6
        INTADR  AC1,
        JFCL
        HRLOI   AC1,1           ;TERMINAL INTERRUPT CHL. 1
        TINASS  AC1,            ;TERMINAL INTERRUPT
        JFCL
        MOVSI   AC1,600000      ;TURN SYSTEM ON 
        INTENB  AC1,            ;TURN IT ON
        JFCL
        SKIPN   ESCAPE          ;SEE IF FALL THROUGH FLAG SET
        JRST    PROMPT          ;YES, DONT GO ANY FURTHER, ITS DATA
        JRST    BEGIN           ;GO BEGIN
;
;       COME HERE WHEN INTERRUPTS ARE ALLOWED
;
ALTTYP: MOVEI   AC1,PROMPT      ;WHERE TO GO
        SKIPE   CALSPL          ;SKIP IF NOT FORTRAN CALL
        MOVEI   AC1,LEAVE       ;EXIT ON CONTROL-C
        MOVEM   AC1,INTAB       ;STORE WHERE TO GO
        SKIPE   ,REMGO          ;SKIP IF REMOTE PRINTER OFF
        PUSHJ   P,REMESC        ;FOR ESCAPING ON REMOTE
        CLRBFI
        CLRBFO
        DISMIS                  ;GO DO IT
;
;       COME HERE TO DISABLE AND ENABLE INTERRUPTS
;
RENABL: HRLOI   AC1,377777
        INTACT  AC1,
        JFCL
        MOVSI   AC1,600000
        SKIPA                   ;SKIP OVER DISABLE CODE
DISABL: HRLOI   AC1,377777
        INTENB  AC1,
        JFCL
        POPJ    P,
;
;  DECLIC TO SETTING PROGRAM LICENSE TO USRS LICENS
;
DECLIC: HRRZ    AC1,ORGLIC      ;GET USER LICENSE
        HRLS    AC1
        SETLIC  AC1,
        POPJ    P,
;
;  INCLIC WILL RESTORE PROGRAMS LICENSE
;
INCLIC: MOVE    AC1,ORGLIC      ;GET EVERYONES LICENSE
        SETLIC  AC1,
        POPJ    P,
;
GETNOD:	SETZ    AC1,            ;[125] FOR NEXT INST
        HRROI   AC,-24          ;[125] TO GET NOD NO.
        GETTAB  AC,             ;[125] GET NODE NO.
        JFCL			;[125] 
        LSH     AC,-10          ;[125] GET RID OF PORT
        LSHC    AC,-6           ;[125] GET TWO DIGITS OF NODE
        LSH     AC,-2           ;[125] GET RIDE OF PARITY
        LSHC    AC,-6           ;[125] GET OTHER TWO DIGITS OF NODE
        LSH     AC1,-30         ;[125] SHIFT NODE TO RIGHT
        POPJ    P,		;[125] RETURN

GETLOC:	MOVE    AC1,USRNOD      ;[125] GET NODE LOGED INTO
        MOVE	AC3,DSTRCT	;[125] COPY DISTRICT
        CAIGE   AC3,^D10        ;[125] SKIP IF GREATER THAN 10
        ADDI    AC1,4000        ;[125] TO MAP TO DIFFERENT LOC.
        PUSHJ   P,GETPRI        ;[125] GO GET PRINTER LOCATION
        POPJ	P,		;[125] RETURN

BEGIN:	PUSHJ	P,GETNOD	;[125] Get Node Number in AC1
        MOVEM   AC1,USRNOD      ;SAVE USERS NODE
        SKIPE   CALSPL
        JRST    NO2780
        LSH     AC,-2           ;GET RID OF PARITY
        LSH     AC,40           ;RID OF REST OF ID
        LSH     AC,-40          ;BRING BACK ID
        CAIE    AC,13           ;SKIP IF 2780
        JRST    NO2780          ;JUMP IF NOT 2780
        HRROI   AC,21           ;TO SPEED UP OUTPUT
        MOVEI   AC1,7           ;SAME
        AUXCAL  AC,AC1          ;DO IT
        MOVEM   AC1,PARA
NO2780:
        PUSHJ   P,GETDIS        ;GO GET USERS DISTRICT
        MOVEM   AC3,DSTRCT      ;SAVE THE DISTRICT NUMBER
        MOVEM   AC,TYMSHR       ;SAVE TYMSHARE INDICATOR
        MOVEM   AC1,USRPPN      ;SAVE THIS USER PPN
	PUSHJ	P,GETLOC	;[125] GO GET PRINTER LOCATION
        MOVEM   AC1,USRLOC      ;SAVE LOCATION
        SKIPE   CALSPL
        JRST    SPLCAL
        HLRZ    AC2,USRPPN      ;GET GAN OF USER
        CAME    AC2,GODGAN      ;CHECK FOR SYS SUPPORT
        JRST    CHEKOP          ;NO, GO CHECK FOR OPER
        SETOM   TOTRAN          ;NO TRANSFER STUFF FOR US
        JRST    CKOP1           ;GO CHECK OUR LICENSE
CHEKOP: SKIPE   ,DSTRCT         ;OPER MUST BE IN DST. 0
        JRST    SMESSG          ;NO, THEN GO ON
CKOP1:  MOVE    AC1,ORGLIC
        ANDI    AC1,100000      ;SEE IF OP. LIC. SET
        MOVEM   AC1,OPRSET      ;NON ZERO MEANS OPER.
SMESSG: OUTSTR  EMESSG
        SKIPN   OPRSET          ;SKIP IF OPER TYPE
        JRST    PREPMT          ;NO, SKIP ALL THIS UPDATE
        CAMN    AC2,GODGAN      ;ARE WE SYS SUPPORT
        JRST    PREPMT          ;YES THEN SKIP UPDATE
        JRST    SMESS6          ;WE SYS OPER, DO UPDATE
SPLCAL:
        HLRZ    AC,SAVBUF+7     ;GET USER AND PROGRAM LICENSE
        HRRM    AC,ORGLIC       ;RESET LICENSE
        PUSHJ   P,DECLIC        ;REDUCE TO USERS LICENSE
        MOVE    AC,SAVBUF+6     ;GET FORTRAN CALL INDICATOR
        MOVEM   AC,CALSPL       ;SET INDICATOR FOR FORTRAN CALL
        DMOVE   AC,SAVBUF+1     ;GET INPUT FILE NAME
        DMOVEM  AC,DELBLK       ;STORE FOR LOOKUP
        INIT    INCHL,0
        SIXBIT/DSK/
        XWD     INBLK
        JRST    ERROR1
        MOVE    AC,SAVBUF       ;GET PPN SPECIFIED
        MOVEM   AC,DELBLK+3     ;STORE FOR LOOKUP
        LOOKUP  INCHL,DELBLK    ;GO FIND FILE
SMESS1: JRST    [OUTSTR [ASCIZ/
***NO INPUT FILE***/]
                JRST LEAVE]
        DMOVE   AC,SAVBUF+4     ;GET OUTPUT NAME
        CAMN    AC,[SIXBIT/TTY:/] ;GOING TO TTY?
        JRST    SMESS3          ;YES, GO OVER AND ON
        SETZM   ,TTYON          ;TURN TTY ON FLAG OFF
        INIT    OUTCHL,0        ;GET OUTPUT CHANNEL
        SIXBIT/DSK/
        XWD  OUTBLK,0
        JRST    ERROR1
        OUTBUF  OUTCHL,1
SMES21: DMOVE   AC,SAVBUF+4     ;GET FILE NAME
        DMOVEM  AC,DELBLK
        SETZ    AC1,
        MOVE    AC,SAVBUF+3     ;GET PPN SPECIFIED
        MOVEM   AC,DELBLK+3
        LOOKUP  OUTCHL,DELBLK   ;SEE IF FILE EXISTS
        JRST  [HRRZ  AC,DELBLK+1  ;GET REASON FO RFAILURE
               JUMPE AC,SMESS2    ;FILE JUST NOT THERE
                OUTSTR [ASCIZ/
SPOOL-CANT USE OUTPUT FILE/]
                JRST  LEAVE]
        HLRE    AC1,DELBLK+3    ;GET WORD LENGTH
        JUMPGE  AC1,SMESS2
        MOVNS   ,AC1            ;MAKE POS.
        IDIVI   AC1,200 ;GET BLK.
        SKIPE   ,AC2            ;SKIP IF NO EXTRA WDS
        ADDI    AC1,1   
SMESS2: ADDI    AC1,1           ;ADJUST POINTER
        MOVE    AC,SAVBUF+3     ;GET PPN OF OUTPUT FILE
        MOVEM   AC,DELBLK+3
        MOVEI   AC,000040       ;MAKES PROTECTION ALL ALL ALL
        HRLZM   AC,DELBLK+2     ;WILL SET PROTECTION
        HLLZS   ,DELBLK+1
        ENTER   OUTCHL,DELBLK
        JRST    [HRRZ AC,DELBLK+1
                 CAIE AC,3
                JRST  LVECAL
                MOVEI AC,10
                SLEEP AC,
                JRST  SMES21
        LVECAL: OUTSTR  [ASCIZ/
                SPOOL-CANT CREATE OUTPUT FILE/]
                JRST  LEAVE]
        USETO   OUTCHL,@AC1     ;ADJUST OUTPUT POINTER
SMESS3: MOVEI   AC,EMESSG
        PUSHJ   P,OUTLIN
        PUSHJ   P,INCLIC        ;INCREASE LICENSE
        JRST    PREPMT
;
;
;       PURPOSE IS TO COMPRESS FILES FROM THE SPOOL 
;       DIRECTORY THAT ARE AT LEAST 2 DAYS PAST COMPLETION
;
SMESS6: OUTSTR  BEGUPD          ;BEGINNING UPDATE
        PUSHJ   P,GETRAN        ;GET NO. TRANSFER TO DO
        PUSHJ   P,INPMAP
        MOVE AC,MAP+2
        DATE    AC1,
        CAMN    AC,AC1
        JRST    COMEND
        PUSHJ   P,DAIUPD##      ; DAILY UPDATE
        MOVE    AC,MAP+1        ; CHECK FOR MONTHLY
        IDIVI   AC,^D31
        DATE    AC3,
        IDIVI   AC3,^D31
        SUB     AC3,AC
        JUMPE   AC3,COMEND      ; NO MONTHLY
        OUTSTR  MONTHY
        PUSHJ   P,MONUPD##      ; MONTLY UPDATE
        JRST    COMEND          
IFNDEF DEBUG<
EMESSG: ASCIZ/
SPOOL 6.3
/>
IFDEF DEBUG<
EMESSG: ASCIZ/
SPOOL 6.3 DEBUG Version
/>
BEGUPD: ASCIZ/
*** UPDATING SPOOL DIRECTORY/
MONTHY: ASCIZ/
MONTHLY UPDATE, THIS MAY TAKE SOME TIME/
ENDUPD: ASCIZ/
UPDATE COMPLETE/
;
;
COMEND: OUTSTR  ENDUPD
;       COME HERE TO ASK FOR THE NEXT COMMAND.
;       DETERMINE WHICH COMMAND WAS USED, DETERMINE
;       IF THE USER HAS ACCESS TO THAT COMMAND AND
;       IF SO, BRANCH TO THE CODE TO PERFORM THE COMMAND
;
;       STATUS CHECKING FLAGS FOR FOLLOWING CODE
;
.SPOOL==        0	;SPOOL COMMAND
.STATUS==.SPOOL+1       ;STAUS COMMAND
.REPORT==.STATUS+1      ;REPORT COMMAND
.LIST==  .REPORT+1      ;LIST COMMAND
.CANCEL==.LIST+1        ;CANCEL COMMAND
.WHERE== .CANCEL+1      ;WHERE COMMAND
.RUN==   .WHERE+1       ;RUN COMMAND FOR COEES TYPE CALL
.HELP==  .RUN+1         ;HELP COMMAND
.SET==   .HELP+1           ;SET COMMAND
.QUIT==  .SET+1         ;QUIT COMMAND
.PRINT== .QUIT+1        ;PRINT COMMAND
.HOLD==  .PRINT+1       ;HOLD COMMAND
.RESTART=.HOLD+1        ;RESTART COMMAND
.HARDCOPY==.RESTART+1   ;HARDCOPY COMMAND
.STORE== .HARDCOPY+1    ;STORE COMMAND
.DELETE==.STORE+1       ;DELETE COMMAND
.TRANSFER==.DELETE+1    ;TRANSFER COMMAND
.MOVE==  .TRANSFER+1	;MOVE COMMAND
.LOCATION==.MOVE+1	;[125] PRINTER LOCATION COMMAND
.NODE==  .LOCATION+1	;[125] NODE COMMAND
;
PREPMT: SETZM   ,ESCAPE         ;ZERO FALL THROUG FLAG
PROMPT: SKIPE   ,ESCAPE         ;SKIP IF WENT THROUGH 1ST TIME
        JRST    LEAVE           ;ELSE EXIT PROGRAM
CLRBUF:
        SETZM   ,GDBUFF         ;PREPARE TO ZERO STORAGE
        MOVE    AC,[GDBUFF,,GDBUFF+1] ;WHERE TO ZERO
        BLT     AC,DATAND      ;ZERO ENTIRE BUFFER AREA
        MOVE    P,[IOWD 50,PDL]
        PUSHJ   P,RELGD
        PUSHJ   P,RELFD
        RELEAS  1,              ;RELEASE CHANNEL
        RELEAS  2,              ;SAME
        RELEAS  3,              ;SAME
        RELEAS  4,              ;SAME
        RELEAS  5,              ;SAME
        RELEAS  6,              ;SAME
        RELEAS  7,              ;SAME
        RELEAS  10,             ;SAME
        RELEAS  11,
        PUSHJ   P,RENABL        ;ON INTERRUPTS
        MOVE    AC1,REMSET      ;GET REMOTE STATUS
        MOVEM   AC1,REMPNT      ;FORCES REMOTE USER TO REM. PRINT ONLY
        SKIPG   TOTRAN          ;SKIP IF SOMETHING TO TRANSFER
        JRST    DOPROM          ;GO DO PROMPTER
        OUTSTR  [ASCIZ/

/]
        MOVE    AC,TOTRAN       ;GET NO. TO XFER
        PUSHJ   P,BINDEC        ;PUT IT OUT
        OUTSTR  [ASCIZ/ REQUESTS TO TRANSFER/]
DOPROM: MOVEI   AC,ASK          ;PUT OUT PROMPTOR
        PUSHJ   P,OUTLIN
        SKIPE   CALSPL
        SETOM   ,ECHO           ;SHOW TO ECHO TO FILE
        JRST    GETCMD          ;GO GET COMMAND AND VERIFY
;
;       SEE IF THIS IS A COMMAND JUST ANYONE CAN USE
;
CMDRTN: CAIE    AC5,.QUIT       ;JUMP IF QUIT COMMAND
        JRST    CMDCHK          ;GO CHECK OTHER COMMANDS
LEAVE:  RELEASE 17,
        RELEAS  16,
        SKIPL   CALSPL          ;JUST DO EXIT
        JRST    XZIT
        MOVSI   AC,'SYS'        ;TO DO LOGOUT
        MOVE    AC1,[SIXBIT/LOGOUT/]
        DMOVEM  AC,LOGOUT       ;SAME
        SETZB   AC,AC1          ;TO ZERO REST OF IT
        DMOVEM  AC,LOGOUT+2
        DMOVEM  AC,LOGOUT+4
        HRRZI   AC,LOGOUT       ;ON COEES DO A LOGOUT
        RUN     AC,             ;DO THE LOGOUT
XZIT:   EXIT    1,              ;JUST IN CASE
        JRST    .-1             ;INCASE THEY DO A CONT
CMDCHK:
        MOVSI   AC1,1           ;SETUP FOR POSSIBLE REPORT
        MOVE    AC,AC10         ;RESTORE ANY ARGUMENTS
        SETZ    AC3,            ;MUST ALWAYS BE DONE FOR POSSIBLE HOLD
        CAIN    AC5,.REPORT     ;SEE IF REPORT COMMAND BEING DONE
        MOVEM   AC1,REPORT      ;SHOWS REPORT BEING DONE
        CAIG    AC5,.QUIT       ;SEE IF OPERATOR COMMAND ONLY
        JRST    @JMPTAB(AC5)    ;GO DO COMMAND, ANYONE IS ALLOWED TO DO
;
;       COME HERE IF OPER STATUS REQUIRED TO ISSUE COMMAND
;
        SKIPE   CALSPL
        JRST    WHATCM
        CAIN    AC5,.DELETE     ;SKIP IF NOT DELETE FILE
        SETOM   ,DELFLG         ;SET DELETE FILE DESIRE
        SKIPE   ,OPRSET         ;SKIP IF NOT OPER, DISTRICT 0
        JRST    @JMPTAB(AC5)    ;GO PROCESS COMMAND
CKREMO: CAIN    AC5,.STORE      ;SAME FOR TAPE STORE
        JRST    WHATCM          ;ILLEGAL FOR OTHERS
        SKIPN   REMSET          ;REMOTE OPERATOR
        SKIPA           ;VER 4.5 CLC DO NOT GIVE TYMSHARE ACCESS
        JRST    @JMPTAB(AC5)    ;ONLY THEY CAN ISSUE OTHER COMMANDS
WHATCM: MOVEI   AC,NOTCMD       ;NOT LEGAL COMMAND
        PUSHJ   P,OUTLIN        ;PUT IT OUT
PRMPRN: SKIPN   CALSPL
        CLRBFI
        JRST    PROMPT          ;GO PUT OUT PROMPTOR
NOTCMD: ASCIZ/
ILLEGAL COMMAND
/
ASK:    ASCIZ/

:/
;
;       COME HERE TO VERIFY COMMAND
;
GETCMD: MOVE    AC1,[POINT 7,INCMND] ;POINT TO STORAGE AREA
        SETZ    AC4,            ;ZERO INPUT CHAR COUNTER
        MOVEI   AC5,12          ;MAX. CHAR. ALLOWED
        PUSHJ   P,UPCASE        ;GET A CHAR.
        CAIN    AC,40           ;CHECK FOR PRE-BLANKS
        JRST    .-2             ;BYPASS PRE-BLANKS
        CAIN    AC,77           ;CHECK FOR QUERRY
        JRST    HELP            ;USER ASKS FOR HELP
        CAIN    AC,15           ;EARLY TERMINATOR?
        PUSHJ   P,UPCASE        ;YES, THEN GET NEXT ONE
        CAIN    AC,12           ;CHECK FOR A LINE FEED
        JRST    PROMPT          ;NO COMMAND HERE
CMDSTR: IDPB    AC,AC1          ;STORE INPUT COMMAND CHAR.
        ADDI    AC4,1           ;ADD 1 TO CHAT COUNT
        PUSHJ   P,UPCASE        ;GET A CHAR.
        CAIN    AC,40           ;CHECK FOR BLANK
        JRST    PROCMD          ;SHOWS END OF COMMAND
        CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET THE LF
        CAIN    AC,12           ;CHECK FOR LINEFFED
        JRST    PROCMD          ;SHOWS END OF COMMAND
        SOJL    AC5,WHATCM      ;BR. IF EXCEEDED INPUT LENGTH
        JRST    CMDSTR          ;GO GET MORE COMMAND INPUT
;
;       SEARCH COMMAND TABLE FOR A MATCH
;
PROCMD: MOVEM   AC4,AC11        ;SAVE THE LENGTH
        MOVEM   AC,AC10         ;SAVE ARGUEMENTS IF ANY
        SETZ    AC5,            ;ZERO COMMAND COUNTER
        MOVE    AC2,[POINT 7,CMDLST,6] ;POINT TO COMMAND TABLE
        MOVE    AC3,[POINT 7,INCMND,6]  ;POINT TO INPUT COMMAND
CHRCMD: LDB     AC,AC3          ;GET FIRST CHAR OF INPUT COMMAND
        LDB     AC1,AC2         ;GET FIRST CHAR OF COMMAND LIST COMMAND
        CAMN    AC,AC1          ;SEE IF CHAR. MATCH
        JRST    VCMND           ;BR. IF IT APPEARS THEY MAY MATCH
NEXTCM: ADDI    AC5,1           ;INCREASE COMMAND COUNTER
        CAMLE   AC5,NUMCMD      ;SEE IF ALL COMMANDS CHECKED
        JRST    WHATCM          ;COMMAND NOT IN LIST
        ADDI    AC2,2           ;POINT POINTER TO NEXT COMMAND
        JRST    CHRCMD          ;GO LOOK AT NEXT COMMAND
;
;       POSSIBLE MATCH ON COMMANDS
;
VCMND:  MOVE    AC6,CMDMIN(AC5) ;GET MIN LEGTH NEEDED FOR COMMAND
        SOJN    AC4,CMDMOR      ;GO COMPARE REST OF COMMAND
        SOJE    AC6,CMDRTN      ;BR. IF NOT MORE TO CHECK, GOT CMND.
;
;       COMMAND DOESNT MATCH, GO LOOK AT NEXT COMMAND
;
RESPTR: MOVE    AC4,AC5         ;GET COMMAND POINTER
        IMULI   AC4,2           ;MULTIPLY BY 2
        MOVE    AC2,[POINT 7,CMDLST,6] ;INITIAL POINTER
        ADD     AC2,AC4         ;POINT TO CURRECT COMMAND
        MOVE    AC3,[POINT 7,INCMND,6] ;RESTORE INPUT POINTER
        MOVE    AC4,AC11        ;RESTORE INPUT CHAR. LENGTH
        JRST    NEXTCMD         ;GO LOOK AT NEXT COMMAND
;
;       DO MORE CHECKING ON POSSIBLE COMMAND
;
CMDMOR: SOJG    AC6,MORCHK      ;IF MORE CMND TO CHECK, GO DO SO
;
;       COME HERE IF PASSED MIN. LENGTH TEST
;       SEE IF REST OF INPUT COMMAND MATCH GOOD COMMAND
;
VALXTA: ILDB    AC,AC3          ;GET INPUT COMMAND CHARACTER
        ILDB    AC1,AC2         ;GET COMMAND CHARACTER
        CAIE    AC1,40          ;SEE IF OUT OF GOOD COMMAND
        CAME    AC,AC1          ;SEE IF COMMAND CHAR. MATCH
        JRST    RESPTR          ;COMMAND DOESNT MATCH GOOD COMMAND
        SOJE    AC4,CMDRTN      ;OUT OF INPUT, HAVE GOOD COMMAND
        JRST    VALXTA          ;GO CHECK REST OF COMMAND
;
;       CONTINOUS VALIDATION
;
MORCHK: ILDB    AC,AC3          ;GET INPUT COMMAND
        ILDB    AC1,AC2         ;GET GOOD COMMAND
        CAME    AC,AC1          ;SEE IF MATCH
        JRST    RESPTR          ;NO MATCH, GET NEXT COMMAND
        JRST    VCMND+1         ;GO VERIFY REST OF COMMAND
;
;       HERE TO GET A CHAR. AND CONVERT TO UPPER CASE
;
UPCASE: SKIPE   CALSPL          ;SKIP IF INTERACTIVE
        JRST    UPCAS1          ;ELSE GET FROM FILE
        INCHWL  AC              ;GET A CHAR
        JRST    UPCAS3          ;GO ON
UPCAS1: SOSGE   INBLK+2         ;BUFFER EMPTY?
        JRST    UPCAS2          ;GO REFILL IT
        ILDB    AC,INBLK+1      ;GET A CHAR
        JUMPE   AC,UPCAS1       ;SKIP NULLS
        SKIPN   ,ECHO           ;SKIP IF TO PUT BACK OUT
        JRST    UPCAS3          ;NO, GO PROCESS IT
        PUSHJ   P,CHROUT        ;PUT IT OUT
        JRST    UPCAS3          ;NOW GO PROCESS IT
UPCAS2: IN      INCHL,          ;BRING IN NEXT BLK
        JRST    UPCAS1          ;GO PROCESS IT
        JRST    LEAVE           ;NO MORE, LEAVE
UPCAS3: CAIL    AC,140          ;SKIP IF UPPER CASE
        SUBI    AC,40           ;CHANGE TO UPPER CASE
        POPJ    P,              ;RETURN
;
;       PURPOSE IS TO CONVERT BINARY TO DECIMAL
;       AND PUT IT OUT
;
BINDEC: SETZM   ,BINFLG         ;ZERO INDICATOR
        IDIVI   AC,^D10000      ;DIVIDE BY TEN THOUSAND
        PUSHJ   P,BINCVT        ;CONVERT AND PUT OUT
        IDIVI   AC,^D1000       ;DIVIDE BY 1000
        PUSHJ   P,BINCVT        ;CONVERT AND PUT OUT
BIN100: IDIVI   AC,^D100        ;DIVIDE BY 100
        PUSHJ   P,BINCVT        ;CONVERT AND PUT OUT
        IDIVI   AC,^D10         ;DIVIDE BY 10
        PUSHJ   P,BINCVT        ;CONVERT AND PUT OUT
        PUSHJ   P,BINCON        ;PUT OUT AS IT
        POPJ    P,              ;RETURN
BINCVT: SKIPE   ,BINFLG         ;SKIP IF CHAR HAS BEEN DONE
        JRST    BINCON          ;BR. IF NON0ZERO HAS BEEN DONE
        JUMPE   AC,BINSET       ;JUMP IF ZERO
        SETOM   ,BINFLG         ;SHOWS ALL CAN BE DONE
        JRST    BINCON          ;GO DO IT
BINSET: MOVEI   AC,40           ;FILL WITH LEADING BLANKS
        SKIPA                   ;SKIP OVER NEXT INST
BINCON: ADDI    AC,60           ;CONVERT TO ASCII
        PUSHJ   P,CHROUT
        MOVE    AC,AC1          ;GET REMAINDER
        POPJ    P,              ;RETURN
BINFLG: 0
;
;       PUT OUT DATE AND TIME
;
WDATE:  IDIVI   AC1,^D31        ;TO GET MONTHS
        ADDI    AC2,1           ;TO CORRECT DAY
        MOVE    AC,AC2          ;SAY DAY FOR NOW
        IDIVI   AC1,^D12        ;GO GET MONTHS
        ADDI    AC2,1           ;CORRECT MONTH
        PUSHJ   P,NUMOUT        ;PUT IT OUT
        MOVEI   AC2,"/"         ;GET SEPERATOR
        PUSHJ   P,OUTAC2        ;SAME
        MOVE    AC2,AC          ;GET DAY
        PUSHJ   P,NUMOUT        ;GO PUT IT OUT
        MOVEI   AC2,"/" ;GET FINAL SEPERATOR
        PUSHJ   P,OUTAC2        ;SAME
        MOVEM   AC1,AC2         ;SAVE YEAR
        ADDI    AC2,100         ;CORRECT TO ACTUAL YEAR
DTETIM: PUSHJ   P,NUMOUT        ;GO PUT IT OUT
        POPJ    P,              ;RETURN
NUMOUT: IDIVI   AC2,^D10        ;GET 10S
        ADDI    AC2,60          ;CONVERT TO ASCII
        ADDI    AC3,60          ;CONVERT 1S TO ASCII
        PUSHJ   P,OUTAC2        ;SAME
        PUSHJ   P,OUTAC3        ;SAME
        POPJ    P,              ;RETURN TO CALLER
;
;       DO THE TIME
;
WTIME:  IDIVI   AC2,^D60        ;GET MINUTES AND HOURS
        MOVE    AC,AC3          ;SAVE MINUTES
        PUSHJ   P,NUMOUT        ;GO PUT OUT HOURS
        MOVEI   AC1,":"         ;GET SEPERATOR
        PUSHJ   P,OUTAC1        ;SAME
        MOVE    AC2,AC          ;GET MINUTES
        JRST    DTETIM          ;GO PUT THEM OUT
;
;       PUT OUT CHAR AND STRINGS
;
OUTAC1: PUSH    P,AC            ;SAVE AC
        MOVE    AC,AC1          ;GET WHAT WE HAD
OUTAC:  PUSHJ   P,CHROUT        ;PUT IT OUT
        POP     P,AC            ;RETURN OLD AC
        POPJ    P,              ;RETURN TO CALLER
OUTAC2: PUSH    P,AC            ;SAVE OLD AC
        MOVE    AC,AC2          ;GET NEW TO PUT OUT
        JRST    OUTAC           ;GO PUT OUT AC
OUTAC3: PUSH    P,AC            ;SAVE AC
        MOVE    AC,AC3          ;GET WHAT TO PUT OUT
        JRST    OUTAC           ;GO PUT IT OUT
CHROUT: SKIPN   TTYON           ;SKIP IF TO TTY
        JRST    CHRFIL          ;GO PUT TO FILE
        OUTCHR  AC              ;PUT IT OUT
        POPJ    P,              ;RETURN
CHRFIL: SKIPE   SUPCHK          ;SKIP IF NOT OTHER STORE
        JRST    SLVCEN          ;GO STOR FOR SLAVE FILE
        SKIPA
        OUTPUT  OUTCHL,
        SOSGE   OUTBLK+2
        JRST    .-2
        IDPB    AC,OUTBLK+1
        POPJ    P,
        OUTPUT  SUPCHL,
SLVCEN: SOSGE   SUPOUT+2        ;SEE IF FULL
        JRST    .-2             ;GO EMPTY IT
        IDPB    AC,SUPOUT+1     ;STORE CHAR.
        POPJ    P,
;
OUTLIN: SKIPN   TTYON           ;SKIP IF TO TTY
        JRST    LINFIL          ;GO PUT TO FILE
        OUTSTR  @AC             ;PUT IT OUT
        POPJ    P,
LINFIL: PUSH    P,AC1           ;SAVE AC1
        MOVE    AC1,[POINT 7,AC]
        HRR     AC1,AC          ;WHERE TO WORK FROM
LINFL1: ILDB    AC,AC1          ;GET A CHAR
        JUMPN   AC,LINFL2       ;JUMP IF HAVE SOMETHING
        POP     P,AC1           ;RETURN AC1
        POPJ    P,              ;RETURN
LINFL2: PUSHJ   P,CHRFIL        ;GO STORE CHAR.
        JRST    LINFL1
;
;       PUT OUT USERNAME
;
GETNAM: DMOVEM  AC4,TEMPAC      ;SAVE REGISTERS
        MOVEI   AC4,14          ;NO. CHAR. TO DO
        MOVE    AC5,[POINT 6,AC1]
        ILDB    AC,AC5          ;GET A CHAR
        ADDI    AC,40           ;CONVERT TO ASCII
        PUSHJ   P,CHROUT
        SOJG    AC4,.-3         ;DO ALL NAME
        DMOVE   AC4,TEMPAC      ;RESTORE REGISTERS
        POPJ    P,              ;RETURN
;
;
;       COMMAND LIST
;
CMDLST: ASCIZ/SPOOL  /
        ASCIZ/STATUS /
        ASCIZ/REPORT /
        ASCIZ/LIST   /
        ASCIZ/CANCEL /
        ASCIZ/WHERE  /
        ASCIZ/RUN    /
        ASCIZ/HELP   /
        ASCIZ/SET    /
        ASCIZ/QUIT   /
        ASCIZ/PRINT  /
        ASCIZ/HOLD   /
        ASCIZ/RESTART /
        ASCIZ/HARDCOPY/
        ASCIZ/STORE   /
        ASCIZ/DELETE  /
        ASCIZ/TRANSFER/
        ASCIZ/MOVE    /
        ASCIZ/LOCATION/
        ASCIZ/NODE    /
CMDMIN: OCT 2,2,3,1,1,1,2,2,2,1,2,2,3,2,3,1,1,4,3,3
NUMCMD: .-CMDMIN-1              ;THIS MUST FOLLOW CMDMIN
INCMND: BLOCK 2
;
;       JUMP TABLE
;
JMPTAB: XWD     SPOOL           ;TO BE SPOOL COMMAND
        XWD     STAT            ;STATUS JUMP
        XWD     STAT            ;TO BE REPORT COMMAND
        XWD     LIST
        XWD     CANCEL          ;TO BE CANCEL COMMAND
        XWD     WHERE           ;FOR WHERE COMMAND
        XWD     RUN             ;RUN COMMAND FOR FORTRAN SPOOL ONLY
        XWD     HELP            ;TO BE HELP COMMAND
        XWD     SET             ;TO SET AS REMOTE OPER
        EXIT
        XWD     PRINT           ;TO BE PRINT COMMAND
        XWD     HLDCMD          ;TO BE HOLD COMMAND
        XWD     RESTRT          ;TO BE RESTART COMMAND
        XWD     HARDCP          ;TO MAKE HARDCOPIES
        XWD     STORE           ;TO STORE TO TAPE
        XWD     RESTRT          ;FOR DELETE FILE COMMAND
        XWD     XFER            ;FOR TRANSFER COMMANS
        XWD     MOVE            ;FOR MOVE COMMAND
        XWD	SETLOC		;FOR LOCATION COMMAND
        XWD	SETNOD		;FOR NODE COMMAND
;
;       THIS COMMAND IS TO GIVE A LIST OF THE COMMANDS TO
;       THE USER.  DEPENDING ON THE STATUS OF THE USER
;       CERTAIN COMMANDS MAY OR MAY NOT BE GIVEN TO
;       THE USER.
;
HELP:   MOVEI   AC,HLPCM1       ;GIVE EVERYONE THIS
        PUSHJ   P,OUTLIN        ;PUT IT OUT
        SKIPE   CALSPL          ;GO FOR REG. CALL
        JRST    LSTHLP          ;NO OF THIS OTHER STUFF
        OUTSTR  HLPCM4          ;TELL OF SET COMMAND
        SKIPN   ,REMSET         ;SKIP IF THIS REMOTE
        SKIPE   ,OPRSET         ;SKIP IF THIS NOT SYS OPER
        OUTSTR  HLPCM2          ;TELL OF OTHER COMMANDS
LSTHLP: OUTSTR  HLPCM3          ;GIVE REST ON INSTRUCTIONS
        JRST    PROMPT          ;RETURN TO COMMANDER
HLPCM1: ASCIZ/
VALID COMMANDS ARE
HELP OR ? - REPRINTS THIS LIST
SPOOL     - SPOOL FILES FOR PRINTING
STATUS    - LIST ONLY THOSE REQUESTS PENDING
REPORT    - GIVE STATUS FOR ALL JOBS SINCE A DATE
LIST      - LIST ALL FILES FOR A REQUEST
CANCEL    - USED TO CANCEL ANY PENDING REQUEST
WHERE     - GIVES LOCATION OF WHERE REQUESTS WERE PRINTED
QUIT      - LEAVE THIS PROGRAM/
HLPCM4: ASCIZ/
SET       - USED FOR ESTABLISHING REMOTE OPERATOR/
HLPCM2:ASCIZ/
DELETE    - USED FOR DELETEING FILES FROM REQUESTS
PRINT     - USED FOR PRINTING OF REQUESTS
MOVE      - USED FOR MOVING REQUEST FROM REMOTE TO CENTER
HOLD      - FOR DELAYING REQUESTS
RESTART   - FOR REPRINTING INDIVIDUAL FILES
HARDCOPY  - FOR RECREATING A HARDCOPY OF THE REQUEST
STORE     - FOR STORING REQUESTS TO TAPE TO PRINT
            THEM ON ANOTHER SYSTEM
TRANSFER  - FOR MOVING REQUESTS TO DIFFERENT PRINTING LOCATION
LOCATION  - ALLOWS REMOTE OPERATOR TO PRINT REQUESTS FOR
            SPECIFIED PRINTER LOCATION
NODE      - ALLOWS REMOTE OPERATOR TO PRINT REQUESTS FOR
            SPECIFIED NODE
/
HLPCM3: ASCIZ/

        ANY OF THESE COMMANDS MAY BE SHORTENED TO ANY LENGTH
        WHICH WILL ALLOW THE COMMAND TO BE RECOGNIZABLE

        A ? AFTER ANY OF THE COMMANDS OR ANY OF THE QUESTIONS ASKED
        WILL PRINT OUT INFORMATION TO EXPLAIN THE COMMAND OR QUESTION.
/
;
;       PURPOSE OF THIS ROUTINE IS TO LIST THE STATUS OF
;       A SPOOL PRINT REQUEST AND THE FILES THAT WERE
;       SPOOLED WITH THE REQUEST.
;       REQUEST IS LIMITED TO THE ORIGINAL REQUESTOR,
;       ACCOUNT SUPERVISORS AND THOSE WITH OPER STATUS SET.
;
;       ACCUMULATOR ASSIGNMENTS
;       
        AC= 0                   ;BASIC ACCUMULATORS
        AC1= 1                  ;
        AC2= 2                  ;
        AC3= 3                  ;
        AC4= 4                  ;
        AC5= 5                  ;
        LSTREQ= 6               ;CONTAINS THE REQUEST NO. TO LIST
        GANUUN= 7               ;CONTAINS GANUUN OF THIS USER
        ACTSUP= 10              ;INDICATES IF ACCOUNT SUPERVISOR
        STATUS= 11              ;SHOWS STATUS OF REQUEST
        LIC= 12                 ;SHOWS LICENSE OF USER
        HOLD= 13                ;USED FOR HOLDING DATE
        NUMFIL= 14              ;HOLD NUMBER OF FILES SPOOLED
        FLAG= 15                ;FLAG SHOWING USE BY STATUS
;
;       CHANNEL ASSIGNMENTS
;
        GDCHL= 2                ;CHANNEL FOR GROUP DESCRIPTOR
        FDCHL= 1                ;CHANNEL FOR FILE DESCRIPTORS
        PUSHJ   P,UPCASE        ;GET PRE BLANKS
LIST:   CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS PRE BLANKS
        CAIE    AC,77           ;CHECK FOR QUERRY
        JRST    GOTLST          ;GO PROCESS REQUEST NUMBER
        PUSHJ   P,LFPASS        ;SKIP REST OF INPUT
QUERRY: MOVEI   AC,RQSTNO
        PUSHJ   P,OUTLIN
        JRST    LIST-1          ;GO GET INPUT
GOTLST: CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LINE FEED
        JRST    QUERRY          ;GO GET REQUEST NO.
PROREQ: SETZ    FLAG,           ;MAKE SURE FLAG ZEROED OUT
        PUSHJ   P,GETNUM        ;GO GET REQUEST NUMBER
        SETOM   ,REPORT         ;TO VOID EXTRA MESSAGE IN CHKDON
;
;       OPEN CHANNEL TO START LOOKING AT GROUP DESCRIPTOR
;
LSTCON: SETZM   OPNOUT                  ; OPEN FILES FOR INPUT ONLY
        MOVEI   AC,1
        MOVEM   AC,HDFLG
        PUSHJ   P,INPMAP
NXTBLK: MOVE    AC,LSTREQ               ; NUMBER WE LOOK FOR
        PUSHJ   P,SIXNUM                ; CHANGE TO REAL NUMBER MINUS SYSTEM
        MOVE    AC,AC1                  ; HAS TO BE IN ZERO
        PUSHJ   P,FINBNO                ; SEE IF IN MAP
        JRST    CHKDON                   ; WE DONE
        PUSHJ   P,GETGD                 ; NOW WE HAVE IT
        MOVE    STATUS,CURSTA
;
;       DROP DOWN TO HERE IF WE HAVE CORRECT REQUEST NUMBER
;
        PUSHJ   P,URINFO        ;GO GET USERS INFOR
        MOVE    AC,GDBUFF+1     ;GET NEXT WORD OF GD
        HLRZ    NUMFIL,AC       ;GET NO. FILES SPOOLED
        LSH     NUMFIL,-^D8     ;RIGHT JUSTIFY FILES
        MOVE    AC3,GDBUFF+2    ;GET NEXT WD. OF GD
        CAMN    AC3,GANUUN      ;SEE IF GAN/UUN MATCH
        JRST    READIT          ;GO LOOK INTO FILE DESCRIPTORS
        JUMPN   LIC,READIT      ;GO IF OPER STATUS SET
        SKIPN   ,TYMSHR         ;SKIP IF THIS TYMSHARE
        JRST    CUSTMR          ;BR. SINCE CUSTOMER
        MOVEI   AC1,GDBUFF      ;GET BUFFER POINTER
        PUSHJ   P,REMSHR        ;CHECK REMOTE, DIST AND PRI LOC
        JRST    NXTBLK          ;ERROR EXIT
        JRST    READIT          ;GO PROCESS REQ.
CUSTMR: HLRZ    AC1,GANUUN      ;GET GAN OF THIS USER
        HLRZ    AC2,AC3         ;GET GAN OF THIS USER
        CAME    AC2,AC1         ;SEE IF GAN MATCH
        JRST    NXTBLK          ;CANT HAVE ACCESS
        MOVE    ACTSUP,ACTSAV   ; SET UP REGISTER
        JUMPE   ACTSUP,NXTBLK   ;RIGHT GAN, BUT NOT SUPERVISOR
;
;       TO GET HERE, REQUESTOR MUST BE ORIGINAL REQUESTOR,
;       THE ACCOUNT SUPERVISOR OR HAVE OPER LIC SET
;
READIT: MOVEM   AC3,TUSER       ;SAVE GD PPN FOR LATER
        MOVE    10,LSTREQ       ;SAVE THE REQUEST NUMBER
        MOVE    HOLD,GDBUFF+3   ;GET DATE OF SPOOLING
        SETZM   FULLCH          ;ZERO FULLCASE DESIRE
        TRNE    HOLD,FULMSK     ;SKIP IF NOT WANTED
        SETOM   FULLCH          ;SHOW FULL CASE WANTED
        MOVE    AC,HOLD         ;TEMP 4/21
        ANDI    AC,77000        ;TEMP 4/21
        LSH     AC,-^D9         ;TEMP 4/21
        MOVEM   AC,HCOPYS       ;TEMP 4/21
        HRRZ    AC2,HOLD        ;GET WHERE TO PRINT INDICATOR
        ANDI    AC2,7           ;SAME
        MOVE    AC,GDBUFF+4
        HLR     HOLD,AC         ;SAVE NO. PAGES
        MOVEM   AC,REQLOC       ;SAVE SITE LOC.
        MOVE    AC,GDBUFF+5     ;GET NO. PAPER AND PAGES
        HLL     NUMFIL,AC       ;SAVE PAPER AND PAGES
        MOVEI   AC,GDBUFF       ;SAVE PAPER AND PAGES
        PUSHJ   P,PUTOUT        ;GO PUT OUT INFO
        MOVE    LSTREQ,10       ;RESTORE REQUEST NO.
        JUMPN   FLAG,NXTBLK     ;BR. IF STAT OR REPORT
        CAIN    STATUS,%CANREQ  ;SEE IF DOING A CANCELED REQ.
        JRST    NXTBLK          ;NO FILES PRINT ON CANCEL REQ.
RDFD1:  MOVEI   AC,FILSPO
        PUSHJ   P,OUTLIN
        SETZ    AC3,            ;ZERO FOR PRINT FILES USE
        SKIPA                   ;BYPASS ENTRY POINT
PNTLST: SETO    AC3,            ;SET FLAG FOR THIS ENTRY POINT
        SETZM   OPNOUT          ; READ ONLY
        PUSHJ   P,READFD        ; READ THE FD FOR THE GD
        PUSH    P,AC3           ; SAVE FLAG
NEXTFD: PUSHJ   P,FNDFD         ; FIND HIS FD
        HLRZ    AC1,AC
        LSH     AC1,^D-12
        SKIPN   AC1
        MOVE    AC1,HCOPYS
        MOVEM   AC1,FCOPYS      ; PUT OUT NUMBER OF COPIES
        JRST    BTCHMA
NXFD2:  SOJLE   7,NXFD3
        PUSHJ   P,RDNEXT
        JRST    NEXTFD
NXFD3:  POP     P,AC3           ; RESTORE FLAG
        JUMPE   AC3,NXTBLK
        POPJ    P,
;
;       COME HERE IF THE BATCH NUMBERS MATCH
;
BTCHMA: HRRZ    16 ,FDPTR
        MOVE    AC,3(16)        ; PPN OF FD
        CAME    AC,GDBUFF+2     ;SEE IF FD PPN MATCHES GD PPN
        JRST    NXFD2           ;NO THEN BYPASS THIS FD
        HLRZ    AC,GDBUFF+3     ;GET REQ. DATE OF GD
        HRRZ    AC2,5(16)       ; GET DATE OF REQ
        CAME    AC,AC2          ;SKIP IF SAME DATE
        JRST    NXFD2           ;NO MATCH, BYPASS THIS FD
        MOVSS   AC,2(16)        ;SWAP EXT. NAMES
        SKIPN   AC,4(16)
        JRST    ORGOWN          ;ELSE SKIP OWNERE NAME
        MOVEI   AC4,14          ;MAX. CHAR. TO DO
        MOVE    AC,4(16)       ;GET 1ST OF OWNER NAME
        ADDI    AC1,3           ;POINT TO LAST OF NAME
        MOVE    AC1,7(16)       ;GET NAME
        MOVEI   AC2,"("
        PUSHJ   P,OUTAC2
        MOVE    AC5,[POINT 6,AC] ;TO TO NAME AREA
BCHMA2: ILDB    AC2,AC5         ;GET A CHAR.
        JUMPE   AC2,BCHMA3      ;BLANK IS END OF NAME
        ADDI    AC2,40          ;CONVERT TO ASCII
        PUSHJ   P,OUTAC2        ;PUT IT OUT
        SOJG    AC4,BCHMA2      ;BR. IF NOT ALL NAME OUT
BCHMA3: MOVEI   AC2,")"         ;END OF OWNER
        PUSHJ   P,OUTAC2
ORGOWN: MOVEI   AC1,1(16)       ;ADDRESS OF FILE NAME
        PUSHJ   P,NOTHER        ;OUT WITH FILE NAME
        MOVEI   AC,"/"          ;GIVE COPIES COUNT
        PUSHJ   P,CHROUT        ;PUT IT OUT
        MOVE    AC,NCOPFD       ;GET COPY COUNT
        IDIVI   AC,12
        ADDI    AC,60           ;CONVERT TO ASCII
        ADDI    AC1,60          ;SAME
        CAIE    AC,60           ;SEE IF ZERO
        PUSHJ   P,CHROUT        ;SKIP IF NOT
        PUSHJ   P,OUTAC1        ;PUT OUT COPY COUNT
        MOVE    AC1,2(16)       ;GET EXT. NAME STUFF
        HRLZS   ,AC1            ;SWAP EXT. NAMES
        SKIPN   SUPCHK          ;NO DO IF TRA HARDCOPY
        SKIPE   CALSPL
        JRST    BCHMA1
        SKIPN   ,OPRSET         ;SKIP IF THIS THE OPER
        JRST    BCHMA1          ;DONT PUT OUT REAL FILE NAMES
        OUTSTR  [ASCIZ/  (/]    ;PUT OUT FILLER
        MOVEI   AC2,3           ;NO. CHAR. TO PUT OUT
        SETZ    AC,             ;FOR NEXT INST.
        LSHC    AC,6            ;BRING OVER A CHAR.
        ADDI    AC,40           ;CONVERT TO ASCII
        OUTCHR  AC              ;PUT OUT REAL EXTENSION
        SOJG    AC2,.-4         ;DO REST OF EXT.
        OUTCHI  ")"
BCHMA1: MOVEI   AC5,5           ;NO. WDS. TO BYPASS
        MOVEI   AC,CRLF         ;DO A CR.LF
        PUSHJ   P,OUTLIN
        JRST    NXFD2           ;GO BYPASS REST OF FD
;
;       PURPOSE HERE IS TO EXTRACT A REQUEST NUMBER AND RETURN IF
;       IT APPEARS TO BE OK.  IF NOT OK, GET ERROR MESSAGE 
;       AND RETURN TO PROMPTOR
;
        AC= 0
        AC1= 1
        AC5= 5
        REQNUM= 6               ;HOLDS THE EXTRACTED NUMBER
GETNUM: MOVEI   AC5,5           ;LIMIT SIZE OF ONPUT
GETNM1: SETZ    REQNUM,         ;ZERO STORAGE AREA
        MOVE    AC1,[POINT 6,REQNUM,5] ;POINT TO HOLDING AREA
MORNUM: SUBI    AC,40           ;CONVERT CHAR. TO SIXBIT
        CAIL    AC,20           ;SEE IF LESS THAN ZERO
        CAILE   AC,31           ;SEE IF GREATER THAN 9
        JRST    BADNUM          ;ILLEGAL NUMBER
        SOJL    AC5,BADNUM      ;BR. IF BAD NUMBER
        IDPB    AC,AC1          ;STORE THE CHARACTER
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIE    AC,","          ;CHECK FOR A COMMA
        CAIN    AC,40           ;CHECK FOR BLANK
        JRST    DORETN          ;DO A CR
CKFCR:  CAIN    AC,15           ;CHECK FOR A CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;CHECK FOR LF
        JRST    MORNUM          ;GO GET MORE REQUEST NUMBER
DORETN: CAIE    AC,40           ;SEE IF LAST CHAR. A BLANK
        JRST    DORTN1          ;BR. IF NOT
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,40           ;SKIP IF NOT A BLANK
        JRST    .-2             ;SKIP BACK IF IT IS, GET NEXT CHAR.
        CAIN    AC,15           ;SEE IF PRE-TERMINATOR
        PUSHJ   P,UPCASE        ;GET TERMINATOR
DORTN1: MOVE    AC2,AC          ;SAVE TERMINATOR
SEESIZ: SKIPN   ,AC5            ;SEE IF NUMBER RIGHT SIZE
        POPJ    P,              ;RETURN
BADNUM: MOVEI   AC,BADNO        ;BAD NUMBER
        PUSHJ   P,OUTLIN
        JRST    PRMPRN          ;RETURN TO COMMANDER
BADNO:  ASCIZ/ILLEGAL NUMBER/
;
;
URINFO: MOVE    GANUUN,USRPPN   ;GET USERS PPN
;
;       GET THIS USERS LICENSE AND SET FOR OPER
;
        MOVE    LIC,OPRSET      ;SET LIC TO OPER AND DISTRICT
;
;       NOW SEE IF SUPERVISOR IS USEING THIS
;
        HRROI   ACTSUP,6        ;GET TAB FOR GETTING PRIV. BITS
        GETTAB  ACTSUP,         ;GO GET PRIVILEGE BITS
        JFCL
        ANDI    ACTSUP,20000    ;GET SUPERVISOR STATUS
        MOVEM   ACTSUP,ACTSAV#  ; SAVE SUPERVISOR STATUS
        POPJ    P,              ;RETURN
;
;       VALIDATE UDER NAME TO PPN
;
VALPPN: OPEN 10,VALDEF
        JRST    ERROR1
        MOVEM   AC,GETGAN+1     ;STORE ADDRESS OF NAME
        LOOKUP  10,GETGAN
        JFCL
        RELEAS  10,
        CAMN    AC,GETGAN+1
        JRST    EROR22
        POPJ    P,
GETGAN: 3                       ;USED FOR GETTING GAN/UUN
        0
        SIXBIT/A/
        0
VALDEF: EXP  10         ;VALIDATION CHANNEL DEFINITION
        SIXBIT /DSK/
        XWD  VALIN
;
REQLOC: 0
FULLCH: 0
;
;
ERROR1: MOVEI   AC,NOIOCH
        PUSHJ   P,OUTLIN
        JRST    SEEREP
ERROR3: MOVEI   AC,RENEST
        PUSHJ   P,OUTLIN
        JRST    PROMPT
ERROR4: MOVEI   AC,ERRIOF
        PUSHJ   P,OUTLIN
SEEREP: MOVEI   AC,REPSEE
        PUSHJ   P,OUTLIN
        JRST    LEAVE           ;EXIT THE PROGRAM
ERRNUM: MOVE    AC1,AC          ;MOVE NUMBER
        MOVEI   AC,AC1          ;GET ADDRESS
        PUSHJ   P,OUTLIN
        JRST    SEEREP
FILSPO: ASCIZ/
FILES SPOOLED:
/
CRLF:   ASCIZ/
/
NOIOCH: ASCIZ/
UNABLE TO OPEN INPUT CHANNEL/
RENEST: ASCIZ/
REQUEST DOES NOT EXIST/
ERRIOF: ASCIZ/
ERROR INPUTTING FILE/
REPSEE: ASCIZ/
PLEASE CONTACT YOUR TYMSHARE REPRESENTATIVE/
RQSTNO: ASCIZ/
REQUEST NUMBER: /
;
;       PURPOSE OF THIS ROUTINE IS TO GIVE STATUS BY REQUEST
;       NUMBER, USERNAME OR STATUS ON AN ALL REQUEST
;
;       ACCUMULATOR ASSIGNMENTS
;
        AC= 0                   ;BASIC ACCUMULATOR
        AC1= 1                  ;
        AC2= 2                  ;
        AC3= 3                  ;
        AC4= 4                  ;
        AC5= 5                  ;
        LSTREQ= 6               ;
        GDGAN= 6                ;TEMP HOLDING AREA FOR GD GAN/UUN
        GANUUN= 7               ;
        ACTSUP= 10              ;
        STATUS= 11              ;
        LIC= 12                 ;
        HOLD= 13                ;HOLDS DATE AND TIME
        NUMFIL= 14              ;HOLDS NUMBER OF FILES IN EACH REQ.
        FLAG= 15                ;SHOWS USE OF LIST ROUTINE BY STATUS
;
;       CHANNEL ASSIGNMENTS
;
        GDCHL= 2                ;USED FOR GROUP DESCRIPTOR
;
HDFLG:  0                       ;SHOWS IF HEADING OUT YET
STAT:   MOVE    AC5,AC          ;SAVE ARGUEMENTS
        MOVEI   FLAG,1          ;SET HEADING FLAG
        MOVEM   FLAG,HDFLG      ;SET HEADING FLAG
;
;       OPEN A CHANNEL TO GET THE SPOOL DIRECTORY
;
;       PUSHJ   P,OPNFIL                ;GO GET REQ. TABLE
        SETZM   OPNOUT          ; OPEN READ MODE ONLY
        PUSHJ   P,INPMAP                ; GET THE MAP
;       SKIPN   REPORT          ;SKIP IF THIS IS A REPORT
;
;       TIME TO GET SOME OF THE NECESSARY INFORMATION
;       NEEDED ABOUT THIS USER FOR LATER USES
;
        PUSHJ   P,URINFO        ;GO GET USERS INFO
        MOVE    AC,AC5          ;RESTORE ARGUEMENTS
        JRST    .+2             ;BYPASS NEXT INST
RESTA1: PUSHJ   P,UPCASE        ;GET PRE-BLANKS
RESTAT: CAIN    AC,40           ;CHECK FOR PRE-BLANKS
        JRST    .-2             ;BYPASS PRE-BLANKS
        CAIE    AC,77           ;CHECK FOR A QUERRY
        JRST    GOTSTA          ;GO PROCESS STATUS REQUEST
        MOVEI   AC,ASKITM
        PUSHJ   P,OUTLIN
        MOVEI   AC,REQNJB
        PUSHJ   P,OUTLIN
        MOVEI   AC,WRDALL
        PUSHJ   P,OUTLIN
        MOVEI   AC,FOLUSR
        PUSHJ   P,OUTLIN
        MOVEI   AC,DEFALT
        PUSHJ   P,OUTLIN
        MOVEI   AC,ETRAGN
        PUSHJ   P,OUTLIN
        PUSHJ   P,LFPASS
        JRST    RESTA1          ;GO WAIT FOR INPUT
GOTSTA: MOVEI   FLAG,3          ;ZERO CENTER INDICATOR
        CAIN    AC,15           ;CHECK FOR CARRIAGE RETURN
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;CHECK FOR LINEFEED
        JRST    WHATST          ;GO CHECK FOR OTHER STATUS
        SKIPA                   ; PROCESS IT
JUSCEN: MOVEI   FLAG,2
        SKIPE   ,OPRSET         ;SKIP IF NOT OPER
        MOVEI   FLAG,1          ;OPER DEFUALT TO CENTER ONLY
        JRST    STAALL          ;GO DO ALL STATUS
WHATST: CAIN    AC,125          ;CHECK FOR A U
        JRST    USER            ;GO CHECK FOR USER COMMAND
        CAIN    AC,101          ;CHECK FOR AN A
        JRST    ALLSTA          ;GO DO ALL STATUS CHECK
        CAIN    AC,"C"          ;CHECK FOR C OF CENTER
        JRST    CENTER          ;GO CHECK FOR CENTER
        CAIN    AC,"R"          ;CHECK FOR R OF REMOTE
        JRST    REMOTE          ;GO CHECK FOR REMOTE
;
;       AT THIS POINT WE WILL ASSUME USER SPECIFYING REQUEST NUMBER
;
        PUSHJ   P,GETNUM        ;GO GET REQUEST NUMBER
        SETO    FLAG,           ;SET FLAG FOR USE IN LIST
        JRST    LSTCON          ;GO GET STATUS
;
;       COME HERE TO PROCESS USER REQUEST
;
USER:   PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIE    AC,123          ;CHECK FOR S
        JRST    ENDUSR          ;GO CHECK FOR REST
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIE    AC,105          ;CHECK FOR E
        JRST    ENDUSR          ;GO CHECK FOR REST
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,122          ;CHECK FOR R
ENDUR1: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
ENDUSR: CAIN    AC,40           ;CHECK FOR A BLANK
        JRST    MORBLK          ;GO DO BLANKS
        CAIN    AC,15           ;CHECK FOR A CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;CHECK FOR LINEFEED
        JRST    CANT            ;BAD COMMAND
        MOVEI   AC,USRNAM
        PUSHJ   P,OUTLIN
MORBLK: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,40           ;CHECK FOR A BLANK
        JRST    .-2             ;BYPASS PRE BLANKS
        MOVE    AC1,[POINT 6,TUSER] ;STORAGE AREA
        SETZM   ,TUSER          ;ZERO STORAGE AREA
        SETZB   AC5,TUSER+1     ;ZERO STORAGE AND COUNTER
MORNAM: CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    VALSIZ          ;GO SEE FOR ANY NAME
MORNM1: ADDI    AC5,1           ;INCREASE CHAR. COUNT
        CAILE   AC5,14          ;SEE IF MAX SIZE IN YET
        JRST    MORNAM          ;SEARCH FOR CR OR LF
        SUBI    AC,40           ;CONVERT TO SIXBIT
        IDPB    AC,AC1          ;STORE USER NAME
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    MORNAM          ;GO GET MORE USER NAME
VALSIZ: JUMPN   AC5,VALNAM      ;GO VALIDATE NAME
;
;       VALIDATE THE USER NAME
;
VALNAM: MOVEI   AC,TUSER        ;GET ADDRESS OF USER NAME
        PUSHJ   P,VALPPN        ;GO VALIDATE NAME
        MOVE    AC,GETGAN+1     ;GET THE GAN/UUN
        CAMN    AC,GANUUN       ;SEE IF THIS IS THE OWNER OF THE REQ.
        JRST    POSDTE          ;GO PROCESS GD
        JUMPN   LIC,POSDTE      ;GO IF OPER LIC SET
        HLRZ    AC1,GANUUN      ;GET GAN OF THIS USER
        HLRZ    AC2,GETGAN+1    ;GET GAN OF REQUESTED
        CAME    AC1,AC2         ;SEE IF IN SAME ACCOUNT
        JRST    CANTAL          ;CANT ALLOWED , NOT A SUPER
        MOVE    ACTSUP,ACTSAV   ; SET UP REGISTER
        JUMPE   ACTSUP,CANTAL   ;NOT A SUPER
POSDTE: SKIPE   ,REPORT         ;SKIP IF DOING A STATUS
        PUSHJ   P,SINCE         ;GO GET DATE
;
;       COME HERE IF REQUESTOR HAS ACCES TO USERS REQUEST
;
GIVEIN: PUSHJ   P,NEXTGD        ;GO READ A REQUEST
        JRST    CHKDON          ;JUMP OUT IF EOF FOUND
        SKIPE   REPORT
        JRST    GIVEI1
        MOVE    STATUS,CURSTA
        CAILE   STATUS,%TAPXFR
        JRST    GIVEIN
GIVEI1: PUSHJ   P,GETGD
        PUSHJ   P,GOTBLK
        JRST    GIVEIN          ; ERROR 
        CAME    AC3,GETGAN+1    ;SEE IF CORRECT GAN/UUN
        JRST    GIVEIN          ;NO MATCH, GET NEXT GD
        SKIPN   ,REPORT         ;SKIP IF DOING A REPORT
        JRST    STACMD          ;GO DO STATUS COMMAND
        CAMGE   AC1,CKDATE      ;SEE IF WITHIN DATE RANGE
        JRST    CHKDON          ;NOT IN, GO GET NEXT REQ.
        JRST    GIVOUT          ;GO POSCESS THIS GD
STACMD: MOVE    STATUS,CURSTA
        CAILE   STATUS,%TAPXFR  ;SHO HOLD,PEND,TRAN,INPROCC
        JRST    GIVEIN          ;DONT SEE ANYTHING ELSE FOR STATUS
GIVOUT: CAIN    FLAG,3          ; 3 SAYS BOTH
        JRST    GIVOT1          ; 3 SAYS BOTH
        JUMPE   FLAG,GIVOT1     ;0= DO FOR CENTER AND REMOTE
        CAME    AC2,FLAG        ;SEE IF WE HAVE REMOTE OR CENTER
        JRST    GIVEIN          ;NO, GET GET NEXT REQUEST
GIVOT1: PUSHJ   P,PUTOUT        ;GO PUT INFO
        JRST    GIVEIN          ;GO GET NEXT BLOCK
;
;       COME HERE TO CHECK FOR CENTER AND REMOTE
;
CENTER: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIE    AC,"E"          ;SEE IF E IN CENTER
        JRST    CANT            ;CANT GET COMMAND
        MOVEI   AC,21           ;SHOW TO CHECK CENTER
        MOVEI   12,CANT         ;ERROR EXIT ADDRESS
        PUSHJ   P,VRFY1         ;GO VERIFY COMMAND
        MOVEI   FLAG,1          ;SHOWS DOING CENTER
        JRST    REMOT1          ;GO GET INFO OF THIS USER
REMOTE: MOVEI   AC,22           ;CHECK REMOTE COMMAND
        MOVEI   12,CANT         ;ERROR EXIT ADDRESS
        PUSHJ   P,VRFY1         ;GO VERIFY COMMAND
        MOVEI   FLAG,2          ;SHOWS CHECK FOR REMOTE
REMOT1: PUSHJ   P,URINFO        ;GET USERS INFO
        JRST    STAALL          ;GET INFO WANTED
;
;       COME HERE FOR GETTING STATUS OF ALL REQUESTS
;
ALLSTA: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIE    AC,114          ;CHECK FOR L
        JRST    LOKMOR          ;GO CHECK THE REST
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,114          ;CHECK FOR L
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
LOKMOR: CAIN    AC,40           ;CHECK FOR A BLANK
        JRST    .-2             ;BYPASS BLANKS
        CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;CHECK FOR LF
        JRST    CANT            ;CANT UNDERSTAND COMMAND
STAALL: SKIPE   ,REPORT         ;SKIP IF DOING STATUS
        PUSHJ   P,SINCE         ;GO GET DATE
        JUMPN   LIC,DOACTS      ;BR. IF THIS THE OPER
        SKIPN   REMSET          ;IF REMOTE OPERATOR
        SKIPE   ,TYMSHR         ;SKIP IF NOT TYMSHARE
        JRST    DOACTS          ;IF SO, GO GET ALL REQ. TO PRI.LOC
        MOVE    ACTSUP,ACTSAV   ; SET UP REGISTER
        JUMPN   ACTSUP,DOACTS   ;BR. IF ACCT SUPERVISOR
        MOVEM   GANUUN,GETGAN+1 ;PUT IN USER PPN FOR REQ.
        JRST    GIVEIN          ;GO DO USER REQ.
DOACTS: PUSHJ   P,SAVREG        ; SAVE REGISTERS
        PUSHJ   P,STAGET        ;GO READ A BLK
        JRST    CHKDON       ;BR. IF EOF ON INPUT
        PUSHJ   P,RESREG        ; RESTORE REGS
        PUSHJ   P,GOTBLK   ;
        JRST    DOACTS          ; ERROR
        JUMPN   LIC,DOACT1      ;BR. IF THIS THE OPER
        SKIPN   REMSET          ;IF REMOTE OPERATOR
        SKIPE   ,TYMSHR         ;SKIP IF NOT TYMSHARE
        JRST    DOACT1  ;TYMSHARE SEE EVERYONE AT PRI LOC AND DST.
        HLRZ    AC4,AC3         ;GET GANUUN OF GD
        HLRZ    AC,GANUUN       ;GET GAN OF REQUESTOR
        CAME    AC,AC4          ;SEE IF IN SAME ACCOUNT
        JRST    DOACTS          ;NO GO, GET NEXT BLOCK
DOACT1: SKIPN   ,REPORT         ;SKIP IF DOING REPORT
        JRST    OPRSTA          ;GO DO STATUS
        CAMGE   AC1,CKDATE      ;COMPARE DATES
        JRST    CHKDON          ;OUT OF RANGE, THAT'S IT
        JUMPN   LIC,OPROWN      ;JUMP IF THIS THE OPER
        JRST    ALLOUT          ;GO DO THIS GD
OPRSTA: MOVE    STATUS,CURSTA
        CAILE   STATUS,%TAPXFR  ;SE PEND,HOLD,TRAN,IN PROCESS
        JRST    DOACTS          ;DONT SEE ANYTHING ELSE FOR STATUS
OPROWN: CAMN    AC3,USRPPN      ;SKIP IF NOT OPER. OWN REQ.
        JRST    ALOUT1          ;SHOW OWN REGARDLESS OF FLAG
ALLOUT: CAIN    FLAG,3
        JRST    ALOUT1
        JUMPE   FLAG,ALOUT1     ;0=DO BOTHE CENTER AND REMOTE
        CAME    AC2,FLAG        ;SEE IF DOING CENTER OR REMOTE
        JRST    DOACTS          ;NO, GET NEXT REQUEST
ALOUT1: PUSHJ   P,PUTOUT        ;GO PUT OUT REQ.
        JRST    DOACTS          ;GO GET NEXT BLOCK
;
;       SEE IF ANYTHING PUT OUT, OTHERWISE GIVE MESSAGE
;
CHKDON: SKIPG   ,HDFLG          ;SKIP IF NOTHING PUT OUT
        JRST    PROMPT          ;RETURN TO COMMANDER
        MOVEI   AC,NORQST
        PUSHJ   P,OUTLIN
        MOVEI   AC,[ASCIZ/ PENDING/]
        SKIPN   REPORT          ;SKIP IF DO REPORT
        PUSHJ   P,OUTLIN        ;DO FOR DOING STATUS
        JRST PROMPT             ;RETURN TO DISPATCHER
GOTBLK: HRRZI   AC1,GDBUFF+27   ;GET ADDRESS OF BUFFER
        MOVEM   AC1,16          ;SAVE ADDRESS
        SUBI    AC1,27          ;RESTORE POINTER
        SETZM   RESEXT          ;ZERO TYMSHARE REMOTE INDICATOR
        SKIPE   OPRSET          ;SYS OPER?
        JRST    GOTBK1          ;SEE EVERYTHING
        SKIPN   TYMSHR          ;TYMSHARE?
        SKIPE   REMSET          ;REMOTE OPERATOR?
        SKIPA                   ;YES
        JRST    GOTBK1          ;LOOK NOW, CHECK LATER
        PUSHJ   P,REMSHR        ;CHECK DIST, PRI LOC
        POPJ    P,
GOTBK1: MOVE    LSTREQ,@AC1     ;GET THE REQUEST NUMBER
        HLRZ    STATUS,LSTREQ   ;GET THE STATUS
        LSH     STATUS,-^D12    ;RIGHT JUSTIFY THE STATUS
        TLZ     LSTREQ,REQMSK   ;GET REQ. NO.
        ADDI    AC1,1           ;INCREASE ADDRESS POINTER
        HLRZ    NUMFIL,@AC1     ;GET NO. FILES IN REQUEST
        LSH     NUMFIL,-^D8     ;RIGHT JUSTIFY FILES
        ADDI    AC1,1           ;INCREASE POINTER
        MOVE    AC3,@AC1        ;GET GAN/UUN OF THIS GD
        ADDI    AC1,1           ;INCREASE ADDRESS POINTER
        MOVE    HOLD,@AC1       ;GET DATE AND TIME
        SETZM   FULLCH          ;ZERO FULLCH DESIRE
        TRNE    HOLD,FULMSK     ;SKIP IF NOT FULL DESIRE?
        SETOM   FULLCH          ;SET IF WANTS IT
        HRRZ    AC2,@AC1        ;GET WHERE TO PRINT
        ANDI    AC2,7           ;MASK OFF WHERE TO PRINT
        SKIPN   ,AC2            ;SKIP IF NEW TYPE REQ WITH TYPE SPEC
        MOVEI   AC2,1           ;MAKE IT A CENTER
        ADDI    AC1,1           ;POINT TO NO. PAGES SPOOLED
        HLR     HOLD,@AC1       ;GET NUMBER OF PAGES
        HRRZ    AC,@AC1         ;GET LOC. WORD
        MOVEM   AC,REQLOC       ;SAVE IT
        ADDI    AC1,1           ;POINT TO PAPER AND PARTS
        HLL     NUMFIL,@AC1     ;GET PAPER SIZE AND PARTS
        SUBI    AC1,2           ;POINT TO REQUEST DATE
        HLRZ    AC1,@AC1        ;GET REQUEST DATE
        SETZ    AC,             ;ZERO INDICATOR
        AOS     (P)
        POPJ    P,
;
;       ROUTINE FOR PUTTING OUT THE INFORMATION
;
PUTOUT: MOVEI   AC5,5           ;NO OF CHARACTER TO PUTOUT
        MOVE    AC1,[POINT 6,GDBUFF,5] ;POINT TO STORAGE AREA
        SOSGE   HDFLG           ;SEE IF HEADING PUT OUT YET
        JRST    SKPOVR          ;DONT PUT OUT HEADING AGAIN
        SKIPN   OPRSET          ;SKIP IF CENTER OPERATOR
        SKIPE   REMSET          ;SKIP IF REG. USER
        SKIPA                   ;SKIP FOR ALL OPERATORS
        JRST    PUTCON          ;GO PUT OUT OTHER STUFF
        MOVEI   AC,OPRHDR
        PUSHJ   P,OUTLIN
        JRST    CONPUT          ;GO ON
PUTCON: MOVEI   AC,USRHDR
        PUSHJ   P,OUTLIN
CONPUT: MOVEI   AC,CRLF
        PUSHJ   P,OUTLIN
SKPOVR: MOVEI   AC,CRLF
        PUSHJ   P,OUTLIN
PUTOU1: ILDB    AC,AC1          ;GET A CHARACTER
        ADDI    AC,40           ;CONVERT TO ASCII
        PUSHJ   P,CHROUT        ;PUT OUT THE CHAR
        SOJG    AC5,PUTOU1      ;DO REST OF REQ. NO.
        MOVEI   AC,[ASCIZ/   /]
        PUSHJ   P,OUTLIN
        MOVE    GDGAN,AC3       ;SAVE GD GAN/UUN
        HRLM    AC2,STATUS      ;SAVE CEN/REM INDICATOR
        HLRZ    AC1,HOLD        ;GET DATE
        PUSHJ   P,WDATE         ;GO PUT OUT DATE
        HLRZ    AC2,STATUS      ;GET INDICATOR BACK
        HRRZS   ,STATUS         ;ZERO WHAT WE USED
        MOVEI   AC,[ASCIZ/  /]
        PUSHJ   P,OUTLIN
        MOVE    AC,REGUSR(STATUS) ;GET INDEXER
        SKIPN   OPRSET          ;SKIP IF OPER
        SKIPE   REMSET          ;REMOTE OPERATOR
        MOVE    AC,OPRUSR(STATUS) ;GET INDEXER
        ADDI    AC,OUTSTA       ;MAKE ADDRESS OF WORD
        PUSHJ   P,OUTLIN        ;PUT IT OUT
OPUT8:
        CAIE    AC2,1           ;SKIP IF CENTER REQ.
        JRST    CHKREM          ;GO CHECK REMOTE
        MOVEI   AC,[ASCIZ/  CEN  /]
        JRST    CHKRM1
CHKREM: SKIPN   OPRSET          ;SKIP IF SYS OPER
        JRST    CHKRM2          ;GO CHECK OTHER
        MOVEI   AC,[ASCIZ/  R/] ;SHOW ACTUAL REMOTE LOC.
        PUSHJ   P,OUTLIN
        SETOM   BINFLG          ;NO ZERO SUPPRESS
        MOVE    AC,REQLOC       ;GET LOC.
        ANDI    AC,777          ;KEEP IT ONLY
        PUSHJ   P,BIN100        ;PUT IT OUT
        MOVEI   AC,40           ;GET SEPERATOR
        PUSHJ   P,CHROUT        ;PUT IT OUT
        JRST    OPUT9           ;GO ON
CHKRM2: MOVEI   AC,[ASCIZ/  REM  /]
        SKIPE   RESEXT          ;
        MOVEI   AC,[ASCIZ/  REM* /]
CHKRM1: PUSHJ   P,OUTLIN
OPUT9:  DMOVE   AC1,GDBUFF+27   ;GET USERNAME
        PUSHJ   P,GETNAM        ;GO GET USER NAME
        HRRZ    AC,NUMFIL       ;GET NUMBER OF FILES
        PUSHJ   P,BINDEC        ;GO PUT OUT FILES
        SKIPN   OPRSET          ;SKIP IF OPER
        SKIPE   REMSET          ;SAME
        JRST    OPUT99          ;GO DO OPER STUFF
        MOVEI   AC,[ASCIZ/   /]
        PUSHJ   P,OUTLIN
        MOVE    AC1,[POINT 6,GDBUFF+6]  ; GET REQUESTOR NAME
        MOVEI   AC5,^D18        ;CAN ALLOW ONLY 18 OF THE 24 MAX.
OPUT10: ILDB    AC,AC1          ;GET A CHAR
        ADDI    AC,40           ;CONVERT TO ASCII
        PUSHJ   P,CHROUT        ;PUT IT OUT
        SOJG    AC5,OPUT10      ;PUT REST OF NAME OUT
        POPJ    P,
OPUT99:
        SETZM   ,RESEXT         ;ZERO REMOTE * FLAG
        SKIPN   ,REMSET         ;SKIP IF THIS REMOTE OPER.
        JUMPE   LIC,PUTRTN      ;NOT OPER, DONT DO REST
        OUTSTR  [ASCIZ/   /]
        HRRZ    AC,HOLD         ;GET NUMBER OF PAGES USED
        HRRZ    AC1,NUMFIL      ;GET NO. FILES SPOOLED
        IMULI   AC1,3           ;ALLOW 3 PAGES PER FILE
        ADDI    AC1,5           ;ALLOW 5 PAGES EXTRA PER REQUEST
        ADD     AC,AC1          ;TOTAL PAGES NEEDED THIS REQUEST
        PUSHJ   P,BINDEC        ;PUT OUT NUMBER OF PAGES
        HLRZ    AC,NUMFIL       ;GET PAPER PARTS AND TYPE OF PAPPER
        ANDI    AC,70000        ;GET PARTS SECTION
        LSH     AC,-^D12        ;RIGHT JUSTIFY
        ADDI    AC,60           ;GET ASCII CONVERSION
        HLRZ    AC1,NUMFIL      ;GET PAPER DESIRED
        LSH     AC1,-^D15       ;RIGHT JUSTIFY IT
        CAIN    AC1,1           ;CHECK FOR SMALL PAPER
        OUTSTR  [ASCIZ/  SMALL-/]
        CAIN    AC1,2           ;CHECK FOR BIG OR LARGE
        OUTSTR  [ASCIZ/  LARGE-/]
        CAIN    AC1,3           ;CHECK FOR TTY PAPER
        OUTSTR  [ASCIZ/    TTY-/]
        CAIN    AC1,4           ;CHECK FOR SPECIAL
        OUTSTR  [ASCIZ/  SPECIAL/]
        CAIN    AC1,5           ; CHECK FOR SMALL WHITED
        OUTSTR  [ASCIZ/  SMA-WHI/]
        CAIN    AC1,6
        OUTSTR  [ASCIZ/  LAR-WHI/]
        CAIE    AC1,4           ;CHECK FOR SPECIAL
        OUTCHR  AC              ;PUT OUT PARTS WANTED
        HRLI    NUMFIL,0        ;ZERO THE HALF WE TEMP. USED
        SKIPE   FULLCH          ;SKIP IF NOT FULLCASE
        OUTSTR  [ASCIZ/-FC/]    ;SHOW WANTS FULL CASE
PUTRTN: POPJ    P,              ;RETURN
;
;       DETERMINE IF SAME DISTRICT OR PRINT LOC. FOR TYMSHARE
;
REMSHR: ADDI    AC1,4           ;POINT TO PRINT LOC
        HRRZ    AC,@AC1         ;GET IT
        ANDI    AC,777          ;MASK THE PRINT LOC.
        SUBI    AC1,4           ;RESET POINTER
        CAME    AC,USRLOC       ;SKIP IF SAME PRINT LOC.
        JRST    REMSH1          ;NO, CHECK DISTRICT
        SETOM   ,RESEXT         ;SET REMOTE * FLAG
        JRST    REMSH2          ;GO EXIT
REMSH1: ADDI    AC1,21          ;POINT TO DISTRICT
        HLRZ    AC,@AC1         ;GET IT
        ANDI    AC,777          ;MASK THE DISTRICT
        SUBI    AC1,21          ;RESTORE POINTER
        CAMN    AC,DSTRCT       ;SKIP IF NOT SAME DISTRICT
REMSH2: AOS     (P)             ;FOR GOOD RETURN
        POPJ    P,
;
;       COME HERE TO GET DATE FOR REPORT COMMAND
;
SINCE:
        SKIPE   CALSPL
        JRST    CURDTE          ;ASSUME 1ST LAST MONTH
        OUTSTR  [ASCIZ/
SINCE: /]
        PUSHJ   P,UPCASE        ;GETT RESPOMSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
        CAIE    AC,77           ;CHECK FOR QUERRY
        JRST    SDATE           ;GO GET DATE
        OUTSTR  [ASCIZ-
ENTER DATE MM/DD/YY OR C.R. FOR 1ST OF LAST MONTH-]
        PUSHJ   P,LFPASS
        JRST    SINCE           ;GO ASK AGAIN
SDATE:  CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;CHECK FOR LF
        JRST    ASKDTE          ;GO EXTRACT THE DATE
;
;       ASSUME TO USE 1ST OF PREVIOUS MONTH
;
CURDTE: DATE    AC,             ;GET CURRENT DATE
        IDIVI   AC,^D31         ;GET MONTHS
        IDIVI   AC,14           ;GET MONTHS AND DAYS
        SETZM   ,DAY            ;ZERO DAY OF FIRST OF ONTH
        JUMPN   AC1,MONTOK      ;JUMP IF MONTH NOT JAN.
        MOVEI   AC1,13          ;SET MONTH AS DEC
        MOVEM   AC1,MONTH       ;SAVE MONTH
        SUBI    AC,1            ;REDUCE TO PREVIOUS YEAR
        JRST    COMDTE          ;GO SAVE DATE
;
;       COME HERE FOR ANY MONTH BUT JAN
;
MONTOK: SUBI    AC1,1           ;SET TO PREVIOUS MONTH
        MOVEM   AC1,MONTH       ;SAVE MONTH TO USE
COMDTE: MOVEM   AC,YEAR         ;SAVE YEAR TO USE
        PUSHJ   P,CREDTE        ;GO CREATE DATE
        POPJ    P,              ;RETURN
;
;       COMPUTE DATE TO CHECK BY 
;
CREDTE: MOVEI   AC,14           ;GET A 12
        IMUL    AC,YEAR         ;GET TOTAL MONTHS IN THOSE YEARS
        ADD     AC,MONTH        ;ADD THIS MONTH
        IMULI   AC,^D31         ;GET TOTAL DAYS
        ADD     AC,DAY          ;ADD DAY OF MONTH
        MOVEM   AC,CKDATE       ;STORE DATE TO USE
        POPJ    P,              ;RETURN
;
;       COME HERE TO EXTRACT THE DATE
;
ASKDTE: PUSHJ   P,EXTRCT        ;GO GET MONTH
        CAILE   AC,14           ;SEE IF GREATER THAN 12
        JRST    BADDTE          ;BAD DATE
        SUBI    AC,1            ;REDUCE FOR FORMULA
        MOVEM   AC,MONTH        ;SAVE THE MONTH
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        PUSHJ   P,EXTRCT                ;GO GET DAY
        CAILE   AC,^D31         ;MAX SURE NOT TO LARGE DATE
        JRST    BADDTE          ;DAY IS TOO LARGE
        SUBI    AC,1            ;REDUCE FOR FORMULA
        MOVEM   AC,DAY          ;SAVE DAY TO USE
        CAIN    AC1,15          ;CHECK FOR TERMINATPR
        JRST    SUPLYR          ;GO SUPPY YEAR
        CAIN    AC1,12          ;CHECK TERMINATOR
        JRST    SUPLYR          ;MAY HAVE TO SUPPY YEAR
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        PUSHJ   P,EXTRCT        ;GO GET YEAR
        CAIGE   AC,^D64         ;SKIP IF GREATER THAN 64
        JRST    BADDTE          ;YEAR TOO SMALL
        SUBI    AC,^D64         ;REDUCE FOR FORMULA
        MOVEM   AC,YEAR         ;STORE YEAR FOR LATER
        MOVE    AC,AC1          ;CHECK FOR TERMINATOR
        SKIPA
        PUSHJ   P,UPCASE        ;GET NEXT CHAR
        CAIN    AC,40           ;CHECK BLANKS
        JRST    .-2             ;SKIP BLANKS
        CAIN    AC,15           ;TERMINATOR?
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;LF?
        JRST    BADDTE          ;BAD TERMINATOR
DODATE: PUSHJ   P,CREDTE        ;GO GET DATE TO USE
        POPJ    P,              ;RETURN
;
;       COME HERE IF NO YEAR IS SUPPLIED
;
SUPLYR: MOVE    AC,AC1          ;BRING TERMINATOR ACROSS
        JRST    .+2             ;SKIP NEXT INST
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLNKS
        CAIN    AC,15           ;CHECK FOR A CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;CHECK FOR A LF
        JRST    BADDTE          ;BAD TERMINATOR
MAYDTE: DATE    AC,             ;GET CURRENT DATE
        MOVEM   AC,AC3          ;SAVE FOR LATER
        IDIVI   AC,^D31         ;GET TOTAL MONTHS
        IDIVI   AC,14           ;GET TOAL DAYS
        MOVEM   AC,YEAR         ;SAVE CURRENT YEAR
        PUSHJ   P,CREDTE        ;GO CREATE DATE
        CAML    AC3,CKDATE      ;SEE IF DATE IS WRONG
        POPJ    P,              ;DATE OK TO USE
        SOS     ,YEAR           ;REDUCE TO PREVIOUS YEAR
        PUSHJ   P,CREDTE        ;GO CREATE 1 YEAR BEFORE
        POPJ    P,              ;RETURN
;
;       PURPOSE IS TO EXTRACT THE MONTH, DAY AND YEAR
;
EXTRCT: CAIGE   AC,60           ;SEE IF LESS THAN ZERO
        JRST    BADDTE          ;NOT VALID DIGIT
        CAILE   AC,71           ;SEE IF GREATER THAN 9
        JRST    BADDTE          ;SAME
        SUBI    AC,60           ;REDUCE TO BINARY
        MOVEM   AC,AC2          ;SAVE FOR LATER
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIGE   AC,60           ;SEE IF VALID NUMBER
        JRST    ONEDIT          ;ASSUME 1 DIDGI
        CAILE   AC,71           ;SEE IF VALID DIGIT
        JRST    ONEDIT          ;ASSUME 1 DIGIT
        SUBI    AC,60           ;REDUCE TO DECIMAL
        IMULI   AC2,12          ;MAKE FIRST POWER BY TEN
        ADD     AC,AC2          ;CREATE TOTAL DIGITS
        MOVEM   AC,AC1          ;SAVE AC
        PUSHJ   P,UPCASE        ;GET NEXT CHAR
        EXCH    AC,AC1          ;SWAP THEM
        POPJ    P,
ONEDIT: MOVEM   AC,AC1          ;SAVE TERMINATOR
        MOVE    AC,AC2          ;GET FIRAT DIGIT
        POPJ    P,
;
BADDTE: OUTSTR  [ASCIZ/
BAD DATE/]
        JRST    PRMPRN          ;RETURN TO COMMANDER
EROR22: MOVEI   AC,NOSUSR
        PUSHJ   P,OUTLIN
        JRST    PRMPRN
CANT:   MOVEI   AC,CNTALL
        PUSHJ   P,OUTLIN
        JRST    PRMPRN
CANTAL: MOVEI   AC,NOTALL
        PUSHJ   P,OUTLIN
        JRST    PRMPRN
OUTSTA: ASCIZ/PEND/
        ASCIZ/HOLD/
        ASCIZ/TRAN/
        ASCIZ/PROC/
        ASCIZ/TAPE/
        ASCIZ/COMP/
        ASCIZ/CANC/
REGUSR: OCT 0,0,0,3,3,5,5,5,6
OPRUSR: OCT 0,1,2,3,4,5,5,5,6
OPRHDR: ASCIZ/REQUEST    DATE   STAT  LOC  USERNAME     FILES  PAGES  PAPER-PTS/
USRHDR: ASCIZ/REQUEST    DATE   STAT  LOC  USERNAME     FILES  REQUESTOR/
USRNAM: ASCIZ/
USER NAME: /
NORQST: ASCIZ/
NO REQUESTS/
NOSUSR: ASCIZ/
NO SUCH USER/
CNTALL: ASCIZ/
CANT UNDERSTAND COMMAND/
NOTALL: ASCIZ/
CANT ALLOW ACCESS TO THAT REQUEST/
;
;       PURPOSE OF THIS ROUTINE IS TO CANCEL REQUESTS MADE BY
;       A USER.  CANCEL MAY BE DONE ONLY IF THE REQUEST HAS
;       NOT BEEN PROCESSED IN ANY WAY.  CANCEL MAY ONLY BE DONE
;       BY THE SAVE PERSON WHO MADE THE REQUEST.
;       THE GROUP DESCRIPTOR AND THE FILE DESCRIPTORS ARE
;       FLAGED TO SHOW THAT THE REQUEST HAS BEEN CANCELED.
;
;       ACCUMULATOR ASSIGNMENTS
;
        AC=  0                  ;BASIC ACCUMULATORS
        AC1= 1                  ;
        AC2= 2                  ;
        AC3= 3                  ;
        AC4= 4                  ;
        AC5= 5                  ;
        CANREQ= 6               ;HOLD NUMBER TO BE CANCELED
        NOFILS= 7               ;USED FOR HOLDING NO. FILES SPOOLED
        STATUS= 10              ;HOLDS STATUS OF DESCRIPTORS
        HOLD= 12                ;HOLD BUFFER POINTERS
        GANUUN= 13              ;HOLDS GAN/UUN OF THIS USER
        BUFSIZ= 14              ;HOLD SIZE OF INPUT BUFFER
        FLAG= 15                ;SHOWS CHANGE IN INPUT BUFFER
;
;       CHANNEL ASSIGNMENTS
;
        GDCHL= 2                ;CHANNEL FOR GROUP DESCRIPTOR
        FDCHL= 1                ;CHANNEL FOR FILE DESCRIPTOR
        DELCHL= 3               ;CHANNEL FOR DELETING FILES
;
;       SEE IF THE USER SPECIFIED A REQUEST NO.  IF NOT ASK FOR IT
;
HLDCMD: SETOB   AC3,CANHOL      ;SHOWS HOLD CMD. BEING DONE
        JRST    CANCEL          ;CONTINUE ON
        PUSHJ   P,UPCASE        ;GET A CHAR.
CANCEL: CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS PRE-BLANKS
        CAIE    AC,77           ;CHECK FOR A QUERRY
        JRST    GOTCAN          ;GO PROCESS REQUEST NUMBER
        PUSHJ   P,LFPASS
CANQRY: MOVEI   AC,RQSTNO
        PUSHJ   P,OUTLIN
        JRST    CANCEL-1        ;GO GET RESPONSE
;
;       COME HERE TO PROCESS REQUEST NUMBER
;
GOTCAN: CAIN    AC,15           ;CHECK FOR A CARRIAGE RETURN
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    CANQRY          ;GO ASK AGAIN
CANPRO: PUSHJ   P,GETNUM        ;GO GET REQ. NUM
;
;       NOW HAVE A VALID NUMBER, START SEARCHING FOR THE GROUP
;       AND FILE DESCRIPTORS
;
CANCON: MOVE    GANUUN,USRPPN   ;GET USERS PPN
;
;
;       NOW OPEN CHANNEL TO GET AT SPOOL.GDF
;
LOKAGN: MOVEM   AC3,CANHOL      ;GET FILE, SET POINTER
        SETOM   OPNOUT          ; OPN FILES FOR OUTPUT
        PUSHJ   P,INPMAP        ; GET MAP
;
;       START SCANNING GROUP DESCRIPTOR FILES
;
GDSCAN: MOVE    AC,CANREQ       ; LETS CHANGE TO REAL REQ NUM
        PUSHJ   P,SIXNUM
        MOVE    AC,AC1
        PUSHJ   P,FINBNO       ; GET ME THAT LOCATION OF AC0
        JRST    ERROR3          ; GOT ME BUDDY
        PUSHJ   P,GETGD         ; BETTER GET IT NOW
        MOVE    STATUS,CURSTA
        MOVE    GANUUN,USRPPN   ;GET USERS PPN
        HLRZ    NOFILS,GDBUFF+1
        LSH     NOFILS,-^D8     ;RIGHT JUSTIFY NO. FILES
        MOVE    AC,GDBUFF+2     ;GET GAN/UUN OF GD
        MOVE    AC3,CANHOL      ; RESTORE KLUDGE
        JUMPN   AC3,WHOHLD      ;BR. IF DOING A HOLD
        CAME    AC,GANUUN       ;SKIF IF PPNS DO MATCH
        JRST    GDSCN1          ;NO, CHECK FOR DISTRICT 0
        SKIPE   ,ESCSET         ;SKIP IF NOT SPOOL ESCAPE
        JRST    ESCSPL          ;JUMP IF IT IS
        SKIPN   OPRSET          ;SKIP IF OPER ALSO
        SKIPE   REMSET          ;SKIP OVER IF NOT ANY OPER
        SKIPA           ;SKIP IF SOME TYPE OF OPER
        JRST    FINSTA          ;GO ON IF NOT
        CAILE   STATUS,%TRAREQ  ;SKIP IF SOME TYPE OF PENDING
        SETOM   CANOVR          ;SET OVERRIDE FLAG
        JRST    FINSTA          ;GO DO IT
GDSCN1: SKIPN   ,OPRSET         ;SKIP IF THIS THE OPERATOR
        SKIPE   ,REMSET         ;SKIP IF NOT REMOTE OPER
        SKIPA                   ;SKIP IF EITHER REMOTE OR SYS OPER
        JRST    GDSCAN          ;ELSE, GO LOOK AT NEXT REQ.
        SETOM   ,CANOVR         ;SHOW THIS CANCEL OVERRIDE
        JRST    FINSTA          ;GO MAYBE CANCEL REQ.
;
;       COME HERE FOR CANCELING REQ. WHILE DOING A SPOOL
;
ESCSPL: MOVE    AC,GDBUFF+3     ;GET REQ. DATE WORD
        CAME    AC,GDBUFF+3     ;SEE IF MATCHES REQUEST
        JRST    GDSCAN          ;NO, THEN LOOK TO NEXT REQ.
        HLRZM   AC,TUSER        ;MATCH, SO SAVE DATE
        JRST    CNST4           ;GO CANCEL REQUEST
;
;       SEE IF THIS REMOTE AND IF SO, IS IT A VALID HOLD
;
WHOHLD: SKIPE   ,OPRSET         ;SEE IF THIS THE OPER
        JRST    FINSTA          ;YES OPER, CAN HOLD ANYTHING
        MOVE    AC,GDBUFF+4     ; GET GD LOC
        ANDI    AC,777          ;KEEP NODE ONLY
        CAME    AC,USRLOC       ;SEE IF SAME LOC
        JRST    GDSCAN          ;WRONG ONE, GO GET NEXT
        SKIPN   REMSET          ;SEE IF REMOTE ALREADY
        SETOM   ,CANOVR         ;SHOWS TO CHECK PASSWORD LICENSE
;
;       CHECK STATUS OF GROUP DESCRIPTOR
;
FINSTA:
        HLRZ    AC1,GDBUFF+3    ;RIGHT JUSTIFY IT
        MOVEM   AC1,TUSER       ;SAVE DATE FOR LATER
        SKIPE   CALSPL
        JRST    FINST1
        OUTSTR  [ASCIZ/FROM: /]
        PUSHJ   P,WDATE         ;GO PUT OUT DATE
        MOVE    AC3,CANHOL      ;RESTORE COMMAND INDICATOR
        OUTSTR  [ASCIZ/? /]
        PUSHJ   P,YORN          ;GET YES OR NO
        SKIPA                   ;ON NO
        JRST    FINST1          ;ON YES
        SETZM   CANOVR          ;RESET OVERRIDE
        JRST    GDSCAN          ;GO ASK AGAIN
FINST1: MOVE    AC3,CANHOL      ; RESTORE COMAND INDICATOR
        MOVE    STATUS,CURSTA           ; RESTORE STATUS REGISTER 
        JUMPE   AC3,CNST1       ;BR. IF DOING A CANCEL
        CAIN    STATUS,%REQHLD  ;SEE IF REQUEST ALREADY ON HOLD
        JRST    ENDHLD          ;TELL ALREADY ON HOLD
        JUMPE   STATUS,CNST11   ;BR ONLY IF PENDING
        JRST    CANTDO          ;CANT PUT ON HOLD
CNST1:  CAIL    STATUS,%COMREQ  ;SKIP IF NOT COMPLETED OR CANCELED
        JRST    CANTDO          ;CANT CANCEL THAT REQUEST
CNST11: SKIPE   ,CANOVR         ;SKIP IF NOT OVERRIDE
        JRST    CNST12          ;JUMP IF IS OVERRIDE
        JUMPN   AC3,CNST4       ;JUMP IF HOLD
        CAILE   STATUS,%TRAREQ  ;SKIP FOR PEND,HOLD OR TRANSFER
        JRST    CANTDO          ;CANT HONOR REQ.
        JRST    CNST4           ;GO CANCEL REQ.
;
;       COME HERE IS SYSTEM OPERATOR CANCELING A REQUEST
;       OR REMOTE OPERATOR PUT REQUEST ON HOLD.
;       FOR REMOTE, CHECK FOR REMOTE PRINT ABILITY AND
;       FOR SYS OPER KEEP PASSWORD NAME FOR TELLING WHO DID IT
;
CNST12:
        SKIPE   CALSPL
        JRST    CNST4
        HRLI    AC,2            ;PREPARE TO SAVE REGISTERS
        HRRI    AC,RECORD       ;WHERE TO SAVE THEM
        BLT     AC,RECORD+15    ;SAME
        PUSHJ   P,GETLIC-1      ;GET USERS LICENSE
        HRLI    AC1,RECORD      ;PREPARE TO RESTORE REG.
        HRRI    AC1,2           ;WHERE TO RESTORE AT
        BLT     AC1,17          ;RESTORE THEM
        SETO    AC1,            ;TO CHECK RESULTS
        CAMN    AC,AC1          ;SKIP IF GOT LICENSE
        JRST    PRMPRN          ;BR. ON ERROR MESSAGE
        SKIPE   ,OPRSET         ;SKIP IF THIS NOT THE OPERATOR
        JRST    CNST22          ;JUMP IF SYS OPER
        TLNN    AC1,40          ;FOR OTHERS CHECK REMOTE OPER
        JRST    CANTDO          ;NOT VALID REMOTE OPER
        SETOM   REMSET          ;FLAG AAS REMOTE OPER
CNST22: SKIPE   ,DELFLG         ;SKIP IF NOT DELETE FILE
        JRST    CANFIL          ;YES, THEN GO DELETE THE FILE
        SKIPE   CANHOL          ;SKIP IF CANCEL
        JRST    CNST4           ;GO ON
OPRCAN: DMOVE   AC,CANAME       ;GET OPERATORS NAME
        DMOVEM  AC,GDBUFF+14    ;SAVE OPERATORS NAME TO TELEPHONE NUMBER
;
;       EITHER WE THE OPERATOR OR REMOTE OPERATOR FOR A HOLD
;       OR FOR CANCEL WE ARE EITHER ORIG. REQUESTOR OR SYS OPER
;
CNST4:  SETZM   ,TUSER+1        ;ZERO REMOTE CANCEL FLAG
        DMOVE   AC,GDBUFF+3     ;GET REMOTE INFO
        ANDI    AC,7            ;SEE IF REM OR CENTER
        CAIE    AC,1            ;SEE IF THIS CENTER
        MOVEM   AC1,TUSER+1     ;STORE NODE WORD FOR REMOTE
CANHLD:
        HRLOI   AC1,007777      ;TO MASK OFF OLD STATUS
        ANDM    AC1,GDBUFF      ;DO IT
        MOVEI   AC1,%CANREQ             ;SET UP CANCELED FLAG
        SKIPE   CANHOL          ;SKIP NEXT IF NOT DOING A HOLD
        MOVEI   AC1,%REQHLD     ;SET UP HOLD FLAG
        LSH     AC1,^D30        ;SHIFT FOR STORING
        IORM    AC1,GDBUFF      ;STORE BACK TO INPUT BUFFER
;
;       REWRITE BLOCK BACK OUT TO FILE
;
TRYAGN:
        PUSHJ   P,UPDGD         ; UPDATE GD FILE
CANFIL:
;
;       NOW SEARCH THE FILE DESCRIPTOR TO SET THE CANCEL FLAG
;
        MOVE    AC3,CANHOL      ;RESTORE IT
        JUMPN   AC3,ENDHLD      ;BR. IF DOING A HOLD
        OPEN    DELCHL,DELDEF   ;OPEN CHANNEL FOR DELETING
        JRST    ERROR1          ;CANT GET A CHANNEL
;
;       NOW START PORCESSING THE FILE DESCRIPTORS
;
GETFDX: SETZM   OPNOUT          ; READ ONLY
        PUSHJ   P,READFD
CNXTFD:
        PUSHJ   P,FNDFD         ; BETTER FIND IT THERE
        PUSHJ   P,DELFD         ; DELETE IT
PASSFD: PUSHJ   P,RDNEXT        ; READ TO NEXT FD
        SOJG    7,CNXTFD          ; GOT IT
        JRST    DELCN1          ; THATS ALL FOLKS
;
;       ALL FILES DELETED,RESET SPLCNT
;
DELCN1: RELEAS  DELCHL,         ;RELEASE THE DELETEING CHANNEL
        SKIPE   ,DELFLG         ;SKIP IF NOT DEL FILE
        JRST    NOFILE          ;FILE NOT FOUND IF COME TO HERE
        SKIPE   ,TUSER+1        ;SKIP IF DOING CENTER
        JRST    REMUPD          ;GO UPDATE REMOTE COUNT
        PUSHJ   P,UPCNT         ;GO RECALC COUNT
        JRST    ENDCAN          ;GO GIVE MESSAGE
;
;       UPDATE REMOTE COUNT
;
REMUPD: MOVE    AC1,TUSER+1     ;GET NODE NUMBER
        ANDI    AC1,777         ;GET PRI. LOC. NO.
        PUSHJ   P,UPDRM1        ;GO DO UPDATE
        JRST    ENDCAN          ;GO GIVE MESSAGE
;
;       COME HERE IF THE ENTIRE BUFFER HAS BEEN PROCESSED
;
ENDHLD:
        OUTSTR  [ASCIZ/
REQUEST PUT ON HOLD/]
        JRST    PROMPT          ;RETURN TO HOME
ENDCAN: MOVEI   AC,NOMORE
        PUSHJ   P,OUTLIN
        JRST    PROMPT          ;RETURN TO HOME
DELDON: OUTSTR  [ASCIZ/
FILE DELETED/]
        JRST    PROMPT
CANTDO: MOVEI   AC,NODOTH
        PUSHJ   P,OUTLIN
        JRST    PROMPT
DELDEF: EXP 10
        SIXBIT/DSK/
        XWD  DELIN
DELIN:  BLOCK 3
FILBLK:
DELBLK: BLOCK 4
NODOTH: ASCIZ/
CANT DO THAT/
NOMORE: ASCIZ/
REQUEST CANCELED/
;
;	LOCATION & NODE COMMANDS.  INTERMIXED FOR BREVITY
;	BECAUSE I'M TOO LAZY TO INVENT NAMES FOR EVERYTHING.
;

SETLC0:	 Pushj	P,UPCASE        ;Get pre blanks
SETLOC:	CAIN    AC,40           ;CHECK FOR BLANKS
          JRST  .-2             ;BYPASS PRE BLANKS
        CAIE    AC,77           ;CHECK FOR ?
          JRST  SETLC2          ;GO PROCESS NUMBER
        PUSHJ   P,LFPASS        ;SKIP REST OF INPUT
SETLC1:	MOVEI	AC,SETLMG	;GET ADDRESS OF MESSAGE
        PUSHJ   P,OUTLIN
        JRST    SETLC0          ;GO GET INPUT

SETLC2:	MOVEI	AC5,^D10	;Set Radix
        PUSHJ	P,RADNUM	;And go for number
	MOVEM	REQNUM,USTLOC	;Set Printer LOC specified
	SKIPN	AC1,REQNUM	;Check to see if we got one
	  PUSHJ	P,GETLOC	;Get current location
        MOVEM	AC1,USRLOC	;Set imagined printer location
	JRST	PROMPT		;Return home


SETND0:	 Pushj	P,UPCASE        ;Get pre blanks
SETNOD:	CAIN    AC,40           ;CHECK FOR BLANKS
          JRST  .-2             ;BYPASS PRE BLANKS
        CAIE    AC,77           ;CHECK FOR ?
          JRST  SETND2          ;GO PROCESS NUMBER
        PUSHJ   P,LFPASS        ;SKIP REST OF INPUT
SETND1:	MOVEI	AC,SETNMG	;GET ADDRESS OF MESSAGE
        PUSHJ   P,OUTLIN
        JRST    SETND0          ;GO GET INPUT

SETND2:	MOVEI	AC5,^D8		;Set Radix
        PUSHJ	P,RADNUM	;And go for number
	MOVEM	REQNUM,USTNOD	;Set node specified
	SKIPN	AC1,REQNUM	;Check to see if we got one
	  PUSHJ	P,GETNOD	;Get current node
        MOVEM	AC1,USRNOD	;Set imagined node
        PUSHJ	P,GETLOC	;Then get Printer associated with it
        MOVEM	AC1,USRLOC	;Set Printer Location
	JRST	PROMPT		;Return home

RADNUM:	SETZ    REQNUM,         ;ZERO STORAGE AREA
RADNM0:	CAIN    AC,15           ;CHECK FOR CR
	  PUSHJ	P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LINE FEED
	  POPJ	P,		;RETURN
	CAIL    AC,"0"          ;SEE IF LESS THAN ZERO
        CAILE   AC,"0"-1(AC5)	;SEE IF GREATER THAN RADIX
	  JRST  BADNUM          ;ILLEGAL NUMBER
	SUBI	AC,"0"		;Make it numeric
	IMULI	REQNUM,(AC5)	;Shift by proper radix
	ADD	REQNUM,AC	;Add it in
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    RADNM0          ;GO GET MORE

SETNMG:	Asciz \Enter your (pseudo) logged-in NODE NUMBER.
This may also change your printer location.  Use the
"LOCATION nn" command to set a specific printer location.
\
SETLMG:	Asciz \Enter PRINTER LOCATION NUMBER you want to set.
\

;
;       WHERE COMMAND.  PRINT OUT PRINTOUT LOCATION
;       ON ANY REQUEST THAT IS COMPLETED ONLY.
;       PRINT ONLY FOR OWNER AND SYS OPER
;
        GDCHL=2
        LSTREQ=6
        GANUUN=7
        STATUS=11
;
        PUSHJ   P,UPCASE        ;GET NEXT CHAR
WHERE:  CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;SKIP BLANKS
        CAIE    AC,"?"          ;CHECK FOR QUERRY
        JRST    WHERE2          ;GO GET NUMBER
        PUSHJ   P,LFPASS
WHERE1: MOVEI   AC,RQSTNO
        PUSHJ   P,OUTLIN
        JRST    WHERE-1         ;GO GET NUMBER
WHERE2: CAIN    AC,15           ;CR?
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;LF?
        JRST    WHERE1          ;GO ASK FOR NUMBER
        PUSHJ   P,GETNUM        ;GO GET REQ. NUM--was 2 lines below
        SETZM   OPNOUT          ; OPEN INPUT ONLY
        PUSHJ   P,INPMAP        ; GET MAP
        PUSHJ   P,URINFO        ;GO GET USER INFO
        MOVEM   10,HEAD         ;SAVE SUPERVISOR FLAG
WHERE3: MOVE    AC,LSTREQ       ;GO GET A REQUEST
        PUSHJ   P,SIXNUM        ;CHANGE IT
        MOVE    AC,AC1          ; NEED IT THERE
        PUSHJ   P,FINBNO        ; GET IT
        JRST    WHER10          ; HUH?
        PUSHJ   P,GETGD         ;BETTER READ IT THEN
        MOVE    AC,GDBUFF+2     ;GET PPN
        SKIPN   ,OPRSET         ;OPR CAN LOOK AT ANYONE
        CAMN    AC,GANUUN       ;SEE IF SAME PPN
        JRST    WHERE4          ;OK TO SEE, DO IT
        HLRZ    AC1,GANUUN      ;GET GAN OF REQUESTOR
        LSH     AC,-^D18        ;GET GAN OF REQUEST
        CAMN    AC,AC1          ;SEE IF SAME GAN
        SKIPN   HEAD            ;NON ZERO IS SUPERVISOR
        JRST    WHERE3          ;MUST BE BOTH, TRY SOME MORE
WHERE4: MOVE    STATUS,CURSTA   ;MOVE STATUS OVER
        CAIE    STATUS,%CANREQ  ;CANCELED?
        CAIGE   STATUS,%COMREQ  ;COMPLETED? OK LETS SEE
        JRST    WHERE3          ;NO, THEN NO SEE
        SKIPE   CALSPL
        JRST    WHERE9
        OUTSTR  [ASCIZ/FROM: /]
        HLRZ    AC1,GDBUFF+3    ;GET DATE
        PUSHJ   P,WDATE         ;PUT OUT DATE
        OUTSTR  [ASCIZ/? /]
        PUSHJ   P,YORN          ;GET Y OR N
        JRST    WHERE3          ;ON NO
;
;       HAVE RIGHT ONE, PUT OUT WHERE PRINTED
;
WHERE9:
        HRRZ    AC1,GDBUFF+4    ;GET PRI LOC.
        ANDI    AC1,777         ;KEEP IT
        MOVEM   AC1,FONADR      ;TURNS OFF SOME OUTPUT
;
;       SEE IF PRINTED AT SAME LOCATION (CENTER OR REMOTE)
;       IF NOT SAME, ASSUME PRINTED AT CENTER (LOC. 1)
;
        HRRZ    AC,GDBUFF+3     ; GET OPTIONS
        ANDI    AC,37           ;KEEP THEM
        MOVEM   AC,AC2          ;PUT IT AC2 ALSO
        LSH     AC,-3           ;KEEP WHERE PRINTED
        ANDI    AC2,7           ;KEEP WHERE TO PRINT
        CAME    AC,AC2          ;SEE IF SAME
        MOVE    AC1,SITENO      ;GET CENTER SITE NO.
;
        PUSHJ   P,PRIADR        ;GO PUT OUT LOCATION
        JRST    PROMPT          ;GO HOME
WHER10: MOVEI   AC,1            ;FLAGS TYPE OF MESSAGE
        MOVEM   AC,HDFLG        ;SETS FLAG
        SETOM   REPORT          ;INHIBITS OTHER MESSAGE
        JRST    CHKDON          ;GO GIVE MESSAGE
;
;       HERE FOR RUN COMMAND.  THIS COMMAND CAN ONLY BE EXECUTED
;       BY A FORTRAN CALL TO SPOOL
;
RUN:    SKIPN   CALSPL          ;SKIP IF FORTRAN TYPE CALL
        JRST    WHATCM          ;ELSE IT IS ILLEGAL
        SKIPA
RUNNAM: PUSHJ   P,UPCASE        ;GET A CHAR
        CAIN    AC,40           ;BLANK?
        JRST    .-2             ;SKIP BLANKS
        CAIE    AC,"("          ;USER NAME?
        JRST    RUNFIL          ;NO, GO GET FILE NAME
        PUSHJ   P,UPCASE        ;GET CHAR AFTER (
        MOVEI   AC5,^D12        ;MAX. ALLOWED FOR NAME
        SETZB   AC3,AC4         ;ZERO HOLDING AREA FOR USERNAME
        MOVE    AC1,[POINT 6,AC3] ;POINT TO STORAGE
RUNFL1: PUSHJ   P,RUNCHR        ;GET A CHAR
        JRST    WHATCM          ;ILLEGAL
        CAIN    AC,")"-40       ;END OF USERNAME
        JRST    RUNFL2          ;GO VALIDATE USERNAME
        PUSHJ   P,RUNSTO        ;GO SAVE NAME
        JRST    RUNFL1          ;GET REST OF IT
RUNFL2: MOVEI   AC,AC3          ;ADDRESS OF NAME
        PUSHJ   P,VALPPN        ;GO VALIDATE IT
        MOVE    AC,GETGAN+1     ;GET PPN
        MOVEM   AC,LOGOUT+4     ;STORE FOR RUN UUO
        JRST    RUNNAM          ;GO GET FILE NAME
RUNFIL: MOVSI   AC1,'DSK'       ;FOR RUN UUO
        MOVEM   AC1,LOGOUT      ;SAME
        SETZM   ,LOGOUT+1       ;ZERO FILE NAME AREA
        SETZM   ,LOGOUT+2       ;SAME
        MOVEI   AC5,6           ;MAX ALLOWED FOR FILE NAME
        MOVE    AC1,[POINT 6,LOGOUT+1] ;POINT STORAGE OF NAME
RUNAM1: PUSHJ   P,RUNCHR        ;GET A CHAR
        JRST    GORUN           ;GO RUN WITH WHAT WE HAVE
        CAIN    AC,"."-40       ;FILE SEPERATOR?
        JRST    RUNEXT          ;GO GET EXTENSION
        PUSHJ   P,RUNSTO        ;GO STOR CHAR
        JRST    RUNAM1          ;GET REST OF NAME
RUNEXT: MOVEI   AC5,3           ;MAX ALLOWED FOR EXT
        MOVE    AC1,[POINT 6,LOGOUT+2] ;POINT STORAGE OF EXT.
        PUSHJ   P,UPCASE        ;GET FIRST CHAR OF EXT.
RUNEX1: PUSHJ   P,RUNCHR        ;GET EXT CHAR
        JRST    GORUN           ;GO RUN WITH WHAT WE HAVE
        PUSHJ   P,RUNSTO        ;GO STORE IT
        JRST    RUNEX1          ;GET REST OF EXT
GORUN:  RELEAS  16,             ;RELEASE INPUT FILE
        RELEAS  17,             ;RELEASE AND CLOSE OUTPUT FILE
        HRRZI   AC,LOGOUT       ;PREPARE TO DO RUN UUO
        RUN     AC,             ;DO IT
        OUTSTR  [ASCIZ/
SPOOL RUN CMND. DIDNT WORK/]
        JRST    LEAVE           ;EXIT PROGRAM
RUNCHR: CAIN    AC,15           ;TERMINATOR
        PUSHJ   P,UPCASE        ;GET NEXT TERMINATOR
        CAIN    AC,12           ;TERMINATOR?
        POPJ    P,              ;YES THEN RETURN
        SUBI    AC,40           ;REDUCE TO SIXBIT
        AOS     (P)             ;ADJUST RETURN
        POPJ    P,              ;RETURN
RUNSTO: SOSL    ,AC5            ;EXCEED ALLOWANCE?
        IDPB    AC,AC1          ;NO, THEN SAVE IT
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        POPJ    P,
;
;       COME HERE TO PRINT FILES AS SPECIFIED BY THE OPERATOR.
;       VARIOUS MEANS OF PRINTING FILES IS BY REQUEST NUMBER,
;       BY FORM OR BY ALL (PRINT ALL FORMS)
;
;       ACCUMULATOR ASSIGNMENTS
;
        AC= 0                   ;BASIC ACCUMULATORS
        AC1= 1                  ;
        AC2= 2                  
        AC3= 3                  ;
        AC4= 4                  ;
        AC5= 5                  ;
        REQNUM= 6               ;HOLDS THE REQUEST NUMBER IF USED
        PPRPTS= 7               ;HOLDS PAPER AND PARTS
                                ;LEFT HALF = PAPER, RIGHT HALF = PARTS
        BUFADR= 10              ;HOLDS ADDRESS OF BUFFER OF INPUT
        COUNT= 11               ;COUNTS TOTAL DIFFERENT PARTS PAPER
        NUMFIL= 12              ;HOLD NUM. FILES
        COPYS= 13               ;NO COPYS TO MAKE OF EACH FILE
        TOTFIL= 14              ;TOTAL NO. FILES TO BE PRINTED
        GDCHL= 2                ;CHANNEL FOR INPUT
        FDCHL= 1                ;CHANNEL FOR FD TABLE
        FILCHL= 3               ;CHANNEL FOR READING IN FILES
        PCHL= 4                 ;CHANNEL FOR LPT
;
;       COME HERE TO BEGIN PRINTING THE FILES
;
DIFSEX: 0
PRINT:  SETZM   ,BLKPTR         ;ZERO BLK POSITION POINTER
        SETZM   OPNOUT
        MOVEM   AC,SAVEAC#
        PUSHJ   P,INPMAP        ; GET MAP (INPUT ONLY)
        MOVE    AC,SAVEAC       
        SKIPA
PRTCON: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS PREBLANKS
        CAIE    AC,77           ;CHECK FOR QUERRY
        JRST    GOTPRI          ;GO PROCESS COMMAND
        OUTSTR  ASKITM          ;ENTER ONE OF THE FOLL. ITEMS
        OUTSTR  REQNJB          ;ASK FOR REQ. NUM OF JOB
        OUTSTR  WRDALL          ; 2. THE WORD ALL
        OUTSTR  ALLPRO          ;ALL PENDING OR HOLD WILL BE PROC.
        OUTSTR  WRDFRM          ;FORM FOLLOWED BY TYPE
        OUTSTR  AFMPRO          ;ALL THOSE FORMS WILL BE PROC.
        SKIPN   ,REMSET         ;SKIP IF THIS A REMOTE USER
        OUTSTR  [ASCIZ/
4.  THE WORD 'TAPE'.
    REQUESTS LOCATED ON THE TAPE WILL BE PRINTED./]
        OUTSTR  DEFALT          ;TELL WHAT DEFALT IS
        OUTSTR  ETRAGN          ;ASK FOR CORRECT ITEM
        PUSHJ   P,LFPASS
        JRST    PRTCON          ;GO GET AN ANSWER
;
GOTPRI: CAIN    AC,"R"          ;CHECK FOR REMOTE COMMAND
        PUSHJ   P,REMCMD        ;CHECK REMOTE COMMAND
        SKIPA                   ;SKIP READ INPUT
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
GOTPR1: CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
GOTPR3: CAIN    AC,"A"          ;CHECK FOR ALL COMMAND
        JRST    APRINT          ;GO DO ALL COMMAND
        CAIN    AC,"F"          ;CHECK FOR FORM COMMAND
        JRST    FPRINT          ;GO DO FORM COMMAND
        CAIN    AC,"T"          ;CHECK FOR TAPE OR TEST COMMAND
        JRST    TCMND           ;CHECK FURTHER
        CAIN    AC,15           ;CHECK FOR CARRIAGE RETURN
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LINEFEED
        JRST    ALLPNT          ;DEFAULT TO ALL COMMAND
;
;       AT THIS POINT WE WILL ASSUME THE USER IS SPECIFYING
;       BY REQUEST NUMBER.  PRINT THE ASSOCIATED FILES WITH
;       THAT REQUEST IF IT EXISTS
;
        PUSHJ   P,GETNUM        ;GO GET REQ. NUM
        CAIN    AC,12           ;LF = PRINT WHOLE REQ.
        JRST    PRENXT          ;GO PRINT WHOLE REQ.
        SETOM   ,REPORT         ;SHOWS DO 1 FILE OF WHOLE REQ.
        JRST    REQFNM+1        ;GO DO IT
PRENXT: PUSHJ   P,HOWPNT        ;SEE HOW TO PRINT
NXTREQ: MOVE    AC,REQNUM               ; NUMBER WE LOOK FOR
        PUSHJ   P,SIXNUM                ; CHANGE TO REAL NUMBER MINUS SYSTEM
        MOVE    AC,AC1                  ; HAS TO BE IN ZERO
        PUSHJ   P,FINBNO                ; SEE IF IN MAP
        JRST    ERROR3                  ; SORRY CHARLIE
        PUSHJ   P,GETGD                 ; NOW WE HAVE IT
        SETZM   DIFSEX                  ;0 DIFF SEX FLAG
        PUSHJ   P,SAMSEX        ;SEE IF USER AND GD SAME SEX
        JRST    OVRIDE          ;SEE IF THIS OPER OVERRIDE
NXTRQ1: MOVE    AC5,CURSTA      ;RIGHT JUSTIFY STATUS , WELL GET IT
        CAIE    AC5,%TRAREQ     ;CANT PRINT TRANSFER REQ.
        CAIN    AC5,%CANREQ     ;SEE IF CANCELED
        JRST    NXTREQ          ;IGNORE CANCELED REQUESTS
;
;       DROP DOWN TO HERE IF WE HAVE A GD THAT MATCHES THE OPERS REQ.
;
        PUSHJ   P,RITONE        ;SEE IF HAVE RIGHT ONE
        JRST    NXTREQ          ;NO, GO GET NEXT ONE
	PUSHJ	P,KANACK	;DO KATAKANA CHECKS.
	JRST	PROMPT		;NOT OK TO PROCEED.
        JRST    PRINM3          ;YES, THEN GO PROCESS IT
;
;       COME HERE IF REQ. NO. DIFFERENT SEX THAN USER
;       SEE IF THIS OPER, ONLY HE CANT PRINT REMOTE AT CENTER
;
OVRIDE: SKIPN   ,OPRSET         ;SKIP IF THIS THE OPER
        JRST    NXTREQ          ;NOT OPER, GO GET NEXT REQ.
        SETOM   ,DIFSEX         ;SHOWS OPER DOING REMOTE AT CENTER
        JRST    NXTRQ1          ;GO CHECK REQUEST
;
;       ASK OPER IF THIS IS CORRECT ONE
;
RITONE: OUTSTR  [ASCIZ/FOR: /]
        DMOVE   AC1,GDBUFF+27   ;GET USERNAME
        PUSHJ   P,GETNAM        ;GO GET NAME
        OUTSTR  [ASCIZ/ ON /]
        HLRZ    AC1,GDBUFF+3
        PUSHJ   P,WDATE         ;GO PUT OUT DATE
        OUTSTR  [ASCIZ/? /]
YORN:   PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR PREBLANKS
        JRST    .-2             ;BYPASS BLANKS
        PUSHJ   P,LFPASS
        CAIN    AC,"N"          ;NO?
        POPJ    P,              ;THEN RETURN
        CAIE    AC,"Y"          ;YES?
        JRST    YESONO          ;TELL WHAT WE WANT
        AOS     (P)             ;ADJUST FOR YES
        POPJ    P,              ;RETURN FOR YES
YESONO: OUTSTR  [ASCIZ/
ANSWER Y OR N: /]
        JRST    YORN
RESTOR: OUTSTR  [ASCIZ/
FILES RESTORED TO SPOOL? /]
        PUSHJ   P,YORN  ;GET YES OR NOW
        JRST    PROMPT  ;NO
        SETOM   RESFLG  ;SET FLAG
        POPJ    P,              ;RETURN
PRINM3: PUSHJ   P,RELGD         ;RELEASE THE CHANNEL JUST USED
        MOVE    AC5,CURSTA      ;RIGHT JUSTIFY STATUS
        CAIN    AC5,%COMDEL     ;CHECK FOR FILES DELETED
        PUSHJ   P,RESTOR        ;SEE IF FILES RESTORED
        CAIGE   AC5,%REQPRI     ;SEE IF NOT ON PENDING OR HOLD
        JRST    GOPROC          ;GO PROCESS THIS REQUEST
PRIASK: OUTSTR  [ASCIZ/
THIS REQUEST COMPLETED OR INPROCESS/]
        PUSHJ   P,DOYOU         ;ASK IF WANT TO PRINT
        JRST    PROMPT          ;ON NO
;
;       QUERRY THE OPERATOR FOR CORRECT PAPER IN PRINTER
;
GOPROC: SKIPE   OPRSET          ;SKIP IF REMOTE OPER
        SKIPN   ,DIFSEX         ;SKIP IF CENTER PRINT OF REMOTE REQ.
        JRST    GOPRO3          ;BR. IF NOT
        OUTSTR  [ASCIZ/
THIS REQUEST IS FOR A /]
	PUSH	P,AC		;save the ac
	MOVE	AC,GDBUFF+3	;get status word
	ANDI	AC,7		;mask off all but last 3 bits
	CAILE	AC,1		;skip if center
	OUTSTR [ASCIZ /REMOTE/]
	CAIGE	AC,2		;skip if this is a remote request
	OUTSTR	[ASCIZ /CENTER/]
	POP	P,AC		;restore ac
        PUSHJ   P,DOYOU         ;ASK IF WANT TO PRINT
        JRST    PROMPT          ;NO GO
;
;       PROCESS THE REQUEST
;
GOPRO3: SKIPG   FULLPR          ;SKIP IF HAVE FULL PRINTER
        SKIPN   FULLCH          ;SKIP IF WANTS FULL PRINTER
        JRST    GOPRO4          ;FULL PRINTER OR DOESNT CARE
        OUTSTR  [ASCIZ/
REQUEST NEEDS FULLCASE PRINTER/]
        PUSHJ   P,DOYOU         ;ASK IF WANTS TO PRINT
        JRST    PROMPT          ;NOPE!
GOPRO4: MOVEI   BUFADR,GDBUFF+3 ;POINT TO SWITCHES
        PUSHJ   P,SWITCH        ;GO PUT OUT SWITCHES
        PUSHJ   P,OPTION        ;GO GET OPTIONS HE WANTS
        PUSHJ   P,GETPPR        ;GET REQ. PAPER/PARTS
        MOVE    PPRPTS,AC       ;PUT IN CORRECT PLACE
        PUSHJ   P,SCAN1         ;GO ASK OPER FOR PAPER
;
;       GO PROCESS THE FILE
;
        PUSHJ   P,PRNTGD        ;GO PRINT REQ.
        MOVE    AC,CURSTA       ;GET  STATUS
        CAIL    AC,%TAPCOM      ;SKIP IF DO ALL STUFF
        JRST    DOCOPY          ;FOR COMPLETED, JUST HARDCOPY
REGREQ: PUSHJ   P,ACTREC        ;GO DO ACCT
        PUSHJ   P,COMPLT        ;FLAG AS COMPLETED
        SKIPN   ,REMPNT         ;SKIP IF THIS REMONT PRINT
        JRST    ONECEN          ;GO DO CENTER UPDATE
CENREM: PUSHJ   P,UPDREM        ;UPDATE REMOTE CNT.
        JRST    DOCOPY          ;GO DO HARDCOPY
ONECEN: SKIPE   ,DIFSEX         ;SKIP FOR CENTER PRINT AT CENTER
        JRST    CENREM          ;BR. FOR REMOTE PRINT AT CENTER
        PUSHJ   P,UPCNT         ;ELSE UPDATE SPLCNT
DOCOPY: SKIPE   RESFLG          ;SKIP IF NOT A REPRINT OF RESOTED FILES
        PUSHJ   P,COMPLT        ;SET FLAG SO FILES WILL BE DELETED
        PUSHJ   P,HRDCPY        ;NOW DO HARDCOPY
        JRST    PROMPT          ;RETURN TO COMMANDER
;
;       GO READ BLOCK, FIND MATCHING PAPER AND PARTS, ASK OPER
;       FOR CORRECT NO. PAGES AND PROCESS THE REQUEST
;
MORFRM: PUSHJ   P,SCAN          ;READ BLK, ASK OPER FOR PAPER
	JUMPL   AC,ENDPPR       ;NO MORE REQUEST USING THAT PAPER
        PUSHJ   P,SAMSEX        ;SEE IF SAME SEX
        JRST    MORFRM          ;NO, THEN GO GET NEXT REQ.
	PUSHJ	P,KANACK	;DO KATAKANA CHECKS.
	JRST	MORFRM		;NOT OK TO PROCEED.
        HLRZ    AC,PPRPTS       ;GET TYPE OF PAPER USED
        CAIN    AC,4            ;SUB TO CHECK FOR SPECIAL
	  PUSHJ	P,SCAN1         ;ADD PAGES AND GET CONFIRMATION
	PUSHJ   P,PTRDEF        ;GET PRINT DEF.
        PUSHJ   P,PRNTGD        ;PRINT REQ.
        PUSHJ   P,ACTREC        ;DO ACCT
        PUSHJ   P,COMPLT        ;FLAG AS COMP.
        SKIPE   ,REMPNT         ;SKIP FOR CENTER PRINT
        PUSHJ   P,UPDREM        ;UPDATE REMOTE CNT.
        PUSH    P,PPRPTS
        PUSHJ   P,HRDCPY        ;DO HARDCOPY
        POP     P,PPRPTS
        JRST    MORFRM          ;GO DO NEXT REQUEST USING SAME PAPER

ENDPPR:	SKIPN   ,REMPNT         ;SKIP IF THIS REMOTE PRINT
        PUSHJ   P,UPCNT         ;GO UPDATE CENTER CNT.
	POPJ	P,		;[110] RETURN TO CALLER

;
;       ASK IF FULLCASE PRINTER
;
ASKFULL: SKIPE  FULLPR          ;SKIP IF HAVENT ASKED
        POPJ    P,              ;RETURN IF HAVE
        OUTSTR  [ASCIZ/
IS THIS A FULLCASE PRINTER? /]
        PUSHJ   P,YORN          ;GET YES OR NO
        SETOB   AC,FULLPR       ;SHOW NO
        CAIN    AC,"Y"          ;SEE IF SAID YES
        MOVEM   AC,FULLPR       ;SHOWS SAID YES
        POPJ    P,              ;RETURN
;
;       PUT OUT QUESTION-DO YOU WANT TO PRINT IT
;
DOYOU:  OUTSTR  [ASCIZ/
DO YOU WANT TO PRINT IT? /]
        PUSHJ   P,YORN          ;GET YES OR NO
        POPJ    P,              ;ON NO
        AOS     (P)             ;ON YES
        POPJ    P,              ;RETURN
;
;       COME HERE FOR A REMOTE COMMAND
;
REMCMD: MOVEI   AC,22           ;TO CHECK REMOTE
        MOVEI   12,CANT         ;FOR ERROR EXIT ADDRESS
        PUSHJ   P,VRFY1         ;GO CHECK REMOTE
        SETOM   ,REMDSR         ;SHOWS REMOTE COMMAND ENTERED
        MOVE    AC,AC2          ;GET REMOTE TERMINATOR
        CAIE    AC,40           ;LOOK FOR BLANKS
        POPJ    P,
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    .-3             ;GO CHECK
;
;       COME HERE TO DETERMINE IS USER IS REMOTE OR NOT
;       AND SEIZE THE CORRECT PRINTER.  ALSO FLAG USER AS REMOTE
;       BY ASKING PASSWORD NAME IF NECESSARY.
;
HOWPNT: SKIPE   ,REMDSR         ;SEE IF REMOTE CMND. ISSUED
        JRST    HOWPN1          ;JUMP IF REMOTE SPECIFIED
        SKIPN   ,OPRSET         ;SKIP IF THIS OPER
        JRST    HOWPN2          ;GO GET USER PASSWORD FOR REMOTE
;
;       THIS IS CENTER PRINT, GET PRINTER
;
        OPEN    PCHL,PDEF       ;GET PRINTER
        JRST    PWHY            ;CANT GET IT
        OUTBUF  PCHL,4          ;SET BUFFER SIZE
HOWPN4:	OPEN    FILCHL,FILDEF   ;GET INPUT FILE CHANNEL
        JRST    ERROR1          ;CANT GET IT
        PUSHJ   P,ASKFULL       ;ASK IF FULLCASE PRINTER
        POPJ    P,
;
;       REMOTE COMMAND SET, SEE IF TO ASK FOR PASSWORD
;       GET REMOTE PRINTER TYPE AND CHECK PORT NUMBER
;
HOWPN1: SKIPE   ,OPRSET         ;SKIP IF NOT OPER
        JRST    HOWPN3          ;FOR OPER, NO CHECK REMOTE USER
HOWPN2: SKIPE   ,REMSET         ;SKIP TO ASK FOR PASSWORD
        JRST    HOWPN3          ;REMOTE USER, GO ON
;
;       COME HERE TO GO GET PASSWORD LICENSE FOR REMOTE
;
        HRLI    AC,6            ;PREPARE TO SAVE REG.
        HRRI    AC,RECORD       ;WHERE TO SAVE
        BLT     AC,RECORD+11    ;SAVE REG 6-17
        PUSHJ   P,GETLIC-1      ;GO GET LICENSE
        HRLI    AC1,RECORD      ;RESTORE REG.
        HRRI    AC1,6           ;RESTORE 6-17
        BLT     AC1,17          ;RESTORE THEM
        SETO    AC1,            ;TO CHECK RESPONSE FROM LIC. GETTER
        CAMN    AC,AC1          ;SKIP IF LIC. RETURNED
        JRST    PRMPRN          ;SOMETHING BAD HAPPENED
;
        TLNN    AC,40           ;SKIP FOR REMOTE LICENSE
HOWPN5: JRST    [OUTSTR  [ASCIZ/
NO REMOTE LICENSE/]
                JRST    PRMPRN]
;
;       USER HAVE REMOTE ABILITY, FLAG AS REMOTE USER
;
        SETOM   ,REMSET         ;SHOWS REMOTE USER
        JRST    HOWPNT          ;START CHECKING AGAIN
;
;       CHECK PORT NO. AND GET PRINTER TYPE
;
HOWPN3: SETOM   ,REMPNT         ;SET AS REMOTE PRINT
        PUSHJ   P,TYPNTR        ;GET REMOTE PRINTER
        JRST    HOWPN4          ;PORT 1 OR 0 ARE OK
;
;       COME HERE FOR PRINTING THE 'ALL' COMMAND
;       THIS WILL MAKE A TABULATION OF ALL THE DIFFERENT TYPES
;       OF PAPER AND ASK THE OPER WHICH HE WISHES TO PRINT OUT
;
APRINT: PUSHJ   P,UPCASE        ;GET NEXT CHAR
        CAIE    AC,"L"          ;CHECK FOR L IN ALL
        JRST    APNTCK          ;GO CHECK FOR TERMINATORS
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,"L"          ;CHECK FOR LAST L IN ALL
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
APNTCK: CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
        CAIN    AC,15           ;LOOK FOR TERMINATOR
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;SKIP FOR TERMINATOR
        JRST    CANT            ;CANT UNDERSTAND COMMAND
;
;       DO A TABULATION OF TOTAL PAGES NEEDED FOR ALL TYPES OF PAPER
;
ALLPNT: PUSHJ   P,HOWPNT        ;SEE WHERE TO PRINT
        SETZB   AC3,COUNT1      ;ZERO BLK COUNTER AND DIFF. TYPE COUNTER
TABNXT: PUSHJ   P,NEXTGD        ;GET INFO ABOUT NEXT GD
        JRST       TABOUT       ;NO MORE REQUESTS TO TABULATE
        MOVE    AC,CURSTA       ;GET STATUS
        CAIE    AC,%REQPEN      ;SKIP ONLY IF PENDING
        JRST    TABNXT          ;NOT EITHER, GET NEXT REQUEST
        PUSHJ   P,GETGD         ; LOOKS LIKE WE LOOK AT GD
        PUSHJ   P,SAMSEX        ;SEE IF SAME LOCATION
        JRST    TABNXT          ;NO, THEN GET NEXT REQ.
        SKIPG   FULLPR          ;SKIP IF FULL PRINTER
        SKIPN   FULLCH          ;SKIP IF WANTS FULL PRINTER
        SKIPA                   ;EITHER FULL PRINTER OR DOESNT CARE
        JRST    TABNXT          ;REQ. WANT FULLCH, BUT PRINTER ISNT
        MOVE    AC2,PAGESP      ;GET PAGES SPOOLED
        MOVE    AC1,FILESP      ;GET FILES SPOOLED
        IMULI   AC1,3           ;ALLOW 3 PAGES/FILE
        ADDI    AC1,5           ;ALLOW 5 PAGES FOR SLOOP OVER
        ADD     AC2,AC1         ;TOTAL PAGES FOR THAT REQUEST
        PUSHJ   P,GETPPR        ;GET PAPER PARTS
        HLRZ    AC1,AC          ;GET PAPER
        CAIN    AC1,4           ;CHECK FOR SPECIAL
        HRRI    AC,1            ;CHANGE INDEXER
        SUBI    AC1,1           ;CREATE PARTIAL PAPER INDEX
        IMULI   AC1,4           ;CREATE PAPER INDEX
        HRLI    AC,0            ;ZERO OUT PAPER FROM PARTS
        SUBI    AC,1            ;CREATE PARTS INDEX
        ADD     AC1,AC          ;POINTER= (PAPER-1)*4+(PART-1)
        MOVE    AC,PTYPE(AC1)   ;GET CONTENTS OF ARRAY ELEMENT
        JUMPN   AC,ADDON        ;BR. IF SOMETHING THERE ALREADY
        AOS     COUNT1          ;NEW TYPE NOW PROCESSED YET
        MOVE    AC3,BLKPTR      ;GET BLK POINTER TO REQ.
        HRLM    AC3,PTYPE(AC1)  ;SAVE BLOCK POSITION OF THIS PAPER
ADDON:  ADDM    AC2,PTYPE(AC1)  ;ADD NO. PAGES OF THIS REQ.
        JRST    TABNXT          ;GO GET NEXT REQUEST
;
;       SCAN PTYPE AND TYPE OUT AMOUNTS AND PAPER NEEDED
;
TABOUT: MOVE    COUNT,COUNT1
        JUMPN   COUNT,TABCON    ;BR. IF THERE IS SOMETHING TO DO
        OUTSTR  [ASCIZ/
NO REQUESTS TO PRINT/]
        JRST    PROMPT          ;RETURN TO COMMANDER
TABCON: MOVE    COUNT,COUNT1    ; SEE HOW MANY
         CAIE   COUNT,1         ;SEE IF ONLY ONE TYPE PAPER TO DO
        JRST    TABMNY          ;GO DO MANY TYPES
;
;       COME HERE WHEN ONLY 1 TYPE LEFT TO DO.
;       FIND OUT WHICH ONE IS NEEDED AND TELL OPER TO
;       PUT THAT PAPER ON THE PRINTER
;
ONELFT: SETZ    AC1,            ;ZERO INDEXER
        SKIPN   ,PTYPE(AC1)     ;LOOK FOR ONE THAT IS NOT ZERO
        AOJA    AC1,.-1         ;GO LOOK AT NEXT ENTRY
;
;       DETERMINE WHICH PAPER TO MOUNT
;
        MOVE    AC3,AC1         ;SAVE INDEX
        IDIVI   AC1,4           ;CREATING INDEX
        ADDI    AC1,1           ;CREATE PAPER TYPE
        HRL     PPRPTS,AC1      ;STORE PAPER TYPE
        CAIE    AC1,4           ;CHECK FOR SPECIAL
        ADDI    AC2,1           ;CREATE PART TYPE
        HRR     PPRPTS,AC2      ;STORE PARTS
SETPTR: HLRZ    AC1,PTYPE(AC3)  ;GET BLOCK POINTER
        HRRZ    AC,PTYPE(AC3)   ;GET NO. PAGES NEEDED
        SETZM   ,PTYPE(AC3)     ;ZERO ENTRY
        CAIE    AC3,14          ;SKIP IF DOINT SPECIAL
        PUSHJ   P,SCAN2         ;GET CONFRMATION
	PUSHJ	P,MORFRM	;[110] PROCESS PRINTING TILL NONE LEFT
;
;       COME HERE IF THERE ARE NO MORE REQUEST OF THAT
;       TYPE PAPER AND PARTS TO PROCESS
;
        MOVE    COUNT,COUNT1
        SOJLE   COUNT,PROMPT    ;BR. IF NO MORE TO DO
        MOVEM   COUNT,COUNT1    ;BR. IF NO MORE TO DO
        CAIGE   COUNT,2         ;SEE IF MORE THAN 2 DIFF. TYPE PAPER
        JRST    ONELFT          ;BR. IF ONLY ONE IS LEFT
;
;       MORE THAN ONE TYPE OF FORMS LEFT- PRINT OUT TABULATION
;
TABMNY: SETZ    AC5,            ;ZERO INDEXER
        OUTSTR  [ASCIZ/
TOTAL REQUIREMENTS ARE: /]
        CAILE   AC5,24          ;SEE IF ALL FORMS PROCESSED
        JRST    FRMAGN          ;BR. IF ALL REQUEST COMPLETED
        SKIPN   ,PTYPE(AC5)     ;SEE IF ENTRY IS ZERO
NXTSIZ: AOJA    AC5,.-3         ;GO CHECK NEXT ENTRY
;
;       PRINT OUT PAPER,PARTS AND TOTAL PAGES NEEDED
;
        MOVE    AC,AC5          ;SAVE INDEX
        IDIVI   AC,4            ;CREATING PARTS PER PAPER
        ADDI    AC,1            ;SHOWS CORRECT TYPE OF PAPER
        CAIN    AC,1            ;CHECK FOR SMALL
        OUTSTR  [ASCIZ/
SMALL  -/]
        CAIN    AC,2            ;CHECK FOR LARGE PAPER
        OUTSTR  [ASCIZ/
LARGE  -/]
        CAIN    AC,3            ;CHECK FOR TTY PAPER
        OUTSTR  [ASCIZ/
TTY    -/]
        CAIN    AC,4            ;CHECK FOR SPECIAL PAPER
        OUTSTR  [ASCIZ/
SPECIAL       ----/]
        CAIN    AC,5
        OUTSTR  [ASCIZ/
SMALL WHITE       /]
        CAIN    AC,6
        OUTSTR  [ASCIZ /
LARGE WHITE       /]
        CAILE   AC,4            ;CHECK FOR SPECIAL
        JRST    NOPRTS          ;BR. IF SPECIAL PAPER
        OUTCHI  61(AC1)         ;PUT OUT NO. PARTS
        OUTSTR  [ASCIZ/ PART----/]
NOPRTS: HRRZ    AC,PTYPE(AC5)   ;GET TOTAL NO. PAGES
        PUSHJ   P,BINDEC        ;PUT OUT NO. PAGES
        OUTSTR  [ASCIZ/ PAGES/]
        JRST    NXTSIZ          ;GO GET REST OF TABULATION
;
;       ASK OPERATOR WHICH TYPE OF PAPER/PARTS HE WANTS TO DO
;
FRMAGN: OUTSTR  [ASCIZ/
WHAT TYPE OF FORM DO YOU WANT TO PRINT? /]
        MOVEI   12,NOTFRM       ;ERROR RETURN ADDRESS
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS PRE BLANKS
        PUSHJ   P,ACTFRM        ;GET PAPER PARTS
        MOVE    AC,PPRPTS       ;GET PAPER/PARTS OPER WANTS TO PRINT
        HLRZ    AC1,AC          ;PUT PAPER IN AC1
        CAIN    AC1,4           ;CHECK FOR SPECIAL PAPER
        HRRI    AC,1            ;CHANGE INDEXER FOR SPECIAL
        SUBI    AC,1            ;PREPARE POINTER FOR PARTS
        SUBI    AC1,1           ;PREPARE POINTER FOR PAPER
        IMULI   AC1,4           ;CREATE POINTER FOR PAPER
        HRLI    AC,0            ;ZERO PAPER FROM PARTS
        ADD     AC1,AC          ;POINTER= (PAPER-1)*3+PARTS-1
        HLRZ    AC,PTYPE(AC1)   ;GET VALUE FOR THAT TYPE PAPER/PARTS
        JUMPE   AC,NOREQS       ;THERE ARE NO REQUEST FOR THAT P/P
        HLRZ    AC,PPRPTS       ;GET PAPER TYPE
        CAIN    AC,4            ;CHECK FOR SPECIAL
        HRRI    PPRPTS,0        ;SET TO CORRECT INDICATOR
        MOVE    AC3,AC1         ;REPOSITION POINTER
        JRST    SETPTR          ;GO PROCESS REQUEST TO THAT P/P
;
;       NO REQUEST EXIST FOR THAT TYPE PAPER/PARTS
;
NOREQS: OUTSTR  [ASCIZ/
NO MORE REQUESTS FOR THAT TYPE PAPER/]
        JRST    FRMAGN          ;GO ASK OPR AGAIN
NOTFRM: OUTSTR  [ASCIZ/
FORMS ARE SMALL, LARGE, TTY OR SPECIAL/]
        PUSHJ   P,LFPASS
        JRST    FRMAGN          ;GO ASK OPERATOR AGAIN

;
;       COME HERE TO PRINT BY FORM ONLY
;
FPRINT:  MOVEI  12,CANT         ;ERROR RETURN ADDRESS
        MOVEI   AC,20           ;TO CHECK FORM COMMAND
        PUSHJ   P,VRFY1 ;VERIFY CMD
        MOVE    AC,AC2          ;GET TERMINATOR
        CAIE    AC,40           ;CHECK FOR BLANK
        JRST    .+3             ;NOT BLANK, GO ON
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    .-3             ;GO CHECK NEXT CHARACTER
        PUSHJ   P,ACTFRM        ;GET PAPER-PARTS
        PUSHJ   P,HOWPNT        ;SEE WHERE TO PRINT
        HLRZ    AC,PPRPTS       ;SEE IF DOING SPECIAL PAPER
        CAIN    AC,4            ;CHECK FOR SPECIAL PAPER
        JRST    FRMOLY          ;BR. IF SPECIAL
        SETZB   AC3,COUNT1      ;ZERO BLK AND TOTAL PAGE COUNTER
FMSCAN: PUSHJ   P,SCAN          ;FIND MATCHING PAPER-PARTS
        JUMPN   AC,FMCONN       ;DONE WITH TABULATION, GO ON
        PUSHJ   P,SAMSEX        ;SEE IF SAME SEX
        JRST    FMSCAN          ;NO, THEN GET NEXT REQ.
        SKIPN   ,COUNT1         ;SEE IF COUNT CHANGED YET
        MOVE    AC4,BLKPTR      ;SAVE CORRECT BLK POSITION
        MOVE    AC,FILESP       ;GET NO FILES SPOOLED
        IMULI   AC,3            ;ALLOW 3 PAGES PER FILE
        ADDI    AC,5            ;5 PAGES PER REQUEST
        MOVE    AC1,PAGESP      ;GET NO. PAGES SPOOLED
        ADD     AC,AC1          ;TOTAL PAGES THIS REQUEST
        ADD     AC,COUNT1       ;TOTAL OF PAGES THIS PAPER
        MOVEM   AC,COUNT1       ;SAVE     PAGES THIS PAPER
        JRST    FMSCAN          ;GO GET NEXT REQUEST
FMCONN: SKIPN   COUNT1          ;BR. IF NO FILES TO DO
        JRST    FRMDON          ;BR. IF NO FILES TO DO
        MOVE    AC,COUNT1       ;GET NO. PAGES TO PRINT
        PUSHJ   P,SCAN2         ;PUT OUT PAGES NEEDED
FRMOLY: PUSHJ   P,MORFRM        ;[110] GO READ REQUESTS
FRMDON:	OUTSTR  [ASCIZ/
NO MORE REQUESTS FOR THAT TYPE PAPER/]
        JRST    PROMPT          ;RETURN TO COMMANDER

;
;       PURPOSE IS TO GET OR ASK THE OPER THE TYPE OF PAPER
;       AND PARTS HE WANTS TO PRINT
;
ACTFRM: CAIN    AC,15           ;CHECK FOR CARRIAGE RETURN
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LINEFEED
        JRST    FRMQRY          ;SAME
        CAIN    AC,"L"          ;CHECK FOR LARGE PAPER REQUEST
        JRST    LGEPNT          ;GO PROCESS LARGE COMMAND
        CAIN    AC,"T"          ;CHECK FOR TTY REQUEST
        JRST    TTYPNT          ;GO PROCESS TTY REQUEST
        CAIE    AC,"S"          ;CHECK FOR SMALL OR SPECIAL
        JRST    @12             ;ERROR RETURN
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,"M"          ;CHECK FOR SMALL COMMAND
        JRST    SMLPNT          ;GO PROCESS SMALL COMMAND
        CAIE    AC,"P"          ;CHECK FOR SPECIAL COMMAND
        JRST    @12             ;CANT UNDERSTAND COMMAND
;
;       PROCESS SPECIAL COMMAND
;
        MOVEI   AC,13           ;SHOWS TO CHECK SPECIAL COMMAND
        PUSHJ   P,VRFY1         ;VERIFY COMMAND
        HRLZI   PPRPTS,4        ;SET UP SPECIAL PARTS
        POPJ    P,              ;RETURN
;
;       LARGE PAPER REQUEST
;
LGEPNT: MOVEI   AC,10           ;CHECK LARGE COMMAND
        PUSHJ   P,VRFY1         ;GO VERIFY CMND
        HRLI    PPRPTS,2        ;LARGE TYPE PAPER
        JRST    CKPTS           ;GO GET PARTS
;
;       TTY PAPER REQUEST
;
TTYPNT: MOVEI   AC,12           ;CHECK TTY COMMAND
        PUSHJ   P,VRFY1         ;VERIFY CMND
        HRLI    PPRPTS,3        ;TTY PAPER
        JRST    CKPTS           ;GO GET PARTS
;
;       SMALL PAPER REQUEST
;
SMLPNT: MOVEI   AC,7            ;CHECK FOR SMALL COMMAND
        PUSHJ   P,VRFY1         ;VERIFY CMND
        HRLI    PPRPTS,1        ;SMALL TYPE PAPER
        JRST    CKPTS
GPARTS: PUSHJ   P,GETPTS        ;GO GET PARTS
        POPJ    P,
;
;       LETS SEE IF IT HAS WHITE ON IT
;
CKPTS:  PUSHJ   P,CKWHT
        CAIE    AC,15           ;JUST IN CASE IT WAS A CR
        JRST    CKPT1
        PUSHJ   P,UPCASE        ; SUCK LINE FEED
        JRST    GPARTS          ; PROMPT
CKPT1:  PUSHJ   P,GETPT1        ; BETTER BE A NUMBER THERE DUMMY
        POPJ    P,              ; MUST HAVE BEEN
;
;	KATAKANA CHECKING
;
KANACK:	MOVE	AC,GDBUFF+5	;LOOK AT GROUP DESCRIPTOR.
	TLNN	AC,KFMSK	;SEE IF ANY KATAKANA FILES.
	JRST	KANRT2		;NONE IN THIS REQUEST - OK.
	SETOM	TRMTYP		;THERE ARE KATAKANA FILES TO print
	MOVE	AC,[-1,,56]	;so see if this terminal IS KATAKANA.
	AUXCAL	AC,TRMTYP	;GET THE TYPE.
KANA1:	MOVE	AC1,TRMTYP
	ROT	AC1,-1
	JUMPL	AC1,KANRT2	;HAVE KATAKANA NODE - OK.
	OUTSTR	[ASCIZ /
THIS REQUEST CONTAINS KATAKANA TYPE FILE(S) -
  IS THIS A KATAKANA PRINTER? /]
	PUSHJ	P,YORN		;IF USER THINKS THE PRINTER IS
	JRST	KANA2		;KATAKANA, TRY TO SET THE PROPER
	MOVE	AC,[-1,,56]	;MODE.
	MOVEI	AC1,17		;this should probably be a 1 not a
				;17 but it works so I'll leave it /mch
	AUXCAL	AC,AC1		;DO IT!
	MOVE	AC,[41,,17]	; wait for yellow ball or 15 sec.
	HIBER	AC,
	JFCL			; ignore errors
	MOVE	AC,[-1,,56]
	SETOM	TRMTYP		;CHECK TO SEE WHETHER SUCCESSFUL.
	AUXCAL	AC,TRMTYP	;IF SUCCESSFUL, CAN CONTINUE
	MOVE	AC1,TRMTYP	;AS PLANNED.  OTHERWISE, OR IF
	ROT	AC1,-1		;USER ANSWERED NO, GET
	JUMPL	AC1,KANRT2	;CONFIRMATION.
	OUTSTR	[ASCIZ /
CANNOT SET KATAKANA TERMINAL MODE - /]
KANA2:	PUSHJ	P,DOYOU		;ASK USER IF OK.
	SKIPA			;IT'S NOT.
KANRT2:	AOS	(P)
	POPJ	P,
;
;       THIS IS THE KLUDGE TO CHECK FOR WHITE (RITE IN TUNE)
;
CKWHT:  PUSHJ   P,UPCASE        ; HERE WE GO
        CAIN    AC,40           ; WHAT A CHECK
        JRST    CKWHT
        CAIE    AC,"W"          ; COULD IT BE?
        JRST    CKWHTR          ; NO IT AIN'T
        MOVEM   PPRPTS,SAVAC7#
        MOVEI   AC,^D26
        PUSHJ   P,VRFY1
        PUSHJ   P,LFPASS        ; GET RID OF REST OF LINE
        MOVE    PPRPTS,SAVAC7
        HRRI    PPRPTS,1        ; LOOKS OK 
        HLRZ    AC1,PPRPTS
        ADDI    AC1,4
        HRL     PPRPTS,AC1
        POP     P,AC            ; LETS DOUBLE POPJ,
CKWHTR: POPJ    P,
FRMQRY: OUTSTR  [ASCIZ/FORMS: /]
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
        CAIE    AC,77           ;CHECK FOR QUERRY
        JRST    ACTFRM          ;GO PROCESS RESPONSE
        OUTSTR  [ASCIZ/
FORMS ARE SMALL, LARGE, TTY OR SPECIAL/]
        PUSHJ   P,UPCASE        ;SKIP TO TERMINARROR
        CAIE    AC,12           ;LOOK FOR TERMINATOR
        JRST    .-2             ;KEEP LOOKING
        JRST    FRMQRY          ;GO ASK AGAIN
;
;       PURPOSE IS TO GET THE PARTS AND PAPER FROM THE OPER
;
GETPTS: OUTSTR  [ASCIZ/PARTS: /]
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
GETPT1: INCHWL  AC1             ;LOOK FOR TERMINATOR
        CAIE    AC1,12          ;SKIP IF HAVE IT
        JRST    .-2             ;ELSE KEEP LOOKING
        CAIG    AC,"4"          ;SEE IF GREATER THAN 4
        CAIGE   AC,"1"          ;SEE IF LESS THAN 1
        JRST    BADPTS          ;ILLEGAL FIGURE
        SUBI    AC,60           ;CONVERT TO BINARY
        HRR     PPRPTS,AC       ;STORE PARTS
        POPJ    P,
BADPTS:  OUTSTR  PRTLIT         ;SAVE WHAT PARTS ARE VALID
        JRST    GETPTS          ;GO ASK AGAIN
;
;       COME HERE TO GET REMOTE PRINTER TYPE
;
TYPNTR: SKIPE   ,%CDC           ;SEE IF CDC SPECIFIED
        POPJ    P,
        SKIPE   ,%VOGUE         ;SEE IF VOGUE SPECIFIED
        POPJ    P,
        SKIPE   ,%2780          ;SEE IF 2780 SPECIFIED
        POPJ    P,
        SKIPE   ,%DP            ;SEE IF DP SPECIFIED
        POPJ    P,
;
;       NOTHING SPECIFIED, ASK FOR PRINTER
;
TYPTR3: OUTSTR  [ASCIZ/
REMOTE PRINTER TYPE: /]
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
        CAIE    AC,"?"          ;CHECK FOR QUERRY
        JRST    TYPTR1          ;GO GET TYPE
TYPTR2: CLRBFI
        OUTSTR  [ASCIZ/
TYPES ARE CDC, 2780, VOGUE OR DP/]
        JRST    TYPTR3          ;GO ASK AGAIN
TYPTR1: MOVEM   AC,AC1          ;SAVE AC
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        EXCH    AC,AC1          ;GET BACK 1ST CHAR.
        CAIN    AC,"C"          ;CHECK FOR CDC
        JRST    CDCTYP          ;SAME
        CAIN    AC,"V"          ;CHECK FOR VOGUE
        JRST    VOGTYP          ;SAME
        CAIN    AC,"2"          ;LOOK FOR 2780
        JRST    TYP2780         ;GO CHECK FURTHER
        CAIE    AC,"D"          ;CHECK FOR DP
        JRST    TYPTR2          ;CANT UNDERSTAND
        CAIE    AC1,"P"         ;CHECK FOR DP
        JRST    TYPTR2          ;CANT UNDERSTAND
        SETOM   ,%DP            ;SET DP FLAG
        JRST    PASSLF          ;GO SKIP TIL LF
CDCTYP: CAIE    AC1,"D"         ;CHECK FOR CDC
        JRST    TYPTR2          ;CANT GET IT
        SETOM   ,%CDC           ;SET CDC FLAG
        JRST    PASSLF          ;GO SKIP TIL LF
VOGTYP: CAIE    AC1,"O"         ;CHECK FOR O OF VOGUE
        JRST    TYPTR2          ;CANT UNDERSTAND
        SETOM   ,%VOGUE         ;SET VOGUE FLAG
        JRST    PASSLF          ;GO SKIP TIL LF
TYP2780:CAIE    AC1,"7"         ;CHECK FOR 7 OF 2780
        JRST    TYPTR2          ;CANT UNDER STAND COMMAND
        SETOM   %2780           ;SET 2780 FLAG
PASSLF: PUSHJ   P,LFPASS
        SKIPN   OPRSET          ;IF OPER, DONT GET NO. TRANSFER
        PUSHJ   P,GETRAN        ;GET TRANSFERS
        POPJ    P,
LFPASS: CAIN    AC,12           ;TERMINATOR?
        POPJ    P,
        PUSH    P,AC            ;SAVE AC
        PUSHJ   P,UPCASE        ;GET NEXT CHAR
        CAIE    AC,12           ;TERMINATOR
        JRST    .-2             ;SKIP TIL GET IT
        POP     P,AC            ;RETURN AC
        POPJ    P,
;
;       COME HERE TO GET THE PRINT OPTIONS OF THE REQ.
;
OPTION: PUSHJ   P,PTRDEF        ;GET OPTIONS
OPNASK: OUTSTR  [ASCIZ/
OPTIONS: /]
OPTIN1: PUSHJ   P,UPCASE        ;GET A CHAR.
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    OPTIN1          ;SKIP BLANKS
        CAIN    AC,","          ;CHECK FOR SEPERATORS
        JRST    OPTIN1          ;SKIP SEPERATORS
        CAIN    AC,15           ;CHECK FOR TERMINATOR
        PUSHJ   P,UPCASE        ;GET TERMINATOR
        CAIE    AC,12           ;LOOK FOR TERMINATOR LF
        JRST    GETOPN          ;GO GET CURRENT OPTION
AMTSKP: MOVE    AC2,USRLPP      ;[111] GET MAX user LINE/PAGE
        PUSHJ   P,FORPGS        ;FOR FORTRAN C/C
        MOVE    AC2,MAXLIN      ;GET THEM AGAIN (Physical size)
        SUB     AC2,USRLPP      ;SUB USER DESIRES/PAGE
        IDIVI   AC2,2           ;FOR CENTERING
        MOVEM   AC2,LINSKP      ;SAVE FOR CENTERING
        POPJ    P,              ;ELSE RETURN
;
;       GET THE REQUESTS OPTIONS
;
PTRDEF: SETZM   ,HEAD           ;ZERO HEADING INDICATOR
        SETZM   QSTCHR#         ;SPECIAL CONTROL CHAR.
        SETZM   TWOBLE          ;ZERO DOUBLE SPACE FEATURE
        SETZM   ,FORTRN         ;ZERO FORTRAN INDICATOR
        HLRZ    AC,GDBUFF+1     
        ANDI    AC,377          ;KEEP THEM
        MOVEM   AC,MARGIN       ;SAVE MARGIN USER WANTS
;       ADDI    AC1,2           ;POINT TO OPTIONS
        HRRZ    AC3,GDBUFF+3    ;GET PRINT OPTIONS
        HRRZ    AC2,GDBUFF+5    ;GET USERS LINES PER PAGE
	MOVEM   AC2,USRLPP      ;SOTORE USERS LINE/PAGE
        TRNE    AC3,HEDMSK      ;TEST FOR HEADING
        SETOM   ,HEAD           ;SET HEADING WANTED
        TRNE    AC3,QSTMSK      ;SPECIAL CONTROL CHAR.
        SETOM   QSTCHR
        TRNE    AC3,TWOMSK      ;CHECK FOR DOUBLE SPACING
        SETOM   ,TWOBLE         ;WANT DOUBLE SPACING
        TRNE    AC3,FTNMSK      ;TEST FOR FORTRAN C/C
        SETOM   ,FORTRN         ;SHOWS TO DO FORTRAN C/C
	HRRZ    AC2,GDBUFF+4    ;GET LOL
        LSH     AC2,-11         ;RIGHT JUSTIFY IT
        MOVEM   AC2,PAGLOL      ;SAVE IT
        HLRZ    AC,GDBUFF+5     ;GET PAPER TYPE WANTED
        LSH     AC,-^D15        ;RIGHT JUSTIFY
        MOVEI   AC2,LARMAX      ;FOR ALL PAPER BUT SMALL
        CAIN    AC,4            ;[106] CHECK FOR SPECIAL
          HRRZ	AC2,GDBUFF+144	;[106] OBTAIN THE SPECIAL FORMS SIZE
	CAIE    AC,1            ;TEST FOR SMALL
        CAIN    AC,5
        MOVEI   AC2,SMLMAX      ;FOR SMALL PAPER
        MOVEM   AC2,MAXLIN      ;STORE MAX. LINES ALLOWED
        PUSHJ   P,AMTSKP        ;GET AMT TO SKIP DOWN
        POPJ    P,              ;RETURN TO CALLER
;
;       COME HERE TO GET OPTIONS
;
GETOPN: CAIN    AC,"H"          ;LOOK FOR HEAD
        JRST    OPRHED          ;GO DO HEADING
        CAIN    AC,"Q"          ;QUESTIONABLE CHAR
        JRST    QUEST
        CAIN    AC,"F"          ;LOOK FOR FORTRAN
        JRST    OPRFTN          ;GO DO FORTRAN
        CAIN    AC,"I"          ;LOOK FOR INDENT
        JRST    OPRIND          ;GO SET INDENT VALUE
        CAIN    AC,"L"          ;LOOK FOR LINES
        JRST    OPRLIN          ;GO DO LINES
        CAIN    AC,"D"          ;LOOK FOR DOUBLE
        JRST    OPRDBL          ;SET AS DOUBLE SPACING
        CAIN    AC,"S"          ;WANTS SPACING AS IS
        JRST    OPRSGL          ;NO DOUBLE SPACING
        CAIE    AC,"N"          ;LOOK FOR NO OPTION
        JRST    GETOP1          ;ELSE BAD COMMAND
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIE    AC,"O"          ;STILL CHECKING NO
        JRST    GETOP1          ;ELSE STILL BAD COMMAND
        PUSHJ   P,UPCASE        ;GET NO OPTION INDICATOR
        CAIN    AC,"H"          ;CHECKING FOR NOHEAD
        JRST    NOHEAD          ;ASSUME MEANS NO HEAD
        CAIN    AC,"Q"          ;CHECK FOR NOQUEST
        JRST    NOQUST
        CAIN    AC,"F"          ;CHECKING FOR NOFORTRAN
        JRST    NOFORT          ;GO DO NO FORTRAN
GETOP1: PUSHJ   P,LFPASS
        OUTSTR  [ASCIZ/
OPTIONS ARE HEAD, NOHEAD, FORTRAN, NOFORTRAN,
QUEST, NO QUEST,DOUBLE, SINGLE, LINES=, INDENT=/]
        JRST    OPTION          ;START ALL OVER
NOFORT: PUSHJ   P,UPCASE        ;GET NEXT CHAR
        CAIE    AC,"O"          ;CHECK O OF FORTRAN
        JRST    GETOP1          ;BAD COMMAND
        SETZM   FORTRN          ;ZERO FORTRAN DESIRE
        JRST    PASCMD          ;GO PASS REST OF COMMAND
OPRFTN: PUSHJ   P,UPCASE        ;GET NEXT CHAR
        CAIE    AC,"O"          
        JRST    GETOP1          ;BAD COMMAND
        SETOM   FORTRN          ;SHOWS USER WANTS FORTRAN C/C
        JRST    PASCMD          ;GO SKIP REST OF COMMAND
QUEST:  SETOM   QSTCHR
        JRST    PASCMD
NOQUST: SETZM   QSTCHR
        JRST    PASCMD
OPRDBL: SETOM   ,TWOBLE         ;DO DOUBLE SPACING
        JRST    PASCMD          ;GO BYPASS REST OF COMMAND
OPRSGL: SETZM   ,TWOBLE ;DO SINGLE SPACING
        JRST    PASCMD          ;GO PASS REST OF COMMAND
NOHEAD: SETZM   ,HEAD           ;ZERO HEADING INDICATOR
        JRST    PASCMD          ;SKIP REST OF COMMAND
OPRHED: SETOM   ,HEAD           ;SHOWS TO DO HEADING
PASCMD: PUSHJ   P,UPCASE        ;PREPARE TO SKIP REST OF COMMAND
        CAIE    AC,40           ;BLANKS ARE SEPERATORS TOO
        CAIN    AC,","          ;CHECK FOR COMMAND SEPERATOR
        JRST    OPTIN1          ;GO GET NEXT COMMAND
        CAIE    AC,12           ;LOOK FOR COMMAND TERMINATOR
        JRST    PASCMD          ;SKIP TIL FIND SOMETHING
        JRST    OPTIN1+1        ;GO PREPARE TO RETURN
GETLIN: PUSHJ   P,UPCASE        ;RID OF REST OF COMMAND
        CAIN    AC,"="          ;LOOK FOR SPECIFIER
        JRST    OPRLN1          ;GO GET NO. LINES
        CAIE    AC,12           ;LOOK FOR SEPERATOR
        JRST    GETLIN          ;KEEP LOOKING FOR =
        POPJ    P,              ;ERROR RETURN
OPRLN1: PUSHJ   P,GITVAL+1      ;GO CONVERT NUMBER
        POPJ    P,              ;ERROR RETURN
        AOS     (P)
        POPJ    P,
OPRIND: PUSHJ   P,GETLIN        ;GO GET VALUE
        JRST    GETOP1          ;?
        MOVEM   AC,MARGIN       ;SAVE MARGIN
OPRIN1: MOVE    AC,AC4          ;GET TERMINATOR
        JRST    OPTIN1+1        ;GET NEXT COMMAND
OPRLIN: PUSHJ   P,GETLIN        ;GET VALUE
        JRST    GETOP1          ;?
        MOVEM   AC,USRLPP       ;SAVE LINES
        JRST    OPRIN1          ;GO DO NEXT COMMAND
;
;       COME HERE TO MAKE SURE REQUEST IS SAME PRINT SEX
;       AS THE USER IS
;
SAMSEX: HRRZ    AC,GDBUFF+3     ;GET PRINTER TYPE WORD
        ANDI    AC,7            ;MASK THE PRINTER TYPE
        CAIN    AC,1            ;SEE IF REQ. IS CENTER
        JRST    SEXCEN          ;BR. IF CENTER
;
;       REQUEST REMOTE, MAKE SURE USER IS ALSO
;
        SKIPE   ,REMPNT         ;BR. IF NOT REMOTE
        JRST    SEXSAM          ;BR. IF BOTH REMOTE
        JRST    BADMCH          ;REQ. REMOTE, USER ISNT, LEAVE
;
;       REQ. CENTER, MAKE SURE USER IS ALSO
;
SEXCEN: SKIPE   ,REMPNT         ;SKIP IF NOT REMOTE REQ. USER
        JRST    BADMCH          ;REQ. CENTER, USER REMOTE, LEAVE
        JRST    ENDSEX          ;RETURN SINCE USER OPER
;
;       USER AND REQ. REMOTE, MAKE SURE SAME PRI. LOC. NO.
;
SEXSAM: HRRZ    AC,GDBUFF+4     ;GET PRI. LOC. NO.
        ANDI    AC,777          ;GET PRI. LOC. NO.
        CAMN    AC,USRLOC       ;SKIP IF LOC. DONT MATCH
ENDSEX: AOS     (P)             ;ADJUST RETURN FOR MATCH
BADMCH: POPJ    P,
;
;       GET NO. OF TRANSFER REQUESTS TO DO
;
GETRAN: SKIPE   TOTRAN          ;SKIP IF ZERO
        POPJ    P,              ;RETURN
        SETZM   OPNOUT          ; INPUT ONLY
        PUSHJ   P,INPMAP        ;ZERO POINTER
TRNLOP: PUSHJ   P,NEXTGD        ;GET REQ.
        JRST       GOTRAN       ;ALL DONE
        MOVE    AC,CURSTA       ; GET STATUS OF GD
        CAIE    AC,%TRAREQ      ;SKIP IF TRANSFER REQ
        JRST    TRNLOP          ;NO, KEEP LOOKING
        PUSHJ   P,GETGD         ; BETTER GET IT
        DMOVE   AC,GDBUFF+3     ;GET IT AND PRI LOC.
        ANDI    AC,7            ;GET PRINT LOC
        SKIPE   OPRSET          ;SKIP IF NOT SYS OPER
        JRST    TRACEN          ;GO CHECK CENTER TRANSFERS ONLY
        ANDI    AC1,777         ;GET REMOTE PRINT LOC.
        CAME    AC1,USRLOC      ;SEE IF SAME LOCATION
        JRST    TRNLOP          ;NO, GO GET ANOTHER
MORTRN: AOS     TOTRAN          ;ADD TO TRANSFER COUNT
        JRST    TRNLOP          ;GO LOOK FOR MORE
TRACEN: CAIE    AC,1            ;SKIP IF THIS CENTER
        JRST    TRNLOP          ;NO, KEEP LOOKING
        JRST    MORTRN          ;GO ADD TO COUNT
GOTRAN: SKIPG   TOTRAN          ;SKIP IF HAVE SOMETHING
        SETOM   TOTRAN          ;SET SO WONT DO THIS AGAIN
        POPJ    P,
;
;       OUT FILE NAME FROM SIXBIT, ADDRESS IN AC1
;
NOTHER: HRLI    AC1,440600
        MOVEI   AC2,11
        ILDB    AC,AC1
        ADDI    AC,40
        PUSHJ   P,CHROUT
        MOVEI   AC,"."
        CAIN    AC2,4
        PUSHJ   P,CHROUT
        SOJG    AC2,.-6
        POPJ    P,
;
;       PURPOSE IS TO GET THE PAPER AND THE PARTS FROM THE GD REQUEST
;
GETPPR: HRL     AC,CURTYP       ; TYPE OF FORM TO LEFT
        HRR     AC,CURFOR       ; NUMBER OF FORMS
        POPJ    P,
;
;       PURPOSE IS THE FIND A GD WHOSE HAS MATCHING PAPER/PARTS
;       AND MAKE SURE IT IS A HOLD OR PENDING
;       ALSO TO ASK OPER TO MOUNT CORRECT PAPER ON PRINTER
;
SCAN:   MOVE    AC,PPRPTS       ; THIS IS WHAT WE WANT
        PUSHJ   P,FNDTYP        ; FIND THE TYPE THAT WE WANT
        JRST    SCNR1           ;RETURN TO CALLER -- No more Requests > 20
        MOVE    AC1,CURSTA      ; GET STATUS WD
        CAIE    AC1,%REQPEN     ;SKIP ONLY IF PENDING
        JRST    SCAN            ;GO GET NEXT REQUEST
        PUSHJ   P,GETGD         ; LOOKS LIKE WE NEED GD
        SETZ    AC,             ;ZERO INDICATOR
        SKIPN   TAPSTO          ;SKIP AND RETURN IF TAPE STORE
        SKIPLE  FULLPR          ;SKIP IF NOT FULLCASE PRINTER
        POPJ    P,              ;FULL PRINTER OR TAPE STORE
        SKIPE   FULLCH          ;RETURN IF NOT FULL ANYTHING
        JRST    SCAN            ;REQ. WAS, PRINTER WASNT
        POPJ    P,

SCAN1:  MOVE    AC,PAGESP       ;GET PAGES SPOOLES
        MOVE    AC1,FILESP      ;GET FILES SPOOLED
        IMULI   AC1,3           ;ALLOW 3 PAGES FOR EACH FILE
        ADDI    AC1,5           ;ALLOW 5 PAGES FOR SLUSH
        ADD     AC,AC1          ;TOTAL PAGES NEEDED FOR THIS REQUEST
SCAN2:  OUTSTR  [ASCIZ/
ARE THERE /]
        PUSHJ   P,BINDEC        ;PUT OUT NO. PAGES NEEDED
        OUTSTR  [ASCIZ/ PAGES OF /]
        PUSHJ   P,SCAN5
        PUSHJ   P,INPMAP        ; GET MAP AGAIN
CFNNAM:	OUTSTR  [ASCIZ/
CONFIRM BY TYPING YOUR NAME: /]
        SETZ    AC1,            ;ZERO COUNTER
CKMORE: PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANK
        JRST    CKMORE          ;BYPASS BLANKS
        CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    NAMCK           ;SAME
        ADDI    AC1,1           ;ADD 1 TO CHARACTER COUNT
        JRST    CKMORE          ;GO GET MORE DATA
NAMCK:  JUMPE   AC1,CFNNAM      ;NO NAME, NO GO ON
	 CAIA			;SKIP TO THE RETURN

SCNR1:  SETO    AC,
	PUSHJ   P,RELGD         ; RELEASE GD FILE
        POPJ    P,              ;RETURN


SCAN5:	HRRZ    AC,PPRPTS       ;GET PART PAPER
        ADDI    AC,60           ;CONVERT TO ASCII
	HLRZ    AC1,PPRPTS      ;GET PAPER TYPE
        CAIN    AC1,4           ;CHECK FOR SPECIAL
	  JRST	.+2		;YES--DON'T PRINT PARTS
        OUTCHR  AC              ;PUT OUT NO. PARTS
        OUTSTR  [ASCIZ/ PART /]
	HLRZ    AC1,PPRPTS      ;GET PAPER TYPE
	CAIL	AC1,1		;[110] INSURE THAT WE GET NO ERRORS
	CAILE	AC1,6		;[110] BY DOING A RANGE CHECK
	  SETZ	AC1,		;[110] CLEAR AC IF IT LOOKS SUSPICIOUS.
        OUTSTR  @[[ASCIZ/UNKNOWN PAPER TYPE/]
        	  [ASCIZ/SMALL PAPER/]
		  [ASCIZ/LARGE PAPER/]
		  [ASCIZ/TTY PAPER/]
		  [ASCIZ/SPECIAL PAPER DESCRIBED AS:
/]
		  [ASCIZ/SMALL WHITE/]
		  [ASCIZ/LARGE WHITE/]](AC1)	;[110] WHAT KIND OF PAPER!
        CAIE    AC1,4           ;CHECK FOR SPECIAL
	  POPJ	P,              ;NO--RETURN
        MOVE    AC1,[POINT 7,GDBUFF+145]        ; POINTER TO SPECIAL PAPER
SPETYP:	ILDB    AC,AC1          ;GET A CHARACTER
        CAIN    AC,4            ;CHECK FOR CONTROL-D
          POPJ    P,            ;RETURN
        OUTCHR  AC              ;PUT OUT INST
        JRST    SPETYP          ;DO REST OF INST.
;
;       PURPOSE IS TO SET THE INPROGRESS FLAG AND THE
;       COMPLETED FLAG AND RE-WRITE THE GD OUT
;
;       SET INPROGRESS FLAG
;
INPROG: HLRZ    AC,GDBUFF       ;GET STATUS WD.
        LSH     AC,-^D12        ;RIGHT JUSTIFY IT
        CAILE   AC,%REQPRI      ;SKIP PEND,HOLD IN PROC
        CAIN    AC,%TAPXFR      ;SEE IF TAPE XFER
        SKIPA                   ;FLAG FOR ALL MENTIONED ABOVE
        POPJ    P,              ;ELSE DONT SET FLAG
        MOVEI   AC,%REQPRI      ;GET INPROGRESS FLAG
        JRST    SETSTA          ;GO SET STATUS
;
;       SET TAPE TRANSFER FLAG
;
TAPXFR: HLRZ    AC,GDBUFF       ;GET STATUS
        LSH     AC,-^D12        ;RIGHT JUSTIFY STATUS
        CAILE   AC,%REQPRI      ;SEE IF PENDING, HOLD OR IN PROCESS
        POPJ    P,              ;RETURN IF ANY ABOVE
        MOVEI   AC,%TAPXFR      ;TAPE XFER FLAG
        JRST    SETSTA          ;GO SET STATUS
;
;       SET COMPLETED FLAG AFTER ACCT. COMPLETED
;
COMPLT: HRRZI   AC1,GDBUFF+3    ;ADDRESS OF BUFFER
        MOVEI   AC,10           ;SHOWS PRINTED AT CENTER
        SKIPE   REMPNT          ;SKIP IF CENTER PRINT
        MOVEI   AC,20           ;PRINTED A REMOTE
        IORM    AC,@AC1         ;STORE WHERE PRINTED
        MOVEI   AC,%COMREQ      ;GET COMPLETED REQ. FLAG
;
;       SHIFT STATUS OVER AND STORE IN BUFFER
;
SETSTA: LSH     AC,^D12         ;SHIFT TO MIDDLE OF WD
        HLRZ    AC1,GDBUFF      ;GET LEFT HALF WD.
        ANDI    AC1,7777        ;ZERO STATUS AREA
        IOR     AC1,AC          ;MERGE STATUS IN
        HRLM    AC1,GDBUFF      ;PUT STATUS IN
;
;       OPEN FILE FOR OUTPUT
;
STATGN: PUSHJ   P,UPDGD         ; UPDATE GD WITH NEW STATUS (AND MAP)
        POPJ    P,
;
;       COME HERE TO PRINT THE FILES ON THE LINE PRINTER
;
PRNTGD: PUSHJ   P,INPROG        ;REQ. PRINTING
        OUTSTR  [ASCIZ/
PRINTING REQUEST /]
        MOVEI   AC5,5           ;NO. CHAR. TO PRINT
        MOVE    AC2,GDBUFF      ;GET REQ. NO. WD.
        MOVE    AC1,[POINT 6,AC2,5]
        ILDB    AC,AC1          ;GET A DIGIT
        ADDI    AC,40           ;CONVERT TO ASCII
        OUTCHR  AC              ;PUT IT OUT
        SOJG    AC5,.-3         ;GO DO REST OF REQ. NUMBER
;
;       DETERMINE IF TO TURN REMOTE PRINTER ON
;
        HRLZI   AC,40
        SKIPE   REMPNT          ;SKIP IF TO CENTER
        HIBER   AC,             ;GO HIBER
        JRST    .+1
;
PNTGD1: PUSHJ   P,REQTTL        ;HEADING PAGES
        SETZM   ,TOTCHR         ;ZERO CHAR. XMIT COUNT
        MOVE    AC,GDBUFF      ;GET REQUEST NO.
        TLZ     AC,REQMSK       ;GET REQ. NO.
        MOVE    REQNUM,AC       ;SAVE THE REQUEST NUM.
        MOVE    NUMFIL,FILESP   ;GET NO. FILES
        MOVEM   NUMFIL,TOTFIL   ;SAVE TOTAL FILES TO DO
        HRLI    TOTFIL,1        ;SHOW INITIAL COPY WORKING ON
        HLRZM   TOTFIL,FCOPYS   ;SET COUNT THRU AS 1ST
        MOVE    AC,GDBUFF+2     ;GET PPN
        MOVEM   AC,TUSER        ;SAVE FOR LATER
        HLRZ    AC,GDBUFF+3     ;GET REQUEST DATE 
        MOVEM   AC,TUSER+1      ;SAVE DATE FOR LATER
        MOVE    COPYS,HCOPYS    ;GET MAX. COPIES TO DO
        SETZM   OPNOUT          ; SET FD FILE FOR READ ONLY
;
;       SEARCH FD FOR A MATCH
;
PNTNFD:                 
        PUSHJ   P,SAVREG
        PUSHJ   P,READFD
DONEXT:
        PUSHJ   P,FNDFD         ; FIND THE FD
        PUSHJ   P,RESREG                ; RESTORE REG
        MOVE    AC1,NCOPFD      ; PUT IN NUMBER OF COPIES FOR THE FD
        JRST    PNTMCH          ;BR. IF MATCH
;
;       COME HERE IF NO MATCH FOUND, BYPASS THIS FD
;
PNTPAS: PUSHJ   P,SAVREG                ; SAV REGISTERS
        PUSHJ   P,RDNEXT
        SOJG    7,DONEXT
        JRST    PNTRTN
;
;       COME HERE TO GET FILE NAME AND EXTENSION
;       AND DO A LOOKUP ON THAT FILE
;
PNTMCH:
        SKIPN   AC1             ;TEMP 4/21
        MOVE    AC1,HCOPYS      ;TEMP 4/21
        HRRZ    AC2,FDPTR
        MOVE    AC,1(AC2)       ; GET FILE NAME
        MOVEM   AC,FILBLK       ;STORE FOR LOOKUP
        MOVEM   AC,DAY          ;SAVE NAME FOR LATER
        MOVE    AC,2(AC2)       ;GET EXTENSION
        HLLZM   AC,FILBLK+1     ;STORE EXTENSION
        HRLZM   AC,DAY+1        ;SAVE EXTENSION FOR LATER
        MOVE    AC,3(AC2)       ;GET FD PPN
        CAMN    AC,TUSER        ;SEE IF FD AND GD PPN MATCH
        JRST    PNTMH1          ;BR. IF THEY MATCH
        MOVEI   AC1,4           ;NO. WDS TO BYPASS THIS FD
        JRST    PNTPAS          ;GO BYPASS THIS FD
PNTMH1:
	MOVE	AC,5(AC2)	;SEE IF KATAKANA FILE.
	SETZM	KFILE#		;IF IT IS, SET A MORE
	TLNE	AC,KFMSK	;CONVENIENTLY EXAMINED SWITCH.
	SETOM	KFILE
	MOVEI	AC,2		;SET UP FOR CHANGING THE OPEN
	SETZM	FILDEF		;MODE IF THE FILE IS A
	SKIPE	KFILE		;KATAKANA FILE.
	MOVEM	AC,FILDEF
	OPEN	FILCHL,FILDEF	;GO AHEAD AND PRINT.
	JRST	ERROR1
        CAMGE   AC1,FCOPYS
        JRST    ALDONE          ; SORRY CHARLIE (HA HA)
        MOVE    AC1,6(AC2)      ; GET CHAR COUNT
        TLZ     AC1,777770      ;MASK OFF THE NO. PAGES
        SETZM   ,FILBLK+2       ;ZERO FOR LOOKUP
        MOVE    AC,SPLGAN       ;GET OWNERS GAN/UUN
        MOVEM   AC,FILBLK+3     ;STORE FOR LOOKUP
        LOOKUP  FILCHL,FILBLK   ;FIND THAT FILE
        JRST    [PUSHJ  P,REMOFF
                 OUTSTR  [ASCIZ/
/]
                 MOVEI  AC1,DAY 
                 PUSHJ  P,NOTHER
                 OUTSTR  [ASCIZ/ NOT FOUND/]
                 JRST   ALDONE]
        CAIGE   COPYS,2         ;NO ADD TO TOT CHAR AFTER 1ST PASS
        ADDM    AC1,TOTCHR      ;ADD FOR CHAR. COUNT THIS FILE
;
;       NOW READ THE FILE AND PRINT IT
;
	HRRZ    AC,FDPTR        ;GET ADDRESS OF THIS FD
        ADDI    AC,2            ;POINT TO EXTENSION NAME
        PUSHJ   P,FILTTL        ;PUT OUT TITLE PAGE
	SETZM	,CPOL		;[113] Insure that char count = zero
	SETZM	,CPOPAG		;[117] for both line & page.
        SETZM   ,PAGECT         ;ZERO FILE PAGE COUNT
        SETZM   ,PAGPAG         ;COUNT PAGES SINCE FILE FF
        SETZM   ,LINPAG         ;ZERO LINES DONE THIS PAGE
        SETZM   ,LINECT         ;ZERO LINES DONE THIS FILE
        PUSHJ   P,SKPLIN        ;GO CENTER OUTPUT
        SKIPE   HEAD            ;SKIP IF NO HEADING
        PUSHJ   P,HEDNFF        ;DO HEADING, NO FF
	SKIPE   ,FORTRN         ;SEE IF THIS FORTRAN PRINTING
        SETOM	CTLFLG          ;[107] SET 1ST CHAR. OF FILE C/C
FDNBLK: IN      FILCHL,         ;READ IN A BLOCK
        JRST    WHRPNT          ;GO DETERMINE WHERE TO PRINT
FDNBK1: STATZ   FILCHL,340000   ;CHECK STATUS
        JRST    ERROR4          ;HARDWARE ERROR
        SKIPN   ,REMPNT         ;SKIP NEXT INST. FOR REM. PRINT
        OUTPUT  PCHL,           ;EMPTY PRINT BUFFER
        SETZM   ,RESPAG         ;ZERO RESTART PAGE COUNT
        JRST    ALDONE          ;BR. ON EOF FOUND
;
;       SEE IF THIS FORTRAN PRINT
;
WHRPNT: SKIPE   ,FORTRN         ;SKIP IF NOT FORTRAN CONVERSION
        JRST    CONFOR          ;GO CONVERT FOR FORTRAN
;
;       COME HERE TO PRINT NON-FORTRAN FILE
;
MORPNT: SOSGE   FILIN+2         ;SEE IF INPUT BUFFER EMPTY
        JRST    FDNBLK          ;GO REFILL BUFFER
        ILDB    AC,FILIN+1      ;GET A CHARACTER
        CAIE    AC,15           ;CHECK FOR CR BEFORE FF
        JRST    MORPN1          ;NO GO ON
        MOVE    AC1,FILIN+1     ;GET BYPE POINTER
        PUSHJ   P,AFTRCR        ;CHECK NEXT FOR FF
        JRST    MORPNT          ;SKIP THE CR
MORPN1: PUSHJ   P,CHKFFD        ;CHECK FOR FF
        JRST    MORPNT          ;SKIP FF
        PUSHJ   P,PNTOUT        ;OUT TO PRINTER
        PUSHJ   P,ORDFIL        ;CHEC LF AND FF
        JRST    MORPNT          ;GO GET NEXT CHAR
;
;       CHECK FOR FF, SEE IF DONE ONE YET
;
CHKFFD:	SKIPN	CPOPAG		;[117] Check if any data on page
	CAIE    AC,14           ;[113] No, try for non-formfeed?
	  JRST	CPOPJL		;[113] Yes! Found data, do FF regardless
CHKFF2: SKIPN   AC1,LINECT      ;0 MEAN DONE A FF
        JRST    FFAFF           ;CHECK FOR FF AFTER FF
        SKIPN   HEAD            ;DOING A HEADING
        JRST    CPOPJL
        SKIPN   TWOBLE          ;LINECT DIFFERENT FOR HEADING
        CAIE    AC1,2           ;2 LINE/HEAD/SINGLE
        CAIN    AC1,4           ;4 LINE/HEAD/DOUBLE
        JRST    FFAFF           ;CHECK FOR FF AFTER FF
CPOPJL: AOS     (P)             ;SKIP RETURN
        POPJ    P,              ;RETURN AS INDICATED
;
;       CHECK FOR FF AFTER OUR SUPPLIED FF, IF SO,
;       IGNORE FILE FF CAUSE WE DID IT ALREADY
;
FFAFF:  SKIPL   DONEFF          ;SKIP IF WE SUPPLIED FF
        JRST    CPOPJL          ;DO THEIR FF
        SETZM   DONEFF          ;SO WE CAN DO NEXT FF REGARDLESS
        POPJ    P,              ;IGNORE THEIR FF, WE DONE IT
;
;       CHECK CHAR AFTER CR TO SEE IF FF
;
AFTRCR: ILDB    AC,AC1          ;GET NEXT CHAR.
        CAIN    AC,14           ;IS IT A FF
        JRST    .+3             ;YES, CHECK IT OUT
OKCR:   MOVEI   AC,15           ;RESTORE WHAT WE LOST
        JRST    CPOPJL          ;SKIP RETURN
        PUSHJ   P,CHKFF2        ;CHECK PAGE CONDITION
        POPJ    P,              ;SKIP THE CR
        JRST    OKCR            ;PROCES THE CR.
;
;       SUB. USED FOR PRINTING OF ORDINARY FILES WITH NO
;       FORTRAN CONVERSION.  USED BY REGULAR PRINT AND
;       PRINT BY TAPE.
;
ORDFIL: CAIN    AC,12           ;CHECK FOR LF
        JRST    ORDNLF          ;GO DO A LF
        CAIE    AC,14           ;CHECK FOR FF
        POPJ    P,              ;NOTHING, RETURN
;
;       COME HERE TO DO FF
;
        SOS     ,RESPAG         ;DECREASE RESTART PAGE COUNTER
        SKIPE   ,LINPAG         ;SKIP IF DONE PAGE INCREASE
        AOS     ,PAGECT         ;INCREASE PAGE CNT ELSEWISE
        SETZM   ,LINECT
        SKIPE   HEAD            ;SKIP IF NOT DO HEAD
        SETZM   PAGPAG          ;ZERO PAGE INDICATOR
        PUSHJ   P,MAYHED        ;MAYBEE DO HEADING
        POPJ    P,              ;RETURN
;
;       COME HERE FOR LF
;
ORDNLF: AOS     ,LINECT         ;ADD TO FF LINE CNT
        AOS     ,LINPAG         ;ADD TO THIS PAGE LINE CNT.
        SKIPN   ,TWOBLE         ;SKIP IF WANT DOUBLE SPACING
        JRST    ORDLF1          ;JUMP IF DONT WANT DOUBLE
        PUSHJ   P,PNTOUT        ;OUT EXTRA LF
        AOS     LINECT          ;ADJUST FOR EXTRA LINE 
        AOS     LINPAG          ;SAME
ORDLF1: MOVE    AC,LINECT       ;GET LINES SINCE LAST FF
        CAMGE   AC,USRLPP       ;IF GREATER, DO FF
        POPJ    P,              ;IF NOT, DONT DO FF YET
;
INSERT: SETZM   ,LINECT         ;ZERO USER LINE COUNT
DUFORM: AOS     ,PAGPAG         ;ADD TO PAGE COUNT
        SOS     ,RESPAG         ;DECREASE RESTART PAGE COUNTER
DOHEAD: PUSHJ   P,PUTHED        ;OUT FF MAYBE HEAD
        POPJ    P,              ;DO NEXT CHAR
;
;       COME HERE FOR PUTING DATA TO PRINTER
;
PNTOUT: SKIPN   AC              ;SKIP IF NOT NULLS
        POPJ    P,              ;IGNORE NULLS
	MOVE	AC1,TRMTYP	;IF NOT KANA TERMINAL,
	ROT	AC1,-1		;MASK OFF TO 7 BITS.
	SKIPL	AC1
	ANDI	AC,177
        CAIE    AC,14           ;SEE IF HAVE A FF
        JRST    PNTOU1          ;NO, JUST GO ON
        SKIPLE  LINSKP          ;SEE IF MAYBE NO LINE SKIP
        JRST    PNTOU1          ;YES ON LINESKIP
        MOVE    AC1,LINPAG      ;GET LINES THIS PAGE
        CAMN    AC1,MAXLIN      ;SEE IF ON BOUNDRY
        JRST    PNTOU2          ;YES, NO FF TO PRINTER
PNTOU1: PUSHJ   P,LINBND        ;SEE IF ON LINE BOUNDRY
	SKIPLE	MARGIN		;[117] Don't bother testing if no indentation
         SKIPE  CPOL            ;[117] SKIP IF BEGINNING OF LINE
	  JRST	PNTOU0		;[117] Nothing to indent!!!
PNTOUB:	CAIGE   AC,40           ;SKIP IF BLANK OR BETTER
        CAIN    AC,11           ;CHECK FOR TAB
        PUSHJ   P,INSKIP        ;DO INDENTATION IF NECESSARY
PNTOU0: SKIPG   FULLPR          ;OK IF TO FULL PRINTER, LEAVE ALONE
        CAIGE   AC,140          ;SEE IF LOWER CASE IF NOT FULL PRINTER
        SKIPA                   ;GO AND PRINT AS IS
        SUBI    AC,40           ;ELSE REDUCE TO UPPER CASE
        CAIGE   AC,40           ;LOOK FOR SPECIAL CONTROL CHAR.
        SKIPN   QSTCHR          ;SEE IF WANT THEM
        JRST    PNTGO
        CAIG    AC,15           ;GREATER THAN CR
        CAIGE   AC,11           ;OR TAB
        SKIPA                   ;MUST CONVERT
        JRST    PNTGO
        PUSH    P,AC            ;SAVE CONTROL CHAR.
        MOVEI   AC,"?"          
        PUSHJ   P,PNTGO
        POP     P,AC1           ;GET CHAR. BACK
        SUBI    AC1,1           ;CREATING INDEX
        IDIVI   AC1,6
        ADDI    AC1,CTLADR      ;ADDRESS OF CONTROL CONVERSIONS
        HRLI    AC1,440600      ;ITS IN SIXBIT
        ILDB    AC,AC1          ;GET A CHAR.
        SOJGE   AC2,.-1         ;SCAN TIL WE GET THE ONE WE WANT
        ADDI    AC,40           ;CONVERT TO ASCII
PNTGO:	CAIN	AC,11		;[117] A TAB?
	  PUSHJ	P,PNTTAB	;[117] YES - COUNT FOR A TAB
	CAIN	AC,15		;[117] A CR?
	  PUSHJ	P,PNTCR		;[117] YES - ZERO SOME FLAGS
	CAIN	AC,14		;[117] A FF?
	  PUSHJ	P,PNTFF		;[117] YES - ZERO SOME FLAGS
	SKIPE   REMPNT          ;SKIP IF CENTER PRINTER
        PUSHJ   P,REMCHR        ;OUT TO REMOTE
        SKIPN   ,REMPNT         ;SKIP IF REMOTER PRINT
        PUSHJ   P,TOLPT         ;TO PRINTER
PNTOU2: CAIN    AC,14           ;SEE IF HAVE FF
        PUSHJ   P,SKPLIN        ;YES, THEN SKIP DOWN
        CAIN    AC,14           ;FORM FEED?
        MOVEM   AC,DONEFF       ;SAY WE DONE ONE
        CAIN    AC,12           ;LF?
        SETZM   DONEFF          ;SHOWS CAN DO FF ANYTIME
        POPJ    P,              ;RETURN

PNTTAB:	PUSH	P,AC		;[117] SAVE THE CHARACTER (NOT PRINTED YET)
	MOVE    AC,CPOL         ;GET POS ON LINE
        ANDI    AC,7            ;KEEP LAST POS
        SUBI    AC,10           ;GET AMT TO TAB BY
        MOVNS                   ;MAKE POSITIVE
        ADDM    AC,CPOL         ;ADJUST CPOL
	SKIPE	REMPNT		;[117] IF THIS IS A REMOTE, THEN
	  ADDM	AC,TOTSPC	;[117] ADJUST LEADING SPACES
	POP	P,AC		;[117] RESTORE CHARACTER
        POPJ    P,

PNTFF:	SETZM	CPOPAG		;[117] CLEAR CHARACTERS ON PAGE
	SKIPN	CPOL		;[117] ANY CHARACTERS ON THIS LINE?
	  JRST	PNTCR		;[117] NO--SKIP THIS
	MOVEI	AC,15		;[117]  YES--GET A CR TO PRINT BEFORE FF
	PUSHJ	P,PNTGO		;[117]     --PRINT IT. [NOTE PNTGO NOT PNTOUT]
	MOVEI	AC,14		;[117]     --RESTORE FF FOR PRINT ROUTINE
				;[117] FALL THROUGH AND CLEAR CR FLAGS ALSO
PNTCR:	SETZM	CPOL		;[117] CLEAR POSITION ON LINE
	SKIPE	REMPNT		;[117] IF THIS IS A REMOTE, THEN
	  SETZM	TOTSPC		;[117] ADJUST LEADING SPACES
	POPJ	P,		;[117] RETURN

;
;       COME HERE TO DO THE MARGIN, IF ANY
;
INSKIP: SKIPG   AC1,MARGIN      ;SKIP IF HAVE MARGIN TO DO
        POPJ    P,              ;RETURN IF NONE TO DO
        PUSH    P,AC            ;SAVE WHAT WE HAVE
INSKP1: PUSH    P,AC1           ;SAVE AMT. OF MARGIN
        MOVEI   AC,40           ;GET A BLANK
        PUSHJ   P,PNTOU0        ;OUT TO PRINTER
        POP     P,AC1           ;GET REMAINDER CNT OF MARGIN
        SOJG    AC1,INSKP1      ;GO AGIN IF MORE TO DO
        POP     P,AC            ;RETURN WHAT WE HAD
        POPJ    P,              ;RETURN TO CALLER
;
;       COME HERE TO SEE IF ON LINE BOUNDRY
;       IF CHAR >40 INSERT LF, CR
;
LINBND: MOVE    AC1,CPOL        ;GET POS ON LINE
        CAME    AC1,PAGLOL      ;SEE IF ON BOUNDRY
          POPJ  P,              ;NO
        CAIGE   AC,40           ;SKIP IF PRINT CHAR
          POPJ  P,              ;No! Just return.
	PUSH    P,AC            ;SAVE WHAT WE HAVE
        MOVEI   AC,15           ;GOING TO DO A RAP-AROUND
        PUSHJ   P,PNTOUT        ;GO DO IT
        MOVEI   AC,12           ;TO DO LINEFEED
        PUSHJ   P,PNTOUT        ;DO IT
        PUSHJ   P,ORDNLF        ;ADD TO LINE COUNT
        POP     P,AC            ;GET WHAT WE HAD
        POPJ    P,              ;RETURN
;
;       DO THE ACTUAL CENTERING
;
SKPLIN: SKIPG   AC1,LINSKP      ;SKIP IF SOMETHING TO DO
        POPJ    P,              ;IF NOT, RETURN
        PUSH    P,AC            ;SAVE AC
SKPLN1: PUSH    P,AC1           ;SAVE AMT TO SKIP BY
        MOVEI   AC,CRLF         ;DO A CR LF
        PUSHJ   P,LINOUT        ;GO PUT IT OUT
        POP     P,AC1           ;GET NO. LINES TO SKIP
        SOJG    AC1,SKPLN1      ;GO IF MORE FOR CENTERING
        POP     P,AC            ;RESTORE AC
        POPJ    P,              ;RETURN
;
;       COME HERE WHEN DATA GOING TO LPT
;
PRINTO: OUTPUT  PCHL,           ;EMPTY TO PRINTER
TOLPT:  SKIPLE  RESPAG          ;SKIP IF WE CANT PUT OUT NOW
        JRST    TOLPT1          ;GO ON AS IF WE DID
        SOSGE   PTOUT+2         ;SEE IF BUFFER FULL
        JRST    PRINTO          ;GO EMPTY IT
        IDPB    AC,PTOUT+1      ;STUFF IT IN THE BUFFER
TOLPT1: CAIL    AC,40           ;[117] SKIP IF CONTROL CHAR.
	  AOS	CPOL		;[117] NO--INCREMENT POSITION ON LINE
	CAIE	AC,14		;[117] SKIP IF FF
	CAIN	AC,15		;[117] OR IF CR
	  POPJ	P,		;[117] YES--RETURN
	CAIE	AC,12		;[117] IF LF, also RETURN
	  AOS	CPOPAG		;[117] NO---ELSE INCREMENT CHARS ON PAGE
        POPJ    P,              ;RETURN TO CALLER
;
;       COME HERE TO DO HEADINGS
;
PUTHED: MOVEI   AC,14           ;GET A FF
        PUSHJ   P,PNTOUT        ;TO PRINTER
MAYHED: SETZM   LINPAG          ;ZERO LINES DONE THIS PAGE
        SETOM   DONEFF          ;SHOWS WE SUPPLIED FF ALREADY
        SKIPN   HEAD            ;SKIP IF WANTS HEADING
        POPJ    P,              ;RETURN, DO NO HEADING
HEDNFF: MOVEI   BUFADR,GDBUFF
        MOVEI   AC,[ASCIZ/   PAGE /]
        PUSHJ   P,LINOUT        ;PUT OUT FILLER
        MOVE    AC,PAGECT       ;GET PAGE COUNT
        ADDI    AC,1            ;CORRECT TO CORRECT PAGE
        PUSHJ   P,FILPGE        ;PUT OUT PAGE NUMBER
        SKIPN   ,PAGPAG         ;SKIP IF MORE PAGE NO. TO PUT OUT
        JRST    HEAD1           ;NO, THEN JUMP OVER THIS
        MOVEI   AC,"-"          ;GET SEPERATOR
        PUSHJ   P,PNTOUT        ;PUT TO PRINTER
        MOVE    AC,PAGPAG       ;GET PAGE/PAGE COUNT
        ADDI    AC,1            ;ADJUST BY ONE
        PUSHJ   P,FILPGE        ;GO PUT IT OUT
HEAD1:  MOVEI   AC,[ASCIZ/                      /] ;3 TABS
        PUSHJ   P,LINOUT        ;PUT OUT SPACES
        MOVEI   AC,DAY          ;GET FILE NAME
        MOVEI   AC3,6           ;NO. CHAR. TO DO
        PUSHJ   P,DTAOUT        ;PUT OUT NAME
        MOVEI   AC,"."          ;GET SEPERATOR
        PUSHJ   P,PNTOUT        ;TO PRINTER
        MOVEI   AC,DAY+1        ;ADDRESS OF EXTENSION
        MOVEI   AC3,3           ;NO. CHAR. TO DO
        PUSHJ   P,DTAOUT        ;OUT EXT.
        MOVEI   AC,[ASCIZ/      /] ;1 TAB
        PUSHJ   P,LINOUT        ;OUT FILLER
        HLRZ    AC,GDBUFF+3	;GET DATE OF REQUEST
        PUSHJ   P,DTEOUT        ;GO PUT OUT DATE
        MOVEI   AC,[ASCIZ/    /] ;FILLER
        PUSHJ   P,LINOUT        ;OUT FILLER
        HRRZ    AC,GDBUFF+1	;GET TIME OF REQ.
        IDIVI   AC,^D60         ;GET MINUTES AND HRS
        SETO    AC2,            ;SKIP SUPPRESS ZERO
        MOVEM   AC1,MONTH       ;SAVE MINUTES
        PUSHJ   P,FILPG1        ;OUT HOURS
        MOVEI   AC,":"          ;GET SEPERATOR
        PUSHJ   P,PNTOUT        ;TO PRINTER
        MOVE    AC,MONTH        ;GET MINUTES
        PUSHJ   P,FILPG1        ;OUT MINUTES
        MOVEI   AC,[ASCIZ/

/]
        PUSHJ   P,LINOUT        ;OUT FILLER
        MOVEI   AC,[ASCIZ/

/]
        SKIPE   TWOBLE          ;SKIP IF SINGLE
        PUSHJ   P,LINOUT        ;EXTRA LFLF IF DOUBLE
        MOVEI   AC,2            ;FOR LINES DONE
        SKIPE   TWOBLE          ;SKIP IF SINGLE SPACE
        MOVEI   AC,4            ;FOR DOUBLE SPACING
        ADDM    AC,LINPAG       ;ADD TO LINES THIS PAGE
        ADDM    AC,LINECT       ;ADD TO USER LINES PER PAGE
        SETOM   DONEFF
        POPJ    P,              ;RETURN TO CALLER
;
;       COME HER TO DO FORTRAN C/C
;
CONSCC:	SETOM	CTLFLG		;[107] FLAG C/C COMING NEXT
CONFOR: SOSGE   FILIN+2         ;SEE IF INPUT BUFFER EMPTY
        JRST    FDNBLK          ;GO REFILL BUFFER
        ILDB    AC,FILIN+1      ;GET A CHAR.
        JUMPE   AC,CONFOR       ;SKIP NULLS
	SKIPE	CTLFLG		;[107] SKIP IF NON C/C CHARACTER
          JRST	CONFDO          ;[107] GO PROCESS C/C
        CAIN    AC,12           ;LOOK FOR LF
	  JRST	CONSCC		;[107] YES-GO SET FLAG THAT C/C IS NEXT
	PUSHJ   P,PNTOUT        ;ELSE OUTPUT CHARACTER TO PRINTER
        JRST    CONFOR          ;GO GET NEXT FORTRAN CHARACTER
;
;       COME HERE TO GET THE FORTRAN C/C AFTER THE LF
;       OR THE FIRST CHAR. OF THE FILE
;
CONFDO:	SETZM	CTLFLG		;[107] TELL THEM WE DID IT ALREADY
        PUSHJ   P,FTNFIL        ;[107] CONVERT FORTRAN CC
        JRST    CONFOR          ;[107] GO DO NEXT CHAR.
;
;       THIS SUBROUTINE IS USED FOR FORTRAN C/C CONVERSION
;       IT IS USED IN NORMAL PRINTING AND BY THE PRINT BY
;       TAPE ROUTINE.
;
FTNFIL:	MOVEI	AC5,1		;[107] START WITH ONE LINE
	CAIN    AC," "		;[107] CHECK FOR MOST COMMON SPACE
          JRST  SPACE		;[107] Yes - DO CORRECT SPACING
	CAIN	AC,"*"		;[107] CHECK FOR FORMS BREAK CH-5
	  JRST	ESKIP		;[107] Yes - GO DO SINGLE SPACE
	MOVEI	AC5,2		;[107] NOW USE TWO LINES
        CAIN    AC,"0"          ;[107] CHECK FOR DOUBLE SPACE
          JRST  SPACE           ;[107] Yes - GO DO DOUBLE SPACE
	CAIN	AC,","		;[107] CHECK FOR DOUBLE SKIP
	  JRST	ESKIP           ;[107] Yes - GO SKIP THEM
	MOVEI	AC5,3		;[107] NOW USE THREE LINES
        CAIN    AC,"-"          ;[107] CHECK FOR TRIPLE SPACE
          JRST  SPACE           ;[107] Yes - GO DO TRIPLE SPACE
	CAIN    AC,"."          ;[107] CHECK FOR TRIPLE SKIP
	  JRST	ESKIP           ;[107] Yes - GO SKIP THEM
        CAIN    AC,"+"          ;[107] CHECK FOR SUPPRESS SPACING
	  POPJ  P,		;[117] YES---Skip it.
;
;	ALL THE OTHER "VALID" C/C CHARACTERS USE TAPE CHANNELS
;	AND THUS, REQUIRE SPECIAL HANDLING.  (ESKIP).
;
FTNCKF: CAIE    AC,"1"          ;[107] CHECK FOR FF
	  JRST	FTNMOR          ;[107] GO CHECK FOR OTHERS
	SKIPE	CPOPAG		;[117] See if anything on the page?
	  JRST	FTNFFD		;[113] Yes - Don't bother with other checks.
        SKIPGE	DONEFF          ;[113] Else, SKIP IF CAN DO THIS FF
          POPJ	P,              ;[107] CANT DO, DON'T PRINT OR ANYTHING
FTNFFD:	MOVEI   AC,14           ;[107] GET A FF
        PUSHJ   P,PNTOUT        ;[107] OK, SEND TO PRINTER
        PUSHJ   P,ORDFIL        ;[107] TAKE CARE OF CONTROL CHAR. (FF OR LF)
        POPJ    P,
FTNMOR:	MOVE    AC5,HALFP       ;[107] GET NO. LINES TO HALF PAGE
	CAIN    AC,"2"          ;[107] CHECK FOR HALF PAGE SKIP
	  JRST	ESKIP           ;[107] GO SKIP HALF A PAGE
        MOVE    AC5,THIRDP      ;[107] GET NO. LINES TO THIRD PAGE
	CAIN    AC,"3"          ;[107] CHECK FOR 3RD PAGE SKIP
	  JRST	ESKIP           ;[107] GO SKIP 3RD A PAGE
        MOVE    AC5,SIXTHP      ;[107] GET NO. LINES TO 6TH PAGE
	CAIN    AC,"/"          ;[107] CHECK 6TH PAGE SKIP
	  JRST	ESKIP           ;[107] GO SKIP THOSE LINES

;       FOR BLANK, AND EVERYTHING ELSE, DO A SINGLE SPACE
;
	MOVEI	AC5,1		;[117] DEFAULT TO NORMAL CASE
SPACE:	MOVEI   AC,12           ;DO LINE SKIPPING NOW
        PUSHJ   P,PNTOUT        ;PUT TO PRINTER
        PUSHJ   P,ORDNLF        ;SEE IF DO TOF
        SOJG    AC5,SPACE       ;DO FOR AS MANY LINES TO DO
        POPJ    P,              ;ALL DONE
;
;	FOR CHANNEL CONTROL TAPE POSITIONING (FAKE IT!!!)
;	AC5 IS LOADED WITH THE NUMBER OF LINES IN THE SKIP INCREMENT
;
ESKIP:	PUSH	P,AC1		;[107] SAVE FOR REMAINDER STORAGE
	MOVE	AC,LINPAG	;[107] GET LINES USED ON PAGE
	IDIV	AC,AC5		;[107] DIVIDE BY INCREMENT FOR REMAINDER
	SUB	AC5,AC1		;[107] GET ADDITIONAL LINES TO ADD
	POP	P,AC1		;[107] RESTORE THE REGISTER
	MOVE	AC,LINPAG	;[107] GET LINES USED AGAIN
	ADD	AC,AC5		;[107] INCREMENT BY SKIP COUNT
	CAMGE	AC,USRLPP	;[116] ? MAXLIN OR USRLPP ?
	  JRST	SPACE		;[107] USE COMMON CODE FOR FINALE!
	JRST	FTNFFD		;[107] TOO MANY LINES? -- DO A FORM FEED
	

;
;       SEE IF THIS FILE REQUIRES ANY MORE COPIES MADE.
;       IF SO, RESET POINTER TO FIRST BLK OF FILE
;       AND GO DO THE FILE AGAIN.  IF NO MORE COPIES
;       ARE TO BE DONE, SEE IF ANY MORE FILES TO DO.
;
ALDONE: SOJLE NUMFIL,ALDON1     ;SEE IF ALL FILE PRINTED
ALDON2:                         ;NO, SKIP REST OF THIS FD
        JRST    PNTPAS          ;GO GET NEXT FILE
ALDON1: SOJLE   COPYS,PNTRTN    ;SEE IF DONE ALL COPIES
        MOVEI   AC1,1
        USETI   FDCHL,@AC1      ; SET UP FOR NEXT COPY
        LSH     AC1,^D18        ;MOVE 1 TO LEFT HALF
        ADDM    AC1,TOTFIL      ;TO SHOW WHAT COPY WE WORKING ON
        HRRZ    NUMFIL,TOTFIL   ;GET NO. FILES TO DO
        AOS     FCOPYS          ;SET THIS AS NEXT PASS THROUGH
        JRST    PNTNFD          ;GO REPRINT REQUEST
PNTRTN:                         ;GET ADDRESS OF BUFFER
        DATE    AC,             ;GET DATE OF PRINTING
        HRRM    AC,GDBUFF+21    ;STORE DATE OF COMPLETION
;
;       PUT OUT END OF REQ. TAILER
;
        PUSHJ   P,TAILER        ;OUT OF TAILER
;
;       SEE IF TO TURN REMOTE PRINTER OFF
;
        SKIPE   ,REMPNT         ;SKIP IF CENTER PRINT
        PUSHJ   P,REMOFF        ;TURN REMOTE OFF
        SKIPN   ,REMPNT         ;SKIP IF THIS CENTER PRINT
        CLOSE   PCHL,           ;FLUSH BUFFERS OUT FOR PRINTER
;
        POPJ    P,              ;RETURN
PWHY:   OUTSTR  [ASCIZ/
LPT BUSY--TRY AGAIN/]
        JRST    PRMPRN
;
;       COME HERE TO DO REMOTE PRINTING
;
REMCHR: SKIPN   REMGO           ;SKIP IF PRINTER ON
        PUSHJ   P,REMON         ;GO TURN IT ON
        CAIG    AC,40           ;SEE IF GREATER THAN BLANK
        JRST    REMCH2          ;DO BLANK OR LESS
        SKIPE   ,LFACR          ;SKIP IF ALL CONTROL DONE
        PUSHJ   P,BIO200        ;DO OVERPRINT
        SKIPE   AC1,TOTSPC      ;ANY PRECEEDING SPACES?  Load AC1 with count!
          PUSHJ	P,OUTSPC        ;[117] YES--GO DO SPACES
	PUSH	P,AC2
	MOVE	AC2,TRMTYP	;IF KATAKANA TERMINAL,
	ROT	AC2,-1		;DO NOT ADD PARITY BIT.
	SKIPL	AC2
	IORI    AC,200          ;ADD PARITY
        PUSHJ   P,BIOCHR        ;GO STORE CHAR
	SKIPL	AC2
        ANDI    AC,177          ;MAKE IT WHAT IT WAS
	POP	P,AC2
REMCH3: AOS     ,CPOL           ;ADJUST POSITION ON LINE
	AOS	CPOPAG		;[117] INCREMENT CHARS ON PAGE
REMCH4: SETZM   ,LFACR          ;RESET LF CR FLAG DONE
REMRTN: POPJ    P,              ;RETURN TO CALLER

REMCH2: CAIN    AC,15           ;CHECK FOR CR
        JRST    RECR            ;DO CR
        CAIN    AC,12           ;CHECK FOR LF
        JRST    RELF            ;DO LF
        SKIPG   ,LFACR          ;SKIP IF CONTROL NOT DONE YET
        JRST    REMCH5          ;JUMP IF IT HAS BEEN DONE
        SETZM   ,LFACR          ;SHOW IT HAS BEEN DONE
        PUSHJ   P,BIO200        ;GO DO AN OVERPRINT
        CAIN    AC,14           ;SKIP IF NOT FF
        PUSHJ   P,BIO215        ;DO CR BEFORE THE FF NOW
REMCH5: CAIN    AC,14           ;CHECK FOR FF
        JRST    REFF            ;DO FF
        CAIN    AC,40           ;CHECK FOR BLANK
        JRST    RESPAC          ;GO DO SPACES
        JRST    REMRTN
;
;       COME HERE FOR SPACES
;
RESPAC: AOS     ,TOTSPC         ;ADJUST TOTAL SPACE COUNT
        JRST    REMCH3          ;ADJUST POS AND ZERO FLAG
;
;       OUTPUT THE LEADING STRING OF SPACES
;
OUTSPC: CAIG    AC1,37          ;SEE IF MORE 37 SPACES
        JRST    OUTSP2          ;GO FOR LESS THAN 37
        SUBI    AC1,37          ;REDUCE SPACE CNT BY 37
        PUSH    P,AC1           ;SAVE AC1
        PUSHJ   P,BIO047        ;SEND OUT SPACES
        POP     P,AC1           ;RETURN AC1
        JRST    OUTSPC          ;GO NEXT BATCH OF SPACES
OUTSP2:	PUSH	P,AC
	MOVE	AC,TRMTYP	;CHECK IF WE HAVE A KATAKANA
	ROT	AC,-1		;PORT TYPE.
	JUMPGE	AC,OUTSP6	;WE DON'T.
	CAIE	AC1,1		;WE DO - SEE IF MORE THAN ONE
	JRST	OUTSP5		;SPACE ENTERED.
	MOVEI	AC1,40		;ONLY ONE - USE SINGLE SPACE CODE.
	JRST	OUTSP4
OUTSP6:	CAIE	AC1,1		;SEE IF MORE THAN ONE
	JRST	OUTSP3		;SPACE ENTERED.
	MOVEI	AC1,240		;ONLY ONE, USE SINGLE SPACE CODE.
	JRST	OUTSP4
OUTSP5:	ADDI	AC1,336		;USE ALTERNATE COMPRESSION SCHEME.
	SKIPA
OUTSP3: ADDI    AC1,10          ;ADJUST FOR SPACES OUT
OUTSP4:	POP	P,AC
        PUSHJ   P,BIOSPC        ;GO PUT OUT SPACES
        SETZM   ,TOTSPC         ;RESET SPACE COUNT
	POPJ	P,		;[117] Return
;
;       DO LINE FEED FOR REMOTE
;
RELF:   SKIPE   ,%CDC           ;SKIP IF NOT CDC PRINT
        JRST    DOCDC           ;GO HANDLE FOR CDC
        SKIPN   ,LFACR          ;FOR ALL OTHER PRINTERS
        JRST    DOCRLF          ;GO DO LF
        JRST    REMCH4          ;GO RESET FLAG
DOCDC:  SETO    AC1,            ;FOR LF AFTER CR
        SKIPN   ,LFACR          ;SKIP IF CR DONE
        MOVEI   AC1,2           ;FOR LF AFTER LF
        MOVEM   AC1,LFACR       ;SET FLAG
        JRST    DOCRLF          ;GO DO IT
;
;       DO CR. FOR REMOTE
;
RECR:   MOVEI   AC1,1           ;FOR CDC CR
        SKIPN   ,%CDC           ;SKIP IF CDC
        SETO    AC1,            ;FOR ALL OTHER PRINTERS
        MOVEM   AC1,LFACR       ;SET FLAG
DOCRLF:	SKIPE   %CDC            ;PRINT ON CDC?
        JRST    CDCEOL          ;DO CDC EOL
        SKIPE   %2780           ;PRINT ON 2780?
        JRST    EOL2780         ;DO 2780 EOL
        SKIPE   %VOGUE          ;PRINT ON VOGUE?
        JRST    VOGEOL          ;DO VOGUE EOL
;
;       HERE FOR DP EOL
DPEOL:  PUSHJ   P,BIO212
        JRST    REMRTN
;
;       HERE FOR CDC EOL
CDCEOL: CAIGE   AC1,1           ;SKIP FOR CR OR LF AFTER LF
        JRST    CDCLF           ;ELSE DO JUST LF
        PUSHJ   P,BIO215        ;DO A CR FIRST
        MOVE    AC1,LFACR       ;GET FLAG BACK
        CAIE    AC1,2           ;SKIP IF LF AFTER LF
        JRST    REMRTN
CDCLF:  PUSHJ   P,BIO242        ;DO THE LF
        SETZM   ,LFACR          ;SET CONTROL DONE FLAG
        JRST    REMRTN
;
;       HERE ON VOGUE EOL
VOGEOL: PUSHJ   P,BIO215
        PUSHJ   P,BIO200
        JRST    REMRTN
;
;       HERE ON 2780 EOL
EOL2780: PUSHJ  P,BIO215
        JRST    REMRTN
;
;       COME HERE FOR TOT OF FORM
;
REFF:	SKIPE   %CDC            ;PRINT ON CDC?
        JRST    CDCTOF          ;DO CDC TOF
;
;       DO 2780, VOGUE & DP TOF
        PUSHJ   P,BIO214
        JRST    REMRTN
;
;       HERE FOR CDC TOF
CDCTOF: PUSHJ   P,BIO215
        PUSHJ   P,BIO240
        JRST    REMRTN
;
;
;
;       COME HERE TO PUT THE OUTPUT TO THE BIO BUFFER
;
BIOCHR: MOVE    AC1,AC          ;GET THE CHARACTER
        JRST    BIOSPC          ;GO STORE IT
BIO200: MOVEI   AC1,200
        JRST    BIOSPC
BIO047:	PUSH	P,AC		;FOR 37 SPACES.
	MOVE	AC,TRMTYP	;IF KATAKANA PORT, USE
	ROT	AC,-1
	MOVEI	AC1,47		;ALTERNATE COMPRESSION SCHEME.
	SKIPGE	AC
	MOVEI	AC1,375
	POP	P,AC
        JRST    BIOSPC
BIO212: MOVEI   AC1,212         ;CONTROL CHAR.
        JRST    BIOSPC
BIO215: MOVEI   AC1,215         ;CONT. CHAR.
        JRST    BIOSPC
BIO242: MOVEI   AC1,242         ;CONT. CHAR
        JRST    BIOSPC
BIO214: MOVEI   AC1,214         ;CONT. CHAR
        JRST    BIOSPC
BIO240: MOVEI   AC1,240         ;CONT. CHAR
BIOSPC: SKIPLE  RESPAG          ;SKIP IF OK TO PUT OUT NOW
        POPJ    P,              ;NOT YET
        SKIPE   BIOMOD          ;SKIP IF NOT BIO MODE
        JRST    BIOOUT          ;GO DO BLOCK I/O
        IONEOU  AC1             ;PUT OUT OLD WAY
        POPJ    P,              ;RETURN TO CALLER
BIOOUT: IDPB    AC1,BIOPTR      ;STORE TO BUFFER
        AOS     AC1,BIOCNT      ;ADD TO BUFFER CNT.
        CAIGE   AC1,^D400       ;SKIP IF BUFFER FULL
        POPJ    P,              ;RETURN IF NOT
BIODON: MOVEM   AC1,BIOBUF      ;STORE CHAR. CNT.
        HRROI   AC1,37          ;TO SEND BUFFER OFF
        AUXCAL  AC1,BIOBUF      ;SEND IT OFF
        JRST    [OUTSTR  [ASCIZ/
**** BLOCK IO ERROR/]
                JRST    SEEREP]
        SETZM   BIOCNT          ;RESET CHAR. COUNT
        MOVE    AC1,[POINT 8,BIOBUF+1]
        MOVEM   AC1,BIOPTR      ;RESET POINTER
        POPJ    P,              ;RESTURN
;
;
REMGO:  0                       ;SHOW REMOTE PRINTER ON OR OFF
BIOBUF: BLOCK ^D101             ;FOR BLOCK IO
TOTSPC: 0                       ;SHOWS NO. LEADING SPACES
CPOL:   0                       ;SHOWS CURRENT POSITION ON LINE
CPOPAG:	0			;[117] COUNT OF CHARACTERS ON PAGE
TOTCHR: 0                       ;TOTAL CAHR. XMITTED
LFACR:  0                       ;SHOWS IF CR DONE YET
%CDC:   0
%VOGUE:  0                      ;    ZERO SHOWS
%2780:  0                       ;               PRINTER BEING
%DP:    0                       ;                       USED
FULLPR: 0                       ;SHOWS IS PRINTER IS FULLCASE
DONEFF: 0               ;FLAG SHOWING WHETHER TO DO FF
;
;       COME HERE TO TURN REMOTE PRINTER ON
;
REMON:  PUSH    P,AC1
        PUSH    P,AC2
        SETZM   TOTSPC          ;RESET LEADING SPACE COUNT
        SETZM   ,CPOL           ;RESET POSITION ON LINE
	SETZM	,CPOPAG		;[117] MAKE SURE PAGE IS RESET ALSO
        SETZM   ,LFACR          ;RESET CR DONE FLAG
        SETOM   ,REMGO          ;SHOWS PRINTER ON
;
;       GET TTY CHARACTERISTICS
        SETO    AC2,            ;GET AND SAVE CR DELAY
        HRROI   AC1,14
        AUXCAL  AC1,AC2
        MOVEM   AC2,CRDEL#
        SETO    AC2,            ;GET PARA A
        HRROI   AC1,21
        AUXCAL  AC1,AC2
        SKIPN   %2780
        MOVEM   AC2,PARA#
        SETO    AC2,            ;GET PARA B
        HRROI   AC1,22
        AUXCAL  AC1,AC2
        MOVEM   AC2,PARB#
        SETO    AC2,            ;GET PARA C
        HRROI   AC1,23
        AUXCAL  AC1,AC2
        MOVEM   AC2,PARC#
;
        SETZM   BIOCNT#         ;ZERO INITIAL COUNT
        SETOM   BIOMOD#         ;ASSUME BLOCK I/O
        MOVE    AC1,[POINT 8,BIOBUF+1]
        MOVEM   AC1,BIOPTR#     ;SET IT UP
        HRROI   AC1,34          ;TO INIT BIO
        AUXCAL  AC1,            ;INIT BIO
        SETZM   BIOMOD          ;IF FAILS, DO OLD METHOD
;
        SETO    AC2,            ;GET & SAVE OUTPUT BAUD RATE
        HRROI   AC1,16
        AUXCAL  AC1,AC2
        MOVEM   AC2,BAUDR#
        MOVEI   AC2,5           ;SET BUAD RATE AT 1200
        AUXCAL  AC1,AC2
        IONEOU  [202]           ;TURN REMOTE PRINTER ON
        POP     P,AC2
        POP     P,AC1
        POPJ    P,              ;RETURN TO CALLER
;
;       COME HERE TO TERMINATE BIO OUTPUT ON ESCAPE
;
REMESC: HRROI   AC1,41          ;TO TERMINATE BIO OUTPUT
        SKIPE   BIOMOD          ;NO DO IF NO BIO
        AUXCAL  AC1,            ;TERMINATE OUTPUT
        CLRBFO                  ;GOUGE OUT CHAR.
        SETZM   BIOCNT          ;STOPS BUFFER FROM GOING
        SETZM   BIOMOD          ;GO BACK TO OLD METHOD
;
;       CLEAR LAST BIO BUFFER, RETURN PARAMETERS
;       AND TERMINATE BIO MODE
;
REMOFF: SKIPN   ,REMGO          ;SKIP IF REMOTE STILL ON
        POPJ    P,              ;RETURN IF ALREADY OFF
        SKIPE   %CDC            ;SKIP IF NOT CDC
        PUSHJ   P,BIO215        ;SEND TERMINATING CHAR
        SKIPE   %2780           ;SKIP IF NOT 2780
        PUSHJ   P,BIO214        ;SEND TERM. CHAR
        SETZM   TOTSPC          ;ZERO SPACE COUNTER
;
;       RESTORE TTY PARAMETERS
;
        SKIPE   AC1,BIOCNT      ;SKIP IF NOTHING TO PUT OUT
        PUSHJ   P,BIODON        ;ELSE, EMPTY BUFFER
        MOVE    AC1,[41,,5]
        HIBER   AC1,
        JFCL
        MOVEI   AC1,203
        IONEOU  AC1
;
        MOVE    AC2,CRDEL       ;RESTORE CR DELAY PARAMETER
        HRROI   AC1,14
        AUXCAL  AC1,AC2
        MOVE    AC2,PARA        ;RESTOR PARAMETER A
        HRROI   AC1,21
        AUXCAL  AC1,AC2
        MOVE    AC2,PARB        ;RESTORE PARAMETER B
        HRROI   AC1,22
        AUXCAL  AC1,AC2
        MOVE    AC2,PARC        ;RESTORE PARAMETER C
        HRROI   AC1,23
        AUXCAL  AC1,AC2
        MOVE    AC2,BAUDR       ;RESTORE BAUD RATE
        HRROI   AC1,16
        AUXCAL  AC1,AC2
        SETZM   ,REMGO          ;TURN PRINTER OFF
;
;       TERMINATE BLOCK IO MODE
;
        HRROI   AC1,42          ;TO TERM BIO MODE
        AUXCAL  AC1,            ;DO IT
        POPJ    P,              ;RETURN TO CALLER
;
;       CHECK FOR TYPE OF T COMMAND BRANCH ACCORDINGLY
;
TCMND:  REDNXT  AC,             ;GET NEXT FOR INPUT
        JRST    WHATCM          ;BAD COMMAND
        CAIE    AC,"A"          ;FOR TAPE
	CAIN	AC,"a"		;check for lower case
        JRST    PNTTAP          ;ASSUME IT IS
        CAIE    AC,"E"          ;LOOK FOR TEST
	CAIN	AC,"e"		;check for lower case
	JRST	BARBR		;found an e so go do printer test
        JRST    WHATCM          ;NOPE!
;
;       COME HERE TO DO BARBER POLE TEST TO PRINTER
;
BARBR:	PUSHJ   P,LFPASS        ;SKIP EVERYTHING ELSE
        PUSHJ   P,HOWPNT        ;GET HOW TO PRINT
        MOVEI   6,41            ;START UP BARBER POLE
        MOVEI   7,^D264 ;NO. LINES TO DO
        HRLZM   7,USRLPP        ;MAKE BIG POSITIVE NO.
        MOVEI   AC,40           ;CHAR. TO PUT ACROSS
BARBR2: MOVEI   10,^D132        ;NO. CHAR. TO LINE
        MOVEM   10,PAGLOL       ;SET WIDTH SIZE
BARBR3: ADDI    AC,1            ;MAKE NEXT CHAR. OUT
        CAILE   AC,137          ;TIME FOR WRAP AROUND?
        MOVEI   AC,41           ;YES, DO IT
        PUSHJ   P,PNTOUT        ;PUT IT OUT
        SOJG    10,BARBR3       ;SEE IF END OF LINE
        SOJG    7,BARBR4
        PUSHJ   P,REMOFF
        JRST    PROMPT
BARBR4: SUBI    6,1             ;1ST CHAR. OF NEXT LINE
        CAIGE   6,41            ;START OVER?
        MOVEI   6,137
        MOVE    AC,6            ;GET CHAR. TO WORK WITH
        SOJA    AC,BARBR2
;
;       COME HERE TO UPDATE THE REMOTE COUNT FILE REMCNT.
;
UPDREM: MOVEI   BUFADR,GDBUFF   ; STUPID AIN'T IT
        MOVE    AC1,GDBUFF+4		; get word with printer loc
        ANDI    AC1,777         ;KEEP LOC. NO.
UPDRM1: PUSHJ   P,FINPRI        ;GET REM CNT.
        TLZ     AC,400000       ;TURN OFF CHANGE BIT
        SUBI    AC,1            ;REDUCE COUNT
        SKIPGE  ,AC             ;SKIP IF ZERO OR MORE
        SETZ    AC,             ;SET AS ZERO IF LESS THAN
        TLO     AC,400000       ;TURN CHANGE BIT BACK ON
        PUSHJ   P,WRIPRI        ;PUT IT BACK
        POPJ    P,
;
;       COME HERE FOR RESETTING THE SPOOL COUNT IN
;       REQNUM.DAT FILE OF *1BATCH
;
        GDCHL= 2
UPCNT:  SETZB   AC4,OPNOUT              ; ZERO COUNTER, OPEN FILES/INPUT
        PUSHJ   P,INPMAP               ; GET THE MAP
UPCNT1: MOVEI   AC,1                    ; LETS GET CENTER REQUESTS
        PUSHJ   P,FINWHE
        JRST    UPCNT2                  ; DONE
        MOVE    AC1,CURSTA              ; STATUS TO 1
        CAILE   AC1,%TAPXFR     ;SKIP IF PENDING,HOLD OR PROCESS
        JRST    UPCNT1
        ADDI    AC4,1
        JRST    UPCNT1
UPCNT2:  PUSHJ  P,UPREPL        ;REPLACE OLD WITH NEW
        POPJ    P,              ;RETURN TO CALLER
UPREPL: SETZ    AC2,            ;ZERO FLAG FOR CALL
        MOVEI   AC1,1           ;SHOWS WHICH BLK. TO READ
        PUSHJ   P,GETSET        ;OPEN CHANNEL AND FILE
        IDPB    AC4,GETOUT+1    ;STORE NEW VALUE
        JRST    UPCEND          ;GO CLOSE FILE AND END
UPCADD: SETO    AC2,            ;SET FLAG FOR CALL
        MOVEI   AC1,1           ;SHOWS WHICH BLK TO READ
        PUSHJ   P,GETSET        ;GET CHANNEL AND FILE
        ILDB    AC,GETIN+1      ;GET OLD VALUE
        ADDI    AC,1            ;INCREASE BY 1
        IDPB    AC,GETOUT+1     ;STORE NEW VALUE
UPCEND: OUTPUT   10,            ;WRITE OUT THE BLK
        RELEAS  10,             ;RELEASE THE CHANNEL
        POPJ    P,              ;RETURN TO CALLER
GETSET: RELEAS  10,             ;RELEASE THE CHANNEL
        PUSHJ   P,GETSPL        ;GET FILE AND CHANNEL
        MOVEM   AC,NOMFIL+3     ;STORE FOR ENTER
        ENTER   10,NOMFIL       ;FOR UPDATE OF FILE
        JRST    GOSLEP          ;GO SLLLEP TIL OPEN
        USETI   10,@AC1         ;SET INPUT POINTER
        SETZ    AC,             ;ZERO FLAG
        IN      10,             ;READ IN 2ND BLK
        JRST    GETCON          ;2ND BLK THERE, GO ON
        STATZ   10,340000       ;CHECK STATUS, LOOK FOR EOF
        JRST    ERROR4          ;HARDWARE ERROR
        JUMPE   AC2,GETCON      ;NO DIFF. IF REPLACING VALUE
        MOVEI   AC,1            ;SET FIGURE TO PUT IN
        AOS     (P)
        AOS     (P)
GETCON: OUTPUT  10,             ;DUMMY OUTPUT
        USETO   10,@AC1         ;SET OUTPUT POINTER
        POPJ    P,              ;RETURN TO CALLER
GOSLEP: RELEAS 10,
        MOVEI   AC,12           ;TIME TO SLEEP
        SLEEP   AC,             ;GO TO SLEEP
        JRST    GETSET
GETSPL: INIT    10,10           ;SECURE CHANNEL
        SIXBIT  /DSK/
        XWD     GETOUT,GETIN
        JRST    ERROR1
        INBUF   10,1
        OUTBUF  10,1
GOAGIN: SETZM   ,NOMFIL+2       ;ZERO FOR LOOKUP
        MOVE    AC,SPLGAN       ;GET SPOOLERS PPN
        MOVEM   AC,NOMFIL+3     ;STORE FOR LOOKUP
        LOOKUP  10,NOMFIL       ;DO LOOKUP ON FILE
        JFCL
        POPJ    P,
;
; CONTROL CONVERSION TABLE, FROM 'LISTER'
;
CTLADR: 010203,,040506          ;CONTL A,B,C,D,E,F
        071000,,000000          ;CONTL G,H,I,J,K,L
        001112,,131415          ;CONTL M,N,O,P,Q,R
        161720,,212231          ;CONTL S,T,U,V,W,X
        262435,,343627          ;CONTL Y,Z,??????
        300000,,000000          ;CONTL ??????
GETIN:  BLOCK 3
GETOUT: BLOCK 3
NOMFIL: SIXBIT/SPLCNT/
        0
        0
        0
FILDEF: EXP  0
        SIXBIT/DSK/
        XWD     FILIN
TFDEF:  EXP 10
        SIXBIT/DSK/
        XWD     FILOUT,FILIN
PDEF:   EXP  0
        SIXBIT/LPT/
        XWD PTOUT,0
PTOUT:  BLOCK 3
ASKITM: ASCIZ/
ENTER ONE OF THE FOLLOWING ITEMS:/
REQNJB: ASCIZ/
1.  THE REQUEST NUMBER OF THE JOB./
WRDALL: ASCIZ/
2.  THE WORD 'ALL'./
ALLPRO: ASCIZ/
    ALL PENDING & HOLD REQUESTS WILL BE PROCESSED./
WRDFRM: ASCIZ/
3.  THE WORD 'FORM' FOLLOWED BY THE TYPE OF FORM./
AFMPRO: ASCIZ/
    ALL REQUESTS USING THAT FORM WILL BE PROCESSED./
DEFALT: ASCIZ/
A CARRIAGE RETURN DEFAULTS TO ITEM 2.
/
FOLUSR: ASCIZ/
3.  THE WORD 'USER' FOLLOWED BY THE USERNAME/
ETRAGN: ASCIZ/
ENTER ONE OF THE ITEMS: /
;
;       PURPOSE TO PRINT FROM TAPE
;
        ACTCHL= 6               ;CHANNEL FOR PJ RECORD ENTRY
        LSTCHL=15               ;KEEPS LIST OF FILE FROM TAPE
LSTDEF: EXP 10
        SIXBIT/DSK/
        XWD OUTTMP,INNTMP
OUTTMP: BLOCK 3
INNTMP: BLOCK 3
LSTBLK: SIXBIT/TAPLST/
        SIXBIT/TMP/
        0
        0
PPRTYP: 0
CHGBLK: SIXBIT/SPOOL/
        SIXBIT/TAP/
        0
        0
PNTTAP: MOVEI   AC,23           ;TO CHECK FOR TAPE CMND
        MOVEI   12,WHATCM               ;ERROR EXIT
        PUSHJ   P,VRFY1         ;GO VERIFY
        CAIE    AC2,12          ;SKIP FI HAVE TERMINATOR
        PUSHJ   P,LFPASS
PRTTP1: SKIPN   ,OPRSET         ;GO ON ONLY IF OPER
        JRST    WHATCM          ;REMOTE CANT DO PRINT TAPE
        OPEN    PCHL,PDEF       ;GET PRINTER
        JRST    PWHY            ;CANT GET PRINTER
        OPEN    LSTCHL,LSTDEF   ;CHANNEL FOR FILE NAME STORAGE
        JRST    ERROR1
        PUSHJ   P,ASKFULL       ;GET FULLCASE PRINTER ANSWER
        OUTBUF  PCHL,4          ;NO. BUFFERS FOR FAST PRINT.
        SETZM   ,TAPDEF         ;SET DATA MODE AS ASCII
        OPEN    ACTCHL,TFDEF    ;GET CHANNEL FOR PJ FILE
        JRST    ERROR1          ;CANT GET CHANNEL
        SETZM   ,PPRTYP         ;ZERO PAPER PARTS TYPE
        PUSHJ   P,TAPQUS        ;GO ASK TAP QUS.
        INBUF   TPCHL,1         ;SET NO. BUFFERS
        MOVEI   AC1,2           ;TYPE OF TAPE STAT TO DO
        UGETF   TPCHL,AC1       ;GO GET STATUS
        HLRZM   AC2,AC3         ;SAVE STATUS FOR LATER
;
; GET BPI AND SETUP AS HIGH, MED OR LOW
;
        PUSHJ   P,GETBPI        ;DO IT
        SETSTS  TPCHL,@AC1      ;0 DATA MODE, ODD PARITY
;
        MTAPE   TPCHL,1         ;REWIND TO LOAD POINT
        MTAPE   TPCHL,0         ;WAIT TIL DONE
;
;
TPERR3: IN      TPCHL,          ;READ GD BLK
        SKIPA                   ;SKIP ON GOOD RETURN
        JRST    TPERR2
PNTTP7: HRL     AC,TPIN+1       ;GET BYPE POINTER
        AOBJN   AC,.+1          ;ADJUST POINTER TO CORRECT POS.
        HRRI    AC,GDBUFF       ;GET BUFFER ADDRESS
        HRRZI   AC1,GDBUFF      ;GET BUFFER ADDRESS AGAIN
        ADDI    AC1,177         ;LWA OF TO BUFFER
        BLT     AC,@AC1         ;MOVE GD BUFFER ACROSS
;
;       SEE IF THIS RESTART FROM TAPE
;
        SKIPN   ,RESTAP         ;SKIP FOR RESTART FROM TAPE
        JRST    THISGD          ;SKIP IF NOT
        MOVE    AC,GDBUFF       ;GET REQ. NUM.
        TLZ     AC,REQMSK       ;GET REQ. NO.
        CAME    AC,REQNUM       ;SKIP IF REQ. NO. MATCH
        JRST    SKPPPR          ;ELSE SKIP THIS REQUEST
THISGD: MOVE    AC,SPLGAN       ;GET SPOOLER PPN
        PUSHJ   P,MAKTMP        ;GO CREATE TMP FILE
        JRST    DETYPE          ;GO DETERMINE TYPE FILE
;
;       MAKE TMP FILE TO STORE FILE NAMES
;
MAKTMP: MOVE    AC1,LSTBLK      ;SAVE FILE NAME
        SETZM   LSTBLK+2
        MOVEM   AC,LSTBLK+3
        HLLZS   LSTBLK+1
        LOOKUP  LSTCHL,LSTBLK   ;GET FILE
        JFCL                    ;NO MATTER
        MOVEM   AC,LSTBLK+3     ;RESTORE PPN
        SETZM   LSTBLK          ;TO DELETE OLD ONE
        RENAME  LSTCHL,LSTBLK   ;DELETE IT
        JFCL
        MOVEM   AC,LSTBLK+3     ;RESTORE PPN
        MOVEM   AC1,LSTBLK      ;RESTORE FILE NAME
        SETZM   LSTBLK+2
        HLLZS   LSTBLK+1
        ENTER   LSTCHL,LSTBLK   ;CREATE NEW FILE
        JFCL
        OUTPUT  LSTCHL,         ;DUMMY OUTPUT
        POPJ    P,              ;RETURN
;
;       DETERMINE IF SAME TYPE PAPER, IF NOT TALK OPER
;
DETYPE: HLRZ    AC,GDBUFF+5     ;GET PAPER/PARTS WD.
        SETZ    AC1,            ;FOR NEXT INST
        LSH     AC,-^D12        ;GET RID OF BAD STUFF
        LSHC    AC,-3           ;PUT PARTS TO AC1
        ROT     AC1,3           ;PUT PARTS TO RIGHT
        HRLS    ,AC             ;PUT PAPER TO LEFT
        HRR     AC,AC1          ;PUT PAPER PARTS TOGETHER
        CAMN    AC,PPRTYP       ;SEE IF SAME PAPER PARTS WORKING WITH
        JRST    SAMPPR          ;GO DO THIS REQUEST
        MOVEM   AC,PPRTYP       ;SAVE NEW TYPE PAPER
        MOVEM   AC,PPRPTS       ;SAVE AGAIN FOR LATER
        OUTSTR  [ASCIZ/
IS THERE MOUNTED /]
        MOVEI   BUFADR,GDBUFF   ;GET BUFFER POINTER
        PUSHJ   P,SCAN5         ;GO ASK FOR PAPER
        OUTSTR  [ASCIZ/? /]
ASKRTN: PUSHJ   P,YORN
        SKIPA                   ;ON NO
        JRST    SAMPPR          ;ON YES
SKPPPR: IN      TPCHL,          ;GET NEXT BLK
        JRST    .-1             ;KEEP READING TIL EOF
        STATZ   TPCHL,340000    ;CHECK FOR HARDWARE ERROR
        JRST    TPERR2          ;HARDWARE ERROR
        CLOSE   TPCHL,          ;REMOVE EOF CONDITION
        IN      TPCHL,          ;GET NEXT BLK
        JRST    SKPPPR          ;SKIP THIS FILE OF THE REQ.
        STATZ   TPCHL,340000    ;CHECK STATUS
        JRST    TPERR2          ;HARDWARE ERROR
        CLOSE   TPCHL,          ;ERASE EOF CONDITION
        IN      TPCHL,          ;GET NEXT BLK
        SKIPA                   ;NOT EOF, START OF NEXT REQ.
        JRST    NEXTP2          ;EOF, DONE WITH TAPE
        HRR     AC1,TPIN+1      ;GET BUFFER POINTER
        ADDI    AC1,6           ;POINT TO PPR PARTS TYPE
        HLRZ    AC,@AC1         ;GET PAPER TYPE
        LSH     AC,-^D12        ;RID OF NOT USED STUFF
        SETZ    AC1,            ;FOR NEXT INST
        LSHC    AC,-3           ;MOVE PPR OVER
        ROT     AC1,3           ;PUT PARTS TO RIGHT
        HRLS    ,AC             ;PUT PAPER TO LEFT
        HRR     AC,AC1          ;PUT PARTS WITH PAPER
        CAMN    AC,PPRTYP       ;SEE IF SAME PAPER PARTS
        JRST    SKPPPR          ;YES, THEN SKIP THIS REQ.
        JRST    PNTTP7          ;NO, THEN ASK OPER AGAIN
SAMPPR: MOVEI   BUFADR,GDBUFF   ;GET BUFFER POINTER
        SETZB   NUMFIL,FORTRN   ;ZERO POINTER AND INDICATOR
        SETZM   ,HEAD           ;ZERO HEADING INDICATOR
        HLRZ    AC,GDBUFF+1
        ANDI    AC,377          ;MASK INDENT AMT.
        MOVEM   AC,MARGIN
        HLRZ    AC,GDBUFF+4     ;GET PAGES SPOOLED
        MOVEM   AC,PAGESP       ;SAVE IT
        HLRZ    AC,GDBUFF+1     ;GET NO. FILES
        LSH     AC,-^D8         ;RIGHT JUSTIFY
        MOVEM   AC,REPORT       ;SAVE FOR FILE COUNTING
        MOVEM   AC,FILESP       ;SAVE FOR TITLE PAGE
        HLRZ    AC,GDBUFF+5     ;GET PAPER/PARTS
        LSH     AC,-17          ;RIGHT JURTIFY
        MOVEI   AC2,LARMAX      ;EVERYTHING BUT SMALL
        CAIN    AC,4            ;SKIP IF NOT SPECIAL
        MOVE    AC2,GDBUFF+144  ;GET LINES FOR SPECIAL
        CAIE    AC,5            ;CHECK FOR SMALL WHITE
        CAIN    AC,1            ;CHECK FOR SMALL
        MOVEI   AC2,SMLMAX      ;FOR SMALL
        MOVEM   AC2,MAXLIN      ;STORE MAX. LINES/PAGE
        HRRZ    AC2,GDBUFF+4    ;GET LOL
        LSH     AC2,-11         ;RIGHT JUSTIFY
        MOVEM   AC2,PAGLOL      ;SAVE IT
        HRRZ    AC,GDBUFF+3     ;GET PRINTING REQ.
        SETZM   FULLCH          ;ZERO FULLCASE DESIRE
        TRNE    AC,FULMSK       ;TEST OF FULL CASE
        SETOM   FULLCH          ;SHOW TO USE OF REQ.
        HRRZ    AC2,GDBUFF+5    ;GET USER LPP
        MOVEM   AC2,USRLPP      ;SAVE USER LINE/PAGE
        TRNE    AC,HEDMSK       ;SEE IF USER WANTES HEADING
        SETOM   HEAD
        SETZM   TWOBLE          ;ZERO DOUBLE DESIRE
        TRNE    AC,TWOMSK       ;TEST FOR DOUBLE
        SETOM   TWOBLE          ;SHOWS WANT DOUBLE
        TRNE    AC,FTNMSK       ;TEST FOR FORTRAN C/C
        SETOM   ,FORTRN         ;SET FORTRAN DO FLAG
        SETZM   QSTCHR
        TRNE    AC,QSTMSK
        SETOM   QSTCHR
        ADDI    BUFADR,3
        PUSHJ   P,SWITCH
        SUBI    BUFADR,3                ;RESTORE AND HOPE
        PUSHJ   P,OPNASK
        PUSHJ   P,AMTSKP        ;GET AMT TO SKIP BY
;
;       DETERMINE IF THIS REQ. CAN BE PRINTED
;
        SKIPG   FULLPR          ;SKIP IF FULL PRINTER
        SKIPN   FULLCH          ;SKIP IF WANTS IT
        JRST    TAPTTL          ;DO THE REQ.
        OUTSTR  [ASCIZ/
REQUEST NEEDS FULLCASE PRINTER/]
        PUSHJ   P,DOYOU         ;WANT TO PRINT IT
        SKIPA                   ;ON NO
        JRST    TAPTTL          ;ON YES, GO PRINT
        SETZM   RESTAP          ;ZERO RESTART TAPE FLAG
        JRST    SKPPPR          ;SKIP REST OF THIS REQ.
TAPTTL: PUSHJ   P,REQTTL        ;OUT WITH TITLE PAGE
;
;       NEXT BLK CONTAIN FILE DATA. 1ST 3 WDS ARE FILE NAME
;       FILE EXT AND LENGHT OF FILE
;
NEXFIL: IN      TPCHL,          ;READ DESCRIPTOR BLK
        JRST    NEXFL2          ;BR. ON GOOD READ
        STATZ   TPCHL,340000    ;CHECK STATUS
        JRST    TPERR2          ;FAILURE OTHER THAN EOF
        CLOSE   TPCHL,          ;CLEAR EOF CONDITION
        PUSHJ   P,TAILER        ;OUT TAILER
        CLOSE   PCHL,           ;CLEAR BUFFERS
        OUTPUT  LSTCHL, ;EMPTY LAST BUFFER
        JRST    MAKEIT          ;2 EOF = END OF REQ. GO MAKE ENTRY
NEXFL2: HRRZ    AC2,TPIN+1      ;GET BUFFER POINTER
        ADDI    AC2,1           ;CORRECT POSITION ADDRESS
        DMOVE   AC,@AC2         ;GET FILE NAME AND EXT.
        DMOVEM  AC,DAY          ;STORE FOR LATER
        SOSGE   ,REPORT         ;SEE IF ANY MORE TO BUFFER
        JRST    NEXFL3          ;GUESS NOT, JUMP
        PUSHJ   P,STOLST        ;PUT NAME TO LIST
        ADDI    NUMFIL,2        ;ADJUST FOR NEXT STORE
NEXFL3: ADDI    AC2,2           ;POINT TO COPY NO.
        SKIPN   ,RESTAP         ;SKIP IF RESTART FROM TAPE
        JRST    NEXFL4          ;IF NOT, JUMP OVER ALL THIS
        CAME    AC,RESFIL       ;SKIP IF FILE NAMES MATCH
        JRST    NEXFL6          ;ELSE SKIP THIS FILE
        SUBI    AC2,1           ;POINT TO EXT. NAME
        HRLZ    AC3,@AC2        ;GET EXT NAME
        HRLZS   ,AC1            ;SWITCH EXT. NAMES
        ADDI    AC2,1           ;POINT TO COPY NO.
        CAMN    AC1,AC3         ;SEE IF EXT. MATCH
        JRST    NEXFL4          ;YES, THEN CHECK COPY NO.
NEXFL6: IN      TPCHL,          ;READ TIL END OF FILE
        JRST    .-1             ;SAME
        STATZ   TPCHL,340000    ;CHECK STATUS
        JRST    TPERR2          ;TAPE ERROR
        CLOSE   TPCHL,          ;ERASE EOF CONDITION
        IN      TPCHL,          ;READ NEXT FILE
        JRST    NEXFL2          ;GO CHECK THIS FILE
        STATZ   TPCHL,340000    ;CHECK STATUS
        JRST    TPERR2          ;TAPE ERROR
        JRST    NOFILE          ;END OF REQ., WRONG NAME OR COPY TO BIG
NEXFL4: HRLZ    14,@AC2         ;SET IT UP FOR FILE TITLE PAGE
        SKIPN   ,RESTAP         ;SKIP FOR TAPE RESTART
        JRST    NEXFL5          ;ELSE GO ON
        HRRZ    AC,@AC2         ;GET COPY NO. THIS FILE
        CAME    AC,RESTAP       ;SEE IF COPY NO. MATCH
        JRST    NEXFL6          ;NO, SKIP THIS FILE
;
;       FOR RESTART, NOW HAVE CORRECT FILE, ZERO RESTAP SO WE
;       CAN CONTINUE NORMALLY
;
        SETZM   ,RESTAP         ;ZERO TO CONTINUE NORMALLY
NEXFL5: MOVEI   AC1,^D15        ;NO CHAR. TO BYPASS
        SOS     TPIN+2          ;REDUCE BYTE COUNT
        ILDB    AC,TPIN+1       ;ADJUST BYTE POINTER
        SOJG    AC1,.-2         ;SKIP REST OF DATA
        MOVEI   AC,DAY+1        ;GET ADDR. OF EXT. AREA
        PUSHJ   P,FILTTL        ;FILE PAGE
;
;       ZERO PAGE & LINE COUNTERS FOR EACH FILE.
;       BR. ON ORDINARY FILE OR FORTRAN FILE AND PROCESS THEM.
;
        MOVEI   AC,DAY+1                ; CLUDGE
        MOVSS @AC
	SETZM	,CPOL		;[120] Insure that char count = zero
	SETZM	,CPOPAG		;[120] for both line & page.
        SETZM   ,PAGECT         ;ZERO FILE PAGE COUNT
        SETZM   ,LINECT         ;ZERO USER LINE COUNT
        SETZM   ,LINPAG         ;ZERO PAGES LINE COUNT
        SETZM   PAGPAG
;
;       SEE IF FORTRAN, IF IS, GO DO 1ST CHAR. OF FILE
;
        PUSHJ   P,SKPLIN        ;DO CENTERING
        SKIPE   HEAD
        PUSHJ   P,HEDNFF
	SKIPE   ,FORTRN         ;[122] SEE IF THIS FORTRAN PRINTING
          SETOM	CTLFLG          ;[122] SET 1ST CHAR. OF FILE C/C
WHERGO:	SKIPE	FORTRN		;[122] SKIP IF NOT FORTRAN FILE
	  JRST	FORTAP		;[122] Do the FORTRAN C/C processing
;
;       COME HERE TO PROCESS ORDINARY FILE (From Tape)
;
MORFIL: SOSGE   TPIN+2          ;SEE IF BUFFER EMPTY
        JRST    NEXTAP          ;GO REFILL BUFFER
        ILDB    AC,TPIN+1       ;GET CHAR. FROM TAPE
        CAIE    AC,15           ;CHECK FOR CR
        JRST    MORFL1          ;CHECK FOR FF
        MOVE    AC1,TPIN+1      ;GET POINTER
        PUSHJ   P,AFTRCR        ;CHECK NEXT CHAR.
        JRST    MORFIL          ;SKIP THE CR.
MORFL1: PUSHJ   P,CHKFFD        ;CHECK FOR FF
        JRST    MORFIL          ;SKIP THE FF
        PUSHJ   P,PNTOUT        ;TO PRINTER
        PUSHJ   P,ORDFIL        ;DO LF AND FF
        JRST    MORFIL          ;GO DO NEXT CHAR.
;
;       STORE FILE NAME TO DISK LIST
;
STOLST: SOSGE   OUTTMP+2        ;BUFFER FULL
        PUSHJ   P,OUTLST        ;GO EMPTY IT
        IDPB    AC,OUTTMP+1     ;SAME NAME
        SOSGE   OUTTMP+2        ;BUFFER FULL
        PUSHJ   P,OUTLST        ;GO EMPTY IT
        IDPB    AC1,OUTTMP+1    ;SAVE EXTENSIONS
        POPJ    P,              ;RETURN
OUTLST: OUTPUT  LSTCHL,         ;EMPTY BUFFER
        SOS     (P)             ;RETURN
        SOS     (P)             ;SAME
        POPJ    P,              ;RETURN
;
;       READ NEXT TAPE BLK, DETERMINE WHERE TO GO
;
NEXTAP: IN      TPCHL,          ;READ NEXT BLK
        JRST    WHERGO          ;GO SEE WHERE TO GO
NEXTA1: STATZ   TPCHL,340000    ;CHECK STATUS ON ERROR
        JRST    TPERR2          ;HARDWARE ERROR
        CLOSE   TPCHL,          ;CLEAR EOF CONDITION ON TAPE
        SETZM   ,RESPAG         ;ZERO RESTART PAGE COUNT
        JRST    NEXFIL          ;GO DO NEXT FILE TO REQ.

;
;       COME HERE TO DO FORTRAN FILE FROM TAPE
;
FTN1ST:	SETOM	CTLFLG		;[107] SET CONTROL CHARACTER FLAG
FORTAP: SOSGE   TPIN+2          ;SEE IF INPUT EMPTY
	JRST	NEXTAP          ;GO REFIL BUFFER
        ILDB    AC,TPIN+1       ;GET NEXT CHAR.
	JUMPE	AC,FORTAP	;[121] Make sure we IGNORE all nulls
	SKIPE	CTLFLG		;[107] SKIP IF NON C/C CHARACTER
          JRST	FTNCCC          ;[107] GO PROCESS C/C
        CAIN    AC,12           ;LOOK FOR TERMINATOR BEFORE C/C
          JRST	FTN1ST          ;[107] GET SET TO HANDLE FORTRAN C/C
	PUSHJ	P,PNTOUT        ;TO PRINTER
        JRST    FORTAP          ;GO GET NEXT CHAR.

FTNCCC:	SETZM	CTLFLG		;[107] CLEAR CONTROL CHARACTER FLAG
	PUSHJ   P,FTNFIL        ;STORE
        JRST    FORTAP          ;GO DO NEXT CHAR.
;
;       BUILD ACCT. RECORD OF THIS REQUEST FOR PJ
;
;
;       SEE IF ENTRY IS TO BE MADE
;
MAKEIT: MOVEI   BUFADR,GDBUFF
        HLRZ    AC,GDBUFF	;GET STATUS WD
        LSH     AC,-^D12        ;RIGHT JUSTIFY STATUS
        CAILE   AC,%TAPXFR      ;GO ON IF XFER, PENDING OR HOLD
        JRST    NEXTP1          ;DONT MAKE A RECORD
        IFNDEF DEBUG<
MAKEN8: MOVE    AC,[6,,214]>    ;GET PJS PPN
        IFDEF DEBUG<
MAKEN8: MOVE    AC,[3,,234620]>     ;sppoper
        MOVEM   AC,CHGBLK+3     ;STORE FOR LOOKUP
        LOOKUP  ACTCHL,CHGBLK   ;GO GET PJ FILE
        JRST    CREFIL          ;GO CREATE FILE FOR PJ
        MOVEM   AC,CHGBLK+3     ;STORE FOR ENTER
        SETZM   ,CHGBLK+2       ;ZERO FOR ENTER
        ENTER   ACTCHL,CHGBLK   ;SEIZE FOR OUTPUT
        JRST    MAKSEE          ;GO SEE WHY CANT GET FILE FOR OUTPUT
        SETZB   COUNT,BLKPTR    ;ZERO INDICATOR AND BLK COUNTER
        OUTPUT  ACTCHL,         ;DUMMY OUTPUT
MAKEN1: IN      ACTCHL,         ;READ A BLK IN
        SKIPA                   ;SKIP ON GOOD READ
        JRST    MAKER3          ;EROR READ 1ST BLK
MAKEN7: AOS     ,BLKPTR         ;ADD 1 TO BLK COUNTER
MAKEN2: SOSGE   FILIN+2         ;SEE IF INPUT EMPTY
        JRST    MAKEN6          ;YES, GO REFILL IT
        ILDB    AC,FILIN+1      ;GET 1ST BYTE OF A RECORD
        JUMPL   AC,MAKEN4       ;NEG. SHOWS ONE CAN GO HERE
MAKEN3: SOSGE   FILOUT+2        ;SEE IF OUTPUT BUFFER EMPTY
        JRST    MAKEN5          ;GO EMPTY BUFFER
        IDPB    AC,FILOUT+1     ;STORE BYTE TO BUFFER
        JRST    MAKEN2          ;GO DO REST OF RECORDS
MAKEN4: JUMPN   COUNT,MAKEN3    ;BR. IF RECORD ALREADY ENTERED
        SETO    COUNT,          ;SET FLAG SHOW RECORD ENTERED
        MOVE    AC,GDBUFF	;GET REQUEST NUMBER
        TLZ     AC,770000       ;TAKE OFF THE STATUS
        SOSGE   FILOUT+2        ;SEE IF OUTPUT BUFFER FULL
        JRST    MAKER1          ;BUFFER FULL, SHOULDNT BE
        PUSHJ   P,STOENT        ;STORE ENTRY
        SOS     FILIN+2         ;REDUCE BYTE CT. FOR OTHER HALF
        ILDB    AC,FILIN+1      ;GET RID OF OTHER HALF
        JRST    MAKEN2          ;BRING REST OF RECORDS ACROSS
MAKEN5: USETO   ACTCHL,@BLKPTR  ;SET OUTPUT POINTER
        OUTPUT  ACTCHL,         ;WRITE BLK BACK OUT
        MOVE    AC1,BLKPTR      ;GET THE POINTER
        ADDI    AC1,1           ;ADJUST FOR NEXT READ
        USETI   ACTCHL,@AC1     ;SET INPUT POINTER
        JRST    MAKEN3          ;GO SAVE CURRENT BYTE
MAKEN6: IN      ACTCHL,         ;READ NEXT BLK
        JRST    MAKEN7          ;ADJUST COUNTER, PROCESS BLK
        STATZ   ACTCHL,340000   ;CHECK FOR ERROR
        JRST    MAKER4          ;ERROR ON INPUT
        JUMPN   COUNT,MAKEN9    ;BR. IF ENTRY ALREADY MADE
        MOVE    AC,GDBUFF	;GET REQ. NUMBER
        TLZ     AC,770000       ;TAKE OFF THE STATUS
        SOSGE   FILOUT+2        ;SEE IF BUFFER FULL
        JRST    NEWBK1          ;BUFFER FULL, CREATE NEW BLK
        PUSHJ   P,STOENT        ;STORE ENTRY
MAKEN9: USETI   ACTCHL,@BLKPTR  ;SET OUTPUT POINTER
NEWBK2: OUTPUT  ACTCHL,         ;WRITE BLK BACK OUT
        CLOSE   ACTCHL,         ;CLOSE THE CHANNEL
        JRST    NEXTP1          ;GO DO NEXT REQUEST
NEWBK1: USETO   ACTCHL,@BLKPTR  ;SET OUTPUT POINTER
        OUTPUT  ACTCHL,         ;WRITE BLK BACK OUT
        MOVE    AC,GDBUFF	;GET REQ. NUMBER
        TLZ     AC,770000       ;TAKE OFF THE STATUS
        SOSGE   FILOUT+2        ;SEE IF BUFFER FULL
        JRST    MAKER1          ;SHOULDNT BE FULL
        PUSHJ   P,STOENT        ;STORE ENTRY
        JRST    NEWBK2          ;GET READY TO RETURN
STOENT: IDPB    AC,FILOUT+1     ;STORE THE BYTE
        SOSGE   FILOUT+2        ;SEE IF BUFFER FULL
        JRST    MAKER2          ;SHOULD BE FULL
        DATE    AC,             ;GET CURRENT DATE
        HLL     AC,GDBUFF+3     ;GET REQ. DATE
        IDPB    AC,FILOUT+1     ;STORE REQ AND COMP DATE
        POPJ    P,              ;RETURN TO CALLER
MAKSEE: HRRZ    AC,CHGBLK+1     ;GET REASON FOR NO ENTER
        CAIE    AC,3            ;SEE IF FILE IN USE
        JRST    MAKER6          ;CANT GET FILE
        MOVEI   AC,5            ;SLEEP IT OFF
        SLEEP   AC,             ;SLEEP IT OFF
        JRST    MAKEN8          ;GO START ALL OVER
CREFIL: MOVEM   AC,CHGBLK+3     ;STORE PPN FOR ENTER
        ENTER   ACTCHL,CHGBLK   ;CREATE THE FILE
        JRST    MAKER9          ;CANT CREATE NEW FILE
        OUTPUT  ACTCHL,         ;DUMMY OUTPUT
        MOVE    AC,GDBUFF	;GET REQ. NUM
        TLZ     AC,770000       ;TAKE OFF THE STATUS
        SOS     FILOUT+2        ;REDUCE BYTE COUNT
        PUSHJ   P,STOENT        ;STORE ENTRY
        JRST    NEWBK2          ;GO WRITE BLK OUT
NEXTP1: MOVEI   AC,1            ;TO READ FROM LIST BLK
        SETOM   ,REPORT         ;A FLAG TO HARDCOPY
        USETI   LSTCHL,@AC      ;POINT TO 1ST BLK
        INPUT   LSTCHL,         ;READ 1ST BLK
        PUSHJ   P,HRDCPY        ;GO DO HARDCOPY
        IN      TPCHL,          ;READ NEXT TAPE BLK
        JRST    PNTTP7          ;BR. TO DO NEXT REQUEST
NEXTP2: STATZ   TPCHL,340000    ;CHECK FOR ERROR
        JRST    TPERR2          ;FATAL TAPE ERROR
        OUTPUT  PCHL,           ;EMPTY PRINT BUFFER
        CLOSE   TPCHL,          ;CLOSE TAPE CHANNEL
        MTAPE   TPCHL,1         ;REWIND TAPE
        OUTSTR  [ASCIZ/
END OF TAPE/]
        JRST    PRMPRN          ;RETURN TO COMMAND DISPATCH
TPERR2: OUTSTR  [ASCIZ/
FATAL ERROR ON TAPE INPUT/]
        JRST    PRMPRN
MAKER2:
MAKER1: MOVSI   AC,"1"
        SKIPA
MAKER3: MOVSI   AC,"3"
        SKIPA
MAKER4: MOVSI   AC,"4"
        SKIPA
MAKER6: MOVSI   AC,"6"
        SKIPA
MAKER9: MOVSI   AC,"9"
        OUTSTR  [ASCIZ/
MAKE ERROR /]
        OUTCHR  AC
        JRST    SEEREP
;
;       COME HERE TO REPRINT A REQUEST BEGINNING AT A FILE
;       SPECIFIED. HARDCOPY DONE, ACCOUNTING DONE FOR
;       ENTIRE REQUEST ONLY IF NOT DONE BEFORE.
;
        REQNUM= 6               ;HOLD THE REQ. NUM.
        PPRPTS= 7               ;HOLDS THE PAPER AND PARTS
        BUFADR= 10              ;HOLDS GD BUFFER ADDRESS
        FILE= 11                ;HOLDS FILE NAME TO PRINT
        EXT= 12                 ;HOLDS EXT. NAME OF FILE NAME
        FILCHL= 3               ;CHANNEL FOR FILE TO PRINT
        PCHL= 4                 ;PRINTER CHANNEL
        GDCHL= 2                ;CHANNEL FOR GD
        FDCHL= 1                ;CHANNEL FOR FD
;
RESTR1: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
RESTRT: CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    RESTR1          ;BYPASS BLANKS
        CAIE    AC,77           ;CHECK FOR A QUERRY
        JRST    DOREST          ;GO DO REQ. NUMBER
ASKAGN: OUTSTR  [ASCIZ/
ENTER REQ. NUMBER, FILE NAME: /]
        JRST    RESTR1          ;GO GET DATA
DOREST: CAIN    AC,15           ;CHECK FOR A CR
        PUSHJ   P,UPCASE        ;GET THE LF
        CAIN    AC,12           ;CHECK FOR A LF
        JRST    ASKAGN          ;GO ASK AGAIN
        SKIPE   ,DELFLG         ;SKIP IF NOT DELETE FILE
        JRST    CANNUM          ;NEXT MUST BE NUMBER
        CAIE    AC,"T"          ;LOOK FOR TAPE RESTART
        JRST    RESREM          ;GO LOOK FOR REMOTE RESTART
        SKIPN   ,OPRSET         ;ONLY OPER CAN GO FURTHER
        JRST    WHATCM          ;BAD COMMAND
        MOVEI   AC,23           ;TO CHECK TAPE COMMAND
        MOVEI   12,WHATCM               ;WHERE TO GO FOR ILLEGAL CMND
        PUSHJ   P,VRFY1         ;VERIFY COMMAND
        MOVE    AC,AC2          ;GET LAST CHAR
        SETOM   ,RESTAP         ;SHOWS RESTART FROM TAPE
        CAIE    AC,12           ;LOOK FOR TERMINATOR
        JRST    RESTRT          ;NO, LOOK FOR MORE
        JRST    ASKAGN          ;GO ASK FOR DATA
;
;       GET THE REQUEST NUMBER FROM RESPONSE
;
RESREM: CAIN    AC,"R"          ;CHECK FOR REMOTE
        JRST    [PUSHJ P,REMCMD ;GO GET REMOTE COMMAND
                 JRST  DOREST]  ;GO DO REST OF COMMAND
CANNUM: PUSHJ   P,GETNUM        ;GET REQ. NUM
        CAIE    AC2,12          ;CHECK TERMINATOR
        JRST    REQFNM+1        ;GO ASK FOR FILE NAME
ASKFIL: OUTSTR  [ASCIZ/
FILE NAME: /]
REQFNM: PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    REQFNM          ;BYPASS BLANKS
        CAIN    AC,","          ;CHECK FOR SEPERATOR
        JRST    REQFNM          ;GO BYPASS BLANKS
;
;       COME HERE TO GET THE FILE NAME
;
GOTFNM: SETZB   FILE,EXT        ;ZERO STORAGE AREAS
        MOVEI   AC5,6           ;MAX SIXE OF FILE NAME
        MOVE    AC1,[POINT 6,FILE] ;POINT TO STORAGE
GOTFN1: CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    RESIZE          ;SAME
        CAIN    AC,"."          ;CHECK FOR FILE SEPERATOR
        JRST    GETEXT          ;GO GET EXTENSION NAME
        SUBI    AC,40           ;REUCE TO SIXBIT
        IDPB    AC,AC1          ;SAVE FILE NAME
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        SOJG    AC5,GOTFN1      ;DO MORE FILE NAME
        JRST    .+2             ;BYPASS NEXT INST.
NAMPAS: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,"."          ;CHECK FOR SEPERATOR
        JRST    GETEXT          ;GO GET EXTENSION
        CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    GOTBTH          ;NO EXT USED
        JRST    NAMPAS          ;BYPASS REST OF FILE NAME
RESIZE: CAIE    AC5,6           ;SEE IF ANY DATA IN YET
        JRST    GOTBTH          ;GO DO FILE NAME
        JRST    ASKFIL          ;NOTHING IN, ASK AGAIN
;
;       COME HERE TO GET THE EXTENSION
;
GETEXT: MOVEI   AC5,3           ;MAX SIZE OF EXT
        MOVE    AC1,[POINT 6,EXT] ;POINT TO STORAGE
GETEX1: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,15           ;CHECK FOR TERMINATOR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    GOTBTH          ;GO PROCESS FIRLE NAME
        SOJL    AC5,GETEX1      ;SKIP TIL CR OR LF FOUND
        SUBI    AC,40           ;REDUCE TO SIXBIT
        IDPB    AC,AC1          ;SAVE CHAR.
        JRST    GETEX1          ;GO GET NEXT CHAR
;
;       HAVE REQ. NUM., FILE NAME.  NOW GO FIND IT IN GD
;
GOTBTH: DMOVEM  FILE,RESFIL     ;SAVE FILE AND EXT.
        SETZ    AC3,            ;FOR POSSIBLE DELETE
        SKIPE   ,DELFLG         ;SKIP IF NOT DELETE
        JRST    LOKAGN          ;FOR DELETE, GOT NAME, THATS ALL
        SKIPE   ,RESTAP         ;SKIP IF NOT RESTART FROM TAPE
        JRST    ASKCOP          ;JUMP IF RESTART FROM TAPE
        PUSHJ   P,HOWPNT        ;SEE HOW TO PRINT
        SETZM   OPNOUT                  ; FILES/INPUT
        PUSHJ   P,INPMAP                ; READ MAP
GOTBT1:
        MOVE    AC,REQNUM
        PUSHJ   P,SIXNUM
        MOVE    AC,AC1
        PUSHJ   P,FINBNO
        JRST    ERROR3
        PUSHJ   P,GETGD
        PUSHJ   P,SAMSEX        ;SEE IF DAME SEX
        SKIPE   OPRSET          ;ON FAIL, SEE IF SYS OPER
        PUSHJ   P,RITONE        ;SEE IF RIGRT ONE
        JRST    GOTBT1          ;NO, GET NEXT ONE
	PUSHJ	P,KANACK	;PERFORM KATAKANA CHECKING.
	JRST	GOTBT1		;NOT OK TO PROCEED.
        MOVE    AC,CURSTA       ;GET STATUS
        CAIN    AC,%TRAREQ      ;TRANSFER REQUEST?
        JRST    GOTBT1          ;IF SO, CANT TOUCH IT
        CAIN    AC,%CANREQ      ;SEE IF CANCELED
        JRST    NOHAVE          ;FILES GONE
        CAIN    AC,%COMDEL      ;SEE IF COMPLETED FILES DEL.
        PUSHJ   P,RESTOR        ;SEE IF RESTORED
;
;       GET PPN AND AND DATE OF REQUEST FOR GD
;
        DMOVE   AC,GDBUFF+2     ;GET PPN AND DATE OF REQ.
        MOVEM   AC,TUSER        ;SAVE PPN
        HLRZM   AC1,TUSER+1     ;STORE DATE OF REQ.
;
;       FOUND MATCHING REQ. NOW FIND FD
;
        SETZ    OPNOUT          ; OPEN FOR OUTPUT
        PUSHJ   P,READFD        ; READ THE FD
        SETZB   AC3,AC4         ;ZERO FILE AND PAGE COUNT
        SETZM   ,TOTCHR         ;ZERO CHAR. COUNT
        PUSHJ   P,SAVREG
RESCPR: MOVEM   7,SAVR7#        ; KLUDGE TO MAKE 7 WORK
        PUSHJ   P,FNDFD         ;GET THE FD
        JRST    REMACH          ;BR. IF THEY ALL MATCH
FDPAS1:
FDPASS: PUSHJ   P,RDNEXT        ; GET TO NEXT
        MOVE    7,SAVR7         ; RESTORE IT AND HOPE
        SOJG    7,RESCPR          ;GO GET NEXT FD BLK
        JRST    NOFILE
;
;       HAVE FD MATCHING THE REQ., NOW CHECK FILE NAME
;
REMACH:PUSHJ    P,RESREG
        ILDB    AC,FDPTR        ;GET FILE NAME OF THIS FD
        DMOVE   FILE,RESFIL     ; RESTORE FILE NAME
        CAMN    AC,FILE         ;SEE IF FILE NAMES MATCH
        JRST    REFMCH          ;GO CHECK EXTENSION
        SOS     FDPTR           ; GET TO BEG
        MOVEI   AC1,5           ;WDS TO SKIP TO GET CHAR. CNT.
        JRST    NOMACH          ;GO GET CHAR. COUNT
;
;       CHECK FOR MATCHING EXTENSIONS
;
REFMCH:
        ILDB    AC,FDPTR        ;GET EXTENSION WD
        HRLZ    AC1,AC          ;GET CORRCT FILE NAME
        CAMN    AC1,EXT         ;SEE IF EXT. NAMES MATCH
        JRST    HAVEIT          ;FINALLY GOT MATCH
        SOS FDPTR
        SOS FDPTR
        MOVEI   AC1,4           ;NO. WDS TO CHAR. COUNT
NOMACH: HRRZ    AC,FDPTR        ;GET CURRENT POSITION
        ADD     AC1,AC          ;TO GET CHAR. COUNT
        MOVE    AC,@AC1         ;GET IT + PAGE COUNT
        TLZ     AC,777770       ;MASK OFF PAGES
        ADDM    AC,TOTCHR       ;ADD TO CHAR. COUNT
        ADDI    AC3,1           ;ADD FOR THIS FILE PASED
        PUSHJ   P,SAVREG
        JRST    FDPASS          ;GO PASS THIS REQUEST
;
;       HAVE A NAME THAT MATCHES THE REQUEST
;
;       SECURE CHANNEL AND MAKE SURE FILE DESIRED EXISTS
;
        NUMFIL=12
        TOTFIL= 14              ;NO. FILES TO REQ.
        COPYS= 13
HAVEIT: HLLZM   AC,FILBLK+1     ;STORE DIR. EXT. NAMME
        MOVE    AC,SPLGAN       ;GET OWNERS PPN
        MOVEM   AC,FILBLK+3     ;STORE FOR LOOKUP
        SETZM   ,FILBLK+2       ;ZERO FOR LOOKUP
        MOVEM   FILE,FILBLK     ;STORE FILE NAME FOR LOOKUP
        SOS     FDPTR           ; RESTORE TO FRONT
        SOS     FDPTR           ; RESTORE TO FRONT
        LOOKUP  FILCHL,FILBLK   ;GO FIND FILE
NOHAVE: JRST    [OUTSTR  [ASCIZ/
FILE(S) DELETED/]
                JRST  PRMPRN]
;
;       GET THIS REQUESTS TOAL PAGE COUNT FOR LATER
;
        HRRZ    AC1,FDPTR       ;GET BUFFER POINTER
        ADDI    AC1,6           ;POINT TO PAGE CNT WD
        HLRZ    AC,@AC1         ;GET PAGE COUNT
        LSH     AC,-3           ;RIGHT JUSTIFY
        MOVEM   AC,TOTPGS       ;SAVE PAGES THIS FILE
        JRST    HAVIT1          ;GO PRINT THE FILE
NOFILE: OUTSTR  [ASCIZ/
NOT A FILE FOR THAT REQUEST/]
        JRST    PROMPT
;
HAVIT1: PUSHJ   P,GETPPR        ;GET PAPER-PARTS
        MOVEM   AC,PPRPTS       ;SAVE PAPER/PARTQ
        MOVE    COPYS,HCOPYS    ;GET MAX. COPYS
        MOVE    AC,NCOPFD       ;GET NO. COPYS THIS REQ
        EXCH    AC,TOTPGS       ;EXCH PAGES & COPYS FOR DIVIDE
        IDIVM   AC,TOTPGS       ;TOTPGS = # PAGES FOR 1 PRINTING
        MOVE    AC,FILESP       ;GET FILES SPOOLED
        SKIPE   ,REPORT         ;SKIP IF THIS A RESTART
        MOVEI   AC,1            ;ELSE SET FILES SPOOLED AS 1
        MOVEM   AC,TOTFIL       ;STORE TOTAL FILES SPOOLED
        SUB     AC,AC3          ;SUB FILES SCAN AND BYPASSED
        SKIPE   ,REPORT         ;SKIP IF THIS A RESTART
        MOVEI   AC,1            ;ELSE SET NO. FILES TO DO
        MOVEM   AC,NUMFIL       ;NO. FILES TO DO THIS COPY
        MOVE    AC,COPYS        ;GET NO. COPYS TO DO
        SKIPE   ,REPORT         ;SKIP IF THIS RESTART
        MOVEI   AC,1            ;FAKE COPIES AS 1 FOR NOW
        CAIG    AC,1            ;SEE IF MORE THAN 1 COPY TO DO
        JRST    CALPAG          ;ONLY 1, DONT ASK FOR RESTART NO.
ASKCOP: OUTSTR  [ASCIZ/
RESTART COPY NO.: /]
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;SKIP ALL BLANKS
        SETZ    AC2,            ;ZERO RECEIVER
        MOVEI   AC3,2           ;LIMIT INPUT
        MOVE    AC1,[POINT 6,AC2,^D23] ;POINT TO STORAGE
ASKCP1: CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    CRECOP          ;GO CREATE NO. COPIES
        SUBI    AC,60           ;REDUCE TO BINARY
        JUMPL   AC,ASKCOP       ;LESS THAN ZERO, BAD NUM
        CAILE   AC,11           ;SEE IF 9 OR LESS
        JRST    ASKCOP          ;BAD NUMBER
        SOSL    ,AC3            ;SKIP STORE IF HAVE TOO MUCH
        IDPB    AC,AC1          ;STORE NUMBER
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    ASKCP1          ;GO PROCESS IT
CRECOP: JUMPL   AC3,ASKCOP      ;JUMP IF HAVE TOO MUCH
        SKIPE   ,AC3            ;SKIP IF TWO CHAR IN
        LSH     AC2,-6          ;SHIFT 1 DIGIT
        MOVE    AC1,AC2         ;GET NUMBER
        SETZ    AC,             ;ZERO FOR 10S DIGIT
        LSHC    AC,^D30         ;GET TENS DIGIT
        ANDI    AC2,77          ;MASK ONES DIGIT
        IMULI   AC,12           ;MULT. TENS BY TEN
        ADD     AC,AC2          ;ADD TENS AND ONES
        JUMPE   AC,ASKCOP       ;BAD IF ZERO RESULT
        SKIPE   ,RESTAP         ;SKIP FOR NON-TAPE RESTART
        JRST    [MOVEM  AC,RESTAP  ;SAVE COPY RESTART NO.
                MOVEI   AC,777777  ;DUMMY PAGE COUNT
                MOVEM   AC,TOTPGS  ;FOR RESTART PAGE NO.
                JRST    PAGRES]  ;GO GET PAGE RESTART NO.
        CAMLE   AC,NCOPFD       ;SKIP IF LESS OR = TO COPIES
        JRST    ASKCOP          ;YES, THEN ASK AGAIN
CALPAG: HRLM    AC,NUMFIL       ;STORE COPY NO.
        SUB     COPYS,AC        ;SUB COPYS DONE + PARTIAL
        ADDI    COPYS,1         ;ADD FOR PARTIAL
        CAIE    COPYS,1         ;SKIP IF ONLY 1 MORE PASS
        SETZM   ,TOTCHR         ;ELSE ZERO CHAR. COUNT
        ADDM    AC,FCOPYS       ;ADJUST RESTART THRU FILE
;
;       ASK FOR RESTART PAGE NO. A CR INDICATES
;       BEGINNING OF FILE
;
        SKIPA                   ;FOR NORMAL FALL THROUGH
        CLRBFI
PAGRES: OUTSTR  [ASCIZ/
RESTART PAGE NO.: /]
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR LF
        JRST    GOTPAG          ;RESTART FROM BEGGINNING
        PUSHJ   P,GITVAL+6      ;GO PROCESS 
        JRST    PAGRES-1        ;ON ERROR
        CAMLE   AC,TOTPGS       ;SKIP IF VALID PAGE SPECIFICATION
        JRST    PAGRES-1        ;PAGE SPEC. TO BIG
        SUBI    AC,1            ;SET TO PAGE TO START WITH
        MOVEM   AC,RESPAG       ;SAVE RESTART PAGE NO.
GOTPAG: SKIPE   RESTAP          ;SKIP IF NOT TAPE RESTART
        JRST    PRTTP1          ;GO DO TAPE RESTART
        PUSHJ   P,SAVREG
        ADDI    BUFADR,3        ;POINT TO OPTIONS
        PUSHJ   P,SWITCH        ;OUT SWITCHES
        SUBI    BUFADR,3        ;RESTORE POINTER
        PUSHJ   P,OPTION        ;GO ASK FOR OPTIONS
        PUSHJ   P,SCAN1         ;GET PAPER-PARTS
        PUSHJ   P,RESREG
        HRR     AC,COPYS                ;GET NO. COPIESS
        HRL     AC,TOTFIL       ;GET TOTAL FILES
        MOVEM   AC,7            ;SAVE IT
        PUSHJ   P,REQTTL        ;HEAD PAER
        HLLM    NUMFIL,TOTFIL   ;RESTORE START POS.
        HRRZS   ,NUMFIL         ;ZERO STORAGE AREA
        HLRM    7,TOTFIL        ;RESTORE TOTAL NO. FILES
        HRRZM   7,COPYS         ;RESTORE NO. COPIES TO DO
;
;       PRINT OUT THE REQUEST
;
        MOVE    AC,REPORT       ;TO CHECK RESTART
        PUSH    P,AC            ;SAVE FLAG
        SETZM   REPORT          ;CLEAR FLAG
        MOVE    AC1,FCOPYS      ;GET FILES COPY CNT.
        PUSHJ   P,PNTMCH        ;GO PRINT THE FILES
        POP     P,AC            ;RETURN FLAG
        JUMPN   AC,DOCOPY       ;GO IF PRINT BY FILE
RHERE:  HLRZ    AC,GDBUFF	;GET STATUS WD
        LSH     AC,-^D12        ;RIGHT JUSTIFY VALUE
        CAIL    AC,%TAPCOM      ;SKIP IF PENDING, HOLD OR PROCES
        JRST    DOCOPY          ;BR. IF COMPLETED
        JRST    REGREQ          ;TREAT AS REG. REQ.
;
;       PURPOSE HERE IS TO ALLOW THE USER TO PRE-SET
;       HIS REMOTE ABILITY BEFORE ISSUEING ANY OF THE
;       COMMANDS
;
SET:    CAIE    AC,12           ;SEE IF NOTHING AFTER COMMAND
        JRST    SET1            ;YES, GO GET REST OF STUFF
        PUSHJ   P,GETLIC-1      ;GET USER NAME
        JRST    SET2            ;GO CHECK RESULTS
SET1:   PUSHJ   P,GETLIC        ;GO PROCESS NAME
SET2:   SETO    AC1,            ;TO CHECK RESULTS
        CAMN    AC,AC1          ;SEE IF SOMETHING RETURNED
        JRST    PRMPRN          ;SOME TYPE ERROR
        SKIPE   OPRSET          ;SKIP IF NOT SYS OPER
        JRST    PROMPT          ;NO SET ANYTHING ELSE FOR SYS OPER
        TLNN    AC,40           ;SEE IF SPOOL BIT ON
        JRST    HOWPN5          ;NEED LICENSE
        PUSHJ   P,GETRAN        ;GET TRANSFERS
        SETOM   ,REMSET         ;SHOWS REMOTE USER
        JRST    PROMPT          ;GO GET NEXT COMMAND
;
;       COME HERE TO TRANSFER A REQUEST.  ONLY THE SITE
;       SPOOLED TO CAN TRANSFER A REQUEST.  ONLY
;       A TRANSFER STATUS REQUEST CAN BE TRANSFERED.
;       THE COUNT FOR SPOOLED SITE IS DECREASED AND THE
;       COUNT FOR TRANSFERED TO IS INCREASED
;
        LSTREQ=6
        BUFADR=10
;
        PUSHJ   P,UPCASE        ;GET NEXT CHAR
XFER:   CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;SKIP PRECEEDING BLANKS
        CAIE    AC,"?"          ;CHECK FOR QUERRY
        JRST    XFER2           ;GO GET NUMBER
        PUSHJ   P,LFPASS
XFER1:  OUTSTR  [ASCIZ/
REQUEST NUMBER: /]
        JRST    XFER-1          ;GO GET RESPONSE
XFER2:  CAIN    AC,15           ;CR?
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;LF?
        JRST    XFER1           ;GO ASK FOR NUMBER
        PUSHJ   P,GETNUM        ;GET REQ. NUM
        SETOM   OPNOUT          ; OPEN FILE FOR OUTPUT
        PUSHJ   P,INPMAP        ; GET THE MAP
;
;       READ IN A REQUEST AND CHECK TO SEE IF ONE WE WANT
;
XFER3:
        MOVE    AC,LSTREQ
        PUSHJ   P,SIXNUM
        MOVE    AC,AC1
        PUSHJ   P,FINBNO
        JRST    XFER99                  ; NOT FOUND
        MOVE    AC1,CURSTA
        CAIE    AC1,%TRAREQ
        JRST    XFER3
        PUSHJ   P,GETGD                 ; GET THE GD
        MOVE    AC,GDBUFF+3     ; GET PRI LOC NO
        ANDI    AC,7            ;GET CENTER OR REMOTE
        HRLZM   AC,FONADR+1     ;SAVE HOW TO PRINT
        CAIE    AC,1            ;SKIP IF CENTER
        JRST    XFER31          ;GO CHECK REMOTE
        SKIPN   ,OPRSET         ;SKIP IF THIS TH OPER
        JRST    XFER3           ;NO, CANT TOUCH CENTER TRANSFERS
        JRST    XFER32          ;YES, THEN GO ON
XFER31: HRRZ    AC,GDBUFF+4     ;GET LOC. WORD
        ANDI    AC,777          ;SAVE LOCATION
        SKIPE   OPRSET          ;SKIP IF NOT SYS OPER
        JRST    OPRXFR          ;YES, OPER CAN TRANSFER ANYONE
        CAME    AC,USRLOC       ;SEE IF SAME PRINT LOCATIOM
        JRST    XFER3           ;NO, LEAVE REQ. ALONE
OPRXFR: HRRM    AC,FONADR+1     ;SAVE FOR UPDATING COUNTS
XFER32: ADDI    BUFADR,16       ;POINT TO XFER LOCATION
        OUTSTR  [ASCIZ/
TRANSFER TO: /]
        MOVE    AC1,[POINT 7,GDBUFF+22] ; POINTER
XFER4:  ILDB    AC,AC1          ;GET A CHAR
        OUTCHR  AC              ;PUT IT OUT
        CAIE    AC,12           ;SKIP IF END OF LOCATION
        JRST    XFER4           ;NO, GO GET MORE
XFER51: OUTSTR  [ASCIZ/
ENTER TRANSFER NODE: /]
        MOVEI   AC4,1000        ;OCT MULTIPLIER
        SETZ    AC3,            ;ZERO HOLDER
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;BLANK
        JRST    .-2             ;SKIP LEADING BLANKS
        CAIN    AC,"C"          ;WANT TO GO TO CWNTER
        JRST    XFER55          ;GO CHECK FOR CENTER
        MOVEI   AC1,4           ;TO INPUT NODE NUMBER
        PUSHJ   P,ASCOCT        ;GET NODE
        SKIPA                   ;SKIP ON NON NUMBER
        SOJG    AC1,.-2         ;KEEP ON GETTING IT
        SOJL    AC1,XFER52      ;DONT HAVE TO REDUCE
        IDIVI   AC3,10          ;REDUCE BY NUMBER RECEIVED
        JRST    .-2             ;KEEP REDUCING
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
XFER52: CAIN    AC,40           ;BLANK?
        JRST    .-2             ;SKIP LEADING BLANKS
        PUSHJ   P,LFPASS
        CAIGE   AC3,1000        ;SKIP IF REMOTE NODE
        JRST    XFER55+1        ;ANYTHING ELSE IS CENTER
        MOVEI   AC1,2           ;SHOWS GOING TO REMOTE
        HRLZM   AC1,FONADR      ;SAVE INDICATOR SITE
        CAIN    AC,"+"          ;PLUS INDICATTES INTERNAL NUMBER
        ADDI    AC3,4000        ;ADJUST FOR INTERNAL
        MOVE    AC1,AC3         ;GET NODE
        PUSHJ   P,GETPRI        ;GO GET LOC
        JUMPE   AC1,XFER9       ;NO REMOTE PRINTER
ASMCEN: HRRM    AC1,FONADR      ;SAVE NEW LOCATION
        PUSHJ   P,PRIADR        ;PUT OUT ADDRESS
XFER6:  OUTSTR  [ASCIZ/OKAY? /]
        PUSHJ   P,YORN          ;YES OR NO
        JRST    XFER51          ;ON NO
        JRST    XFER77          ;ON YES
XFER55: PUSHJ   P,LFPASS
        MOVEI   AC1,1           ;FLAG AS CENTER
        HRLZM   AC1,FONADR      ;GOING TO COMPUTER CENTER
        MOVE    AC1,SITENO      ;GET CENTER SITE NO.
        JRST    ASMCEN          ;ASSUME CENTER
;
;       CONVERT FROM ASCII TO OCTAL
ASCOCT: CAIL    AC,"0"          ;MUST BE GREATER THAN 0
        CAILE   AC,"9"          ;MUST BE LESS THAN 9
        POPJ    P,              ;ERROR RETURN
        SUBI    AC,60           ;CONVERT TO BINARY
        IMUL    AC,AC4          ;PRODUCE OCT. NUM.
        ADDM    AC,AC3          ;SAVE NUMBER
        IDIVI   AC4,10          ;REDUCE MULTIPLIER
        PUSHJ   P,UPCASE        ;GET NEXT NUMBER
        AOS     (P)             ;FFOR GOOD RETURN
        POPJ    P,              ;RETURN
XFER77:
        HRLOI   AC,007777
        ANDM    AC,GDBUFF       ; CHANGE TO PEND STA
        MOVE    AC,GDBUFF+2     ;GET PPN OF GD
        MOVEM   AC,TUSER        ;SAVE FOR LATER
        HRROI   AC,777770       ;TO MASK OFF OLD TYPE
        ANDM    AC,GDBUFF+3     ;DO GET OLR PRI LOC OFF
        HLRZ    AC,FONADR       ;GET NEW TYPE
        IORI    AC,TRAMSK       ;SHOW REQ. TRANSFERED
        IORM    AC,GDBUFF+3     ; PUT IN XFERED
        HRROI   AC,777000       ;TO MASK OFF OLD LOC.
        ANDM    AC,GDBUFF+4     ;MASK OFF OLD LOC
        HRRZ    AC,FONADR       ;GET NEW LOCATION
        IORM    AC,GDBUFF+4     ;PUT IT BACK
        PUSHJ   P,UPDGD         ; UPDATE IT
;
;       TIME TO UPDATE COUNTERS
;
        HLRZ    AC,FONADR+1     ;GET WHER TO PRINT
        HRRZ    AC1,FONADR+1    ;GET OLD LOC. OF PRINT
        CAIE    AC,1            ;SEE IF CENTER REQ.
        JRST    XFER8           ;JUMP IF REMOTE UPDATE
        PUSHJ   P,UPCNT         ;UPDATE CENTER CNT.
        SKIPA
XFER8:  PUSHJ   P,UPDRM1        ;UPDATE REM. CNT.
;
;       UPDATE FOR NEW LOCATION
;
        HLRZ    AC,FONADR       ;GET NEW WHERE TO PRINT
        HRRZ    AC1,FONADR      ;GET NREW LOC.
        CAIE    AC,1            ;SEE IF CENTER REQ.
        JRST    XFER81          ;GO DO REMOTE
        MOVEM   AC,DUPREQ       ;FLAG FOR SUPCPY CALL
        PUSHJ   P,UPCNT         ;UPDATE CENTER
;
;       MAKE HARDCOPY OF REQUEST FOR SYSTEM OPERATORS
;
        SETZM   REPORT          ;SHOWS WHERE TO GET FILE LIST
        PUSHJ   P,SUPCPY        ;GO MAKE HARDCOPY
        SETOM   TTYON           ;TURN TTY BACK ON
        JRST    XFER82          ;GO SAY WE ALL DONE
XFER81: PUSHJ   P,FINPRI        ;GO GET LOC.
        ADDI    AC,1            ;UP BY ONE
        TLO     AC,400000       ;TURN CHANGE BIT ON
        PUSHJ   P,WRIPRI        ;PUT IT BACK
XFER82: OUTSTR  [ASCIZ/
TRANSFER COMPLETED/]
        SOSG    TOTRAN          ;REDUCE TRANSFER COUNT
        SETOM   TOTRAN          ;WONT BE BOTHERED AGAIN
        JRST    PROMPT
XFER9:  OUTSTR  [ASCIZ/
NO REMOTE PRINTER/]
        JRST    XFER51
XFER99: OUTSTR  [ASCIZ/
NOT A TRANSFER REQUEST/]
        JRST    PROMPT
;
;       COME HERE TO MOVE A REQUEST.  ONLY THE SITE
;       SPOOLED TO CAN TRANSFER A REQUEST.  ONLY
;       A TRANSFER STATUS REQUEST CAN BE TRANSFERED.
;       THE COUNT FOR SPOOLED SITE IS DECREASED AND THE
;       COUNT FOR TRANSFERED TO IS INCREASED
;
        LSTREQ=6
        BUFADR=10
;
        PUSHJ   P,UPCASE        ;GET NEXT CHAR
MOVE:   CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;SKIP PRECEEDING BLANKS
        CAIE    AC,"?"          ;CHECK FOR QUERRY
        JRST    MOVE2           ;GO GET NUMBER
        PUSHJ   P,LFPASS
MOVE1:  PUSHJ   P,GETLIC-1
        SKIPLE  AC
        SKIPA
        JRST    PROMPT
        OUTSTR  [ASCIZ/
REQUEST NUMBER: /]
        JRST    MOVE-1          ;GO GET RESPONSE
MOVE2:  CAIN    AC,15           ;CR?
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;LF?
        JRST    MOVE1           ;GO ASK FOR NUMBER
        PUSHJ   P,GETNUM        ;GET REQ. NUM
        SETOM   OPNOUT          ; OUTPUT
        PUSHJ   P,INPMAP        ; GET MAP
;
;       READ IN A REQUEST AND CHECK TO SEE IF ONE WE WANT
;
MOVE3:
        MOVE    AC,LSTREQ
        PUSHJ   P,SIXNUM        
        MOVE    AC,AC1
        PUSHJ   P,FINBNO
        JRST    MOVE99
        PUSHJ   P,GETGD                 ; GET THE GD THAT WE FOUND
        HRRZ    AC,GDBUFF+3
        ANDI    AC,7            ;GET CENTER OR REMOTE
        HRLZM   AC,FONADR+1     ;SAVE HOW TO PRINT
        CAIN    AC,1            ;SKIP IF REMOTE
        JRST    MOVE3
        JRST    MOVE31          ;GO CHECK REMOTE
MOVE31: HRRZ    AC,GDBUFF+4     ;GET LOC. WORD
        ANDI    AC,777          ;SAVE LOCATION
        SKIPE   OPRSET          ;SKIP IF NOT SYS OPER
        JRST    OPRMOV          ;YES, OPER CAN TRANSFER ANYONE
        CAME    AC,USRLOC       ;SEE IF SAME PRINT LOCATIOM
        JRST    MOVE3   
        MOVEI   AC1,1
        HRLM    AC1,FONADR              ;MAKE A CENTER REQ
        MOVE    AC1,SITENO
        JRST    MOVCEN
OPRMOV: HRRM    AC,FONADR+1     ;SAVE FOR UPDATING COUNTS
        MOVEI   AC2,1   ; LETS MAKE A CENTER REQUEST
        HRLM    AC2,FONADR
        HLRZ    AC2,USRPPN
        CAME    AC2,GODGAN
        JRST    MOVE99
MOVE32:
        OUTSTR  [ASCIZ/
TO: /]
        MOVEI   AC2,2
        HRLM    AC2,FONADR
        PUSHJ   P,UPCASE
        CAIN    AC,40
        JRST    .-2
        SETZ    AC3,
        PUSHJ   P,ASCDEC
        JRST    MOVE99
        MOVE    AC1,AC3
        CAIL    AC1,0
        CAILE   AC1,^D100
        JRST    MOVE99
MOVCEN: HRRM    AC1,FONADR      ;SAVE NEW LOCATION
        PUSHJ   P,PRIADR        ;PUT OUT ADDRESS
MOVE6:  OUTSTR  [ASCIZ/OKAY? /]
        PUSHJ   P,YORN          ;YES OR NO
        JRST    MOVE99          ;ON NO
        JRST    MOVE77          ;ON YES
MOVE55: PUSHJ   P,LFPASS
        MOVEI   AC1,1           ;FLAG AS CENTER
        HRLZM   AC1,FONADR      ;GOING TO COMPUTER CENTER
        MOVE    AC1,SITENO      ;GET CENTER SITE NO.
        JRST    MOVCEN          ;ASSUME CENTER
;
;       CONVERT FROM ASCII TO DECIMAL
ASCDEC: CAIL    AC,"0"          ;MUST BE GREATER THAN 0
        CAILE   AC,"9"          ;MUST BE LESS THAN 9
        JRST    ASCD1           ;ERROR RETURN
        SUBI    AC,60           ;CONVERT TO BINARY
        IMULI   AC3,^D10         ;PRODUCE OCT. NUM.
        ADDM    AC,AC3          ;SAVE NUMBER
        PUSHJ   P,UPCASE        ;GET NEXT NUMBER
        JRST    ASCDEC
ASCD1:  CAIE    AC,15
        POPJ    P,
        PUSHJ   P,UPCASE
        AOS     (P)
        POPJ    P,
MOVE77:
        MOVE    AC,GDBUFF+2     ;GET IT
        MOVEM   AC,TUSER        ;SAVE FOR LATER
        HRROI   AC,777770       ;TO MASK OFF OLD TYPE
        ANDM    AC,GDBUFF+3     ;DO IT
        HLRZ    AC,FONADR       ;GET NEW TYPE
        IORM    AC,GDBUFF+3     ;PUT IT IN
        HRROI   AC,777000       ;TO MASK OFF OLD LOC.
        ANDM    AC,GDBUFF+4     ;DO IT
        HRRZ    AC,FONADR       ;GET NEW LOCATION
        IORM    AC,GDBUFF+4     ;PUT IT IN
        PUSHJ   P,UPDGD         ;UPDATE IT
;
;       TIME TO UPDATE COUNTERS
;
        HLRZ    AC,FONADR+1     ;GET WHER TO PRINT
        HRRZ    AC1,FONADR+1    ;GET OLD LOC. OF PRINT
        CAIE    AC,1            ;SEE IF CENTER REQ.
        JRST    MOVE8           ;JUMP IF REMOTE UPDATE
        PUSHJ   P,UPCNT         ;UPDATE CENTER CNT.
        SKIPA
MOVE8:  PUSHJ   P,UPDRM1        ;UPDATE REM. CNT.
;
;       UPDATE FOR NEW LOCATION
;
        HLRZ    AC,FONADR       ;GET NEW WHERE TO PRINT
        HRRZ    AC1,FONADR      ;GET NREW LOC.
        CAIE    AC,1            ;SEE IF CENTER REQ.
        JRST    MOVE81          ;GO DO REMOTE
        MOVEM   AC,DUPREQ       ;FLAG FOR SUPCPY CALL
        PUSHJ   P,UPCNT         ;UPDATE CENTER
;
;       MAKE HARDCOPY OF REQUEST FOR SYSTEM OPERATORS
;
        SETZM   REPORT          ;SHOWS WHERE TO GET FILE LIST
        PUSHJ   P,SUPCPY        ;GO MAKE HARDCOPY
        SETOM   TTYON           ;TURN TTY BACK ON
        JRST    MOVE82          ;GO SAY WE ALL DONE
MOVE81: PUSHJ   P,FINPRI        ;GO GET LOC.
        ADDI    AC,1            ;UP BY ONE
        TLO     AC,400000       ;TURN CHANGE BIT ON
        PUSHJ   P,WRIPRI        ;PUT IT BACK
MOVE82: OUTSTR  [ASCIZ/
TRANSFER COMPLETED/]
        SOSG    TOTRAN          ;REDUCE TRANSFER COUNT
        SETOM   TOTRAN          ;WONT BE BOTHERED AGAIN
        JRST    PROMPT
MOVE9:  OUTSTR  [ASCIZ/
NO REMOTE PRINTER/]
        JRST    MOVE99
MOVE99: OUTSTR  [ASCIZ/
NOT A TRANSFER REQUEST/]
        JRST    PROMPT
;
;       PURPOSE IS TO ENABLE THE OPERATOR TO GET
;       A HARDCOPY OF A REQUEST
;
        REQNUM= 6
        BUFADR= 10
;
PRECPY: PUSHJ   P,UPCASE        ;GET RESPONSE
HARDCP: CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
        CAIE    AC,77           ;CHECK FOR QUERRY
        JRST    HDCPY1          ;GO GET NO. AND NAME
        PUSHJ   P,LFPASS
ASKCPY: OUTSTR  [ASCIZ/
ENTER REQUEST NO., USER NAME: /]
        JRST    PRECPY          ;GO LOOK FOR RESPONSE
HDCPY1: CAIN    AC,15           ;CHECK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR A LF
        JRST    ASKCPY          ;GO ASK AGAIN
        PUSHJ   P,GETNUM        ;GO GET RE. NUM
        CAIE    AC2,12          ;SKIP IF NOT TERMINATOR
        JRST    HDCPY2+1        ;GO DO USER NAME
HDCPY3: OUTSTR  [ASCIZ/
USER NAME: /]
HDCPY2: PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS BLANKS
        CAIN    AC,","          ;CHECK FOR SEPERATOR
        JRST    HDCPY2          ;GO BYPASS REST OF BLANKS
        CAIN    AC,15           ;LOOK FOR CR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;LOOK FOR LF
        JRST    HDCPY3          ;GO ASK FOR NAME
;
;       PREPARE TO GET USER NAME
;
        SETZB   AC3,AC4         ;ZERO AREA FOR NAME
        MOVEI   AC5,14          ;MAX. SIZE OF NAME ALLOWED
        MOVE    AC1,[POINT 6,AC3] ;POINT TO NAME AREA
HDCPY4: CAIN    AC,15           ;LOK FOR TERMINATOR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;LOK FOR LF
        JRST    HRDNAM          ;GO PROCESS NAME
        SUBI    AC,40           ;REDUCE TO SIXBIT
        SOJL    AC5,.+2         ;SKIP TIL TERMINATOR
        IDPB    AC,AC1          ;SAVE NAME
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    HDCPY4          ;GO PROCESS IT
;
;       HAVE NAME, DO LOOKUP TO GET PPN
;
HRDNAM: MOVEI   AC,AC3          ;ADDRESS OF DATA
        MOVEM   AC,GETGAN+1     ;STORE FOR EXT. LOOKUP
        PUSHJ   P,VALPPN        ;VALIDATE NAME
;
;       HAVE THE REQUEST NUMBER AND PPN OF USER
;       GO LOOK FOR THE REQUEST
;
        SETZM   OPNOUT          ; INPUT ONLY
        PUSHJ   P,INPMAP                ; GET MAP
HDCPY5:
        MOVE    AC,REQNUM
        PUSHJ   P,SIXNUM
        MOVE    AC,AC1
        PUSHJ   P,FINBNO
        JRST    ERROR3
        PUSHJ   P,GETGD
        MOVE    AC,GDBUFF+2     ;GET THAT PPN
        CAME    AC,GETGAN+1     ;SEE IF PPN MATCHES
        JRST    HDCPY5          ;NO MATCH, GET NEXT REQUEST
        MOVEM   AC,TUSER        ;SAVE THIS GAN/UUN
        HLRZ    AC1,GDBUFF+3    ;GET IT (DATE)
        OUTSTR  [ASCIZ/FROM: /]
        PUSHJ   P,WDATE
        OUTSTR  [ASCIZ/? /]
        PUSHJ   P,YORN
        JRST    HDCPY5          ;NO, KEEP LOOKING
        OUTSTR  [ASCIZ/
      D U P L I C A T E     R E Q U E S T/]
        SETOM   ,DUPREQ         ;SET DUP. REQ. FLAG
        PUSHJ   P,HRDCPY        ;DO HARDCOPY
        OUTSTR  [ASCIZ/
      D U P L I C A T E     R E Q U E S T/]
        SETZM   ,DUPREQ         ;ZERO DUP. REQ. FLAG
        JRST    PROMPT          ;RETURN TO COMMANDER
;
;       PURPOSE HERE IS TO ALLOW THE OPERATOR
;       TO STORE REQUESTS TO TAPE BY REQUEST NO.,
;       BY FORM OR BY ALL
;       ONLY ONE STORE COMMAND ALLOWED PER TAPE ACESS
;
        AC= 0
        AC1= 1
        AC2= 2
        AC3= 3
        AC4= 4
        AC5= 5
        REQNUM= 6
        PPRPTS= 7               ;HOLD REQUEST PAPER PARTS
        TPCHL= 7                ;CHANNEL FOR THE TAPE
        BUFADR= 10              ;CONTAINS BUFFER ADDRESS
        REQPPN= 12              ;HOLDS GD REQ. PPN
        GDDATE= 13              ;HOLD GD REQ. DATE
        TIMES= 14               ;TIMES TO COPY FILES
        GDCHL= 2                ;CHANNEL FOR GD TABLE
        FDCHL= 1                ;CHANNEL FOR FD TABLE
        FILCHL= 3               ;CANNEL FOR FIL INPUT
;
;
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
STORE:  CAIN    AC,40           ;CHECK FOR BLANKS
        JRST    .-2             ;BYPASS PRE-BLANKS
        CAIE    AC,77           ;CHECK FOR QUERRY
        JRST    STORE1          ;GO PROCESS COMMAND
        OUTSTR  ASKITM          ;TELL WHAT ITEM ARE THERE
        OUTSTR  REQNJB          ;ENTER REQ. NUM.
        OUTSTR  WRDALL          ;ENTER WORD ALL
        OUTSTR  ALLPRO          ;ALL WILL BE PROCESSED
        OUTSTR  WRDFRM          ;ENTER WORD FORM
        OUTSTR  AFMPRO          ;ALL THOSE FORMS BE DONE
        OUTSTR  DEFALT          ;TELL WHAT DEFAULT IS
        OUTSTR  ETRAGN          ;ASK FOR CORRECT ITEM
        PUSHJ   P,LFPASS
        JRST    STORE-1         ;GO GET RESPONSE
STORE1: SETZM   ,BLKPTR         ;ZERO BLK POINTER
        SETOM   ,RELFLG         ;DONT RELEASE CHANNEL FLAG
        SETOM   TAPSTO          ;ALLOWS TO STORE FULLCH REQ.
        CAIN    AC,"A"          ;CHECK FOR ALL COMMAND
        JRST    STOALL          ;GO VERIFY THAT COMMAND
        CAIN    AC,"F"          ;CHECK FOR FORM COMMAND
        JRST    STOFRM          ;GO VERIFY FORM COMMAND
        CAIN    AC,15           ;LOOK FOR DEFAULT OF ALL
        PUSHJ   P,UPCASE        ;GET THE LF
        CAIN    AC,12           ;LOOK FOR DEFAULT OF ALL
        JRST    ALLSTO          ;GO DO ALL
;
;       ASSUME DOING STORE BY REQUEST NO.
;
        PUSHJ   P,GETNUM        ;GET REQ. NUMBER
        SETZM   OPNOUT          ; INPUT ONLY
        PUSHJ   P,INPMAP        ; GET MAP
STONUM:
        MOVE    AC,REQNUM
        PUSHJ   P,SIXNUM
        MOVE    AC,AC1
        PUSHJ   P,FINBNO
        JRST    ERROR3
        PUSHJ   P,GETGD
        PUSHJ   P,RELGD
        MOVE    AC1,CURSTA
        CAIN    AC1,%TRAREQ     ;TRANSFER REQUEST?
        JRST    STONUM          ;CANT TOUCH TRANSFER
        CAILE   AC1,%COMDEL     ;SKIP IF NOT CANCELED
        JRST    STONUM          ;BYPASS CANCELED REQUESTS
        CAIN    AC1,%COMDEL     ;SEE IF FILES DELETED
        PUSHJ   P,RESTOR        ;SEE IF THEY BEEN RESTORED
;
;       HAVE REQ. NUM. COMPLETED, PENDING, HOLD
;       OR IN PROCESS.  MAKE SURE RIGHT ONE AND TAKE IT
;
        PUSHJ   P,RITONE        ;SEE IF RIGHT ONE
        JRST    STONUM          ;BR. CAUSE NOT RIGHT ONE
        MOVEM   BUFADR,TAPSTO   ;FLAG SHOWS SINGLE STORE
        PUSHJ   P,SWITCH        ;OUT SWITCHES
        PUSHJ   P,OPTION        ;GO GET OPTIONS
;
;       GO GET TAPE AND COPY FILE OVER
;
        PUSHJ   P,ASKTAP        ;GO GET TAPE
        PUSHJ   P,COPREQ        ;COPY REQ. OOVER
        JRST    TPEDON          ;GO WRITE EOF AND RETURN
;
;       COME HERE TO DO POSSIBLE FORM COMMAND
;
STOFRM: MOVEI   12,CANT         ;ERROR EXIT ADDRESS
        MOVEI   AC,20           ;SHOWS COMMAND TO VERIFY
        PUSHJ   P,VRFY1         ;VERIFY COMMAND
        MOVE    AC,AC2          ;GET TERMINATOR
        CAIE    AC,40           ;CHECK FOR BLANKS
        JRST    STOFM5          ;NO, THEN BYPASS THIS
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    .-3             ;GO CHECK FOR MORE BLANKS
STOFM5: SETZM   ,TUSER          ;ZERO STORAGE AREA
        PUSHJ   P,ACTFRM        ;GET PAPER-PARTS
        PUSHJ   P,ASKTAP        ;GET TAPE
        SETZM   OPNOUT          ; OPEN INPUTT ONLY
        PUSHJ   P,INPMAP        ; GET MAP
        MOVEM   PPRPTS,SAVPPR           ; SAVE FOR LATER
STOFM1: MOVE    PPRPTS,SAVPPR
        MOVE    AC,PPRPTS       ; GET WHAT LOOKING FOR
        PUSHJ   P,FNDTYP        ; GET IT
        JRST    STOFM2  ; THAT IS IT
        MOVE    AC1,CURSTA
        CAIE    AC1,%REQPEN
        JRST    STOFM1
        PUSHJ   P,GETGD         ; GET GD
        PUSHJ   P,RELGD
        PUSHJ   P,SAMSEX        ;MAKE SURE SAME SEX
        JRST    STOFM1          ;NO, THEN SKIP IT
	PUSHJ	P,KANACK	;PERFORM KATAKANA CHECKING.
	JRST	STOFM1		;NOT OK TO PROCEED.
;       REQ. HAS CORRECT PPR.PRTS & STATUS PENDING OR HOLD
;
        SETOM   ,TUSER          ;SET FLAG
        PUSHJ   P,COPREQ        ;COPY REQ. OVER
        JRST    STOFM1          ;GO GET NEXT REQUEST
STOFM2: SKIPN   ,TUSER          ;SEE IF ANY REQUESTS DONE
        JRST    ERROR3          ;NO REQUEST PROCESSED
TPEDON: MTAPE   TPCHL,3         ;WRITE FINAL EOF
        MTAPE   TPCHL,0         ;WAIT TIL DONE
        CLOSE   TPCHL,          ;CLOSE TAPE IO CHANNEL
        MTAPE   TPCHL,1         ;REWIND TAPE TO LOAD POINT
        PUSHJ   P,RELGD
        JRST    PROMPT
;
;       COME HERE FOR ALL COMMAND OR DEFAULT TO ALL CMND
;       STORE ALL PENDING OR HOLD REQUESTS
;
STOALL: PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIE    AC,"L"          ;CHECK FOR L IN ALL
        JRST    STOAL1          ;CHECK MORE VALID COMMAND
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        CAIN    AC,"L"          ;CHECK FOR LAST L IN ALL
        PUSHJ   P,UPCASE        ;GET LAST CHAR.
STOAL1: CAIN    AC,40           ;CHECK FOR BLANK
        JRST    .-2             ;BYPASS PRE BLANKS
        CAIN    AC,15           ;CHECK FOR TERMINATOR
        PUSHJ   P,UPCASE        ;GET LF
        CAIE    AC,12           ;CHECK FOR TERMINATPOR
        JRST    CANT            ;CANT UNDERSTAND COMMAND
;
ALLSTO:
        SETZM   OPNOUT
        PUSHJ   P,INPMAP
        PUSHJ   P,ASKTAP        ;GET TAPE
        SETZB   COUNT,TUSER     ;ZERO FLAGS
STOAL2: MOVE    AC,COUNT        ;GET PPR/PRTS INDICATOR
        MOVEM   AC,SAVCOU#      ; SAVE FOR LATER
        IDIVI   AC,4            ;GETTING PAPER/PARTS
        LSH     AC,^D18         ;MOVE PAPER TO LEFT
        HRR     AC,AC1          ;BRING OVER PARTS
        AOBJN   AC,.+1          ;ADJUST TO CORRECT PPR/PTS
        CAIN    COUNT,^D12      ;SEE IF SPECIAL
        HRRI    AC,0            ;ZERO PARTS FOR SPECIAL
        MOVEM   AC,PPRPTS       ;SAVE TO PAPER/PARTS
        MOVEM   AC,SAVPPR#
STOAL3: MOVE    PPRPTS,SAVPPR
        PUSHJ   P,SCAN          ;GET ALL REQ.
        JUMPN   AC,STOAL4       ;BR. ON EOF FIND
        PUSHJ   P,SAMSEX        ;MAKE SURE CENTER
        JRST    STOAL3          ;NO, THEN SKIP IT
	PUSHJ	P,KANACK	;PERFORM KATAKANA CHECKING.
	JRST	STOAL3		;NOT OK TO PROCEED.
;
;       HAVE REQ. WITH CORRECT PPR/PTS AND HOLD OR PENDING
;
        SETOM   ,TUSER          ;SET FOUND FLAG
        PUSHJ   P,COPREQ        ;COPY OVER THE REQ.
        JRST    STOAL3          ;GET NEXT REQ. SAME PPR/PTS
;
;       SEE IF DONE ALL PAPER PARTS
;
STOAL4:
        MOVE    COUNT,SAVCOU
        ADDI    COUNT,1         ;INCREASE COUNTER
        MOVEM   COUNT,SAVCOU
        PUSHJ   P,SETTOT        ; DO IT
        CAIG    COUNT,^D23      ;SEE IF ANY MORE TO DO
        JRST    STOAL2          ;YES, GO DO NEXT PPR/PTS
        JRST    STOFM2          ;NO, GO WRITE EOF
;
;
;       ASK FOR TAPE AND GET IT
;
ASKTAP: MOVEI   AC,10           ;SETUP WD. DATA MODE
        MOVEM   AC,TAPDEF       ;SAME
        PUSHJ   P,TAPQUS        ;ASK TAPE QUESTIONS
        INBUF   TPCHL,1
        OUTBUF  TPCHL,1         ;SET BUFFER FOR OUTOUT
        OUTPUT  TPCHL,          ;DUMMY OUTPUT
;
;       GET STATUS OF TAPE
;
ASKTP5: MOVEI   AC1,2           ;SHOWS TYPE STATUS TO DO
        UGETF   TPCHL,AC1       ;GO GET STATUS BITS
        HLRZM   AC2,AC3         ;SAVE STATUS FOR LATER
        TLNE    AC2,400000      ;SEE IF PROTECTED
        JRST    NORING          ;TAPE NEEDS RING
;[123]	***** Already does a dummy output above ***** /CAB 12-Nov-81
;[123]	OUTPUT  TPCHL,          ;DUMMY OUTPUT
;
;       GET BPI AND SETUP AS HIGH, MED OR LOW
;
        PUSHJ   P,GETBPI
        IORI    AC1,10          ;10 DATA MODE, ODD PARITY
        SETSTS  TPCHL,@AC1      ;DO IT
;
;       GET CHANNEL FOR INPUT FILES TO COPY OVER
;
        INIT    FILCHL,10       ;SECURE CHANNEL
        SIXBIT /DSK/
        XWD     FILIN
        JRST    ERROR1
;
;       REWIND TAPE TO LOAD POINT IF NECESSARY
;
        TRNE    AC3,40000       ;SEE IF AT LOAD POINT
        JRST    .+3             ;SKIP IF THERE
        MTAPE   TPCHL,1         ;REWIND TO LOAD POINT
        MTAPE   TPCHL,0         ;WAIT TIL DONE
        OUTSTR  [ASCIZ/
NEW TAPE? /]
        PUSHJ   P,YORN          ;GET YES OR NO
        SKIPA                   ;SKIP IF NO ANSWER
        POPJ    P,              ;YES, WRITE FROM BEGINNING
SKPREQ: MTAPE   TPCHL,10        ;SKIP TO 2 EOF (1 FULL REQUEST)
        MTAPE   TPCHL,0
        GETSTS  TPCHL,AC1       ;GET FILE STATUS
        TRZ     AC1,20000       ;TURN OFF EOF CONDITION
        SETSTS  TPCHL,1         ;SET NEW STATUS
        MTAPE   TPCHL,6         ;SKIP NEXT EOF
        MTAPE   TPCHL,0
        IN      TPCHL,          ;READ NEXT RECORD
        JRST    SKPREQ          ;GOO READ,SKIP REST OF REQ.
        STATZ   TPCHL,340000    ;CHECK FOR EOF CONDITION
        JRST    BADWRT          ;SOME OTHER TYPE OF ERROR
        GETSTS  TPCHL,1         ;GET STATUS
        TRZ     AC1,20000       ;TURN OFF EOF CONDITION
        SETSTS  TPCHL,AC1       ;RESET STATUS
        MTAPE   TPCHL,7         ;SKIP BACK OVER EOF
        MTAPE   TPCHL,0
        POPJ    P,
;
;       COPY REQUEST TO TAPE, WRITE EOF
;       SET FLAG IN GD SHOWING GOINT TO TAPE
;
COPREQ: MOVE    REQNUM,GDBUFF   ;GET REQ. WD.
        TLZ     REQNUM,REQMSK   ;GET REQ. NO.
        MOVE    REQPPN,GDBUFF+2
        HLRZ    GDDATE,GDBUFF+3 ;GET GD REQ. DATE
        MOVE    TIMES,HCOPYS    ;GET MAX. COPY COUNT
        HRLI    TIMES,1         ;SET INITIAL COPY NO.
        HLRZM   TIMES,FCOPYS    ;SET TIMES THROUGH COUNT
        MOVEM   TIMES,SAVTIM#
        HRLI    AC,GDBUFF       ;GET BUFFER ADDRESS
        HRR     AC,TPOUT+1      ;GET OUTPUT ADDRESS
        ADDI    AC,1            ;ADJUST OUTPUT ADDRESS
        HRRZ    AC1,AC          ;GET THE 'TO' ADDRESS
        ADDI    AC1,177         ;CREATE ENDING ADDRESS
        BLT     AC,@AC1         ;MOVE GD BLOCK ACROSS
        MOVEI   AC,200          ;NO. WDS XFERED
        ADDM    AC,TPOUT+1      ;ADJUST OUPUT BYTE POINTER
;
;       GET NAMES FOR OTHER SYS.
;
        HRRZ    AC4,TPOUT+1     ;GET BUFFER POINTER
        SUBI    AC4,175         ;POINT TO PPN
        SKIPG   TAPSTO          ;SKIP IF DOING SINGLE STORE
        JRST    NOALTR          ;DONT ALTER SWITCHES
        SUBI    AC4,1           ;POINT TO INDENT
        HLRZ    AC,@AC4         ;GET THEM
        ANDI    AC,777400       ;MASK OLD MARGIN
        IOR     AC,MARGIN       ;IN WITH NEW
        HRLM    AC,@AC4         ;PUT IT BACK
        ADDI    AC4,4           ;POINT TO USER LINE/PAGE
        MOVE    AC,USRLPP       ;GET NEW ONES
        HRRM    AC,@AC4         ;PUT IN NEW ONES
        SUBI    AC4,2           ;POINT TO SWITCHES
        SETO    AC,             ;ENTIRE MASK
        TRZ     AC,FTNMSK!QSTMSK!HEDMSK!TWOMSK ;GET RID OF THESE
        ANDM    AC,@AC4         ;DO IT
        SETZ    AC,             ;PREPARE FOR NEW SWITCHES
        SKIPE   FORTRN          ;SKIP IF NO FORTRAN
        IORI    AC,FTNMSK       ;WANTS FORTRAN
        SKIPE   QSTCHR
        IORI    AC,QSTMSK
        SKIPE   HEAD            ;SKIP IF NO HEAD
        IORI    AC,HEDMSK       ;WANTS HEADING
        SKIPE   TWOBLE          ;DOUBLE SPACING?
        IORI    AC,TWOMSK       ;WANTS IT
        IORM    AC,@AC4         ;PUT TO REQ.
;
NOALTR: OUT     TPCHL,          ;WRITE OUT GD BLK TO TAPE
        SKIPA                   ;SKIP FOR GOOD WRITE
        JRST    BADWRT          ;BAD TAPE WRITE
;
;
        OUTSTR  [ASCIZ/
STORING REQUEST /]
        MOVEI   AC5,5           ;NO. CHAR. TO DO
        MOVE    AC1,GDBUFF      ;GET REQ. WD.
        LSH     AC1,6           ;GET RID OF STATUS
        SETZ    AC,             ;FOR NEXT INST.
        LSHC    AC,6            ;GET REQ. DIGIT
        ADDI    AC,40           ;CONVERT TO ASCII
        OUTCHR  AC              ;PUT OUT CHAR.
        SOJG    AC5,.-4         ;DO REST OF NUM.
;
;       MOVE GD ACROSS, GET EACH FD, MOVE IT AND ITS FILE
;
COPAGN:
COPRQ8: PUSHJ   P,READFD        ;READ FD BLK
CPREQ8: PUSHJ   P,FNDFD         ;GET 1ST WD. OF BLK
        MOVE    AC,NCOPFD       ; LETS SEE IF WE SHOULD MAKE ANOTHER
        CAMGE   AC,FCOPYS       ; WHAT SAY
        JRST    COPRQ3          ; SAY NO
        MOVE    AC2,1(AC1)      ; GET DIRECTORE NAME
        HLLZ    AC3,2(AC1)      ; GET  EXTENSIONNAME
        DMOVEM  AC2,FILBLK
        MOVE    AC,SPLGAN
        MOVEM   AC,FILBLK+3
        SETZM   ,FILBLK+2       ;ZERO FOR LOOKUP
        LOOKUP  FILCHL,FILBLK   ;GO GET FILE
        JRST    COPRQ2          ;SKIP THIS FILE
;
;       COPY FILE NAME, EXT AND THE COPY NO. OF THE FILE
;       TO TAPE
;
        IN      FILCHL,         ;READ 1ST BLK
        SKIPA                   ;SKIP ON GOOD READ
        JRST    ERROR4          ;BR. ON BAD READ
        SOS     TPOUT+2         ;REDUCE BYTE COUNT
        IDPB    AC2,TPOUT+1     ;STORE FILE NAME TO TAPE
        MOVE    AC,2(AC1)       ;GET ORIG EXT NAME
        SOS     TPOUT+2         ;REDUCE BYTE COUNT
        IDPB    AC,TPOUT+1      ;STORE EXT. NAME
        SOS     TPOUT+2         ;REDUCE BYTE COUNT
        HLRZ    AC,SAVTIM       ;GET COPY NO.
        IDPB    AC,TPOUT+1      ;STORE TO TAPE
;
;       COPY THE FILE ACROSS
;
COPRQ4: SOSGE   FILIN+2         ;REDUCE BYTE INPUT COUNT
        JRST    COPRQ5          ;GO READ IN NEXT BLK
        ILDB    AC,FILIN+1      ;GET NEXT INPUT BYPE
COPRQ6: SOSGE   TPOUT+2         ;SEE IF OUTPUT BUFFER FULL
        JRST    COPRQ7          ;BR. IF OUTPUT BUFFER FULL
        IDPB    AC,TPOUT+1      ;STORE BYTE TO OUTPUT BUFFER
        JRST    COPRQ4          ;GO DO REST OF FILE
COPRQ5: IN      FILCHL,         ;READ NEXT INPUT BLK
        JRST    COPRQ4          ;GO PROCESS THIS BLK
        STATZ   FILCHL,340000   ;CHECK STATUS
        JRST    ERROR4          ;HARDWARE ERROR
        OUT     TPCHL,          ;WRITE CURRENT BUFFER
        JRST    COPRQ2          ;GO SEE IF DO FILE AGAIN
        JRST    BADWRT          ;BAD WRITE
COPRQ7: OUT     TPCHL,          ;WRITE OUT CURRENT DATA
        JRST    COPRQ6          ;GO STORE CURRENT BYTE
        JRST    BADWRT          ;BAD WRITE TO TAPE
;
;       FOUND EOF IN FD FILE, WRITE EOF, RETURN TO CALLER
;
COPRQ9:
        MOVE    TIMES,SAVTIM
        SUBI    TIMES,1         ;REDUCE TIMES DONE ALL FILE TO REQ.
        HRLZI   AC,1            ;TO ADJUST COPY COUNT
        ADDM    AC,TIMES        ;ADJUST COPY COUNT
        HRRZ    AC,TIMES        ;GET COPYS TO DO
        MOVEM   TIMES,SAVTIM
        AOS     FCOPYS          ;INCREASE TIME THRU FILES
        JUMPG   AC,COPAGN       ;JUMP IF DO ANOTHER COPY
        MTAPE   TPCHL,3         ;WRITE EOF TO THIS REQUEST
        MTAPE   TPCHL,0         ;WAIT TIL DONE
        PUSHJ   P,TAPXFR        ;SET TRANSFER FLAG
        POPJ    P,              ;RETURN TO CALLER
;
;       COME HERE TO BYPASS REST OF THIS FD
;
COPRQ2: MTAPE   TPCHL,3         ;WRITE EOF FOR THIS FILE OF THE REQ.
        MTAPE   TPCHL,0         ;WAIT TIL DONE
COPRQ3: PUSHJ   P,RDNEXT        ; GET NEXT FD
        SOJG    7,CPREQ8          ; OK
        JRST    COPRQ9          ;GO GET NEXT BLK
;
;       ASK TAPE QUESTIONS
;
TAPQUS: OUTSTR  [ASCIZ/
LOGICAL UNIT NAME: /]
        PUSHJ   P,UPCASE        ;GET RESPONSE
        CAIN    AC,40           ;BYPASS BLANKS
        JRST    .-2             ;BYPASS BLANKS
        SETZ    AC5,            ;INCASE WRONG INFO INPUT
        CAIN    AC,"M"          ;CHECK FOR MTA
        JRST    .+3             ;COULD BE OK
        CAIE    AC,"F"          ;CHECK FOR FTA
        JRST    ASKTP2          ;GO SKIP REST OF WHATEVER
        SETZM   ,DEVNAM         ;ZERO NAME AREA
        MOVEI   AC5,4           ;MAX. NAME USED
        MOVE    AC1,[POINT 6,DEVNAM] ;POINT TO HOLDING AREA
ASKTP2: CAIN    AC,15           ;CHECK FOR TERMINATOR
        PUSHJ   P,UPCASE        ;GET LF
        CAIN    AC,12           ;CHECK FOR TERMINATOR
        JRST    ASKTP3          ;GO SEE WHAT WE HAVE
        SUBI    AC,40           ;REDUCE TO SIXBIT
        SOSL    ,AC5            ;NO STORE IF HAVE TOO MUCH
        IDPB    AC,AC1          ;STORE NAME
        PUSHJ   P,UPCASE        ;GET NEXT CHAR.
        JRST    ASKTP2          ;KEEP LOKKING FOR DATA
ASKTP4: OUTSTR  [ASCIZ/
ENTER FTA0, MTA1, ETC/]
        JRST    TAPQUS          ;GO ASK AGAIN
ASKTP3: JUMPN   AC5,.-2         ;BR. IF NOT 4 CHAR. IN ONLY
        OPEN    TPCHL,TAPDEF    ;GET TAPE CHANNEL
        JRST    TPERR1          ;TAPE CHANNEL NOT THERE
        POPJ    P,              ;RETURN TO CALLER
;
; GET BPI AND SET AS HIGH MED OR LOW
;
GETBPI: MOVE    AC2,AC3         ;GET UGETF INFO
        ANDI    AC2,40          ;GETTING TRACK TYPE
        LSH     AC2,-5
        OUTSTR  [ASCIZ/
TAPE IS /]
        OUTSTR  TRACK(AC2)
        PUSH    P,AC3           ;SAVE INFO 
BPI1:   OUTSTR  [ASCIZ/
BPI: /]
        PUSHJ   P,UPCASE        ;GET 1ST CHAR
        PUSHJ   P,GITVAL+6      ;GET INFO CONVERT TO BINARY
        JRST    BPIERR          ;ON INVALID DATA
        POP     P,AC3           ;RETURN AC3
        SETZ    AC4,            ;SEE WHAT HE SPECIFIED
        CAIN    AC,^D6250
        MOVE    AC4,[1,,20]
        CAIN    AC,^D1600
        MOVE    AC4,[2,,10]
        CAIN    AC,^D800
        MOVE    AC4,[3,,4]
        JUMPE   AC,BPIERR       ;INVALID SPECS
        HRRZ    AC2,AC3         ;MAKE SURE LEFT IS ZERO FOR TEST
        TDNN    AC2,AC4         ;SEE IF DENSITY AVAILABLE
        JRST    BPINOT          ;NOT AVAILABLE
        HLRZ    AC5,AC4         ;GET COUNT
        HRRZS   ,AC4            ;ZERO OUT OLD STUFF
        MOVEI   AC1,3
THSDN1: SOJE    AC5,GOTHML      ;GO THIS MATCH
        LSH     AC4,1           ;SHIFT CHECKER
        TDNE    AC2,AC4         ;CHECK NEXT DENSITY
        SUBI    AC1,1           ;IF IT EXISTS
        JRST    THSDN1          ;CHECK NEXT
GOTHML: LSH     AC1,7           ;SHIFT FOR NEW INIT
        POPJ    P,
BPIERR: CLRBFI
        OUTSTR  [ASCIZ/
VALID ARE 6250, 1600 & 800/]
        JRST    BPI1
BPINOT: OUTSTR  [ASCIZ/
DENSITY NOT AVAILABLE/]
        JRST    BPI1
;
NORING: OUTSTR  [ASCIZ/
TAPE NEEDS A WRITE RING/]
        JRST    PRMPRN  
TPERR1: OUTSTR  [ASCIZ/
CANT SECURE TAPE CHANNEL WITH THAT DEVICE/]
        JRST    PRMPRN
BADWRT: OUTSTR  [ASCIZ/
TROUBLE WRITING TO TAPE/]
        JRST    PRMPRN
TRACK:  ASCIZ/9TRK/
        ASCIZ/7TRK/
TPOUT:  BLOCK 3
TPIN:   BLOCK 3
TAPDEF: 10
DEVNAM: 0
        XWD     TPOUT,TPIN
        END     START
 x@ H