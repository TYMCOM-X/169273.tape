        TITLE   ACTREC
        ENTRY   ACTREC
        EXTERNAL   GETNAM,GDBUFF
        EXTERNAL   DISABL,RENABL,SEEREP
        EXTERNAL   REMPNT,TOTCHR,RECORD
;
;       PURPOSE IS TO BUILD AN ACCOUNTING RECORD
;       FOR A REQUEST AFTER IT HAS BEEN PRINTED
;       AND TO ENTER THAT RECORD INTO THE CORRECT FILE
;
;       ACCUMULATOR ASSIGNMENTS
;
        AC= 0                   ;BASIC ACCUMULATORS
        AC1= 1                  ;SAME
        AC2= 2                  ;
        AC3= 3                  ;
        AC4= 4                  ;
        AC5= 5                  ;
        ACTCHL= 5               ;CHANNEL FOR ACCOUNTING FILE
        P==17
;
ACTREC: PUSHJ   P,DISABL
        SETZM   ,RECORD         ;PREPARE TO ZERO STORAGE
        MOVE    AC,[RECORD,,RECORD+1] ;TO AND FROM ADD.
        BLT     AC,RECORD+21    ;ZERO BUFFER
        MOVE    AC5,[POINT 7,RECORD] ;POINT TO STORAGE
        MOVE    AC1,GDBUFF	;GET REQUEST NUMBER
        LSH     AC1,6           ;LEFT JUSTIFY FIGURE
        MOVEI   AC4,5           ;NO. CHAR TO PROCESS
        PUSHJ   P,CONINS        ;CONVERT
        HLRZ    AC1,GDBUFF+1
        LSH     AC1,^D-8
        MOVEM   AC1,NOFILE#
        HLRZ    AC1,GDBUFF+3	;GET DATE OF REQUEST
        IDIVI   AC1,^D31        ;DIVIDE BY 31
        ADDI    AC2,1           ;CREATE CORRECT DAY
        MOVE    AC,AC1          ;GET MONTH AND YR
        IDIVI   AC,14           ;DIVIDE BY 12
        ADDI    AC1,1           ;CORRECT MONTH
        MOVE    AC,AC1          ;PUT MONTH IN CORRECT PLACE
        MOVEM   AC2,16          ;SAVE DAY FOR LATER
        PUSHJ   P,DECINS
        MOVE    AC,16           ;GET THAT DAY WE SAVED
        PUSHJ   P,DECINS
        HRRZ    AC,GDBUFF+1	;GET TIME OF REQUEST
        IDIVI   AC,^D60         ;CREATE HOURS AND MINUTES
        MOVEM   AC1,16          ;SAVE MINUTES
        PUSHJ   P,DECINS
        MOVE    AC,16           ;GET MINUTES
        PUSHJ   P,DECINS
        DMOVE   AC1,GDBUFF+31	;fetch username that gets billed
        MOVEI   AC4,6           ;NO. CHAR TO DO
        PUSHJ   P,CONINS        ;DO IT
        MOVE    AC1,AC2         ;GET REST OF NAME
        MOVEI   AC4,6           ;NO. CHAR. TO DO
        PUSHJ   P,CONINS        ;STORE IT
        HLLZ    AC1,GDBUFF+20	;GET GAN of billed username
        MOVEI   AC4,6           ;MAX SIZE OF GAN
        PUSHJ   P,OCTINS
        HRLZ    AC1,GDBUFF+20	;GET UUN
        MOVEI   AC4,6           ;SIZE OF UUN
        PUSHJ   P,OCTINS
        HLRZ    AC,GDBUFF+21	;GET DISTRICT HALF WORD
        ANDI    AC,777          ;KEEP JUST THE DISTRICT
        MOVEM   AC,SAVE+1       ;SAVE FOR LATER
        MOVEI   AC4,3           ;WIDTH OF FIELD
        PUSHJ   P,SUPZRO
        MOVE    AC1,[POINT 6,GDBUFF+12] ; ptr to prjoject code
        MOVEI   AC4,14          ;WIDTH OF FIELD
        ILDB    AC,AC1          ;GET A CHARACTER
        ADDI    AC,40           ;CONVERT TO ASCII
        IDPB    AC,AC5          ;STORE CHARACTER
        SOJG    AC4,.-3         ;GO DO MORE PROJECT CODE
        HLRZ    AC1,GDBUFF+5	;GET HALF WORD with customer flag
        MOVEI   AC,61           ;FOR POSSIBLE CUSTOMER
        TRNN    AC1,40          ;SEE IF CUSTOMER FLAG SET
        MOVEI   AC,60           ;CUSTOMER FLAG NOT SET
        IDPB    AC,AC5          ;STORE CUSTOMER INDICATOR
        MOVEI   AC,40           ;FOR JOB TYPE 1
        SKIPE   ,REMPNT         ;SKIP FOR NON REMOTE
        MOVEI   AC,61           ;FOR REMOTE PRINT
        IDPB    AC,AC5          ;SAME
        MOVEI   AC,61           ;FOR JOB TYPE 1
        SKIPE   ,REMPNT         ;SKIP FOR NON REMOTE PRINT
        MOVEI   AC,60           ;FOR REMOTE PRINT
        IDPB    AC,AC5          ;STORE JOB TYPE
        SKIPN   REMPNT          ;SKIP IF REMOTE, THIS IS RECORD 10
        JRST    NOTREM  
        MOVEI   AC,60           ;FILL IN TWO SPACES FOR THE NO. PARTS
        IDPB    AC,AC5          ;MAX IS 4 PARTS, THIS MUST BE 0
        HLRZ    AC1,GDBUFF+5	;get half word containing no. of parts
        ANDI    AC1,070000      ;MASK ONLY PARTS
        LSH     AC1,-^D12       ;RIGHT JUSTIFY
        ADDI    AC1,60          ;MAKE ASCII
        IDPB    AC1,AC5         ;PUT IN PARTS FOR RECORD 10 (JILL MARCIN)
NOTREM: SETZ    AC,             ;POSSIBLE ZERO FOR REMOTE
        SKIPN   ,REMPNT         ;FOR REMOTE, PUT IN ZERO
        HLRZ    AC,GDBUFF+4	;GET no. of PAGES SPOOLED
	MOVEI   AC4,6           ;SIZE OF FIELD
        SKIPE   REMPNT          ;REMOVE HAS 4 SPACES DUE TO PARTS
        MOVEI   AC4,4           ;SEE I TOLD YOU SO!
        PUSHJ   P,SUPZRO
        MOVEI   AC,40           ;FOR NO. PARTS
        SKIPN   ,REMPNT         ;SKIP FOR REMOTE
        IDPB    AC,AC5          ;STORE FOR PARTS
        SKIPN   ,REMPNT         ;SKIP FOR REMOTE PRINT
        JRST    DOPRTS          ;GO DO PART FOR CENTER PRINT
;
;       GET TOTAL CHAR AND PUT IN INSTEAD
;
        MOVE    AC,TOTCHR       ;GET TOTAL CHARACTERS
        MOVEI   AC4,11          ;FILL 9 PLACES
        PUSHJ   P,SUPZRO
        MOVE    AC,NOFILE
        MOVEI   AC4,7           ;NO. CHAR. TO FILL IN
        PUSHJ   P,SUPZRO
        JRST    TYPDEL          ;GO GET TYPE DELIVERY
;
;       COME HERE FOR CENTER ACCT. TO GET PARTS AND DECOLATION
;
DOPRTS: PUSHJ   P,PRTDEC
;
;       SEE WHICH FILE RECORD IS TO BE WRITTEN
;
TYPDEL: HLRZ    AC,GDBUFF+5	;GET DELIVERY MODE HALF WD
        ANDI    AC,700          ;GET ACTUAL MODE
        LSH     AC,-6           ;RIGHT JUSTIFY FIGURE
        SETZ    16,             ;ZERO FOR LATER
        CAIE    AC,6            ;SEE IF INTER-OFFICE DEL.
        CAIN    AC,1            ;SEE IF MODE IS PICKUP
        JRST    COMCHG          ;GO COMPUTE PRINTING CHARGE
;
;       ZERO RECORD FOR PARCHG.DAT
;
        MOVE    AC4,[POINT 7,RECORD] ;POINT TO START
        MOVEI   AC,60           ;TO INDICATE PARTIAL RECORD
        IDPB    AC,AC4          ;STORE SAME
        MOVEI   AC,63           ;SAME
        IDPB    AC,AC4          ;SAME
        SETO    16,             ;SHOWS WHICH FILE TO APPEND TO
;
;       COME HERE TO COMPUTE CHARGES AND SHOW
;       WHICH FILE TO WRITE TO
;
COMCHG: SKIPE   ,REMPNT         ;SKIP FOR NON REMOTE PRINT
        JRST    GETDTE          ;NO CHARGES YET FOR REMOTE
        MOVEI   AC4,6           ;NO. BLANKS TO DO
        MOVEI   AC,60           ;GET ACTUAL ZERO
        IDPB    AC,AC5          ;STORE ZERO
        SOJG    AC4,.-1         ;ZERO REST OF FIELD
        MOVEI   AC4,7           ;WIDTH OF FIELD
	setz	AC,
        PUSHJ   P,SUPZRO
;
;       PUT IN COMPLETION DATE, CR LF AND WRITE RECORD
;
GETDTE:	HRRZ	AC,GDBUFF+21	;get completion date
        IDIVI   AC,^D31         ;DIVIDE BY 31 DAYS
        ADDI    AC1,1           ;CORRECT THE DAY
        MOVEM   AC1,SAVE+1      ;SAVE THAT DAY
        IDIVI   AC,14           ;DIVIDE BY MONTHS
        ADDI    AC1,1           ;CORRECT THE MONTH
        ADDI    AC,100          ;CORRECT THE YEAR
        MOVEM   AC1,SAVE+2      ;SAVE THE MONTH
        PUSHJ   P,DECINS
        MOVE    AC,SAVE+2       ;GET MONTH
        PUSHJ   P,DECINS
        MOVE    AC,SAVE+1       ;GET DAY
        PUSHJ   P,DECINS
;
;       INSERT CR AND LF THEN WRITE OUT RECORD
;
        MOVEI   AC,15           ;GET A CARRIAGE RETURN
        IDPB    AC,AC5          ;STORE IN RECORD
        MOVEI   AC,12           ;GET A LINE FEED
        IDPB    AC,AC5          ;STORE IN BUFFER
        MOVSI   AC1,(ASCIZ/1/)  ;FOR POSSIBLE ERROR
        OPEN    ACTCHL,ACTDEF   ;GET CHANNEL FOR ACCOUNTING FILE
        JRST    ERROR1          ;CANT GET CHANNEL
;
;       SEE WHICH FILE TO WORK ON
;
        JUMPE   16,COMFIL       ;BR TO DO COMPLETED REQUEST
;
;       BUILD RECORD DESCRIPTOR FOR PARTIAL COMPLETED REQUEST
;
        MOVE    AC,FILPAR       ;GET FILE NAME
        SKIPE   ,REMPNT         ;SKIP FOR NON REMOTE PNT
        MOVE    AC,[SIXBIT/SPLCHG/] ;DIFF NAME FOR PARTIAL REMOTE
        MOVEM   AC,ACTFIL       ;STORE FOR LOOKUP
        MOVSI   AC,(SIXBIT/DAT/) ;GET EXTENSION NAME
        JRST    RESTBK          ;GO STORE EXTENSION NAME
;
;       COME HERE TO GET FILE NAME OF FILE FOR HOLDING
;       RECORDS THAT NEED NO MORE INFORMATION
;
;       GET SYSTEM NO. FROM REQUEST NO.
;
COMFIL:	MOVE	AC1,GDBUFF	;get request number
        LSH     AC1,6           ;LEFT JUSTIFY REQ. NO.
        MOVE    AC2,[POINT 6,FILCOM,^D23] ;POINT TO FILE NAME
        SETZ    AC,             ;FOR NEXT INST.
        LSHC    AC,6            ;BRING OVER FIRST SYS. NO.
        IDPB    AC,AC2          ;STORE SYS. NO.
        SETZ    AC,             ;FOR NEXT INST.
        LSHC    AC,6            ;BRING OVER LAST SYS. NO.
        IDPB    AC,AC2          ;STORE LAST SYS. NO.
        MOVE    AC,FILCOM       ;GET FILE NAME
        MOVEM   AC,ACTFIL       ;STORE FILE NAME
        HRRZ    AC,GDBUFF+21	;GET COMPLETION DATE
        IDIVI   AC,^D31         ;GET DAY
        IDIVI   AC,14           ;GET MONTH
        IDIVI   AC1,2           ;CREATE POINTER
        HLLZ    AC,MONTHS(AC1)  ;GET AN EXTENSION NAME
        SKIPE   ,AC2            ;SEE IF CORRECT EXT. NEEDED
        HRLZ    AC,MONTHS(AC1)  ;GET CORRECT EXTENSION
RESTBK: MOVEM   AC,ACTFIL+1     ;STORE EXTENSION
LOKAGN: SETZM   ,ACTFIL+2       ;ZERO FOR LOOKUP
        MOVE    AC,OWNER        ;GET *1BATCH PPN
        MOVEM   AC,ACTFIL+3     ;STORE FOR LOOKUP
;
;       DO LOOKUP ON THAT FILE AND ALSO ENTER ON SAME
;
        SETZM   ,SAVE           ;SHOWS GOING THROUGH 1ST TIME
        LOOKUP  ACTCHL,ACTFIL   ;GO GET FILE
        JRST    CREATE          ;GO CREATE FILE IF NOT THERE
        HLRE    AC1,ACTFIL+3    ;GET NEG LENGTH
        MOVEM   AC,ACTFIL+3     ;RESTORE PPN
        MOVN    AC1,AC1         ;CONVERT TO POSITIVE
        IDIVI   AC1,200         ;GET BLOCK SIZE
        ADDI    AC1,1           ;ADJUST POINTER
        ENTER   ACTCHL,ACTFIL   ;DO ENTER ON FILE
        JRST    ACTWHY          ;SEE WHY CANT DO ENTER ON FILE
        JUMPE   AC2,EVNBND      ;BR. IF ON BEGINNING OF BLK
        USETI   ACTCHL,@AC1     ;SET INPUT POINTER
        INPUT   ACTCHL,         ;READ IN BLK
        OUTPUT  ACTCHL,         ;DUMMY OUTPUT
        USETO   ACTCHL,@AC1     ;SET OUTPUT POINTER
;
;       PASS OVER OLD DATA IN BUFFER
;
PASDAT: SOSGE   ACTI+2          ;SEE IF BUFFER EMPTY
        JRST    PUTREC          ;GO PUT IN NEW REC.
        ILDB    AC,ACTI+1       ;GET OLD DATA
        SOS     ACTO+2          ;DECREASE BYTE COUNTER
        IDPB    AC,ACTO+1       ;STORE OLD DATA
        JRST    PASDAT          ;GO DO MORE OF SAME
PUTREC: SETZ    AC5,            ;ZERO WR. POINTER
MORREC: MOVE    AC,RECORD(AC5)  ;GET WD OF RECORD
        SOSGE   ACTO+2          ;SEE IF BUFFER FULL
        JRST    EMPTY           ;GO EMPTY BUFFER
STRDTA: IDPB    AC,ACTO+1       ;STORE RECORD
        ADDI    AC5,1           ;INCREASE POINTER
        CAIGE   AC5,21          ;SEE IF RECORD PASSED OVER
        JRST    MORREC          ;GO DO MORE RECORD
        JRST    DONREC          ;RECORD IS PASSED
EMPTY:  OUTPUT  ACTCHL,         ;PUT OUT FULL BUFFER
        SOS     ACTO+2          ;SUB FOR CURRENT DATA
        JRST    STRDTA          ;GO STORE CURRENT DATA
EVNBND: OUTPUT  ACTCHL,         ;DUMMY OUTPUT
        USETO   ACTCHL,@AC1     ;POINT TO CORRECT PLACE
        JRST    PUTREC          ;GO PUT OUT RECORD
DONREC: SKIPE   ,REMPNT         ;SKIP FOR NON REMOTE PRINT
        JRST    REMTWO          ;GO BUILD 2ND ACCT. REC. FOR REM.
DONRC1: OUTPUT  ACTCHL,         ;PUT OUT CURRENT DATA
        RELEAS  ACTCHL,         ;RELEASE THE CHANNEL
        PUSHJ   P,RENABL
        POPJ    P,
ACTWHY: HRRZ    AC,ACTFIL+1     ;GET REASON FOR FAILURE
        MOVSI   AC1,(ASCIZ/6/)  ;FOR POSSIBLE ERROR
        CAIE    AC,3            ;SEE IF FILE OPENED
        JRST    ERROR6          ;BAD ERROR
        MOVEI   AC,12           ;SLEEP FOR 10 SEC.
        SLEEP   AC,             ;GO TO SLEEP
        JRST    LOKAGN          ;GO TRY AGAIN
;
;       COME HERE TO BUILD 2ND ACCT RECORD FOR REMOTE PRINT OF SPOOL
;
REMTWO: SKIPE   ,SAVE           ;SKIP IF DOING 2ND RECORD FOR ACCT
        JRST    DONRC1          ;SHOWS DONE IT, GO WRITE OUT RECS
        MOVE    AC5,[POINT 7,RECORD+12,^D27] ;WHERE TO BUILD NEW REC TO
        MOVEI   AC,61           ;SHOWS SECOND RECORD
        IDPB    AC,AC5          ;STORE TO BUFFER
        HLRZ    AC,GDBUFF+4	;GET NO. PAGES
        MOVEI   AC4,6           ;NO. CHAR. TO STORE
        PUSHJ   P,SUPZRO
        MOVEI   AC,40           ;PRELUDE TO NO. PARTS
        IDPB    AC,AC5          ;SAME
        PUSHJ   P,PRTDEC
        MOVEM   AC,SAVE+2       ;SAVE DEC. FLAG FOR LATER
        SETZ    AC,             ;TO ZERO NEXT FIELD
        MOVEI   AC4,6           ;NO. CHAR. TO ZERO
        PUSHJ   P,SUPZRO
        MOVEI   AC4,7           ;NO. CHAR. TO FIELD
	setz	AC,
        PUSHJ   P,SUPZRO
        SETOM   ,SAVE           ;SHOWS DONE 2ND RECORD
        JRST    PUTREC          ;GO STORE 2ND RECORD
;
;       CONVERT DECIMAL TO ASCII AND PUT OUT
;
SUPZRO: SUBI    AC4,1           ;PREPARE TO CREATE POWER
        MOVEI   AC2,1           ;INITIAL POWER
        IMULI   AC2,12          ;MULT BY 10
        SOJG    AC4,.-1         ;GO CREATE CORRECT POWER
        SETZ    AC4,            ;BLANK SUPPRESS FLAG
SUPMOR: IDIV    AC,AC2          ;DIVIDE BY POWER
        JUMPE   AC,SUPRES       ;BR. IF ZERO
        SETO    AC4,            ;TURN SUPRESS FLAG OFF
SUPOK:  ADDI    AC,60           ;CONVERT TO ASCII
SUPOK1: IDPB    AC,AC5          ;STORE THE CHAR
        MOVE    AC,AC1          ;GET REMAINDER
        IDIVI   AC2,12          ;REDUCE POWER BY 10
        CAIE    AC2,1           ;SEE IF POWER IS 1
        JRST    SUPMOR          ;NO, THEN GO DIVIDE AGAIN
        ADDI    AC,60           ;CONVERT TO ASCII
        IDPB    AC,AC5          ;STORE CHAR.
        POPJ    P,
SUPRES: JUMPN   AC4,SUPOK       ;BR. IF FLAG TURNED OFF
        MOVEI   AC,40           ;SUPRESS ZERO WITH BLANK
        JRST    SUPOK1          ;GO STORE IT
;
;       COME HERE TO GET PARTS AND DECOLATION
;       AND ENTER THEM TO ACT. RECORD
;
PRTDEC: HLRZ    AC,GDBUFF+5	;GET HALF WITH PARTS
        ANDI    AC,70000        ;MASK THE PARTS
        LSH     AC,-14          ;RIGHT JUSTIFY
        ADDI    AC,60           ;CONVERT TO ASCII
        IDPB    AC,AC5          ;STORE TO FIELD
        HLRZ    AC1,GDBUFF+5	;GET DECOLATION FLAG
        MOVEI   AC,60           ;FOR NO DECOLATION
        TRNE    AC1,7000        ;CHECK FOR DECOLATION
        MOVEI   AC,61           ;FOR DECOLATION IF SET
        IDPB    AC,AC5          ;STORE FLAG
        POPJ    P,
;
;       CONVERT SIXBIT TO ASCII AND STORE
;
CONINS: SETZ    AC,             ;FOR NEXT INST
        LSHC    AC,6            ;SHIFT LEFT
        ADDI    AC,40           ;CONVERT TO ASCII
        IDPB    AC,AC5          ;STORE IN RECORD
        SOJG    AC4,CONINS      ;GO DO MORE
        POPJ    P,
;
;       CONVERT FROM OCTAL TO ASCII
;
OCTINS: SETZ    AC,             ;ZERO FOR NEXT INST.
        LSHC    AC,3            ;BRING OVER A CHAR
        JUMPN   AC,OCTSAV       ;BR. IF NOT ZERO
        MOVEI   AC,40           ;FILL WITH BLANKS
        IDPB    AC,AC5          ;STORE DIGIT
        SOJG    AC4,OCTINS      ;GO DO REST OF DIGITS
        POPJ    P,
OCTMOR: SETZ    AC,             ;FOR NEXT INST
        LSHC    AC,3            ;BRING OVER A DIGIT
OCTSAV: ADDI    AC,60           ;CONVERT TO ASCII
        IDPB    AC,AC5          ;STORE DIGIT
        SOJG    AC4,OCTMOR      ;GO DO REST OF DIGITS
        POPJ    P,
;
;       CONVERT 2 DIGITS TO ASCII AND STORE
;
DECINS: IDIVI   AC,12           ;DIVIDE BY 10
        ADDI    AC,60           ;CONVERT TO ASCII
        IDPB    AC,AC5          ;STORE DIGIT
        ADDI    AC1,60          ;CONVERT LAST TO ASCII
        IDPB    AC1,AC5         ;STORE LAST DIGIT
        POPJ    P,
CREATE: MOVEM   AC,ACTFIL+3     ;RESTORE PPN
        MOVSI   AC1,(ASCIZ/3/)  ;FOR POSSIBLE ERROR
        ENTER   ACTCHL,ACTFIL   ;GO CREATE FILE
        JRST    ERROR3          ;CANT CREATE ACCT FILE
        OUTPUT  ACTCHL,         ;DUMMY OUTPUT
        JRST    PUTREC          ;GO PUT OUT RECORD
SAVE:   BLOCK 3
ACTDEF: EXP  10
        SIXBIT/DSK/
        XWD ACTO,ACTI
        ARRAY ACTO [3]
        ARRAY ACTI [3]
        IFNDEF DEBUG<
OWNER:  1,,2>                   ;*1BATCH
        IFDEF DEBUG<
OWNER:  3,,234620>          	;sppoper
FILPAR: SIXBIT/PARCHG/
FILCOM: SIXBIT/BAT0/
MONTHS: SIXBIT/JANFEB/
        SIXBIT/MARAPR/
        SIXBIT/MAYJUN/
        SIXBIT/JULAUG/
        SIXBIT/SEPOCT/
        SIXBIT/NOVDEC/
        ARRAY ACTFIL [4]
ERROR1:
ERROR3:
ERROR6: OUTSTR  [ASCIZ/
***ACCT. ERROR-/]
        OUTSTR  @AC1            ;PUT OUT TYPE ERROR
LEAVE:  RELEAS  ACTCHL,
        JRST    SEEREP
        END
 