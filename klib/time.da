entry P.Time, Get.Time, Dc.Time, CvI.Time, CvS.Time,
      DateTimeString, Cnvdtim, DayTime;
define ! = "comment", !! = "comment";
!! title DA Time ;
! :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
:::::::::::::::::::::::::::::::::::::+:::::::::::::::::::::::::::::::::::::
:                                                                         :
:                                                                         :
:				   Time					  :
:                                                                         :
:                                                                         :
:::::::::::::::::::::::::::::::::::::+:::::::::::::::::::::::::::::::::::::


	Perform a myriad of time-related functions.

	! <<  We need support of time-zone conversions here.


:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::


	The time string formats are as follows:

			   Format TF1:		HH:MM
			   Format TF2:		HH:MM:SS
			   Format TF3:		HH:MM pm


	The string formats for 

	There are 86,400,000 milliseconds in a day, a  27-bit quantity.
	There are     86,400 seconds      in a day, a  17-bit quantity.
	There are      1,440 minutes      in a day, an 11-bit quantity.


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;


begin "Time"
  require "(KLib)Sail.Hdr" source!file;
  require "(KLib)Date.Req" source!file;
  require "(KLib)Util.Req" source!file;

  define
    TC.ALL    = 0,
    TC.HOUR   = 1,
    TC.MINUTE = 2,
    TC.SECOND = 3
  ;

    ! Components of the time;


  define
    TF1 = 1				! Time Format #1 (HH:MM);,
    TF2 = 2				! Time Format #2 (HH:MM:SS);,
    TF3 = 3				! Time Format #3 (HH:MM:SS pm);,

    TIME.SEP.1 = <":">			! Time Separator #1;
  ;


! ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
!! title Rtn P.Time ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=				Rtn P.Time				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Return the specified component of the time.

	(Time.In is in milliseconds since midnight.)


==========================================================================;


  internal simple integer procedure P.Time (integer Time.In, Component);
  begin "P.Time"
    case (Component) of 
    begin
      [TC.HOUR]
	return(Time.In div (60 * 60 * 1000));

      [TC.MINUTE]
	return((Time.In div (60 * 1000)) mod 60);

      [TC.SECOND]
	return((Time.In div 1000) mod 60)
    end;
  end "P.Time";


! ===================================+=====================================
==========================================================================;
!! title Rtn Get.Time ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			       Rtn Get.Time				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Return the current time in milliseconds since midnight.


==========================================================================;


  internal simple integer procedure Get.Time;
  begin "Get.Time"
    return(calli('0, '23));
  end "Get.Time";


! ===================================+=====================================
==========================================================================;
!! title Rtn Dc.Time ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=				Rtn Dc.Time				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Decompose a time value to its constituent components.

	(Time.In is in milliseconds since midnight.)


==========================================================================;


  internal simple procedure Dc.Time
      (reference string H.Out, M.Out, S.Out; integer Time.In);

  begin "Dc.Time"
    integer
      Digits,
      Width;


    getformat(Width, Digits);
    setformat(-2, 0);

    ! <<  Rework the following to support TF3 ;

    H.Out _ cvs(P.Time(Time.In, TC.HOUR));
    M.Out _ cvs(P.Time(Time.In, TC.MINUTE));
    S.Out _ cvs(P.Time(Time.In, TC.SECOND));

    setformat(Width, Digits);
  end "Dc.Time";


! ===================================+=====================================
!! title Rtn CvI.Time ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			       Rtn CvI.Time				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Compose a time value from its constituent components.

	(The return value is in milliseconds since midnight.)


==========================================================================;


  internal simple integer procedure CvI.Time
      (string Hours, Minutes, Seconds);

  begin "CvI.Time"
    return(1000 * (cvd(Seconds) + 60 * (cvd(Minutes) +
	60 * cvd(Hours))));
  end "CvI.Time";


! ===================================+=====================================
==========================================================================;
!! title Rtn CvS.Time ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			       Rtn CvS.Time				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Return a string representation of the input time value.


==========================================================================;


  internal simple string procedure CvS.Time (
      integer Time.In, Component(TC.ALL), Format(TF1));

  begin "CvS.Time"
    own string
      Hour,
      Minute,
      Second,
      Str;


    Dc.Time(Hour, Minute, Second, Time.In);

    ! <<  Rework the following to support TF3 ;

    case (Component) of
    begin
      [TC.ALL]
	begin
	  Str _ Hour & TIME.SEP.1 & Minute;

	  if (Format = TF2) then
	    Str _ Str & TIME.SEP.1 & Second;
	end;

      [TC.HOUR]
	Str _ Hour;

      [TC.MINUTE]
	Str _ Minute;

      [TC.SECOND]
	Str _ Second
    end;

    return(Str);
  end "CvS.Time";


! ===================================+=====================================
==========================================================================;
!! title Rtn DateTimeString ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                           Rtn DateTimeString                            =
=                                                                         =
=                                                                         =
====================================+======================================


	Return the current date and time as a string.


==========================================================================;


  internal simple string procedure DateTimeString;
  begin "DateTimeString"
    return(CvS.Date(Get.Date) & " " & CvS.Time(Get.Time));
  end "DateTimeString";


! ==================================+======================================
==========================================================================;
!! title Rtn Cnvdtim ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=				Rtn Cnvdtim				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	What the hell does this do?

	Time is in senconds since midnight.
	Date is in DEC Date format.


==========================================================================;


  internal simple procedure Cnvdtim (reference integer Date, Time;
      integer To, From);

  begin "Cnvdtim"
    integer
      JfySec;					! Jiffies per second;
    own integer array
      Cnv [0:2];

    Cnv[0] _ Date;
    Cnv[1] _ Time * (JfySec _ GetTab('26, '11));
    Cnv[2] _ xwd(From, To);
    calli(location(Cnv[0]), -'55);		! Datuuo;
    Date _ Cnv[0];
    Time _ Cnv[1] % JfySec;
  end "Cnvdtim";


! ===================================+=====================================
==========================================================================;
!! title Rtn DayTime ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                              Rtn DayTime                                =
=                                                                         =
=                                                                         =
====================================+======================================


	What the hell does this do?

	Time is in minutes.
	Date is in DEC Date format.


==========================================================================;


  internal string procedure DayTime (integer Date, Time);
  begin "DayTime"
    Time _ Time * 60;
    cnvdtim(Date, Time, '400020, '000000);
    return(CvS.Date(Date) & CvS.Time(Time * 1000));
  end "DayTime";


! ==================================+======================================
==========================================================================;

end "Time";

! :::::::::::::::::::::::::::::::::::+:::::::::::::::::::::::::::::::::::::
				  DA Time
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
 