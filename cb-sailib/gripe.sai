ENTRY GRIPE;

BEGIN "Gripe"
    require "SAI:CSWIT.SAI" source!file;
    define HISEGGING=ifcr COMPILER!SWITCH!H thenc +1 elsec -1 endc;
    define !NOBAYSAILIB! = true;
    require "SAI:BAYSAI" source!file;

!----------------------------------------------------------------------
!
! Abstract:
!	The Gripe Sub-module provides a simple function that will take
!	text from the user's terminal and mail it (via QNET) to a
!	pre-determined destination.
!
!----------------------------------------------------------------------;
! Submodule: GRIPE.SAI
! Date:  2-Nov-78
! Who: SAIL Files
! Changed Gripe routine to have a header that is closer to the one used by
! RDMAIL.
! [MS30]
! 
! ;
! Submodule: GRIPE.SAI
! Date:  9-Aug-78
! Who: SAIL Files
! Generalized version of the Shepherd and Plot gripe facilities.
! [MS30]
! 
! ;
!----------------------------------------------------------------------
!	This is a null DESIGN section.
!----------------------------------------------------------------------;
source!l(Gripe);

source!l(CMUPPN);
source!l(Qnet);
source!l(Date);
source!l(MONTOR);

REQUIRE "{}<>" DELIMITERS;
internal simple procedure Gripe(string Maintainer, HisSystem;
	reference string Subject;
	string UserMsgPrompt ("Please enter your Gripe and terminate"&
				" with an <Escape>.  Thank you."&crlf);
	string UserSubPrompt ("Subject: "));
!----------------------------------------------------------------------
!
! Abstract:
!	The Gripe function permits a  user to type in a message that is
!	subsequently mailed off to the Maintainer.
!
! Parameters:
!   Maintainer: String that should be a valid ARPANET  address at the
!	site specified by HisSystem.
!
!   HisSystem: String that specifies an ARPANET site.
!
!   Subject: Reference string that will be used as the subject of the
!	message.  If it is null, the user will be asked for it.
!
!   UserMsgPrompt: String to type out to the user when asking for the
!	message.  See the routine header for the default.
!
!   UserSubPrompt: String to type out to the user when asking for the
!	subject.  See the routine header for the default.
!
! Results:
!
! Side Effects:
!	A file with the name <nnn>RDM.QED is created that contains the
!	message that will be sent.  A request is queued in the  user's
!	FTP.Q file and QNET notified.
!
! Errors:
!	The user is notified if the Gripe message file cannot be created.
!	(The user is instructed to mail the message him/herself.)
!
! Design:
!	The <nnn>RDM.QED file is created and the message header inserted
!	therein. The user is instructed to type in lines and terminate his
!	message with an <Escape>. The file is closed and submitted to QNET
!	via the QnetInit, QnetOut, and QnetEnd functions in QNET.SAI.
!
!	Note: Since other systems (i.e. RDMAIL) may be creating files
!	with the <nnn>RDM.QED format, <nnn> starts at 100 and is bumped
!	by one until either it hits 999 or a free file is found.
!
!	Note: The header in the message must be followed by a blank
!	line if the mail is to be parsed properly by RDMAIL.
!
!----------------------------------------------------------------------;

BEGIN

DEFINE	ESC		= '33,
	Gripe!Device	= {"SSL"};

integer Gripe!Break, Nnn, Channel, EOF;
string PPN, Gripe!File;

Gripe!File _ "RDM.QED";
Nnn _ 100;

Open(Channel _ GetChan, Gripe!Device, ASCII, 1,3, 0, Dum, EOF_-1);
if EOF = 0
    then begin "Find a free name"
    Dum _ false;
    while (Nnn < 1000) AND (NOT Dum) do
	begin "Check this one"
	Lookup(Channel, SDum_cvs(Nnn)&Gripe!File, Dum);
	if NOT Dum then Nnn _ Nnn + 1;
	end "Check this one";

    if Nnn < 1000
	then begin
	Gripe!File _ cvs(Nnn) & Gripe!File;
	Enter(Channel, Gripe!File, Dum);
	end
    else Dum _ true;
    end "Find a free name";

! Dum true here means EOF = 0 but either Nnn = 1000 or Enter failed.;
IF Dum OR (EOF NEQ 0)
    THEN BEGIN
    print("%GRIPE: Cannot create Gripe file.  Try again later."&crlf);
    RETURN
    END;

while nulstr(Subject) do
    begin "Get subject"
    print(UserSubPrompt);
    Subject _ inchwl;
    end "Get subject";

Dum_Calli(xwd(1,'11),'41);		! Get the machine name;
SDum _ cvstr(Dum)[1 for 1];
Cprint(Channel, "Date: ",DateStr," ",TimeStr,crlf,
		"From: ",(PPN _ CVDECCMU(calli(-1,'24)))[5 to 8],
			" at CMU-10",SDum,crlf,
		"Subject: ",Subject,crlf,
		"Message-ID: <",DateStr," ",TimeStr," ",PPN[5 to 8],
			"@CMU-10",SDum,">"&crlf&crlf);

Print(UserMsgPrompt);
DO BEGIN "Get Complaint"
    OutChr("*");
    Sdum _ INCHWL;
    Dum _ !SKIP!;		! Remember break character;
    Cprint(Channel, SDum&crlf);
    END "Get Complaint" UNTIL Dum = ESC;
Print(crlf);

Cprint(Channel, '3&crlf);
Release(Channel);

! Now we ship the complaint home;
IF NOT QnetInit(PPN, 5)
    THEN BEGIN
    Print("%GRIPE: Sorry, can't set up QNET file. Mail ",
		Gripe!File," to ",Maintainer,"@",HisSystem,crlf);
    RETURN
    END;

QNETOut(Gripe!File,Maintainer,HisSystem);

QNETEnd;
END;

END "Gripe"
