	.PAGE
	.SBTTL	LINKA - DR11-C/DR11 USING FLAG PROTOCOL

;DEFINE MACRO FOR TYPE A LINK DRIVERS (16 BIT PARALLEL LINK USING DR-11C OR
;  DRV-11 USING FLAG PROTOCOL)

.IF DF LKANUM
	.MACRO	LINKA	DEV,SOC,DRG,VEC,LEV
$$$R=DRG			;ADDRESS OF FIRST DEVICE REGISTER
$$$P=!LEV			;PRIORITY LEVEL
$$$S=!$$$S!$D0FLG!$D0SII!$D0LNK!$D0CLN!$D0LVL!$D0WLD
				;THIS LINK USES FLAG PROTOCOL WITH SOCKET IS
				;  IDLE MESSAGES AND REQUIRES CLEANUP BY
				;  SNDPKT
LOADDV=!1			;THIS LINK USES THE LOAD DEVICE

	VECTOR	VEC  ,LKI'DEV,LEV;INPUT VECTOR
	VECTOR	VEC+4,LKO'DEV,LEV;OUTPUT VECTOR

	.PSECT	CODE,RW,I,LCL,REL,CON;GENERATE INTERRUPT CODE

LKI'DEV:PUSH	R4		;SAVE REGISTER
	MOV	#L'DEV'$,R4	;GET ADDRESS OF DDB
	JMP	LKAIIN#		;GO TO COMMON ROUTINE

LKO'DEV:PUSH	R4		;SAVE REGISTER
	MOV	#L'DEV'$,R4	;GET ADDRESS OF DDB
	JMP	LKAOIN#		;GO TO COMMON ROUTINE

	XDDB	LK,L,DEV,SOC,A,FGPOKE#,FGRSUM#,0,<NXTFLG#,FLGPKT#>

.S=!1
	.REPT	SOC		;GENERATE THE SDB'S
	XSDB	LK,L,DEV,\.S,A
.S=!.S+1
	.ENDR
.LKA=!.LKA+1
	.ENDM
.LKA=!0
.ENDC
	.PAGE
	.SBTTL	LINKG - DUP11/DUV11 Using TYMnet extended X.25 protocol

;Define MACRO for type G link drivers (8 bit serial link using DUP-11 or
;  DUV-11 using modified flag protocol)

.IF DF LKGNUM
	.MACRO	LINKG	DEV,SOC,DRG,VEC,LEV,DEST,ADEST,K,T1,N1,N2
$$$R=!DRG			;Address of first device register
$$$P=!LEV			;PRIORITY LEVEL
$$$S=!$$$S!$D0GTW!$D0FLG!$D0WLD
.IF EQ $$$S&$D0PRI
  $$$A=!1			; DTE outgoing command frame address
  $$$B=!3			; DTE incoming response frame address
.IFF
  $$$A=!3			; DCE outgoing command frame address
  $$$B=!1			; DCE incoming response frame address
.ENDC
$$$C=!K;			; FRAME LEVEL WINDOW SIZE (K)
$$$D=!T1			; NO-RESPONSE TIMER DURATION (T1)
$$$E=!N2			; RETRANSMISSION MAX (N2)
$$$F=!N1			; MAX # BYTES IN FRAME INFO FLD (N1/8)
	.WR50	1,DEST,$$$3	; 1ST HALF OF X.25 DEST DTE NAME
	.WR50	4,DEST,$$$4	; 2ND HALF OF X.25 DEST DTE NAME
	.WR50	1,ADEST,$$$5
	.WR50	4,ADEST,$$$6

	VECTOR	VEC  ,LKI'DEV,LEV;Input vector
	VECTOR	VEC+4,LKO'DEV,LEV;Output vector

	.PSECT	CODE,RW,I,LCL,REL,CON;Generate interrupt code

LKI'DEV:PUSH	R4		;Save register
	MOV	#L'DEV'$,R4	;Get address of DDB
	JMP	LKGISV#		;Go to common routine

LKO'DEV:PUSH	R4		;Save register
	MOV	#L'DEV'$,R4	;Get address of DDB
	JMP	LKGOSV#		;Go to common routine

	XDDB	LK,L,DEV,SOC,G,LGPOKE#,LGRSUM#,XXSSRC#,<LKGFLG#,0>

.S=!1
	.REPT	SOC			;GENERATE THE SDB'S
	XSDB	LK,L,DEV,\.S,G
.S=!.S+1
	.ENDR
.LKG=!.LKG+1
	.ENDM
.LKG=!0
.ENDC
	.PAGE
	.SBTTL	DDB FOR TYPE A LINKS

.IF DF LKANUM
	.MACRO	DDBLKA  DEV,SOC
.IF NDF LKADDB
  LKADDB==!L'DEV'$		;LABEL FOR FIRST DDB FOR TYPE A LINK
.ENDC
LK'DEV'EC=!OS-DDLKER
W  DDLAIB,$$$R+4		;ADDRESS OF DEVICE INPUT BUFFER
W  DDLAOB,$$$R+2		;ADDRESS OF DEVICE OUTPUT BUFFER
W  DDLASR,$$$R			;ADDRESS OF DEVICE CONTROL AND STATUS REGISTER
L  DDLAFC			;FIRST LOCATION TO CLEAR ON STARTUP
B  DDLAXC,0			;RETRY COUNTER
B  DDLATR,0			;RESPONSE TIMER
B  DDLATP,0			;POKE TIMER
B  DDLATD,0			;DATA TIMER
W  DDLAIK,0			;POINTER TO START OF INPUT PACKET
W  DDLAIP,0			;POINTER TO CURRENT INPUT WORD
W  DDLAIX,0			;INPUT CHECKSUM
B  DDLAIC,0			;INPUT WORD COUNT
B  DDLAIS,0			;INPUT STATE
W  DDLAOK,0			;POINTER TO START OF OUTPUT PACKET
W  DDLAOP,0			;POINTER TO CURRENT OUTPUT WORD
W  DDLAOD,0			;ADDRESS OF SDB FOR OUTPUT PACKET
W  DDLAOX,0			;OUTPUT CHECKSUM
B  DDLAOC,0			;OUTPUT WORD COUNT
B  DDLAOS,0			;OUTPUT STATE
B  DDLAXA,0			;BITS FOR PENDING ACK/NAK REQUESTS
L  DDLALC			;LAST LOCATION + 2 TO CLEAR ON STARTUP
DDLACZ==!<DDLALC-DDLAFC+1>/2
	XSDB	LK,L,DEV,0,A	;THIS LINK USES A WILD SOCKET SDB
	.ENDM
.ENDC
	.PAGE
	.SBTTL	DDB FOR TYPE G LINKS

.IF DF LKGNUM
	.MACRO	DDBLKG  DEV,SOC
.IF NDF LKGDDB
  LKGDDB==!L'DEV'$;		; Label for first DDB for type E link
.ENDC
LK'DEV'EC=!OS-DDLKER
W  DDLGRS,$$$R			; Receiver status register
W  DDLGRB,$$$R+2		; Receiver data buffer
W  DDLGPR,$$$R+2		; Parameter control register
W  DDLGXS,$$$R+4		; Transmitter status register
W  DDLGXB,$$$R+6		; Transmitter data buffer
W  DDLGPX,0			; Parameter control register initial value
W  DDLGPL,$$$P*40		;PROCESSOR LEVEL FOR INTERRUPT LEVEL
W  DDLGLB,L'DEV'$+DDLGLR	; Ptr to beginning of TRANSMIT ring
W  DDLGLE,L'DEV'$+DDLGLR+<2*<$$$C+1>>; Pointer to end of TRANSMIT ring
W  DDLGLH,L'DEV'$+DDLGLR	; Ring pointer to head of XMIT RING
W  DDLGLN,L'DEV'$+DDLGLR	; Ring pointer to next frame to send
W  DDLGLT,L'DEV'$+DDLGLR	; Ring pointer to tail of XMIT RING
W  DDLGQB,L'DEV'$+DDLGQR	; Ptr to start of input to main ring
W  DDLGQE,L'DEV'$+DDLGQR+<4*<$$$C+3>> ; Ptr to end of input to main ring
W  DDLGQP,L'DEV'$+DDLGQR	; Input to main ring putter
W  DDLGQT,L'DEV'$+DDLGQR	; Input to main ring taker
W  DDLGD1,$$$3			; 1ST HALF OF X.25 DESTINATION NAME
W  DDLGD2,$$$4			; 2ND HALF OF X.25 DESTINATION NAME
W  DDLGD3,$$$4			; 1ST HALF OF ALTERNATE DST NAME
W  DDLGD4,$$$5			; 2ND HALF OF ALTERNATE DST NAME
B  DDLGXC,$$$A			; TRANSMITted command frame address
B  DDLGXR,$$$B			; Transmitted response frame address
B  DDLGRC,$$$B			; Received command frame address
B  DDLGRR,$$$A			; Received response frame address
B  DDLGK0,$$$C			; FRAME TRANSMIT RING WINDOW SIZE
B  DDLGK1,$$$D			; DURATION OF NO-RESPONSE TIMER T1
B  DDLGK2,$$$E			; RETRANSMISSION COUNTER N2
B  DDLGK3,$$$F			; MAX # BYTES IN FRAME INFO FIELD
L  DDLGFC			; 1st word to clear on STARTUP
B  DDLGT3,0			; IDLE LINK RR FRAME TIMER
B  DDLGT4,0			; REJECT CONDITION TIMER
B  DDLGT5,0			; COMMAND REJECT CONDITION TIMER
B  DDLGT6,0			; Idle input take-down timer
W  DDLGBX,0			; ERROR COUNT - BAD RETRANSMISSIONS
				;   (NOTHING IN RING TO RETRANSMIT)
W  DDLGAH,0			; PACKET LEVEL SEND BACK LIST HEAD
W  DDLGAT,0			; PACKET LEVEL SEND BACK LIST TAIL
W  DDLGFG,0			; Protocol flags word
W  DDLGF2,0			; 2ND FLAG WORD
W  DDLGIS,0			; Input state dispatch
W  DDLGOS,0			; Output state dispatch
W  DDLGTS,0			; Temp storage for output state
				;   dispatch during transparent output
W  DDLGOI,0			; Dispatch for output frame info field
W  DDLGCI,0			; Input CRC-16
W  DDLGCO,0			; Output CRC-16
W  DDLGIF,0			; Input packet list head pointer
W  DDLGMF,0			; Main level packet list head pointer
W  DDLGOF,0			; Output packet list head pointer
W  DDLGIP,0			; Input current packet pointer
W  DDLGOP,0			; Output current packet pointer
W  DDLGIB,0			; Input byte pointer
W  DDLGOB,0			; Output byte pointer
W  DDLGTX,0			; Timer T1 expiration dispatch
W  DDLGUR,0			; Waiting to receive UA frame dispatch
M  DDLGLR,2*<$$$C+1>		; Send list ring (window of K frames)
M  DDLGQR,4*<$$$C+3>		; Input to main ring
B  DDLGIA,0			; Input frame address byte
B  DDLGOA,0			; Output frame address byte
B  DDLGIX,0			; Input frame control byte
B  DDLGMX,0			; Main level frame control byte
B  DDLGOX,0			; Output frame control byte
B  DDLGIK,0			; Input frame byte count
B  DDLGIC,0			; Input current packet byte count
B  DDLGOC,0			; Output currenmt packet byte count
B  DDLGIZ,0			; Input frame error status function
B  DDLGT1,0			; Timer T1
B  DDLGN2,0			; Retransmission count N2
B  DDLGNR,0			; N(R) of last good info or SUPV frame
B  DDLGVR,0			; V(R) next info frame expected
B  DDLGVS,0			; V(S) next info frame to send
B  DDLGVT,0			; Tranmit ring frame count
B  DDLGAK,0			; Response function (acknowledgement)
B  DDLGCM,0			; Pending command function to send
B  DDLGCR,0			; CMDR reason byte
B  DDLGCX,0			; Bad control byte causing CMDR
B  DDLGXX,0			; Temp storage for 1 byte at main level
L  DDLGLC			; Last word (+2) to clear on startup
DDLGCZ==!<DDLGLC-DDLGFC+1>/2
	XSDB	LK,L,DEV,0,G	;THIS LINK USES A WILD SOCKET SDB
	.ENDM
.ENDC

;LINK TYPE A

.IF DF LKANUM
	.MACRO	SDBLKA  DEV,SOC
	.ENDM
.ENDC

;LINK TYPE G

.IF DF LKGNUM
	.MACRO	SDBLKG	DEV,SOC
L  SDLGFC			; 1st word to clear on startup
W  SDLGS1,0			; PACKET LEVEL IMPURE STATUS WORD
W  SDLGBP,0			; ERROR COUNT - BAD X.25 PACKET TYPE
W  SDLGPH,0			; Packet holding list head
W  SDLGPT,0			; Packet holding list tail
B  SDLGPR,0			; P(R) for logical channel
B  SDLGPS,0			; P(S) for logical channel
B  SDLGVR,0			; Saved P(R) from last numbered packet
B  SDLGRR,0			; PENDING RR COUNT FOR CHANNEL
L  SDLGLC			; Last word to clear on startup
SDLGCZ==!<SDLGLC-SDLGFC+1>/2
	.ENDM
.ENDC

    