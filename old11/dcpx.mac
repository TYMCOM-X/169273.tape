	.ENABL	LC

;-----
; DCP constant parameter file. PDP11 parameters.
;-----
BRMPDP=	173000				;Boot ROM address - PDP-11 address space
CSRPDP=	162000				;Control/Status Registers - PDP-11 space

;-----
; DCP parameters.
;-----
VCTADR=	000036				;Q-bus vector cell - DCP address space
CSRADR=	000040				;Control/Status Registers - DCP space
INTADR=	064000				;Q-bus interrupt initiate - DCP space
DMAADR=	064000				;Q-bus DMA request - DCP space
ROMADR=	170000				;Start of ROM - DCP address space
ROMSIZ=	10000				;Size of DCP ROM in octal bytes
BRMADR=	177000				;PDP11 boot ROM address - DCP address space
RSTADR=	177760				;8086 RESET address - DCP address space
RAMADR=	0				;Base address for DCP RAM
RAMSIZ=	4000				;Size of DCP RAM in octal bytes

;-----
; Address calculation factors
;-----
SAVFIL=	001000				;Start of .SAV file code
FUDGE=	SAVFIL-ROMADR			;Offset between .SAV file and ROM addrs

;-----
; Node bootstrap info
;-----
BT11AD=	174000				;Address of node bootstrap in ROM
BT11SZ=	<RSTADR-BT11AD>/2		;Size of node boot (in words)
	.PAGE
	.SBTTL	SIO - Definitions for devices on DCP unit's SIO board

;  This file contains symbol definitions for use with 8086 programs
;  running in the DCP unit that access the SIO board.  Addresses for
;  up to six SIO boards are defined, along with addresses for each of
;  the six devices on the SIO board.  Bit and field definitions for the
;  status and control registers of each device are also provided.
;

	.NLIST				;Don't really need to see these

;  SIO board address definitions
SIO0=	077600				;SIO board 0 (Channels 00-05)
SIO1=	077500				;SIO board 1 (Channels 06-13)
SIO2=	077300				;SIO board 2 (Channels 14-21)
SIO3=	076700				;SIO board 3 (Channels 22-27)
SIO4=	075700				;SIO board 4 (Channels 30-35)
SIO5=	073700				;SIO board 5 (Channels 36-43)

;  SIO functional unit address definitions
SIOTM0=	16				;Mode register - timers 0-2
SIOTC0=	10				;Counter 0
SIOTC1=	12				;Counter 1
SIOTC2=	14				;Counter 2
SIOTM3=	36				;Mode register - timers 3-5
SIOTC3=	30				;Counter 3
SIOTC4=	32				;Counter 4
SIOTC5=	34				;Counter 5
SIOCH0=	00				;Channel 0 data registers
SIOCT0=	04				;Channel 0 control registers
SIOCH1=	02				;Channel 1 data registers
SIOCT1=	06				;Channel 1 control registers
SIOCH2=	20				;Channel 2 data registers
SIOCT2=	24				;Channel 2 control registers
SIOCH3=	22				;Channel 3 data registers
SIOCT3=	26				;Channel 3 control registers
SIOCH4=	40				;Channel 4 data registers
SIOCT4=	44				;Channel 4 control registers
SIOCH5=	42				;Channel 5 data registers
SIOCT5=	46				;Channel 5 control registers

;  8253 timer definitions
TMDSC=	300				;Timer mode counter select mask
TMDSC0=	000				;Timer mode select counter 0
TMDSC1=	100				;Timer mode select counter 1
TMDSC2=	200				;Timer mode select counter 2
TMDSAV=	000				;Save count (Read/Load Latch)
TMDRLL=	020				;Timer mode Read/Load low order
TMDRLH=	040				;Timer mode Read/Load high order
TMDRLB=	060				;Timer mode Read/Load both bytes
TMDMOD=	016				;Timer mode register mode mask
TMDMD0=	000				;Timer mode 0
TMDMD1=	002				;Timer mode 1
TMDMD2=	004				;Timer mode 2
TMDMD3=	006				;Timer mode 3
TMDMD4=	010				;Timer mode 4
TMDMD5=	012				;Timer mode 5
TMDBIN=	000				;Timer mode binary
TMDBCD=	001				;Timer mode BCD

;  Z80A SIO definitions
;  Write Register 0
ZIOR1=	001				;Select register 1
ZIOR2=	002				;Select register 2
ZIOR3=	003				;Select register 3
ZIOR4=	004				;Select register 4
ZIOR5=	005				;Select register 5
ZIOR6=	006				;Select register 6
ZIOR7=	007				;Select register 7
ZIORRC=	100				;Reset Rx CRC checker
ZIORTC=	200				;Reset Tx CRC generator
ZIORTU=	300				;Reset Tx Underrun/EOM latch
ZIOSAB=	010				;Send abort (SDLC)
ZIOREX=	020				;Reset Ext/status interrupts
ZIORST=	030				;Reset channel
ZIOEIR=	040				;Enable int on next Rx character
ZIORTP=	050				;Reset Tx interrupt pending
ZIOERS=	060				;Error reset
ZIORTI=	070				;Return from interrupt (Ch A)

;  Write Register 1
ZIOWRE=	200				;Wait/Ready enable
ZIOWRF=	100				;Wait/Ready function
ZIOWRT=	040				;Wait/Ready on R/T
ZIOIAC=	030				;Interrupt on all Rx characters
ZIOIPV=	020				;Int on all Rx (parity affects vector)
ZIORIF=	010				;Rx interrupt on first character
ZIORID=	000				;Rx interrupt disable
ZIOSAV=	004				;Status affects vector
ZIOTIE=	002				;Tx interrupt enable
ZIOEIE=	001				;External interrupt enable

;  Write Register 2 (Channel B only)
					;Interrupt vector (whole byte)

;  Write Register 3
ZIORCS=	300				;Rx character size mask
ZIORC5=	000				;Rx 5 bits/character
ZIORC6=	100				;Rx 6 bits/character
ZIORC7=	200				;Rx 7 bits/character
ZIORC8=	300				;Rx 8 bits/character
ZIOATO=	040				;Auto enables
ZIOEHP=	020				;Enter hunt phase
ZIORCE=	010				;Rx CRC enable
ZIOASM=	004				;Address search mode (SDLC)
ZIOSLI=	002				;Sync character load inhibit
ZIORXE=	001				;Rx enable

;  Write Register 4
ZIOCLK=	300				;Clock rate mask
ZIOX1 =	000				;x1 clock mode
ZIOX16=	100				;x16 clock mode
ZIOX32=	200				;x32 clock mode
ZIOX64=	300				;x64 clock mode
ZIOS8=	000				;8 bit sync character
ZIOS16=	020				;16 bit sync character
ZIOSDL=	040				;SDLC mode (01111110 flag)
ZIOEXS=	060				;External sync mode
ZIOSME=	000				;Sync modes enable
ZIOS1 =	004				;1 stop bit/character
ZIOS1H=	010				;1.5 stop bits/character
ZIOS2 =	014				;2 stop bits/character
ZIOODD=	000				;Odd parity
ZIOEVN=	002				;Even parity
ZIOPEN=	001				;Parity enable

;  Write Register 5
ZIODTR=	200				;DTR
ZIOTCS=	140				;Tx character size mask
ZIOTC5=	000				;Tx 5 (or less) bits/character
ZIOTC6=	040				;Tx 6 bits/character
ZIOTC7=	100				;Tx 7 bits/character
ZIOTC8=	140				;Tx 8 bits/character
ZIOSBK=	020				;Send break
ZIOTXE=	010				;Tx enable
ZIOC16=	004				;CRC CRC-16
ZIOCSD=	000				;CRC SDLC
ZIORTS=	002				;RTS
ZIOICE=	ZIORTS				;Internal clock enable on DCP
ZIOTCE=	001				;Tx CRC enable

;  Write Register 6
					;Sync char bits 0 thru 7

;  Write Register 7
					;Sync char bits 8 thru 15

;  Read Register 0
ZIOBRK=	200				;Break (asynchronous mode)
ZIOABT=	200				;Abort (SDLC mode)
ZIOEOM=	100				;Tx underrun/EOM
ZIOCTS=	040				;CTS
ZIODSR=	ZIOCTS				;DCP uses CTS bit as DTR
ZIOSYH=	020				;Sync/Hunt
ZIODCD=	010				;DCD
ZIOTBE=	004				;Tx buffer empty
ZIOIPD=	002				;Interrupt pending (Ch A only)
ZIORCA=	001				;Receive character available

;  Read Register 1
ZIOEOF=	200				;End of frame (SDLC)
ZIOCFE=	100				;CRC/framing error
ZIORXO=	040				;Rx overrun error
ZIOPER=	020				;Parity error
ZIORES=	016				;SDLC residue code mask
ZIOALS=	001				;All sent

;  Read Register 2 (Channel B only)
					;Interrupt vector (whole byte)
	.page

;-----
; Some macros for the DCP
;-----
	.MACRO	INB	X		;Invalid instruction
	.ERROR	X			;Invalid instruction for DCP!
	.ENDM

	.MACRO	INDXB	X
	.ERROR	X			;Invalid instruction for DCP!
	.ENDM

	.MACRO	OUTB	X
	.ERROR	X			;Invalid instruction for DCP!
	.ENDM

	.MACRO	OUTDXB	X
	.ERROR	X			;Invalid instruction for DCP!
	.ENDM

.SBTTL	DMA OPERATIONS
;-----
; DMA reads and writes are composed of three sequences.
;  1.	Initiate DMA bus request.  This is done by writing into
;	the location DMAADR.
;  2.	Wait for CPU to acknowledge DMA bus request.  This is done
;	by executing a WAIT instruction.
;  3.	Execute an I/O instruction.  This must be a WORD instruction!!
;-----

;The following bits set latches in U26 on the DCP
; Bits 200 and 100 are BDAL17 and BDAL16 respectivly.

.DMAR=	0				;DMA read
.DMAW=	10				;DMA write
.DMIOP=	4				;DMA I/O page
.DMMEM=	0				;DMA memory access
.LED0=	20				;Set led 0
.LED1=	40				;Set led 1

;Write word in AX using DMA to 11 memory at location in DX
	.MACRO	WRTDMA
	MOVBI	M,	DMAADR,	.DMAW!.DMMEM ;Initiate DMA bus request
	WAIT				;Wait for DMA request acknowledgement
	OUTDXW				;Write contents of AX into node
					;memory at address in DX.
	.ENDM				; This terminates DMA cycle.

;Read word DMA from 11 memory at location in DX into register AX
	.MACRO	REDDMA
	MOVBI	M,	DMAADR,	.DMAR!.DMMEM ;Initiate DMA bus request
	WAIT				;Wait for DMA request acknowledgement
	INDXW				;Read contents of address in DX and
	.ENDM				; load in AX. This terminates DMA cycle.

;Write word in AX using DMA to 11 memory at location in DX
;with the memory extension bits in CL
	.MACRO	WRTDMX
	ANDBI	R,	CL,	3	;Remove extraneous bits
	ORBI	R,	CL,	.DMAW!.DMMEM ;Set DMA bus request bits
	MOVBF	CL,	M,	DMAADR	;Trigger DMA cycle
	WAIT				;Wait for DMA request acknowledgement
	OUTDXW				;Write contents of AX into node
					;memory at address in DX.
	.ENDM				; This terminates DMA cycle.

;Read word DMA from 11 memory at location in DX into register AX
;with the memory extension bits in CL
	.MACRO	REDDMX
	ANDBI	R,	CL,	3	;Remove extraneous bits
	ORBI	R,	CL,	.DMAR!.DMMEM ;Set DMA bus request bits
	MOVBF	CL,	M,	DMAADR	;Trigger DMA cycle
	WAIT				;Wait for DMA request acknowledgement
	INDXW				;Read contents of address in DX and
	.ENDM				; load in AX. This terminates DMA cycle.

;Set led 0 and clear led 1
	.MACRO	LIGHT0
	MOVWIR	DX,	0		;Do a DMA read from location 0
	MOVBI	M,	DMAADR,	.DMAR!.DMMEM!.LED0
	WAIT
	INDXW
	.ENDM

	.MACRO	LIGHT1
	MOVWIR	DX,	0
	MOVBI	M,	DMAADR,	.DMAR!.DMMEM!.LED1
	WAIT
	INDXW
	.ENDM

;-----
; Interrupt the 11 - a read of the address INTADR will cause the
; PDP11 to interrupt at the address contained in location VCTADR.
;-----
	.MACRO	INT11			;Interrupt the 11
	TESTB	AL,	M,	INTADR	;A read at this addr causes an interrupt
	.ENDM

;-----
; INCR2 -- Increment registers by two
;-----
	.MACRO	INCR2	REG
	INCR	REG
	INCR	REG
	.ENDM

	.MACRO	DECR2	REG
	DECR	REG
	DECR	REG
	.ENDM

;-----
; CLRWR / CLRBR - Clear register
;-----
	.MACRO	CLRWR	REG
	SUBWF	REG,	R,	REG	;Clear word register
	.ENDM

	.MACRO	CLRBR	REG
	SUBBF	REG,	R,	REG	;Clear byte register
	.ENDM

	.LIST				;Re-enable listing after SIO.MAC
 