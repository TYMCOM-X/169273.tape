begin
require "(SAILIB)SAIL.DEF" source!file;
require "(SAILIB)REDUFD.REQ" source!file;
require "(WRS)ARGS.REQ" source!file;
require 1 version;
require 25000 new!items;
require 2500 buckets;

integer I;
set DupSet;
string itemvar SIV;

boolean procedure svc( integer array UFD );
begin
    boolean FLAG;
    string FN,UN;
    FN := cv6str(UFD[0])& "."& cv6str(UFD[1]);
    UN := cv6str(UFD[-4])& cv6str(UFD[-3]);
    SIV := cvsi( FN, FLAG );
    if FLAG then begin
	SIV := new( UN );
	new!pname( SIV, FN );
    end
    else begin
	put SIV in DupSet;
	datum(SIV) := datum(SIV)& ","& UN;
    end;
    return( false );
end;

if ARGC < 3 then begin
    print( "dircmp - compares two or more directories for duplicate files

usage:
	DIRCMP dir1 dir2 ... dirn
or	R(XEXEC)DIRCMP; dir1 dir2 ... dirn

notes:
	File names which appear in more than one directory are listed one per
	line followed by the names of the directories in which they appear.
	Only the names are compared - not the contents of the files.

	A subset of a directory may be searched by specifing a partial file
	name following the directory name, such as:
		DIRCMP (XEXEC)*.SAV UPL SPL
	will only consider .SAV files from the XEXEC directory.

	Parenthesis surrounding the directory name are only necessary if
	it is followed by a file name.
"); calli(0,'12);
end;

for I := 1 upto ARGC-1 do begin
    if ARGV[i] neq "(" then ARGV[i] := "("& ARGV[i]& ")";
    REDUFD( svc, ARGV[i], "#*" );
end;

if length(DupSet) = 0 then print( "No duplicate files encountered." );

foreach SIV | SIV in DupSet do begin
    boolean FLAG;
    string FN;
    FN := cvis( SIV, FLAG );
    if FLAG then FN := "?";
    print( FN, (#ht&#ht)[length(FN)%8+1 to inf], datum(SIV), crlf );
end;

end $
