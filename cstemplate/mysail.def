
require "  Macro and ##Symbol definitions for easy use " message;


require "{}[]" delimiters;
define	#ctrl(c) = {(((c) land '37)&null)}
,	#nul = {(0&null)} ,	#soh = {(1&null)}
,	#stx = {(2&null)} ,	#etx = {(3&null)}
,	#eot = {(4&null)} ,	#enq = {(5&null)}
,	#ack = {(6&null)} ,	#bel = {(7&null)}
,	#bs = {('10&null)} ,	#ht = {('11&null)}
,	#lf = {('12&null)} ,	#vt = {('13&null)}
,	#ff = {('14&null)} ,	#cr = {('15&null)}
,	#so = {('16&null)} ,	#si = {('17&null)}
,	#dle = {('20&null)} ,	#dc1 = {('21&null)}
,	#dc2 = {('22&null)} ,	#dc3 = {('23&null)}
,	#dc4 = {('24&null)} ,	#nak = {('25&null)}
,	#syn = {('26&null)} ,	#etb = {('27&null)}
,	#can = {('30&null)} ,	#em = {('31&null)}
,	#sub = {('32&null)} ,	#esc = {('33&null)}
,	#fs = {('34&null)} ,	#gs = {('35&null)}
,	#rs = {('36&null)} ,	#us = {('37&null)}
,	#sp = {('40&null)}
,	#del = {('177&null)}
,	crlf = {('15&'12)}

,	! = {comment}
,	upto = {step 1 until}
,	downto = {step -1 until}

,	repeats(foo) = {(foo)-1 step -1 until 0}
,	auxcli(port,e,funct) = {auxclr(port,memory[e],funct)}

,	!lh(i) = {((I) lsh -18)}
,	!hl(i) = {((I) lsh 18)}
,	!rh(i) = {((I) land '777777)}
,	!hr(i) = {((I) land '777777)}
,	!xwd(l,r) = {(((L) lsh 18) lor ((R) land '777777))}
,	!Bit(x,y)={( Ifcr length(CVPS(y)) thenc
			x lsh (35-(y)) elsec 1 lsh (35-(x)) endc )}
,	begin!code={start!code define p='17,sp='16;}
,	CvPSV(a,v)={a ifcr length(CvPS(a))=0 thenc v endc }

;

let	r!p = record!pointer
,	null!r = null!record
,	a!c = any!class
,	point = bbpp
;

external integer !skip!
;
