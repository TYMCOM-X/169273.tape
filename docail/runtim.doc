
 Functions: [Processes and Interrupts, Miscellaneous, Minor I/O and String, Major I/O and String, Desk Calculator]

"String"_ $PRINT( "STR", CTL (Nil) );
Real	_ ACOS( Real ARG );
Integer	_ ANSWER( Itemvar ETYP, Itemvar ENOT, Itemvar PROCESS );
	  ARRBLT( @INTEGR+FLOTNG+ITMVAR+SET+PNTVAR+DBLPRC DEST,
	    @INTEGR+FLOTNG+ITMVAR+SET+PNTVAR+DBLPRC SOURCE, HOWMANY );
	  ARRCLR(
	    @ARRAY INTEGR+FLOTNG+PNTVAR+SET+LSTBIT+ITMVAR+STRING+DBLPRC ARRAY,
	    INTEGR+FLOTNG+PNTVAR VAL (Nil) );
Integer	_ ARRINFO(
	    @ARRAY INTEGR+FLOTNG+SET+LSTBIT+ITMVAR+STRING+PNTVAR+DBLPRC ARRAY,
	    CODE );
	  ARRTRAN(
	    @ARRAY INTEGR+FLOTNG+ITMVAR+SET+LSTBIT+STRING+PNTVAR+DBLPRC ARRDST,
	    @ARRAY INTEGR+FLOTNG+ITMVAR+SET+LSTBIT+STRING+PNTVAR+DBLPRC ARRSRC );
	  ARRYIN( CHANNEL, @INTEGR+FLOTNG+ITMVAR+DBLPRC WHERE, COUNT );
	  ARRYOUT( CHANNEL, @INTEGR+FLOTNG+ITMVAR+DBLPRC WHERE, COUNT );
Real	_ ASIN( Real ARG );
Itemvar	_ ASKNTC( Itemvar ETYP, OPTS (Nil) );
Real	_ ATAN( Real ARG );
Real	_ ATAN2( Real ARG, Real ARG );
Integer	_ AUXCLR( PORT, @ARGUMENT, FUNCTION );
Integer	_ AUXCLV( PORT, ARGUMENT, FUNCTION );
LongReal_ B2EXP( LongReal ARG );
LongReal_ B2LOG( LongReal ARG );
	  BACKUP;
	  BREAKSET( TABLE, "STRING", CONDITIONS );
Integer	_ CALL( INPUT-VAL, "STRING-DESCR" );
Itemvar	_ CALLER( Itemvar PROCESS );
Integer	_ CALLI( INPUT-VAL, INPUT-CALLINUM );
Itemvar	_ CAUSE1( Itemvar ETYP, Itemvar ENOT (Nil), OPTS (Nil) );
Integer	_ CHNCDB( CHAN );
Integer	_ CHNIOR( CHANNEL, @ARGUMENT, FUNCTION );
Integer	_ CHNIOV( CHANNEL, ARGUMENT, FUNCTION );
	  CLKMOD;
	  CLOSE( CHANNEL, INHIBIT (Nil) );
	  CLOSIN( CHANNEL, INHIBIT (Nil) );
	  CLOSO( CHANNEL, INHIBIT (Nil) );
	  CLRBUF;
Integer	_ CODE( INST, @ADDR );
Real	_ COS( Real ARG );
Real	_ COSD( Real ARG );
Real	_ COSH( Real ARG );
"String"_ CV6STR( INTEGR-IN );
Integer	_ CVASC( "STRING-IN" );
"String"_ CVASTR( INTEGR-IN );
Integer	_ CVD( "STRING" );
"String"_ CVE( Real NUMBER );
"String"_ CVEL( LongReal NUMBER );
"String"_ CVF( Real NUMBER );
Integer	_ CVFIL( "INPUT", @EXTEN, @PPN );
"String"_ CVG( Real NUMBER );
"String"_ CVIS( Itemvar ITEMNO, @FLAG );
Integer	_ CVO( "STRING" );
"String"_ CVOS( INTEGR+FLOTNG NUMBER );
"String"_ CVS( NUMBER );
Itemvar	_ CVSI( "PNAME", @FLAG );
Integer	_ CVSIX( "STRING" );
"String"_ CVSTR( INTEGR-IN );
"String"_ CVXSTR( INTEGR-IN );
	  DDFINT;
	  DEL!PNAME( Itemvar ITEM );
Integer	_ DFCPKT( ADDR, Itemvar TYP, Itemvar NOTC, OPTS );
	  DFR1IN( AOBJNP );
	  DFRINT;
	  DISABLE( INDEX );
	  EDFILE( "FILNAM", ASCLIN, PAGE, BITS (Nil) );
	  ENABLE( INDEX );
	  ENTER( CHANNEL, "NAME", @FAIL-FLG );
Integer	_ EQU( "ARG1", "ARG2" );
	  ERENAME( CHANNEL, "FILE-NAME", PROTECTION, DATE, TIME, MODE, @FLAG );
	  ERMSBF( CHARS );
Real	_ EXP( Real ARG );
	  FILEINFO( @ARRAY ARRAY );
Integer	_ GETBREAK;
Integer	_ GETCHAN;
	  GETFORMAT( @WDTH, @DIGS );
Integer	_ GETPRINT;
Integer	_ GETSTS( CHNL );
Integer	_ INCHRS;
Integer	_ INCHRW;
"String"_ INCHSL( @FLAG );
"String"_ INCHWL;
	  INOUT( INCHN, OUTCH, EXT );
"String"_ INPUT( CHANNEL, TABLE );
"String"_ INSTR( BRCHAR );
"String"_ INSTRL( BRCHAR );
"String"_ INSTRS( @FLAG, BRCHAR );
Integer	_ INTIN( CHANNEL );
	  INTMAP( INDEX, @PROCED PROC, PARAM );
	  INTPRO;
Integer	_ INTSCAN( @"ST-NUM", @FLAG-BREAK );
	  INTSET( Itemvar IPROCSS, OPTS );
	  INTTBL( SIZE );
	  IONEOU( CHARACTER );
	  JOIN( Set JSET );
	  LINOUT( CHANNEL, LINENO );
Integer	_ LISTX( List LIST, Itemvar ITEM, OCCURENCE );
Real	_ LOG( Real ARG );
	  LOOKUP( CHANNEL, "FILENAME", @FLAG );
LongReal_ LREALIN( CHANNEL );
LongReal_ LREALSCAN( @"ST-NUM", @FLAG-BREAK );
	  MAINPR;
	  MKEVTT( Itemvar ETYP );
	  MTAPE( CHANNEL, OPER );
Itemvar	_ MYPROC;
	  NEW!PNAME( Itemvar ITEM, "STRING" );
	  OPEN( CHANNEL, "DEVICE", MODE, INBUFS, OUTBUFS, @COUNT, @BRCHAR, @EOF );
	  OUT( CHANNEL, "STRING" );
	  OUTCHR( CHAR );
	  OUTSTR( "STR" );
Integer	_ POINT( BYTESIZE, @INTEGR+FLOTNG ADDRESS, BYTEPOS );
	  PRISET( Itemvar PROCESS, PRIORITY );
Integer	_ PSTATUS( Itemvar PROCESS );
Real	_ RAN( NEWSEED (Nil) );
Real	_ REALIN( CHANNEL );
Real	_ REALSCAN( @"ST-NUM", @FLAG-BREAK );
	  RELBREAK( TABLE );
	  RELEASE( CHANNEL, INHIBITS (Nil) );
	  RENAME( CHANNEL, "FILE-NAME", PROTECTION, @FLAG );
Itemvar	_ RESUME( Itemvar PROCESS, Itemvar RETVAL (Nil), OPTS (Nil) );
"String"_ SCAN( @"STRING", TABLE, @BRCHAR );
"String"_ SCANC( "ARGIN", "BRK", "OMIT", "MODE" );
	  SETBREAK( TABLE, "BRCHARS", "OMITS", "MODES" );
	  SETFORMAT( WIDTH, DIGS );
	  SETPL( CHANNEL, @LINNUM, @PAGNUM, @SOSNUM );
	  SETPRINT( "FILE", MODE );
	  SETSTS( CHNL, BITS );
Real	_ SIN( Real ARG );
Real	_ SIND( Real ARG );
Real	_ SINH( Real ARG );
Real	_ SQRT( Real ARG );
	  STDBRK( CHANNEL );
Itemvar	_ SUSPEND( Itemvar PROCESS );
Real	_ TANH( Real ARG );
	  TERMINATE( Itemvar PROCESS );
"String"_ TMPIN( "FID", @FLAG );
	  TMPOUT( "FID", "STR", @FLAG );
	  TRIGINI( LOC );
"String"_ TTYIN( TABLE, @BRCHAR );
"String"_ TTYINL( TABLE, @BRCHAR );
"String"_ TTYINS( TABLE, @BRCHAR );
Integer	_ TTYUP( ARG );
Integer	_ TYPEIT( Itemvar ITEM );
Integer	_ URSCHD;
	  USERCON( @INDEX, @VALUE, FLAG );
	  USERERR( VALUE, CODE, "MSG", "RESPONSE" (Nil) );
	  USETI( CHANN, BLOCK );
	  USETO( CHANNEL, BLOCK );
Integer	_ WORDIN( CHANNEL );
	  WORDOUT( CHANNEL, INTEGR+FLOTNG ARG );


 Functions: [`INVISIBLE']

	  .$PINT( ARG );
	  .$PITM( Itemvar ARG );
	  .$PLRL( LongReal ARG );
	  .$PLST( List ARG );
	  .$PREC( PNTVAR ARG );
	  .$PREL( Real ARG );
	  .$PSET( Set ARG );
	  .$PSTR( "ARG" );
Integer	_ .BBPP.( BYTESIZE, @INTEGR+FLOTNG ADDRESS, BYTEPOS );
"String"_ .SUBSR( "THESTRING", FOR, START );
"String"_ .SUBST( "THESTRING", TO, START );
	  M;
	  WR!INI( "DEVICE", "FILENAME", CHANNEL, MAXLENGTH );


 Functions: [Desk Calculator]

LongReal_ B2EXP( LongReal ARG );
LongReal_ B2LOG( LongReal ARG );
Real	_ COS( Real ARG );
"String"_ CVOS( INTEGR+FLOTNG NUMBER );
"String"_ CVS( NUMBER );
"String"_ CVSTR( INTEGR-IN );
Real	_ EXP( Real ARG );
Real	_ LOG( Real ARG );
Real	_ RAN( NEWSEED (Nil) );
Real	_ SIN( Real ARG );
Real	_ SQRT( Real ARG );


 Functions: [Major I/O and String]

	  ARRBLT( @INTEGR+FLOTNG+ITMVAR+SET+PNTVAR+DBLPRC DEST,
	    @INTEGR+FLOTNG+ITMVAR+SET+PNTVAR+DBLPRC SOURCE, HOWMANY );
	  ARRCLR(
	    @ARRAY INTEGR+FLOTNG+PNTVAR+SET+LSTBIT+ITMVAR+STRING+DBLPRC ARRAY,
	    INTEGR+FLOTNG+PNTVAR VAL (Nil) );
	  ARRTRAN(
	    @ARRAY INTEGR+FLOTNG+ITMVAR+SET+LSTBIT+STRING+PNTVAR+DBLPRC ARRDST,
	    @ARRAY INTEGR+FLOTNG+ITMVAR+SET+LSTBIT+STRING+PNTVAR+DBLPRC ARRSRC );
	  ARRYIN( CHANNEL, @INTEGR+FLOTNG+ITMVAR+DBLPRC WHERE, COUNT );
	  ARRYOUT( CHANNEL, @INTEGR+FLOTNG+ITMVAR+DBLPRC WHERE, COUNT );
	  CLOSE( CHANNEL, INHIBIT (Nil) );
"String"_ CVG( Real NUMBER );
"String"_ CVXSTR( INTEGR-IN );
	  ENTER( CHANNEL, "NAME", @FAIL-FLG );
Integer	_ EQU( "ARG1", "ARG2" );
Integer	_ GETBREAK;
Integer	_ GETCHAN;
"String"_ INPUT( CHANNEL, TABLE );
	  LOOKUP( CHANNEL, "FILENAME", @FLAG );
	  OPEN( CHANNEL, "DEVICE", MODE, INBUFS, OUTBUFS, @COUNT, @BRCHAR, @EOF );
	  OUT( CHANNEL, "STRING" );
	  RELBREAK( TABLE );
	  RELEASE( CHANNEL, INHIBITS (Nil) );
"String"_ SCAN( @"STRING", TABLE, @BRCHAR );
"String"_ SCANC( "ARGIN", "BRK", "OMIT", "MODE" );
	  SETBREAK( TABLE, "BRCHARS", "OMITS", "MODES" );
	  SETPRINT( "FILE", MODE );
Integer	_ WORDIN( CHANNEL );
	  WORDOUT( CHANNEL, INTEGR+FLOTNG ARG );


 Functions: [Minor I/O and String]

"String"_ $PRINT( "STR", CTL (Nil) );
	  BREAKSET( TABLE, "STRING", CONDITIONS );
Integer	_ CHNCDB( CHAN );
Integer	_ CHNIOR( CHANNEL, @ARGUMENT, FUNCTION );
Integer	_ CHNIOV( CHANNEL, ARGUMENT, FUNCTION );
	  CLOSIN( CHANNEL, INHIBIT (Nil) );
	  CLOSO( CHANNEL, INHIBIT (Nil) );
"String"_ CV6STR( INTEGR-IN );
Integer	_ CVASC( "STRING-IN" );
"String"_ CVASTR( INTEGR-IN );
Integer	_ CVD( "STRING" );
"String"_ CVE( Real NUMBER );
"String"_ CVEL( LongReal NUMBER );
"String"_ CVF( Real NUMBER );
Integer	_ CVFIL( "INPUT", @EXTEN, @PPN );
Integer	_ CVO( "STRING" );
Integer	_ CVSIX( "STRING" );
	  ERENAME( CHANNEL, "FILE-NAME", PROTECTION, DATE, TIME, MODE, @FLAG );
	  FILEINFO( @ARRAY ARRAY );
	  GETFORMAT( @WDTH, @DIGS );
Integer	_ GETPRINT;
Integer	_ GETSTS( CHNL );
	  INOUT( INCHN, OUTCH, EXT );
Integer	_ INTIN( CHANNEL );
Integer	_ INTSCAN( @"ST-NUM", @FLAG-BREAK );
	  LINOUT( CHANNEL, LINENO );
LongReal_ LREALIN( CHANNEL );
LongReal_ LREALSCAN( @"ST-NUM", @FLAG-BREAK );
	  MTAPE( CHANNEL, OPER );
Real	_ REALIN( CHANNEL );
Real	_ REALSCAN( @"ST-NUM", @FLAG-BREAK );
	  RENAME( CHANNEL, "FILE-NAME", PROTECTION, @FLAG );
	  SETFORMAT( WIDTH, DIGS );
	  SETPL( CHANNEL, @LINNUM, @PAGNUM, @SOSNUM );
	  SETSTS( CHNL, BITS );
	  STDBRK( CHANNEL );
"String"_ TMPIN( "FID", @FLAG );
	  TMPOUT( "FID", "STR", @FLAG );
	  USETI( CHANN, BLOCK );
	  USETO( CHANNEL, BLOCK );


 Functions: [Miscellaneous]

Real	_ ACOS( Real ARG );
Integer	_ ARRINFO(
	    @ARRAY INTEGR+FLOTNG+SET+LSTBIT+ITMVAR+STRING+PNTVAR+DBLPRC ARRAY,
	    CODE );
Real	_ ASIN( Real ARG );
Real	_ ATAN( Real ARG );
Real	_ ATAN2( Real ARG, Real ARG );
Integer	_ AUXCLR( PORT, @ARGUMENT, FUNCTION );
Integer	_ AUXCLV( PORT, ARGUMENT, FUNCTION );
	  BACKUP;
Integer	_ CALL( INPUT-VAL, "STRING-DESCR" );
Integer	_ CALLI( INPUT-VAL, INPUT-CALLINUM );
	  CLRBUF;
Integer	_ CODE( INST, @ADDR );
Real	_ COSD( Real ARG );
Real	_ COSH( Real ARG );
"String"_ CVIS( Itemvar ITEMNO, @FLAG );
Itemvar	_ CVSI( "PNAME", @FLAG );
	  DEL!PNAME( Itemvar ITEM );
	  EDFILE( "FILNAM", ASCLIN, PAGE, BITS (Nil) );
	  ERMSBF( CHARS );
Integer	_ INCHRS;
Integer	_ INCHRW;
"String"_ INCHSL( @FLAG );
"String"_ INCHWL;
"String"_ INSTR( BRCHAR );
"String"_ INSTRL( BRCHAR );
"String"_ INSTRS( @FLAG, BRCHAR );
	  IONEOU( CHARACTER );
Integer	_ LISTX( List LIST, Itemvar ITEM, OCCURENCE );
	  NEW!PNAME( Itemvar ITEM, "STRING" );
	  OUTCHR( CHAR );
	  OUTSTR( "STR" );
Integer	_ POINT( BYTESIZE, @INTEGR+FLOTNG ADDRESS, BYTEPOS );
Real	_ SIND( Real ARG );
Real	_ SINH( Real ARG );
Real	_ TANH( Real ARG );
	  TRIGINI( LOC );
"String"_ TTYIN( TABLE, @BRCHAR );
"String"_ TTYINL( TABLE, @BRCHAR );
"String"_ TTYINS( TABLE, @BRCHAR );
Integer	_ TTYUP( ARG );
Integer	_ TYPEIT( Itemvar ITEM );
	  USERCON( @INDEX, @VALUE, FLAG );
	  USERERR( VALUE, CODE, "MSG", "RESPONSE" (Nil) );


 Functions: [Processes and Interrupts]

Integer	_ ANSWER( Itemvar ETYP, Itemvar ENOT, Itemvar PROCESS );
Itemvar	_ ASKNTC( Itemvar ETYP, OPTS (Nil) );
Itemvar	_ CALLER( Itemvar PROCESS );
Itemvar	_ CAUSE1( Itemvar ETYP, Itemvar ENOT (Nil), OPTS (Nil) );
	  CLKMOD;
	  DDFINT;
Integer	_ DFCPKT( ADDR, Itemvar TYP, Itemvar NOTC, OPTS );
	  DFR1IN( AOBJNP );
	  DFRINT;
	  DISABLE( INDEX );
	  ENABLE( INDEX );
	  INTMAP( INDEX, @PROCED PROC, PARAM );
	  INTPRO;
	  INTSET( Itemvar IPROCSS, OPTS );
	  INTTBL( SIZE );
	  JOIN( Set JSET );
	  MAINPR;
	  MKEVTT( Itemvar ETYP );
Itemvar	_ MYPROC;
	  PRISET( Itemvar PROCESS, PRIORITY );
Integer	_ PSTATUS( Itemvar PROCESS );
Itemvar	_ RESUME( Itemvar PROCESS, Itemvar RETVAL (Nil), OPTS (Nil) );
Itemvar	_ SUSPEND( Itemvar PROCESS );
	  TERMINATE( Itemvar PROCESS );
Integer	_ URSCHD;

 