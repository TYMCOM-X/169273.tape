
	Changes to SAIL as revealed by the UOR/RUTGERS/NIH merge

	TYMSHARE:	mark =	[SDD]	(Scott Daniels)
	RUTGERS:	mark =	[CLH]	(Chuck Hedrick)
				[RLS]	(Robert Smith)
	UOR:		mark =	[JRL]	(Jim Lowe)
file:	FOO2	[now FOO3.xxx and FOO3.]
------------

[SDD]	moved long real procedures to bottom since BAIL does not yet
	cope with LONG values.

[SDD]	RAN(seed) defaults its argument now [ran(0) means don't seed]

[OTHER]	many miscellaneous changes, a few new arguments (defaulting)...
file:	EXPRS
-------------

[SDD] UNARY operators were not obtaining ac pairs for long values.
	(problem was noticed when GETAC returned ac 9 for -longReal)

[SDD] BBPP (POINT-like construct) will emit MOVEI, HRLI if the size
	and position fields are constants but the effective address
	is not a simple variable (was: PUSH, MOVEI, PUSH, PUSH, PUSHJ)

[SDD] LOP statement added, LOP checks its args for temp,constant

[SDD] DRYROT MARK DOUBLE finally fixed LongRealVbl ^ IntegerConstant

[SDD] LOP(string) one instruction shorter (uses SOS), use any AC

[SDD] SWAP operator reworked (RECORD!POINTER and LONG REAL problems...)

[SDD] LONG REAL installed [KI and KL only]

[SDD] When a RECORD!POINTER is used as a BOOLEAN (check for non-null),
	there was a complaint when it was "MARK"ed (class mismatch)
file:	STATS
-------------

[JRL] BEXIT not called on block exit if SIMPLE procedure (rather than
	check for `kill set' or `allocated entity')

[JRL] A block is "counted" IFF there are declaritions in it.

[SDD]	CASE extensions	[a:b] = [a][a+1][a+2]...[b]
			[ELSE] allowed for ELSE
			[ELSE] ok in unnumbered case statement
	case expression allows ELSE, numbered (ie full element specs)
	CASE INDEX ERROR made fatal [actually IOSER].  The rationale
		for this is that string expressions leave the SP-stack
		off by one, REAL and LONG REAL values will not be 
		normalized anythings, in general, invalid values for
		the type of the expression will be returned.

[SDD]	CASE number restricted to [0:'177777] (in case we can allow 
	  negative numbers later).  Also, the index is checked.  [Note:
	  This is an extremely mild restriction, huge case elements
	  do not work anyway.]

[JRL]	It seems the CASE expression allocated 1 AC for indexing, 
	another for the result.  Now the same AC is used.
[SDD]	Well, how about LONG REAL values?  Now the decision is: 
	if first element is a string then use SP (this is as always)
	 else if first element is in an AC then use that AC
	 else if element fits in single AC then use the indexing AC
	 else allocate an AC-pair, and use the first of the pair.

[JRL]	CASE extension:	all numbered CASE statements generate 
			  abbreviated jump tables (0 to smallest are 
			  bounds error).
	{SDD: this is wrong, [0:min-1] should be null statement in 
		classical numbered CASE (no ELSE or [a:b])}

[SDD/JRL]	Numbered CASE got bounds check wrong (off by 1 error).
		CASE bounds error for numbered failed to pick up the
		  CASE index value (JRL: +1 instruction per case)
----

[SDD]	CREF block no longer emitted for RECORD!CLASS declarations.

[SDD]	BILTIN procedures with LONG VALUE args were only getting passed
	half ofthe value.

[SDD]	BILTIN procedures returning LONG results were failing to get
	both words of the result.

file:	GEN
-----------

[SDD]	Make Length(FOO) be "string length" unless FOO is a set or list

[SDD]	Restrict PRELOAD!WITH and PRESET!WITH loading ranges to the
	  next declaration which must be an array declaration.  Generate
	  error message if there is not enough storage provided.  This
	  is to attempt to save the poor user from mismatched loads and
	  bounds.

[SDD]	COMPILER!SWITCH(<letter constant>) added.
	  This is an integer constant which is the current setting of
	  the specified switch.  For example, COMPILER!SWITCH("B") will
	  be non-zero if the program is compiled with the BAIL switch 
	  on.

[SDD]	COMPILER!VERSION added.
	  An integer constant which is the "version number" of the 
	  compiler being used for the compilation.  This number is
	  primarily for verifying that a particular compiler is being
	  used, rather than a sequential number that can be used in
	  ordering comparisons.

[SDD]	CASEC 0 OFC ... was failing in terrible ways

[SDD][KS/DON]
	  Make DEFINE name = 1 LSH 35; use the octal representation in
	  order to keep the value from becoming a "long integer" (which
	  will not work properly).

[SDD]	Make sure that ASSIGNC refers to an appropriate macro 
	  parameter, and complain if it does not.  Recover from bad
	  ASSIGNC.

[SDD]	{new scanner kluge} P28 Some compile-time constructs use the
	  "get a macro parameter list" construct.  Since the scanner
	  now makes sure no more macro parameters are given than the
	  macro expects, a special flag is turned on to allow scanner
	  to obtain an arbitrary number of "macro parameters" without
	  complaining.

[CLH]	store full name of the ".SM1" file ( DEV:<DIR>NAME.EXT ), and 
	  use a reasonable place for the translation (was using a 
	  GOGTAB entry without indexing into GOGTAB, thus overwriting
	  certain crucial page 0 variables).  This is when dumping
	  the ".SM1" name to the binary file.

[CLH]	For Tops 20 and Tenex, various file names will differ depending
	  on the operating system.  These include: 
		SAILIB	low runtime library
		SAILIBH	reentrant (high) runtime library
		BAIREL	BAIL itself
		BAIPD	procedure descriptor file for runtimes
		OPFILE	old file, short form (?)

[SDD]	REQUIRE <integer constant> VERSION now sets .JBVER (JOBVER) to 
	  the specified version number.  (This should be checked for
	  runtime library conflicts, but SAIL programs should be 
	  allowed to have version numbers).

[SDD]	P53 "replace some bits examined" for to determine whether to
	  cause "RCIREF OF SOMETHING NOT A RECORD PTR" error message.
	  The former code checked for any type bits on but PNTVAR and 
	  GLOBAL, now just checks for ITEM or ITEMVAR on.  "This caused
	  an error on FORWARD."

[SDD]	Some ASCIIfying, comments re-formatted.
file:	COMSER
--------------

[RLS]	Tops-20 editor interface installed

[SDD]	Some comments changed to formal ASCII.

[SDD]	if the GETTAB which determines the `batch' status gives the
	error return, assume NOT batch rather than batch [also COMSER]

[SDD]	TENX Check for prompt on Log file for F error response was 
	backwards.

[SDD]	Format change to error handler's "?" message (don't overflow a
	line with the response).
file:	ARRAY
-------------

[CLH]	Virtual origin of arrays code: the check is just plain wrong.
	p10 an "addi b,(d)" disappeared.

[SDD]	preload/preset "dangling preload" check exec added.

[JRL]	itemvar array code improved (explicit itmvar checks)
file:	ARYSER
--------------

[JRL]	check for totally ludicrous call to CORGET (storage allocate
	more than full address space).

[SDD]	BEXIT (block exit) routine was clobbering second half of long
	real values.  Hence no non-simple long real procedure really
	worked at all.

[JRL?]	UR#10  added dummy entries to unit DM1 for COPARR and CATLST
file:	NWORLD
--------------

[DON/KS] #ZM# 	LEAP fix P13 
		"LEAP 117&120 added to avoid set accumulation."
		Calls to "JNREL" (new) to release sets at good times.

[SDD]	ACs 1&6 now only saved at SUAI (where they mean something).
	1: "status of SPACEWAR buttons", 6: "JOB STATUS WORD"

[SDD]	DFR1IN now checks its args for validity

[SDD]	DFR1IN will accept either "aobjn ptr" or "location".

[SDD]	Deferred interrupt queue full on write now gives better error
	message.  Also error message if no queue.

[SDD]	USER must be restored after each deferred interrupt is done.

[SDD]	(TYMSHARE until checked out thoroughly)
	Immediate interrupts save !SKIP! and NOPOLL, set NOPOLL true
	during interrupt.  This should somehow happen for processes as
	well (!SKIP!, not NOPOLL)

[SDD]	(TYMSHARE) PDL OV error was being cleared in interrupt code.

[SDD]	TERMINATE(processItem) was dying if an ufortunate selection
	of ac 5 (PB) was saved at the wrong time.  Now TERMPB will
	always pick up the current process (RUNNER) before attempting
	recovery.  Also some code was shuffled and commented to clarify
	the time of the context switch.

[SDD]	DFR1IN is now "better".  It fatal stops on interrupt queue
	over-runs (not necessary before), but now it can be run on
	top of itself N times [so the main process and several nested
	immediate interrupts can all use DFR1IN].  Queue read and write
	re-done for clarity.
	Question: TENX code seems to pick up a few values below the 
		argList (for CONI and JBTPC), what will happen there?

[SDD]	Process switch caused by deferred interrupt now saves !SKIP!.
	[added to process state variables, restored only when "all acs"
	are restored].

[SDD]	Made everyone save !SKIP! and NOPOLL, set NOPOLL when immediate
	interrupts occur. (This should be reviewed, since interrupt code
	is extremely SITE-dependent).  Perhaps TENX version should have
	two new entries in PSxACS for this saving.
file:	GOGOL
-------------

[=I26=]	IOSTATUS renamed to be IOERRPROC for clarity (?--see IOSER)

[JRL]	String spaces have one more entry (.TOPBYTE)

[CLH]	new GOGTAB entry: $OS (=operating system type)

[CLH]	(TENX) new GOGTAB entry: $OSTYP (0=TENEX,2=TOPS-20)

[CLH]	unused label "STRT" removed

[CLH]	(TENX) FILXXX picked up depending on TENEX/TOPS20

[???]	P16: a "DEC<>" conditional comp?

[JRL]	symbolic, not literal offset used

[CLH]	(DEC) %BATCH changes error calls to FATAL errors which exit.
 [SDD]	if the GETTAB which determines the `batch' status gives the
	error return, assume NOT batch rather than batch [also COMSER]

[CLH]	(TENX) UDTFIL (ddt to map in) name depends on TENEX/TOPS20

[CLH?]	(TENX) EDIT provided for TOPS20 as well as IMSSS

[SDD]	"1022" hooks added for core storage allocation.
	Allows another program to manage core and yet let SAIL live.

[SDD]	Stack discipline violated for no good reason, fixed.

[SDD]	"RF" stored just before call to STRNGC in ??? (P47) -- saves
	spurious error messages.

[SDD]	"CMU-style trap" restore user to GOGTAB after doing trap

[JRL]	save TOPBYTE of each string space when abandoning it.

[JRL]	allow strings bigger than STINCR to succeed.

[JRL]	throw away empty string space blocks.

[CLH]	when strings "aligned", there was a mis-adjust of REMCHR

[SDD]	section "POW" added: DPOW, DLOGS, B2EXP, B2LOG
	long real DPOW( integer expon; long real base ) = base ^ expon
	long real DLOGS( long real expon, base ) = base ^ expon
	long real B2EXP( long real expon ) = 2 ^ expon
	long real B2LOG( long real argum ) = binary logarithm of argum

[SDD]	OUTSTR: SUAI: fix DONs complaint (it output length(arg) mod 4096
			characters due to TTYMES format, now it loops
			over several TTYMES calls).

[SDD]	OUTSTR: TYMSHARE: use the "SAIL string output AUXCAL" (.AXOST)
file:	LEPRUN
--------------

[JRL]	Temp was declared in runtimes (which violates rules, attempt to
	write in HISEG, ...)  Changed to use 1(p)

[SDD]	Changed above to PUSH and POP.

[JRL?]	URLEAP allocates items differently from normal leap.
	"cuteness" with SPDON removed [added one word of storage]

[JRL?]	array types handled better.

[SDD]	CVSI now returns ANY if no match.  Former return of '777777 was
	confusing the hell out of FOREACH in a program section like:
		someItemvar_ CVSI(text,flag)
		IF flag THEN FOREACH someItemvar IN someSet DO ...
	This is currently an "unadvertized feature".
file:	STRSER
--------------

[SDD]	If CVS, CVOS called by compiler (SGLIGN) and needs GC, you got
	"misaligned string" error message (GC screwed alignment).  Now
	re-runs "CVSET" if GC invoked.

[SDD]	If no break tables at all are set, using break table 0 used to
	cause horrible problems.  Now 0 will allocate a break table
	block if it is used and there is no block 0 allocated.

[CLH]	(TENX) The standard break table file name now depends on 
	TENEX/TOPS20.  [file=BKTBL.BKT, device: TNX=SYS:, T20=SAI:]

[SDD]	some order fiddling of calls involving a SAVE.

[SDD]	DFN was used to negate a long real [now really, folks...]

[SDD]	GOGTAB[EXPCHR] rather than "@" used for exponent separator on
	long real number.
file:	SAIL	[done, but should go over for change document]
------------

[SDD]	add an empty word just below ACKTAB to help out TOTAL.  Some 
	of those guys check ACKTAB[ac-1], and they could be in for a 
	rude shock.

[SDD]	ASCIIfy a number of comments

[SDD]	Increased DSIZE storage area by 50

[SDD]	PTIMER (should be TIMER?) turned off with STSW rather than __0

[SDD]	bit definition table of FF for RAID put under FTDEBUG 
	rather than NOEXPO,FTDEBUG

[SDD]	DLOGS, DPOW installed

[SDD]	TYMSHARE code for extended/short lookup/enter to set BAIL bit.

[CLH]	TOPS20 "save me" message improved.

[JRL]	ASWITCH setting built in (specials: NIH, UOR)
	Should this be set up more generally?

[CLH]	"End of compilation." message suppressed in CCL on TOPS20.

[JRL?]	XSAIL stuff checks for no .REL, no .SM1 now. [TENEX/T20]

[SDD]	add error message when cannot chain to another program.

[SDD]	Fix command line "<file>!" behaviour: If a PPN (or user name) 
	is specified, and device SYS: is being used, substitute device
	DSK:.
file:	LEAP
------------
[SDD]	added SSTLOP, for LOPping sets and lists as a statement

[JRL]	(p26) EXTRNL and INTRNL turned off as well as OWN, FORMAL, 
	and MPBIND if an array is no longer "own"
	SDD: but not done properly [commas rather than ! were used]
file:	RECSER
--------------

[SDD]	Record garbage collector always used UFA for GC trigger 
	adjustment.  This is in poor taste since DEC (in its infinite
	wisdom) has decided to kill: UFA,DFN,FADL,FSBL,FMPL, and FDVL
	on the newest KLs and 2020s.  Now KIs (or better) use hardware
	FIX instruction (=KIFIX in SAIL source NOT "FIX"-a LUUO).  
	Since KA code is shipped everywhere as the first compiler,
	the KA version now uses "FADR SUB" to "integerize"

[SDD]	reduce mark overhead slightly, reformat some code (indents,...)

General problems (unfixed)
    1) record!classes with no fields don't work
    2) garbage collection is only triggered by "small" records
    3) a record's storage should not be re-cycled until a garbage 
	collect.  "delete this record" should be interpretted as
	meaning "I promise not to use this record", rather than
	"there exist no pointers to this record".  In particular,
	since $RECFN does "call by value", there is sure to be at
	least one pointer to the record.
	  The existance of a pointer to a record which is de-allocated 
	means that $RECGC will look at the record, and try to interpret
	it.  This means disaster if the space is not being used for 
	records.
	  A possibility is to deallocate all associated space for the
	record, and clear the $CLASS field.  Then, when $RECGC runs,
	it could clear all pointers to the record.  Alternatively, if
	write access to the record!pointer is not possible, the record
	could be placed on a ring (rings?) of record storage which is
	available for use.  $RECGC could drop all entries on that ring
	which are not in fact accessed.
    4) (Actually a new feature request)
	"non-dynamic" records could be allowed.  They would be 
	distinguished by having their class information in the left 
	half of the record!pointer variable, and the garbage collector
	would ignore them.  No non-data portion of these records would
	be required, thus allowing these things to look like structured
	memory [but note: strings and long real fields are BIZARRO].
	Tables like GOGTAB would work well with this structure.
file:	HEL
-----------

[SDD]	LOP as statement added

[SDD]	redundant class "@END" removed (same as "@SEND")

[SDD]	some (small) ASCIIfying, all semicolons use SEMI

[SDD]	CASE extension: case expressions have same numbering...
	CASE element spec allows [n,n,n] and [l:r] and [ELSE]

[SDD]	COMPILER!SWITCH and COMPILER!VERSION added.

[JRL?]	arrays allowed as args to REF!ITEM

[SDD]	IFC, IFCR, WHILEC, FORC, and FORLC productions collected.
	A few #TRAPs installed.
	
[SDD]	CASEC production 4 (CS4)  EXEC FRMBCT, not FREMBW used (?)
	[this may have to do with CASEC 0 OFC ... not working.]

[SDD]	redundant production Q48 removed (there were two)
file:	PARSE	[done, but should go over for change document]
-------------

[SDD]	Compiler debugger: added commands:
		@id<cr>	=lookup ID
		xxA	=examine accumulator table
		-A	=list all "occupied" (user) accumulators
		V	=verbose SEMBLK print
		xx_	=(re)display SEMBLK
		xx[	=follow RH link in current SEMBLK
		xx]	=follow LH link in current SEMBLK
		?	summarize compiler-debugger commands
	Re-organized commands (now a dispatch table) for easy expansion
		while debugging.
	Indicate typos with a bell
	RAID code under RAIDSW (STSW'ed to STANSW!UORSW!TYMSW)
	Indicate when productions breakpoints are being set or cleared 
		redundantly.
	Changed CMU's "show ^X as !" from CMU only to NOSTANFO
	Clear/Restore write protect on high seg if attempt production
		stops.
	Production breaks index from EXCTAB-BB0, not IPROC-BB0
		(this was the "obscure phasing bug")
file:	TRIGS	=> TRIGS.NEW [complete]
-------------

[CLH]	save register 16 in the appropriate slot.

[CLH]	EXCH instead of MOVE acs 16 and 17 back from PS3ACS+16,17

[CLH]	Changed a JFOV .+1 to JOV .+1 (ASH causes integer not float ovf)

[SDD]	Remove an ASH which was causing arith ovfl when LSH was meaning
	(supercedes [CLH] above)

[SDD]	Comment quadrant stuff in SIN, remove a "meaningless" test which
	probably slows routine down.

file:	PROCSS
--------------

	(no changes)
file:	TOTAL	=> TOTAL.NEW [complete]
-------------

[SDD]	shuffled back some code with labels out of literal

[SDD]	Problems in CLEARs, several chances to take $SBITS or $TBITS of
	zero (when an AC is reserved but not marked, it is -1,,0).
	Also forced "clear AC, second of double" to give error message.

[SDD]	DRYROT IACCHK was happening at funny points [in REMOPs].  Turns
	out the code to protect RF from LONG REAL stores into ac RF-1
	was checkingS, which had no defined value at all.

[SDD]	Added loader block for version number set on user programs

[SDD]	TOTAL was clearing too many bits in PRE for conversions

[SDD]	Loop in PRE for some SWAP conversions fixed.  Several other
	fixes performed [needs a rewrite for AC handling]

[SDD]	String temps (address) now obtained with HRRO, not MOVE
	[so that   strarr[i+j]_ strvbl_ strproc;   works]

[SDD]	String subfields of records drop PNTVAR indication (REMOP)

[SDD]	[MARK] FJC has non-standard segment break for compiler.  Make 
	check (at TYMSHARE) that sign bit not used nefariously in temp. 
	Code used to mark temps from ACKTAB dispatched on sign bit of
	the temp, which is wrong (temps >377777 made acs look free).

[SDD]	Allow continue to good place on "DRYROT: record cortmp remop".

[CLH]	Paramaterize file names: LIBLOW, LIBHI, BAILOD, and BAIPDS

[CLH][RLS] Directory name => PPN reworked, arguments changed to 
	facilitate TOPS-20 use.  This procedure is used to prepare 
	files requests in the .REL -- LOADER (at least) cannot take 
	file names as text, they must be `wonderful' SIXBIT with PPN.
HEAD

[SDD]	FIX (opcode 3, a UUO) name change to FIXUUO, KIFIX still used
		for the actual instruction (clarity coding)
BAIL, SCISS, ... [debugger code]

BAIL.SAI
[SDD]	Remove invalid PRESET for integer variables.
	
[SDD]	Insert a large amount of argument checking to expression
	interpretter (reduces ILL MEM REF problems substantially,
	since most came from ill-formed expressions).

[SDD]	Pre-declare a few more entities: 
	!!QUERY (to allow crude "EVAL"-like constructions).
	BAIL!BANNER (This is COMPILER!BANNER for the BAIL compilation).
	RECORD!POINTER	To allow memory[expr,RECORD!POINTER].
	ARRAY,REFERENCE,PROCEDURE (prelim for dynamic declarations)
	make MEMORY;<cr> show the memory boundaries on TOPS-10 systems.
	
[SDD]	When a line is terminated with <cr>, assume a semi-colon
	ends it.  This fixes a nasty human-interface problem: most
	people type an expression followed by a return and expect a
	response.  For those whose expressions extend beyond a single
	line, terminating each partial line with <lf> will allow 
	continued typing.

[SDD]	Drop the "." as block identifier character in favor of "|",
	since "|" will not interfere with identifier names, and
	"SUCH THAT" (what "|" means in SAIL) is a FOREACH specifier
	and BAIL has no intention of implementing FOREACH searches.

[SDD]	For convenience, in BAIL only, allow a syntax for record
	subfield specifiers that does not involve typing the class
	name.  if "PTRE" is a record!pointer expression of class "CL",
	and "CL" has a subfield named "FLD", then "CL:FLD[PTRE]" and
	"PTRE[FLD]" are equivalent.

[SDD]	Do not insist on an exact class match when taking the subfield
	of a record with the normal syntax.  Instead, treat the pointer
	as if it were the appropriate class.  [This is useful when 
	chasing a common subfield through a linked list of several
	classes of records].

RTRAN.SAI	[Bail preparation code]

[SDD]	IBP pseudo-runtime was ... IBP 1,@-1(P) ... which does NOT work
	on KL-10 or KS CPUs  (where it is an ADJUST BYTE POINTER).
	Fixed.

  e@
tG