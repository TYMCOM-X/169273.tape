.TITLE DCP Programing manual
.PARAGRAPH
This document contains the complete DCP-PDP11
software interface specification.
The DCP is controlled by sending transmit functions
and responds by sending the PDP11 receive functions.
To send a function to the DCP the PDP-11 must wait for the
TXFUN byte to become zero indicating that the DCP is
ready for another function.
Then the necessary data must be loaded into the transmit
data registers. The function code must be loaded after the
rest of the message has been loaded.
There is no interrupt generated by the DCP when a transmit
function is eaten.
A new receive function will be sent to the PDP-11 when the
last receive function byte has been cleared by the PDP-11.
Upon receiving a function from the DCP the entire function
must be copied from the registers before zeroing the
receive function byte.
This will generate an interrupt to the PDP-11 only after
the EXECUT function has been sent to the DCP.
In CRC mode using DDCMP the node speaking to the DCP (not the one
the DCP is plugged into) must idle sync characters between messages.
This is necessary to flush the character hold-off buffer in the DCP.

.SUBTITLE	DCP register definitions
.PAGE
.LITERAL
15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   RXPORT      |  RXFUNCTION   |	162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|         RECEIVE DATA          |	162002
+               +               +
|                               |	162004
+               +               +
|                               |	162006
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|    TXPORT     |  TXFUNCTION   |	162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        TRANSMIT DATA          |	162012
+               +               +
|                               |	162014
+               +               +
|                               |	162016
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
.END LITERAL
.SUBTITLE	Receive function definitions
.PAGE
.LITERAL
FUNCTION:	CARDET - Carrier detect

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |            2  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Carrier detected.
.PAGE
.LITERAL
FUNCTION:	CARLOS - Carrier loss

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |            4  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Carrier has been lost.
.PAGE
.LITERAL
FUNCTION:	DSRSET - DSR set

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |            6  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Data set ready has been set.
.PAGE
.LITERAL
FUNCTION:	DSRCLR - DSR clear

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           10  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Data set ready has been cleared.
.PAGE
.LITERAL
FUNCTION:	RXVDAT - Receive data character

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           12  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|a|b|c|d|///////|   DATA BYTE   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Receive data character.
.LIST
.LIST ELEMENT
a => Receiver error. This bit is the inclusive or of all the other
receiver error bits.
.LIST ELEMENT
b => Framing error (asynchronous only) / CRC error (synchronous only).
.LIST ELEMENT
c => Overrun error (synchronous only).
.LIST ELEMENT
d => Parity error.
.END LIST
.PAGE
.LITERAL
FUNCTION:	XMTDON - Transmit done

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           14  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
transmission of last character is done, the DCP is ready to transmit
another one.
.PAGE
.LITERAL
FUNCTION:	DCPOK - DCP passed internal diagnostics

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|           16  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This function is returned in response to the initialization function
EXDIAG upon the successful completion of DCP internal diagnostics.
See EXDIAG for further details.
.PAGE
.LITERAL
FUNCTION:	PORTOK - Port vector initialized ok

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           20  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This port has been initialized properly and the hardware really exists.
.PAGE
.LITERAL
FUNCTION:	EOMDET - Transmit underrun - DISABLED!

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           22  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Transmit underrun has been disabled due to hardware bugs in the SIO chip.
The SIO will generate these spuriously often enough to seriously
degrade system preformance!
.PAGE
.LITERAL
FUNCTION:	DSPMEM - Display memory word

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|           40  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        MEMORY ADDRESS         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          DATA WORD            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This debug function displays a word from the DCP's internal memory
in response to the EXMMEM function.
Transmitter underrun detected.
.PAGE
.LITERAL
FUNCTION:	REGDMP - Register dump

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|           42  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           REGISTER            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           REGISTER            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|           REGISTER            |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Three register dump functions are received in response to a single
DMPREG function.
The register fields return the values as follows:
.LIST
.LIST ELEMENT
AX,BX,CX
.LIST ELEMENT
DX, SP, BP
.LIST ELEMENT
SI, DI, Status flags
.END LIST
.PAGE
.LITERAL
FUNCTION:	ROMERR - DCP EPROM checksum error

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|          376  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
| EPROM CHKSUM  |  CALC CHKSUM  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This is a fatal hardware error. The EPROM'S checksum does not agree
with the calculated checksum. This function will only be returned in
response to a EXDIAG function.
.PAGE
.LITERAL
FUNCTION:	MEMERR - Memory diagnostic error

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|          374  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       FAILING ADDRESS         |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        EXPECTED DATA          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        RETURNED DATA          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This is a fatal hardware error. The DCP internal memory diagnostic failed.
This function is returned in response to a EXDIAG function during
initialization.
.PAGE
.LITERAL
FUNCTION:	FUNERR - Invalid transmit function

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |          372  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|  BAD FUNCTION |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This function is returned in response to an invalid transmit function.
A sick DCP driver in the PDP-11 can cause this.
.PAGE
.LITERAL
FUNCTION:	PRTERR - Invalid port number

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |          370  |   162000
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
A transmit function with an impossible port number will cause this error.
During initialization this function is returned to indicate that an attempt
was made to initialize an SIO board that does not really exist.
.PAGE
.SUBTITLE	Transmit function definitions
.LITERAL
FUNCTION:	EXDIAG - EXECUTE INTERNAL DIAGNOSTICS

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|            2  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This function resets the DCP and executes internal diagnostics to
verify that the internal RAM, ROM and registers are good.
The proper initialization protocol is to send the EXDIAG function,
set a timer and pole the receive function register until a DCPOK
is returned. If the timer goes off an error message should have been
returned.
The PDP-11 driver must not write into the DCP registers while
diagnostics are being executed because the registers are also tested.
.PAGE
.LITERAL
FUNCTION:	BOOT11 - Reserved!

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|            4  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This function is reserved for use by the bootstrap. This causes the
DCP to load the PDP11 bootstrap into PDP11 memory at location 1000.
To reboot the PDP-11 the program must disable interrupts and jump
to location 173000. No program should ever send this function!
.PAGE
.LITERAL
FUNCTION:	EXMMEM - Examine a DCP memory word

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|            6  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          DCP ADDRESS          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This debug function is used to examine a DCP memory word.
The address does not have to be on an even word boundary.
.PAGE
.LITERAL
FUNCTION:	DEPMEM - Deposit a word into DCP memory

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|           10  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|          DCP ADDRESS          |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|             DATA              |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This debug function is used to deposit a word into DCP memory.
.PAGE
.LITERAL
FUNCTION:	DMPREG - Dump DCP internal registers

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|           12  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This debug function returns three REGDMP functions with the contents of
some DCP internal registers (see DMPREG description).
.PAGE
.LITERAL
FUNCTION:	ZAPALL - Reinitialize all ports

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|           14  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This function disables all ports, both synchronous
and asynchronous.
.PAGE
.LITERAL
FUNCTION:	EXECUT - Enable SIO scanning

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|           16  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
This function enables interrupts on all subsequent receive functions
from the DCP and causes the DCP to begin scanning the ports.
.PAGE
.LITERAL
FUNCTION:	ASYPAR - Initialize an asynchronous port
15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           20  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////| a |b|c| d |///////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   BAUD RATE VALUE FROM TABLE  |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
DESCRIPTION:
.END LITERAL
.LIST
.LIST ELEMENT
a => Stop bits
.BREAK
01 - One stop bit
.BREAK
10 - One and a half stop bits
.BREAK
11 - Two stop bits
.LIST ELEMENT
b => Parity sense select
.BREAK
0 - Odd parity
.BREAK
1 - Even parity
.BREAK
.LIST ELEMENT
c => Parity enable
.BREAK
0 - No parity
.BREAK
1 - Parity enable
.LIST ELEMENT
d => Character size not including any parity bits
.BREAK
00 - 5 bits
.BREAK
01 - 6 bits
.BREAK
10 - 7 bits
.BREAK
11 - 8 bits
.END LIST
.LITERAL
Baud rate value table:
Baud rate	Decimal value	Octal value
   50		2304		4400
   75		1536		3000
  110		1047		2027
  134.5		 857		1531
  150		 768		1400
  200		 576		1100
  300		 384		 600
  400		 288		 440
  600		 192		 300
 1000		 115		 163
 1200		  96		 140
 1800		  64		 100
 2000		  58		  72
 2200		  52		  64
 2400		  48		  60
 3600		  32		  40
 4800		  24		  30
 7200		  16		  20
 9600		  12		  14
19200		   6		   6
38400		   3		   3
.END LITERAL
.PAGE
.LITERAL
FUNCTION:	TXDATA - Transmit data

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           22  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|   DATA BYTE   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Transmit one data byte.
.PAGE
.LITERAL
FUNCTION:	SETDTR - Set data terminal ready

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           24  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Set data terminal ready.
.PAGE
.LITERAL
FUNCTION:	CLRDTR - Clear data terminal ready

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           26  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Clear data terminal ready.
.PAGE
.LITERAL
FUNCTION:	BREAK - Break line

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           30  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Initiate a break condition on the line.
.PAGE
.LITERAL
FUNCTION:	ENDBRK - End break

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           32  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
End break condition on line.
.PAGE
.LITERAL
FUNCTION:	CFGPRT - Configure port vector

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           34  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|       INTERRUPT VECTOR        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Initialize the interrupt vector for this port and check
to see that the hardware really exists and responds properly.
A simple hardware verification routine is executed by this function.
This function returns a PORTOK if sucessful.
PRTERR is returned if the hardware does not exist or
the Z80-SIO fails to pass the diagnostic.
.PAGE
.LITERAL
FUNCTION:	TXSOM - Transmit start of messagge

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           36  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|   DATA BYTE   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Transmit start of synchronous message.
This function initializes CRC if enabled and terminates the idle state.
.PAGE
.LITERAL
FUNCTION:	TXEOM - Transmit end of message

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           40  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|   DATA BYTE   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Transmit end of synchronous data message.
This function sends the last data character,
sends the CRC bytes if enabled and
causes the line to idle synch characters or mark (as selected
during port initialization).
.PAGE
.LITERAL
FUNCTION:	SYNPAR - Initialize synchronous port

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           42  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////|a|b|c|d|  SYNCH CHAR   |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Initialize a synchronous port.
.SKIP
OPTIONS:
.LIST
.LIST ELEMENT
a => Transmit CRC enable
.LIST ELEMENT
b => Search and idle single synch = 0,  double synch = 1
.LIST ELEMENT
c => Idle synch character = 0, idle mark = 1
.LIST ELEMENT
d => Receive CRC enable
.END LIST
.PAGE
.LITERAL
FUNCTION:	SRCHSY - Enter search synch mode

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           44  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|/////////////|a|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Enter search synch mode.
This function allows strip synch mode to be entered
simultaneously with search synch mode to eliminate a race condition.
.SKIP
OPTIONS:
.BREAK
a => Strip synch enable = 1
.PAGE
.LITERAL
FUNCTION:	STRPSY - Select strip synch mode

15        8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |           46  |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|/////////////|a|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
Select strip synch mode.
.SKIP
OPTIONS:
.BREAK
a => Strip synch enable = 1
.PAGE
.LITERAL
FUNCTION:

15             8 7             0
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|  PORT NUMBER  |               |   162010
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|///////////////|///////////////|
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+

DESCRIPTION:
.END LITERAL
.P
    !|