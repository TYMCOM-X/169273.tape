
	.TITLE	TRMT  TERMINAL CHARACTER DISPATCH TABLES
	.SBTTL	TRMT   - NEXILIS/JRG

	XLPAR			;DON'T LIST PARAMETER FILE
	.LIST	MEB		;SHOW MACRO EXPANSION BINARY IN LISTING

.IF NDF ..SAT
  ..SAT=!0			;DEFAULT IS TO INCLUDE NEXILIS STUFF
.ENDC
.IF NDF ..CAS
  ..CAS=!0
.ENDC

	PURE

	.SBTTL	TRMT   - DEFINE CHARACTER INDEX TABLE AND BREAK TABLE

;EACH ENTRY IN THE CHARACTER INDEX TABLE IS ONE BYTE, INDEX IS BY ASCII
;  CHAR. (7 BITS ONLY).  CONTENTS OF EACH ENTRY PROVIDES THE INDEX INTO THE
;  CHARACTER DISPATCH TABLES.  EACH ENTRY IN THE BREAK TABLE IS ONE BYTE,
;  INDEX IS BY CHARACTER VALUE (7 BITS ONLY).  CONTENTS OF EACH ENTRY IS
;  8 BITS, WHICH ARE SET INDIVIDUALLY IF THE CHARACTER IS A BREAK CHARACTER
;  IN EACH OF THE BREAK SETS.  MORE THAN ONE BIT MAY BE SET.
;  BITS ARE DEFINED AS FOLLOWS:
;		  001 = CARRIAGE RETURN ONLY (X.3 PAR[3]=2)
;		  002 = ALL CONTROL CHARACTERS AND <DEL> EXCEPT 
;			 <HT><LF><VT><FF>  (I.E. X.3 PAR[3] = 94.)
;		  004 = RSX BREAK SET
;		  010 = TECO BREAK SET
;		  020 = RSTS BREAK SET
;		  040 = TOPS-20 BREAK SET
;		  100 = TOPS-10 BREAK SET
;		  200 = ANY CHARACTER

	.MACRO	TBL  AAA,BBB
	.BYTE	.CX'AAA'#
.IF EQ ..SAT
  .IF NB <BBB>
	.IRP	M,<\.M>
    ..'M=!BBB
	.ENDM
    .M=!.M+1
  .ENDC
.ENDC
	.ENDM

.M=!0
CHRINX::TBL	NUL,202		; 000 - NUL
	TBL	CNT,202		; 001 - SOH  ^A
	TBL	CNT,202		; 002 - STX  ^B
	TBL	CNT,202		; 003 - ETX  ^C
	TBL	CNT,222		; 004 - EOT  ^D
	TBL	CNT,202		; 005 - ENQ  ^E
	TBL	CNT,202		; 006 - ACK  ^F
	TBL	NUL,352		; 007 - BEL  ^G
	TBL	BSP,202		; 010 - BS   ^H
	TBL	HTB,200		; 011 - HT   ^I
	TBL	LFD,374		; 012 - LF   ^J
	TBL	VTB,340		; 013 - VT   ^K
	TBL	FFD,360		; 014 - FF   ^L
	TBL	CRN,207		; 015 - CR   ^M
	TBL	CNT,202		; 016 - SO   ^N
	TBL	CNT,202		; 017 - SI   ^O
	TBL	DLE,202		; 020 - DLE  ^P
	TBL	XON,202		; 021 - DC1  ^Q
	TBL	DC2,202		; 022 - DC2  ^R
	TBL	XOF,202		; 023 - DC3  ^S
	TBL	CNT,202		; 024 - DC4  ^T
	TBL	CNT,372		; 025 - NAK  ^U
	TBL	CNT,202		; 026 - SYN  ^V
	TBL	CNT,202		; 027 - ETB  ^W
	TBL	CAN,202		; 030 - CAN  ^X
	TBL	CNT,202		; 031 - EM   ^Y
	TBL	CNT,376		; 032 - SUB  ^Z
	TBL	ESC,376		; 033 - ESC  ^[
	TBL	CNT,202		; 034 - FS   ^\
	TBL	CNT,202		; 035 - GS   ^]
	TBL	CNT,202		; 036 - RS   ^^
	TBL	CNT,202		; 037 - US   ^_
	TBL	UCA,200		; 040 - SPACE
	TBL	UCA,200		; 041 - !
	TBL	UCA,200		; 042 - "
	TBL	UCA,200		; 043 - #
	TBL	UCA,200		; 044 - $
	TBL	UCA,200		; 045 - %
	TBL	UCA,200		; 046 - &
	TBL	UCA,200		; 047 - '
	TBL	UCA,200		; 050 - (
	TBL	UCA,200		; 051 - )
	TBL	UCA,200		; 052 - *
	TBL	UCA,200		; 053 - +
;	TBL	UCA,200		; 054 - ,
	TBL	CMA,200		; 054 - , ;--us701
;	TBL	UCA,200		; 055 - -
	TBL	DSH,200		; 055 - - ;--us701
	TBL	UCA,200		; 056 - .
	TBL	UCA,200		; 057 - /
	TBL	UCA,200		; 060 - 0
	TBL	UCA,200		; 061 - 1
	TBL	UCA,200		; 062 - 2
	TBL	UCA,200		; 063 - 3
	TBL	UCA,200		; 064 - 4
	TBL	UCA,200		; 065 - 5
	TBL	UCA,200		; 066 - 6
	TBL	UCA,200		; 067 - 7
	TBL	UCA,200		; 070 - 8
	TBL	UCA,200		; 071 - 9
	TBL	UCA,200		; 072 - :
	TBL	SMI,200		; 073 - ;
	TBL	UCA,200		; 074 - <
	TBL	UCA,200		; 075 - =
	TBL	UCA,200		; 076 - >
	TBL	UCA,200		; 077 - ?
	TBL	UCA,200		; 100 - @
	TBL	UCA,200		; 101 - A
	TBL	UCA,200		; 102 - B
	TBL	UCA,200		; 103 - C
	TBL	UCA,200		; 104 - D
	TBL	UCA,200		; 105 - E
	TBL	UCA,200		; 106 - F
	TBL	UCA,200		; 107 - G
	TBL	UCA,200		; 110 - H
	TBL	UCA,200		; 111 - I
	TBL	UCA,200		; 112 - J
	TBL	UCA,200		; 113 - K
	TBL	UCA,200		; 114 - L
	TBL	UCA,200		; 115 - M
	TBL	UCA,200		; 116 - N
	TBL	UCA,200		; 117 - O
	TBL	UCA,200		; 120 - P
	TBL	UCA,200		; 121 - Q
	TBL	UCA,200		; 122 - R
	TBL	UCA,200		; 123 - S
	TBL	UCA,200		; 124 - T
	TBL	UCA,200		; 125 - U
	TBL	UCA,200		; 126 - V
	TBL	UCA,200		; 127 - W
	TBL	UCA,200		; 130 - X
	TBL	UCA,200		; 131 - Y
	TBL	UCA,200		; 132 - Z
	TBL	UCA,200		; 133 - [
	TBL	UCA,200		; 134 - \
	TBL	UCA,200		; 135 - ]
	TBL	UCA,200		; 136 - ^
	TBL	UCA,200		; 137 - _
	TBL	UCA,200		; 140 -
	TBL	LCA,200		; 141 - a
	TBL	LCA,200		; 142 - b
	TBL	LCA,200		; 143 - c
	TBL	LCA,200		; 144 - d
	TBL	LCA,200		; 145 - e
	TBL	LCA,200		; 146 - f
	TBL	LCA,200		; 147 - g
	TBL	LCA,200		; 150 - h
	TBL	LCA,200		; 151 - i
	TBL	LCA,200		; 152 - j
	TBL	LCA,200		; 153 - k
	TBL	LCA,200		; 154 - l
	TBL	LCA,200		; 155 - m
	TBL	LCA,200		; 156 - n
	TBL	LCA,200		; 157 - o
	TBL	LCA,200		; 160 - p
	TBL	LCA,200		; 161 - q
	TBL	LCA,200		; 162 - r
	TBL	LCA,200		; 163 - s
	TBL	LCA,200		; 164 - t
	TBL	LCA,200		; 165 - u
	TBL	LCA,200		; 166 - v
	TBL	LCA,200		; 167 - w
	TBL	LCA,200		; 170 - x
	TBL	LCA,200		; 171 - y
	TBL	LCA,200		; 172 - z
	TBL	UCA,200		; 173 - {
	TBL	UCA,200		; 174 - |
	TBL	HSP,200		; 175 - }
	TBL	HSP,200		; 176 - ~
	TBL	RUB,376		; 177 - DEL
	TBL	UNU		; 200 - UNUSED NON-ASCII CODE
	TBL	LCS		; 201 - LOWER CASE SHIFT
	TBL	UCS		; 202 - UPPER CASE SHIFT
	TBL	PRE		; 203 - PREFIX CHARACTER
	TBL	EOT		; 204 - 2741 EOT CODE
	.PAGE
	.SBTTL	TRMT   - GENERATE BREAK TABLE

.IF EQ ..SAT

.N=!0
BRKTBL::.REPT	200
	.IRP	NN,<\.N>
	.BYTE	..'NN
	.ENDM
.N=!.N+1
	.ENDR

.ENDC
	.PAGE
	.SBTTL	TRMT   - FILL CHARACTER TIMING TABLES

;DEFINE MACRO WHICH SPECIFIES THE CONVERSION FACTORS BETWEEN TIME AND FILL
;  CHARACTERS FOR EACH BAUD RATE
;  FORMAT IS:
;	XX	MUL,DIV
;  WHERE:
;	MUL = FACTOR TO MULTIPLY BY
;	DIV = FACTOR TO DIVIDE BY

	.MACRO	FILTBL
	XX   1., 1.	; 0 =  AUTO-DETECT
	XX   1., 9.	; 1 =    50   BAUD, 5 BITS, 1.5 STOP BITS,   6.67 CPS
	XX   1., 6.	; 2 =    75   BAUD, 5 BITS, 1.5 STOP BITS,  10.00 CPS
	XX   1., 6.	; 3 =   110   BAUD, 8 BITS, 2   STOP BITS,  10.00 CPS
	XX   1., 4.	; 4 =   134.5 BAUD, 6 BITS, 1   STOP BIT,   15.00 CPS
	XX   1., 4.	; 5 =   150   BAUD, 8 BITS, 1   STOP BIT,   15.00 CPS
	XX   1., 3.	; 6 =   200   BAUD, 8 BITS, 1   STOP BIT,   20.00 CPS
	XX   1., 2.	; 7 =   300   BAUD, 8 BITS, 1   STOP BIT,   30.00 CPS
	XX   5., 8.	;10 =   300   BAUD, 6 BITS, 1   STOP BIT,   37.50 CPS
	XX   2., 3.	;11 =   400   BAUD, 8 BITS, 1   STOP BIT,   40.00 CPS
	XX   1., 1.	;12 =   600   BAUD, 8 BITS, 1   STOP BIT,   60.00 CPS
	XX   2., 1.	;13 =  1200   BAUD, 8 BITS, 1   STOP BIT,  120.00 CPS
	XX   3., 1.	;14 =  1800   BAUD, 8 BITS, 1   STOP BIT,  180.00 CPS
	XX  10., 3.	;15 =  2000   BAUD, 8 BITS, 1   STOP BIT,  200.00 CPS
	XX   4., 1.	;16 =  2400   BAUD, 8 BITS, 1   STOP BIT,  240.00 CPS
	XX   6., 1.	;17 =  3600   BAUD, 8 BITS, 1   STOP BIT,  360.00 CPS
	XX   8., 1.	;20 =  4800   BAUD, 8 BITS, 1   STOP BIT,  480.00 CPS
	XX  12., 1.	;21 =  7200   BAUD, 8 BITS, 1   STOP BIT,  720.00 CPS
	XX  16., 1.	;22 =  9600   BAUD, 8 BITS, 1   STOP BIT,  960.00 CPS
	XX  32., 1.	;23 = 19200   BAUD, 8 BITS, 1   STOP BIT, 1920.00 CPS
	XX   1., 6.	;24 =   100   BAUD, 8 BITS, 1   STOP BIT,   10.00 CPS
	.ENDM

;GENERATE MULTIPILIER TABLE

	.MACRO	XX  MUL,DIV
	.BYTE	MUL
	.ENDM

FILMUL::FILTBL

;GENERATE DIVISOR TABLE

	.MACRO	XX MUL,DIV
	.BYTE	DIV
	.ENDM

FILDIV::FILTBL
	.PAGE
	.SBTTL	TRMT   - TABLES FOR PARAMETER REPORTING ROUTINE

.IF EQ ..SAT

;THESE TABLES ARE USED BY THE RPTTYP SUBROUTINE IN TRMF WHICH IS CALLED TO 
;  REPORT ALL TERMINAL TYPE PARAMETERS

	.EVEN

;DEFINE MACRO WHICH SPECIFIES CONTENTS OF ALL TABLES

	.MACRO	TYP
	XX	.TPLCP,.RXBIT,$T4LCP
	XX	.TPALF,.RXBIT,$T4ALF
	XX	.TPEDB,.RXBIT,$T4EDB
	XX	.TPXBD,.RXBIT,$T4XBE
	XX	.TPCHS,.RXBIT,$T4HSP
	XX	.TPSHT,.RXBIT,$T4HTS
	XX	.TPSVT,.RXBIT,$T4VTS
	XX	.TPSFF,.RXBIT,$T4FFS
	XX	.TPFCR,.RXBIT,$T4NFC
	XX	.TPIHE,.RXBIT,$T4HIE
	XX	.TPOHE,.RXBIT,$T4HOE
	XX	.TPPAR,.RXPAR,SDTRS4#
	XX	.TPBSD,.RXVAL,SDTRBD#
	XX	.TPHTD,.RXVAL,SDTRHD#
	XX	.TPVTD,.RXVAL,SDTRVD#
	XX	.TPFFD,.RXVAL,SDTRFD#
	XX	.TPVFD,.RXVAL,SDTRFV#
	XX	.TPFCD,.RXVAL,SDTRCD#
	XX	.TPVCD,.RXVAL,SDTRCV#
	XX	.TPLFD,.RXVAL,SDTRLD#
	XX	.TPWID,.RXVAL,SDTRLW#
	.ENDM

;GENERATE PARAMETER AND INDEX TABLES

	.MACRO	XX  PAR,INDEX,OFFSET
	.BYTE	INDEX,PAR
	.ENDM

TPRIDX::TYP
TPRTBL==!TPRIDX+1
TPRMAX==!.-TPRIDX

;GENERATE TABLE OF DATA WORD OFFSETS AND BITS

	.MACRO	XX  PAR,INDEX,OFFSET
	.WORD	OFFSET
	.ENDM

TPROFF::TYP

;DEFINE INDEX VALUES

.RXBIT=!0
.RXBTX=!2
.RXVAL=!4
.RXPAR=!6

;GENERATE DISPATCH TABLE

DSPRPT::.WORD	RPTBIT#		;.RXBIT =  0 - SINGLE BIT
	.WORD	RPTBTX#		;.RXBTX =  2 - INVERTED SINGLE BIT
	.WORD	RPTVAL#		;.RXVAL =  4 - 8 BIT VALUE
	.WORD	RPTPAR#		;.RXPAR =  6 - PARITY CONTROL PARAMETER

.ENDC			;.IF EQ ..SAT
	.PAGE
	.SBTTL	TRMT   - TERMINAL TYPE TABLES

	.EVEN

;DEFINE MACRO WHICH DEFINES PARAMETERS FOR EACH TERMINAL TYPE
;  PARAMETERS ARE AS FOLLOWS:
;	NAME  = TERMINAL TYPE NAME
;	I     = INPUT HOLD ENABLE
;	O     = OUTPUT HOLD ENABLE
;	L     = LOCAL COPY (VALUE MAY BE "Y" OR "N" FOR YES OR NO)
;	P     = Parity handling (Value may be "N", "E", or "O" for none, even
;		  or odd)
;	K     = Input parity checking (Value may be "Y" or "N" for yes or no)
;	FCRD  = FIXED CARRIAGE RETURN DELAY FACTOR (TYMNET PARAMETER B)
;	VCRD  = VARIABLE CARRIAGE RETURN DELAY FACTOR (TYMNET PARAMETER A)
;	MCRD  = MIN/MAX CARRIAGE RETURN DELAY FACTOR (TYMNET PARAMETER F(C))
;	B     = BELT PRINTER FLAG
;	S     = SELECTRIC (2741) TERMINAL
;	LFD   = LINE FEED DELAY FACTOR
;	A     = AUTO-LINE FEED (VALUE MAY BE "Y" OR "N" FOR YES OR NO)
;	VTD   = VERTICAL TAB DELAY FACTOR
;	V     = "S" IF VERTICAL TAB IS SIMULATED, "R" IF REAL
;	FFFD  = FIXED FORM FEED DELAY FACTOR
;	VFFD  = VARIABLE FORM FEED DELAY FACTOR
;	F     = "S" IF FORM FEED IS SIMULATED, "R" IF REAL
;	HTD   = HORIZONTAL TAB DELAY FACTOR
;	H     = "S" IF HORIZONTAL TAB IS SIMULATED, "R" IF REAL
;	BSD   = BACKSPACE DELAY FACTOR
;	WIDTH = LINE WIDTH
;	C     = FREE CARRIAGE RETURN DISABLE (VALUE MAY BE "Y" OR "N" FOR YES
;		  OR NO)
;	DL    = DELETE ECHO MODE - VALUE MAY BE AS FOLLOWS:
;		  SL = ECHO DELETED CHARACTERS BETWEEN BACKSLASH CHARACTERS
;		  BS = BACKSPACE ONCE FOR EACH DELETED CHARACTER
;		  XB = OUTPUT "BACKSPACE-SPACE-BACKSPACE" STRING FOR EACH
;			 DELETED CHARACTER

	.MACRO	TYPE
;	TT NAME  ,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,A,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WIDTH,C,DL
	TT CRT   ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT VT52  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,R, 0.,  80.,N,XB
	TT TTY   ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 2.,S,  2.,  1.,S, 2.,S, 0.,  72.,N,SL
	TT LA36  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0., 132.,N,SL
	TT LA180 ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N,10.,R, 25.,  0.,R, 0.,S, 0., 132.,N,SL
.IF NE ..CAS	;--PIR2009
	TT CRTA  ,N,Y,N,E,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
.IFF
	TT CRTA  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
.ENDC
	TT TRMB  ,N,Y,N,N,N,  0.,  6.,  2.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  72.,N,SL
	TT TRMC  ,N,Y,N,N,N,  0.,  4.,  4.,N,N,19.,N, 0.,S,  0.,  0.,S, 0.,S, 0., 120.,N,SL
;	TT TRMD IS THE SAME AS TTY ABOVE
	TT TRME  ,N,Y,N,N,N,  6.,  4.,  7.,N,N, 1.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  72.,N,SL
;	TT TRMF IS A DUAL SPEED SYNER-DATA BETA TERMINAL
	TT TRMG  ,N,Y,N,N,N,  5.,  3., 14.,Y,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0., 120.,N,SL
	TT TRGE  ,N,Y,N,E,N,  5.,  3., 14.,Y,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0., 120.,N,SL
	TT TRMI  ,N,Y,N,N,N, 12.,  1., 14.,N,N, 7.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  72.,N,SL
	TT TRIE  ,N,Y,N,E,N, 12.,  1., 14.,N,N, 7.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  72.,N,SL
	TT TRMJ  ,N,Y,N,E,N,  0.,  6.,  2.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  72.,N,SL
	TT TRMY  ,N,Y,Y,N,N,  0.,  0.,  0.,Y,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  72.,N,SL
	TT SEL   ,N,Y,Y,E,N, 12.,  2., 50.,N,Y, 8.,Y, 0.,S,  0.,  0.,S, 8.,R,2., 132.,N,SL
	TT CRTB  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT CRTP  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
;+-KS THE FOLLOWING TERMINAL TYPES MAY CHANGE
	TT ACS   ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT LA120 ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT 2780  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT 3270  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT AUDIO ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT BAUD  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	TT AUX   ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
;--KS
	TT CRTO  ,N,Y,N,N,N,  0.,  0.,  0.,N,N, 0.,N, 0.,S,  0.,  0.,S, 0.,S, 0.,  80.,N,XB
	.ENDM

;GENERATE FIRST HALF OF TERMINAL TYPE NAME TABLE

	.MACRO	TT  NAME,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,ALF,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WID,C,DL
.IF NE .-TTPNM1-<T.'NAME*2>
	.ERROR ;TERMINAL TYPE TABLES OUT OF ORDER!
.ENDC
	.WR50	1,NAME
	.ENDM

TTPNM1::TYPE
MAXTYP==!<.-TTPNM1-2>/2

;GENERATE SECOND HALF OF TERMINAL TYPE NAME TABLE

	.MACRO	TT  NAME,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,ALF,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WID,C,DL
	.WR50	4,NAME
	.ENDM

TTPNM2::TYPE

;GENERATE CARRIAGE RETURN DELAY TABLE

	.MACRO	TT  NAME,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,ALF,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WID,C,DL
	.BYTE	FCRD,VCRD
	.ENDM

TTPFCR:	TYPE
TTPVCR=TTPFCR+1

;GENERATE LINE FEED AND VERTICAL TAB DELAY TABLES

	.MACRO	TT  NAME,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,ALF,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WID,C,DL
	.BYTE	LFD,VTD
	.ENDM

TTPLFD:	TYPE
TTPVTD=TTPLFD+1

;Generate fixed form feed delay and backspace delay tables

	.MACRO	TT  NAME,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,ALF,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WID,C,DL
	.BYTE	FFFD,BSD
	.ENDM

TTPFFF:	TYPE
TTPBSD=TTPFFF+1

;Generate variable form feed delay and line width tables

.IF EQ ..SAT
	.MACRO	TT  NAME,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,ALF,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WID,C,DL
	.BYTE	VFFD,WID
	.ENDM

TTPVFF:	TYPE
TTPWID==TTPVFF+1

.ENDC
;GENERATE HORIZONTAL TAB DELAY AND MIN. CR DELAY TABLES

	.MACRO	TT  NAME,I,O,L,P,K,FCRD,VCRD,MCRD,B,S,LFD,ALF,VTD,V,FFFD,VFFD,F,HTD,H,BSD,WID,C,DL
	.BYTE	HTD,MCRD
	.ENDM

TTPHTD:	TYPE
TTPMCR=TTPHTD+1

;GENERATE STATUS BIT TABLE

	.MACRO	BIT  NAME,P,X,XXX
$X=!-1
.IF IDN <X><Y>
  $X=!0
.ENDC
.IF IDN <X><N>
  $X=!1
.ENDC
.IF LT $X
	.ERROR ;ILLEGAL VALUE "X" FOR PARAMETER P FOR TERMINAL TYPE NAME
.IFF
  .IF EQ $X
    $V=!$V!$T4'XXX
  .ENDC
.ENDC
	.ENDM

	.MACRO	BRS  NAME,P,X,XXX
$X=!-1
.IF IDN <X><R>
  $X=!0
.ENDC
.IF IDN <X><S>
  $X=!1
.ENDC
.IF LT $X
	.ERROR ;ILLEGAL VALUE "X" FOR PARAMETER P FOR TERMINAL TYPE NAME
.IFF
  .IF NE $X
    $V=$V!$T4'XXX
  .ENDC
.ENDC
	.ENDM

	.MACRO TT NAME,.I,.O,.L,.P,.K,FCRD,VCRD,MCRD,.B,.S,LFD,.ALF,VTD,.V,FFFD,VFFD,.F,HTD,.H,BSD,WID,.C,.DL
$V=!0
	BRS	NAME,V,.V,VTS
	BRS	NAME,F,.F,FFS
	BRS	NAME,H,.H,HTS
	BIT	NAME,I,.I,HIE
	BIT	NAME,O,.O,HOE
	BIT	NAME,ALF,.ALF,ALF
	BIT	NAME,C,.C,NFC
	BIT	NAME,B,.B,BLT
	BIT	NAME,S,.S,SEL
	BIT	NAME,L,.L,LCP
	BIT	NAME,K,.K,CHK
$X=-1
.IF IDN <.DL><SL>
  $X=!0
.ENDC
.IF IDN <.DL><BS>
  $X=!0
  $V=$V!$T4EDB
.ENDC
.IF IDN <.DL><XB>
  $X=!0
  $V=!$V!$T4EDB!$T4XBE
.ENDC
.IF LT $X
	.ERROR	;Illegal value for parameter DL for terminal type NAME
.ENDC

$X=!-1
.IF IDN <.P><N>
  $X=!0
.ENDC
.IF IDN <.P><E>
  $X=!0
  $V=!$V!$T4PAR
.ENDC
.IF IDN <.P><O>
  $X=!0
  $V=!$V!$T4PAR!$T4ODD
.ENDC
.IF LT $X
	.ERROR	;Illegal value for parameter P for terminal type NAME
.ENDC

	.WORD	$V
	.ENDM

TTPBTS::TYPE

;POINTER TABLE USED WHEN SETTING THE TERMINAL TYPE - WARNING *** THE ORDER
;  OF THIS TABLE MUST MATCH THE ORDER OF THE CORRESPONDING ENTRIES IN THE
;  TERMINAL SDB!!!!

TYPPNT::.WORD	TTPFCR		;FIXED CARRIAGE RETURN DELAY FACTOR
	.WORD	TTPVCR		;VARIABLE CARRIAGE RETURN DELAY FACTOR
	.WORD	TTPMCR		;MIN/MAX CARRIAGE RETURN DELAY FACTOR
	.WORD	TTPHTD		;HORIZONTAL TAB DELAY FACTOR
	.WORD	TTPBSD		;BACKSPACE DELAY FACTOR
	.WORD	TTPLFD		;LINE FEED DELAY FACTOR
	.WORD	TTPVTD		;VERTICAL TAB DELAY FACTOR
	.WORD	TTPFFF		;FIXED FORM FEED DELAY FACTOR
.IF EQ ..SAT
	.WORD	TTPVFF		;VARIABLE FORM FEED DELAY FACTOR
	.WORD	TTPWID		;LINE WIDTH
.ENDC
TYPSIZ==!<.-TYPPNT>/2
	.PAGE
	.SBTTL	TRMT   - TERMINAL PROFILE TABLES

.IF EQ ..SAT

;DEFINE MACRO WHICH DEFINES PARAMETERS FOR EACH TERMINAL PROFILE
;  PARAMETERS ARE AS FOLLOWS:
;	NAME  = TERMINAL PROFILE NAME
;	C     = ESCAPE TO COMMAND MODE (VALUES MAY BE "Y" OR "N" FOR YES OR NO)
;	DFS   = DATA FORWARDING SIGNAL - VALUE MAY BE
;		  000 = NONE
;		  001 = CARRIAGE RETURN ONLY
;		  002 = ALL CONTROL CHARACTERS AND DEL
;		  004 = RSX BREAK SET
;		  010 = TECO BREAK SET
;		  020 = RSTS BREAK SET
;		  040 = TOPS-20 BREAK SET
;		  100 = TOPS-10 BREAK SET
;		  200 = ANY CHARACTER
;	V     = IDLE TIMER VALUE
;	X     = ACCEPT OUTPUT HOLD CHARACTERS AS INPUT WHEN OUTPUT HOLD IS
;		  IS ENABLED ACCORDING TO OUTPUT HOLD STATE (VALUE MAY BE
;		  "Y" OR "N" FOR YES OR NO)
;	S     = SERVICE SIGNALS CONTROL (VALUE MAY BE "Y" TO DISPLAY SERVICE
;			SIGNAL OR "N" TO SUPPRESS SERVICE SIGNAL)
;	POB    = PROCEDURES ON BREAK ON LINE - VALUE MAY BE AS FOLLOWS:
;		  000 = NO ACTION
;		  001 = SEND AN INTERRUPT PACKET
;		  002 = RESET 
;		  004 = SEND "INDICATION OF BREAK MESSAGE"
;		  010 = TREAT AS COMMAND INTERRUPT
;		  020 = SET SUPPRESS OUTPUT
;		LEGAL COMBINATIONS ARE:  000,001,002,004,010,025
;	LFI   = L.F. AND C.R. INSERSION - VALUE MAY BE AS FOLLOWS:
;		  000 = NO SPECIAL HANDLING
;		  001 = INSERT L.F. AFTER C.R. FROM HOST
;		  002 = SEND L.F. TO HOST AFTER C.R. FROM TERMINAL
;		  004 = ECHO L.F. AFTER C.R. FROM TERMINAL
;		  010 = INSERT L.F. AFTER C.R. FROM HOST UNLESS NEXT CHARACTER
;			  IS L.F.
;		  020 = INSERT C.R. AFTER L.F. FROM HOST
;		  040 = SEND C.R. TO HOST AFTER L.F. FROM TERMINAL
;		  100 = ECHO C.R. AFTER L.F. FROM TERMINAL
;	I     = LOWER CASE INPUT TRANSLATION - "Y" MEANS ACCEPT LOWER CASE
;		  INPUT, "N" MEANS TRANSLATION TO UPPER CASE
;	O     = LOWER CASE OUTPUT TRANSLATION - "Y" MEANS OUTPUT LOWER CASE
;		  CHARACTERS, "N" MEANS TRANSLATE TO UPPER CASE FIRST
;	N     = ECHO CONTROL CHARACTER AS ^X (VALUE MAY BE "Y" OR "N" FOR
;		  YES OR NO)
;	D     = ECHO ESC AS "$" (VALUE MAY BE "Y" OR "N" FOR YES OR NO)
;	A     = ENABLE ALT-MOD CONVERSION TO ESC (VALUE MAY BE "Y" OR "N"
;		  FOR YES OR NO)
;	L     = SUPPRESS FREE CR/LF INSERTIONUE MAY BE "Y" OR "N" FOR YES
;		  OR NO)
;	T     = ECHO HORIZONTAL TAB - ONLY MEANINGFUL IF DOING DEFERED ECHOING
;		  (VALUE MAY BE "Y" OR "N" FOR YES OR NO)
;	DEL   = CHARACTER DELETE CHARACTER
;	LDL   = LINE DELETE CHARACTER
;	OSP   = OUTPUT SUPPRESS CHARACTER
;	RET   = LINE RETYPE CHARACTER
;	SRC   = Status request character
;	HRD   = HARD INTERRUPT CHARACTER
;	SFT   = SOFT INTERRUPT CHARACTER
;	CMD   = COMMAND INTERRUPT CHARACTER
;	E     = LINE EDITING - "Y" MEANS LINE EDITING ENABLED; "N" MEANS
;		LINE EDITING DISABLED.

	.MACRO	PROFIL
;TP NAME  ,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
 TP TYMSHR,Y,200,0,Y,Y,004,004,Y,Y,N,N,N,Y,N,  0,  0,  0,  0,  0,  0,  0,  0,N
.IF EQ	..SAT
 TP T10   ,Y,100,0,N,Y,000,006,Y,Y,Y,Y,N,N,N,DEL,NAK, SI,DC2,DC4,ETX,ETX,DLE,N
 TP T20   ,Y,040,0,N,Y,000,006,Y,Y,Y,Y,N,N,N,DEL,NAK, SI,DC2,DC4,ETX,ETX,DLE,N
 TP RSX   ,Y,004,0,N,Y,000,000,Y,Y,N,N,N,N,N,DEL,NAK, SI,DC2,  0,ETX,  0,DLE,Y
;TP CANSIM,N,000,0,N,Y,000,000,N,N,N,N,N,N,N,  0,  0,  0,  0,  0,  0,  0,  0,N
 TP SIMTYM,Y,200,0,Y,Y,000,004,Y,Y,N,N,N,n,N,DEL,CAN,  0,ENQ,  0,  0,  0,DLE,N
 TP INTTRN,N,000,0,N,Y,000,000,N,N,N,N,N,N,N,  0,  0,  0,  0,  0,  0,  0,  0,N
 TP CANDFT,N,000,0,N,Y,000,000,N,N,N,N,N,N,N,  0,  0,  0,  0,  0,  0,  0,  0,N
 TP RSTS  ,Y,020,0,N,Y,000,106,Y,Y,Y,Y,N,N,N,DEL,NAK, SI,DC2,DC4,ETX,SUB,DLE,Y
 TP INTSIM,N,000,0,N,Y,000,000,N,N,N,N,N,N,N,  0,  0,  0,  0,  0,  0,  0,  0,N
 TP X25   ,N,001,0,N,Y,000,000,Y,Y,N,N,N,N,N,  0,  0,  0,  0,  0,  0,  0,  0,N
;---us701, ATCX25, x28 profile for CMDX28 and LKEPKT
 TP X28   ,N,001,0,N,Y,000,000,Y,Y,N,N,N,N,N,  0,  0,  0,  0,  0,  0,  0,  0,N
.ENDC
	.ENDM

;GENERATE FIRST HALF OF TERMINAL PROFILE NAME TABLE

.MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
.IF NE .-TPFNM1-<P.'NAME*2>
	.ERROR ;TERMINAL PROFILE TABLES OUT OF ORDER!
.ENDC
	.WR50	1,NAME
	.ENDM

TPFNM1::PROFIL
MAXPRF==!<.-TPFNM1-2>/2

;GENERATE SECOND HALF OF TERMINAL PROFILE NAME TABLE

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.WR50	4,NAME
	.ENDM

TPFNM2::PROFIL

;GENERATE DFS AND V (IDLE TIMER VALUE) TABLES

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.BYTE	DFS,V
	.ENDM

TPFDFS::PROFIL
TPFIDL=TPFDFS+1

;GENERATE POB AND LFI TABLES

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.BYTE	LFI,POB
	.ENDM

TPFLFH::PROFIL
TPFPOB=TPFLFH+1

;GENERATE DEL AND LDL TABLES

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.BYTE	DEL,LDL
	.ENDM

TPFDEL:	PROFIL
TPFLDL=TPFDEL+1

;GENERATE OSP AND RET TABLES

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.BYTE	OSP,RET
	.ENDM

TPFOSP:	PROFIL
TPFRET=TPFOSP+1

;GENERATE HRD AND SFT TABLES

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.BYTE	HRD,SFT
	.ENDM

TPFHRD:	PROFIL
TPFSFT=TPFHRD+1

;GENERATE CMD TABLE

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.BYTE	CMD,0
	.ENDM

TPFCMD::PROFIL

;Generate status request character table

 .MACRO TP NAME,C,DFS,V,X,S,POB,LFI,I,O,N,D,A,L,T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,E
	.BYTE	SRC,0
	.ENDM

TPFSRC:	PROFIL

;GENERATE BIT TABLE

	.MACRO	BIT  NAME,P,X,XXX
$X=!-1
.IF IDN <X><Y>
  $X=!0
.ENDC
.IF IDN <X><N>
  $X=!1
.ENDC
.IF LT $X
	.ERROR ;ILLEGAL VALUE "X" FOR PARAMETER P FOR TERMINAL PROFILE NAME
.IFF
  .IF EQ $X
    $V=!$V!$T5'XXX
  .ENDC
.ENDC
	.ENDM

 .MACRO TP NAME,.C,DFS,V,.X,.S,POB,LFI,.I,.O,.N,.D,.A,.L,.T,DEL,LDL,OSP,RET,SRC,HRD,SFT,CMD,.E
$V=!$T5BDE
;	BIT	NAME,C,.C,ESC
	BIT	NAME,X,.X,AOH
	BIT	NAME,S,.S,NMC
	BIT	NAME,I,.I,LCI
	BIT	NAME,O,.O,LCO
	BIT	NAME,N,.N,ECC
	BIT	NAME,D,.D,EED
	BIT	NAME,A,.A,HSP
	BIT	NAME,T,.T,EHT
	BIT	NAME,L,.L,XFC
	BIT	NAME,E,.E,EDT
	.WORD	$V
	.ENDM

TPFBTS::PROFIL

;TABLE OF POINTERS TO TABLES USED TO SET UP A TERMINAL PROFILE
;  WARNING *** THE ORDER OF THE ENTRIES IN THIS TABLE MUST MATCH THE ORDER
;  OF THE CORRESPONDING ENTRIES IN THE TERMINAL SDB!!!!!

PRFPNT::.WORD	TPFDFS		;DATA FORWARDING SIGNAL (BREAK SET)
	.WORD	TPFIDL		;IDLE TIMER VALUE
	.WORD	TPFPOB		;PROCEEDURE ON BREAK
	.WORD	TPFDEL		;DELETE CHARACTER
	.WORD	TPFLDL		;LINE DELETE CHARACTER
	.WORD	TPFOSP		;OUTPUT SUPPRESS CHARACTER
	.WORD	TPFRET		;LINE RETYPE CHARACTER
	.WORD	TPFHRD		;HARD INTERRUPT CHARACTER
	.WORD	TPFSFT		;SOFT INTERRUPT CHARACTER
	.WORD	TPFCMD		;Command interrupt character
	.WORD	TPFSRC		;Status request character
PRFSIZ==!<.-PRFPNT>/2

.ENDC			;.IF EQ ..SAT

	.END
 [DvW3