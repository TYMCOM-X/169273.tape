	.TITLE	X25Q

	XLPAR

.SBTTL  X.29 AND X.30 FUNCTIONS AND PARAMETERS

$X1UNO=!100000		;UNNUMBERED PACKET OUTSTANDING (I.E. UNACKED)
$X1JTX=!040000
; $X1JFX=!020000

;DEFINE FUNCTION VALUES FOR FIRST BYTE OF QUALIFIED DATA PACKET

.XMPIN=!0		;PARAMETER INDICATION
.XMICL=!1		;INVITATION TO CLEAR
.XMSET=!2		;SET PARAMETERS
.XMBRK=!3		;INDICATION OF BREAK
.XMRED=!4		;READ PARAMETERS
.XMER5=!5		;ERROR PAD MESSAGE
.XMSTR=!6		;SET AND READ PARAMETES

;DEFINE INTERNATIONAL TERMINAL PARAMETERS

.IPNAT=!0		;NATIONAL PARAMETER MARKER
.IPPRC=!1		;PAD RECALL CHARACTER
.IPECH=!2		;ECHO CONTROL
.IPDFS=!3		;DATA FORWARDING CONTROL
.IPIDL=!4		;IDLE TIMER DELAY
.IPAUX=!5		;AUXILIARY DEVICE CONTROL
.IPNMC=!6		;NETWORK MESSAGES CONTROL
.IPBRK=!7		;PROCEDURE ON BREAK
.IPDSC=!8.		;DISCARD OUTPUT
.IPCRD=!9.		;CARIAGE RETURN PADDING
.IPFLD=!10.		;LINE FOLDING
.IPBRT=!11.		;BAUD RATE
.IPFLW=!12.		;FLOW CONTROL
.IPLFI=!13.		;LINE FEED INSERTION
.IPLFD=!14.		;LINE FEED DELAY
.IPEDT=!15.		;EDITING IN DATA TRANSFER MODE
.IPDEL=!16.		;CHARACTER DELETE CODE
.IPLDC=!17.		;LINE DELETE CODE
.IPLRC=!18.		;LINE RETYPE CODE


;DEFINE DATAPAC NATIONAL TERMINAL PARAMETERS

.DNDF1=!121		;1ST ADDITIONAL DATA FORWARDING CHARACTER
.DNDF2=!122		;2ND ADDITIONAL DATA FORWARDING CHARACTER
.DNPAR=!123		;PARITY TREATMENT CONTROL
.DNOPT=!125		;OUTPUT PENDING TIMER
.DNLFI=!126		;LINE FEED INSERTION

;DEFINE TELENET NATIONAL TERMINAL PARAMETERS

.TNNAT=!0		;NATIONAL OPTIONS MARKER
.TNLFI=!1		;LINEFEED INSERTION
.TNNMD=!2		;NETWORK MESSAGE DISPLAY (SAME AS .IPSNM = 6)
.TNECH=!3		;ECHO CONTROL (SAME AS .IPECH = 2)
.TNEMK=!4		;ECHO MASK
.TNTMK=!5		;TRANSMIT MASK (SAME AS .IPDFS = 3)
.TNBSZ=!6		;BUFFER SIZE
.TNCM1=!7		;COMMAND MASK - 1
.TNCM2=!10		;COMMAND MASK - 2
.TNCR1=!11		;CARRIAGE RETURN PAD - 1 (SAME AS .IPCRD = 11)
.TNLFP=!12		;LINEFEED PAD
.TNHTP=!13		;HORIZONTAL TAB PAD
.TNLWD=!14		;LINE WIDTH (SAME AS .IPFLD = 12)
.TNPLN=!15		;PAGE LENGTH
.TNLFD=!16		;LINE FOLDING
.TNIOB=!20		;INTERRUPT ON BREAK
.TNBKC=!21		;BREAK CODE
.TNNVT=!22		;NVT OPTIONS
.TNIKS=!23		;2741 INITIAL KEYBOARD STATE
.TNHFD=!24		;HALF/FULL DUPLEX
.TNRCC=!25		;REAL CHARACTER CODE
.TNPRT=!26		;PRINTER STYLE
.TNTRM=!27		;TERMINAL TYPE
.TNPRM=!30		;PERMANENT TERMINAL
.TNMOA=!31		;MANUAL OR AUTOMATIC
.TNRAT=!32		;RATE (SAME AS .IPBRT = 13)
.TNDEL=!33		;DELETE CHARACTER
.TNCAN=!34		;CANCEL CHARACTER
.TNDSP=!35		;DISPLAY CHARACTER
.TNABT=!36		;ABORT OUTPUT CHARACTER
.TNIPC=!37		;INTERRUPT PROCESS CHARACTER
.TNAHU=!40		;AUTOMATIC HANG-UP
.TNFLS=!41		;FLUSH OUTPUT (SAME AS .IPDSC = 10)
.TNTOT=!42		;TRANSMIT ON TIMERS
.TNIDT=!43		;IDLE TIMER (SAME AS .IPIDL = 4)
.TNINT=!44		;INTERVAL TIMER
.TNNUD=!45		;NETWORK USAGE DISPLAY
.TNCR2=!46		;CARRIAGE RETURN PAD - 2
.TNPOP=!47		;PADDING OPTIONS
.TNIOB=!50		;INSERT ON BREAK
.TNCTF=!51		;DCE-DTE FLOW CONTROL (SAME AS .IPAUX = 5)
.TNCTN=!52		;DCE-DTE XON CHARACTER
.TNCTO=!53		;DCE-DTE XOFF CHARACTER
.TNGBK=!54		;GENERATE BREAK
.TNAPP=!55		;APP ON BREAK
.TNIUO=!56		;INPUT UNLOCK OPTION
.TNIUT=!57		;2741 INPUT UNLOCK TIMER
.TNIUC=!60		;2741 INPUT UNLOCK CHARACTER
.TNOL1=!61		;2741 OUTPUT LOCK OPTION - 1
.TNOLT=!62		;2741 OUTPUT LOCK TIMER
.TNOL2=!63		;2741 OUTPUT LOCK OPTION - 2
.TNBKO=!65		;BREAK OPTIONS
.TNTCF=!66		;DTE-DCE FLOW CONTROL (SAME AS .IPFLW = 14)
.TNTCN=!67		;DTE-DCE XON CHARACTER
.TNTCO=!70		;DTE-DCE XOFF CHARACTER
.TNCMD=!71		;CONNECTION MODE
.TNECM=!72		;ESCAPE TO COMMAND MODE (SAME AS .IPEDT = 1)
.TNFOB=!73		;FLUSH OUTPUT ON BREAK
	.PAGE
.SBTTL DATA PACKET WITH Q-BIT PROCESSING (X.29 MESSAGE)

;DEFINE OFFSETS IN THE OUTPUT BUFFER

S.IN=!0			;INPUT POINTER
S.OP=!2			;OUTPUT POINTER
S.OC=!4			;OUTPUT COUNT
S.TB=!6			;CONVERSION TABLE
S.PR=!12		;CURRENT PARAMETER
S.BF=!14		;START OF OUTPUT BUFFER DATA AREA

	CODE
X25QAL::MOVB	PKDATA(R1),R0		;GET MESSAGE TYPE
	ASL	R0			;FOR WORD INDEXING
	CMP	R0,#MSGMAX		;VALID MESSAGE?
	BHIS	BADMSG			;NO
	JMP	@MSGDSP(R0)		;YES-DISPATCH ON THE MESSAGE TYPE

;HERE WITH ILLEGAL MESSAGE

BADMSG:	
;	CJMP	X25JNK#			;GO GIVE UP THE PACKET AND CLEAN UP
	CALL	X25JNK#			;GO GIVE UP THE PACKET AND CLEAN UP
	JMP	SNDXMK#		;need an marker function pk for flow control

;MESSAGE TYPE DISPATCH TABLE

	PURE

MSGDSP:	.WORD	PARIND			;.XMPIN =  0 - PARAMETER INDICATION
	.WORD	INVCLR			;.XMICL =  1 - INVITATION TO CLEAR
	.WORD	SETPAR			;.XMSET =  2 - SET PARAMETERS
	.WORD	INDBRK			;.XMBRK =  3 - INDICATEION OF BREAK
	.WORD	REDPAR			;.XMRED =  4 - READ PARAMETERS
	.WORD	BADMSG			;.XMER5 =  5 - ERROR
	.WORD	SETRED			;.XMSTR =  6 - SET AND READ PARAMETERS
	.WORD	BADMSG			;.XMER7 =  7 - ERROR
; Add here for reselection PAD message
MSGMAX=!.-MSGDSP

	CODE

;HERE FOR MESSAGE = .XMPIN - PARAMETER INDICATION

PARIND:	MOV	#.FNRDP,R0		;GET NEXILIS FUNCTION VALUE
	BR	PARCOM			;CONTINUE

;HERE FOR MESSAGE = .XMSET - SET PARAMETERS

SETPAR:	MOV	#.FNSDP,R0		;GET NEXILIS FUNCTION VALUE
	BR	PARCOM			;CONTINUE

;HERE FOR MESSAGE = .XMRED - READ PARAMETERS

REDPAR:	MOV	#.FNADP,R0		;GET NEXILIS FUNCTION VALUE
	BR	PARCOM

;HERE FOR MESSAGE = .XMSTR - SET AND READ PARAMETERS

SETRED:	MOV	#.FNCDP,R0		;GET NEXILIS FUNCTION VALUE
PARCOM:	MOVB	R0,S#+S.BF		;STORE FUNCTION
	MOV	#INTTBL,S#+S.TB		;INITIAL TABLE IS FOR INTERNATIONAL
					;  PARAMETERS
	MOV	#PKDATA+1,R2		;MAKE INPUT POINTER
	DECB	PKCNT(R1)		;FIX UP THE COUNT
	ADD	R1,R2
	MOV	R2,S#+S.IN		;STORE INPUT POINTER
	MOV	#S#+S.BF+1,S#+S.OP	;STORE OUTPUT POINTER
	CLR	S#+S.OC			;CLEAR OUTPUT COUNT
PARLOP:	CALL	NXTPRM			;GET PARAMETER
	BCC	2$			;GO ON IF MORE
;	JMP	PARDON			;IF FINISHED
	CALL	PARDON		;If finished
	JMP	SNDXMK#		;Send an X.25 marker function pk

2$:	ASL	R3			;FOR WORD INDEXING
	MOV	S#+S.TB,R2		;GET CURRENT TABLE
	CMP	R3,(R2)+		;VALID PARAMETER IN THIS TABLE?
	BHIS	PARLOP			;NO
	CMP	R3,(R2)			;MAYBE
	BLO	PARLOP			;NO
	SUB	(R2)+,R3		;YES-REMOVE POSSIBLE OFFSET
	ADD	R2,R3			;INDEX INTO TABLE
	MOV	(R3),R3			;GET ENTRY
	BMI	STRPAR			;CONTINUE IF THIS IS A SIMPLE ONE
	ADD	R3,PC			;COMPLEX-DISPATCH TO ROUTINE
DSPBAS:

;HERE TO CONVERT SIMPLE PARAMETER - ONLY THE PARAMETER IS CHANGED, THE VALUE
;  REMAINS THE SAME!

STRPAR:	CMP	#<PKCMAX-1>/2,S#+S.OC	;ROOM FOR ANOTHER?
	BGT	6$			;YES-GO ON
	PUSH	R0			;NO-SAVE THE NEW DATA
	PUSH	R3
	PUSHB	S#+S.BF			;AND SAVE THE FUNCTION
	PUSH	R1			;AND THE INPUT POINTERS
	PUSH	S#+S.IN
	PUSH	S#+S.TB
	PUSH	S#+S.PR
	MAKPKT	.PLSTP#			;GET A PACKET
	BCC	4$
	FSTOP	NPA			;[NO PACKETS AVAILABLE]

4$:	MOV	S#+S.OC,R3		;GET NUMBER OF PARAMETERS
	CALL	PARDON			;SEND THE PACKET
	POP	S#+S.PR
	POP	S#+S.TB			;RESTORE OUR STATE
	POP	S#+S.IN
	POP	R1
	POPB	S#+S.BF
	POP	R3
	POP	R0
	MOV	#S#+S.BF+1,S#+S.OP	;RESET OUTPUT POINTER
	CLR	S#+S.OC			;AND COUNT
6$:	MOV	#S#+S.OP,R2		;POINT TO POINTER/COUNTER PAIR
	CALL	STRPRS			;STORE THIS PARAMETER
	BR	PARLOP			;CONTINUE WITH THE PACKET

;HERE WHEN FINISHED WITH A TERMINAL PARAMETER PACKET

PARDON:	MOV	S#+S.OC,R3		;GET NUMBER OF PARAMETERS
	BNE	2$			;GO ON IF SOMETHING THERE
;	JMP	BADMSG			;IF NOTHING THERE
	JMP	X25JNK#

2$:	ASL	R3			;CHANGE TO BYTE COUNT
	INC	R3
	MOVB	R3,PKCNT(R1)		;STORE IN PACKET
	MOVB	#.PTFUN,PKTYPE(R1)	;STORE TYPE
	MOV	R1,R2			;COPY DATA INTO THE PACKET
	ADD	#PKDATA,R2
	MOV	#S#+S.BF,R0
	ASR	R3
	INC	R3
4$:	MOV	(R0)+,(R2)+
	SOB	R3,4$
SNDPKN:	INCB	SDPCNT#(SD)		;KEEP THE PACKET COUNT RIGHT
	CJMP	SNDPKT#			;AND SEND THE PACKET
	.PAGE
;CONVERSION TABLE FOR X-25 TERMINAL PARAMETERS
;  FORMAT OF TABLE:
;    FIRST WORD/	<HIGHEST LEGAL PARAMETER + 1> * 2
;    SECOND WORD/	<LOWEST LEGAL PARAMETER>
;    THIRD WORD/	FIRST PARAMETER ENTRY (FOR LOWEST PARAMETER) AS FOLLOWS:
;	IF BIT 15 IS SET, BITS 7-0 ARE NEW PARAMETER
;	IF BIT 15 IS CLEAR, BITS 14-0 ARE WORD OFFSET FROM DSPBAS TO ROUTINE

	PURE

	.MACRO	ILL
	.WORD	PARL2P-DSPBAS
	.ENDM

	.MACRO	DSP  ARG
	.WORD	ARG-DSPBAS
	.ENDM

	.MACRO	PAR  ARG
	.WORD	100000+ARG
	.ENDM

;CONVERSION TABLE FOR INTERNATIONAL PARAMETERS

INTTBL:	.WORD	MAXINT		;MAXIMUM VALUE
	.WORD	0		;MINIMUM VALUE
	DSP	NATMRK		;.IPNAT =  0 - NATIONAL PARAMETER MARKER
	PAR	.TPCIC		;.IPPRC =  1 - PAD RECALL CHARACTER
	PAR	.TPECH		;.IPECH =  2 - ECHO CONTROL
	DSP	DATFWD		;.IPDFS =  3 - DATA FORWARDING CONTROL
	PAR	.TPITD		;.IPIDL =  4 - IDLE TIMER DELAY
	PAR	.TPIHE		;.IPAUX =  5 - AUXILIARY DEVICE CONTROL
	PAR	.TPNMC		;.IPNMC =  6 - NETWORK MESSAGES CONTROL
	PAR	.TPBRK		;.IPBRK =  7 - PROCEDURE ON BREAK
;	DSP	DISCRD		;.IPDSC =  8.- DISCARD OUTPUT
	PAR	.TPSOP		;.IPDSC	=  8.- DISCARD OUTPUT
	PAR	.TPFCD		;.IPCRD =  9.- CARRIAGE RETURN PADDING
	PAR	.TPWID		;.IPFLD = 10.- LINE FOLDING
	DSP	BDRATE		;.IPBRT = 11.- BAUD RATE
	PAR	.TPOHE		;.IPFLW = 12.- FLOW CONTROL
	PAR	.TPLFI		;.IPLFI = 13.- LINEFEED INSERTION
	PAR	.TPLFD		;.IPLFD = 14.- LF DELAY
	PAR	.TPEDT		;.IPEDT = 15.- ABILITY TO EDIT
	PAR	.TPDEL		;.IPDEL = 16.- CHARACTER DELETE CODE
	PAR	.TPLDC		;.IPLDC = 17.- LINE DELETE CODE
	PAR	.TPLRC		;.IPLRC = 18.- LINE RETYPE CODE
MAXINT=!.-INTTBL-4

;CONVERSION TABLE USED FOLLOWING INVALID NATIONAL PARAMETER MARKER

BADTBL:	.WORD	2		;MAXIMUM VALUE
	.WORD	0		;MINIMUM VALUE
	DSP	NATMRK		;NATIONAL PARAMETER MARKER (ALWAYS VALID)

;CONVERSION TABLE FOR DATAPAC NATIONAL PARAMETERS

DPKTBL:	.WORD	176*2+2		;MAXIMUM VALUE
	.WORD	171*2		;MINIMUM VALUE
	PAR	.TPBC1		;.DNDF1 = 171 - 1ST ADD. DATA FORWARDING CHR
	PAR	.TPBC2		;.DNDS2 = 172 - 2ND ADD. DATA FORWARDING CHR
	DSP	PARCNT		;.DNPAR = 173 - PARITY TREATMENT CONTROL
	ILL			;	= 174 - ILLEGAL
	PAR	.TPOPT		;.DNOPT = 175 - OUTPUT PENDING TIMER
	PAR	.TPLFI		;.DNLFI = 176 - LINE FEED INSERTION

;CONVERSION TABLE FOR TELENET NATIONAL PARAMETERS

TLNTBL:	.WORD	TLNMAX		;MAXIMUM VALUE
	.WORD	0		;MINIMUM VALUE
	DSP	NATMRK		;.TNNAT =  0 - NATIONAL PARAMETER MARKER
	ILL			;.TNLFI =  1 - LINE FEED INSERTION
	PAR	.TPNMC		;.TNNMD =  2 - NETWORK MESSAGE DISPLAY
	PAR	.TPECH		;.TNECH =  3 - ECHO CONTROL
	ILL			;.TNEMK =  4 - ECHO MASK
	DSP	DATFWD		;.TNTMK =  5 - TRANSMIT MASK
	ILL			;.TNBSZ =  6 - BUFFER SIZE
	ILL			;.TNCM1 =  7 - COMMAND MASK
	ILL			;.TNCM2 = 10 - COMMAND MASK
	PAR	.TPFCD		;.TNCR1 = 11 - CARRIAGE RETURN PAD
	PAR	.TPLFD		;.TNLFP = 12 - LINEFEED PAD
	PAR	.TPHTD		;.TNHTP = 13 - HORIZONTAL TAB PAD
	PAR	.TPWID		;.TNLWD = 14 - LINE WIDTH
	PAR	.TPLEN		;.TNPLN = 15 - PAGE LENGTH
	PAR	.TPFCR		;.TNLFD = 16 - LINE FOLDING
	ILL			;	= 17 - ILLEGAL
	ILL			;.TNIOB = 20 - INTERRUPT ON BREAK
	ILL			;.TNBKC = 21 - BREAK CODE
	ILL			;.TNNVT = 22 - NVT OPTIONS
	ILL			;.TNIKS = 23 - 2741 INITIAL KEYBOARD STATE
	PAR	.TPLCP		;.TNHFD = 24 - HALF/FULL DUPLEX
	ILL			;.TNRCC = 25 - REAL CHARACTER CODE
	ILL			;.TNPRT = 26 - PRINTER STYLE
	ILL			;.TNTRM = 27 - TERMINAL TYPE
	ILL			;.TNPRM = 30 - PERMANENT TERMINAL
	ILL			;.TNMOA = 31 - MANUAL OR AUTOMATIC
	DSP	BDRATE		;.TNRAT = 32 - RATE
	PAR	.TPDEL		;.TNDEL = 33 - DELETE CHARACTER
	PAR	.TPLDC		;.TNCAN = 34 - CANCEL CHARACTER
	PAR	.TPLRC		;.TNDSP = 35 - DISPLAY CHARACTER
	PAR	.TPOSC		;.TNABT = 36 - ABORT OUTPUT CHARACTER
	PAR	.TPHIC		;.TNIPC = 37 - INTERRUPT PROCESS CHARACTER
	ILL			;.TNAHU = 40 - AUTOMATIC HANG-UP
;;	DSP	DISCRD		;.TNFLS = 41 - FLUSH OUTPUT
	PAR	.TPSOP		;.TNFLS = 41 - FLUSH OUTPUT
	ILL			;.TNTOT = 42 - TRANSMIT ON TIMERS
	PAR	.TPITD		;.TNIDT = 43 - IDLE TIMER
	ILL			;.TNINT = 44 - INTERVAL TIMER
	ILL			;.TNNUD = 45 - NETWORK USAGE DISPLAY
	ILL			;.TNCR2 = 46 - CARRIAGE RETURN PAD
	ILL			;.TNPOP = 47 - PADDING OPTIONS
	ILL			;.TNIOB = 50 - INSERT ON BREAK
	PAR	.TPIHE		;.TNCTF = 51 - DCE-DTE FLOW CONTROL
	ILL			;.TNCTN = 52 - DCE-DTE XON CHARACTER
	ILL			;.TNCTF = 53 - DCE-DTE XOFF CHARACTER
	ILL			;.TNGBK = 54 - GENERATE BREAK
	ILL			;.TNAPP = 55 - APP ON BREAK
	ILL			;.TNIUO = 56 - INPUT UNLOCK OPTION
	ILL			;.TNIUT = 57 - 2741 INPUT UNLOCK TIMER
	ILL			;.TNIUC = 60 - 2741 INPUT UNLOCK CHARACTER
	ILL			;.TNOL1 = 61 - 2741 OUTPUT LOCK OPTION
	ILL			;.TNOLT = 62 - 2741 OUTPUT LOCK TIMER
	ILL			;.TNIL2 = 63 - 2741 OUTPUT LOCK OPTION
	ILL			;	= 64 - ILLEGAL
	ILL			;.TNBKO = 65 - BREAK OPTIONS
	PAR	.TPOHE		;.TNTCF = 66 - DTE-DCE FLOW CONTROL
	ILL			;.TNTCN = 67 - DTE-DCE XON CHARACTER
	ILL			;.TNTCO = 70 - DTE-DCE XOFF CHARACTER
	ILL			;.TNCMD = 71 - CONNECTION MODE
	PAR	.TPCIC		;.TNECM = 72 - ESCAPE TO COMMAND MODE
	ILL			;.TNFOB = 73 - FLUSH OUTPUT ON BREAK
TLNMAX=!.-TLNTBL

	CODE
	.PAGE
;HERE FOR NATIONAL PARAMETER MARKER

NATMRK:	TST	R0			;DATAPAC ?
	BEQ	2$			;YES
	CMP	#41,R0			;NO-TELENET?
	BEQ	4$			;YES
	MOV	#BADTBL,R0		;NO-UNKNOWN TYPE
	BR	6$

2$:	MOV	#DPKTBL,R0		;GET ADDRESS OF DATAPAC TABLE
	BR	6$			;CONTINUE

4$:	MOV	#TLNTBL,R0		;GET ADDRESS OF TELENET TABLE
6$:	MOV	R0,S#+S.TB		;STORE TABLE ADDRESS
PARL2P:	BR	PARLOP			;THATS ALL


;-----
;HERE FOR .IPDFS - SELECTION OF DATA FORWARDING SIGNAL (BREAK SET)
;	MAPPING FROM 	X.3 VALUE 	TO	MICRONET VALUE
;			0			0 <NO BREAK CHAR.>
;			2			1 <CR>
;			255. (TYMNET EXT.)    200 ANY CHARACTER
;			OTHERS			2 (ALL CONTROL CHARS + DEL) -
;							(<HT><LF><VT><FF>)
;-----

DATFWD:	MOV	#.TPBST,R3		;GET NEXILIS PARAMETER
	TST	R0
	BEQ	STRPAR			;IF ZERO, VALUE IS SAME
	CMP	#2,R0			;CR ONLY?
	BEQ	VAL001			;YES
	CMP	#255.,R0		;BREAK ON ALL CHARS.?
	BNE	VAL002			;NO, BRANCH
	MOV	#200,R0			;
	BR	STRPAR
VAL002:	MOV	#2,R0
STRP2R:	BR	STRPAR

VAL001: DEC	R0			;SET VALUE TO 1, BREAK ON <CR> ONLY
	BR	STRPAR

;-----
;HERE FOR .IPDSC - DISCARD OUTPUT

;DISCRD:	CMPB	#.XMPIN,S#+S.BF		;FUNCTION = INDICATE?
;	BEQ	PARL2P			;YES
;	TST	R0			;NO-CLEAR?
;	BNE	4$			;NO
;	BIC	#$X1JFX,SDLES1#(SD)	;YES-CLEAR DISCARD OUTPUT FLAG
;	BR	PARL2P			;THATS ALL

;HERE TO SET DISCARD OUTPUT PARAMETER

;4$:	PUSH	#MAKEAT			;STACK REQUEST FOR AN EAT PACKET
;	BIS	#$X1JFX,SDLES1#(SD)	;INDICATE SHOULD DISCARD OUTPUT
;	BR	PARL2P			;THATS ALL

;-----
;HERE FOR .IPBRT - BAUD RATE

BDRATE:
	CMP	#MAXBRT,R0		;LEGAL VALUE?
	BLE	PARL2P			;NO
	MOVB	XNXBRT(R0),R0		;YES-GET CORRESPONDING VALUE
	MOV	#.TPRAT,R3		;GET THE PARAMETER
	BR	STRP2R			;CONTINUE

;BAUD RATE TRANSLATION TABLE - X25 TO NEXILIS

	PURE

XNXBRT:	.BYTE	R.110		; 0 = 110 BAUD
	.BYTE	R.134X		; 1 = 134.5 BAUD
	.BYTE	R.300		; 2 = 300 BAUD
	.BYTE	R.1200		; 3 = 1200 BAUD
	.BYTE	R.600		; 4 = 600 BAUD
	.BYTE	R.75		; 5 = 75 BAUD
	.BYTE	R.150		; 6 = 150 BAUD
	.BYTE	R.1800		; 7 = 1800 BAUD
	.BYTE	R.200		; 8.= 200 BAUD
	.BYTE	R.100		; 9.= 100 BAUD
	.BYTE	R.50		;10.= 50 BAUD
	.BYTE	R.75S		;11.= 75/1200 BAUD
	.BYTE	R.2400		;12.= 2400 BAUD
	.BYTE	R.4800		;13.= 4800 BAUD
	.BYTE	R.9600		;14.= 9600 BAUD
	.BYTE	R.19200		;15.= 19200 BAUD
	.BYTE	R.48K		;16.= 48000 BAUD
	.BYTE	R.56K		;17.= 56000 BAUD
	.BYTE	R.64K		;18.= 64000 BAUD

MAXBRT=!.-XNXBRT
	.EVEN

	CODE

;HERE FOR .NPPAR = 123 - PARITY CONTROL

PARCNT:	MOV	#.TPPAR,R3		;GET NEXILIS PARAMETER
	TST	R0			;ZERO?
	BEQ	STRP2R			;YES
	BR	VAL002			;NO
	.PAGE
;HERE FOR MESSAGE = .XMICL - INVITATION TO CLEAR

INVCLR:	MOV	#.PTFUN*400+1,PKCNT(R1)	;TYPE = FUNCTION, COUNT = 0
	MOVB	#.FNRQD,PKDATA(R1)	;FUNCTION = REQUEST DISCONNECT
;	BR	SNDPKN			;THATS ALL
	BR	INDBR1		;Send it and append an marker function pk

;HERE AFTER PROCESSING ALL PARAMETERS TO SEND AN EAT PACKET
;
;MAKEAT:	MAKPKT	.PLSTP#			;GET A PACKET
;	BCC	2$			;GO ON IF GOT ONE
;	RETURN				;OTHERWISE FORGET IT
;
;2$:	MOV	#<.PTEAT*400+2>,PKCNT(R1);TYPE = EAT, COUNT = 2
;	CLR	PKDATA(R1)		;FUNCTION = MARKER, MARKER = NULL
;	BR	SNDPKN			;GO SEND IT AND RETURN

;-----
; HERE FOR MESSAGE = .XMBRK - INDICATION OF BREAK
;-----
INDBRK:
	MOVB	#.PTFUN,PKTYPE(R1)	;MAKE IT A FUNCTION PACKET
	MOVB	#.FNBRK,PKDATA(R1)	;INDICATION OF BREAK
;	BR	SNDPKN
INDBR1:	CALL	SNDPKN			;Send  pk into node
	CJMP	SNDXMK			;Send an X.25 marker function pk
	.PAGE
.SBTTL MICRONET FUNCTION PACKET TO X.25/X.29 PACKET CONVERSION
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;OUTPUT TO X-25 LINK -- EAT PACKET
;
;EATX25::CMPB	#377,PKDATA(R1)		;SPECIAL PACKET?
;	BEQ	UNEAT0			;YES-GO HANDLE IT
;	MOVB	#377,PKDATA(R1)		;NO-MAKE IT SPECIAL
;	CALL	PKTAGN#			;PUT IT BACK ON OUR DST LIST
;	MAKPKT	.PLSTP#			;GET ANOTHER PACKET
;	BCC	2$			;GO ON IF GOT ONE
;	JMP	JK1X25#			;OTHERWISE DO THE BEST WE CAN!
;
;2$:	MOV	#.IPDSC*400+.XMSET,PKDATA(R1);FUNCTION = SET PARAMETER,
;					     ;  PARAMETER = DISCARD OUTPUT
;	MOVB	#1,PKDATA+2(R1)		;VALUE = 1
;	BR	UNEAT2			;CONTINUE
;
;HERE FOR SPECIAL EAT PACKET
;
;UNEAT0:MOV	#.IPDSC*400+.XMSET,PKDATA(R1);FUNCTION = SET PARAMETER,
;					     ;  PARAMETER = DISCARD OUTPUT
;	CLRB	PKDATA+2(R1)		;VALUE = 0
;UNEAT2:MOVB	#3,PKCNT(R1)		;BYTE COUNT = 3
;	CJMP	TPRDN8			;SEND THIS PACKET AND RETURN
;

;OUTPUT TO X-25 LINK -- FUNCTION OR INTERRUPT PACKET
EATX25::
INTX25::
FNCX25::MOVB	PKDATA(R1),R0		;GET FUNCTION
	ASL	R0			;FOR WORD INDEXING
	CMP	R0,#FUNMAX		;LEGAL FUNCTION?
	BHIS	FUNIGN			;NO
	JMP	@FUNDSP(R0)		;YES-DISPATCH ON THE FUNCTION TYPE

;HERE TO IGNORE A FUNCTION PACKET

FUNIGN:
	CMPB	#.PTINT,PKTYPE(R1)	;IS THE PACKET AN INTERRUPT PACKET ?
	BNE	10$			;NO, BRANCH
	BIC	#$X1UNO,SDLES1#(SD)	;YES, THE UNNUMBERED OUTSTANDING FLAG
					;SET NEAR (LKEPKT)LEPOK1 MUST BE RESET
10$:
	CJMP	JNKX25#			;GO JUNK PACKET AND CLEAN UP

;FUNCTION TYPE DISPATCH TABLE
	PURE

FUNDSP:	.WORD	FUNIGN		;.FNMRK =  0 - NULL
	.WORD	FUNOPS		;.FNHIN =  1 - HARD INTERRUPT
	.WORD	FUNIGN		;.FNSIN =  2 - SOFT INTERRUPT
	.WORD	FUNOSA		;.FNOSA =  3 - OUTPUT SUPPRESS ACK
	.WORD	FUNOPS		;.FNOPS =  4 - OUTPUT SUPPRESS
	.WORD	FUNIGN		;.FNOPH =  5 - OUTPUT HOLD
	.WORD	FUNIGN		;.FNALW =  6 - OUTPUT ALLOW
	.WORD	FUNCDP		;.FNCDP =  7 - CHANGE DEVICE PARAMETERS
	.WORD	FUNSDP		;.FNSDP = 10 - SET DEVICE PARAMETERS
	.WORD	FUNADP		;.FNADP = 11 - ACCESS DEVICE PARAMETERS
	.WORD	FUNRDP		;.FNRDP = 12 - REPLY WITH DEVICE PARAMETERS
	.WORD	FUNIGN		;.FNDCN = 13 - DEVICE CONTROL
	.WORD	FUNIGN		;.FNDST = 14 - DEVICE STATUS
	.WORD	FUNIGN		;.FNADS = 15 - ACCESS DEVICE STATUS
	.WORD	FUNIGN		;.FNCON = 16 - CONTINUE OUTPUT
	.WORD	FUNIGN		;.FNFHI = 17 - FORCE HARD INTERRUPT
	.WORD	FUNIGN		;.FNDEM = 20 - DEFERRED ECHO MODE CONTROL
	.WORD	FUNITD		;.FNRQD = 21 - INVITATION TO DISCONNECT
	.WORD	FUNIGN		;.FNRQC = 22 - REQUEST BUFFER CLEAR
	.WORD	FUNREQ		;.FNREQ = 23 - REQUEST (YELLOW BALL)
	.WORD	FUNIGN		;.FNRSP = RESPONSE
	.WORD	FUNIGN		;.FNGRN = 25 - GREEN BALL
	.WORD	FUNIGN		;.FNRED = 26 - RED BALL
	.WORD	FUNIGN		;.FNLST	= 27 - BLACK BALL
	.WORD	FUNIGN		;.FNLST = 30 - GRAY BALL
	.WORD	FUNBRK		;.FNBRK = 31 - INDICATION OF BREAK

	.WORD	FUNIGN		;.FNHNG=!32  HANG UP REQUEST
	.WORD	FUNIGN		;.FNXHG=!33  HARD HANG UP REQUEST
	.WORD	FUNIGN		;.FNRCC=!34  Reconnect control
	.WORD	FUNIGN		;.FNXGB=!35  Special character gobbler for TYMNET
	.WORD	FUNIGN		;.FNSRQ=!36  Status request
	.WORD	FUNIGN		;.FNCLI=!37  Clear login mode
	.WORD	FUNIGN		;.FNBIN=!40  Output binary characters from function
	.WORD	FUNIGN		;.FNFLR=!41  Force line retype
	.WORD	FUNIGN		;.FNXMK=!42  X.25 marker, to delimit data packets and pass M & Q
	.WORD	INTPKX#		;.FNXIT=!43  X.25 Interrupt (in interrupt packet, .+int user data)
	.WORD	XITCPK#		;.FNXIC=!44  X.25 Interrupt Confirmation
	.WORD	EATPX1#		;.FNXRS=!45  X.25 Reset (in Eat Packet, .+cause code+diag code)
	.WORD	EATPX2#		;.FNXRC=!46  X.25 Reset Confirmation (in Eat Packet)

FUNMAX=!.-FUNDSP
	.PAGE
	CODE

;;HERE FOR .FNMRK - MARKER FUNCTION

;FUNMRK:	CALL	MARKER#			;PROCESS IT
;	BR	RTNCS7			;AND INTICATE NO OUTPUT

;HERE FOR .FNHIN - HARD INTERRUPT

FUNHIN:	JMP	FUNIGN
;HERE FOR .FNREQ - REQUEST ( YELLOW BALL ), SEND RESPONSE BACK

FUNREQ:	MOVB	#1,PKCNT(R1)		;MAKE SURE IT IS ONE BYTE
	MOVB	#.FNRSP,PKDATA(R1)	;RESPONSE CODE
	CJMP	LKESND#			;SEND IT INTO NODE AND RETURN

;HERE FOR .FNOSA - OUTPUT SUPPRESS ACK

FUNOSA:	MOVB	#3,PKCNT(R1)		;PACKET WILL CONTAIN 3 BYTES
	MOV	#.IPDSC*400+.XMSET,PKDATA(R1);FUNCTION = SET, PARAMETER =
					     ;  DISCARD OUTPUT
	CLRB	PKDATA+2(R1)		;VALUE = 0
	BR	TPRDN8			;CONTINUE

;HERE FOR .FNOPS - OUTPUT SUPPRESS

FUNOPS:	MOVB	#3,PKCNT(R1)		;PACKET WILL CONTAIN 3 BYTES
	MOV	#.IPDSC*400+.XMPIN,PKDATA(R1);FUNCTION = PARAMETER INDICATION,
					     ;  PARAMETER = DISCARD OUTPUT
	MOVB	#1,PKDATA+2(R1)		;VALUE = 1
	BR	TPRDN8			;CONTINUE

;HERE FOR .FNRQD - REQUEST DISCONNECT

FUNITD:	MOVB	#1,PKCNT(R1)		;PACKET WILL CONTAIN 1 BYTE
	MOVB	.XMICL,PKDATA(R1)	;FUNCTION = INVITATION TO CLEAR
	BR	TPRDN8			;THATS ALL

;-----
; HERE FOR INDICATION OF BREAK
;-----
FUNBRK:
	MOVB	#.XMBRK,PKDATA(R1)
	BR	TPRDN8
	.PAGE
;THE FOLLOWING ROUTINE CONVERT THE TERMINAL PARAMETER FUNCTIONS

;DEFINE OFFSETS IN THE OUTPUT BUFFER

S.IN=!0			;INPUT POINTER
S.IP=!2			;INTERNATIONAL PARAMETER OUTPUT POINTER
S.IC=!4			;INTERNATIONAL PARAMETER OUTPUT COUNT (MUST FOLLOW
			;  S.IP!)
S.NP=!6			;NATIONAL PARAMETER OUTPUT POINTER
S.NC=!10		;NATIONAL PARAMETER OUTPUT COUNT (MUST FOLLOW S.NP!)
S.PR=!12		;CURRENT PARAMETER
S.BF=!14		;START OF BUFFER DATA AREA

;  INTERNATIONAL PARAMETERS ARE STORED BACK INTO THE PACKET WE ARE TRANSLATING

;HERE FOR .FNCDP - CHANGE DEVICE PARAMETERS (SET AND READ)

FUNCDP:	MOV	#.XMSTR,R0		;GET X-25 FUNCTION
	BR	TPRCOM			;CONTINUE

;HERE FOR .FNSDP - SET DEVICE PARAMETERS

FUNSDP:	MOV	#.XMSET,R0		;GET X-25 FUNCTION
	BR	TPRCOM			;CONTINUE

;HERE FOR .FNADP - ACCESS DEVICE PARAMETERS

FUNADP: MOV	#.XMRED,R0		;GET X-25 FUNCTION
	BR	TPRCOM			;CONTINUE

;HERE FOR .FNRDP - REPORT DEVICE PARAMETERS

FUNRDP:	MOV	#.XMPIN,R0		;X-25 FUNCTION - PARAMETER INDICATION
TPRCOM:	MOVB	R0,PKDATA(R1)		;CHANGE FUNCTION TO X-25 VALUE
	MOV	R1,R2			;SETUP POINTERS
	ADD	#PKDATA+1,R2
	MOV	R2,S#+S.IN
	MOV	R2,S#+S.IP
	MOV	#S#+S.BF+1,S#+S.NP
	CLR	S#+S.IC			;CLEAR OUTPUT COUNTS
	CLR	S#+S.NC
TPRLOP:	CALL	NXTPRM			;GET NEXT PARAMETER
	BCS	TPRDON			;IF FINISHED
	ROL	R3			;ADJUST FOR WORD ADDRESING
	CMP	#NTPMAX,R3		;LEGAL PARAMETER?
	BLOS	TPRLOP			;NO
	MOV	NTPTBL(R3),R3		;YES-GET TABLE ENTRY
	BMI	TPRLP2			;IF SIMPLE CONVERSION
	ADD	R3,PC			;COMPLEX-DISPATCH TO ROUTINE
NTPBAS:

;HERE FOR SIMPLE CONVERSION - ONLY PARAMETER IS CHANGED, VALUE REMAINS THE
;  SAME

TPRLP2:	TBBN	040000,R3,STRNAT	;IF NATIONAL PARAMETER

;HERE TO STORE INTERNATIONAL PARAMETER/VALUE PAIR INTO THE PACKET BEING
;  BUILT TO BE SENT TO THE X-25 PORT - THIS PACKET IS BUILT OVER THE PACKET
;  RECEIVED SINCE IT CAN NEVER BE LARGER THAN THE ONE RECEIVED

STRINT:	MOV	#S#+S.IP,R2		;GET ADDRESS OF POINTER/COUNTER PAIR
	BR	STRX25			;CONTINUE

;HERE TO STORE NATIONAL PARAMETER/VALUE PAIR INTO THE OUTPUT BUFFER.  MUST
;  USE OUTPUT BUFFER TO HOLD THESE SINCE THEY MUST COME AFTER ALL INTERNATIONAL
;  PARAMETERS AND WE MUST INSERT A "NATIONAL PARAMETER MARKER" BEFORE THEM.

STRNAT:	MOV	#S#+S.NP,R2		;GET ADDRESS OF POINTER/COUNTER PAIR
STRX25:	CALL	STRPRS			;STORE THE PARAMETER
TPRL2P:	BR	TPRLOP			;CONTINUE WITH NEXT PARAMETER

;HERE WHEN FINISHED PROCESSING PARAMETER PAIRS TO SEND TO THE X-25 PORT
;  ALL INTERNATIONAL PARAMETERS ARE IN THE INPUT PACKET AND ALL NATIONAL
;  PARAMETERS ARE IN THE OUTPUT BUFFER.  IN ALMOST ALL CASES, THERE WILL BE
;  ENOUGH ROOM TO COPY ALL NATIONAL PARAMETERS INTO THE PACKET AFTER THE
;  INTERNATIONAL PARAMETERS.  IF THERE IS NOT, WE WILL PUT THEM IN A SECOND
;  PACKET BY THEMSELVES!

TPRDON:	MOV	S#+S.IC,R2		;GET NUMBER OF INTERNATIONAL PARAMETERS
	BNE	TPRDN1			;GO ON IF HAVE SOME
	TST	S#+S.NC			;NONE-HAVE ANY NATIONAL PARAMETERS?
	BNE	TPRDN2			;YES
RTNCS7:;		; SEC		;NO-JUST RETURN WITH C SET
	FREPKT
RTN007:	RETURN

;HERE IF HAVE SOME INTERNATIONAL PARAMETERS

TPRDN1:	MOV	S#+S.NC,R0		;GET NUMBER OF NATIONAL PARAMETERS
	BEQ	TPRDN6			;IF NONE
	ADD	R2,R0			;TOTAL NUMBER OF PARAMETERS
	CMP	R0,#PKCMAX/2-1		;WILL IT ALL FIT IN ONE PACKET?
	BHI	TPRDN4			;NO!
TPRDN2:	MOV	R2,R3			;COPY OFFSET
	ASL	R2			;TIMES 2
	ADD	R1,R2			;POINT TO NEXT BYTE IN PACKET
	ADD	#PKDATA+1,R2
	CLR	(R2)+			;PUT IN "NATIONAL PARAMETER MARKER"

	MOV	S#+S.NC,R0		;GET NUMBER OF NATIONAL PARAMETERS
	ADD	R0,R3			;CALCULATE BYTE COUNT FOR PACKET
	ASL	R3
	ADD	#3,R3
	MOVB	R3,PKCNT(R1)		;STORE COUNT IN THE PACKET
	MOV	#S#+S.BF+1,R3		;POINT TO BUFFER
4$:	MOVB	(R3)+,(R2)+		;COPY PARAMETER
	MOVB	(R3)+,(R2)+		;AND VALUE
	SOB	R0,4$			;LOOP UNTIL DONE
	BR	TPRDN8			;CONTINUE

;HERE IF NATIONAL PARAMETERS WILL NOT FIT IN THE SAME PACKET AS THE
;  INTERNATIONAL PARAMETERS

TPRDN4:	MOVB	PKDATA(R1),R3		;SAVE X-25 FUNCTION
	PUSH	R1			;SAVE PACKET ADDRESS
	MAKPKT	.PLSTP#			;GET ANOTHER PACKET
	BCC	2$
	FSTOP	NPA			;[NO PACKET AVAILABLE]

2$:	MOVB	R3,PKDATA(R1)		;STORE FUNCTION IN PACKET
	CLR	R2			;NO OFFSET
	CALL	TPRDN2			;COPY NATIONAL PARAMETERS TO THE PACKET
					;  AND SEND THE PACKET
	POP	R1			;RESTORE THE INTERNATIONAL PARAMETER
					;  PACKET
	BR	TPRDN8			;CONTINUE

;HERE IF HAVE ONLY INTERNATIONAL PARAMETERS

TPRDN6:	ASL	R2			;CALCULATE CHARACTER COUNT
	INC	R2
	MOVB	R2,PKCNT(R1)		;STORE IN PACKET
TPRDN8:	MOVB	#220,PKTYPE(R1)		;STORE MAGIC NUMBER FOR X-25
	CJMP	X25DT1#			;GO OUTPUT PACKET AND RETURN
	.PAGE
;DISPATCH TABLE FOR NEXILIS TERMINAL PARAMETERS - THIS VERSION OF THIS ROUTINE
;  GENERATES INTERNATIONAL OR TELENET NATIONAL PARAMETERS - WHEN THERE IS A
;  CHOISE, THE INTERNATIONAL PARAMETER IS USED

;FORMAT OF TABLE IS AS FOLLOWS:
;	IF BIT 15 IS SET AND BIT 14 IS CLEAR, BITS 7-0 ARE NEW NATIONAL
;	  PARAMETER
;	IF BITS 15 AND 14 ARE BOTH SET, BITS 7-0 ARE NEW INTERNATIONAL PARAMETER
;	IF BIT 15 IS CLEAR, BITS 14-0 ARE WORD OFFSET FROM NTPBAS TO ROUTINE

	PURE

	.MACRO	ILL
	.WORD	TPRL2P-NTPBAS
	.ENDM

	.MACRO	DSP  ARG
	.WORD	ARG-NTPBAS
	.ENDM

	.MACRO	INT  ARG
	.WORD	100000+ARG
	.ENDM

	.MACRO	NAT  ARG
	.WORD	140000+ARG
	.ENDM

NTPTBL:	ILL			;	   0 - ILLEGAL
	INT	.IPPRC		;.TPCIC =  1 - COMMAND INTERRUPT CHARACTER
	INT	.IPECH		;.TPECH =  2 - ECHO CONTROL
	DSP	BRKSET		;.TPBST =  3 - BREAK SET
	INT	.IPIDL		;.TPITD =  4 - IDLE TIMER DELAY
	ILL			;.TPTAP =  5 - TAPE MODE
	INT	.IPNMC		;.TPNMC =  6 - SUPPRESS NETWORK MESSAGES
	INT	.IPBRK		;.TPBRK =  7 - BREAK HANDLING
	ILL			;.TPPRF = 10 - TERMINAL PROFIL
	DSP	BAUDRT		;.TPRAT = 11 - BAUD RATE
	INT	.IPFLD		;.TPWID = 12 - LINE WIDTH
;	NAT	.TNPLN		;.TPLEN = 13 - PAGE LENGTH
	ILL			;.TPLEN = 13 - PAGE LENGTH
	INT	.IPFLW		;.TPOHE = 14 - OUTPUT HOLD ENABLE
	ILL			;.TPHIC = 15 - HARD INTERRUPT CHARACTER
;***	NAT	.TNIPC		;; .TPHIC = 15 - HARD INTERRUPT CHARACTER

	ILL			;.TPSIC = 16 - SOFT INTERRUPT CHARACTER
;	NAT	.TNABT		;.TPOSC = 17 - OUTPUT SUPPRESS CHARACTER
	ILL			;.TPOSC = 17 - OUTPUT SUPPRESS CHARACTER
	INT	.IPDEL		;.TPDEL = 20 - DELETE CHARACTER
	INT	.IPLDC		;.TPLDC = 21 - LINE DELETE CHARACTER
	INT	.IPLRC		;.TPLRC = 22 - LINE RETYPE CHARACTER
	ILL			;.TPSHT = 23 - SIMULATE HORIZONTAL TAB
	ILL			;.TPSVT = 24 - SIMULATE VERITICAL TAB
	ILL			;.TPSFF = 25 - SIMULATE FORM-FEED
	ILL			;.TPVTS = 26 - VERTICAL TAB SPACING
	INT	.IPCRD		;.TPFCD = 27 - FIXED C.R. DELAY
	ILL			;.TPVCD = 30 - VARIABLE C.R. DELAY
	INT	.IPLFD		;.TPLFD = 31 - L.F. DELAY
;	NAT	.TNHTP		;.TPHTD = 32 - HORIZONTAL TAB DELAY
	ILL			;.TPHTD = 32 - HORIZONTAL TAB DELAY
	ILL			;.TPVTD = 33 - VERTICAL TAB DELAY
	ILL			;.TPFFD = 34 - FIXED FORM FEED DELAY
	ILL			;.TPVFD = 35 - VARIABLE FORM FEED DELAY
	ILL			;.TPBSD = 36 - BACKSPACE DELAY
	INT	.IPLFI		;.TPLFI = 37 - LINE FEED INSERSION
	ILL			;.TPCRI = 40 - CARRIAGE RETURN INSERSION
	ILL			;.TPIMO = 41 - IMAGE MODE OUTPUT
	ILL			;.TPIMI = 42 - IMAGE MODE INPUT
	ILL			;.TPXLI = 43 - XLATE LOWER CASE INPUT
	ILL			;.TPXLO = 44 - XLATE LOWER CASE OUTPUT
	ILL			;.TPBDE = 45 - BACKSPACE DELETE ENABLE
	ILL			;.TPEDB = 46 - ECHO DELETE CHR AS BS
	ILL			;.TPXBD = 47 - EXTENDED BS DELETE ECHO
	ILL			;.TPLCP = 50 - LOCAL COPY
;	NAT	.TNHFD		;.TPLCP = 50 - LOCAL COPY
	ILL			;.TPBC1 = 51 - FIRST ADDITIONAL BREAK CHR
	ILL			;.TPBC2 = 52 - SECOND ADDITIONAL BREAK CHR
;	NAT	.TNIDT		;.TPOPT = 53 - OUTPUT PENDING TIMER
	ILL			;.TPOPT = 53 - OUTPUT PENDING TIMER
	ILL			;.TPCCE = 54 - CONTROL CHR ECHO CONTROL
	ILL			;.TPESC = 55 - "ESC" CHR ECHO CONTROL
	ILL			;.TPCHS = 56 - CHANGE HIGH SPECIAL CHR TO ESC
	ILL			;.TPTYP = 57 - TERMINAL TYPE
	ILL			;.TPESQ = 60 - ESC SEQUENCE CONTROL
	ILL			;.TPFIL = 61 - FILLING CONTROL
	ILL			;.TPFCR = 62 - FREE CR/LF CONTROL
	ILL			;.TPHNG = 63 - HANG UP DATA-SET
	ILL			;.TPTRN = 64 - TRANSPANCY MODE CONTROL
	ILL			;.TPADM = 65 - ALTERNATE DEVICE MODE CONTROL
	DSP	BAUDRT		;.TPIRT = 66 - INPUT BAUD RATE
	DSP	BAUDRT		;.TPORT = 67 - OUTPUT BAUD RATE
	INT	.IPAUX		;.TPIHE = 70 - INPUT HOLD ENABLE
	ILL			;.TPKAT = 71 - KATAKANA MODE CONTROL
	DSP	PARHND		;.TPPAR = 72 - PARITY CONTROL
	ILL			;.TPALF = 73 - AUTO LINE FEED
	ILL			;.TPVTS = 74
	ILL			;.TPBLT = 75
	ILL			;.TPEHT = 76
	ILL			;.TPSRC = 77
	ILL			;.TPEBS	=100
	ILL			;.TPSCE =101
	ILL			;.TPIBL =102
	ILL			;.TPTOB =103
	ILL			;.TPECE =104
	ILL			;.TPQMD =105
	INT	.IPDSC		;.TPSOP =106 - SUPPRESS OUTPUT
	INT	.IPEDT		;.TPEDT =107 - LINE EDITING
NTPMAX=!.-NTPTBL

	CODE
	.PAGE



;-----
;HERE FOR .TPBST PARAMETER - BREAK SET
;-----

BRKSET:	MOV	#.IPDFS,R3		; INTERNAT'L DATA FORWARDING PARAM
	TSTB	R0			; ANYTHING DEFINED?
	BEQ	STRINT			; NO, PASS IT ALONG
	CMPB	#1,R0			; <CR> ONLY ?
	BNE	5$			; NO, ASSUME IT IS <ALL CONTROL CHAR+DEL>
	MOV	#2,R0			; YES, TELL IT IN X.3 CODE
	BR	STRINT
5$:
	CMPB	#200,R0			; BREAK ON ANYTHING?
	BNE	10$			; NO, BRANCH
	MOVB	#377,R0			;
	BR	STRINT
10$:
	MOV	#94.,R0			; BREAK ON ALL CONTROL CHAR + <DEL>
					;  - (<HT><LF><VT><FF>)
	BR	STRINT

;-----
;HERE FOR .TPRAT PARAMETER - BAUD RATE (ALSO FOR .TPIRT AND .TPORT)
;-----

BAUDRT:	CMP	#NXLBMX,R0		;VALID BAUD RATE CODE?
	BHI	2$			;YES-GO ON
	CLR	R0			;NO-GET A "GOOD" BAD VALUE!
2$:	MOVB	NXLRAT(R0),R0		;YES-GET X-25 CODE
	MOV	#.IPBRT,R3		;AND THE PARAMETER
	BR	STRINT			;GO STORE IT

;NEXILIS TO X-25 BAUD RATE TRANSLATION TABLE

	PURE

NXLRAT::.BYTE	0		; 0 - This may be a read PAD parameter command
	.BYTE	10.		; 1 - 50 BAUD
	.BYTE	5		; 2 - 75 BAUD
	.BYTE	0		; 3 - 110 BAUD
	.BYTE	1		; 4 - 134.5 BAUD
	.BYTE	6		; 5 - 150 BAUD
	.BYTE	8.		; 6 - 200 BAUD
	.BYTE	2		; 7 - 300 BAUD
	.BYTE	2		;10 - 300 BAUD, 6 BIT
	.BYTE	0		;11 - 400 BAUD
	.BYTE	4		;12 - 600 BAUD
	.BYTE	3		;13 - 1200 BAUD
	.BYTE	7		;14 - 1800 BAUD
	.BYTE	0		;15 - 2000 BAUD
	.BYTE	12.		;16 - 2400 BAUD
	.BYTE	0		;17 - 3600 BAUD
	.BYTE	13.		;20 - 4800 BAUD
	.BYTE	0		;21 - 7200 BAUD
	.BYTE	14.		;22 - 9600 BAUD
	.BYTE	15.		;23 - 19200 BAUD
	.BYTE	9.		;24 - 100 BAUD
	.BYTE   0		;25 - 38400 BAUD
	.BYTE	16.		;26 - 48000 BAUD
	.BYTE	17.		;27 - 56000 BAUD
	.BYTE	18.		;30 - 64000 BAUD
	.BYTE	11.		;31 - 75/1200 SPLIT SPEED
NXLBMX=!.-NXLRAT

	CODE

;HERE FOR .TPPAR PARAMETER - PARITY CONTROL

PARHND:	JMP	TPRLOP
	.PAGE
;SUBROUTINE TO FETCH PARAMETER/VALUE PAIR FROM INPUT PACKET
;	C(R1) = ADDRESS OF INPUT PACKET
;	CALL	NXTPRM
;	C:SET = NOTHING MORE THERE
;	C(R0) = VALUE
;	C(R3) = PARAMETER

NXTPRM:	CALL	NXTBYX			;GET PARAMETER BYTE
	MOV	R0,S+S.PR		;SAVE PARAMETER
	CALL	NXTBYX			;GET VALUE
	BCS	2$			;IF NO MORE THERE
	MOV	S#+S.PR,R3		;GET PARAMETER
	BIC	#^C177,R3		;BUT ONLY 7 BITS
2$:	RETURN				;THATS ALL

;SUBROUTINE TO FETCH BYTE FROM INPUT PACKET
;	C(R1) = ADDRESS OF INPUT PACKET
;	C(R2) = POINTER TO CURRENT BYTE IN PACKET
;	CALL	NXTBYX
;	C:SET = NOTHING MORE THERE
;	C(R0) = DATA BYTE
;	C(R2) = UPDATED POINTER

NXTBYX:	CLR	R0			;GET READY
	TST	R1			;DO WE HAVE A PACKET?
	BEQ	6$			;NO
2$:	DECB	PKCNT(R1)		;YES-MORE THERE?
	BLT	4$			;NO
	BISB	@S#+S.IN,R0		;YES-GET DATA
	INC	S#+S.IN			;BUMP POINTER
	RETURN				;THATS ALL (C IS CLEAR HERE!)

;HERE IF CURRENT PACKET IS EMPTY NOW

4$:	MOV	(R1),R0			;SAVE ADDRESS OF NEXT PACKET
	BEQ	6$			;IF NO MORE
	FREPKT				;GIVE UP THIS PACKET
	MOV	R0,R1			;RESTORE NEXT
	MOV	#PKDATA,R2		;RESET POINTER
	ADD	R1,R2
	MOV	R2,S#+S.IN		;STORE POINTER
	BR	2$			;CONTINUE

6$:	SEC
	RETURN
	.PAGE
;SUBROUTINE TO STORE PARAMETER/VALUE PAIR INTO THE OUTPUT BUFFER OR INTO
;  THE OUTPUT PACKET - CALLER MUST FIRST ENSURE THAT THERE IS ENOUGH ROOM
;	C(R0) = VALUE
;	C(R2) = ADDRESS OF POINTER (COUNT MUST BE NEXT WORD)
;	C(R3) = PARAMETER
;	CALL	STRPRS

STRPRS:	ASL	R3			;PUT ERROR BIT BACK INTO PARAMETER
	ROLB	S#+S.PR
	RORB	R3
	MOVB	R3,@(R2)+		;STORE PARAMETER
	INC	-(R2)			;BUMP POINTER
	MOVB	R0,@(R2)+		;STORE VALUE
	INC	(R2)			;BUMP COUNTER
	INC	-(R2)			;AND BUMP POINTER AGAIN
	RETURN				;THATS ALL

	PURE
	.EVEN

	.END
    2@A5