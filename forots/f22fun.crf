1022 version of FORFUN will be assembled.
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1
FT22	MAC	27-Apr-71 18:40		H. P. WEISS/HPW/DMN/MD/DPL/JNG/SJW/SWG	21-MAR-77

BSW$22C		777777	777777		SW$22==:-1
BFT$22C		777777	777777		FT$22==:-1
BTITLEC						TITLE	FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS
BSUBTTLC						SUBTTL	H. P. WEISS/HPW/DMN/MD/DPL/JNG/SJW/SWG	21-MAR-77
BC
BC
BC
BC
BC					;THIS SOFTWARE IS FURNISHED UNDER A LICENSE AND MAY ONLY BE USED
BC					;  OR COPIED IN ACCORDANCE WITH THE TERMS OF SUCH LICENSE.
BC
BC					;COPYRIGHT (C) 1973,1977 BY DIGITAL EQUIPMENT CORPORATION
BC
BVERWHOC			000000		VERWHO==0	;EDITOR
BVERVERC			000005		VERVER==05	;MAJOR VERSION NUMBER
BVERUPDC			000000		VERUPD==0	;MINOR VERSION NUMBER
BVEREDTC			000650		VEREDT==650	;EDIT NUMBER
BC
BBYTEVERWHOVERVERVERUPDVEREDTVERFUNC		000500	000650		VERFUN==BYTE (3)VERWHO(9)VERVER(6)VERUPD(18)VEREDT
BC
BPURGEVERWHOVERVERVERUPDVEREDTC					PURGE	VERWHO,VERVER,VERUPD,VEREDT
BC
BC
BC
BSUBTTLC						SUBTTL	REVISION HISTORY
BC
BC					;446	15993	FIX CBC FUNCTION SO IT WILL CUT BACK CORE PROPERLY
BC					;		FOR LINK OVERLAY'S
BC					;477	17759	ALWAYS REQUEST AT LEAST ONE WORD FROM GMEM%%
BC					;506	17107	DELETE OVERLAY HANDLER'S FREE CORE LIST. HAVING ONLY
BC					;		ONE LIST DOES NO HARM IF THE /SPACE DOES NOT OVERFLOW,
BC					;		AND IS BENEFICIAL IN MOST CASES IF IT DOES.
BC					;511	17107	DELETE ALL DMEM%% CALLS. THEY ARE USELESS AND WASTE TIME
BC					;512	17107	IF GAD FAILS, DELETE FORMAT BLOCKS & RETRY.
BC					;514	18030	CHANGE GMEM%% CALL SO CAN RETURN ERROR CODE INSTEAD
BC					;		OF BOMBING WITH %FRSSYS NO CORE AVAILABLE MESSAGE.
BC					;	*****	BEGIN VERSION 5
BC					;571	-----	ADD FUNCTIONS RRS & WRS: RESERVED FOR DBMS
BC					;650	-----	CHANGE REFERENCE TO ALCOR1 IN FOROTS TO FMEM%%
BC					;****************	END OF REVISION HISTORY
BIF1C					IF1,<
BC					    IFNDEF FT$22,<
BC						PRINTX	DEC standard FORFUN will be assembled.
BC					  >
BC					    IFDEF FT$22,<
BC						PRINTX 	1022 version of FORFUN will be assembled.
BC					    >
BC					>
BC
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1
FORFUN	MAC	 1-Dec-70 16:53		DEFINE SYMBOLS

BSUBTTLC						SUBTTL	DEFINE SYMBOLS
BSEARCHC					SEARCH	FORPRM		;GLOBAL SYMBOLS DEFINED IN FORPRM
BC
BSEGMENSALLC					SEGMEN^	SALL
BCONCEATWOSEGRELOCC	400000'				^
BC
BDEFINEFUNDIRC						DEFINE FUNDIR,<
BC						FNCTN	ILL		;0; ILLEGAL FNCTNION
BC						FNCTN	GAD		;1; GET CORE AT ADDRESS
BC						FNCTN	COR		;2; GET CORE FROM ANY ADDRESS
BC						FNCTN	RAD		;3; RETURN CORE AT ADDRESS
BC						FNCTN	GCH		;4; GET A CHANNEL
BC						FNCTN	RCH		;5; RETURN A CHANNEL
BC						FNCTN	GOT		;6;[251] GET CORE FROM OTS LIST
BC						FNCTN	ROT		;7;[251] RETURN CORE TO OTS LIST
BC						FNCTN	RNT		;10;[302] GET RUNTIME FROM OTS
BC						FNCTN	IFS		;11;[311] GET DEV:FILE[PPN] FROM OTS
BC						FNCTN	CBC		;12;[311] CUT BACK CORE
BC						FNCTN	RRS		;13;[571] READ ROUTINE STATUS (RESERVED FOR DBMS)
BC						FNCTN	WRS		;14;[571] WRITE ROUTINE STATUS (RESERVED FOR DBMS)
BC						>
BC
BFUN.ZZC			000000			FUN.ZZ==0
BDEFINEFNCTNC						DEFINE FNCTN(A),<
BC						JRST	FUN'A		;DEFINE DISPATCH TO PROCESSING ROUTINE
BC						FUN.ZZ==FUN.ZZ+1	;COUNT NUMBER OF ENTRIES IN TABLE
BC						>
BC
BFUNDSPFUNDIRFNCTNJRSTFUNILLC	400000'	254 00 0 00 400031'	FUNDSP:	FUNDIR			;DEFINE DISPATCH TABLE
BFUN.ZZFUN.ZZFNCTNJRSTFUNGADC	400001'	254 00 0 00 400033'
BFUN.ZZFUN.ZZFNCTNJRSTFUNCORC	400002'	254 00 0 00 400220'
BFUN.ZZFUN.ZZFNCTNJRSTFUNRADC	400003'	254 00 0 00 400243'
BFUN.ZZFUN.ZZFNCTNJRSTFUNGCHC	400004'	254 00 0 00 400326'
BFUN.ZZFUN.ZZFNCTNJRSTFUNRCHC	400005'	254 00 0 00 400337'
BFUN.ZZFUN.ZZFNCTNJRSTFUNGOTC	400006'	254 00 0 00 400220'
BFUN.ZZFUN.ZZFNCTNJRSTFUNROTC	400007'	254 00 0 00 400243'
BFUN.ZZFUN.ZZFNCTNJRSTFUNRNTC	400010'	254 00 0 00 400350'
BFUN.ZZFUN.ZZFNCTNJRSTFUNIFSC	400011'	254 00 0 00 400354'
BFUN.ZZFUN.ZZFNCTNJRSTFUNCBCC	400012'	254 00 0 00 400367'
BFUN.ZZFUN.ZZFNCTNJRSTFUNRRSC	400013'	254 00 0 00 400436'
BFUN.ZZFUN.ZZFNCTNJRSTFUNWRSC	400014'	254 00 0 00 400436'
BFUN.ZZFUN.ZZPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-1
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION DISPATCH

BSUBTTLC						SUBTTL	FUNCTION DISPATCH
BC
BENTRYFUNCT%C						ENTRY	FUNCT%
BC
BC
BC					;CALLS TO FUNCT. CONFORM TO THE DEC STANDARD CALLING SEQUENCE
BC					;
BC					;THE ARG LIST HAS THE GENERAL FORM
BC					;
BC					;		-ARG COUNT,,0
BC					; ARGBLK:	TYPE,,[FUNCTION]
BC					;		TYPE,,[ERROR CODE]
BC					;		TYPE,,[STATUS]
BC					;		TYPE,,[ARG1]
BC					;		TYPE,,[ARG2]
BC					;		TYPE,,[ARG3]
BC					;
BC
BDEFINEFUNBLKC							DEFINE FUNBLK,<
BC							FUNARG	FUN,IND
BC							FUNARG	ERR,IND
BC							FUNARG	STS,IND
BC							FUNARG	RG1,IND
BC							FUNARG	RG2,IND
BC							FUNARG	RG3,IND
BC							>
BC
BC
BFUN.YYC			000000				FUN.YY==0
BDEFINEFUNARGC							DEFINE FUNARG(A,B)<
BC							FN.'A==FUN.YY		;SET INDEX INTO ARGBLK
BC							FUN.YY==FUN.YY+1	;COUNT ENTRIES IN ARGBLK
BC							>
BC
BFUNBLKFUNARGFUN.YYFN.FUNFUN.YYFUN.YYFUNARGFUN.YYFN.ERRFUN.YYFUN.YYFUNARGFUN.YYFN.STSFUN.YYFUN.YYFUNARGFUN.YYFN.RG1FUN.YYFUN.YYFUNARGFUN.YYFN.RG2FUN.YYFUN.YYFUNARGFUN.YYFN.RG3FUN.YYFUN.YYC							FUNBLK			;DEFINE ARGBLK SYMBOLS
BPURGEFUN.YYC							PURGE	FUN.YY
BC
BSIXBITC	400015'	46 65 56 43 64 16 		SIXBIT	/FUNCT./	;FOR TRACE
BFUNCT%PUSHJPSAVE.SAVE.C	400016'	260 17 0 00 000000*	FUNCT%:	PUSHJ	P,SAVE.##	;SAVE REGISTERS
BMOVEIT2C	400017'	201 02 0 00 000000 		MOVEI	T2,0		;LOCATE THE FUNCTION CODE
BPUSHJPFUNADRC	400020'	260 17 0 00 400443'		PUSHJ	P,FUNADR	;LOCATE THE FUNCTION CODE
BSKIPLG1G1C	400021'	331 06 0 06 000000 		SKIPL	G1,0(G1)	;LOAD THE ARGUMENT
BCAILG1FUN.ZZC	400022'	301 06 0 00 000015 		CAIL	G1,FUN.ZZ	;[311] IS THE FUNCTION DEFINED?
BMOVEIG1C	400023'	201 06 0 00 000000 		MOVEI	G1,0		;DEFAULT TO ILLEGAL FUNCTION
BPUSHJPFUNDSPG1C	400024'	260 17 1 06 400000'		PUSHJ	P,@FUNDSP(G1)	;DISPATCH TO FUNCTION ROUTINE
BMOVEIT2FN.STSC	400025'	201 02 0 00 000002 		MOVEI	T2,FN.STS	;LOCATE STATUS ARGUMENT
BPUSHJPFUNADRC	400026'	260 17 0 00 400443'		PUSHJ	P,FUNADR	;LOCATE STATUS ARGUMENT
BHRREMP3G1C	400027'	572 14 0 06 000000 		HRREM	P3,0(G1)	;STORE STATUS ARGUMENT
BPOPJPC	400030'	263 17 0 00 000000 		POPJ	P,		;RETURN
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-2
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION ILL - ILLEGAL FUNCTION

BSUBTTLC						SUBTTL	FUNCTION ILL - ILLEGAL FUNCTION
BC
BC					;FUNCTION ILL - ILLEGAL FUNCTION
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARGBLK IS IGNORED
BC					;ALWAYS RETURNS STATUS -1
BC
BFUNILLMOVEIP3C	400031'	201 14 0 00 777777 	FUNILL:	MOVEI	P3,-1		;SET ILLEGAL FUNCTION
BPOPJPC	400032'	263 17 0 00 000000 		POPJ	P,		;RETURN TO USER
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-3
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION GAD - GET CORE AT SPECIFIED ADDRESS

BSUBTTLC						SUBTTL	FUNCTION GAD - GET CORE AT SPECIFIED ADDRESS
BC
BC					;FUNCTION GAD - GET CORE AT ADDRESS
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	ADDRESS TO ALLOCATE CORE AT
BC					;ARG2:	SIZE OF BLOCK TO ALLOCATE
BC					;
BC					;STATUS 0:	CORE ALLOCATED
BC					;STATUS 2:	CANNOT ALLOCATE AT SPECIFIED LOCATION
BC					;STATUS 3:	ILLEGAL ARGUMENTS
BC
BC					;**;[506] Delete @ FUNGAD	JNG	3-Dec-75
BFUNGADPUSHJPFUNRG1C	400033'	260 17 0 00 400442'	FUNGAD:	PUSHJ	P,FUNRG1	;[506] LOCATE FIRST ARGUMENT
BSKIPLEP2G1C	400034'	333 13 0 06 000000 		SKIPLE	P2,0(G1)	;LOAD ADDRESS WANTED
BTLNEP2C	400035'	603 13 0 00 777777 		TLNE	P2,-1		;POSITIVE 18 BITS ADDRESS
BPJRSTFUNST3C	400036'	254 00 0 00 400241'		PJRST	FUNST3		;ILLEGAL ARGUMENT
BPUSHJPFUNRG2C	400037'	260 17 0 00 400441'		PUSHJ	P,FUNRG2	;LOCATE SECOND ARGUMENT
BSKIPLEP3G1C	400040'	333 14 0 06 000000 		SKIPLE	P3,0(G1)	;LOAD SIZE WANTED
BTLNEP3C	400041'	603 14 0 00 777777 		TLNE	P3,-1		;POSITIVE 18 BITS ADDRESS
BJRSTFUNGAIC	400042'	254 00 0 00 400214'		JRST	FUNGAI		;[333] ILLEGAL ARGUMENT
BFUNGAXADDIP3P2C	400043'	271 14 0 13 777777 	FUNGAX:	ADDI	P3,-1(P2)	;COMPUTE LAST BLOCK ADR
BTLNEP3C	400044'	603 14 0 00 777777 		TLNE	P3,-1		;GREATER THAN 256 K
BPJRSTFUNST3C	400045'	254 00 0 00 400241'		PJRST	FUNST3		;ILLEGAL ARGUMENT
BC					;**;[512] Insert label @ FUNGAX+3L	JNG	8-Dec-75
BFUNGA5C	400046'				FUNGA5:
BIFDEFFT$22C					    IFDEF FT$22,<
BC									;SYSTEM 1022 ONLY CODE HERE
BC									;**************************
BPUSHJPLA1022C	400046'	260 17 0 00 400105'		PUSHJ	P,LA1022	;GIVE SKIP RETURN IF IN 1022
BJRSTN1022C	400047'	254 00 0 00 400112'		 JRST	N1022		;NOT IN 1022...SKIP THE REST
BCAIGP3T1C	400050'	307 14 0 01 000000 		CAIG	P3,(T1)		;LA1022 GIVES ".JBREL" IN T1
BJRSTFUNDFMC	400051'	254 00 0 00 400141'		 JRST	FUNDFM		;NO NEED TO ALLOCATE CORE
BMOVEIT0P3C	400052'	201 00 0 14 000000 		MOVEI	T0,(P3)		;ALLOCATE BLOCK FROM AVAILABLE CORE
BSUBIT0T1C	400053'	275 00 0 01 777776 		SUBI	T0,-2(T1)	;DETERMINE THE NUMBER OF WORDS
BC									;TO ALLOCATE AND SUBTRACT 2 SO
BC									;THAT WE NEVER ALLOCATE THE EXACT
BC									;AMOUNT
BMOVET3T1C	400054'	200 03 0 00 000001 		MOVE	T3,T1		;SAVE OLD ".JBFF"
BAOST3C	400055'	350 00 0 00 000003 		AOS	T3		;    ..
BPUSHJPT2C	400056'	260 17 0 02 777775 		PUSHJ	P,-3(T2)	;ALLOCATE CORE
BJRSTFUNST3C	400057'	254 00 0 00 400241'		 JRST	FUNST3		;CAN'T...NONE AVAILABLE
BHRRZT4FRE.DYP4C	400060'	550 04 0 15 000101 		HRRZ	T4,FRE.DY(P4)	;GET DYNAMIC CORE POINTER
BJUMPNT4FA1022C	400061'	326 04 0 00 400076'		JUMPN	T4,FA1022	;GO IF NOT FIRST TIME
BMOVEIT4P2C	400062'	201 04 0 13 777777 		MOVEI	T4,-1(P2)	;GET HIGHEST ADDRESS WE DON'T WANT
BSUBIT4T3C	400063'	275 04 0 03 777777 		SUBI	T4,-1(T3)	;LENGTH TO GIVE BACK
BJUMPLET4FA1022C	400064'	323 04 0 00 400076'		JUMPLE	T4,FA1022	;GIVE BACK ANY FREED CORE
BMOVET1T3C	400065'	200 01 0 00 000003 		MOVE	T1,T3		;GET ".JBFF"
BHRLZMT4T1C	400066'	516 04 0 01 000000 		HRLZM	T4,(T1)		;STORE LENGTH IN FIRST WORD
BADDBT4T3C	400067'	273 04 0 00 000003 		ADDB	T4,T3		;ACCOUNT FOR IT
BAOST1C	400070'	350 00 0 00 000001 		AOS	T1		;POINT TO FIRST WORD
BMOVSSFRE.DYP4C	400071'	207 00 0 15 000101 		MOVSS	FRE.DY(P4)	;POINT TO OTS LIST
BPUSHPT3C	400072'	261 17 0 00 000003 		PUSH	P,T3		;SAVE ".JBFF"
BPUSHJPPMEM%%C	400073'	260 17 0 00 000000*		PUSHJ	P,PMEM%%	;RETURN CORE TO OTS LIST
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-4
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION GAD - GET CORE AT SPECIFIED ADDRESS

BPOPPT3C	400074'	262 17 0 00 000003 		POP	P,T3		;RESTORE ".JBFF"
BMOVSSFRE.DYP4C	400075'	207 00 0 15 000101 		MOVSS	FRE.DY(P4)	;    ..
BFA1022C	400076'				FA1022:
BPUSHJPLA1022C	400076'	260 17 0 00 400105'		PUSHJ	P,LA1022	;GET THE NEW ".JBREL"
BJFCLC	400077'	255 00 0 00 000000 		 JFCL			;(UNLIKELY THAT THIS WOULD HAPPEN)
BMOVET2T1C	400100'	200 02 0 00 000001 		MOVE	T2,T1		;SAVE IT
BMOVET1T3C	400101'	200 01 0 00 000003 		MOVE	T1,T3		;COMPUTE SIZE OF BLOCK ADDED
BSUBIT2T1C	400102'	275 02 0 01 777777 		SUBI	T2,-1(T1)	;    ..
BHRLZMT2T1C	400103'	516 02 0 01 000000 		HRLZM	T2,(T1)		;STORE BLOCK SIZE
BJRSTX1022C	400104'	254 00 0 00 400137'		JRST	X1022		;TO COMMON CODE
BLA1022C	400105'				LA1022:
BHLRET2.JBCST.JBCSTC	400105'	574 02 0 00 000000*		HLRE	T2,.JBCST##	;SEE IF A 1022 PROGRAM
BAOJET2P1022C	400106'	342 02 0 00 400111'		AOJE	T2,P1022	;(NOPE)
BPUSHJPT2C	400107'	260 17 0 02 777776 		PUSHJ	P,-2(T2)	;YES, LOAD ".JBREL"
BAOSPC	400110'	350 00 0 17 000000 		AOS	(P)		;AND SKIP RETURN
BP1022C	400111'				P1022:
BPOPJPC	400111'	263 17 0 00 000000 		POPJ	P,		;    ..
BN1022C	400112'				N1022:
BC					    >
BMOVET1.JBREL.JBRELC	400112'	200 01 0 00 000000*		MOVE	T1,.JBREL##	;[512] LOCATE LAST ASSIGNED ADR
BCAIGP3T1C	400113'	307 14 0 01 000000 		CAIG	P3,0(T1)	;[245] ALLOCATING PAST END OF CORE
BJRSTFUNDFMC	400114'	254 00 0 00 400141'		JRST	FUNDFM		;NO - DEFRAGMENT MEMORY
BC									;
BMOVEIT1P3C	400115'	201 01 0 14 000000 		MOVEI	T1,0(P3)	;ALLOCATE BLOCK FROM AVAILABLE CORE
BCORET1C	400116'	047 01 0 00 000011 		CORE	T1,		;ALLOCATE BLOCK FROM AVAILABLE CORE
BC					;**;[512] Change @ FUNGAX+9L	JNG	8-Dec-75
BJRSTFUNST1C	400117'	254 00 0 00 400240'		  JRST	FUNST1		;[512] [333] NO CORE AVAILABLE
BMOVET1.JBFF.JBFFC	400120'	200 01 0 00 000000*		MOVE	T1,.JBFF##	;LOCATE START OF BLOCK
BHRRZT2FRE.DYP4C	400121'	550 02 0 15 000101 		HRRZ	T2,FRE.DY(P4)	;[251] GET DYNAMIC CORE POINTER
BJUMPNT2FUNGA3C	400122'	326 02 0 00 400133'		JUMPN	T2,FUNGA3	;[251] BRANCH IF NOT FIRST TIME
BMOVEIT2P2C	400123'	201 02 0 13 777777 		MOVEI	T2,-1(P2)	;[251] HIGHEST ADDRESS WE DON'T WANT 
BSUBIT2T1C	400124'	275 02 0 01 777777 		SUBI	T2,-1(T1)	;[251] LENGTH TO GIVE BACK
BJUMPLET2FUNGA4C	400125'	323 02 0 00 400132'		JUMPLE	T2,FUNGA4	;[274] ANY CORE TO RETURN?
BHRLZMT2T1C	400126'	516 02 0 01 000000 		HRLZM	T2,0(T1)	;[251] STORE LENGTH IN FIRST WORD
BADDBT2.JBFFC	400127'	273 02 0 00 400120*		ADDB	T2,.JBFF	;[251] ACCOUNT FOR IT
BADDIT1C	400130'	271 01 0 00 000001 		ADDI	T1,1		;[251] POINT PAST FIRST WORD
BC					;**;[506] Delete @ FUNGAX+19L	JNG	3-Dec-75
BPUSHJPPMEM%%C	400131'	260 17 0 00 400073*		PUSHJ	P,PMEM%%	;[251] RETURN CORE TO OTS LIST
BFUNGA4MOVET1.JBFF.JBFFC	400132'	200 01 0 00 400127*	FUNGA4:	MOVE	T1,.JBFF##	;[274] RESET START OF BLOCK
BFUNGA3MOVET2.JBREL.JBRELC	400133'	200 02 0 00 400112*	FUNGA3:	MOVE	T2,.JBREL##	;[251] LOCATE END OF CORE
BSUBIT2T1C	400134'	275 02 0 01 777777 		SUBI	T2,-1(T1)	;COMPUTE SIZE OF BLOCK ADDED
BHRLZMT2T1C	400135'	516 02 0 01 000000 		HRLZM	T2,0(T1)	;STORE BLOCK SIZE
BADDBT2.JBFF.JBFFC	400136'	273 02 0 00 400132*		ADDB	T2,.JBFF##	;OFFSET .JBFF
BIFDEFFT$22C					    IFDEF FT$22,<
BX1022C	400137'				X1022:
BC					    >
BADDIT1C	400137'	271 01 0 00 000001 		ADDI	T1,1		;OFFSET FOR PMEM%%
BPUSHJPPMEM%%PMEM%%C	400140'	260 17 0 00 400131*		PUSHJ	P,PMEM%%##	;RETURN SPACE ALLOCATED
BC					;**;[511] Delete @ FUNDFM	JNG	8-Dec-75
BFUNDFMMOVEIT2FRE.DYP4C	400141'	201 02 0 15 000101 	FUNDFM:	MOVEI	T2,FRE.DY(P4)	;[511] LOCATE FREE CORE LIST
BHRRZT1T2C	400142'	550 01 0 02 000000 		HRRZ	T1,0(T2)	;ANY HEAP LEFT
BC					;**;[512] Change @ FUNDFM+4L	JNG	8-Dec-75
BJUMPET1FMTZAPC	400143'	322 01 0 00 400206'		JUMPE	T1,FMTZAP	;[512] CAN'T - MAYBE FORMAT IN WAY
BFUNGA0HLRZP1T1C	400144'	554 12 0 01 000000 	FUNGA0:	HLRZ	P1,0(T1)	;LOAD SIZE OF BLOCK
BADDIP1T1C	400145'	271 12 0 01 777777 		ADDI	P1,-1(T1)	;COMPUTE LAST ADR OF BLOCK
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-5
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION GAD - GET CORE AT SPECIFIED ADDRESS

BCAILP2T1C	400146'	301 13 0 01 000000 		CAIL	P2,0(T1)	;BELOW OR
BCAILEP2P1C	400147'	303 13 0 12 000000 		CAILE	P2,0(P1)	;ABOVE CURRENT BLOCK
BSKIPAT2T2C	400150'	334 02 0 02 000000 		SKIPA	T2,0(T2)	;YES - ADVANCE LINK
BJRSTFUNGA1C	400151'	254 00 0 00 400155'		JRST	FUNGA1		;NO - CHECK IF WHOLE BLOCK IS CONTAINED
BHRRZT1T2C	400152'	550 01 0 02 000000 		HRRZ	T1,0(T2)	;LOAD ADR OF NEXT BLOCK
BJUMPNT1FUNGA0C	400153'	326 01 0 00 400144'		JUMPN	T1,FUNGA0	;CHECK IF IN NEXT BLOCK
BC					;**;[512] Change @ FUNGA0+8L	JNG	8-Dec-75
BJRSTFMTZAPC	400154'	254 00 0 00 400206'		JRST	FMTZAP		;[512] CHECK FOR FORMAT IN WAY
BFUNGA1CAILEP3P1C	400155'	303 14 0 12 000000 	FUNGA1:	CAILE	P3,0(P1)	;DOES BLOCK FIT IN BLOCK AVAILABLE
BJRSTFMTZAPC	400156'	254 00 0 00 400206'		JRST	FMTZAP		;[512] CHECK FOR FORMAT IN WAY
BHRRZT4T1C	400157'	550 04 0 01 000000 		HRRZ	T4,0(T1)	;SPACE FOUND
BHRRMT4T2C	400160'	542 04 0 02 000000 		HRRM	T4,0(T2)	;DELETE SPACE FROM CHAIN
BCAINP2T1C	400161'	306 13 0 01 000000 		CAIN	P2,0(T1)	;EXTRA SPACE IN FRONT OF BLOCK?
BJRSTFUNGA2C	400162'	254 00 0 00 400170'		JRST	FUNGA2		;NO - NO NEED TO RETURN SPACE
BMOVEIT0P2C	400163'	201 00 0 13 000000 		MOVEI	T0,0(P2)	;COMPUTE SPACE RETURNED
BSUBIT0T1C	400164'	275 00 0 01 000000 		SUBI	T0,0(T1)	;COMPUTE SPACE RETURNED
BHRLZMT0T1C	400165'	516 00 0 01 000000 		HRLZM	T0,0(T1)	;SET BLOCK SIZE
BADDIT1C	400166'	271 01 0 00 000001 		ADDI	T1,1		;OFFSET FOR PMEM%%
BPUSHJPPMEM%%PMEM%%C	400167'	260 17 0 00 400140*		PUSHJ	P,PMEM%%##	;RETURN EXTRA AT BEGINNING
BFUNGA2CAINP3P1C	400170'	306 14 0 12 000000 	FUNGA2:	CAIN	P3,0(P1)	;EXTRA SPACE AFTER BLOCK
BJRSTFUNALCC	400171'	254 00 0 00 400177'		JRST	FUNALC		;NO - NO NEED TO RETURN SPACE
BMOVEIT0P1C	400172'	201 00 0 12 000000 		MOVEI	T0,0(P1)	;COMPUTE SPACE RETURNED
BSUBIT0P3C	400173'	275 00 0 14 000000 		SUBI	T0,0(P3)	;COMPUTE SPACE RETURNED
BHRLZMT0P3C	400174'	516 00 0 14 000001 		HRLZM	T0,1(PET BLOCK SIZE
BMOVEIT1P3C	400175'	201 01 0 14 000002 		MOVEI	T1,2(P3)	;SET BLOCK ADR
BPUSHJPPMEM%%PMEM%%C	400176'	260 17 0 00 400167*		PUSHJ	P,PMEM%%##	;RETURN EXTRRA SPACE
BC									;
BFUNALCHRLIT1P2C	400177'	505 01 0 13 000000 	FUNALC:	HRLI	T1,0(P2)	;SET UP BLT POINTER
BHRRIT1P2C	400200'	541 01 0 13 000001 		HRRI	T1,1(P2)	;TO CLEAR ALLOCATED BLOCK
BSETZMP2C	400201'	402 00 0 13 000000 		SETZM	0(P2)		;CLEAR FIRST WORD
BBLTT1P3C	400202'	251 01 0 14 000000 		BLT	T1,0(P3)	;CLEAR ALLOCATED CORE
BFUNST0TDZAP3P3C	400203'	634 14 0 00 000014 	FUNST0:	TDZA	P3,P3		;SET STATUS 0
BFUNST2MOVEIP3C	400204'	201 14 0 00 000002 	FUNST2:	MOVEI	P3,2		;SET STATUS 2
BC					;**;[506] Delete @ FUNST2+1L	JNG	3-Dec-75
BPOPJPC	400205'	263 17 0 00 000000 		POPJ	P,		;RETURN TO USER
BC
BC
BC					;**;[512] Insert @ FUNST2+3L	JNG	12-Dec-75
BFMTZAPHRRZT1FMT.DYP4C	400206'	550 01 0 15 000102 	FMTZAP:	HRRZ	T1,FMT.DY(P4)	;[512] GET ADDR OF FORMAT LIST
BJUMPET1FUNST2C	400207'	322 01 0 00 400204'		JUMPE	T1,FUNST2	;[512] IF NONE, USER IS OUT OF LUCK
BHLLZSFMT.DYP4C	400210'	513 00 0 15 000102 		HLLZS	FMT.DY(P4)	;[512] MARK FORMAT LIST GONE
BADDIT1C	400211'	271 01 0 00 000001 		ADDI	T1,1		;[512] OFFSET FOR PMEM%%
BPUSHJPPMEM%%C	400212'	260 17 0 00 400176*		PUSHJ	P,PMEM%%	;[512] DELETE THEM ALL
BJRSTFUNGA5C	400213'	254 00 0 00 400046'		JRST	FUNGA5		;[512] NO RE-TRY THE ALLOCATION
BC					;HERE IF SIZE IS ILLEGAL
BC
BREPEATC					REPEAT	0,<			;[506] THIS HACK NO LONGER NEEDED
BC					
BC					;IF IT IS FIRST CALL ALLOCATE ALL OF FREE SPACE ABOVE ADDRESS
BC					;OTHERWISE GIVE ERROR RETURN
BC					
BC					FUNGAI:	HRRZ	T1,FRE.DY(P4)	;[333] GET FREE CORE POINTER
BC						JUMPN	T1,FUNGA3	;[333] NOT FIRST TIME
BC						MOVEI	P3,100		;[333] A RANDOM NUMBER
BC						MOVEM	P3,0(G1)	;[333] SET ARGUMENT BACK FOR USER
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-6
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION GAD - GET CORE AT SPECIFIED ADDRESS

 BC						CAML	P2,.JBREL##	;[333] IS BASE IN CORE?
BC						JRST	FUNGAX		;[333] NO, EXPAND AS BEFORE
BC						MOVE	P3,.JBREL##	;[333] HIGHEST ADDRESS WE NEED
BC						MOVE	T1,P3		;[333] BUT MUST CALCULATE LENGTH
BC						SUBI	T1,-1(P2)	;[333] THAT WE WILL ALLOCATE
BC						MOVEM	T1,0(G1)	;[333] AND STORE FOR USER
BC						MOVSS	FRE.DY(P4)	;[333] SWAP BACK TO GET SPACE FROM OTS
BC						PUSHJ	P,FUNDFM	;[333] GET THE TOP OF CORE
BC						MOVSS	FRE.DY(P4)	;[333] FUNDFM SWAPPED IT
BC						POPJ	P,		;[333] RETURN
BC					
BC					>	;[506] END REPEAT 0
BC
BC
BC					;**;[506] Insert @ FUNGAI+15L	JNG	3-Dec-75
BFUNGAIAOJNP3FUNST3C	400214'	346 14 0 00 400241'	FUNGAI:	AOJN	P3,FUNST3	;[506] JUST PLAIN ILLEGAL UNLESS -1
BMOVEIP3C	400215'	201 14 0 00 000010 		MOVEI	P3,10		;[506] BE COMPATIBLE WITH OLD OVRLAY
BMOVEMP3G1C	400216'	202 14 0 06 000000 		MOVEM	P3,(G1)		;[506] BY JUST ALLOCATING 10 WORDS
BJRSTFUNGAXC	400217'	254 00 0 00 400043'		JRST	FUNGAX		;[506] VIA THE STANDARD ENTRY POINT
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-7
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION COR - GET CORE AT ANY ADDRESS

BSUBTTLC						SUBTTL	FUNCTION COR - GET CORE AT ANY ADDRESS
BC
BC					;FUNCTION COR - GET CORE FROM ANY ADDRESS
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	ADDRESS OF BLOCK ALLOCATED
BC					;ARG2:	SIZE OF BLOCK TO ALLOCATE
BC					;
BC					;STATUS 0:	CORE ALLOCATED
BC					;STATUS 3:	ILLEGAL ARGUMENT
BC
BC					;**;[506] Delete @ FUNCOR	JNG	3-Dec-75
BFUNCORPUSHJPFUNRG2C	400220'	260 17 0 00 400441'	FUNCOR:	PUSHJ	P,FUNRG2	;[506] [251] LOCATE SECOND ARGUMENT
BSKIPLET1G1C	400221'	333 01 0 06 000000 		SKIPLE	T1,0(G1)	;LOAD SIZE OF BLOCK
BTLNET1C	400222'	603 01 0 00 777777 		TLNE	T1,-1		;POSITIVE 18 BIT ADDRESS
BPJRSTFUNST3C	400223'	254 00 0 00 400241'		PJRST	FUNST3		;ILLEGAL ARGUMENT
BMOVEIT0T1C	400224'	201 00 0 01 777777 		MOVEI	T0,-1(T1)	;GMEM%% ADDS A WORD
BC					;**;[477] Insert @ FUNCR1+6L	JNG	22-Nov-75
BSKIPNT0C	400225'	336 00 0 00 000000 		SKIPN	T0		;[477] USER REQUEST ONE WORD?
BMOVEIT0C	400226'	201 00 0 00 000001 		MOVEI	T0,1		;[477] YES, GIVE HIM 2
BC					;**;[514] Replace @ FUNCOR+7L	JNG	11-Feb-76
BPUSHPACC.SVT0P4C	400227'	261 17 0 15 000000 		PUSH	P,ACC.SV+T0(P4)	;[514] CAN BE DESTROYED BY ALCOR%
BC					;**; [650]	CHANGE AT FUNCOR+9L	SWG	21-MAR-77
BPUSHJPFMEM%%FMEM%%C	400230'	260 17 0 00 000000*		PUSHJ	P,FMEM%%##	;[650][514] CALL GMEM%%, T1=-1 IF ERROR
BPOPPACC.SVT0P4C	400231'	262 17 0 15 000000 		POP	P,ACC.SV+T0(P4)	;[514] RESTORE USER'S AC 0
BJUMPLT1FUNST1C	400232'	321 01 0 00 400240'		JUMPL	T1,FUNST1	;[514] GIVE ERROR IF NONE AVAILABLE
BMOVEIP3T1C	400233'	201 14 0 01 777777 		MOVEI	P3,-1(T1)	;REMOVE FOROTS
BSETZMP3C	400234'	402 00 0 14 000000 		SETZM	0(P3)		;CONTROL WORD
BPUSHJPFUNRG1C	400235'	260 17 0 00 400442'		PUSHJ	P,FUNRG1	;LOCATE FIRST ARGUMENT
BHRRZMP3G1C	400236'	552 14 0 06 000000 		HRRZM	P3,0(G1)	;STORE ADR OF BLOCK
BPJRSTFUNST0C	400237'	254 00 0 00 400203'		PJRST	FUNST0		;SET STATUS 0 AND RETURN
BC
BFUNST1SKIPAP3FUNCO0C	400240'	334 14 0 00 400242'	FUNST1:	SKIPA	P3,FUNCO0	;SET STATUS 1
BFUNST3MOVEIP3C	400241'	201 14 0 00 000003 	FUNST3:	MOVEI	P3,3		;SET STATUS 3
BC					;**;[506] Delete @ FUNST3+1L	JNG	3-Dec-75
BFUNCO0POPJPC	400242'	263 17 0 00 000001 	FUNCO0:	POPJ	P,1		;RETURN
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-8
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION RAD - RETURN CORE AT ADDRESS

BSUBTTLC						SUBTTL	FUNCTION RAD - RETURN CORE AT ADDRESS
BC
BC					;FUNCTION RAD - RETURN CORE AT ADDRESS
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	ADDRESS OF BLOCK TO BE RETURNED
BC					;ARG2:	SIZE OF BLOCK TO BE RETURNED
BC					;
BC					;STATUS 0:	CORE DEALLOCATED
BC					;STATUS 1:	CORE NOT DEALLOCATABLE
BC					;STATUS 3:	ILLEGAL ARGUMENT
BC
BC					;**;[506] Delete @ FUNRAD	JNG	3-Dec-75
BFUNRADPUSHJPFUNRG1C	400243'	260 17 0 00 400442'	FUNRAD:	PUSHJ	P,FUNRG1	;[506] [251] LOCATE FIRST ARGUMENT
BSKIPLEP2G1C	400244'	333 13 0 06 000000 		SKIPLE	P2,0(G1)	;LOAD CORE ADR
BTLNEP2C	400245'	603 13 0 00 777777 		TLNE	P2,-1		;POSITIVE 18 BIT ADDRESS
BPJRSTFUNST3C	400246'	254 00 0 00 400241'		PJRST	FUNST3		;ILLEGAL ARGUMENT
BPUSHJPFUNRG2C	400247'	260 17 0 00 400441'		PUSHJ	P,FUNRG2	;LOCATE SECOND ARGUMENT
BSKIPLEP3G1C	400250'	333 14 0 06 000000 		SKIPLE	P3,0(G1)	;LOAD CORE SIZE
BTLNEP3C	400251'	603 14 0 00 777777 		TLNE	P3,-1		;POSITIVE 18 BIT ADDRESS
BPJRSTFUNST3C	400252'	254 00 0 00 400241'		PJRST	FUNST3		;ILLEGAL ARGUMENT
BC					;**;[477] Insert @ FUNRA1+9L	JNG	22-Nov-75
BCAINP3C	400253'	306 14 0 00 000001 		CAIN	P3,1		;[477] RETURNING 1 WORD?
BMOVEIP3C	400254'	201 14 0 00 000002 		MOVEI	P3,2		;[477] YES, WE GAVE HIM 2
BIFDEFFT$22C					    IFDEF FT$22,<
BPUSHJPLA1022C	400255'	260 17 0 00 400105'		PUSHJ	P,LA1022	;LOAD T1 WITH ".JBREL" IF 1022
BC					    >
BHRRZT1.JBREL.JBRELC	400256'	550 01 0 00 400133*		 HRRZ	T1,.JBREL##	;LOAD LAST LEGAL ADR
BADDIP3P2C	400257'	271 14 0 13 777777 		ADDI	P3,-1(P2)	;COMPUTE LAST ADR IN BLOCK
BTLNNP3C	400260'	607 14 0 00 777777 		TLNN	P3,-1		;POSITIVE 18 BIT ADDRESS
BCAILEP3T1C	400261'	303 14 0 01 000000 		CAILE	P3,0(T1)	;LEGAL ADDRESS
BPJRSTFUNST3C	400262'	254 00 0 00 400241'		PJRST	FUNST3		;ILLEGAL ARGUMENT
BMOVEIT2FRE.DYP4C	400263'	201 02 0 15 000101 		MOVEI	T2,FRE.DY(P4)	;LOCATE FREE CORE LIST
BHRRZT1T2C	400264'	550 01 0 02 000000 		HRRZ	T1,0(T2)	;ANY HEAP LEFT
BJUMPET1FUNRA4C	400265'	322 01 0 00 400300'		JUMPE	T1,FUNRA4	;NO - VALID DEALLOCATION
BFUNRA3HLRZT3T1C	400266'	554 03 0 01 000000 	FUNRA3:	HLRZ	T3,0(T1)	;LOAD SIZE OF BLOCK
BADDIT3T1C	400267'	271 03 0 01 777777 		ADDI	T3,-1(T1)	;COMPUTE LAST ADR OF BLOCK
BMOVSIT4CAIGEP3T1C	400270'	205 04 0 00 305601 		MOVSI	T4,(CAIGE P3,0(T1))	;FREE BLOCK STARTS FIRST
BCAILP2T1C	400271'	301 13 0 01 000000 		CAIL	P2,0(T1)		;WHICH BLOCK STARTS FIRST
BMOVSIT4CAILEP2T3C	400272'	205 04 0 00 303543 		MOVSI	T4,(CAILE P2,0(T3))	;TEST BLOCK STARTS FIRST
BXCTT4C	400273'	256 00 0 00 000004 		XCT	T4		;DO BLOCKS OVERLAP
BSKIPAT2T2C	400274'	334 02 0 02 000000 		SKIPA	T2,0(T2)	;NO - TEST NEXT BLOCK
BPJRSTFUNST1C	400275'	254 00 0 00 400240'		PJRST	FUNST1		;SET STATUS 1 AND RETURN
BHRRZT1T2C	400276'	550 01 0 02 000000 		HRRZ	T1,0(T2)	;LOAD ADR OF NEXT BLOCK
BJUMPNT1FUNRA3C	400277'	326 01 0 00 400266'		JUMPN	T1,FUNRA3	;TEST ALL BLOCKS
BFUNRA4MOVEP3G1C	400300'	200 14 0 06 000000 	FUNRA4:	MOVE	P3,0(G1)	;RELOAD CORE SIZE
BC					;**;[477] Insert @ FUNRA4+1L	JNG	22-Nov-75
BCAINP3C	400301'	306 14 0 00 000001 		CAIN	P3,1		;[477] GIVING BACK 1 WORD?
BMOVEIP3C	400302'	201 14 0 00 000002 		MOVEI	P3,2		;[477] YES, HE REALLY MEANT 2
BHRLZMP3P2C	400303'	516 14 0 13 000000 		HRLZM	P3,0(P2)	;BUILD FOROTS CONTROL WORD
BMOVEIT1P2C	400304'	201 01 0 13 000001 		MOVEI	T1,1(P2)	;BUILD BLOCK POINTER
BPUSHJPPMEM%%PMEM%%C	400305'	260 17 0 00 400212*		PUSHJ	P,PMEM%%##	;RETURN CORE BLOCK
BC									;CLEAR ENCODED FORMATS IN BLOCK
BADDIP3P2C	400306'	271 14 0 13 777777 		ADDI	P3,-1(P2)	;LOCATE END OF BLOCK
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-9
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION RAD - RETURN CORE AT ADDRESS

BMOVEIP1FMT.DYP4C	400307'	201 12 0 15 000102 		MOVEI	P1,FMT.DY(P4)	;LOCATE LIST OF ENCODED FORMATS
BC					;**;[506] Delete @ FUNRA4+8L	JNG	3-Dec-75
BFUNRA0HRRZT1P1C	400310'	550 01 0 12 000000 	FUNRA0:	HRRZ	T1,0(P1)	;LOCATE FORMAT POINTED TO BY LINK AT P1
BC										;[245] AT END LIST
BC					;**;[511] Change @ FUNRA0+2L	JNG	8-Dec-75
BJUMPET1FUNGC0C	400311'	322 01 0 00 400334'		JUMPE	T1,FUNGC0	;[511] [245] SET STATUS 0 AND RETURN
BHRRZT2T1C	400312'	550 02 0 01 000001 		HRRZ	T2,1(T1)	;LOAD FORMAT ADR
BCAILT2P2C	400313'	301 02 0 13 000000 		CAIL	T2,0(P2)	;BELOW OR
BCAILET2P3C	400314'	303 02 0 14 000000 		CAILE	T2,0(P3)	;ABOVE DELETED BLOCK
BJRSTFUNRA2C	400315'	254 00 0 00 400324'		JRST	FUNRA2		;YES - RETAIN ENCODING
BC									;DELETE ENCODING
BMOVET2T1C	400316'	200 02 0 01 000000 		MOVE	T2,0(T1)	;LOAD LINK WORD
BHRRMT2P1C	400317'	542 02 0 12 000000 		HRRM	T2,0(P1)	;LINK OVER THIS BLOCK
BADDIT1C	400320'	271 01 0 00 000001 		ADDI	T1,1		;SET POINTER FOR PMEM%%
BHLLZST1C	400321'	513 00 0 01 777777 		HLLZS	-1(T1)		;CLEAR POINTER
BPUSHJPPMEM%%PMEM%%C	400322'	260 17 0 00 400305*		PUSHJ	P,PMEM%%##	;RETURN ENCODED LIST
BJRSTFUNRA0C	400323'	254 00 0 00 400310'		JRST	FUNRA0		;CHECK NEXT ENCODING
BC									;
BFUNRA2HRRZP1P1C	400324'	550 12 0 12 000000 	FUNRA2:	HRRZ	P1,0(P1)	;FIND NEXT ENCODING
BJRSTFUNRA0C	400325'	254 00 0 00 400310'		JRST	FUNRA0		;REPEAT FOR NEXT ENCODING
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-10
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION GCH - GET AN I/O CHANNEL

BSUBTTLC						SUBTTL	FUNCTION GCH - GET AN I/O CHANNEL
BC
BC					;FUNCTION GCH - GET AN I/O CHANNEL
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	CHANNEL # ALLOCATED
BC					;ARG2:	IGNORED
BC					;
BC					;STATUS 0:	CHANNEL ALLOCATED
BC					;STATUS 1:	NO CHANNELS AVAILABLE
BC
BFUNGCHPUSHJPFUNRG1C	400326'	260 17 0 00 400442'	FUNGCH:	PUSHJ	P,FUNRG1	;LOCATE ARG1
BJSPP1GT.CHNGT.CHNC	400327'	265 12 0 00 000000*		JSP	P1,GT.CHN##	;[265] GET A CHANNEL
BJRSTFUNGC1C	400330'	254 00 0 00 400335'		  JRST	FUNGC1		;NO CHANNELS AVAILABLE
BHRRZMT1G1C	400331'	552 01 0 06 000000 		HRRZM	T1,0(G1)	;STORE CHANNEL #
BADDIT1CHN.TBP4C	400332'	271 01 0 15 000041 		ADDI	T1,CHN.TB(P4)	;POINT TO THE CHANNEL TABLE
BSETOMT1C	400333'	476 00 0 01 000000 		SETOM	0(T1)		;SET CHANNEL IN USE
BFUNGC0TDZAP3P3C	400334'	634 14 0 00 000014 	FUNGC0:	TDZA	P3,P3		;SET STATUS 0
BFUNGC1MOVEIP3C	400335'	201 14 0 00 000001 	FUNGC1:	MOVEI	P3,1		;SET STATUS 1
BPOPJPC	400336'	263 17 0 00 000000 		POPJ	P,		;RETURN
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-11
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION RCH - RETURN AN I/O CHANNEL

BSUBTTLC						SUBTTL	FUNCTION RCH - RETURN AN I/O CHANNEL
BC					;FUNCTION RCH - RETURN AN I/O CHANNEL
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	CHANNEL # TO BE RETURNED
BC					;ARG2:	IGNORED
BC					;
BC					;STATUS 0:	CHANNEL RETURNED
BC					;STATUS 1:	INVALID OR NON-USER CHANNEL
BC
BFUNRCHPUSHJPFUNRG1C	400337'	260 17 0 00 400442'	FUNRCH:	PUSHJ	P,FUNRG1	;LOCATE ARG1
BSKIPLET1G1C	400340'	333 01 0 06 000000 		SKIPLE	T1,(G1)		;LOAD CHANNEL #
BCAILET1C	400341'	303 01 0 00 000017 		CAILE	T1,17		;MUST BE BETWEEN 0 AND 20
BPJRSTFUNGC1C	400342'	254 00 0 00 400335'		PJRST	FUNGC1		;CANNOT RETURN
BADDIT1CHN.TBP4C	400343'	271 01 0 15 000041 		ADDI	T1,CHN.TB(P4)	;RELOCATE TO CHANNEL TABLE
BSETCMT0T1C	400344'	460 00 0 01 000000 		SETCM	T0,0(T1)	;USER CHANNEL
BJUMPNT0FUNGC1C	400345'	326 00 0 00 400335'		JUMPN	T0,FUNGC1	;NO - CANNOT RETURN
BSETZBP3T1C	400346'	403 14 0 01 000000 		SETZB	P3,0(T1)	;CLEAR CHANNEL TABLE
BPOPJPC	400347'	263 17 0 00 000000 		POPJ	P,		;SET STATUS 0 AND RETURN
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-12
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION GOT - GET CORE FROM OTS LIST

BSUBTTLC						SUBTTL	FUNCTION GOT - GET CORE FROM OTS LIST
BC
BC					;FUNCTION GOT - GET CORE FROM OTS LIST
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	ADDRESS OF BLOCK ALLOCATED
BC					;ARG2:	SIZE OF BLOCK TO ALLOCATE
BC					;
BC					;STATUS 0:	CORE ALLOCATED
BC					;STATUS 3:	ILLEGAL ARGUMENT
BC
BC					;**;[506] Replace @ FUNGOT	JNG	3-Dec-75
BC
BFUNCORFUNGOTC			400220'			FUNGOT==FUNCOR		;[506] USE COR FUNCTION
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-13
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION ROT  - RETURN CORE TO OTS LIST

BSUBTTLC						SUBTTL	FUNCTION ROT  - RETURN CORE TO OTS LIST
BC
BC					;FUNCTION ROT - RETURN CORE TO OTS LIST
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	ADDRESS OF BLOCK TO BE RETURNED
BC					;ARG2:	SIZE OF BLOCK TO BE RETURNED
BC					;
BC					;STATUS 0:	CORE DEALLOCATED
BC					;STATUS 1:	CORE NOT DEALLOCATABLE
BC					;STATUS 3:	ILLEGAL ARGUMENT
BC
BC					;**;[506] Replace @ FUNROT	JNG	3-Dec-75
BC
BFUNRADFUNROTC			400243'			FUNROT==FUNRAD		;[506] USE RAD FUNCTION
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-14
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION RNT - RETURN INITIAL RUNTIME FROM OTS

BSUBTTLC						SUBTTL	FUNCTION RNT - RETURN INITIAL RUNTIME FROM OTS
BC
BC					;FUNCTION RNT - RETURN INITIAL RUNTIME FROM OTS
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	RUNTIME FROM OTS
BC					;ARG2:	IGNORED
BC					;
BC					;STATUS 0:	RUNTIME RETURNED
BC					;STATUS 1:	RUNTIME NOT AVAILABLE
BC
BFUNRNTPUSHJPFUNRG1C	400350'	260 17 0 00 400442'	FUNRNT:	PUSHJ	P,FUNRG1	;[302] LOCATE FIRST ARGUMENT
BMOVET1RUN.TMP4C	400351'	200 01 0 15 000031 		MOVE	T1,RUN.TM(P4)	;[302] GET RUNTIME FROM OTS
BMOVEMT1G1C	400352'	202 01 0 06 000000 		MOVEM	T1,0(G1)	;[302] STORE
BPJRSTFUNGC0C	400353'	254 00 0 00 400334'		PJRST	FUNGC0		;[302] OK RETURN
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-15
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION IFS - RETURN DEV:FILE[PPN] FROM OTS

BSUBTTLC						SUBTTL	FUNCTION IFS - RETURN DEV:FILE[PPN] FROM OTS
BC
BC					;FUNCTION IFS - RETURN DEV:FILE[PPN] FROM OTS
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	DEVICE
BC					;ARG2:	FILE NAME
BC					;ARG3:	[PPN]
BC					;
BC					;STATUS 0:	OK
BC					;STATUS 1:	ERROR
BC
BFUNIFSPUSHJPFUNRG1C	400354'	260 17 0 00 400442'	FUNIFS:	PUSHJ	P,FUNRG1	;[311] LOCATE FIRST ARGUMENT
BMOVET1REGS.2P4C	400355'	200 01 0 15 000130 		MOVE	T1,REGS.2(P4)	 ;[311] GET DEVICE
BMOVEMT1G1C	400356'	202 01 0 06 000000 		MOVEM	T1,0(G1)	;[311] STORE
BPUSHJPFUNRG2C	400357'	260 17 0 00 400441'		PUSHJ	P,FUNRG2	;[311] LOCATE SECOND ARGUMENT
BMOVET1REGS.0P4C	400360'	200 01 0 15 000126 		MOVE	T1,REGS.0(P4)	;[311] FILE NAME
BMOVEMT1G1C	400361'	202 01 0 06 000000 		MOVEM	T1,0(G1)	;[311] STORE
BMOVEIT2FN.RG3C	400362'	201 02 0 00 000005 		MOVEI	T2,FN.RG3	;[311] LOCATE THIRD ARGUMENT
BPUSHJPFUNADRC	400363'	260 17 0 00 400443'		PUSHJ	P,FUNADR	;[311]
BMOVET1REGS.1P4C	400364'	200 01 0 15 000127 		MOVE	T1,REGS.1(P4)	;[311] PPN
BMOVEMT1G1C	400365'	202 01 0 06 000000 		MOVEM	T1,0(G1)	;[311] STORE
BPJRSTFUNGC0C	400366'	254 00 0 00 400334'		PJRST	FUNGC0		;[311] OK RETURN
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-16
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION CBC - CUT BACK CORE IF POSSIBLE

BSUBTTLC						SUBTTL	FUNCTION CBC - CUT BACK CORE IF POSSIBLE
BC
BC					;FUNCTION CBC - CUT BACK CORE IF POSSIBLE
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;
BC					;STATUS 0:	ALWAYS
BC
BC					;**;[506] Delete @ FUNCBC	JNG	3-Dec-75
BFUNCBCPUSHJPDMEM%%DMEM%%C	400367'	260 17 0 00 000000*	FUNCBC:	PUSHJ	P,DMEM%%##	;[311] DEFRAGMENT CORE
BMOVEIT3FRE.DYP4C	400370'	201 03 0 15 000101 		MOVEI	T3,FRE.DY(P4)	;[311] GET FREE CORE LIST
BMOVET2T3C	400371'	200 02 0 00 000003 		MOVE	T2,T3		;[311] PREVIOUS ALSO
BIFDEFFT$22C					    IFDEF FT$22,<
BHRRZT4.JBREL.JBRELC	400372'	550 04 0 00 400256*		HRRZ	T4,.JBREL##	;LOAD WITH .JBREL
BPUSHJPLA1022C	400373'	260 17 0 00 400105'		PUSHJ	P,LA1022	;OR LOAD WITH 1022'S ".JBREL"
BCAIAC	400374'	304 00 0 00 000000 		 CAIA			;    ..
BMOVET4T1C	400375'	200 04 0 00 000001 		MOVE	T4,T1		;    ..
BC					    >
BFUNCB0JUMPET3FUNST0C	400376'	322 03 0 00 400203'	FUNCB0:	JUMPE	T3,FUNST0	;[311] GIVE IT IF NO FORWARD LINK
BMOVET1T2C	400377'	200 01 0 00 000002 		MOVE	T1,T2		;[311] PUT PREVIOUS PREVIOUS IN T1
BMOVET2T3C	400400'	200 02 0 00 000003 		MOVE	T2,T3		;[311] PUT PREVIOUS IN T2
BHRRZT3T2C	400401'	550 03 0 02 000000 		HRRZ	T3,(T2)		;[311] ANY LEFT
BHLRZP1T2C	400402'	554 12 0 02 000000 		HLRZ	P1,(T2)		;[311] GET SIZE
BCAIGEP1C	400403'	305 12 0 00 001000 		CAIGE	P1,1000		;[311] DON'T WASTE TIME IF LESS THAN A PAGE
BJRSTFUNCB0C	400404'	254 00 0 00 400376'		JRST	FUNCB0		;[311][446] SINCE WE CANNOT REDUCE BY LESS
BADDIP1T2C	400405'	271 12 0 02 777777 		ADDI	P1,-1(T2)	;[311] FIND END
BIFDEFFT$22C					    IFDEF FT$22,<
BCAMEP1T4C	400406'	312 12 0 00 000004 		CAME	P1,T4		;LESS THAN TOP?
BC					    >
BIFNDEFFT$22C					    IFNDEF FT$22,<
BC						CAME	P1,.JBREL##	;[311] LESS THAN TOP?
BC					    >
BJRSTFUNCB0C	400407'	254 00 0 00 400376'		JRST	FUNCB0		;[311] YES, IGNORE THIS BLOCK
BMOVEIP1T2C	400410'	201 12 0 02 777777 		MOVEI	P1,-1(T2)	;[311] LAST WORD WE NEED
BIFDEFFT$22C					    IFDEF FT$22,<
BHLRET3.JBCST.JBCSTC	400411'	574 03 0 00 400105*		HLRE	T3,.JBCST##	;SEE IF 1022
BAOJET3NO1022C	400412'	342 03 0 00 400421'		AOJE	T3,NO1022	;NOT 1022
BHLLZST1C	400413'	513 00 0 01 000000 		HLLZS	(T1)		;CLEAR FORWARD POINTER NOW
BMOVEIT0T2C	400414'	201 00 0 02 777777 		MOVEI	T0,-1(T2)	;DETERMINE NUMBER OF WORDS TO
BSUBIT0T4C	400415'	275 00 0 04 000000 		SUBI	T0,(T4)		;DEALLOCATE
BPUSHJPT3C	400416'	260 17 0 03 777775 		PUSHJ	P,-3(T3)	;DEALLOCATE CORE
BJFCLC	400417'	255 00 0 00 000000 		 JFCL			;(SHOULDN'T NOT BE ABLE TO)
BPJRSTFUNST0C	400420'	254 00 0 00 400203'		PJRST	FUNST0		;RETURN
BNO1022C	400421'				NO1022:
BC					    >
BCOREP1C	400421'	047 12 0 00 000011 		CORE	P1,		;[311]
BJRSTFUNST0C	400422'	254 00 0 00 400203'		  JRST	FUNST0		;[311] NO CHANGE IF WE FAILED
BCAMLET2.JBREL.JBRELC	400423'	313 02 0 00 400372*		CAMLE	T2,.JBREL##	;[311] INCASE WE GAVE IT ALL AWAY
BJRSTFUNCB1C	400424'	254 00 0 00 400431'		JRST	FUNCB1		;[311] JUST CLEAR PREVIOUS
BMOVEP1.JBRELC	400425'	200 12 0 00 400423*		MOVE	P1,.JBREL	;[311] TOP OF CORE
BSUBIP1T2C	400426'	275 12 0 02 777777 		SUBI	P1,-1(T2)	;[333] - START
BHRLMP1T2C	400427'	506 12 0 02 000000 		HRLM	P1,(T2)		;[311] NEW LENGTH
BJRSTFUNCB2C	400430'	254 00 0 00 400432'		JRST	FUNCB2		;[311] SETUP .JBFF
BC
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-17
FORFUN	MAC	 1-Dec-70 16:53		FUNCTION CBC - CUT BACK CORE IF POSSIBLE

BFUNCB1HLLZST1C	400431'	513 00 0 01 000000 	FUNCB1:	HLLZS	(T1)		;[311] CLEAR FORWARD POINTER
BFUNCB2MOVEP1.JBRELC	400432'	200 12 0 00 400425*	FUNCB2:	MOVE	P1,.JBREL	;[311] GET TOP OF CORE
BADDIP1C	400433'	271 12 0 00 000001 		ADDI	P1,1		;[311] MAKE SURE OUT OF BOUNDS
BMOVEMP1.JBFFC	400434'	202 12 0 00 400136*		MOVEM	P1,.JBFF	;[311]
BPJRSTFUNST0C	400435'	254 00 0 00 400203'		PJRST	FUNST0		;[311] OK RETURN
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-18
FORFUN	MAC	 1-Dec-70 16:53		RRS & WRS - READ/WRITE ROUTINE STATUS (RESERVED FOR DBMS) [571]

BSUBTTLC						SUBTTL	RRS & WRS - READ/WRITE ROUTINE STATUS (RESERVED FOR DBMS) [571]
BC
BC					;FUNCTION RRS - READ ROUTINE STATUS
BC					;         WRS - WRITE ROUTINE STATUS
BC					;CALL:	MOVEI	16,[ARGBLK]
BC					;	PUSHJ	17,FUNCT.
BC					;
BC					;ARG1:	GETS SET TO 0
BC					;
BC					;STATUS 0:	ALWAYS
BC
BFUNRRSC	400436'				FUNRRS:					;[571]
BFUNWRSC	400436'				FUNWRS:					;[571]
BPUSHJPFUNRG1C	400436'	260 17 0 00 400442'		PUSHJ	P,FUNRG1		;[571] GET FIRST ARGUMENT
BSETZMG1C	400437'	402 00 0 06 000000 		SETZM	0,0(G1)			;[571] SET FIRST ARG TO 0
BPJRSTFUNGC0C	400440'	254 00 0 00 400334'		PJRST	FUNGC0			;[571] 0 STATUS & EXIT
BC
BPAGEC						PAGE
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page 1-19
FORFUN	MAC	 1-Dec-70 16:53		ARGBLK MANIPULATION ROUTINES

BSUBTTLC						SUBTTL	ARGBLK MANIPULATION ROUTINES
BC
BC					;FUNADR - RETURN ADR OF ARGUMENT
BC					;CALL:	MOVEI	T2,OFFSET IN ARGBLK
BC					;	PUSHJ	P,FUNADR
BC					;	(RETURN)
BC					;
BC					; RETURN ADR IN G1
BC					; CLOBBERS P1, AND T1
BC					;
BFUNRG2SKIPAT2FUNAD1C	400441'	334 02 0 00 400450'	FUNRG2:	SKIPA	T2,FUNAD1	;LOAD ARG2 OFFSET
BFUNRG1MOVEIT2FN.RG1C	400442'	201 02 0 00 000003 	FUNRG1:	MOVEI	T2,FN.RG1	;LOAD ARG1 OFFSET
BFUNADRADDILT2C	400443'	271 16 0 02 000000 	FUNADR:	ADDI	L,0(T2)		;OFFSET ARGBLK
BJSPP1EFCTV.EFCTV.C	400444'	265 12 0 00 000000*		JSP	P1,EFCTV.##	;[265] COMPUTE EFFECTIVE ADDRESS
BTRNNG1C	400445'	606 06 0 00 777760 		TRNN	G1,-20		;IN AC SAVE AREA
BADDIG1ACC.SVP4C	400446'	271 06 0 15 000000 		ADDI	G1,ACC.SV(P4)	;YES - RELOCATE TO AC SAVE AREA
BSUBILT2C	400447'	275 16 0 02 000000 		SUBI	L,0(T2)		;RESET ARGBLK
BFUNAD1POPJPFN.RG2C	400450'	263 17 0 00 000004 	FUNAD1:	POPJ	P,FN.RG2	;RETURN
BC
BENDC						END

NO ERRORS DETECTED

HI-SEG. BREAK IS 400451
PROGRAM BREAK IS 000000
CPU TIME USED 03:07.323

16P CORE USED
FORFUN	%5A(650) - OVERLAY FUNCTION MODULE FOR FOROTS	MACRO %53A(1155) 11:42  2-Sep-82 Page S-1
FORFUN	MAC	 1-Dec-70 16:53		SYMBOL TABLE

ACC.SV		000000	spd	FUNROT		400243'	spd	
CHN.TB		000041	spd	FUNRRS		400436'		
CONCEA	777777	777777	spd	FUNST0		400203'		
CORE	047000	000011		FUNST1		400240'		
DMEM%%		400367'	ext	FUNST2		400204'		
EFCTV.		400444'	ext	FUNST3		400241'		
FA1022		400076'		FUNWRS		400436'		
FMEM%%		400230'	ext	G1		000006		
FMT.DY		000102	spd	GT.CHN		400327'	ext	
FMTZAP		400206'		L		000016		
FN.ERR		000001	spd	LA1022		400105'		
FN.FUN		000000	spd	N1022		400112'		
FN.RG1		000003	spd	NO1022		400421'		
FN.RG2		000004	spd	P		000017		
FN.RG3		000005	spd	P1		000012		
FN.STS		000002	spd	P1022		400111'		
FRE.DY		000101	spd	P2		000013		
FT$22	777777	777777	sin	P3		000014		
FUN.ZZ		000015	spd	P4		000015		
FUNAD1		400450'		PJRST	254000	000000		
FUNADR		400443'		PMEM%%		400322'	ext	
FUNALC		400177'		REGS.0		000126	spd	
FUNCB0		400376'		REGS.1		000127	spd	
FUNCB1		400431'		REGS.2		000130	spd	
FUNCB2		400432'		RUN.TM		000031	spd	
FUNCBC		400367'		SAVE.		400016'	ext	
FUNCO0		400242'		SW$22	777777	777777	sin	
FUNCOR		400220'		T0		000000		
FUNCT%		400016'	ent	T1		000001		
FUNDFM		400141'		T2		000002		
FUNDSP		400000'		T3		000003		
FUNGA0		400144'		T4		000004		
FUNGA1		400155'		VERFUN	000500	000650	spd	
FUNGA2		400170'		X1022		400137'		
FUNGA3		400133'		.JBCST		400411'	ext	
FUNGA4		400132'		.JBFF		400434'	ext	
FUNGA5		400046'		.JBREL		400432'	ext	
FUNGAD		400033'		
FUNGAI		400214'		
FUNGAX		400043'		
FUNGC0		400334'		
FUNGC1		400335'		
FUNGCH		400326'		
FUNGOT		400220'	spd	
FUNIFS		400354'		
FUNILL		400031'		
FUNRA0		400310'		
FUNRA2		400324'		
FUNRA3		400266'		
FUNRA4		400300'		
FUNRAD		400243'		
FUNRCH		400337'		
FUNRG1		400442'		
FUNRG2		400441'		
FUNRNT		400350'		
   eL7^