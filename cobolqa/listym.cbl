**********************************************************************
*
*	INVENTORY SYSTEM LISTING ROUTINES
*
**********************************************************************

IDENTIFICATION DIVISION.
PROGRAM-ID. LISTYM.
AUTHOR. JIM WESTLAKE.
REMARKS. LIST ROUTINES FOR INVENTORY SYSTEM.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SPECIAL-NAMES.
	CHANNEL (1) IS TOP.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
	SELECT MAST-FILE ASSIGN TO DSK
	ACCESS MODE IS INDEXED
	SYMBOLIC KEY IS M-KEY
	RECORD KEY IS M-REC-KEY
	RECORDING MODE IS SIXBIT.

	SELECT SITE-FILE ASSIGN TO DSK
	ACCESS MODE IS INDEXED
	SYMBOLIC KEY IS S-KEY
	RECORD KEY IS S-REC-KEY
	RECORDING MODE IS SIXBIT.

	SELECT NAME-FILE ASSIGN TO DSK
	ACCESS MODE IS INDEXED
	SYMBOLIC KEY IS N-KEY
	RECORD KEY IS N-SITE-NO
	RECORDING MODE IS SIXBIT.

	SELECT HIST-FILE ASSIGN TO DSK
	ACCESS MODE IS INDEXED
	SYMBOLIC KEY IS H-KEY
	RECORD KEY IS H-REC-KEY
	RECORDING MODE IS SIXBIT.

	SELECT LIST-FILE ASSIGN  TO DSK
	ACCESS MODE IS SEQUENTIAL
	RECORDING MODE IS ASCII.

	SELECT LIST-SORT ASSIGN TO DSK DSK DSK DSK DSK DSK.

	SELECT HIST-SORT ASSIGN TO DSK DSK DSK DSK DSK DSK.
**********************************************************************
*
*	F I L E     D E S C R I P T I O N S
*
**********************************************************************

DATA DIVISION.
FILE SECTION.

FD	MAST-FILE
	COPY FDMAST.
FD	SITE-FILE
	COPY FDSITE.
FD	HIST-FILE
	COPY FDHIST.

FD	NAME-FILE
	COPY FDNAME.
FD	LIST-FILE
	BLOCK CONTAINS 4 RECORDS
	RECORD CONTAINS 132 CHARACTERS
	VALUE OF IDENTIFICATION IS LIST-FILE-NAME.

01	LIST-REC.
	02	L-PARTNO	PIC X(12).
	02	FILLER		PIC X(2).
	02	L-DESC		PIC X(21).
	02	FILLER		PIC X(3).
	02	L-VC		PIC X(2).
	02	FILLER		PIC X(2).
	02	L-VPN		PIC X(14).
	02	FILLER		PIC X(3).
	02	L-LOC		PIC X(5).
	02	FILLER		PIC X(3).
	02	L-MAX		PIC Z(4).
	02	FILLER		PIC X(2).
	02	L-ON-HAND	PIC Z(4).
	02	FILLER		PIC X(2).
	02	L-FLAG		PIC X(2).
	02	FILLER		PIC X(3).
	02	L-ORDER-INFO.
	  04	L-ORD-NO	PIC 9(4).
	  04	FILLER		PIC X(2).
	  04	L-ORD-QUAN	PIC ZZZ9.
	  04	FILLER		PIC X(3).
	  04	L-ORD-DATE	PIC X(8).
	02	FILLER		PIC X(3).
	02	L-OPT		PIC X(10).
	02	FILLER		PIC X(2).
	02	L-SITE-PARTNO	PIC X(11).
	02	FILLER		PIC X.

01	PRICE-LIST-REC.
	02	PL-PARTNO	PIC X(11).
	02	FILLER		PIC X(3).
	02	PL-DESC		PIC X(21).
	02	FILLER		PIC X(3).
	02	PL-VC		PIC X(2).
	02	FILLER		PIC X(2).
	02	PL-VPN		PIC X(14).
	02	FILLER		PIC X(3).
	02	PL-LOC		PIC X(5).
	02	FILLER		PIC X(3).
	02	PL-MAX		PIC Z(4).
	02	FILLER		PIC X(2).
	02	PL-ON-HAND	PIC Z(4).
	02	FILLER		PIC X(5).
	02	PL-PRICE	PIC ZZ,ZZZ.ZZ.
	02	FILLER		PIC X(4).
	02	PL-PRICE-EXT	PIC Z,ZZZ,ZZZ.ZZ.
******************************
*	LIST REC'S (CONT)
******************************

01	ORDER-LIST-REC.
	02	ORD-PARTNO	PIC X(11).
	02	FILLER		PIC X(2).
	02	ORD-MAST	PIC X(12).
	02	FILLER		PIC X(2).
	02	ORD-DESC	PIC X(21).
	02	FILLER		PIC X(2).
	02	ORD-VC		PIC X(2).
	02	FILLER		PIC X(2).
	02	ORD-VPN		PIC X(14).
	02	FILLER		PIC X(2).
	02	ORD-MAX		PIC Z(4).
	02	FILLER		PIC X(2).
	02	ORD-ON-HAND	PIC Z(4).
	02	FILLER		PIC X(4).
	02	ORD-QUAN	PIC Z(4).
	02	FILLER		PIC X(3).
	02	ORD-AVAIL	PIC Z(4).
	02	FILLER		PIC X(2).
	02	ORD-FLAG	PIC X(3).
	02	FILLER		PIC X(2).
	02	ORD-ORD-NO	PIC 9(4).
	02	FILLER		PIC X(2).
	02	ORD-ORD-DATE	PIC X(8).
******************************
*	LIST REC'S (CONT)
******************************

01	USE-LIST-REC.
	02	U-PARTNO	PIC X(12).
	02	FILLER		PIC X(2).
	02	U-DESC		PIC X(21).
	02	FILLER		PIC X(2).
	02	U-VC		PIC X(2).
	02	FILLER		PIC X(2).
	02	U-VPN		PIC X(14).
	02	FILLER		PIC X(2).
	02	U-SITE-MAX	PIC Z(4).
	02	U-FLAG		PIC X.
	02	FILLER		PIC X(2).
	02	U-PCT-6		PIC Z(4).
	02	U-PCT-X		PIC X.
	02	FILLER		PIC X(2).
	02	U-PRICE		PIC ZZ,ZZZ.99.
	02	FILLER		PIC X(5).
	02	U-USE-12	PIC ZZZZZ.
	02	FILLER		PIC X(2).
	02	U-UP-12		PIC ZZZ,ZZZ.99.
	02	FILLER		PIC X(2).
	02	U-USE-6		PIC ZZZZZ.
	02	FILLER		PIC X(2).
	02	U-UP-6		PIC ZZZ,ZZZ.99.
	02	FILLER		PIC X(2).
	02	U-CHANGE.
	  04	U-CHG-SIGN	PIC X.
	  04	U-CHG-QUAN	PIC ZZZZ.
	  04	U-CHG-PCT-SIGN	PIC X.
******************************
*	LIST REC'S (CONT)
******************************

01	MAST-LIST-REC.
	02	ML-PARTNO	PIC X(12).
	02	FILLER		PIC X(3).
	02	ML-DESC		PIC X(21).
	02	FILLER		PIC X(3).
	02	ML-VC		PIC X(2).
	02	FILLER		PIC X(2).
	02	ML-VPN		PIC X(14).
	02	FILLER		PIC X(3).
	02	ML-SITES	PIC Z(3).
	02	FILLER		PIC X(3).
	02	ML-PRICE	PIC ZZZZ.99.
	02	FILLER		PIC X(3).
	02	ML-RR		PIC X.
	02	FILLER		PIC X(3).
	02	ML-OPT		PIC X(10).
	02	FILLER		PIC X(4).
	02	ML-REC-QUAN	PIC Z(4).
	02	FILLER		PIC X(3).
	02	ML-REV-CREF	PIC X(12).
	02	FILLER		PIC X(3).
	02	ML-FLAG		PIC X.
	02	ML-CREF		PIC X.
******************************
*	SORT RECORDS
******************************

SD	LIST-SORT.
01	LIST-SORT-REC.
	02	LS-PARTNO.
	  04	LS-PN		PIC X(11).
	  04	LS-PL		PIC X.
	02	LS-SITE-PARTNO	PIC X(11).
	02	LS-DESC		PIC X(21).
	02	LS-VC		PIC X(2).
	02	LS-VPN		PIC X(14).
	02	LS-OPT		PIC X(10).
	02	LS-LOC		PIC X(5).
	02	LS-FLAG		PIC X.


SD	HIST-SORT.
01	HIST-SORT-REC.
	02	HS-KEY.
	  04	HS-SITE-NO	PIC 99.
	  04	HS-REC-PN-PL.
	    06	HS-PARTNO	PIC X(11).
	    06	HS-PL		PIC X.
	02	HS-QUAN		PIC 9999.
	02	HS-DATE		PIC 9999.
	02	HS-XFER		PIC X.
	02	HS-XFER-SITE	PIC 99.
**********************************************************************
*
*	W O R K I N G     S T O R A G E 
*
**********************************************************************

WORKING-STORAGE SECTION.
******************************
*	ACCUMULATORS
******************************
77	I		PIC 99   USAGE COMP.
77	X		PIC 9999 USAGE COMP.
77	Y		PIC 9999 USAGE COMP.
77	Z		PIC 9999 USAGE COMP.

77	WS-LINE			PIC 999 USAGE COMP.
01	WS-PAGE			PIC 999.
01	WS-PRICE-EXT		PIC 99999V99.
01	WS-SITE-TOTAL		PIC 9999999V99.
01	WS-GRAND-TOTAL		PIC 9999999V99.

01	USE-TOTALS.
	02	USE-12			PIC 9999.
	02	USE-12-TOT		PIC 99999.
	02	USE-12P-TOT		PIC 999999V99.
	02	USE-6			PIC 9999.
	02	USE-6-TOT		PIC 99999.
	02	USE-6P-TOT		PIC 999999V99.
	02	USE-F6			PIC 9999.
	02	USE-CHG			PIC 9999V99.
	02	USE-SITE-PCT	PIC 9999V99.
01	USE-SIGN		PIC X.


******************************
*	ISAM FILE KEYS
******************************

01	S-KEY.
	02	S-K-SITE-NO	PIC 99.
	02	S-K-PARTNO	PIC X(11).
	02	S-K-REC-NO	PIC 9.

01	H-KEY.
	02	H-K-PN-PL.
	  04	H-K-PARTNO	PIC X(11).
	  04	H-K-PL		PIC X.
	02	H-K-ENTRY-NO	PIC 9999.

01	M-KEY.
	02	M-K-PN-PL.
	  04	M-K-PARTNO	PIC X(11).
	  04	M-K-PL		PIC X.

01	N-KEY			PIC 99.
******************************
*	CONTROL & RESPONSE LOC'S
******************************

01	WS-MACRO-ARG.
	02	WS-MACRO-ARG-1.
	  04	FILLER		PIC X(5) USAGE DISPLAY-6.
	  04	WS-MACRO-ARG-N	PIC X    USAGE DISPLAY-6.
	02	WS-MACRO-ARG-2.
	  04	FILLER		PIC X(5) USAGE DISPLAY-6.
	  04	WS-MACRO-ARG-EN	PIC X    USAGE DISPLAY-6.
01	WS-ENA			PIC 9.
01	WS-ANS			PIC X.
01	RET-CODE		PIC 9.
01	WS-PARTNO		PIC X(11).
01	WS-QUAN			PIC S9999.
01	WS-ORD-NO		PIC 9999.
01	WS-LIST-FLAG		PIC X.

01	AGE-12.
	02	AGE-12-YEAR	PIC 9.
	02	AGE-12-DAY	PIC 999.
01	AGE-6.
	02	AGE-6-YEAR	PIC 9.
	02	AGE-6-DAY	PIC 999.
******************************
*	LISTING CONTROL LOC'S
******************************

01	LIST-FILE-NAME.
	02	WS-LIST-NAME.
	  04	WS-LIST-NAME-1	PIC X(4).
	  04	WS-LIST-NAME-2	PIC 99.
	02	WS-LIST-EXT	PIC X(3)  VALUE 'LST'.
01	WS-LIST-OPT-STRING.
	02	WS-LIST-OPT-OUT		PIC X.
	02	WS-LIST-OPT-REST	PIC X(9).

01	WS-LIST-SORT-ALL.
	02	WS-LIST-PARTNO		PIC X.
	02	WS-LIST-DESC		PIC X.
	02	WS-LIST-OPT		PIC X.
	02	WS-LIST-LOC		PIC X.
	02	WS-LIST-VC		PIC X.
01	WS-LIST-SORT-1 REDEFINES WS-LIST-SORT-ALL.
	02	WS-LIST-SORT		PIC X OCCURS 5 TIMES.

01	WS-LIST-CREF-ALL.
	02	WS-LIST-CREF		PIC X OCCURS 5 TIMES.

01	WS-LIST-ZERO-ALL.
	02	WS-LIST-ZERO		PIC X OCCURS 5 TIMES.

01	WS-LIST-SITE			PIC XX.
01	WS-LIST-SITE-NO			PIC 99.
01	WS-LIST-SITE-NEXT		PIC 99.
01	WS-LIST-OPT-COUNT		PIC 99.
******************************
*	DATE/TIME CONTROL LOCS.
******************************
01	WS-TEMP-DATE USAGE DISPLAY-7.
	02	WSTY		PIC 99.
	02	WSTM		PIC 99.
	02	WSTD		PIC 99.
	02	WSTH		PIC 99.
	02	WSTMIN		PIC 99.
	02	WSTSEC		PIC 99.
01	WS-DATE USAGE DISPLAY-7.
	02	WS-MONTH	PIC 99.
	02	FILLER		PIC X VALUE '-'.
	02	WS-DAY		PIC 99.
	02	FILLER		PIC X VALUE '-'.
	02	WS-YEAR.
		04 WS-YEAR-DIGIT-1	PIC 9.
		04 WS-YEAR-DIGIT-2	PIC 9.
01	JULIAN-DATE.
	02	JULIAN-YEAR	PIC 9.
	02	JULIAN-DAY	PIC 999.
01	DATE-TABLE-DATA.
	02	FILLER		PIC 999 VALUE ZERO.
	02	FILLER		PIC 999 VALUE 31.
	02	FILLER		PIC 999 VALUE 59.
	02	FILLER		PIC 999 VALUE 90.
	02	FILLER		PIC 999 VALUE 120.
	02	FILLER		PIC 999 VALUE 151.
	02	FILLER		PIC 999 VALUE 181.
	02	FILLER		PIC 999 VALUE 212.
	02	FILLER		PIC 999 VALUE 243.
	02	FILLER		PIC 999 VALUE 273.
	02	FILLER		PIC 999 VALUE 304.
	02	FILLER		PIC 999 VALUE 334.
	02	FILLER		PIC 999 VALUE 366.
01	DATE-TABLE REDEFINES DATE-TABLE-DATA.
	02	DATE-TBL	PIC 999 OCCURS 13 TIMES.


*FOLLOWING TO CONVERT BACK FROM JULIAN DATE

01	WS-JULIAN-DATE.
	02	WS-CONV-YEAR	PIC 9.
	02	WS-CONV-DAY	PIC 999.
01	WS-DATE-OUT.
	02	WS-MONTH-OUT	PIC 99.
	02	WS-D-SEP-1	PIC X.
	02	WS-DAY-OUT	PIC 99.
	02	WS-D-SEP-2	PIC X.
	02	WS-YEAR-OUT.
	  04	WS-YEAR-OUT-1	PIC 9.
	  04	WS-YEAR-OUT-2	PIC 9.
**********************************************************************
*
*	LISTING HEADERS
*
**********************************************************************

01	LIST-HDR-1.
	02	L-SORT	PIC X(4).
	02	FILLER		PIC X(2)  VALUE SPACES.
	02	LIST-CREF	PIC X.
	02	LIST-ZERO	PIC X.
	02	FILLER		PIC X(12) VALUE SPACES.
	02	LIST-DATE	PIC X(8).
	02	FILLER		PIC X(3)  VALUE '  <'.
	02	L-JULIAN-DATE	PIC 9(4).
	02	FILLER		PIC X(10) VALUE '>'.
	02	LIST-NAME	PIC X(9)  JUSTIFIED RIGHT.
	02	FILLER		PIC X(13) VALUE ' LISTING FOR '.
	02	LIST-SITE-NAME	PIC X(30).
	02	FILLER		PIC X(4)  VALUE '   ('.
	02	LIST-SITE-NO	PIC 99.
	02	FILLER		PIC X(21) VALUE ')'.
	02	FILLER		PIC X(5)  VALUE 'PAGE'.
	02	L-PAGE		PIC Z(3).

01	LIST-HDR-N		PIC X(132).

01	LIST-HDR-2.
	02	FILLER		PIC X(20) VALUE 'PART NUMBER   DESCRI'.
	02	FILLER		PIC X(20) VALUE 'PTION             VC'.
	02	FILLER		PIC X(20) VALUE '  VPN OR GENERIC'.
	02	FILLER		PIC X(20) VALUE 'LOC     MAX   O/H  *'.
	02	FILLER		PIC X(20) VALUE '*   ORD#  QUAN     D'.
	02	FILLER		PIC X(20) VALUE 'ATE     OPTION      '.
	02	FILLER		PIC X(12) VALUE 'SITE PARTNO'.

01	LIST-HDR-3.
	02	FILLER		PIC X(12) VALUE '******'.
	02	LIST-TOT-LINES	PIC Z(5).
	02	FILLER		PIC X(17) VALUE ' TOTAL LINE ITEMS'.

01	LIST-HDR-4.
	02	FILLER		PIC X(20) VALUE 'PART NUMBER   DESCRI'.
	02	FILLER		PIC X(20) VALUE 'PTION             VC'.
	02	FILLER		PIC X(20) VALUE '  VPN OR GENERIC'.
	02	FILLER		PIC X(20) VALUE 'LOC     MAX   O/H'.
	02	FILLER		PIC X(20) VALUE '     PRICE      EXT '.
	02	FILLER		PIC X(5)  VALUE 'PRICE'.

01	LIST-HDR-5.
	02	FILLER		PIC X(20) VALUE '******   GRAND TOTAL'.
******************************
*	LIST HDR'S (CONT)
******************************

01	LIST-HDR-6.
	02	FILLER		PIC X(20) VALUE 'PART NUMBER*  DESCRI'.
	02	FILLER		PIC X(20) VALUE 'PTION            VC '.
	02	FILLER		PIC X(18) VALUE ' VPN OR GENERIC'.
	02	H6-MAX		PIC X(7)  VALUE 'MAX'.
	02	H6-PERCENT	PIC X(4)  VALUE 'PCT6'.
	02	FILLER		PIC X(20) VALUE '      PRICE     12-M'.
	02	FILLER		PIC X(20) VALUE 'O    PRICE-12   6-MO'.
	02	FILLER		PIC X(13) VALUE '     PRICE-6'.
	02	FILLER		PIC X(8)  VALUE '  CHANGE'.

01	LIST-HDR-7.
	02	FILLER		PIC X(10) VALUE SPACES.
	02	H7-DATE		PIC X(8).
	02	FILLER		PIC X(4)  VALUE '   <'.
	02	H7-JULIAN-DATE	PIC 9(4).
	02	FILLER		PIC X(20) VALUE '>'.
	02	FILLER		PIC X(20) VALUE 'TYMAINT INVENTORY - '.
	02	FILLER		PIC X(20) VALUE 'MASTER FILE LISTING '.
	02	FILLER		PIC X(20) VALUE SPACES.
	02	FILLER		PIC X(20) VALUE '                 PAG'.
	02	FILLER		PIC X(2)  VALUE 'E '.
	02	H7-PAGE		PIC Z(3).

01	LIST-HDR-8.
	02	FILLER		PIC X(20) VALUE 'PART NUMBER*   DESCR'.
	02	FILLER		PIC X(20) VALUE 'IPTION             V'.
	02	FILLER		PIC X(20) VALUE 'C  VPN OR GENERIC  S'.
	02	FILLER		PIC X(20) VALUE 'ITES   PRICE    R   '.
	02	FILLER		PIC X(20) VALUE 'OPTION         REC  '.
	02	FILLER		PIC X(20) VALUE ' REV CREF P/N  FLGS '.

01	LIST-HDR-9.
	02	FILLER		PIC X(20) VALUE 'PART NUMBER  MAST PA'.
	02	FILLER		PIC X(20) VALUE 'RTNO*  DESCRIPTION  '.
	02	FILLER		PIC X(20) VALUE '          VC  VPN OR'.
	02	FILLER		PIC X(20) VALUE ' GENERIC   MAX   O/H'.
	02	FILLER		PIC X(20) VALUE '    QUAN  AVAIL  FLG'.
	02	H9-BO		PIC X(16) VALUE '  ORD#    DATE  '.
01	H9-BO-DATA		PIC X(16) VALUE '  ORD#    DATE  '.

01	LIST-HDR-10.
	02	FILLER		PIC X(7)  VALUE '*****  '.
	02	H10-LINES	PIC 9(4).
	02	FILLER		PIC X(12) VALUE ' ORDER LINES'.
**********************************************************************
*
*	P R O C E D U R E     D I V I S I O N
*
**********************************************************************

PROCEDURE DIVISION.
	MOVE SPACES TO WS-MACRO-ARG.
	ENTER MACRO INVINI USING WS-MACRO-ARG.
	IF WS-MACRO-ARG-1 NOT = 'RUN' OR WS-MACRO-ARG-EN NOT NUMERIC
		ENTER MACRO LOGOFF.
	MOVE WS-MACRO-ARG-EN TO WS-ENA.
	DISPLAY 'INVENTORY LISTING ROUTINES'.
	PERFORM DATE.
	DISPLAY WS-DATE '	<' JULIAN-DATE '>'.
	DISPLAY ' '.

PROC.
	DISPLAY 'PROCEDURE: ' WITH NO ADVANCING.
	ACCEPT WS-ANS.
	IF WS-ANS = 'A' GO TO MASTER-LIST;
	ELSE, IF WS-ANS = 'B' GO TO BACKORDER-LIST;
	ELSE, IF WS-ANS = 'E' OR WS-ANS = 'Q'
		ENTER MACRO MONITR;
	ELSE, IF WS-ANS = 'H' GO TO USAGE-LIST;
	ELSE, IF WS-ANS = 'I' GO TO LIST-SITE-INVENTORY;
	ELSE, IF WS-ANS = 'M'
		MOVE 'MASTYM' TO WS-MACRO-ARG
		MOVE WS-ENA TO WS-MACRO-ARG-EN
		ENTER MACRO RUNNIT USING WS-MACRO-ARG;
	ELSE, IF WS-ANS = 'O' GO TO ORDER-LIST;
	ELSE, IF WS-ANS = 'P' GO TO SITE-PRICE-LIST;
	ELSE, IF WS-ANS = 'S' 
		MOVE 'SITTYM' TO WS-MACRO-ARG
		MOVE WS-ENA TO WS-MACRO-ARG-EN
		ENTER MACRO RUNNIT USING WS-MACRO-ARG;
	ELSE, IF WS-ANS = 'Y'
		MOVE 'RECTYM' TO WS-MACRO-ARG
		MOVE WS-ENA TO WS-MACRO-ARG-EN
		ENTER MACRO RUNNIT USING WS-MACRO-ARG;
	ELSE, IF WS-ANS = 'Z'
		MOVE 'CONTYM' TO WS-MACRO-ARG
		MOVE WS-ENA TO WS-MACRO-ARG-EN
		ENTER MACRO RUNNIT USING WS-MACRO-ARG;
	ELSE, IF WS-ANS = '?' GO TO HELP;
	ELSE, DISPLAY '* INVALID - TYPE ? FOR HELP *'
		GO TO PROC.
**********************************************************************
*
*	HELP - TYPE LIST OF VALID PROCEDURES
*
**********************************************************************

HELP.
	DISPLAY 'VALID PROCEDURES ARE:'.
	DISPLAY 'A	LIST MASTER FILE'.
	DISPLAY 'B	BACKORDER LIST BY SITE'.
	DISPLAY 'E	EXIT'.
	DISPLAY 'H	USAGE HISTORY LISTING'.
	DISPLAY 'I	INVENTORY LIST BY SITE'.
	DISPLAY 'M	ENTER MASTYM (MASTER FILE PROGRAM)'.
	DISPLAY 'O	REPRINT PARTS ORDER'.
	DISPLAY 'Q	QUIT (EXIT)'.
	DISPLAY 'P	PRICE LISTING BY SITE'.
	DISPLAY 'S	ENTER SITTYM (SITE INVENTORY PROGRAM)'.
	DISPLAY '?	TYPE THIS TEXT'.
	DISPLAY ' '.
	GO TO PROC.

**********************************************************************
*
*	BACKORDER LIST
*
**********************************************************************

BACKORDER-LIST.
	DISPLAY 'BACKORDER LISTING'.
	MOVE 'BACKORDER' TO LIST-NAME.
	MOVE 'BORDERLST' TO LIST-FILE-NAME.
	MOVE WS-DATE TO LIST-DATE.
	MOVE JULIAN-DATE TO L-JULIAN-DATE.
	OPEN INPUT NAME-FILE.
	MOVE SPACES TO S-K-PARTNO.
	MOVE ZERO TO S-K-REC-NO X Y.
	MOVE H9-BO-DATA TO H9-BO.
BACKORDER-CMD.
	DISPLAY 'ENTER SITE # <NN>, OR <A> FOR ALL, <X> TO EXIT - '
		WITH NO ADVANCING.
	ACCEPT WS-LIST-SITE.
	IF WS-LIST-SITE = 'A'
		MOVE LOW-VALUE TO S-KEY
		GO TO ORDER-ALL-START;
	ELSE, IF WS-LIST-SITE NOT NUMERIC
		CLOSE NAME-FILE
		GO TO PROC.
	MOVE WS-LIST-SITE TO N-KEY S-K-SITE-NO WS-LIST-NAME-2.
	READ NAME-FILE INVALID KEY
		DISPLAY '* SITE # ' N-KEY ' NON-EXISTANT'
		GO TO BACKORDER-CMD.
	DISPLAY 'BACKORDER LIST FOR ' N-NAME ' OK ? ' WITH NO ADVANCING.
	PERFORM YES-NO.
	IF WS-ANS = 'N'
		GO TO BACKORDER-CMD.
	GO TO ORDER-ALL-START.
**********************************************************************
*
*	SITES INVENTORY LISTING ROUTINE
*
**********************************************************************

LIST-SITE-INVENTORY.
	DISPLAY 'LIST SITE INVENTORY'.

LIST-GET-SITE.
	MOVE 'SITES' TO WS-LIST-NAME.
	MOVE 'INVENTORY' TO LIST-NAME.
	MOVE LIST-HDR-2 TO LIST-HDR-N.
	DISPLAY 'ENTER SITE TO LIST(NN), OR <A> FOR ALL, <X> TO EXIT - '
		WITH NO ADVANCING.
	ACCEPT WS-LIST-SITE.
	IF WS-LIST-SITE = 'A'
		DISPLAY 'START WITH SITE # ' WITH NO ADVANCING
		ACCEPT WS-LIST-SITE-NO;
	ELSE, IF WS-LIST-SITE ='X'
		GO TO PROC;
	ELSE, IF WS-LIST-SITE NUMERIC
		MOVE WS-LIST-SITE TO WS-LIST-SITE-NO WS-LIST-NAME-2
		MOVE SPACES TO WS-LIST-SITE;
	ELSE, DISPLAY '**INVALID - ' WITH NO ADVANCING
		GO TO LIST-GET-SITE.
LIST-GET-OPTIONS.
	MOVE 1 TO X.
	DISPLAY 'ENTER SORT OPTIONS - ' WITH NO ADVANCING.
	PERFORM LIST-DECODE-STRING THRU LIST-DECODE-STRING-END.
	IF RET-CODE NOT = ZERO
		IF RET-CODE NOT = 9
			GO TO LIST-OPTION-ERROR;
		ELSE, DISPLAY '** ABORTING **'
			GO TO PROC.
	MOVE 6 TO X.
	DISPLAY 'ENTER SORTS TO INCLUDE CREF DATA - ' WITH NO ADVANCING.
	PERFORM LIST-DECODE-STRING THRU LIST-DECODE-STRING-END.
	IF RET-CODE NOT = ZERO
		IF RET-CODE NOT = 9
			GO TO LIST-OPTION-ERROR;
		ELSE, DISPLAY '** ABORTING **'
			GO TO PROC.
	MOVE 11 TO X.
	DISPLAY 'ENTER SORTS TO INCLUDE ZERO RECORDS - '
		WITH NO ADVANCING.
	PERFORM LIST-DECODE-STRING THRU LIST-DECODE-STRING-END.
	IF RET-CODE NOT = 0
		IF RET-CODE NOT = 9
			GO TO LIST-OPTION-ERROR;
		ELSE, DISPLAY '** ABORTING **'
			GO TO PROC.
	OPEN INPUT SITE-FILE MAST-FILE NAME-FILE OUTPUT LIST-FILE.
	MOVE WS-LIST-SITE-NO TO WS-LIST-SITE-NEXT.
***********************************
*	SITE INV LIST (CONT)
***********************************

LIST-SITE-LOOP.
	MOVE WS-LIST-SITE-NEXT TO WS-LIST-SITE-NO.
	DISPLAY '< LISTING SITE # ' WS-LIST-SITE-NO ' >'.
	PERFORM LIST-SITE-DATA THRU LIST-SITE-DATA-END.
	IF RET-CODE = 0
		IF WS-LIST-SITE = 'A'
			GO TO LIST-SITE-LOOP;
		ELSE, NEXT SENTENCE;
	ELSE, IF RET-CODE = 9
		NEXT SENTENCE;
	ELSE, DISPLAY '** ERROR RETURN FROM LIST-SITE-DATA - RET-CODE = '
		RET-CODE.
	CLOSE SITE-FILE NAME-FILE MAST-LIST-FILE.
	DISPLAY WS-LIST-NAME '.LST IS ON DISK...'.
	GO TO PROC.

LIST-OPTION-ERROR.
	DISPLAY 'ERROR SPECIFYING LIST OPTIONS - RE-ENTER'.
	GO TO LIST-GET-OPTIONS.

LIST-SITE-DATA.
	IF WS-LIST-PARTNO = '*'
		PERFORM LIST-PARTNO.
	IF WS-LIST-DESC = '*'
		PERFORM LIST-DESC.
	IF WS-LIST-OPT = '*'
		PERFORM LIST-OPT.
	IF WS-LIST-LOC = '*'
		PERFORM LIST-LOC.
	IF WS-LIST-VC = '*'
		PERFORM LIST-VC.
LIST-SITE-DATA-END. EXIT.
******************************
*	SITE INV LIST (CONT)
*	LIST SORT ROUTINES
******************************

LIST-PARTNO.
	MOVE 1 TO Y.
	MOVE 'P/N' TO L-SORT.
	PERFORM LIST-SITE-SETUP.
	SORT LIST-SORT ON ASCENDING KEY LS-PARTNO
	INPUT PROCEDURE IS LIST-SORT-INPUT THRU LSI-END
	OUTPUT PROCEDURE IS LIST-SORT-OUTPUT THRU LSO-END.
LIST-DESC.
	MOVE 2 TO Y.
	MOVE 'DESC' TO L-SORT.
	PERFORM LIST-SITE-SETUP.
	SORT LIST-SORT ON ASCENDING KEY LS-DESC LS-VPN
	INPUT PROCEDURE IS LIST-SORT-INPUT THRU LSI-END
	OUTPUT PROCEDURE IS LIST-SORT-OUTPUT THRU LSO-END.
LIST-OPT.
	MOVE 3 TO Y.
	MOVE 'OPT' TO L-SORT.
	PERFORM LIST-SITE-SETUP.
	SORT LIST-SORT ON ASCENDING KEY LS-OPT LS-PARTNO
	INPUT PROCEDURE IS LIST-SORT-INPUT THRU LSI-END
	OUTPUT PROCEDURE IS LIST-SORT-OUTPUT THRU LSO-END.
LIST-LOC.
	MOVE 4 TO Y.
	MOVE 'LOC' TO L-SORT.
	PERFORM LIST-SITE-SETUP.
	SORT LIST-SORT ON ASCENDING KEY LS-LOC LS-PARTNO
	INPUT PROCEDURE IS LIST-SORT-INPUT THRU LSI-END
	OUTPUT PROCEDURE IS LIST-SORT-OUTPUT THRU LSO-END.
LIST-VC.
	MOVE 5 TO Y.
	MOVE 'VC' TO L-SORT.
	PERFORM LIST-SITE-SETUP.
	SORT LIST-SORT ON ASCENDING KEY LS-VC LS-VPN
	INPUT PROCEDURE IS LIST-SORT-INPUT THRU LSI-END
	OUTPUT PROCEDURE IS LIST-SORT-OUTPUT THRU LSO-END.
LIST-END-OF-FIELD-SORTS.

LIST-SITE-SETUP.
	MOVE WS-LIST-SITE-NO TO S-K-SITE-NO N-KEY.
	MOVE SPACES TO S-K-PARTNO.
	MOVE ZERO TO S-K-REC-NO.
	READ SITE-FILE INVALID KEY
		DISPLAY '** ERROR SYNCHRONIZING TO SITE DATA **'
		GO TO SITE-FILE-ERROR.
LIST-SITE-SETUP-END.
******************************
*	SITE INV LIST (CONT)
*INPUT 'SCANNER' TO DECODE
* LIST SORT OPTIONS
******************************

LIST-DECODE-STRING.
	IF X = 1
		MOVE SPACES TO WS-LIST-SORT-ALL WS-LIST-CREF-ALL
		MOVE SPACES TO WS-LIST-ZERO-ALL.
	ACCEPT WS-LIST-OPT-STRING.
	MOVE ZERO TO WS-LIST-OPT-COUNT.
LIST-DECODE-STRING-LOOP.
	IF WS-LIST-OPT-OUT = 'P' MOVE 1 TO Y;
	ELSE, IF WS-LIST-OPT-OUT = 'D' MOVE 2 TO Y;
	ELSE, IF WS-LIST-OPT-OUT = 'O' MOVE 3 TO Y;
	ELSE, IF WS-LIST-OPT-OUT = 'L' MOVE 4 TO Y;
	ELSE, IF WS-LIST-OPT-OUT = 'V' MOVE 5 TO Y;
	ELSE, IF WS-LIST-OPT-OUT = SPACES
		MOVE 0 TO RET-CODE
		GO TO LIST-DECODE-STRING-END;
	ELSE, IF WS-LIST-OPT-OUT = 'X'
		MOVE 9 TO RET-CODE
		GO TO LIST-DECODE-STRING-END;
	ELSE, GO TO LIST-DECODE-STRING-ERROR.
	IF X = 1
		MOVE '*' TO WS-LIST-SORT(Y);
	ELSE, IF X = 6 AND WS-LIST-SORT(Y) = '*'
		MOVE '*' TO WS-LIST-CREF(Y);
	ELSE, IF X = 11 AND WS-LIST-SORT(Y) = '*'
		MOVE '*' TO WS-LIST-ZERO(Y);
	ELSE, GO TO LIST-DECODE-STRING-ERROR.
	MOVE WS-LIST-OPT-REST TO WS-LIST-OPT-STRING
	GO TO LIST-DECODE-STRING-LOOP.
LIST-DECODE-STRING-ERROR.
	MOVE 1 TO RET-CODE.
LIST-DECODE-STRING-END. EXIT.
******************************
*	SITE INV LIST (CONT)
*	SORT INPUT ROUTINE
******************************

LIST-SORT-INPUT.
	IF WS-LIST-CREF(Y) = '*' MOVE 1 TO X;
	ELSE, MOVE ZERO TO X.
	IF WS-LIST-ZERO(Y) = '*' MOVE 1 TO Y;
	ELSE, MOVE ZERO TO Y.
	MOVE LOW-VALUE TO S-KEY.
LSI-LOOP-1.
	READ SITE-FILE INVALID KEY
		MOVE 9 TO RET-CODE
		GO TO LSI-END.
	IF S-SITE-NO NOT = WS-LIST-SITE-NO
		MOVE ZERO TO RET-CODE
		MOVE S-SITE-NO TO WS-LIST-SITE-NEXT
		GO TO LSI-END.
	IF S-REC-NO NOT = 0 OR (Y = 0 AND(S-LOC = SPACES AND S-MAX = 0))
		GO TO LSI-LOOP-1.
	MOVE SPACES TO LIST-SORT-REC.
	MOVE S-PARTNO TO LS-PARTNO WS-PARTNO.
	MOVE S-LOC TO LS-LOC.
	PERFORM GET-MASTER THRU GET-MASTER-END.
	IF RET-CODE NOT = 1
		MOVE '** NOT IN MAST FILE *' TO LS-DESC
		GO TO LSI-RELEASE.
	IF M-PARTNO NOT = WS-PARTNO
		MOVE M-REC-PN-PL TO LS-PARTNO
		MOVE S-PARTNO TO LS-SITE-PARTNO.
LSI-LOAD-MASTER-DATA.
	MOVE M-DESC TO LS-DESC.
	MOVE M-VC TO LS-VC.
	MOVE M-VPN TO LS-VPN.
	MOVE M-OPT TO LS-OPT.
	RELEASE LIST-SORT-REC.
LSI-LOOP-2.
	IF X = ZERO OR M-REV-CREF = SPACES
		GO TO LSI-LOOP-1.
	MOVE SPACES TO LIST-SORT-REC.
	MOVE M-REV-CREF TO M-K-PN-PL.
	MOVE M-K-PARTNO TO LS-PARTNO.
	MOVE 'C' TO LS-FLAG.
	READ MAST-FILE INVALID KEY
		GO TO LSI-CREF-INVALID.
	GO TO LSI-LOAD-MASTER-DATA.
LSI-CREF-INVALID.
	MOVE '** REV CREF ERROR **' TO LS-DESC.
	MOVE 'FM' TO LS-VC.
	MOVE WS-PARTNO TO LS-VPN.
LSI-RELEASE.
	RELEASE LIST-SORT-REC.
	GO TO LSI-LOOP-1.
LSI-END. EXIT.
******************************
*	SITE INV LIST (CONT)
*	SORT OUTPUT ROUTINE
******************************

LIST-SORT-OUTPUT.
	PERFORM LIST-HEADER-INIT THRU LIST-HEADER-END.
	MOVE ZERO TO Z.
LSO-LOOP-1.
	IF WS-LINE NOT < 55
		PERFORM LIST-HEADER THRU LIST-HEADER-END.
	MOVE SPACES TO LIST-REC.
	RETURN LIST-SORT AT END
		GO TO LSO-END.
	ADD 1 TO Z.
	MOVE LS-PARTNO TO L-PARTNO.
	MOVE LS-DESC TO L-DESC.
	MOVE LS-VC TO L-VC.
	MOVE LS-VPN TO L-VPN.
	MOVE LS-OPT TO L-OPT.
	MOVE LS-LOC TO L-LOC.
	MOVE LS-SITE-PARTNO TO L-SITE-PARTNO.
	IF LS-FLAG NOT = SPACES
		WRITE LIST-REC AFTER ADVANCING 1 LINE
		ADD 1 TO WS-LINE
		GO TO LSO-LOOP-1.
	MOVE WS-LIST-SITE-NO TO S-K-SITE-NO.
	IF LS-SITE-PARTNO = SPACES
		MOVE LS-PN TO WS-PARTNO S-K-PARTNO;
	ELSE, MOVE LS-SITE-PARTNO TO WS-PARTNO S-K-PARTNO.
	MOVE ZERO TO S-K-REC-NO.
	READ SITE-FILE INVALID KEY
		DISPLAY '**ERROR IN LIST-SORT-OUTPUT**'
		GO TO SITE-FILE-ERROR.
	MOVE S-MAX TO L-MAX.
	MOVE S-ON-HAND TO L-ON-HAND.
	IF S-LOC NOT = SPACES AND S-MAX > S-ON-HAND
		COMPUTE WS-QUAN = (S-MAX * .4) - S-ON-HAND
		IF WS-QUAN > ZERO
			MOVE '*' TO L-FLAG.
	IF S-ON-ORDER = ZERO
		GO TO LSO-WRITE.
	MOVE S-ON-ORDER TO WS-QUAN.
	MOVE LOW-VALUE TO S-KEY.
******************************
*	SITE INV LIST (CONT)
*	SORT OUTPUT
******************************

LSO-LOOP-2.
	READ SITE-FILE INVALID KEY
		GO TO LSO-ORD-ERROR.
	IF S-PARTNO NOT = WS-PARTNO
		GO TO LSO-ORD-ERROR.
	MOVE S-ORD-NO TO L-ORD-NO WS-JULIAN-DATE.
	MOVE S-ORD-QUAN TO L-ORD-QUAN.
	PERFORM DATE-CONV THRU DATE-CONV-END.
	MOVE WS-DATE-OUT TO L-ORD-DATE.
	WRITE LIST-REC  AFTER ADVANCING 1 LINE.
	ADD 1 TO WS-LINE.
	SUBTRACT S-ORD-QUAN FROM WS-QUAN.
	IF WS-QUAN > ZERO
		MOVE SPACES TO LIST-REC
		GO TO LSO-LOOP-2.
	GO TO LSO-LOOP-1.

LSO-ORD-ERROR.
	MOVE '** ORDER ERROR **' TO L-ORDER-INFO.
LSO-WRITE.
	WRITE LIST-REC AFTER ADVANCING 1 LINE.
	ADD 1 TO WS-LINE.
	GO TO LSO-LOOP-1.
LSO-END. 
	MOVE SPACES TO LIST-REC.
	WRITE LIST-REC AFTER ADVANCING 1 LINE.
	MOVE Z TO LIST-TOT-LINES.
	WRITE LIST-REC FROM LIST-HDR-3 AFTER ADVANCING 1 LINE.
**********************************************************************
*
*	MASTER FILE LISTING (A)
*
**********************************************************************

MASTER-LIST.
	DISPLAY 'LIST MASTER FILE'.
	MOVE 'MASTERLST' TO LIST-FILE-NAME.
	MOVE ZERO TO X WS-PAGE.
	MOVE WS-DATE TO H7-DATE.
	MOVE JULIAN-DATE TO H7-JULIAN-DATE.
	OPEN INPUT MAST-FILE OUTPUT LIST-FILE.

MASTER-LIST-HEADER.
	ADD 1 TO WS-PAGE.
	MOVE WS-PAGE TO H7-PAGE.
	MOVE ZERO TO WS-LINE.
	WRITE LIST-REC FROM LIST-HDR-7 AFTER ADVANCING TOP.
	WRITE LIST-REC FROM LIST-HDR-8 AFTER ADVANCING 2 LINES.
	MOVE SPACES TO LIST-REC.
	WRITE LIST-REC AFTER ADVANCING 1 LINE.

MASTER-LIST-LOOP.
	READ MAST-FILE INVALID KEY
		GO TO MASTER-LIST-END.
	ADD 1 TO WS-LINE.
	IF WS-LINE > 55
		PERFORM MASTER-LIST-HEADER.
	ADD 1 TO X.
	MOVE M-PARTNO TO ML-PARTNO.
	MOVE M-DESC TO ML-DESC.
	MOVE M-VC TO ML-VC.
	MOVE M-VPN TO ML-VPN.
	MOVE M-SITES TO ML-SITES.
	MOVE M-PRICE TO ML-PRICE.
	MOVE M-RR TO ML-RR.
	MOVE M-OPT TO ML-OPT.
	MOVE M-REC-QUAN TO ML-REC-QUAN.
	MOVE M-REV-CREF TO ML-REV-CREF.
	MOVE M-FLAG TO ML-FLAG.
	MOVE M-CREF TO ML-CREF.
	WRITE LIST-REC AFTER ADVANCING 1 LINE.
	GO TO MASTER-LIST-LOOP.

MASTER-LIST-END.
	MOVE X TO LIST-TOT-LINES.
	WRITE LIST-REC FROM LIST-HDR-3 AFTER ADVANCING 2 LINES.
	CLOSE MAST-FILE LIST-FILE.
	DISPLAY 'MASTER.LST IS ON DISK...'.
	GO TO PROC.
**********************************************************************
*
*	ORDER LIST (REPRINT A PARTS ORDER)
*	
*	** "ORDER-ALL" ROUTINES USED IN BACKORERR-LIST ROUTINE, TOO
*
**********************************************************************

ORDER-LIST.
	DISPLAY 'RE-PRINT PARTS ORDERS'.
	MOVE 'ORDER' TO LIST-NAME.
	MOVE 'ORDER LST' TO LIST-FILE-NAME.
	DISPLAY 'ENTER ORDER NUMBER TO LIST - ' WITH NO ADVANCING.
	ACCEPT WS-ORD-NO.
	MOVE WS-ORD-NO TO L-JULIAN-DATE WS-JULIAN-DATE.
	PERFORM DATE-CONV THRU DATE-CONV-END.
	MOVE WS-DATE-OUT TO LIST-DATE.
	MOVE SPACES TO H9-BO.
	MOVE 'O' TO WS-LIST-SITE.
	MOVE LOW-VALUE TO S-KEY.
	OPEN INPUT NAME-FILE.

ORDER-ALL-START.
	MOVE SPACES TO L-SORT LIST-CREF LIST-ZERO.
	MOVE LIST-HDR-9 TO LIST-HDR-N.
	OPEN INPUT SITE-FILE MAST-FILE.
	READ SITE-FILE INVALID KEY
		GO TO SITE-FIRST-READ-ERROR.
	OPEN OUTPUT LIST-FILE.
	MOVE LOW-VALUE TO S-KEY.
ORDER-ALL-NEW-SITE.
	MOVE S-SITE-NO TO WS-LIST-SITE-NO.
	MOVE ZERO TO X Y.
	MOVE 99 TO WS-LINE.
ORDER-ALL-LOOP.
	READ SITE-FILE INVALID KEY
		GO TO ORDER-ALL-END.
ORDER-ALL-LOOP-1.
	IF S-REC-NO NOT = ZERO
		DISPLAY '* ORDER ERROR - SITE-REC = ' SITE-REC
		GO TO ORDER-ALL-LOOP.
	IF S-SITE-NO NOT = WS-LIST-SITE-NO
		PERFORM ORDER-ALL-TOTAL THRU ORDER-ALL-TOTAL-END
		IF WS-LIST-SITE = 'A' OR WS-LIST-SITE = 'O'
			GO TO ORDER-ALL-NEW-SITE;
		ELSE, GO TO ORDER-ALL-END.
	IF S-ON-ORDER = ZERO
		GO TO ORDER-ALL-LOOP.
	IF WS-LINE > 50
		IF X > ZERO
			PERFORM LIST-HEADER THRU LIST-HEADER-END;
	     ELSE, PERFORM ORDER-HEADER-INIT THRU LIST-HEADER-END.
******************************
*	ORDER LIST (CONT)
******************************

	MOVE SPACES TO LIST-REC.
	MOVE S-PARTNO TO WS-PARTNO ORD-PARTNO.
	MOVE S-MAX TO ORD-MAX.
	MOVE S-ON-HAND TO ORD-ON-HAND.
	PERFORM GET-MASTER THRU GET-MASTER-END.
	IF RET-CODE = ZERO
		MOVE SPACES TO MAST-REC
		MOVE '*NOT IN MAST-FILE*' TO ORD-DESC
		GO TO ORDER-ALL-LOOP-2.
	IF M-PARTNO NOT = WS-PARTNO
		MOVE M-REC-PN-PL TO ORD-MAST.
	MOVE M-DESC TO ORD-DESC.
	MOVE M-VC TO ORD-VC.
	MOVE M-VPN TO ORD-VPN.
ORDER-ALL-LOOP-2.
	READ SITE-FILE INVALID KEY
		GO TO ORDER-ALL-END.
	IF S-PARTNO NOT = WS-PARTNO
		GO TO ORDER-ALL-LOOP-1.
	IF WS-LIST-SITE = 'O' AND WS-ORD-NO NOT = S-ORD-NO
		GO TO ORDER-ALL-LOOP-2.
	ADD 1 TO Y.
	MOVE S-ORD-QUAN TO ORD-QUAN.
	IF WS-LIST-SITE NOT = 'O'
		MOVE S-ORD-NO TO ORD-ORD-NO WS-JULIAN-DATE
		PERFORM DATE-CONV THRU DATE-CONV-END
		MOVE WS-DATE-OUT TO ORD-ORD-DATE.
	WRITE LIST-REC AFTER ADVANCING 1 LINE.
	ADD 1 TO WS-LINE.
	GO TO ORDER-ALL-LOOP-2.

ORDER-ALL-TOTAL.
	IF Y = ZERO
		GO TO ORDER-ALL-TOTAL-END.
	MOVE Y TO H10-LINES.
	WRITE LIST-REC FROM LIST-HDR-10 AFTER ADVANCING 2 LINES.
ORDER-ALL-TOTAL-END. EXIT.

ORDER-ALL-END.
	PERFORM ORDER-ALL-TOTAL THRU ORDER-ALL-TOTAL-END.
	CLOSE MAST-FILE SITE-FILE NAME-FILE LIST-FILE.
	DISPLAY LIST-FILE-NAME ' IS ON DISK...'.
	GO TO PROC.
**********************************************************************
*
*	SITE PRICE LISTING
*
**********************************************************************

SITE-PRICE-LIST.
	DISPLAY 'INVENTORY PRICE LISTING BY SITE'.
	MOVE 'PRICE LST' TO LIST-FILE-NAME.
	MOVE 'PRICE' TO LIST-NAME.
	MOVE LIST-HDR-4 TO LIST-HDR-N.
	DISPLAY 'ENTER SITE TO LIST<NN>, OR <A> FOR ALL, <X> TO EXIT - '
		WITH NO ADVANCING.
	ACCEPT WS-LIST-SITE.
	IF WS-LIST-SITE = 'A'
		MOVE LOW-VALUE TO S-KEY;
	ELSE, IF WS-LIST-SITE NUMERIC
		MOVE WS-LIST-SITE TO S-KEY
		MOVE ZERO TO S-K-REC-NO;
	ELSE, GO TO PROC.
	OPEN INPUT SITE-FILE NAME-FILE MAST-FILE.
	READ SITE-FILE INVALID KEY
		GO TO SITE-FIRST-READ-ERROR.
	MOVE SPACES TO L-SORT LIST-CREF LIST-ZERO.
	MOVE ZERO TO WS-GRAND-TOTAL.
	MOVE WS-DATE TO LIST-DATE.
	MOVE JULIAN-DATE TO L-JULIAN-DATE.
	OPEN OUTPUT LIST-FILE.
SITE-PRICE-NEW-SITE.
	MOVE S-SITE-NO TO N-KEY.
	READ NAME-FILE INVALID KEY
		DISPLAY '* NAME-REC NOT FOUND FOR SITE ' N-KEY
		MOVE '* UNKNOWN *' TO N-NAME.
	MOVE N-NAME TO LIST-SITE-NAME.
	MOVE N-KEY TO LIST-SITE-NO.
	MOVE ZERO TO I WS-SITE-TOTAL WS-PAGE.
	MOVE 99 TO WS-LINE.
SITE-PRICE-LOOP.
	IF WS-LINE > 49
		PERFORM LIST-HEADER THRU LIST-HEADER-END.
	MOVE LOW-VALUE TO S-KEY.
	READ SITE-FILE INVALID KEY
		GO TO SITE-PRICE-END.
	IF S-SITE-NO NOT = N-KEY
		IF WS-LIST-SITE = 'A'
			PERFORM SITE-PRICE-TOTAL
			GO TO SITE-PRICE-NEW-SITE;
		ELSE, GO TO SITE-PRICE-END.
	IF S-REC-NO NOT = 0 OR (S-LOC = SPACES AND S-ON-HAND = 0)
		GO TO SITE-PRICE-LOOP.
******************************
*	SITE PRICE LIST (CONT)
******************************

	ADD 1 TO I.
	MOVE S-PARTNO TO PL-PARTNO WS-PARTNO.
	MOVE S-LOC TO PL-LOC.
	MOVE S-MAX TO PL-MAX.
	MOVE S-ON-HAND TO PL-ON-HAND.
	PERFORM GET-MASTER THRU GET-MASTER-END.
	IF RET-CODE = ZERO
		MOVE SPACES TO MAST-REC
		MOVE '*NOT IN MAST FILE*' TO M-DESC.
	MOVE M-DESC TO PL-DESC.
	MOVE M-VC TO PL-VC.
	MOVE M-VPN TO PL-VPN.
	MOVE M-PRICE TO PL-PRICE.
	MULTIPLY M-PRICE BY S-ON-HAND GIVING WS-PRICE-EXT.
	MOVE WS-PRICE-EXT TO PL-PRICE-EXT.
	ADD WS-PRICE-EXT TO WS-SITE-TOTAL.
	WRITE LIST-REC AFTER ADVANCING 1 LINE.
	ADD 1 TO WS-LINE.
	GO TO SITE-PRICE-LOOP.

SITE-PRICE-TOTAL.
	MOVE I TO LIST-TOT-LINES.
	MOVE LIST-HDR-3 TO LIST-REC.
	MOVE WS-SITE-TOTAL TO PL-PRICE-EXT.
	ADD WS-SITE-TOTAL TO WS-GRAND-TOTAL.
	WRITE LIST-REC AFTER ADVANCING 2 LINES.
SITE-PRICE-TOTAL-END.

SITE-PRICE-END.
	PERFORM SITE-PRICE-TOTAL.
	IF WS-LIST-SITE = 'A'
		MOVE LIST-HDR-5 TO LIST-REC
		MOVE WS-GRAND-TOTAL TO PL-PRICE-EXT
		WRITE LIST-REC AFTER ADVANCING 2 LINES.
	DISPLAY LIST-FILE-NAME ' IS ON DISK...'.
	CLOSE MAST-FILE SITE-FILE NAME-FILE LIST-FILE.
	GO TO PROC.

SITE-FIRST-READ-ERROR.
	IF WS-LIST-SITE = 'A' OR WS-LIST-SITE = 'O'
		DISPLAY '** ERROR IN SITE FILE - NO DATA ?? **';
	ELSE, DISPLAY '** ERROR SYNCHRONIZING TO SITE DATA'
		DISPLAY '** NO DATA FOUND FOR SITE # ' S-SITE-NO.
	CLOSE SITE-FILE NAME-FILE MAST-FILE.
	GO TO PROC.
**********************************************************************
*
*	USAGE HISTORY LISTINGS
*
**********************************************************************

USAGE-LIST.
	DISPLAY 'PARTS USAGE LISTINGS'.
	MOVE 'P/N' TO L-SORT.
	MOVE SPACES TO LIST-CREF LIST-ZERO WS-LIST-FLAG.
	MOVE WS-DATE TO LIST-DATE.
	MOVE JULIAN-DATE TO L-JULIAN-DATE.
	MOVE 'USAGE LST' TO LIST-FILE-NAME.
	MOVE 'USAGE' TO LIST-NAME.
	MOVE ZERO TO WS-PAGE X Y Z USE-12 USE-12-TOT USE-12P-TOT.
	MOVE ZERO TO USE-6 USE-6-TOT USE-6P-TOT S-K-REC-NO.
	MOVE 99 TO WS-LINE.
USAGE-LIST-CMD.
	DISPLAY 'LIST BY (P)ARTNO, (S)ITE, OR (X) TO EXIT - '
		WITH NO ADVANCING.
	ACCEPT WS-ANS.
	IF WS-ANS = 'S'
		GO TO USAGE-SITE-LIST;
	ELSE, IF WS-ANS = 'P' NEXT SENTENCE;
	ELSE, GO TO PROC.
USAGE-PARTNO-LIST.
	MOVE LOW-VALUE TO H-KEY.
	MOVE 'ALL SITES' TO LIST-SITE-NAME.
	MOVE SPACES TO H6-MAX H6-PERCENT.
	MOVE LIST-HDR-6 TO LIST-HDR-N.
	OPEN INPUT HIST-FILE MAST-FILE OUTPUT LIST-FILE.
USE-PARTNO-LOOP.
	READ HIST-FILE INVALID KEY
		PERFORM USE-ALL-DONE THRU USE-ALL-DONE-END
		CLOSE HIST-FILE MAST-FILE LIST-FILE
		DISPLAY LIST-FILE-NAME ' IS ON DISK...'
		GO TO PROC.
	IF H-ENTRY-NO = ZERO
		IF Y = ZERO
			GO TO USE-PARTNO-LOOP;
		ELSE, PERFORM USE-ALL-BREAK THRU USE-ALL-BREAK-END
			GO TO USE-PARTNO-LOOP.
	MOVE H-PARTNO TO WS-PARTNO.
	MOVE H-PL TO N-PL.
	IF H-XFER NOT = 'X'
		IF H-DATE > AGE-12
			ADD H-QUAN TO USE-12
		IF H-DATE > AGE-6
			ADD H-QUAN TO USE-6.
	ADD 1 TO Y.
	GO TO USE-PARTNO-LOOP.
******************************
*	USAGE LIST - BY SITE
******************************

USAGE-SITE-LIST.
	OPEN INPUT NAME-FILE.
USAGE-SITE-CMD.
	DISPLAY 'INCLUDE SITE LEVEL CHECK ? ' WITH NO ADVANCING.
	PERFORM YES-NO.
	IF WS-ANS = 'Y'
		MOVE 'A' TO WS-LIST-FLAG.
	DISPLAY 'ENTER SITE#<NN>, OR <A> FOR ALL, <X> TO EXIT - '
		WITH NO ADVANCING.
	ACCEPT WS-LIST-SITE.
	IF WS-LIST-SITE NUMERIC
		NEXT SENTENCE;
	ELSE, IF WS-LIST-SITE = 'A'
		GO TO USAGE-SITE-START;
	ELSE, CLOSE NAME-FILE
		GO TO PROC.
	MOVE WS-LIST-SITE TO N-KEY.
	READ NAME-FILE INVALID KEY
		DISPLAY '* SITE # ' N-KEY ' NON-EXISTANT'
		GO TO USAGE-SITE-CMD.
	DISPLAY 'LIST USAGE FOR ' N-NAME ' OK ? ' WITH NO ADVANCING.
	PERFORM YES-NO.
	IF WS-ANS = 'N'
		GO TO USAGE-SITE-CMD.

USAGE-SITE-START.
	MOVE LIST-HDR-6 TO LIST-HDR-N.
	OPEN INPUT HIST-FILE MAST-FILE SITE-FILE OUTPUT LIST-FILE.
	MOVE 99 TO WS-LIST-SITE-NO.
	SORT HIST-SORT ON ASCENDING HS-KEY
	INPUT PROCEDURE IS USAGE-SITE-SORT THRU USS-END
	OUTPUT PROCEDURE IS USAGE-SITE-OUT THRU USO-END.
	CLOSE HIST-FILE MAST-FILE LIST-FILE NAME-FILE SITE-FILE.
	DISPLAY LIST-FILE-NAME ' IS ON DISK...'.
	GO TO PROC.

USAGE-SITE-SORT.
	MOVE LOW-VALUE TO H-KEY.
USS-LOOP.
	READ HIST-FILE INVALID KEY
		GO TO USS-END.
	IF H-ENTRY-NO = ZERO
		GO TO USS-LOOP.
	IF WS-LIST-SITE NOT = 'A' AND H-SITE-NO NOT = N-KEY
		GO TO USS-LOOP.
	MOVE H-SITE-NO TO HS-SITE-NO.
	MOVE H-REC-PN-PL TO HS-REC-PN-PL.
	MOVE H-QUAN TO HS-QUAN.
	MOVE H-DATE TO HS-DATE.
	MOVE H-XFER TO HS-XFER.
	MOVE H-XFER-SITE TO HS-XFER-SITE.
	RELEASE HIST-SORT-REC.
	GO TO USS-LOOP.
USS-END. EXIT.
******************************
*	USAGE - BY SITE (CONT)
******************************

USAGE-SITE-OUT.
	RETURN HIST-SORT AT END
		PERFORM USE-ALL-DONE THRU USE-ALL-DONE-END
		GO TO USO-END.
	IF HS-SITE-NO NOT = WS-LIST-SITE-NO
		PERFORM USE-ALL-DONE THRU USE-ALL-DONE-END
		MOVE HS-SITE-NO TO WS-LIST-SITE-NO S-K-SITE-NO
		PERFORM LIST-HEADER-INIT THRU  LIST-HEADER-END
		MOVE ZERO TO Y Z  USE-TOTALS;
	ELSE, IF HS-PARTNO NOT = WS-PARTNO
		PERFORM USE-ALL-BREAK THRU USE-ALL-BREAK-END.
	MOVE HS-PARTNO TO WS-PARTNO.
	MOVE HS-PL TO N-PL.
	IF HS-DATE > AGE-12
		ADD HS-QUAN TO USE-12.
	IF HS-DATE > AGE-6
		ADD HS-QUAN TO USE-6.
	ADD 1 TO Y.
	GO TO USAGE-SITE-OUT.
USO-END. EXIT.
******************************
*	USAGE - COMMON ROUTINES
*	   FOR SITE & PARTNO LISTS
******************************

USE-ALL-BREAK.
	IF Y = ZERO
		GO TO USE-ALL-BREAK-END.
	MOVE ZERO TO Y.
	ADD 1 TO Z.
	IF WS-LINE > 49
		PERFORM LIST-HEADER THRU LIST-HEADER-END.
	PERFORM GET-MASTER THRU GET-MASTER-END.
	IF RET-CODE NOT = 1
		MOVE SPACES TO MAST-REC
		MOVE '*NOT IN MAST-FILE*' TO M-DESC.
	MOVE SPACES TO LIST-REC.
	MOVE M-PARTNO TO U-PARTNO S-K-PARTNO.
	MOVE M-DESC TO U-DESC.
	MOVE M-VC TO U-VC.
	MOVE M-VPN TO U-VPN.
	MOVE M-PRICE TO U-PRICE.
	IF WS-LIST-FLAG NOT = 'A'
		GO TO USE-ALL-BREAK-GO.
	READ SITE-FILE INVALID KEY
		MOVE '?' TO U-PCT-X
		GO TO USE-ALL-BREAK-GO.
	MOVE S-MAX TO U-SITE-MAX.
	COMPUTE USE-SITE-PCT = ((USE-6 / S-MAX) * 100).
	MOVE USE-SITE-PCT TO U-PCT-6.
	MOVE '%' TO U-PCT-X.
USE-ALL-BREAK-GO.
	IF USE-12 NOT = ZERO
		MOVE USE-12 TO U-USE-12
		MULTIPLY M-PRICE BY USE-12 GIVING WS-PRICE-EXT
		MOVE WS-PRICE-EXT TO U-UP-12
		ADD USE-12 TO USE-12-TOT
		ADD WS-PRICE-EXT TO USE-12P-TOT.
	IF USE-6 NOT = ZERO
		MOVE USE-6 TO U-USE-6
		MULTIPLY M-PRICE BY USE-6 GIVING WS-PRICE-EXT
		MOVE WS-PRICE-EXT TO U-UP-6
		ADD USE-6 TO USE-6-TOT
		ADD WS-PRICE-EXT TO USE-6P-TOT.
	MOVE ZERO TO USE-CHG.
	SUBTRACT USE-6 FROM USE-12 GIVING USE-F6.
	IF USE-F6 = USE-6
		NEXT SENTENCE;
	ELSE, IF USE-F6 > USE-6
		COMPUTE USE-CHG = (((USE-F6 - USE-6)/USE-F6)* 100)
		MOVE '-' TO USE-SIGN;
	ELSE, COMPUTE USE-CHG = (((USE-6 - USE-F6)/USE-F6)* 100)
		MOVE '+' TO USE-SIGN.
	IF USE-CHG > 25
		IF USE-F6 NOT = ZERO
			MOVE USE-SIGN TO U-CHG-SIGN
			MOVE USE-CHG TO U-CHG-QUAN
			MOVE '%' TO U-CHG-PCT-SIGN;
		ELSE, MOVE '+++++' TO U-CHANGE.
	MOVE ZERO TO USE-6 USE-12.
	WRITE LIST-REC AFTER ADVANCING 1 LINE.
	ADD 1 TO WS-LINE.
USE-ALL-BREAK-END. EXIT.
******************************
*	USAGE - COMMON ROUTINES
*		(CONT)
******************************

USE-ALL-DONE.
	IF Z = ZERO
		GO TO USE-ALL-DONE-END.
	PERFORM USE-ALL-BREAK THRU USE-ALL-BREAK-END.
	MOVE Z TO LIST-TOT-LINES.
	MOVE LIST-HDR-3 TO LIST-REC.
	MOVE USE-12-TOT TO U-USE-12.
	MOVE USE-12P-TOT TO U-UP-12.
	MOVE USE-6-TOT TO U-USE-6.
	MOVE USE-6P-TOT TO U-UP-6.
	MOVE ZERO TO USE-CHG.
	SUBTRACT USE-6-TOT FROM USE-12-TOT.
	IF USE-12-TOT = USE-6-TOT
		NEXT SENTENCE;
	ELSE, IF USE-12-TOT > USE-6-TOT
	   COMPUTE USE-CHG = (((USE-12-TOT - USE-6-TOT)/USE-12-TOT)*100)
		MOVE '-' TO USE-SIGN;
	ELSE,
	   COMPUTE USE-CHG = (((USE-6-TOT - USE-12-TOT)/USE-12-TOT)*100)
		MOVE '+' TO USE-SIGN.
	IF USE-CHG NOT = ZERO
		IF USE-12-TOT NOT = ZERO
			MOVE USE-SIGN TO U-CHG-SIGN
			MOVE USE-CHG TO U-CHG-QUAN
			MOVE '%' TO U-CHG-PCT-SIGN;
		ELSE, MOVE '+++++' TO U-CHANGE.
	WRITE LIST-REC AFTER ADVANCING 2 LINES.
USE-ALL-DONE-END. EXIT.
******************************
*	HEADER ROUTINES
******************************

ORDER-HEADER-INIT.
	MOVE '*' TO WS-ANS.
LIST-HEADER-INIT.
	MOVE WS-LIST-SITE-NO TO N-KEY LIST-SITE-NO.
	READ NAME-FILE INVALID KEY
		GO TO NAME-FILE-ERROR.
	MOVE ZERO TO WS-PAGE.
	MOVE N-NAME TO LIST-SITE-NAME.
	IF WS-ANS = '*'
		GO TO LIST-HEADER.
	MOVE WS-DATE TO LIST-DATE.
	MOVE JULIAN-DATE TO L-JULIAN-DATE.
	IF X = 1
		MOVE 'X' TO LIST-CREF;
	ELSE, MOVE '-' TO LIST-CREF.
	IF Y = 1
		MOVE 'Z' TO LIST-ZERO;
	ELSE, MOVE '-' TO LIST-ZERO.
LIST-HEADER.
	ADD 1 TO WS-PAGE.
	MOVE WS-PAGE TO L-PAGE.
	MOVE ZERO TO WS-LINE.
	WRITE LIST-REC FROM LIST-HDR-1 AFTER ADVANCING TOP.
	WRITE LIST-REC FROM LIST-HDR-N AFTER ADVANCING 2 LINES.
	MOVE SPACES TO LIST-REC.
	WRITE LIST-REC AFTER ADVANCING 1 LINES.
LIST-HEADER-END. EXIT.
************************************************************
*	DATE - ROUTINE TO FORMAT 'TODAY' AND COMPUTE JULIAN DATE
*	CALLED FROM FIRST PHASE OF PROCEDURE DIVISION
************************************************************

DATE.
	MOVE TODAY TO WS-TEMP-DATE.
	MOVE WSTM TO WS-MONTH, I.
	MOVE WSTD TO WS-DAY.
	MOVE WSTY TO WS-YEAR.
	MOVE DATE-TBL (I) TO JULIAN-DAY.
	ADD WSTD TO JULIAN-DAY.
	MOVE WS-YEAR-DIGIT-2 TO JULIAN-YEAR.
	SUBTRACT 1 FROM JULIAN-YEAR GIVING AGE-12-YEAR.
	MOVE JULIAN-DAY TO AGE-12-DAY.
	IF JULIAN-DAY > 182
		MOVE JULIAN-YEAR TO AGE-6-YEAR
		SUBTRACT 182 FROM JULIAN-DAY GIVING AGE-6-DAY;
	ELSE, SUBTRACT 1 FROM JULIAN-YEAR GIVING AGE-6-YEAR
		COMPUTE AGE-6-DAY = (365 - (182 - JULIAN-DAY)).
DATE-END.


******************************
* ROUTINE TO CONV BACK FM JULIAN
* CALLED W/ JULIAN-DATE IN WS-JULIAN-DATE
******************************

DATE-CONV.
	IF WS-CONV-DAY > 365 
		MOVE '*ERROR*' TO WS-DATE-OUT
		GO TO DATE-CONV-END.
	MOVE 1 TO I.
DATE-CONV-LOOP.
	IF DATE-TBL(I) NOT > WS-CONV-DAY
		ADD 1 TO I
		GO TO DATE-CONV-LOOP.
	SUBTRACT 1 FROM I.
	MOVE I TO WS-MONTH-OUT.
	SUBTRACT DATE-TBL(I) FROM WS-CONV-DAY GIVING WS-DAY-OUT.
	MOVE WS-YEAR-DIGIT-1 TO WS-YEAR-OUT-1.
	MOVE WS-CONV-YEAR TO WS-YEAR-OUT-2.
	MOVE '-' TO WS-D-SEP-1 WS-D-SEP-2.
DATE-CONV-END. EXIT.

YES-NO.
	ACCEPT WS-ANS.
	IF WS-ANS NOT = 'Y' AND WS-ANS NOT = 'N'
		DISPLAY '!! Y OR N ONLY !!'
		GO TO YES-NO.
YES-NO-END.
**********************************************************************
*
*	MASTER-FILE READ ROUTINE
*
**********************************************************************

GET-MASTER.
	MOVE WS-PARTNO TO M-K-PARTNO.
	MOVE SPACES TO M-K-PL.
GET-MASTER-LOOP.
	READ MAST-FILE INVALID KEY
		MOVE 0 TO RET-CODE
		GO TO GET-MASTER-END.
	IF M-FLAG = 1 AND M-K-PL = SPACES
		MOVE N-PL TO M-K-PL
		GO TO GET-MASTER-LOOP.
	IF M-CREF = 'X'
		MOVE M-CREF-PN-PL TO M-K-PN-PL
		GO TO GET-MASTER-LOOP.
	MOVE 1 TO RET-CODE.
GET-MASTER-END.
**********************************************************************
*
*	FILE ERROR ROUTINES
*
**********************************************************************

SITE-FILE-ERROR.
	DISPLAY '** SITE-FILE ERROR **'.
	DISPLAY 'S-KEY = ' S-KEY '	SITE-REC = ' SITE-REC.
	DISPLAY '** F A T A L **'.
	STOP RUN.

NAME-FILE-ERROR.
	DISPLAY '** NAME-FILE ERROR **'.
	DISPLAY 'N-KEY = ' N-KEY.
	DISPLAY 'NAME-REC:'.
	DISPLAY NAME-REC.
	DISPLAY '** F A T A L **'.
	STOP RUN.
 D 9