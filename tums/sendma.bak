begin	"SENDMAIL - RPG SENDMAIL replacement"

require "(SAILIB)SAIL.DEF" source!file;
require "ARGS.REQ" source!file;
require "FLIB.REQ" source!file;
require "MAILIB.REQ" source!file;
require !xwd( '0,'2 ) version;

define	calli!EXIT = '12;
define	MAXLENGTH = 100000;

r!p(MAI) M;
integer SOSbreak;	! break table to strip SOS line numbers;
integer NameBreak;
procedure include(string filename);
begin
    r!p(FILE) F;
    F := fOpen(filename, "rb1E");
    while not file:EOF[F] do begin
	string TEXT;
	TEXT := input(file:Chan[F], SOSbreak);
	if length(mai:Text[M]) + length(TEXT) > MAXLENGTH
	    then begin
		print("?truncated at ", MAXLENGTH, " characters"& crlf);
		done;
	    end
	    else mai:Text[M] := mai:Text[M]& TEXT;
    end;
    fClose( F );
end;
setbreak( SOSbreak_getbreak, null, null, "N" );
setbreak( NameBreak _ getbreak, ",:"&crlf, ",:"&crlf, "SINKT" );
M := new!record( MAI );
mai:From[M] := maiAMake( maiMyAddress );
mai:Date[M] := maiDate;
if kequ(ARGV[1], "MAIL") or ARGV[1] = "?" or kequ(ARGV[1], "HELP") then begin
    print("
Usage:
        SENDMAIL adr1, adr2, ... , adrN
where adri may be any of the following:
        username          to send to another user on this computer
        username@host     to send to another computer (e.g. TYM.J/DOE@Ontyme)
        @filename         to send to the addresses listed in the named file
");
    if kequ(ARGV[1], "MAIL") then print("
Note that the SENDMAIL command may be abbreviated to SEND, but if the full
command is used, there must not be a space between SEND and MAIL.
");
    calli(0, calli!EXIT);
end;
if ARGC leq 1 then begin
    print( "To: " );
    ARGS := inchwl;
end;
while length(ARGS) do begin
    string S;
    integer B;
    S := maiAScan( ARGS, B );
    if S = "@" then begin "indirect"
	r!p(FILE) F;
	F := fOpen( S[2 to inf], "rb4E:.CMD" );
	if B then ARGS := ARGS& B;
	while not file:EOF[F] do begin
	    ARGS := ARGS& input( file:Chan[F], NameBreak );
	    if file:Break[F] then ARGS := ARGS & ",";
	end;
	fClose( F );
	continue;
    end "indirect";
    if length( maiQFile( S ))
	then maiCatList( mai:To[M], S )
	else begin
	    print( "No user named: ", S, crlf );
	    calli( 0, calli!EXIT );
	end;
end;
if length( mai:To[M] ) = 0 then begin
    print( "No recipients." );
    while true do calli( 0, calli!EXIT );
end;
print( "Type letter:"& crlf );
while true do begin
    string TEXT;
    TEXT := inchwl;
    if TEXT = "@" then begin
	include(TEXT[2 to inf]);
	continue;
    end;
    case !SKIP! of begin
	[#stx] begin
	    print( "File name: " );
	    include(inchwl);
	end;
	[#eot][#sub] begin
	    if length(TEXT) then
		mai:Text[M] := mai:Text[M]& TEXT& crlf;
	    done;
	end;
	[#cr][#lf] TEXT := TEXT& crlf;
	[else] TEXT := TEXT& !SKIP!
    end;
print(  length(mai:Text[M]) , ", ", length(TEXT), ", ",  MAXLENGTH, crlf);
    if length(mai:Text[M]) + length(TEXT) > MAXLENGTH
	then print("?truncated at ", MAXLENGTH, " characters"& crlf)
	else mai:Text[M] := mai:Text[M]& TEXT;
end;
maiQueue( M );
maiSend;

end $
