(*   +--------------------------------------------------------------+
     |                                                              |
     |                         U T L S E T                          |
     |                         - - - - - -                          |
     |                                                              |
     +--------------------------------------------------------------+
     
     PURPOSE:  This is the bit-set manipulation  module.  Vectors  of
        bit  sets  are  used for a number of functions throughout the
        optimizer.  Since these vectors and sets must be  dynamically
        created,  and  their manipulation is repetitive, the creation
        and manipulation of bit set vectors has been  centralized  in
        this module.
     
        Each  bit  set vector is referred to with a descriptor, which
        must be declared with type "svector".  Such a  descriptor  is
        initialized  by NewSvector, and must be passed as a parameter
        to all the other routines in this module.
     
     ENTRY POINTS:
     
        new_svector (n_sets, n_elems)
                    will return a vector  of  bit  sets  (actually  a
                    descriptor  for  such  a vector), containing sets
                    numbered  0  through  n_sets,   each   containing
                    elements numbered 0 through n_elems.
     
        clr_set (v, i)
                    will  set  the  i-th set of vector v to the empty
                    set.
     
        unv_set (v, i)
                    will  set  the  i-th  set  of  vector  v  to  the
                    universal set.
     
        add_elem (v, i, e)
                    will add the specified element to the i-th set of
                    vector v.
     
        del_elem (v, i, e)
                    will delete the specified element from  the  i-th
                    set of vector v.
     
        cpy_set (v, i, j)
                    will  copy the i-th set of vector v into the j-th
                    set.
     
        mov_set (v, i, w, j)
                    will copy the i-th set of vector v into the  j-th
                    set  of vector w.  It is assumed that v and w are
                    vectors of sets over the same range.
     
        union (v, i, j)
                    will set the j-th set of vector v to the union of
                    the i-th and j-th sets.
     
        intersect (v, i, j)
                    will  set  the  j-th  set  of  vector  v  to  the
                    intersection of the i-th and j-th sets.
     
        subtract (v, i, j)
                    will set the j-th set of vector v to the  set  of
                    all  the  elements  which are in the j-th set and
                    are not in the i-th set.
     
        set_eq (v, i, j)
                    will return true if the i-th  and  j-th  sets  of
                    vector v are identical.
     
        in_set (v, i, e)
                    will  return true if the specified element occurs
                    in the i-th set of vector v.
     
        is_empty (v, i)
                    will return true if the i-th set of vector  v  is
                    the empty set.
     
        del_svector (v)
                    will  dispose  of  all the heap storage which has
                    been allocated for vector v.
     
     ---------------------------------------------------------------- *)
