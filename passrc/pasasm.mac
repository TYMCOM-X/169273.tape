	title	stuff_byte
;
;  STUFF_BYTE (ten_word: pdp10word; var cur_word: pdp10word;
;              cur_offset: elem_sizes; cur_width: elem_sizes);
;
;  STUFF_BYTE inserts the rightmost CUR_WIDTH bits of TEN_WORD
;  into CUR_WORD starting at offset CUR_OFFSET.
;  It is used by the Pascal compiler's constant generation routines
;  to create packed constants.
;
	twoseg
	reloc 400000
	entry 	stuff%


stuff%:
	hrrz	11,3			; acc 11 will be byte pointer.
	movei	10,^d36			; calc 'P' field of byte pointer.
	sub	10,4			;
	sub	10,5
	dpb	10,[point 6,11,5]

	dpb	5,[point 6,11,11]	; move size field to byte pointer.

	move	2,0(2)			; get ten_word in R2
	dpb	2,11			; move specified byte to specified loc.

	popj	17,
	prgend
	TITLE	FILEBLOCK

	ENTRY	FILEBLOCK

	TWOSEG
	RELOC	400000

;	BLOCK := FILEBLOCK (FILE)
;
;	R2 = Address of Pascal internal file block
;	R3 = Address of result block

FILEBLOCK:
	MOVE	2,0(2)
	SETZM	0(3)		; Fake device name
	DMOVE	12(2)
	DMOVEM	1(3)		; File name and extension
	MOVE	14(2)
	MOVEM	3(3)		; PPN
	POPJ	17,		; Return

	PRGEND
	TITLE	USERPPN

	ENTRY	USER%PPN

	TWOSEG
	RELOC	400000

USER%PPN:
	GETPPN	2,
	MOVEM	2,4(17)
	POPJ	17,

	PRGEND
	TITLE	TEMPNAME

;	FUNCTION TEMPNAME ( PACKED ARRAY [1..3] OF CHAR ): STRING [80]

	ENTRY TEMPNA

	TWOSEG

	RELOC	400000
TEMPNA:	MOVE	1,3
	PJOB	3,
	SETZ	5,
	IDIVI	3,12
	ADDI	4,"0"
	LSHC	4,-7
	IDIVI	3,12
	ADDI	4,"0"
	LSHC	4,-7
	IDIVI	3,12
	ADDI	4,"0"
	LSHC	4,-7
	MOVE	2,0(2)
	MOVE	3,2
	LSH	3,-25
	IOR	5,3
	MOVEM	5,1(1)
	ANDCMI	2,77777
	LSH	2,16
	MOVE	3,[ASCII / .TMP/]
	TLZ	3,140000
	OR	2,3
	MOVEM	2,2(1)
	MOVEI	2,12
	MOVEM	2,0(1)
	POPJ	17,
	PRGEND
	TITLE	ERR%FAILURE
	TWOSEG
	RELOC	400000
ERR%FA::
	JSP	1,ASSER.##
	POPJ	17,
	PRGEND
	TITLE	SYMHAK

;	This module defines two symbols which are referenced by PASJMP,
;	but which are never used in checkout code generators.

	ENTRY	EFFECT,SMOD
	EFFECT=	0
	SMOD=	0
	END
