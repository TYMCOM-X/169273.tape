TITLE PASPRN - PRINT PASSWORD FILE WITH STRUCTURE

P=17
CP=16	;POINTER TO IN CORE BLOCK
FP=15	;POINTER TO FILE BUFFER
NM1=14	;SECOND WORD OF NAME
NM=13	;FIRST WORD OF NAME
CPS=12	;SECOND CORE BLOCK POINTER
C=11	;CHARACTER TO PRINT

T1=1
T2=2
T3=3
T4=4

FIL==1	;CHANNEL FOR FILE
TTY==2	;OUTPUT CHANNEL

;WORDS OF IN CORE BLOCKS

ICNM==0	;FIRST WORD OF NAME
ICNM1==1	;SECOND WORD OF NAME
ICMAN==2	;POINTER TO CORE BLOCK FOR MANAGER
ICDWN==3	;DOWNWARD CORE POINTER (TO MANAGED)
ICSID==4	;POINTER TO OTHERS WITH SAME MANAGER (DOUBLE LINKED)
ICPRN==5	;LEFT HALF LEVEL RIGHT HALF LINE NUMBER TO PRINT ON
ICMXMN==6	;LH MIN, RH MAX OF LINES IN DOWN BLOCKS
ICSIZ==7	;SIZE OF ENTRY

;FILE WORDS, RELATIVE INDEX

FNM==0	;FIRST WORD OF NAME
FNM1==1	;SECOND WORD OF NAME
FLIC==3	;LICENSE FOR THIS USER
FMAN==5	;FIRST WORD OF MANAGER NAME
FMAN1==6	;SECOND WORD OF MANAGER NAME
FSIZ==7		;SIZE OF ENTRY

EXTERNAL JOBFF,JOBREL

ARRAY PDL[40],BUF[1000],OBUF[3]

FLDSIZ==^D14	;WIDTH OF ONE NAME FIELD

	JOBVER==137
	INTERNAL JOBVER
	LOC JOBVER
	4
	RELOC

STPT:	RESET
	INIT FIL,16
	SIXBIT /DSK/
	0
	HALT .
	LOOKUP FIL,FILNAM
	HALT .
	MOVE T1,JOBFF
	HRRZM T1,CORSR#	;CORE SEARCH POINTER
	MOVE P,[IOWD 40,PDL]
	PUSHJ P,GETCOR	;GET A CORE BLOCK
	HRRZM CP,GODMAN#	;ULTIMATE SOURCE OF EVERYTHING
	PUSHJ P,RDLIC	;SEE IF HE WANTS IT FOR A SPECIFIC LIC
NXFLB:	INPUT FIL,COM
	STATZ FIL,20000
	JRST EOF	;DONE WITH FILE
	MOVSI FP,-<1000/FSIZ>
NXTNAM:	DMOVE NM,BUF+FNM(FP)
	JUMPE NM,NONAM	;NO NAME THERE
	PUSHJ P,CHKLIC	;DOES THIS ONE MEET LICENSE REQUIREMENTS
	 JRST NONAM	;NO, IGNORE IT
	PUSHJ P,SRNAM	;CHECK IN CORE BLOCKS
	 SKIPA
	JRST DBLNAM	;FOUND, POSSIBLE DUPLICATE
	PUSHJ P,GETCOR	;NOT FOUND, GET CORE FOR NAME
	DMOVEM NM,ICNM(CP)	;SAVE NAME
RENMAN:	HRRZ CPS,CP	;SAVE CORE POINTER
	DMOVE NM,BUF+FMAN(FP)	;GET MANAGER NAME
	JUMPE NM,ISGOD	;THIS IS A GOD
	PUSHJ P,SRNAM	;FIND IT
	 JRST CREMAN	;NOT THERE, CREATE ONE
LNKGOD:	MOVEM CP,ICMAN(CPS)	;SAVE MANAGER POINTER
	SKIPE T1,ICDWN(CP)	;ALREADY A DOWN POINTER?
	JRST HASDWN	;YES
	MOVEM CPS,ICDWN(CP)	;NO, SET ONE
NONAM:	ADDI FP,FSIZ-1
	AOBJN FP,NXTNAM
	JRST NXFLB	;NEXT BLOCK OF FILE

HASDWN:	HRRZ T2,ICSID(T1)	;LINK ALONG SIDE CHAIN
	JUMPE T2,ENDDWN	;END OF CHAIN
	MOVE T1,T2
	JRST HASDWN

ENDDWN:	HRRM CPS,ICSID(T1)	;LINK INTO CHAIN
	HRLM T1,ICSID(CPS)
	JRST NONAM	;AND GO ON TO NEXT

CREMAN:	PUSHJ P,GETCOR	;CREATE A MANAGER NAME
	DMOVEM NM,ICNM(CP)
	SETOM ICPRN(CP)	;SAY CREATED BUT NOT SEEN IN FILE
	MOVEM CPS,ICDWN(CP)
	HRRZM CP,ICMAN(CPS)
	HRRZ CPS,CP	;SAVE POINTER TO MANAGER
ISGOD:	MOVE CP,GODMAN	;POINT TO GOD LINK
	JRST LNKGOD

DBLNAM:	SKIPL ICPRN(CP)	;IS THIS A FAKE ONE?
	JRST NMDBL	;NO, ERROR
	SETZM ICPRN(CP)	;NOT NOW
	HLRZ T1,ICSID(CP)	;GET LINKS
	HRRZ T2,ICSID(CP)
	SETZM ICSID(CP)
	JUMPE T2,NORIT	;NO RIGHT HAND LINK
	HRLM T1,ICSID(T2)	;IS ONE, LINK AROUND BLOCK
NORIT:	JUMPE T1,NOLFT	;NOW FOR LEFT
	HRRM T2,ICSID(T1)
	JRST RENMAN	;AND PUT IN HIS MANAGER
NOLFT:	MOVE T1,ICMAN(CP)	;FAKE MANAGER MUST HAVE DOWN POINTER
	MOVEM T2,ICDWN(T1)	;READJUST IT
	JRST RENMAN

EOF:	MOVE CP,GODMAN	;CHECK FOR CONSISTANCY
	SKIPN CP,ICDWN(CP)
	JRST NOLST	;BAD
EOF1:	SKIPE ICPRN(CP)
	JRST NMDBL	;CALL IT BAD FILE
	HRRZ CP,ICSID(CP)
	JUMPN CP,EOF1	;CHECK ALL POINTED TO BY GO
	SETZB NM1,NM	;NM IS LEVEL, NM1 LINE NUMBER
	SETZM MAXLEV#
	SETZM MAXLIN#	;KEEP TRACK OF MAXIMA
	MOVE CP,GODMAN
	MOVE CP,ICDWN(CP)
LINUM:	SKIPN T1,ICDWN(CP)
	JRST BOTLEV	;BOTTOM OF THIS TREE
	MOVE CP,T1	;POINT TO NEXT LEVEL DOWN
	AOJA NM,LINUM	;AND WORK ON IT WITH NEW LEVEL

BOTLEV:	HRRM NM1,ICPRN(CP)	;SET LINE NUMBER
	HRLM NM,ICPRN(CP)	;AND LEVEL
	HRLM NM1,ICMXMN(CP)
	HRRM NM1,ICMXMN(CP)	;NO DOWN POINTER, MAX=MIN=.
	CAMLE NM1,MAXLIN
	MOVEM NM1,MAXLIN
	CAMLE NM,MAXLEV
	MOVEM NM,MAXLEV
	ADDI NM1,1	;NEXT IS ON NEXT LINE
	HRRZ T1,ICSID(CP)	;SEE IF A SIDE BRANCH
	JUMPE T1,GOUP	;NO, GO UP A LEVEL
	MOVE CP,T1	;YES, TRY IT
	JRST LINUM

GOUP:	SOJL NM,FINUM	;HAVE GOTTEN TO GOD
	MOVE CP,ICMAN(CP)
	MOVE T1,ICDWN(CP)
	HRRZ T2,ICPRN(T1)	;FIND THE NUMBERS OF LOWER LEVEL
	HLL T4,ICMXMN(T1)
ENDLOW:	HRRZ T3,ICPRN(T1)
	HRR T4,ICMXMN(T1)	;FIND MAX AND MIN OF LOWER BLOCKS
	HRRZ T1,ICSID(T1)
	JUMPN T1,ENDLOW
	ADD T2,T3
	LSH T2,-1	;TAKE AVERAGE
	HRRM T2,ICPRN(CP)
	HRLM NM,ICPRN(CP)
	MOVEM T4,ICMXMN(CP)
	HRRZ T1,ICSID(CP)	;ANDY SIDE BRANCHEC?
	JUMPE T1,GOUP	;NO, UP A LEVEL
	SKIPE ICDWN(CP)
	SKIPN ICDWN(T1)	;IF BOTH HAVE DOWN POINTERS
	SKIPA
	ADDI NM1,1	;THEN LEAVE A BLANK LINE
	MOVE CP,T1
	JRST LINUM	;TRY THE SIDE BRANCH

FINUM:	INIT TTY,0
	SIXBIT /TTY/
	OBUF,,0
	HALT .
	HRROI T2,27	;GET LINE WIDTH
	AUXCAL	T2,T2	;GET LINE WIDTH
	MOVEI T3,12	;LINE FEED CHR
	MOVEI T1,TTY
	DEVNAM T1,
	 MOVSI T1,'TTY'	;ASSUME TTY ON ERROR RETURN
	HLRZS T1	;REAL NAME OF OUTPUT DEVICE
	CAIN T1,'TTY'
	JRST ISTTY	;REALLY TTY
	MOVEI T2,^D132	;NOT TTY, ASSUME TO LPT
	MOVEI T3,23
ISTTY:	MOVEM T2,LINLEN#
	MOVEM T3,LFCHR#
	IDIVI T2,FLDSIZ
	MOVEM T2,NUMFLD#	;NUMBER OF FIELDS ON ONE LINE
	SETZM BOTFLD#	;LOWEST FIELD THIS TIME
PRNPAS:	MOVEI C,14
	PUSHJ P,OCHR	;FORM FEED
	MOVE T1,LFCHR
	CAIE T1,12	;IS THIS A TTY
	JRST LPTPAG	;NO LPT
	MOVEI C,"-"
	REPEAT 3,<PUSHJ P,OCHR>
	MOVEI C,15
	PUSHJ P,OCHR
	MOVEI C,12
	PUSHJ P,OCHR
LPTPAG:	SETZM LINE#	;FIRST LINE
LINCNT:	MOVE CP,GODMAN
	MOVE CP,ICDWN(CP)	;GET SET TO PRINT A LINE, GET START
	SETZM CHRPOS#	;WHERE WE ARE
CNTPRN:	HRRZ T1,ICPRN(CP)	;WHAT LINE DOES THIS GO ON
	CAMLE T1,LINE
	JRST DWNPRN	;BIGGER THAN CURRENT, TRY DOWN POINTER
	CAMN T1,LINE	;ON THIS LINE?
	JRST PRNNAM	;YES, PRINT NAME
	HRRZ CPS,ICSID(CP)	;GET SIDE POINTER
	JUMPE CPS,DWNPRN	;NONE, MUST BE IN DOWN CHAIN
	HRRZ T2,ICPRN(CPS)	;WHERE DOES SIDE PRINT
	CAMG T2,LINE	;WILL IT PRINT LATER?
	JRST USESID	;NO, IT IS THE ONE OF INTEREST
	HLRZ T1,ICPRN(CP)	;BETWEEN TWO SIDES, PRINT *
	SUB T1,BOTFLD
	JUMPL T1,DWNSID		;OFF LEFT MARGIN
	CAML T1,NUMFLD
	JRST NXTLIN		;OFF RIGHT MARGIN
	IMULI T1,FLDSIZ		;WHERE TO PRINT
	PUSHJ P,SETPOS		;SPACE OVER THERE
	MOVEI C,"*"
	PUSHJ P,OCHR
DWNSID:	HRRZ T1,ICMXMN(CP)	;DOES THIS DOWN POINTER
	CAMGE T1,LINE		;INCLUDE THIS LINE
	MOVE CP,CPS	;NO, GO DOWN SIDE CHAIN
DWNPRN:	MOVE CP,ICDWN(CP)
	JUMPN CP,CNTPRN	;IF A DOWN POINTER, GO PRINT

NXTLIN:	MOVEI C,15	;FINISHED ONE LINE
	PUSHJ P,OCHR
	MOVE C,LFCHR
	PUSHJ P,OCHR
	AOS T1,LINE
	CAMG T1,MAXLIN	;FINISHED ALL LINES?
	JRST LINCNT	;NO, DO NEXT
	MOVE T2,NUMFLD
	ADDB T2,BOTFLD	;DO NEXT SET
	CAMG T2,MAXLEV
	JRST PRNPAS
	EXIT		;DONE

USESID:	MOVE CP,CPS
	JRST CNTPRN

PRNNAM:	HLRZ T1,ICPRN(CP)	;GET POSITION
	SUB T1,BOTFLD
	JUMPL T1,DWNPRN	;OFF LEFT MARGIN
	CAML T1,NUMFLD
	JRST NXTLIN	;OFF RIGHT FIELD
	IMULI T1,FLDSIZ
	PUSHJ P,SETPOS
	MOVEI C,"*"
	SKIPE ICSID(CP)	;IS THERE A SIDE LINE?
	PUSHJ P,OCHR	;YES, PRINT *
	DMOVE NM,ICNM(CP)
	PUSHJ P,NAMPR	;PRINT NAME
	SKIPN ICDWN(CP)	;DOWN POINTER?
	JRST NXTLIN	;NO, DONE
	HLRZ T1,ICPRN(CP)
	SUB T1,BOTFLD
	IMULI T1,FLDSIZ
	ADDI T1,FLDSIZ	;FILL TO END OF FIELD WITH .
	MOVEI C,"."
	PUSHJ P,SETPS1
	JRST DWNPRN	;AND LINK DOWN

SETPOS:	MOVEI C," "
SETPS1:	CAMG T1,CHRPOS
	POPJ P,		;GONE FAR ENOUGH
	PUSHJ P,OCHR
	JRST SETPS1

OCHR:	AOS CHRPOS
	SOSG OBUF+2
	OUTPUT TTY,0
	IDPB C,OBUF+1
	POPJ P,

NAMPR:	MOVEI T3,0
NAMPR1:	MOVE T1,NM
	IDIVI T1,^D45
	MOVE NM,T2
	DIVI NM,^D45
	EXCH NM,NM1
	EXCH T1,NM
	SKIPN T3
	JUMPE T1,NAMPR1	;SKIP SPACES AT END
	ADDI T3,1
	HRLM T1,(P)
	SKIPN NM1
	SKIPE NM
	PUSHJ P,NAMPR1
	HLRZ C,(P)
	MOVE C,ASCOTB(C)
	JRST OCHR

ASCOTB:	40
	%%X==101
	REPEAT 32,<%%X
%%X==%%X+1>
	%%X==54
	REPEAT 17,<%%X
%%X==%%X+1>
	OCT 52,47,44

;READ COMMAND LINE FOR ; FOLLOWED BY SOME LICENSES

RDLIC:	SETZM LICREQ#	;LICENSE REQUIRED
	RESCAN
RDLC1:	INCHWL C
	CAIN C,12
	POPJ P,		;NOTHING ON THIS LINE
	CAIE C,";"
	JRST RDLC1	;STILL PART OF THE COMMAND TO MONITOR
RDLC2:	PUSHJ P,LISCN	;READ A LICENSE FIELD
	 JRST RDLFIN	;FINISH UP (SET FILE WRITE FIELD)
	MOVE C,ACCUM	;GET THE CHRS READ
	MOVSI T1,-LICLEN
	CAME C,LICASC(T1)	;DOES IT MATCH
	AOBJN T1,.-1
	JUMPGE T1,UNREC	;NOT RECOGNIZED
	MOVE T2,LICVAL(T1)	;GET THE VALUE THAT GOES WITH THIS LIC
	LDB T3,LICPNT(T1)	;CURRENT VALUE
	JUMPE T3,SETLIC		;WWAS 0 SO SET IT
	CAMGE T2,T3
SETLIC:	DPB T2,LICPNT(T1)	;FILL IT IN
	JRST RDLC2	;AND CONTINUE READING

LISCN:	SETZM ACCUM#
	MOVE T1,[POINT 7,ACCUM]
LISC2:	INCHWL C
	CAIN C,12
	POPJ P,
	PUSHJ P,ISLET
	JRST LISC2	;NOT A LETTER, IGNORE IT
	AOS (P)		;SEEN SOMETHING, SET FOR SKIP RET
	IDPB C,T1
LISC3:	INCHWL C
	PUSHJ P,ISLET
	POPJ P,		;NOT LETTER, DONE
	TLNE T1,670000	;ALREADY STORED 4?
	IDPB C,T1	;NO, STORE IT
	JRST LISC3

ISLET:	CAIL C,140
	SUBI C,40
	CAIG C,"Z"
	CAIGE C,"A"
	POPJ P,
	AOS (P)
	POPJ P,

UNREC:	OUTSTR [ASCIZ /
UNRECOGNIZED LICENSE /]
	OUTSTR ACCUM
	EXIT

RDLFIN:	LDB T1,[POINT 2,LICREQ,33]	;READ FILE LIC
	JUMPE T1,CPOPJ		;NOTHING WANTED
	LDB T2,[POINT 2,LICREQ,35]	;WRITE
	SKIPE T2
	CAMLE T2,T1
	DPB T1,[POINT 2,LICREQ,35]	;IF WRITE=0 OR WRITE> READ SET WRITE=READ
	POPJ P,

	DEFINE LICENS
<	X WC,1,1,18	;NAME,VALUE,SIZE,POS
	X RC,1,1,19
	X OP,1,1,20
	X SY,1,1,21
	X GD,1,1,22
	X TD,1,1,23
	X ST,1,1,24
	X JL,1,1,26
	X AC,1,1,27
	X XC,1,1,28
	X QM,1,1,29
	X RP,1,2,33
	X RF,2,2,33
	X RA,3,2,33
	X WP,1,2,35
	X WF,2,2,35
	X WA,3,2,35
	X MG,1,1,17
	X HU,1,1,16
	X CS,1,1,15
	X AP,1,1,14
	X MT,1,1,13
	X SP,1,1,12
	X RL,1,1,11
	X VL,1,1,10
>

	DEFINE X(A,B,C,D)
<	<ASCII /A/>>

LICASC:	LICENS
LICLEN==.-LICASC

	DEFINE X(A,B,C,D)
<	B>

LICVAL:	LICENS

	DEFINE X(A,B,C,D)
<	POINT C,LICREQ,D>

LICPNT:	LICENS

CHKLIC:	SKIPN LICREQ
	JRST CPOPJ1	;IF NO REQUEST, ANYTHING IS GOOD ENOUGH
	MOVSI T1,-LICLEN
CHKLC1:	LDB T2,LICPNT(T1)	;GET VALUE IN LICREQ
	JUMPE T2,CHKLC2	;NOTHING BEING LOOKED FOR
	MOVE T3,LICPNT(T1)
	HRRI T3,BUF+FLIC(FP)
	LDB T3,T3	;GET USERS LICENSE
	CAML T3,T2	;IS THIS ENOUGH?
	JRST CPOPJ1	;YES, GO TO IT
CHKLC2:	AOBJN T1,CHKLC1	;LOOK FOR SOMETHING HE DOES HAVE
	POPJ P,		;DOES NOT HAVE ANYTHING WE WANT

GETCOR:	MOVEI CP,ICSIZ
	ADDB CP,JOBFF
	CAMG CP,JOBREL
	JRST COROK
	IORI CP,1777
	CORE CP,
	JRST NOCOR
COROK:	MOVE CP,JOBFF
	SUBI CP,ICSIZ
	SETZM (CP)
	HRL T1,CP
	HRRI T1,1(CP)
	BLT T1,ICSIZ-1(CP)	;ZERO BLOCK
	MOVSI T1,-1
	ADDM T1,CORSR	;ADJUST SEARCH POINTER
	POPJ P,

SRNAM:	MOVE CP,CORSR
SRNAM1:	CAMN NM,ICNM(CP)
	CAME NM1,ICNM1(CP)
	SKIPA
	JRST CPOPJ1	;FOUND NAME
	ADDI CP,ICSIZ-1
	AOBJN CP,SRNAM1
	POPJ P,

CPOPJ1:	AOS (P)
CPOPJ:	POPJ P,

COM:	IOWD 1000,BUF
	0

FILNAM:	3
	1,,4
	SIXBIT /DRWSPR/
	SIXBIT /EPO/

NMDBL:	OUTSTR [ASCIZ /BAD PASSWORD FILE/]
	EXIT

NOCOR:	OUTSTR [ASCIZ /INSUFFICIENT CORE/]
	EXIT

NOLST:	OUTSTR [ASCIZ /NO LIST STRUCTURE/]
	EXIT

	END STPT
  