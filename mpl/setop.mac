TITLE SETOP - MANAGERS PROGRAM FOR SETTING LICENSE TO GRANT

LOC 137
	Byte (3) 0 (9) 21 (6) 0 (18) 0	; %21(0)  8/15/86   Carl
RELOC

if2,<printx License required: WC JL HF>

T1=1
T2=2
T3=3
T4=4
T5=5
T6=6

BLK=12	;BLOCK NUMBER (1000 WORD BLOCKS) TO ACCESS
BUFP=13	;POINTER TO BUFFER WITH BLOCK IN IT
NM1=14	;FIRST WORD OF NAME
NM2=15	;SECOND WORD OF NAME
PNTR=16	;POINTER INNTO BUFFER FOR SEARCHES ETC
P=17

PSW==1	;CHANNEL FOR PASSWORD FILE
TTY==2	;FOR TTY

JBTLIC==-20	;FOR GETTABS
JBTAUN==-23	;AUN
JBTPRV==6	;PRV WORD

JBSMOD==2	;SIZE OF MODE FIELD
JBNMOD==^D28	;LOCATION OF MODE FIELD
LICWC==(1B0)
LICJAL==(1B8)
BITDMP==1B4	;FILE DUMPED BIT
LICLOK==14	;LICENSE HERE ON LOOKUP
%TIME==^D60000	;TIMEOUT TIME (1 MIN)

;LOCATIONS OF WORDS IN BUFFER AREA

BFNM1==0	;FIRST WORD OF NAME
BFNM2==1	;SECOND WORD OF NAME
BFPSW==2	;CIPHERED PASSWORD
BFLIC==3	;LICENSE WORD
BFDST==4	;DISTRICT NUMBER
BFMAN1==5	;FIRST WORD OF MANAGER NAME
BFMAN2==6	;SECOND WORD OF MANAGER NAME
ENTSIZ==7			; length of password file entry in words

ARRAY PDL[40],MANSAV[2],SAVNAM[2],LICBLK[2],HSHBLK[5]

DEB==0		;DEBUG SWITCH

;	TATTLE record 

TATBUF:	44B8+TATSIZ		; type, jobno, termid, length
	block 1			; date supplied by monitor
TATAUN:	block 1			; AUN of user
	sixbit	"SETOP"		; cusp name in sixbit
TATCMD:	block 1			; command in sizbit
MANNAM:	block 2			; manager's name in RAD50
MANLIC:	block 1			; manager's license
ENTBUF:	block ENTSIZ		; copy of entry
TATSIZ==.-TATBUF

TATTLE:	PJOB	T1,		; get job number for TATTLE record
	DPB	T1,[point 9,TATBUF,17]
	HRROI	T1,JBTAUN
	GETTAB	T1,		; get AUN for TATTLE record
	 HALT	.
	MOVEM	T1,TATAUN
	HRLI	T1,(PNTR)	; address of block just modified 
	HRRI	T1,ENTBUF	; place to put it in TATTLE record
	BLT	T1,ENTBUF+ENTSIZ-1
	MOVEI	T1,TATBUF
	PUTSAR	T1,		; write TATTLE record
	 SKIPN	T1		; ignore code for no accounting
	  POPJ	P,		; okay - all is well
	OUTSTR	[asciz "?unexpected PUTSAR error
"]
	RESET
	EXIT

STPT:	RESET
	MOVE P,[IOWD 40,PDL]
	INIT PSW,16
IFE DEB,<SIXBIT /SYS/>
IFN DEB,<SIXBIT /DSK/>
	0
	JRST NODSK
	INIT TTY,0
	SIXBIT /TTY/
	0
	JRST GETOUT		;JUST SO WE CAN TURN ECHO ON AND OFF
	MOVEI T1,INTDSP		;SET UP INTERUPT SYSTEM FOR TIME AND ESC
	HRLI T1,6
	INTADR T1,
	 JRST GETOUT
	MOVSI T1,700000		;ENABEL CH 1 AND 2
	INTENB T1,
	 JRST GETOUT
	MOVEI T1,0
	SETTIM T1,		;RESET TIMER
	 JRST GETOUT
	HRLOI T1,000001		
IFLE DEB,<TINASS T1,
	 JRST GETOUT>
	MOVEI T1,2
	HRLI T1,4
	INTASS T1,		;TIMER ON 2
	 JRST GETOUT
	SETZM DATESW#		;DO NOT LIST DATES
	HRROI T1,JBTLIC
	GETTAB T1,		;CHECK ON LICENSE HE HAS
	 JRST GETOUT
	TLNN T1,LICWC		; we must have WC
	 JRST GETOUT
	TLNN T1,LICJAL		; we must have JL also
	 JRST GETOUT
	TRNN T1,LICWC
	 JRST NOWC		;USER DOES NOT HAVE IT, NOT SPECIAL

COMMENT ; HERE IF USER HAS WC LICNESE, BUILD FILE IF NECESSARY.
SET HIM WITH GOD-LIKE STATUS AND ALLOW ONLY ONE
COMMAND;

HASWC:	PUSHJ 	P,OPNFIL	;OPEN THE PASSWORD FILE
	 JRST 	CREFIL		;NOT THERE, MUST CREATE IT
	PUSHJ 	P,BUFINI
	JRST	GETNAM
RETRY:	OUTSTR	[
asciz "?no such manager, enter another name or <CR>
"]
GETNAM:	OUTSTR [ASCIZ "Enter OPER name: "]
	PUSHJ 	P,RDNAM
	 JRST 	NONAME		; if typed a <CR> then noname
	PUSHJ 	P,FNDNAM
	 JRST 	RETRY		; if name not found, try again
	MOVSI 	T1,L.MG
	TDNN 	T1,BFLIC(PNTR)
	 JRST 	ERROUT		;NOT A MANAGER
	MOVE 	T1,BFLIC(PNTR)
	MOVEM 	T1,MANLIC
	DMOVEM 	NM1,MANNAM
	MOVE 	T1,BFMAN1(PNTR)
	MOVEM 	T1,MANSUP	;TO SEE IF GOD IS SUP.
	LDB 	T1,BPDST
	MOVEM 	T1,MANDST	;SET DISTRICT NUMBER
	PUSHJ	P,MANINI
	JRST	CMDLP

NONAME:	HRROI 	NM2,JBTAUN	;GET GAN UUN
	GETTAB 	NM2,
	 JRST 	GETOUT
	MOVEI 	NM1,0
	DMOVEM 	NM1,MANNAM	;SAVE AS MANAGER NAME
	SETOM 	MANLIC		;SET LICENSE
	PUSHJ 	P,BUFINI	;SET UP BUFFERS
	SETZM 	MANSUP#		;TO SEE IF GOD IS SUP
	SETZM 	MANDST#
	PUSHJ 	P,MANINI	;INIT MANAGER LIST
	JRST 	CMDLP

OPNFIL:	LOOKUP PSW,PASNAM
	 POPJ P,		;NOT THERE
	MOVE T1,PASNAM+LICLOK	;HERE IS WHERE LIC ON FILE IS
	TRNN T1,LICWC
	POPJ P,			;SAY FILE NOT THERE
	MOVSI T1,(BITDMP)
	ANDCAM T1,PASNAM+LICLOK	;RESET DDUMPED BIT
	ENTER PSW,PASNAM	;TRY TO ENTER
	 SKIPA			;CAN NOT ENTER
	JRST CPOPJ1		;ALL OK
	OUTSTR [ASCIZ "%password file busy - waiting...
"]
HIBLP:	MOVEI T1,^D10000	;10 seconds
	HIBER T1,
	 JFCL
	ENTER PSW,PASNAM
	 JRST HIBLP		;WAIT AGAIN
CPOPJ1:	AOS (P)
CPOPJ:	POPJ P,


CREFIL:	CLOSE PSW,0
	ENTER PSW,PASMAK
	 JRST NOMAK		;CAN NOT CREATE FILE
	CLOSE PSW,0
	JRST HASWC		;GO

NOMAK:	OUTSTR [ASCIZ /Can not create password file
/]
	JRST GETOUT

PASNAM:	14
	0
	SIXBIT /DRWSPR/
	SIXBIT /EPO/
	REPEAT 11,<0>

PASMAK:	14
	0
	SIXBIT /DRWSPR/
	SIXBIT /EPO/
	XWD 044000,0
	REPEAT 7,<0>
	LICWC


NOWC:	PUSHJ P,OPNFIL
	 JRST NOPSFL		;NO PASSWORD FILE
	PUSHJ P,BUFINI
	OUTSTR [ASCIZ "Enter your name: "]
	PUSHJ P,RDNAM
	 JRST ERROUT
	PUSHJ P,FNDNAM
	 JRST ERROUT
	MOVSI T1,L.MG
	TDNN T1,BFLIC(PNTR)
	 JRST ERROUT		;NOT A MANAGER
	SETSTS TTY,200
	PUSHJ P,PROMPT
	PUSHJ P,RDPAS
	SETSTS TTY,0
	MOVE T1,HSHBLK
	CAME T1,BFPSW(PNTR)
	 JRST ERROUT
	MOVE T1,BFLIC(PNTR)
	MOVEM T1,MANLIC
	DMOVEM NM1,MANNAM
	MOVE T1,BFMAN1(PNTR)
	MOVEM T1,MANSUP		;TO SEE IF GOD IS SUP.
	LDB T1,BPDST
	MOVEM T1,MANDST		;SET DISTRICT NUMBER
	PUSHJ P,MANINI
CMDLP:	OUTSTR [ASCIZ /
*/]
	SETZM SAVCHR
IFLE DEB,<MOVEI T1,%TIME
	SETTIM T1,
	 JRST GETOUT>
	PUSHJ P,SCAN
	 JRST CMDLP
	MOVE T3,ACCUM
	MOVSI T2,-NAMLEN	;SCAN NAMES
	CAME T3,NAMES(T2)
	 AOBJN T2,.-1
	JUMPGE T2,HELP
	MOVEM T3,TATCMD		; save command for tattle record
	PUSHJ P,@GOTO(T2)
	 JFCL
	JRST CMDLP

	DEFINE NAMSTR
<	X ADD,ADDOP
	X QUIT,QUIT
	X Q,QUIT
	X LIST,LISTOP
	X PASSWORD,CHGPSW
	X MANAGED,LSTSUP
	X CANCEL,DELOP
	X CHANGE,CHGOP
	X TRANSFER,TRNOP
	X DATE,DATON
	X NODATE,DATOFF
>

	DEFINE X (A,B)
<	<SIXBIT /A/>>

NAMES:	NAMSTR
NAMLEN==.-NAMES

	DEFINE X (A,B)
<	B>

GOTO:	NAMSTR

QUIT:	PUSHJ P,FINCR
	EXIT

HELP:	PUSHJ P,FINCR
	OUTSTR HELPMS
	JRST CMDLP

HELPMS:	ASCIZ \Commands are:
  ADD		adds a new name
  LIST		list all names
  LIST name	list a given name
  PASSWORD 	change a password for a name 
  MANAGED	list names supervised by current name
  MANAGED name	list names managed by given supervisor
  CANCEL	remove a name
  CHANGE	change license or district
  TRANSFER	change manager for a name
  DATE		enable listing of password change dates
  NODATE	disable listing of password change dates
  QUIT 		terminate session
\

;ADD A NEW OPERATOR

ADDOP:	PUSHJ P,NAMPMT
	 JRST BADNAM
	PUSHJ P,FNDNAM	;SEARCH FOR IT
	 JRST NEWNAM	;NOT FOUND, OK
	OUTSTR [ASCIZ "name already entered"]
	POPJ P,		;RETURN TO CALLER
NEWNAM:	PUSHJ P,FNDSPC
	PUSHJ P,GETPAS
	 POPJ P,	;BAD PASSWORD
	PUSHJ P,SETLIC
	MOVEM T2,BFLIC(PNTR)
	DMOVEM NM1,BFNM1(PNTR)
	MOVE T1,HSHBLK
	MOVEM T1,BFPSW(PNTR)
	DMOVE T1,MANNAM
	DMOVEM T1,BFMAN1(PNTR)
	PUSHJ P,SETDST	;SET DISTRICT NUMBER
	DPB T2,BPDST
	DATE T2,
	DPB T2,BPDATE
	AOS (P)		;COMMAND SUCCESSFUL
	JRST WRTBLK

GETPAS:	SETSTS 	TTY,200	;TURN OFF ECHO
RPTPAS:	OUTSTR 	[ASCIZ "Enter password:"]
	PUSHJ 	P,RDPAS
	OUTSTR	[byte (7)15,12,0]
	JUMPG	T5,SHORT
	JUMPN	T6,NOINBD
	PUSH 	P,HSHBLK
	OUTSTR 	[ASCIZ "Enter it again:"]
	PUSHJ 	P,RDPAS
	SETSTS 	TTY,0
	OUTSTR 	[byte (7)15,12,0]
	POP 	P,T1
	CAMN 	T1,HSHBLK
	 JRST 	CPOPJ1
	OUTSTR	[asciz "?passwords do not agree
"]
	JRST	GETPAS
SHORT:  OUTSTR	[asciz "?password must be at least 7 characters long
"]
        JRST    RPTPAS
NOINBD: OUTSTR	[asciz "?password must contain an embedded non-alphabetic character
"]
        JRST    RPTPAS

LSTSUP:	PUSHJ P,NAMPMT
	 JRST BADNAM
	PUSHJ P,FNDNAM
	 JRST NONAM
	PUSHJ P,ISMAN
	 JRST NONAM	;NOT HIS MANAGER
	DMOVE NM1,BFNM1(PNTR)
	DMOVEM NM1,SAVNAM
	MOVSI T1,L.MG
	TDNN T1,BFLIC(PNTR)
	POPJ P,		;NOT A MANAGER
	PUSHJ P,FRSUSR	;INITIALIZE FOR SEARCH
LSUP1:	PUSHJ P,NXTMAN	;GET THE NEXT USER MANAGED
	 POPJ P,	;NONE
	PUSHJ P,LSTUSR	;LIST IT
	JRST LSUP1

NONAM:	OUTSTR [ASCIZ /NAME NOT FOUND/]
	POPJ P,

;FIND NEXT PERSON MANAGED BY NAMEE IN SAVNAM

NXTMAN:	PUSHJ P,NXTUSR
	 POPJ P,	;NO MORE USERS
	DMOVE NM1,BFMAN1(PNTR)
	CAMN NM1,SAVNAM
	CAME NM2,SAVNAM+1
	JRST NXTMAN	;NOT THIS ONE
	JRST CPOPJ1	;FOUND ONE

BPDATE:	POINT 15,BFDST(PNTR),27
BPDST:	POINT 8,BFDST(PNTR),35


DELOP:	PUSHJ P,NAMPMT
	 JRST BADNAM
	PUSHJ P,SAMCHK
	 JRST NOTSLF
	PUSHJ P,FNDNAM
	 JRST NONAM
	PUSHJ P,ISMAN
	 JRST NONAM
	DMOVE NM1,BFNM1(PNTR)
	DMOVEM NM1,SAVNAM
	PUSHJ P,BUFLOK	;LOCK DOWN THIS BUFFER
	PUSHJ P,FRSUSR	;SEE IF HE MANAGES ANYONE
	PUSHJ P,NXTMAN
	 JRST FINDEL	;NO
BADNMG:	DMOVE NM1,BFNM1(PNTR)	;NAME OF PERSON MANAGED
	PUSHJ P,BUFULK	;UNLOCK BUFFER OF NAME TO CANCEL
	OUTSTR [ASCIZ /?change would leave /]
	PUSHJ P,NAMPR
	OUTSTR [ASCIZ / without a manager
%command not executed/]
	POPJ P,

FINDEL:	PUSHJ P,BUFULK	;OK TO DELETE, UNLOCK BUFFER
	PUSHJ P,TATTLE		; write record before deleted
	SETZM BFNM1(PNTR)	;THIS DELETES HIM
	AOS (P)
	JRST WRTBL1		; write out erased block, don't tattle

CHGPSW:	PUSHJ P,NAMPMT
	 JRST BADNAM
	PUSHJ P,FNDNAM
	 JRST NONAM
	PUSHJ P,ISMAN
	 JRST NONAM
	PUSHJ P,GETPAS
	 POPJ P,
	MOVEM T1,BFPSW(PNTR)
	DATE T1,
	DPB T1,BPDATE	;SET DATE OF PASSWORD CHANGE
	AOS (P)
	JRST WRTBLK

DATON:	SETOM DATESW
	JRST FINCR

DATOFF:	SETZM DATESW
	JRST FINCR

NOTSLF:	OUTSTR [ASCIZ /Can not do that to yourself/]
	POPJ P,

SAMCHK:	CAMN NM1,MANNAM
	CAME NM2,MANNAM+1
	AOS (P)
	POPJ P,


CHGOP:	PUSHJ P,NAMPMT	;JUST LIKE OTHERS
	 JRST BADNAM
	PUSHJ P,SAMCHK
	 JRST NOTSLF
	PUSHJ P,FNDNAM
	 JRST NONAM
	DMOVEM NM1,SAVNAM	;SAVE USERS NAME
	PUSHJ P,ISMAN
	 JRST NONAM	;CAN NOT ACCESS HIM
	PUSHJ P,SETLIC	;GET DESIRED LICENSE
	PUSHJ P,SETDST	;AND DISTRICT
	MOVEM T2,NEWDST#
	PUSHJ P,BUFLOK	;LOCK THAT BUFFER
	DMOVE NM1,BFMAN1(PNTR)	;HIS MANAGER
	JUMPE NM1,CHG1	;MANAGER IS GOD
	PUSHJ P,FNDNAM
	 JRST MANERR	;NOT THERE, SOMETHING WRONG WITH FILE
	LDB T2,BPDST
	JUMPE T2,CHG2	;DISTRICT 0, ALL OK
	CAME T2,NEWDST	;NON-0, MUST BE SAME AS NEW ONE
	JRST BADDSM	;NO, ERROR
CHG2:	MOVE T1,DESLIC
	HRRZM T1,LICBLK	;SEE IF MANAGER COULD SET THAT LICENSE
	ANDCM T1,BFLIC(PNTR)	;AND SEE IF COULD SET LEFT HALF
	TLNE T1,-1
	 JRST BADLCM	;COULD NOT SET LEFT HALF
	MOVE T1,BFLIC(PNTR)
	HRRZM T1,LICBLK+1
	MOVE T1,[1,,LICBLK]
	CHKLIC T1,
	 HLL T1,DESLIC	;THEY MUST BE THE SAME
	CAME T1,DESLIC
	 JRST BADLCM	;BUT ARE NOT
CHG1:	PUSHJ P,FRSUSR	;NOW CHECK ALL THE PEOPLE HE MANAGES
CHG4:	PUSHJ P,NXTMAN
	 JRST FINCHG	;ALL DONE, NOW MAKE CHANGE
	MOVE T1,DESLIC
	TLNN T1,L.MG	;HE MANAGES SOMEONE, MUST HAVE MG
	 JRST BADNMG	;NO, AN ERROR
	SKIPN T2,NEWDST
	 JRST CHG3	;HE IS IN DISTRIC 0, AND DIST FOR USER OK
	LDB T2,BPDST
	CAME T2,NEWDST	;NOT 0, MUST BE SAME
	 JRST BADDSU	;NO, BAD
CHG3:	HRRZM T1,LICBLK+1	;MUCH LIKE ABOVE
	ANDCA T1,BFLIC(PNTR)
	TLNE T1,-1
	 JRST BADLCU
	MOVE T1,BFLIC(PNTR)
	HRRZM T1,LICBLK
	MOVE T1,[1,,LICBLK]
	CHKLIC T1,
	 HLL T1,BFLIC(PNTR)
	CAME T1,BFLIC(PNTR)
	 JRST BADLCU
	JRST CHG4	;CHECK OTHERS HE MANAGES

FINCHG:	PUSHJ P,BUFULK	;GET BACK TO USER TO CHANGE
	MOVE T1,NEWDST
	DPB T1,BPDST
	MOVE T1,DESLIC
	MOVEM T1,BFLIC(PNTR)
	AOS (P)
	JRST WRTBLK	;ALL CHANGED

BADDSU:	DMOVE NM1,BFNM1(PNTR)	;PRINT NAME OF USER
	SKIPA
BADDSM:	DMOVE NM1,SAVNAM	;PRINT NAME OF USER TO CHANGE
	PUSHJ P,BUFULK
	OUTSTR [ASCIZ /?change would leave /]
	PUSHJ P,NAMPR
	OUTSTR [ASCIZ / with district not grantable by manager
%command not executed/]
	POPJ P,

BADLCU:	DMOVE NM1,BFNM1(PNTR)
	SKIPA
BADLCM:	DMOVE NM1,SAVNAM
	PUSHJ P,BUFULK
	OUTSTR [ASCIZ /?change would leave /]
	PUSHJ P,NAMPR
	OUTSTR [ASCIZ / with license not grantable by manager
%command not executed/]
	POPJ P,

TRNOP:	PUSHJ P,NAMPMT
	 JRST BADNAM
	PUSHJ P,SAMCHK
	 JRST NOTSLF
	PUSHJ P,FNDNAM
	 JRST NONAM
	DMOVEM NM1,SAVNAM
	PUSHJ P,ISMAN
	 JRST NONAM
	OUTSTR [ASCIZ /New manager name: /]
	PUSHJ P,RDNAM
	 JRST BADNAM
	PUSHJ P,BUFLOK	;LOCK BUFFER WITH USER NAME
	PUSHJ P,FNDNAM
	 JRST NONM1	;NOT THERE
	DMOVEM NM1,MANSAV	;SAVE MANAGER NAME
	PUSHJ P,ISMAN
	 JRST NONM1	;DO NOT MANAGE HIM
	MOVE T1,BFLIC(PNTR)
	TLNN T1,L.MG
	JRST NOTMG	;HE IS NOT A MANAGER
	MOVEM T1,DESLIC	;SAVE POTENTIAL MANAGERS LICENSE
	PUSHJ P,BUFLOK	;LOCK NEW MANAGERS BUFFER
	DMOVE NM1,BFNM1(PNTR)	;GET HIS NAME
TRNSS:	CAMN NM1,SAVNAM
	 CAME NM2,SAVNAM+1	;SEE IF SAME NAME AS USER TO BE MOVED
	  SKIPA		;NO
	   JRST MANLOP	;YES
	DMOVE NM1,BFMAN1(PNTR)	;GET HIS MANAGER
	JUMPE NM1,TRNS0	;TRACED BACK TO GOD SO OK
	PUSHJ P,FNDNAM	;FIND HIS MANAGER
	 JRST MANERR	;NOT THERE
	JRST TRNSS	;GO LOOK SOME MORE
TRNS0:	PUSHJ P,BUFULK	;NOW POINT TO NEW MANAGER
	LDB T1,BPDST
	MOVEM T1,NEWDST
	MOVE PNTR,-2(P)	;POINTER TO USER NAME
	SKIPN T2,NEWDST
	 JRST TRNS1	;NEW MANAGER IN DISTRICT 0, OK
	LDB T2,BPDST
	CAME T2,NEWDST	;NOT 0, MUST BE SAME
	 JRST BADDSM	;NOT, GO COMPLAIN
TRNS1:	MOVE T1,DESLIC	;NEW MANAGER MUST HAVE ENOUGH LIC
	HRRZM T1,LICBLK+1
	ANDCA T1,BFLIC(PNTR)
	TLNE T1,-1
	 JRST BADLCM	;DOES NOT
	MOVE T1,BFLIC(PNTR)
	HRRZM T1,LICBLK
	MOVE T1,[1,,LICBLK]
	CHKLIC T1,
	 HLL T1,BFLIC(PNTR)
	CAME T1,BFLIC(PNTR)
	 JRST BADLCM	;BAD, GO COMPLAIN

FINTRN:	PUSHJ P,BUFULK	;UNLOCK BUFFER
	DMOVE NM1,MANSAV
	DMOVEM NM1,BFMAN1(PNTR)	;CHANGE MANAGER
	AOS (P)
	JRST WRTBLK	;AND WRITE IT OUT

NOTMG:	OUTSTR [ASCIZ /Not a manager/]
	PUSHJ P,BUFULK	;UNLOCK
	POPJ P,		;AND RETURN

NONM1:	PUSHJ P,BUFULK
	JRST NONAM	;NAME NOT THERE

MANLOP:	OUTSTR [ASCIZ /Change would cause /]
	DMOVE NM1,SAVNAM
	PUSHJ P,NAMPR
	OUTSTR [ASCIZ  / to be his own manager
Command not executed/]
	PUSHJ P,BUFULK	;UNLOCK MANAGER
	PUSHJ P,BUFULK	;UNLOCK USER
	POPJ P,		;RETURN


LISTOP:	PUSHJ P,RDNAM
	 JRST LSTALL	;WANTS TO LIST ALL
	PUSHJ P,FNDNAM	;FIND THE NAME
	 JRST NONAM	;NOT THERE
	PUSHJ P,ISMAN	;IS HE THE MANAGER
	 JRST NONAM	;NOT MANAGER
LSTUSR:	DMOVE NM1,BFNM1(PNTR)
	PUSHJ P,NAMPR
	OUTCHI 11
	MOVE T1,BFLIC(PNTR)
	MOVEM T1,DESLIC
	PUSHJ P,LICPR	;NOW THE LICENSE
	OUTSTR [ASCIZ /
	Manager: /]
	DMOVE NM1,BFMAN1(PNTR)
	JUMPE NM1,GODMAN	;SPECIAL FOR GOD-LIKE MANAGER
	PUSHJ P,NAMPR
LSTUS1:	LDB T1,BPDST
	JUMPE T1,LSTUS2	;DO NOT LIST 0 DISTRICTS
	OUTSTR [ASCIZ /
	District: /]
	PUSHJ P,OUTDEC
LSTUS2:	SKIPN DATESW	;LIST DATE?
	JRST LSTUS3	;NO
	LDB T1,BPDATE
	OUTSTR [ASCIZ /
	Date: /]
	PUSHJ P,OUTDAT
LSTUS3:	OUTSTR [ASCIZ /

/]
	POPJ P,

GODMAN:	OUTCHI "["
	HLRZ T1,NM2
	PUSHJ P,OUTOCT
	OUTCHI ","
	HRRZ T1,NM2
	PUSHJ P,OUTOCT
	OUTCHI "]"
	JRST LSTUS1

OUTOCT:	IDIVI T1,10
	HRLM T2,(P)
	SKIPE T1
	PUSHJ P,OUTOCT
	HLRZ T1,(P)
	OUTCHI "0"(T1)
	POPJ P,

LSTALL:	PUSHJ P,FRSUSR	;SET UP TO INITIALIZE USER SEARCH
LSALP:	PUSHJ P,NXTUSR	;GET THE NEXT ONE
	 POPJ P,	;FINISHED
	PUSHJ P,ISMAN
	 JRST LSALP	;NOT MANAGER
	PUSHJ P,LSTUSR
	JRST LSALP	;CONTINUE


NAMPR:	MOVE T1,NM1	;DO A DOUBLE PRECISION DIVIDE
	IDIVI T1,^D45
	MOVE NM1,T2
	DIVI NM1,^D45
	EXCH NM1,NM2
	EXCH T1,NM1	;T1 NOW HAS REMAINDER
	JUMPE T1,NAMPR	;IGNORE SPACES AT END
	HRLM T1,(P)	;SAVE REMAINDER
	SKIPN NM1
	SKIPE NM2	;FINISHED?
	PUSHJ P,NAMPR	;NO
	HLRZ T1,(P)
	OUTCHR ASCOTB(T1)
	POPJ P,

	DEFINE X1(A,B)
<	RELOC ASCOTB+B
	A
	RELOC>

	DEFINE X2(A,B,C)
<	XX==A
	RELOC ASCOTB+C
	REPEAT B-A+1,<XX
	XX==XX+1>
	RELOC>

;THE OUTPUT TABLE

;NOW CHARACTER CONVERSION

	DEFINE CHRCNV
<	X1 (40,0)
	X1 (100,52)
	X1 (52,52)
	X1 (47,53)
	X1 (44,54)
	X2 (54,72,33)
	X2 (101,132,1)
>

ASCOTB:	REPEAT ^D45,<"$">
	CHRCNV

OUTDEC:	IDIVI T1,^D10
	HRLM T2,(P)
	SKIPE T1
	PUSHJ P,OUTDEC
	HLRZ T1,(P)
	OUTCHI "0"(T1)
	POPJ P,


LICPR:	MOVSI T3,-LICLEN	;GET SET TO PRINT OUT LICENSE
LICPLP:	LDB T1,LICBP(T3)
	CAME T1,LICVL1(T3)
	JRST NOLICP
	OUTCHI " "
	MOVE T2,LICSIX(T3)
	PUSHJ P,OUTSIX
NOLICP:	AOBJN T3,LICPLP
	POPJ P,

FRSUSR:	SETZB BLK,PNTR	;SET UP FOR USER SEARCH
	POPJ P,

NXTUBK:	ADDI BLK,1	;NEXT BLOCK
	PUSHJ P,FNDBLK
	 POPJ P,	;NO BLOCK, MUST BE FINISHED
	HRR PNTR,BUFP
	HRLI PNTR,-^D73
	JRST NXTUS1
NXTUSR:	ADDI PNTR,6
	AOBJP PNTR,NXTUBK	;OUT OF SPACE IN THIS BLOCK?
NXTUS1:	SKIPN BFNM1(PNTR)	;SOMEONE THERE?
	JRST NXTUSR	;NO
	JRST CPOPJ1	;YES

SETDST:	SKIPE T2,MANDST	;IS MANAGER IN DISTRICT 0
	POPJ P,		;NO, NO CHOICE ABOUT DISTRICT
	OUTSTR [ASCIZ /District: /]
	PUSHJ P,RDNUM
	 SKIPA
	POPJ P,
	OUTSTR [ASCIZ /Not a number
/]
	JRST SETDST

RDNUM:	INCHWL T1
	CAIGE T1,40
	JRST FINCR	;FINISH UP AND NON-SKIP RETURN
	CAIG T1,"9"
	CAIGE T1,"0"
	JRST RDNUM
	MOVEI T2,0	;SET TO ACCUMULATE NUMBER
	AOS (P)		;AND FOR SKIP RETURN
RDNLP:	ADDI T2,-"0"(T1)
	INCHWL T1
	CAIG T1,"9"
	CAIGE T1,"0"
	JRST FINCR	;FINISHED
	IMULI T2,^D10
	JRST RDNLP


COMMENT ; THIS CODE BUILDS A LIST OF ALL MANAGERS IN CORE. THERE
IS A FLAG FOR EACH TO TELL IF WE MANAGE HIM. INITIALIZED WITH
OUR NAME IN LIST. 3 WORDS PER ENTRY. 2 OF NAME AND -1 IF WE
ARE HIS MANAGER ;

MANINI:	HRRZ T1,JOBFF
	MOVEM T1,LSTPTR#
	DMOVE NM1,MANNAM
	PUSHJ P,LSTINS
	SETOM 2(T5)	;FLAG HIM AS ON LIST
	POPJ P,

LSTINS:	MOVEI T5,3	;ADD NAME TO LIST
	ADDB T5,JOBFF
	CAMG T5,JOBREL
	JRST COROK	;ENOUGH CORE TO ADD ONE
	IORI T5,1777
	CORE T5,	;GET MORE CORE
	 JRST NOCOR	;LOSE
	MOVE T5,JOBFF
COROK:	DMOVEM NM1,-3(T5)
	SETZM -1(T5)
	MOVSI T5,-1
	ADDB T5,LSTPTR
	POPJ P,

NOCOR:	OUTSTR [ASCIZ /
Not enough core!/]
	JRST GETOUT

EXTERNL JOBFF,JOBREL

MANERR:	OUTSTR [ASCIZ /
Program error, file not consistant!/]
	JRST GETOUT

;HERE TO SEARCH LIST FOR NAME IN NM1,NM2

LSTSRC:	SKIPL T5,LSTPTR
	POPJ P,		;NO LIST TO SEARCH
LSTSR1:	CAMN NM1,(T5)
	CAME NM2,1(T5)
	SKIPA
	JRST CPOPJ1	;FOUND HIM
	ADDI T5,2
	AOBJN T5,LSTSR1
	POPJ P,	;NOT THERE


ISMAN:	SKIPE MANNAM
	SKIPN MANSUP
	JRST CPOPJ1
	PUSHJ P,BUFLOK		;LOCK CURRENT BUFFER
	SETZM LSTADD#
	MOVSI T1,L.MG
	TDNN T1,BFLIC(PNTR)
	JRST ISMAN4	;NOT A MANAGER
	DMOVE NM1,BFNM1(PNTR)	;GET NAME FOR SEARCH
ISMAN2:	PUSHJ P,LSTSRC
	 JRST	[PUSHJ P,LSTINS
		AOS LSTADD
		JRST ISMAN1]
	MOVE T3,2(T5)	;GET IN OR OUT OF CHAIN FLAG
ISMAN3:	PUSHJ P,BUFULK		;UNLOCK BUFFER
	SKIPN T4,LSTADD
	JRST NOLUP	;NO LIST UPDATE
	MOVE T5,JOBFF
	MOVEM T3,-1(T5)
	SUBI T5,3
	SOJG T4,.-2
NOLUP:	JUMPN T3,CPOPJ1
	POPJ P,		;NOT IN LIST
ISMAN1:	PUSHJ P,FNDNAM	;NOW FIND IT
	 JRST MANERR
ISMAN4:	DMOVE NM1,BFMAN1)
	JUMPE NM1,[MOVEI T3,0
		JRST ISMAN3]	;FINISH UP
	JRST ISMAN2

OUTDAT:	IDIVI T1,^D31	;NOW DAY-1 IN T2, MON AND YR IN T1
	PUSH P,T1
	MOVEI T1,1(T2)
	PUSHJ P,OUTDEC	;PRINT DAY
	POP P,T1
	IDIVI T1,^D12	;YEAR-64 IN T1, MONTH-1 IN T2
	OUTSTR @DATTAB(T2)
	ADDI T1,^D64
	JRST OUTDEC

	DEFINE DAT (A)
<IRP A,<[ASCIZ /-A-/]>>

DATTAB:	DAT <Jan,Feb,Mar,Apr,May,Jun,Jul,Aug,Sep,Oct,Nov,Dec>


INTDSP:	0
	RCVESC		;ESCAPE
	0
	TIMOUT		;TIMER

TIMOUT:	OUTSTR [asciz "
?timeout"]
	CLRBFI
	RESET
	EXIT

RCVESC:	CLRBFI
	CLRBFO
	RESET
	EXIT

NODSK:	OUTSTR [ASCIZ /?can not init DSK:/]
GETOUT:	CLOSE PSW,0
	CLRBFI
	EXIT 1,
	JRST .-1

BADNAM:	OUTSTR [ASCIZ /?no name entered
/]
	POPJ P,		;RETURN TO CALLER

NOPSFL:	OUTSTR [ASCIZ /?no password file/]
	JRST GETOUT

ERROUT:	OUTSTR [ASCIZ /
?/]
	JRST GETOUT

;BUFFER CODE FOR INPUT AND OUTPUT

BUFNUM==3

BUFIOW==-2	;IOWD FOR INPUT AND OUTPUT TO BUFFER
BUFLNK==-3	;LINK TO NEXT BUFFER. SIGN BIT BUFFER LOCKED
BUFBLK==-4	;BLOCK NUMBER

	DEFINE CAT (A,B)
	<A'B>

	DEFINE BUFER (N)<
	0	;BLOCK
	CAT (BUFR,\<N+1>)	;LINK
	IOWD 1000,.+2
	0			;END OF COMMAND LIST
BUFR'N:	BLOCK 1000
>
	ZZ==0
	REPEAT BUFNUM,<BUFER (\ZZ)
	ZZ==ZZ+1>
	CAT (BUFR,\BUFNUM)==BUFR0

BUFINI:	MOVEI BUFP,BUFR0	;SET UP FREE POINTER
	MOVEM BUFP,FREBUF#
SETZBK:	SETZM BUFBLK(BUFP)	;CLEAR BLOCK NUMBERS
	HRRZS BUFP,BUFLNK(BUFP)
	CAME BUFP,FREBUF
	JRST SETZBK	;GO THROUGH ALL BUFFERS
	POPJ P,		;BACK WHERE WE STARTED

COMMENT ; THERE ARE SEVERAL BUFFERS IN CORE. THEY ACT LIKE A CASH
MEMORY EXCEPT THAT WRITES GO THROUGH IMMEDIATELY. BLK TELLS
THE (512 WORD) BLOCK TO PROCESS. REUTRN FROM SEARCH ROUTINES WITH
BUFP SET TO POINT TO BUFFER ;


FNDBUF:	HRRZ BUFP,FREBUF
SRCBUF:	CAMN BLK,BUFBLK(BUFP)
	JRST CPOPJ1	;FOUND A BUFFER WITH THAT BLOCK IN IT
	HRRZ BUFP,BUFLNK(BUFP)	;NOT THIS ON, SEARCH
	CAME BUFP,FREBUF
	JRST SRCBUF	;MORE TO LOOK AT
	POPJ P,

FNDBLK:	PUSHJ P,FNDBUF
	 SKIPA		;NO BUFFER FOUND
	JRST CPOPJ1	;FOUND IT, ALL OK
	MOVEI T1,-1(BLK)	;GET THE DESIRED BLOCK
	LSH T1,2
	USETI PSW,1(T1)
	STATZ PSW,20000	;DID IT SET EOF?
	JRST FNDBDN	;YES, RESET EOF BIT AND EXIT
	PUSHJ P,SRCFBF
	HRRZ T1,BUFLNK(BUFP)
	MOVEM T1,FREBUF	;START LOOKING WITH NEXT BUFFER
	MOVEM BLK,BUFBLK(BUFP)
	INPUT PSW,BUFIOW(BUFP)
	AOS (P)
	STATZ PSW,740000
	OUTSTR [ASCIZ /
Read error on password file!
/]
FNDBDN:	SETSTS PSW,16
	POPJ P,

WRTBLK:	PUSHJ P,TATTLE		; write tattle record
WRTBL1:	PUSHJ P,FNDBUF		; find the appropriate buffer
	 JRST WRTERR
	MOVE T1,BUFBLK(BUFP)
	SUBI T1,1
	LSH T1,2
	USETO PSW,1(T1)
	OUTPUT PSW,BUFIOW(BUFP)
	STATZ PSW,740000
	OUTSTR [ASCIZ /
?write error on password file
/]
	JRST FNDBDN

WRTERR:	OUTSTR [ASCIZ /
?program error on write/]
	RESET
	EXIT

;SEARCH FOR A FREE BUFFER

SRCFBF:	SKIPL BUFLNK(BUFP)	;SEARCH FOR ONE NOT LOCKED
	POPJ P,		;FOUND A FREE ONE
	HRRZ BUFP,BUFLNK(BUFP)
	CAME BUFP,FREBUF
	JRST SRCFBF
	OUTSTR [ASCIZ /
?program error: no free buffers/]
	RESET
	EXIT


ZERBLK:	MOVE BUFP,FREBUF
	PUSHJ P,SRCFBF		;FIND A FREE ONE
	MOVEM BLK,BUFBLK(BUFP)
	SETZM (BUFP)
	HRL T1,BUFP
	HRRI T1,1(BUFP)
	BLT T1,777(BUFP)
	POPJ P,			;NOW HAVE A BLOCK OF 0'S

PROMPT:	OUTSTR	[asciz "Password:"]
	POPJ P,

BUFLOK:	EXCH PNTR,(P)		;SAVE PNTR
	PUSH P,BUFLNK(BUFP)	;AND THE ORIGINAL BLOCK-LOCK WORD
	MOVSI T1,400000
	IORM T1,BUFLNK(BUFP)	;LOCK BUFFER
	PUSH P,BUFP
	MOVE T1,PNTR
	MOVE PNTR,-2(P)		;RESTORE PNTR FOR CALLER
	JRST (T1)

BUFULK:	POP P,PNTR		;RETURN ADDRESS
	EXCH PNTR,-2(P)		;RESTORE POINTER
	POP P,BUFP
	HRRZ BLK,BUFBLK(BUFP)
	POP P,BUFLNK(BUFP)
	POPJ P,			;AND RETURN

LOKERR:	OUTSTR [ASCIZ /
?program error, can not find locked buffer/]
	JRST GETOUT


;READ AN OPERATOR NAME AND PRODUCE THE RADIX 45. REPRESENTATION

RDNAM:	IFLE 	DEB,<
	MOVEI 	T1,%TIME
	SETTIM 	T1,
	 JRST 	GETOUT>
	SETZB 	NM1,NM2
	MOVEI 	T2,^D12		;12 CHARACTERS
RDNM0:	INCHWL 	T1
	CAIN 	T1," "
	 JRST 	RDNM0		;SKIP LEADING SPACES
	SKIPA
RDNM1:	 INCHWL T1
	CAIGE 	T1,40
	 JRST 	FINNAM		;FINISH READING NAME
	PUSHJ 	P,ACMCHR	;CONVERT CHR AND ADD IN
	SOJG 	T2,RDNM1
	 JRST 	FINCR1		;FINISH READING LINE

FINNAM:	CAIN 	T2,^D12		;DETECT NO NAME TYPED
	 JRST 	FINCR		;AND NON-SKIP EXIT
	PUSH 	P,T1		;SAVE CHR READ
FINM1:	MOVEI 	T1," "
	PUSHJ 	P,ACMCH2
	SOJG 	T2,FINM1
	 POP 	P,T1
FINCR1:	AOS 	(P)
FINCR:	CAIE 	T1,12
	 JRST	[INCHWL T1
		JRST FINCR]
	MOVEI 	T1,0
	SETTIM 	T1,	;RESET TIMER, INPUT DONE
	 JRST 	GETOUT
	POPJ 	P,

NAMPMT:	PUSHJ 	P,RDNAM	;TAKE POSSIBLE NAME ON SAME LINE AS CMD
	 SKIPA		;NO NAME GIVEN THERE, PROMPT
	JRST 	CPOPJ1	;OK
	OUTSTR [ASCIZ /Enter operator name: /]
	JRST RDNAM	;GO READ IT


ACMCHR:	CAILE T1,140
	SUBI T1,40	;CONVERT UPPER CASE
ACMCH2:	MOVE T3,NM1	;SAVE HIGH ORDER PART
	MOVE NM1,NM2
	IMULI T3,^D45
	MULI NM1,^D45
	ADD NM1,T3	;DOUBLE PRECISION MULTIPLY
	ADD NM2,CHRTAB-40(T1)
	POPJ P,

	DEFINE X1 (A,B)
<	RELOC CHRTAB+A-40
	B
	RELOC>

	DEFINE X2(A,B,C)
<	XX=C
	RELOC CHRTAB+A-40
	REPEAT B-A+1,<XX
	XX==XX+1>
	RELOC>

CHRTAB:	REPEAT 100,<54>
	CHRCNV


;FIND A NAME IN THE FILE

FNDNAM:	MOVEI BLK,1
FNDNM2:	PUSHJ P,FNDBLK	;GET THAT BLOCK
	 POPJ P,	;EOF, NO NAME
	MOVE PNTR,BUFP
	HRLI PNTR,-^D73	;73 NAMES PER BLOCK
FNDNM1:	CAMN NM1,BFNM1(PNTR)
	CAME NM2,BFNM2(PNTR)
	SKIPA
	JRST CPOPJ1	;FOUND
	ADDI PNTR,6
	AOBJN PNTR,FNDNM1	;NEXT NAME ENTRY
	AOJA BLK,FNDNM2	;NEXT BLOCK

FNDSPC:	MOVEI BLK,1
FNDSP2:	PUSHJ P,FNDBLK
	 PUSHJ P,ZERBLK	;NO MORE BLOCKS, GENERATE BLOCK OF 0'S
	MOVE PNTR,BUFP
	HRLI PNTR,-^D73
FNDSP1:	SKIPN BFNM1(PNTR)
	POPJ P,		;FOUND IT
	ADDI PNTR,6
	AOBJN PNTR,FNDSP1	;NEXT ENTRY IN BLOCK
	AOJA BLK,FNDSP2	;NEXT BLOCK


RDPAS:	IFLE DEB,<MOVEI T1,%TIME
	SETTIM T1,
	 JRST GETOUT>
	MOVE T1,[555555555555]
	MOVEM T1,HSHBLK
	MOVEM T1,HSHBLK+2
	MOVEM T1,HSHBLK+4
	MOVE T1,[361275431652]
	MOVEM T1,HSHBLK+1
	MOVEM T1,HSHBLK+3
	MOVEI T3,0
	SETO  T6,
	MOVEI T5,7
PSWLP:	INCHWL T1
	CAIE T1,15
	 CAIN T1,33
	  JRST FINCR
	CAIL T1,140		; check case
	 SUBI T1,40		; convert to upper case
        JUMPE T6,PSWLP1         ; has inbedded non-alphabetic been found?
        JUMPG T6,INBED               ; was last character non-alphabetic?
	CAIL T5,7		; is this beyond the 2nd character?
	 JRST PSWLP1		; then test for non-alphabetic
	CAIL T1,"A"		; this character alpha
	 CAILE T1,"Z"
	   MOVEI T6,1		; non-alphabetic
PSWLP1:	SOS T5			; count characters
	ADDM T1,HSHBLK
	ADDM T1,HSHBLK+3
	MOVEI T4,40
RAND:	MOVE T1,HSHBLK(T3)
	MUL T1,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM T2,HSHBLK+1(T3)
	CAIE T3,3
	AOJA T3,RAND1
	MOVE T3,HSHBLK+4
	ADDM T3,HSHBLK
	LSH T3,-42
RAND1:	SOJG T4,RAND
	JRST PSWLP
INBED:  SETZ T6,
        JRST PSWLP1
;SET LICENSE FOR JOB

SETLIC:	OUTSTR [ASCIZ /License: /]
IFLE DEB,<MOVEI T1,%TIME
	SETTIM T1,
	 JRST GETOUT>
	SETZM SAVCHR#
	SETZM DESLIC#
	PUSHJ P,SCAN
	 JRST LICPMT	;JUST RETURN, PROMPT
SETLC1:	MOVSI T3,-LICLEN
	MOVE T2,ACCUM
LICSR1:	CAMN T2,LICSIX(T3)	;LOOK FOR THE LICENSE HE TYPED IN
	JRST FNDLIC	;GO IT
	AOBJN T3,LICSR1
	PUSHJ P,FINCR	;DID NOT TYPE SOMETHING WE RECOGNIZE
	OUTCHI "?"
	PUSHJ P,OUTSIX
	OUTSTR [ASCIZ /
/]
	JRST SETLIC	;LET HIM TRY AGAIN

OUTSIX:	MOVEI T1,0
	LSHC T1,6
	OUTCHI " "(T1)
	JUMPN T2,OUTSIX
	POPJ P,

FNDLIC:	PUSHJ P,CANLIC	;CAN HE GRANT THIS LICENSE?
	 JRST NOGRNT	;NO
	LDB T2,LICBP(T3)	;GET CURRENT SETTING OF FIELD
	CAMGE T2,LICVL1(T3)	;IN CASE OF RF RP ETC.
	MOVE T2,LICVL1(T3)	;SETTING HIGHER THAN IT WAS
	DPB T2,LICBP(T3)	;SAVE IT AWAY
	PUSHJ P,SCAN		;SCAN FOR MORE
	 JRST	[MOVE T2,DESLIC	;RETURN LICENSE SET
		POPJ P,]
	JRST SETLC1		;ANOTHER, LOOP SOME MORE

NOGRNT:	PUSHJ P,FINCR
	OUTSTR [ASCIZ /Can not grant /]
	MOVE T2,LICSIX(T3)
	PUSHJ P,OUTSIX
	OUTSTR [ASCIZ /
/]
	JRST SETLIC


LICPMT:	MOVSI T3,-LICLEN
LICPM1:	LDB T2,LICBP(T3)
	CAML T2,LICVL1(T3)	;ALREADY SET THAT MUCH OR MORE?
	JRST NXTPMT		;YES. DONT ASK RP AFTER YES TO RF
	PUSHJ P,CANLIC	;CAN HE GRANT IT
	 JRST NXTPMT	;NO, SKIP THIS ONE
	OUTSTR @LICFUL(T3)	;ASK FOR LICENSE BY NAME
IFLE DEB,<MOVEI T1,%TIME
	SETTIM T1,
	 JRST GETOUT>
	INCHWL T1
	CAIE T1,"Y"
	CAIN T1,"y"
	JRST	[MOVE T2,LICVL1(T3)	;SAID YES
		DPB T2,LICBP(T3)
		JRST .+1]
	PUSHJ P,FINCR
NXTPMT:	AOBJN T3,LICPM1
	MOVE T2,DESLIC
	POPJ P,

;CHECK ON THE LICENSE WE CAN GRANT

CANLIC: MOVE T2,LICVAL(T3)
	SKIPGE MANLIC	;MANLIC<0 means WC so can have everything
	  JRST CPOPJ1
	TLNN T2,-1	;IS IT ONE OF THE SPECAIL INTERNAL BITS
	JRST LICCHK	;NO
	AND T2,MANLIC
	JUMPE T2,CPOPJ	;DOES NOT HAVE IT, CAN NOT GRANT IT
	JRST CPOPJ1	;OK TO GRANT

LICCHK:	MOVEM T2,LICBLK
	MOVE T2,MANLIC
	HRRZM T2,LICBLK+1
	MOVE T2,[1,,LICBLK]
	CHKLIC T2,
	CAMN T2,LICVAL(T3)	;CAN HE SET THIS ONE
	AOS (P)		;YES
	POPJ P,		;OR NO

;SCANNER TO SCAN TO IDENT

SCAN:	SETZM ACCUM#
	MOVE T2,[POINT 6,ACCUM]
	SKIPN T1,SAVCHR
SCAN1:	INCHWL T1
	CAIGE T1,40
	JRST FINCR	;FINISH LINE AND NON-SKIP RETURN
	CAILE T1,140
	SUBI T1,40	;CONVERT LOWER TO UPPER
	CAIG T1,"Z"	;LOOK FOR LETTERR
	CAIGE T1,"A"
	JRST SCAN1
SCAN2:	SUBI T1,40	;CONVERT TO SIXBIT
	TLNE T2,770000
	IDPB T1,T2
	INCHWL T1
	CAILE T1,140
	SUBI T1,40
	CAIG T1,"Z"
	CAIGE T1,"A"
	SKIPA
	JRST SCAN2
	MOVEM T1,SAVCHR	;END OF IDENT
	JRST CPOPJ1

;TABLES FOR LICENSE

DEFINE LICENS <
X WC,1,18,1,<Write core>
X RC,1,19,1,<Read core>
X OP,1,20,1,<Operator>
X SY,1,21,1,<Systat>
X GD,1,22,1,<Get devices>
X TD,1,23,1,<Transfer devices>
X ST,1,24,1,<Structures>
X JL,1,26,1,<Jacct-login>
X AC,1,27,1,<Aux circuits>
X XC,1,28,1,<Modify charges>
X QM,1,29,1,<Queue manager>
X RA,3,33,2,<Read absolute>
X RF,2,33,2,<Read files>
X RP,1,33,2,<Read project>
X WA,3,35,2,<Write absolute>
X WF,2,35,2,<Write files>
X WP,1,35,2,<Write project>

X MG,1,17,1,<Manager>
X HU,1,16,1,<Hang user>
X CS,1,15,1,<Customer services>
X AP,1,14,1,<Accounting programs>
X MT,1,13,1,<Maintenance>
X SP,1,12,1,<Spooling>
X RL,1,11,1,<Remote license>
X VL,1,10,1,<Validation>
>

DEFINE X (A,B,C,D,E)
<	SIXBIT /A/>

LICSIX:	LICENS
LICLEN==.-LICSIX

DEFINE X(A,V,C,D,E)
<	V'B'C>

LICVAL:	LICENS

DEFINE X(A,B,C,D,E)
<	POINT D,DESLIC,C>

LICBP:	LICENS

DEFINE X(A,B,C,D,E)
<	[ASCIZ /E (A) /]>

LICFUL:	LICENS

DEFINE X(A,V,C,Q,E)
<	IFL ^D'C-^D18,<L.'A==(V'B'C)>
	IFGE ^D'C-^D18,<L.'A==V'B'C>>

	LICENS

DEFINE X(A,B,C,D,E)
<	B>

LICVL1:	LICENS

	END STPT
  ,I*