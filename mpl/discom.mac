SUBTTL	A CHRISTOPHER HALL FECIT
SUBTTL	ROUTINES AND DATA COMMON TO DISREL AND DISEXE

;LOADING INSTRUCTIONS:

;       .LOA DISREL+DISCOM
;       .SAVE DISREL
; OR
;       .LOA DISEXE+DISCOM
;       .SAVE DISEXE

;NOTE:	some similar, but different, routines use switch FTREL
;	0 => DISEXE, -1 => DISREL (like SYSRC)

CUSTVR==0		;DEC DEVELOPMENT
HALVER==4		;MAJOR VERSION
HALMVR==0		;MINOR VERSION
HALEVR==20		;EDIT NUMBER

	LOC 137
	BYTE	(3)CUSTVR (9)HALVER (6)HALMVR (18)HALEVR
	RELOC

;SUBROUTINE TO DO GENERAL SETUP

SETUP:	MOVE	A,.JBFF 	;GET SMALLEST TOP-OF-CORE LOCAION
	MOVEM	A,JOBFF 	;SAVE IT FOR REENTRY
	MOVEI	A,REENT 	;GET ADDRESS OF REENTRY ROUTINE
	MOVEM	A,.JBSA 	;SAVE AS NEW STARTING ADDRESS
       	MOVEI	A,GETAK		;GET ADDRESS OF CORE ROUTINE
	HRRM	A,.JBAPR	;SAVE AS APR TRAP
	MOVEI	A,420000       	;SET UP USER MEMORY PROTECTION VIOLATION TRAP
	APRENB	A,    	 	;  SO CORE IS EXPANDED AUTOMATICALLY
NOFILE:	PUSHJ 	P,GETFIL	;SET UP FILE SPECS
 	SKIPN	INFIL		;SOME FILE GIVEN?
	JRST	NOFILE		;NO - ASK AGAIN
	MOVSI	B,'MAX' 	;GET DEFAULT OUTPUT EXTENSION
 	MOVE	A,INEXT 	;GET INPUT EXTENSION
	CAMN	A,OUTEXT	;SAME AS FOR OUTPUT FILE?
	MOVEM	B,OUTEXT	;YES - USE .MAX FOR OUTPUT INSTEAD

	JUMPN	A,SETFIL	;SKIP THIS IF THERE IS AN INPUT EXT
IFN FTREL,<
	MOVSI	A,'REL' 	;ELSE SET UP DEFAULT EXTENSION
>
IFE FTREL,<
	MOVSI	A,'EXE'
>
	MOVEM	A,INEXT 	;  INSTEAD

SETFIL:	OPEN	IN,INBLK
	  HALT
 	LOOKUP	IN,INFIL
	  JRST	LUKERR	 	;ASSUME HE MADE A MISTAKE
 	OPEN	OUT,OUTBLK
	  HALT
 	ENTER	OUT,OUTFIL
	  HALT
	INBUF	IN,1
	OUTBUF	OUT,2
 	POPJ	P,

;HERE ON REENTRY TO PROGRAM, TO COLLAPSE CORE

REENT:	RESET
	SETZM	COMENT		;CLEAR SWITCHES
 	SETZM	EXTERS
 	MOVE	A,JOBFF 	;GET SIZE TO SHRINK TO
	MOVEM	A,.JBFF 	;RE-SET UP .JBFF
	CORE	A,		;SHRINK
	  HALT	.		;IT CAN'T MISS
	SETZM	@.JBFF		;CLEAR FROM THAT TOP LOCATION
	HRL	A,.JBFF 	;  THROUGH TOP OF CORE
	HLRS	A
	AOJ	A,
	BLT	A,@.JBREL
IFN FTREL,<
	SETZM	CALNAM		;CLEAR OUT CALLI, EXTERNAL, AND INTERNAL TABLES
	MOVE	A,[CALNAM,,CALNAM+1]
	BLT	A,TABEND
	MOVEI	A,101		;RESET INTERNAL POINTER
	MOVEM	A,INPTR
	MOVE	A,[ACREST,,ACTAB]
	BLT	A,ACTAB+17	;RESTORE DEFAULT AC NAMES
>
 	JRST	START		;CONTINUE AT START OF PROGRAM

;SUBROUTINE TO OUTPUT LINE NUMBER AT COLUMN 32
;CAN ALSO ENTER TO HDLLNM+1 IF FLAG ALREADY SET

HDLLNM:	TRO	F,CMT		;SAY COMMENT HAS BEEN STARTED
 	CAIGE	CT,^D32 	;OVER FAR ENOUGH ALREADY?
 	PUSHJ	P,TAB		;NO - TAB OVER
 	CAIGE	CT,^D32 	;OVER FAR ENOUGH?
	JRST	.-2		;NO - TAB SOME MORE
 	PUSHJ	P,SEMI		;START COMMENT WITH SEMICOLON
 	MOVE	SY,LN	 	;GET THIS WORD NUMBER
 	PUSHJ	P,PUTOCT	;OUTPUT IT
	PJRST	TAB		;TAB TO COLUMN 40

;SUBROUTINE TO OUTPUT WORDS IN ASCIZ FORMAT

HDLASC: TRO	F,OAS		;SET FLAG FOR OUTPUTTING STRING
IFN FTREL,<
 	SETOM	INNAME(A)	;CLEAR THIS ADDRESS
>
IFE FTREL,<
 	SETOM	STADR-1(ST)	;CLEAR THIS ADDRESS
>
	SKIPE	COMENT		;WANT A COMMENT?
	JRST	HDLAS0		;NO - DON'T OUTPUT WORD NUMBER
 	JSA 	B,PUTASK	;GIVE ADDRESS OF START OF STRING
	ASCIZ	/			;/
 	MOVE	SY,LN		;GET WORD NUMBER
 	PUSHJ	P,PUTOCT	;OUTPUT IT
HDLAS0:	JSA 	B,PUTASK	;GIVE PSEUDO-OP
	ASCIZ	/
	ASCIZ	/
HDLAS1: MOVE	B,[POINT 7,WD]	;SET UP ASCII POINTER
	MOVEI	C,5		;AND COUNTER
HDLAS2: ILDB	CH,B		;GET A CHARACTER
	JUMPE	CH,HDLAS3	;END OF STRING IF ZERO
	PUSHJ	P,PUTCHR	;ELSE OUTPUT IT
	SOJG	C,HDLAS2	;LOOP - END OF WORD?
IFN FTREL,<
 	AOJA	LN,HDLLUP	;YES - GET NEXT ONE (AND COME BACK HERE)
>
IFE FTREL,<
 	AOJA 	LN,HDLWD	;GET MORE WORDS UNTIL DONE
>

HDLAS3: TRZ	F,OAS		;END OF STRING - CLEAR FLAG
	MOVEI	CH,""		;GIVE END DELIMITER
	PUSHJ	P,PUTCHR
IFN FTREL,<
 	AOJA	LN,HDLLUP	;AND WORK ON NEXT WORD
>
IFE FTREL,<
 	JRST	HDLNXT		;AND WORK ON NEXT WORD
>

;SUBROUTINE TO TRY TO OUTPUT THE FILE WORD IN ASCII OR SIXBIT

VERASC: TRON	F,CMT		;ALREADY STARTED COMMENT?
	PUSHJ	P,HDLLNM	;NO - OUTPUT LINE NUMBER
IFN FTREL,<
  	TLNE	RE,600000	;IS PART OF THE WORD RELOCATABLE?
	POPJ	P,		;YES - CAN7T BE CHARACTERS
>
	LDB	A,[POINT 7,WD,6];GET FIRST BYTE OF WORD
	JUMPE	A,CPOPJ 	;NO GOOD IF ZERO
	CAIN	A,177		;OR ALL ONES
	POPJ	P,		;..
 	TRNE	WD,1		;IS LOW BIT ON
	JRST	HDLDSX		;YES - PROBABLY NOT ASCII

	SETZ	B,		;CLEAR TO COUNT CHARACTERS
	MOVEI	C,5		;SET FOR NUMBER OF CHARACTERS
	MOVE	A,[POINT 7,WD]	;GET ASCII POINTER
	ILDB	D,A		;GET A CHARACTER
	ADD	B,CHRTAB(D)	;ADD IT IN IF IT'S GOOD
	SOJG	C,.-2
	HRRES	B		;GET RIGHT HALF SUM
	CAIGE	B,^D8		;IS IT ASCII ENOUGH?
	JRST	HDLDSX		;NO - TRY SIXBIT
 	PUSHJ	P,TAB		;TAB OVER
	CAIGE	CT,^D56		;OVER TO RIGHT COLUMN?
	JRST	.-2		;NO - MOVE SOME MORE
 	JSA 	B,PUTASK	;YES - GIVE PSEUDO-OP
	ASCIZ	/ASCII	/
 	MOVE	C,[POINT 7,WD]	;POINT TO WD, FOR ASCII
 	PJRST	PUTAFL		;OUTPUT IT AS ASCII

HDLDSX: SETZ	B,		;CLEAR TO COUNT CHARACTERS
	MOVEI	C,6		;SET FOR NUMBER OF CHARACTERS
	MOVE	A,[POINT 6,WD]	;GET SIXBIT POINTER
	ILDB	D,A		;GET A CHARACTER
	ADD	B,CHRTAB+40(D)	;ADD IT IN IF IT'S GOOD
	SOJG	C,.-2
	HLRES	B		;GET LEFT HALF SUM
 	CAIGE	B,^D9		;IS IT SIXBIT ENOUGH?
	POPJ	P,		;NO - DON'T OUTPUT IT
 	PUSHJ	P,TAB		;TAB OVER
	CAIGE	CT,^D56		;OVER TO RIGHT COLUMN?
	JRST	.-2		;NO - MOVE SOME MORE
 	JSA 	B,PUTASK	;YES - GIVE PSEUDO-OP
	ASCIZ	/SIXBIT	/
 	MOVE	B,[POINT 6,WD]	;POINT TO WD, FOR SIXBIT
 	PJRST	PUTSX6		;OUTPUT IT AS SIXBIT AND RETURN

;SUBROUTINE TO SEARCH SYMBOL TABLE BINARILY

SYSRC:	MOVE	A,SYSIZ2	;GET HALF-LIFE OF LIST
	ADD	A,SYMBAS	;MAKE ABSOLUTE
IFN FTREL,<
	SUBI	A,2		;BACK UP TWO WORDS
>
IFE FTREL,<
 	SOJ	A,		;TO GET FIRST ENTRY
>
IFN DEBUG,<
 	AOS	$SYREF		;REFS TO SYM TBL
>
 	MOVE	C,SYSIZ2	;ALSO FOR INCREMENT
 	MOVE	B,SYMTOP	;GET ABSOLUTE END-OF-TABLE
SYSRC1:	HRRZ	D,(A)		;GET TABLE ENTRY
IFN DEBUG,<
 	AOS	$SYLUK		;SYMBOL TABLE LOOKS
>
 	CAMN	D,SY		;IS IT THE RIGHT ONE?
	POPJ	P,		;YES - RETURN WITH INC
	LSH	C,-1		;CUT INC IN HALF
IFE FTREL,<
	JUMPE	C,SYNO		;NOT FOUND IF INC ZERO
>
IFN FTREL,<
	CAIG	C,1		;TWO WORDS FOR DISREL
	JRST	SYNO
>
 	CAMGE	D,SY		;TOO SMALL?
	JRST	SYSMAL		;YES - ADD INC
	SUB	A,C		;MUST BE TOO BIG - SUBTRACT INC
	JRST	SYSRC1		;AND TRY AGAIN
IFE FTREL,<
SYNO:	SETO	A,		;RETURN 0 IF NOT FOUND
>
IFN FTREL,<
SYNO:	SETO	B,		;RETURN 0 IF NOT FOUND
>
 	POPJ	P,
SYSMAL:	ADD	A,C		;ADD INC
	CAMG	A,B    		;WAS IT TOO MUCH?
	JRST	SYSRC1		;NO - CONTINUE SEARCH
	LSH	C,-1		;YES - CUT INC IN HALF
IFE FTREL,<
	JUMPE	C,SYNO		;QUIT IF NOT FOUND
>
IFN FTREL,<
	CAIG	C,1		;(SINCE TWO WORD TABLE)
 	JRST	SYNO
>
 	SUB	A,C		;AND ONLY GO HALF AS FAR
	JRST	SYSMAL+1	;SEE IF NOW WITHIN RANGE

;SUBROUTINE TO OUTPUT ASCIZ TEXT. ADDRESS OF TEXT IN B

PUTASC: HRLI	B,440700	;FIX UP POINTER
 	ILDB	CH,B 		;GET A CHARACTER
	JUMPE	CH,CPOPJ	;DONE IF CHARACTER IS ZERO
 	PUSHJ	P,PUTCHR	;PRINT IT
	JRST	PUTASC+1	;GET SOME MORE

PUTASK: 0
	HRLI	B,440700	;FIX UP POINTER
	ILDB	CH,B 		;GET A CHARACTER
	JUMPE	CH,1(B)		;DONE IF CHARACTER IS ZERO
	PUSHJ	P,PUTCHR	;PRINT IT
  	JRST	PUTASK+2	;GET SOME MORE

;SUBROUTINE TO OUTPUT ASCII VERIFICATION OF FILE WORDS

PUTAFL: ILDB	CH,C 		;GET A CHARACTER
	JUMPE	CH,CPOPJ	;DONE IF GET A ZERO
	TRNN	C,1		;STILL POINTING AT SY?
CPOPJ:	POPJ	P,		;NO - DONE THEN
	CAIGE	CH,40		;SPECIAL CHARACTER?
 	JRST 	PUTAF1		;YES - SIMULATE IT IN <>'S
	PUSHJ	P,PUTCHR	;ELSE OUTPUT IT
	JRST	PUTAFL		;AND GET ANOTHER ONE

PUTAF1: CAIL	CH,10		;IS IT A GOOD
	CAIL	CH,16		;  CONTROL CHARACTER?
	JRST	PUTAF2		;NO - OUTPUT A LINE THEN
	MOVEI	B,CHTABL-10(CH)	;POINT TO SIMULATED CHARACTER
 	PUSHJ	P,PUTASC	;OUTPUT IT
 	JRST	PUTAFL		;GET THE NEXT ONE

PUTAF2: MOVEI	CH,174		;GET A LINE
	PUSHJ	P,PUTCHR	;OUTPUT IT
	JRST	PUTAFL		;NOW BACK TO FLOW

;SUBROUTINE TO OUTPUT A WORD OF SIXBIT. POINTER TO STRING IN B

PUTSXA: MOVE	B,[POINT 6,A] 	;GET THE SAME OLD POINTER
PUTSIX: MOVEI	C,6		;DO A MAX OF SIX TIMES
       	ILDB	CH,B 		;GET A CHARACTER
	JUMPE	CH,CPOPJ	;DONE IF CHARACTER IS ZERO
 	ADDI	CH," "		;ELSE CONVERT TO ASCII
 	PUSHJ	P,PUTCHR	;PRINT IT
	SOJG	C,PUTSIX+1	;GET SOME MORE IF NOT COUNTED OUT
	POPJ	P,		;ELSE RETURN

PUTSX6: MOVEI	C,6		;SET TO OUTPUT ALL SIX
       	ILDB	CH,B 		;GET A CHARACTER
 	ADDI	CH," "		;ELSE CONVERT TO ASCII
 	PUSHJ	P,PUTCHR	;PRINT IT
	SOJG	C,PUTSX6+1	;GET SOME MORE IF NOT COUNTED OUT
	POPJ	P,		;ELSE RETURN

;SUBROUTINE TO OUTPUT OCTAL STUFF

PUTOCT: MOVE	C,[POINT 3,SY,17] ;POINT TO RH OF SY
	ILDB	CH,C		;GET AN OCTAL BYTE
	JUMPG	CH,.+3		;IF NON-ZERO, SKIP THIS STUFF
	TRNN	F,DGT		;PRINTED ANYTHING YET?
	JRST	PUTOC1		;NO - DON'T PRINT THIS EITHER
	TRO	F,DGT		;FOUND A DIGIT
	ADDI	CH,"0"		;CONVERT TO ASCII
	PUSHJ	P,PUTCHR	;OUTPUT IT
PUTOC1: TLNE	C,770000	;END OF WORD?
	JRST	PUTOCT+1	;NO - GET ANOTHER BYTE
	TRZE	F,DGT		;PRINTED ANYTHING AT ALL?
	POPJ	P,		;YES - ESCAPE
	ADDI	CH,"0"		;MAKE ASCII
				;AND FALL TO OUTPUT IT

;SUBROUTINE TO OUTPUT ONE CHARACTER

PUTCHR:	SOSG 	OUTBF1+2	;IS BUFFER FULL?
  	OUT	OUT,		;YES - EMPTY IT
 	IDPB	CH,OUTBF1+1	;PUT CHARACTER IN BUFFER
	AOJA	CT,CPOPJ	;BUMP CHARACTER COUNT AND RETURN

;SUBROUTINES TO OUTPUT CERTAIN CHARACTERS

CRLF:	MOVEI	CH,15
	PUSHJ	P,PUTCHR
	SETO	CT,		;CLEAR COUNT OF CHCRACTERS
 	MOVEI	CH,12
 	PJRST	PUTCHR

COLON: 	MOVEI	CH,":"
	PJRST	PUTCHR

SEMI:  	MOVEI	CH,";"
	PJRST	PUTCHR

AT:    	MOVEI	CH,"@"
	PJRST	PUTCHR

COMMA: 	MOVEI	CH,","
	PJRST	PUTCHR

DASH:  	MOVEI	CH,"-"
	PJRST	PUTCHR

TAB:   	ADDI	CT,7		;TAB TAKES UP 8 CHARACTERS
 	MOVEI	CH,11
	PUSHJ	P,PUTCHR
	TRZ	CT,7		;ROUND TO LEAST 8
	POPJ	P,		;THEN RETURN

LPAREN:	MOVEI	CH,"("
	PJRST	PUTCHR

RPAREN:	MOVEI	CH,")"
	PJRST	PUTCHR

;SUBROUTINE TO GET CORE IF NEEDED

GETAK:	PUSH	P,CH	 	;SAVE OLD CONTENTS
 	HRRZ	CH,.JBREL	;GET HIGHEST LOCATION
 	ADDI	CH,2000	 	;ADD A K
	CORE	CH,    		;TRY TO GET THE CORE
	  HALT	      		;OUT OF LUCK
	OUTSTR	[ASCIZ /%GRABBING ANOTHER K OF CORE
/]
	POP	P,CH	 	;RESTORE AC
 	JRST	2,@.JBTPC	;GOT IT - RETURN FROM INTERRUPT

;FILESPEC GATHERING MACHINERY

FTWRDI==0 	;-1 => INPUT CHARACTERS (ELSE WORDS)
FTWRD== -1	;-1 => OUTPUT CHARACTERS (ELSE WORDS)
FTIO==	-1	;-1 => INPUT AND OUTPUT, 0 => INPUT ONLY
FTSWH== -1	;-1 => CODE FOR SWITCHES
FTEXT== 0	;-1 => SET UP FOR EXTENDED LOOKUP, DUMP INPUT
FTWLD== 0 	;-1 => ALLOW ? AND * IN FILE SPECS
FTEXIT==-1	;-1 => EXIT ON ^Z

T1=1		;AC ASSIGNMENTS FOR FILESPEC HANDLER
T2=2
T3=3
T4=4
PP=16

;SUBROUTINE TO INPUT A STRING OF UP TO SIX SIXBIT CHARACTERS
;EXCESS IGNORED.  INPUT IS A BYTE POINTER IN T3
;OUTPUT IS VALUE OR STRING IN T2, DELIMITER IN T1.

STRIN:	SETZ	T2,		;CLEAR RESULT
IFN FTWLD,<
	MOVE	T4,[POINT 6,PP,5]
	SETZ	PP,
>
 	TRZ	F,FND		;CLEAR FOUND-A-CHARACTER FLAG
 	MOVE	T3,[POINT 6,T2]	;GET POINTER IN T3
STRMOR: INCHWL	T1		;GET A CHARACTER
	CAIGE	T1,"0"		;TOO SMALL FOR A-N?
	JRST	STREND		;YES - CHECK OUT THE DELIM
 	CAIG	T1,"9"		;NUMERIC?
	JRST	STRADD		;YES - PUT IT IN
 	CAIGE	T1,"A"		;TOO SMALL FOR ALPHABETIC?
IFE FTWLD,<
 	POPJ	P,		;YES - RETURN IT AS DELIM
>
IFN FTWLD,<
	JRST	[CAIE  T1,"?"	;YES - WILD CHARACTER?
		 POPJ  P,	;NO - RETURN IT AS DELIM
		 DPB   T1,T4	;SAVE IT
		 JRST  STRADD]	;AND TREAT LIKE A-N
>
 	CAIG	T1,"Z"		;ALPHABETIC?
	JRST	STRADD		;YES - PUT IT IN
 	CAIL	T1,"a"		;IS IT A LOWER CASE CHARACTER?
 	CAILE	T1,"z"		;..
	POPJ	P,		;NO - RETURN AS DELIM
 	SUBI	T1,40		;YES - CONVERT TO UPPER
STRADD:	TLNN	T3,770000	;GOT SIX CHARACTERS?
	JRST	STRMOR		;YES - IGNORE THIS CHARACTER
	SUBI	T1," "		;MAKE SIXBIT
	IDPB	T1,T3		;SAVE CHAR (POINTER IS IN T3)
IFN FTWLD,<
	IBP	T4		;SKIP A MASK CHARACTER
>
 	TRO	F,FND		;SET FLAG FOR FOUND A CHARACTER
 	JRST	STRMOR		;AND GET SOME MORE

STREND:	CAIE	T1,15		;IS IT A CARRIAGE RETURN,
	CAIN	T1," "		;  OR A SPACE?
	JRST	STRMOR		;YES - IGNORE IT
IFE FTWLD,<
	POPJ	P,		;ELSE RETURN IT AS DELIM
>
IFN FTWLD,<
	CAIE	T1,"*"		;WILD CHARACTER?
 	POPJ	P,		;NO - RETURN IT AS DELIM
	MOVEI	T1,77		;YES - GET MASK CHARACTER
	IDPB	T1,T3		;SAVE IT IN STRING
	TRO	F,FND		;SET FOUND-A-CHARACTER FLAG
	DPB	T1,T4		;SAVE IT IN THIS CHARACTER
	JRST	.+2

	IDPB	T1,T4		;SAVE ANOTHER CHARACTER
	TLNE	T4,770000	;GOT SIX CHARACTERS?
	JRST	.-2		;NO - CONTINUE
	INCHWL	T1		;YES - GET WHAT BETTER BE THE DELIMITER
	CAIE	T1," "		;SPACE,
	CAIN	T1,15		;  OR CR?
	JRST	.-3		;YES - IGNORE IT
	POPJ	P,		;ELSE RETURN IT AS THE DELIM
>

;SUBROUTINE TO INPUT AN OCTAL VALUE OR ONE ASCII CHARACTER
;OUTPUT IS VALUE OR STRING IN T2, DELIMITER IN T1.
;RADIX OF VALUE IS IN T3

VALIN:	SETZ	T2,		;CLEAR RESULT
VALMOR: INCHWL	T1		;GET A CHARACTER
 	CAIGE	T1,"0"		;TOO SMALL FOR A DIGIT?
	JRST	VALEND		;YES - SEE IF SPECIAL
 	CAILE	T1,"7"		;TOO LARGE?
	POPJ	P,		;RIGHT - GIVE IT TO CALLER
 	SUBI	T1,"0"		;GET AN OCTAL DIGIT
	IMUL	T2,T3		;  TIMES RADIX
	ADD	T2,T1		;  + NEW VALUE
	JRST	VALMOR		;AND GET SOME MORE

VALEND:	CAIE	T1,15		;IS IT A CARRIAGE RETURN,
	CAIN	T1," "		;  OR A SPACE?
	JRST	VALMOR		;YES - IGNORE IT
 	POPJ	P,		;ELSE RETURN AS DELIM

;SUBROUTINE TO INPUT FILE SPECIFICATIONS
;CALLS GETERR, STRIN & VALIN

GETFIL: OUTSTR	[ASCIZ /
FILE=/]				;ASK FOR A FILE
	SETZB	T1,T2		;CLEAR OUT OLD FILE SPECS
	DMOVEM	T1,INFIL
	DMOVEM	T1,INEXT
	DMOVEM	T1,OUTFIL
	DMOVEM	T1,OUTEXT
	MOVSI	T1,'DSK'	;RESET DEFAULT DEVICE
	MOVEM	T1,INBLK+1
	MOVEM	T1,OUTBLK+1

IFN FTWLD,<
	HRLZI	T1,'DSK'	;SET UP FAULT DEVICE
	MOVEM	T1,INBLK+1
	MOVEI	T1,007700	;AND MASK, SO DEFAULT DEVICE IS DSK?
	HRROM	T1,MSKDEV
 	SETOM	MSKFIL
	SETZM	MSKEXT
	SETOM	MSKPPN
 	MOVE	T1,SAVPPN	;GET THIS USER'S PPN
	MOVEM	T1,INPPN	;SAVE AS DEFAULT
>
GETFL1:	PUSHJ	P,STRIN 	;GET A CHARACTER
IFN FTEXIT,<
 	CAIN	T1,"Z"-100	;EXIT?
 	EXIT			;YES
>
 	CAIN	T1,":"		;GOT DEVICE NAME?
	JRST	GETFL3		;YES - SAVE IT
 	CAIE	T1,"/"		;START OF SWITCHES, OR
 	CAIN	T1,"["		;  GOT A PPN COMING?
	JRST	GETFL5+1	;YES - HANDLE THIS AND GET PPN
	CAIN	T1,12		;END OF LINE?
 	JRST	GETFL5		;YES - HE'S DONE
IFN FTIO,<
 	CAIN	T1,"="		;WAS THIS AN OUTPUT FILE?
	JRST	GETFL9		;YES - GET READY FOR IN SPECS
>
 	CAIE	T1,"."		;END OF NAME?
	JRST	GETERR		;NO - MUST BE ERROR
	MOVEM	T2,INNAM 	;SAVE NAME
IFN FTWLD,<
	ANDCAM	PP,MSKFIL	;SAVE FILE MASK, TOO
	SETOM	MSKEXT		;AND SET UP REAL EXTENSION MASK
>
IFN FTIO,<
 	TRNN	F,OUF		;ALREADY GOT AN OUTPUT FILE?
	MOVEM	T2,OUTNAM	;NO - MAKE OUT SAME AS IN
>
	JRST	GETFL1	 	;GO GET MORE

;HERE TO SAVE DEVICE NAME

GETFL3: MOVEM	T2,INBLK+1	;SAVE DEVICE FOR INPUT
IFN FTWLD,<
	TRO	PP,77		;LAST CHARACTER CANNOT BE WILD
	SETOM	MSKDEV		;CHANGE DEFAULT INTO TOTAL MASK
 	ANDCAM	PP,MSKDEV	;AND SAVE DEVICE MASK ON TOP OF IT
>
 	JRST	GETFL1	 	;SEE WHAT ELSE HE HAS TO SAY

;HERE ON END OF FILE.EXT (<CR>, [ OR /)

GETFL5: JUMPE	T2,CPOPJ	;RETURN IF ONLY A <CR>
	TRNN	F,FND		;ONLY DELIMITER TYPED?
	JRST	GETFL7		;YES - DON'T SAVE ANYTHING
 	SKIPN	INNAM		;GOT A FILE YET?
 	JRST	GETFL6		;NO - THIS MUST BE IT
	MOVEM	T2,INEXT	;OTHERWISE SAVE EXT
IFN FTWLD,<
 	ANDCAM	PP,MSKEXT	;YES - SAVE EXT MASK, TOO
>
IFN FTIO,<
 	TRNN	F,OUF		;ALREADY AN OUTPUT EXTENSION?
	MOVEM	T2,OUTEXT	;NO - SAVE HERE, TOO
>
 	JRST	GETFL7		;SEE IF PPN COMING

GETFL6: MOVEM	T2,INNAM 	;SAVE FILE NAME
IFN FTWLD,<
	ANDCAM	PP,MSKFIL	;SAVE FILE MASK, TOO
>
IFN FTIO,<
 	TRNN	F,OUF		;ALREADY AN OUTPUT FILE?
	MOVEM	T2,OUTNAM	;NO - SAVE HERE, TOO
>
GETFL7:
IFN FTSWH,<
	CAIN	T1,"/"		;WANT A SWITCH?
	JRST	GETSWH		;YES - GATHER IT IN
>
 	CAIE	T1,"["		;PPN COMING?
	POPJ	P,		;NO - RETURN

;HERE TO READ PPN. CLOSE BRACKET OPTIONAL (MANDATORY IF SWITCHES)

	MOVEI	T3,10		;SET RADIX TO OCTAL
 	PUSHJ	P,VALIN 	;GET PROJ NUMBER
IFN FTWLD,<
	CAIN	T1,"*"		;WILD PROJECT?
	PUSHJ	P,[HRRZS MSKPPN ;YES - SET IT IN PROJECT
		   JRST  VALIN] ;GET DELIMITER
>
 	CAIE	T1,","		;BETTER END WITH A COMMA
	JRST	GETERR		;NOPE - WRONG
 	HRLM	T2,INPPN	;SAVE PROJ
 	PUSHJ	P,VALIN 	;GET PROG NUMBER
IFN FTWLD,<
	CAIN	T1,"*"		;WILD PROGRAMMER?
	PUSHJ	P,[HLLZS MSKPPN ;YES - SET IT IN PROGRAMMER
		   JRST  VALIN] ;GET DELIMITER
>
 	CAIE	T1,12		;END WITH A LINEFEED,
 	CAIN	T1,"]"		;  OR A BRACKET?
	CAIA			;YES - O.K.
 	JRST	GETERR		;NO - TRY AGAIN
 	HRRM	T2,INPPN	;SAVE PROG
 	CAIN	T1,12		;DID HE TYPE A <CR>?
	POPJ	P,		;YES - RETURN
 	JRST	GETFL1	 	;NO - GO BACK FOR MORE

IFN FTIO,<
;HERE ON "=", TO RESET OUTPUT FILE SPECS

GETFL9:	PUSHJ	P,GETFL5	;FINISH WORK FOR OUTPUT SPECS
 	SKIPE	INNAM		;DID HE GIVE AN INPUT FILE?
 	TRO	F,OUF		;YES - SET GOT-OUTPUT-SPECS FLAG
	SKIPE	T1,INPPN	;GET OUTPUT PPN - ANY?
	MOVEM	T1,OUTPPN	;YES - SAVE IN THE RIGHT PLACE
 	SETZM	INNAM	 	;\
	SETZM	INEXT	 	; - CLEAR INPUT FILE SPECS
	SETZM	INPPN	 	;/
 	MOVE	T1,INBLK+1	;GET OUTPUT DEVICE
	MOVEM	T1,OUTBLK+1	;PUT IT IN THE RIGHT PLACE
 	HRLZI	T1,'DSK' 	;RESTORE DEFAULT INPUT DEVICE
	MOVEM	T1,INBLK+1	;..
 	JRST	GETFL1	 	;GET INPUT SPECS
>
IFN FTSWH,<
;HERE TO SET UP SWITCHES

GETSWH:	PUSHJ	P,STRIN 	;READ A SWITCH
 	CAMN	T2,[SIXBIT /NOC/];ONE CAMN FOR EACH SWITCH NAME
	JRST	GETNOC
	CAMN	T2,[SIXBIT /EXT/];NO EXTERNALS?
	JRST	GETNOX
	OUTSTR	[ASCIZ /BAD SWITCH
/]
	SKIPA
>
GETERR: OUTSTR	[ASCIZ /BAD FILE SPECS
/]
	CLRBFI		  	;CLEAN OUT INPUT BUFFER
	JRST	GETFIL		;GIVE ANOTHER CHANCE

GETNOC: SETOM	COMENT
	SKIPA
GETNOX: SETOM	EXTERS
	CAIN	A,12		;END WITH A <CR>?
	POPJ	P,		;YES - RETURN FROM GETFIL
	CAIN	A,"/"		;ANOTHER SWITCH?
	JRST	GETSWH		;YES - GET IT
	JRST	GETERR		;NO - MUST BE AN ERROR

;ERROR MESSAGES

LUKERR: OUTSTR	[ASCIZ /  FILE NOT FOUND, OR IS PROTECTED
/]
IFN FTIO,<
 	CAIA			;ONE MESSAGE AT A TIME
ENTERR: OUTSTR	[ASCIZ /  CANNOT WRITE TO OUTPUT AREA
/]
>
 	CLRBFI			;CLEAR INPUT BUFFER
 	SETZB	T1,T2
	DMOVEM	T1,INFIL
	DMOVEM	T1,INFIL+1
IFN FTIO,<
 	DMOVEM	T1,OUTFIL
	DMOVEM	T1,OUTFIL+1
 	TRZ	F,OUF	 	;CLEAR FLAGS
>
 	JRST	NOFILE		;GIVE HIM ANOTHER CHANCE

;SPECIAL CHARACTER SIMULATION TABLE

CHTABL: ASCIZ /<BS>/
	ASCIZ /<TB>/
	ASCIZ /<LF>/
	ASCIZ /<VT>/
	ASCIZ /<FF>/
	ASCIZ /<CR>/

;TTCALL TABLE

TTTABL: SIXBIT	/INCHRW/
	SIXBIT	/OUTCHR/
	SIXBIT	/INCHRS/
	SIXBIT	/OUTSTR/
	SIXBIT	/INCHWL/
	SIXBIT	/INCHSL/
	SIXBIT	/GETLCH/
	SIXBIT	/SETLCH/
	SIXBIT	/RESCAN/
	SIXBIT	/CLRBFI/
	SIXBIT	/CLRBFO/
	SIXBIT	/SKPINC/
	SIXBIT	/SKPINL/
	SIXBIT	/IONEOU/
	SIXBIT	/ /		;LEGAL, BUT MEANINGLESS
	SIXBIT	/ /

;OP-CODE TABLE

DEFINE	OT(OP,FG,NM,NM1),<
	ASCII	/NM/
	BYTE  	(7) "NM1" (11) 0 (18) FG
>

;MEANINGS OF FLAGS:

; 1 == LOCATION FIELD IS PROBABLY A LABEL
; 2 == IMMEDIATE INSTRUCTION - AKE A SYMBOL
; 4 == LOCATION IS A VALUE
;10 == AC FIELD COULD BE A NON-AC
;20 == INSTRUCTION IS A NOOP - OUTPUT AS DATA
;   HIGHER FLAGS DEFINE CLASSES OF JUMPS AND SKIPS, AND ARE NOT USED:
;100== CONDITIONAL JUMP INSTRUCTION
;200== SKIP INSTRUCTION
;400== UNCONDITIONAL JUMP - END OF CODE BLOCK

DEFINE OOPS,<			;SUBTERFUGE TO SAVE CREF OUTPUT
OPTABL:	OT(40,201,CALL)
 	OT(41,1,INIT)
 	OT(42,21,NOOP)		;UNIMPLEMENTED INSTRUCTIONS
 	OT(43,21,NOOP)
 	OT(44,21,NOOP)
 	OT(45,21,NOOP)
 	OT(46,21,NOOP)
 	OT(47,204,CALLI)
 	OT(50,211,OPEN)
	OT(51,11,TTCAL,L)
 	OT(52,21,NOOP)		;UNIMPLEMENTED INSTRUCTIONS
 	OT(53,21,NOOP)
 	OT(54,21,NOOP)
 	OT(55,1,RENAM,E)
 	OT(56,211,IN)
	OT(57,211,OUT)
 	OT(60,1,SETST,S)
 	OT(61,204,STATO)
 	OT(62,1,GETST,S)
 	OT(63,204,STATZ)
 	OT(64,14,INBUF)
	OT(65,14,OUTBU,F)
 	OT(66,11,INPUT)
 	OT(67,11,OUTPU,T)
 	OT(70,14,CLOSE)
 	OT(71,11,RELEA,S)
 	OT(72,14,MTAPE)
 	OT(73,14,UGETF)
 	OT(74,14,USETI)
 	OT(75,14,USETO)
 	OT(76,211,LOOKU,P)
	OT(77,211,ENTER)
 	OT(100,101,UJEN)
 	OT(101,21,NOOP) 	;UNIMPLEMENTED INSTRUCTION
 	OT(102,21,NOOP)
 	OT(103,21,NOOP)
 	OT(104,21,NOOP)
 	OT(105,21,NOOP)
 	OT(106,21,NOOP)
 	OT(107,21,NOOP)
 	OT(110,1,DFAD)
 	OT(111,1,DFSB)
 	OT(112,1,DFMP)
 	OT(113,1,DFDV)
 	OT(114,21,NOOP) 	;UNIMPLEMENTED INSTRUCTION
 	OT(115,21,NOOP)
 	OT(116,21,NOOP)
 	OT(117,21,NOOP)
 	OT(120,1,DMOVE)
 	OT(121,1,DMOVN)
 	OT(122,1,FIX)
 	OT(123,21,NOOP) 	;UNIMPLEMENTED INSTRUCTION
 	OT(124,1,DMOVE,M)
 	OT(125,1,DMOVN,M)
 	OT(126,1,FIXR)
 	OT(127,1,FLTR)
 	OT(130,1,UFA)
	OT(131,1,DFN)
	OT(132,1,FSC)
 	OT(133,1,IBP)
 	OT(134,1,ILDB)
	OT(135,1,LDB)
	OT(136,1,IDPB)
 	OT(137,1,DPB)
 	OT(140,1,FAD)
 	OT(141,1,FADL)
 	OT(142,1,FADM)
 	OT(143,1,FADB)
 	OT(144,1,FADR)
 	OT(145,6,FADRI)
 	OT(146,1,FADRM)
 	OT(147,1,FADRB)
 	OT(150,1,FSB)
 	OT(151,1,FSBL)
 	OT(152,1,FSBM)
 	OT(153,1,FSBB)
 	OT(154,1,FSBR)
 	OT(155,6,FSBRI)
 	OT(156,1,FSBRM)
 	OT(157,1,FSBRB)
 	OT(160,1,FMP)
 	OT(161,1,FMPL)
 	OT(162,1,FMPM)
 	OT(163,1,FMPB)
 	OT(164,1,FMPR)
 	OT(165,6,FMPRI)
 	OT(166,1,FMPRM)
 	OT(167,1,FMPRB)
 	OT(170,1,FDV)
 	OT(171,1,FDVL)
 	OT(172,1,FDVM)
 	OT(173,1,FDVB)
 	OT(174,1,FDVR)
 	OT(175,6,FDVRI)
 	OT(176,1,FDVRM)
 	OT(177,1,FDVRB)
 	OT(200,1,MOVE)
	OT(201,6,MOVEI)
	OT(202,1,MOVEM)
 	OT(203,1,MOVES)
	OT(204,1,MOVS)
 	OT(205,6,MOVSI)
 	OT(206,1,MOVSM)
 	OT(207,1,MOVSS)
 	OT(210,1,MOVN)
	OT(211,6,MOVNI)
 	OT(212,1,MOVNM)
 	OT(213,1,MOVNS)
 	OT(214,1,MOVM)
 	OT(215,6,MOVMI)
 	OT(216,1,MOVMM)
 	OT(217,1,MOVMS)
 	OT(220,1,IMUL)
 	OT(221,4,IMULI)
 	OT(222,1,IMULM)
 	OT(223,1,IMULB)
 	OT(224,1,MUL)
 	OT(225,4,MULI)
 	OT(226,1,MULM)
 	OT(227,1,MULB)
 	OT(230,1,IDIV)
 	OT(231,4,IDIVI)
 	OT(232,1,IDIVM)
 	OT(233,1,IDIVB)
 	OT(234,1,DIV)
 	OT(235,4,DIVI)
 	OT(236,1,DIVM)
 	OT(237,1,DIVB)
 	OT(240,4,ASH)
	OT(241,4,ROT)
 	OT(242,4,LSH)
 	OT(243,101,JFFO)
	OT(244,4,ASHC)
 	OT(245,4,ROTC)
	OT(246,4,LSHC)
 	OT(247,21,NOOP)       ;UNIMPLEMENTED INSTRUCTION
 	OT(250,1,EXCH)
	OT(251,1,BLT)
 	OT(252,101,AOBJP)
	OT(253,101,AOBJN)
	OT(254,411,JRST)
	OT(255,1,JFCL)
	OT(256,11,XCT)
 	OT(257,1,MAP)
 	OT(260,1,PUSHJ)
	OT(261,1,PUSH)
	OT(262,1,POP)
 	OT(263,401,POPJ)
	OT(264,1,JSR)		;NEED BRANCH FLAGS HERE
	OT(265,1,JSP)		; "
 	OT(266,1,JSA)		; "
 	OT(267,1,JRA)		; "
 	OT(270,1,ADD)
	OT(271,4,ADDI)
	OT(272,1,ADDM)
	OT(273,1,ADDB)
 	OT(274,1,SUB)
	OT(275,4,SUBI)
 	OT(276,1,SUBM)
 	OT(277,1,SUBB)
 	OT(300,4,CAI)
 	OT(301,204,CAIL)
 	OT(302,204,CAIE)
 	OT(303,204,CAILE)
 	OT(304,1,CAIA)
	OT(305,204,CAIGE)
 	OT(306,204,CAIN)
	OT(307,204,CAIG)
 	OT(310,1,CAM)
 	OT(311,201,CAML)
	OT(312,201,CAME)
 	OT(313,201,CAMLE)
 	OT(314,1,CAMA)
	OT(315,201,CAMGE)
 	OT(316,201,CAMN)
	OT(317,201,CAMG)
	OT(320,1,JUMP)
 	OT(321,101,JUMPL)
 	OT(322,101,JUMPE)
	OT(323,101,JUMPL,E)
 	OT(324,401,JUMPA)
 	OT(325,101,JUMPG,E)
	OT(326,101,JUMPN)
	OT(327,101,JUMPG)
 	OT(330,1,SKIP)
 	OT(331,201,SKIPL)
	OT(332,201,SKIPE)
	OT(333,201,SKIPL,E)
	OT(334,1,SKIPA)
	OT(335,201,SKIPG,E)
	OT(336,201,SKIPN)
 	OT(337,201,SKIPG)
 	OT(340,1,AOJ)
 	OT(341,101,AOJL)
 	OT(342,101,AOJE)
 	OT(343,101,AOJLE)
 	OT(344,401,AOJA)
 	OT(345,101,AOJGE)
 	OT(346,101,AOJN)
 	OT(347,101,AOJG)
 	OT(350,1,AOS)
 	OT(351,201,AOSL)
 	OT(352,201,AOSE)
 	OT(353,1,AOSA)
 	OT(354,201,AOSA)
 	OT(355,201,AOSGE)
 	OT(356,101,AOSN)
 	OT(357,101,AOSG)
 	OT(360,101,SOJ)
 	OT(361,101,SOJL)
 	OT(362,101,SOJE)
 	OT(363,101,SOJLE)
 	OT(364,401,SOJA)
	OT(365,101,SOJGE)
 	OT(366,101,SOJN)
	OT(367,101,SOJG)
 	OT(370,1,SOS)
 	OT(371,201,SOSL)
 	OT(372,201,SOSE)
	OT(373,201,SOSLE)
 	OT(374,1,SOSA)
 	OT(375,201,SOSGE)
 	OT(376,201,SOSN)
 	OT(377,201,SOSG)
 	OT(400,1,SETZ)
 	OT(401,4,SETZI)
 	OT(402,1,SETZM)
 	OT(403,1,SETZB)
 	OT(404,1,AND)
	OT(405,4,ANDI)
 	OT(406,1,ANDM)
 	OT(407,1,ANDB)
 	OT(410,1,ANDCA)
 	OT(411,4,ANDCA,I)
 	OT(412,1,ANDCA,M)
 	OT(413,1,ANDCA,B)
 	OT(414,1,SETM)
 	OT(415,4,SETMI)
 	OT(416,1,SETMM)
 	OT(417,1,SETMB)
 	OT(420,1,ANDCM)
 	OT(421,4,ANDCM,I)
 	OT(422,1,ANDCM,M)
 	OT(423,1,ANDCM,B)
 	OT(424,1,SETA)
 	OT(425,4,SETAI)
 	OT(426,1,SETAM)
 	OT(427,1,SETAB)
 	OT(430,1,XOR)
 	OT(431,4,XORI)
 	OT(432,1,XORM)
 	OT(433,1,XORB)
 	OT(434,1,IOR)
 	OT(435,4,ORI)
 	OT(436,1,ORM)
 	OT(437,1,ORB)
 	OT(440,1,ANDCB)
 	OT(441,4,ANDCB,I)
 	OT(442,1,ANDCB,M)
 	OT(443,1,ANDCB,B)
 	OT(444,1,EQV)
 	OT(445,4,EQVI)
 	OT(446,1,EQVM)
 	OT(447,1,EQVB)
 	OT(450,1,SETCA)
 	OT(451,4,SETCA,I)
 	OT(452,1,SETCA,M)
 	OT(453,1,SETCA,B)
 	OT(454,1,ORCA)
 	OT(455,4,ORCAI)
 	OT(456,1,ORCAM)
 	OT(457,1,ORCAB)
 	OT(460,1,SETCM)
 	OT(461,4,SETCM,I)
 	OT(462,1,SETCM,M)
 	OT(463,1,SETCM,B)
 	OT(464,1,ORCM)
 	OT(465,4,ORCMI)
 	OT(466,1,ORCMM)
 	OT(467,1,ORCMB)
 	OT(470,1,ORCB)
 	OT(471,4,ORCBI)
 	OT(472,1,ORCBM)
 	OT(473,1,ORCBB)
 	OT(474,1,SETO)
 	OT(475,4,SETOI)
 	OT(476,1,SETOM)
 	OT(477,1,SETOB)
 	OT(500,1,HLL)
 	OT(501,6,HLLI)
 	OT(502,1,HLLM)
 	OT(503,1,HLLS)
 	OT(504,1,HRL)
	OT(505,6,HRLI)
 	OT(506,1,HRLM)
 	OT(507,1,HRLS)
 	OT(510,1,HLLZ)
 	OT(511,6,HLLZI)
 	OT(512,1,HLLZM)
 	OT(513,1,HLLZS)
	OT(514,1,HRLZ)
 	OT(515,6,HRLZI)
 	OT(516,1,HRLZM)
	OT(517,1,HRLZS)
 	OT(520,1,HLLO)
 	OT(521,6,HLLOI)
 	OT(522,1,HLLOM)
 	OT(523,1,HLLOS)
	OT(524,1,HRLO)
	OT(525,6,HRLOI)
 	OT(526,1,HRLOM)
	OT(527,1,HRLOS)
 	OT(530,1,HLLE)
 	OT(531,6,HLLEI)
 	OT(532,1,HLLEM)
 	OT(533,1,HLLES)
	OT(534,1,HRLE)
	OT(535,6,HRLEI)
 	OT(536,1,HRLEM)
	OT(537,1,HRLES)
 	OT(540,1,HRR)
	OT(541,6,HRRI)
 	OT(542,1,HRRM)
 	OT(543,1,HRRS)
 	OT(544,1,HLR)
 	OT(545,6,HLRI)
 	OT(546,1,HLRM)
 	OT(547,1,HLRS)
 	OT(550,1,HRRZ)
	OT(551,6,HRRZI)
	OT(552,1,HRRZM)
	OT(553,1,HRRZS)
 	OT(554,1,HLRZ)
 	OT(555,6,HLRZI)
 	OT(556,1,HLRZM)
 	OT(557,1,HLRZS)
 	OT(560,1,HRRO)
 	OT(561,6,HRROI)
 	OT(562,1,HRROM)
 	OT(563,1,HRROS)
 	OT(564,1,HLRO)
 	OT(565,6,HLROI)
 	OT(566,1,HLROM)
 	OT(567,1,HLROS)
 	OT(570,4,HRRE)
 	OT(571,4,HRREI)
 	OT(572,1,HRREM)
 	OT(573,1,HRRES)
 	OT(574,1,HLRE)
 	OT(575,4,HLREI)
 	OT(576,1,HLREM)
 	OT(577,1,HLRES)
 	OT(600,4,TRN)
	OT(601,4,TLN)
 	OT(602,204,TRNE)
	OT(603,204,TLNE)
 	OT(604,4,TRNA)
	OT(605,4,TLNA)
 	OT(606,204,TRNN)
 	OT(607,204,TLNN)
 	OT(610,1,TDN)
	OT(611,1,TSN)
 	OT(612,201,TDNE)
 	OT(613,201,TSNE)
 	OT(614,1,TDNA)
 	OT(615,1,TSNA)
 	OT(616,201,TDNN)
 	OT(617,201,TSNN)
 	OT(620,4,TRZ)
	OT(621,4,TLZ)
 	OT(622,204,TRZE)
 	OT(623,204,TLZE)
 	OT(624,4,TRZA)
 	OT(625,4,TLZA)
 	OT(626,204,TRZN)
 	OT(627,204,TLZN)
 	OT(630,1,TDZ)
 	OT(631,1,TSZ)
 	OT(632,201,TDZE)
 	OT(633,201,TSZE)
 	OT(634,1,TDZA)
 	OT(635,1,TSZA)
 	OT(636,201,TDZN)
 	OT(637,201,TSZN)
 	OT(640,4,TRC)
	OT(641,4,TLC)
 	OT(642,204,TRCE)
	OT(643,204,TLCE)
 	OT(644,4,TRCA)
	OT(645,4,TLCA)
 	OT(646,204,TRCN)
	OT(647,204,TLCN)
 	OT(650,1,TDC)
 	OT(651,1,TSC)
 	OT(652,201,TDCE)
 	OT(653,201,TSCE)
 	OT(654,1,TDCA)
 	OT(655,1,TSCA)
 	OT(656,201,TDCN)
 	OT(657,201,TSCN)
 	OT(660,4,TRO)
 	OT(661,4,TLO)
 	OT(662,204,TROE)
 	OT(663,204,TLOE)
 	OT(664,4,TROA)
 	OT(665,4,TLOA)
 	OT(666,204,TRON)
 	OT(667,204,TLON)
 	OT(670,1,TDO)
 	OT(671,1,TSO)
 	OT(672,201,TDOE)
 	OT(673,201,TSOE)
 	OT(674,1,TDOA)
 	OT(675,1,TSOA)
 	OT(676,201,TDON)
 	OT(677,201,TSON)

OPSIZ:	.-OPTABL-1
OPSIZ2:	400			;POWER OF 2 LESS THAN OPSIZ

;TABLE OF CHARACTERS, TELLING WHICH ARE NICE FOR STRINGS
;IE, ALPHABETIC, NUMERIC, AND SOME SPECIALS == +; UNLIKELIES == -
;LEFT HALF HAS SIXBIT NUMBER, RIGHT HALF HAS ASCII NUMBER

CHRTAB: EXP	0,-5,-5,-5,-5,-5,-5,0,0,2,3,0,0,3,-5,-5		;0-17
	EXP	-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5,-5 ;20-37
	EXP	<0,,1>,<-1,,0>,<-1,,0>,<0,,0>,<0,,0>,<0,,0>,<-1,,0>,<-1,,0>
	EXP	<-1,,0>,<-1,,0>,<0,,0>,<0,,0>,<-1,,1>,<0,,1>,<-1,,1>,<-1,,0>
	EXP	<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>
	EXP	<3,,3>,<3,,3>,<-1,,0>,<-1,,0>,<-1,,0>,<-1,,0>,<-1,,0>,<-1,,0>
	EXP	<-1,,0>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>
	EXP	<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>
	EXP	<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>,<3,,3>
	EXP	<3,,3>,<3,,3>,<3,,3>,<-1,,0>,<-1,,0>,<-1,,0>,<-1,,0>,<-1,,0>
	EXP	0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2		;140-157
	EXP	2,2,2,2,2,2,2,2,2,2,2,-1,-12,-1,-5,-12	;160-177
>
XLIST				;NOW SUPPRESS THE LISTING
OOPS
LIST

STACK:	BLOCK	10
COMENT: Z			;SWITCH - -1 FOR NO COMMENTS
EXTERS: Z			;SWITCH - -1 FOR NO EXTERNALS
JOBFF:	Z			;SAVED .JBFF

IFN FTWLD,<
MSKDEV: Z			;MASKS FOR WILD STUFF
MSKFIL: Z
MSKEXT: Z
MSKPPN: Z
>
IFE FTEXT,<
IFN FTWRDI,<
INBLK: 	0			;OPEN IN CHARACTER MODE
>
IFE FTWRDI,<
INBLK: 10	 		;I MEAN WORD MODE
>
 	SIXBIT /DSK/
	XWD	0,INBUF1
INBUF1: BLOCK	3
INFIL:
INNAM:	Z
INEXT:	Z
	Z
INPPN:	Z
>

IFN FTEXT,<
INBLK:	16
 	SIXBIT /DSK/
	Z
INFIL:	5
INPPN:	Z
INNAM:	Z
INEXT:	Z
	BLOCK	2
>

IFN FTIO,<
IFN FTWRD,<
OUTBLK:	0			;OPEN IN CHARACTER MODE
>
IFE FTWRD,<
OUTBLK:	10			;I MEAN WORD MODE
>
 	SIXBIT /DSK/
 	XWD	OUTBF1,0
OUTBF1: BLOCK	3
OUTFIL:
OUTNAM: Z
OUTEXT: Z
	Z
OUTPPN: Z
>
;TEMPORARY CHECKSUMS

IFN DEBUG,<
$OUTCH: 0
$OPREF: 0
$OPLUK: 0
$SYREF: 0
$SYLUK: 0
$EXREF: 0
$EXLUK: 0
$SYSUR: 0
$SYSUM: 0
$SYSUL: 0
$SSORT: 0
>
	END	START

  k@
q