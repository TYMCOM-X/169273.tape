TITLE CLRALC -- PROGRAM TO REPORT FILES WITH RIPALC ON
SUBTTL E. SOCCI DEC 10 1976

MAJVER==3
MINVER==0

	LOC 137
XWD MAJVER,MINVER
	RELOC

;ACS
F=0
T1=1
T2=2
T3=3
T4=4
P1=5
P2=6
CH=7
P=17

;EXTENDED LOOKUP/ENTER/RENAME PARAMETERS
EXLPPN==1
EXLNAM==2
EXLEXT==3
EXLPRV==4
EXLSIZ==5
EXLVER==6
EXLFUT==7
EXLEST==10
EXLALC==11
EXLPOS==12
EXLFT1==13
EXLLIC==14
EXLMTA==15
EXLDEV==16
EXLSTS==17
EXLELB==20
EXLEUN==21
EXLQTF==22
EXLQTO==23
EXLMXA==24	;HI WATER MARK
EXLUSD==25
EXLAUT==26
EXLUNM==27
EXLUN1==30
EXLPCA==31
EXLUFD==32
EXLALP==33	;NUMBER OF PAGES ALLOCATED TO FILE REALLY

;CONVERSION VALUES

W2PCNV==-^D9
P2WCNV==^D9
B2PCNV==-^D2
P2BCNV==^D2

;PARAMETERS

PDLLEN==^D40

;CHANIO DEFINITIONS

CIOLKP==4
CIOUFD==33
CIOCLS==1			;CLOSE

CIOBSZ==^D1000

;I/O CHANNEL ASSIGNMENTS

LUD==0
UFD==1
FIL==2
DUL==3
OCH==4

;FLAGS IN LH(F)
FL.PRT==1B0
FL.NTP==1B1
FL.FIX==1B2		;FIX IT.

;POSITIONS IN REPORT

UNMPOS==0
AUNPOS==^D15
USDPOS==^D34
SUMPOS==^D50
MXAPOS==^D60
SUBTTL MACROS


DEFINE MSG(TEXT)<OUTSTR [ASCIZ/'TEXT/]>
DEFINE MSGCR(TEXT)<OUTSTR [ASCIZ/'TEXT
/]>
DEFINE FILOUT(TEXT)<MOVEI T1,[ASCIZ\'TEXT\]
		PUSHJ P,MSGOUT>

DEFINE POS(N)<PUSHJ P,[ 	MOVEI T1,'N
			JRST DOPOS]>;END IPOS MACRO DEF
DEFINE WARN(TEXT,JUMP)<JRST	[MSGCR('TEXT)
			JRST	'JUMP]>;END MACRO DEFINITION

;MACRO TO DEFINE I/O BLOCK

DEFINE IOBLK(NAME,IOC,PPN)<
'NAME:
	PHASE 0
IOCHAN:!	'IOC
EXLBLK:!	EXP	EXLALP
	XWD 'PPN
	BLOCK	EXLALP-1
CIOBLK:!			;BLOCK FOR CHANIO
CIOPTR:!	-CIOBSZ,,CIOBUF+'NAME
CIONAM:!	SIXBIT/*/
CIOEXT:!	SIXBIT/*/
CIOCTL:!	220000,,0		;RETURN SIZE OF FILE IN BLOCKS
CIOMON:!	BLOCK	1
CIOSNM:!	BLOCK	1
CIOSEX:!	BLOCK	1		;SAVED NAME AND EXT, MUST BE CLEARED
CIOCNT:!	BLOCK	1
CIOBUF:!	BLOCK	CIOBSZ
	DEPHASE
>;END IOBLK MACRO DEFINITION
SUBTTL INITIALIZATION

START:	RESET
	MOVE	P,[IOWD PDLLEN,PDL]
	OPEN	OCH,[EXP 0,SIXBIT/OUTDEV/,XWD OBUF,0]
	  JRST	[OPEN OCH,[EXP 0,SIXBIT/DSK/,XWD OBUF,0]
		   WARN <CANNOT OPEN OUTPUT DEVICE "DSK">,<[EXIT]>
		JRST .+1]
	SETZM	OUTPPN
	ENTER	OCH,OUTENT
	  WARN	<CANNOT ENTER OUTPUT FILE>,<[EXIT]>
	OPEN	LUD,[EXP 17,SIXBIT/DSK/,0]
	  WARN	<CAN' OPEN DISK FOR LUD>,<[EXIT]>
	OPEN	DUL,[EXP 17,SIXBIT/DSK/,0]
	  WARN	<CAN'T OPEN DISK FOR DUL>,<[EXIT]>
	OPEN	UFD,[EXP 0,SIXBIT/DSK/,0]
	  WARN	<CAN'T OPEN DISK>,<[EXIT]>
	OPEN	FIL,[EXP 0,SIXBIT/DSK/,0]
	  WARN	<CAN'T OPEN DISK>,<[EXIT]>

	LOOKUP	DUL,DULNAM	;LOOKUP DUL
	  WARN	<CAN'T LOOKUP DUL>,<[EXIT]>
	LOOKUP	LUD,LUDNAM
	  WARN	<CAN'T LOOKUP LUD>,<[EXIT]>

	SETZM	ALCCNT		;NUMBER OF RIPALC FILES
	SETZM	FILNUM		;NUMBER OF FILES
	SETZM	LUDPTR		;CLEAR OUT LUD POINTER
	MOVEI	F,0		;CLEAR FLAGS

	GETPPN	T1,		;GET OUR PPN
	MOVEM	T1,OURPPN	;AND SAVE IT
REPEAT 0,<
	MSG	<PRINT RIPALC FILES?>
	INCHRW	CH
	CAIE	CH,"y"		;LOWER CASE Y WORKS TOO
	CAIN	CH,"Y"		;YES?
	TLO	F,(FL.PRT)	;YES, JUST BAD
	MSGCR	<>
	CLRBFI			;GET RID OF STUFF OTHER THAN Y TYPED
>;END REPEAT 0

	MSG	<FIX? (Y OR N):>
	INCHRW	CH
	CAIE	CH,"y"		;YES OR YES
	CAIN	CH,"Y"		;IF YES, THEN
	TLO	F,(FL.FIX)	;SET FIX FLAG
	MSGCR	<>
	CLRBFI
SUBTTL MAIN LOOP

	PUSHJ	P,HEADER	;PRINT OUT HEADER FOR REPORT

;HERE FOR EACH UFD IN MFD

USRLUP:	PUSHJ	P,NXTLUD	;GET NEXT USER TO PROCESS
	  JRST	DONE		;NO MORE, PRINT TOTALS AND EXIT
	MOVEI	P2,UFDBLK	;SETUP BLOCK FOR LOOKUP
	PUSHJ	P,XCTLKP	;NOW DO THE LOOKUP
	  JRST	[HRRZ T1,EXLBLK+EXLEXT(P2) ;GET ERROR CODE
		  JUMPE T1,USRLUP	;OK IF NOT THERE
		  WARN	<ERROR ON UFD LOOKUP>,<USRLUP>]
	SETZM	UFDNUM		;OK, CLEAR OUT NUM FOR NEW UFD
	SETZM	UFDALC		;CLEAR ALC TOTAL FOR UFD
	MOVEI	P1,UFDBLK	;SCAN THE UFD NOW
	MOVEI	P2,FILBLK	;AND LOOKUP THE FILES
	PUSHJ	P,NXTINI	;INIT THE SCANNER

;HERE FOR EACH UFD TO FIND OUT HOW MUCH IS REALLY USED

FILLUP:	PUSHJ	P,NEXT		;GET NEXT FILE SETUP IN FILBLK
	  JRST	UFDDON		;DONE WITH THIS UFD
	AOS	FILNUM		;COUNT ANOTHER SYSTEM FILE
	AOS	UFDNUM		;INCREMENT UFD COUNT
	TRNN	T1,<1B22>	;RIPALC SET?
	JRST	FILLUP		;NO, DON'T WORRY
	AOS	UFDALC		;AND PER UFD COUNT
	AOS	ALCCNT		;YES, COUNT IT
	TLNE	F,(FL.PRT)	;PRINT IT?
	PUSHJ	P,PRTFIL	;YES
	TLNN	F,(FL.FIX)	;TURN BIT OFF?
	JRST	FILLUP		;NO.
	PUSHJ	P,XCTLKP	;YES, LOOK IT UP
	  MSG	<ERROR ON UFD LOOKUP IN FILLUP>
	MOVSI	T1,CIOCLS
	HRR	T1,IOCHAN(P2)
	CHANIO	T1,		;CLOSE THE CHANNEL. NO INPUTS DONE
				; SO ACCESS DATE WON'T GET UPDATED.
	JRST	FILLUP		;AND GO FOR NEXT FILE.


;HERE WHEN DONE WITH A UFD

UFDDON:	PUSHJ	P,UFDTOT	;PRINT OUT UFD TOTALS
	JRST	USRLUP		;THEN GO DO ANOTHER UFD

DONE:	PUSHJ	P,TOTALS
	RELEAS	OCH,
	RELEAS	LUD,
	RELEAS	DUL,
	RELEAS	UFD,
	RELEAS	FIL,
	EXIT	1,
	JRST	.-1
SUBTTL UFD/MFD SCANNING ROUTINES

;ROUTINE TO INITIALIZE SCANNER FOR A CHANNEL
; CALL WITH C(P1) = I/O BLOCK ADDRESS

NXTINI:	MOVEI	T1,CIOMON+1(P1)	;ADDR+1
	HRLI	T1,CIOMON(P1)	;ADDR,,ADDR+1
	SETZM	CIOMON(P1)	;CLEAR STUFF FOR CHANIO SCAN
	BLT	T1,CIOCNT(P1)
	POPJ	P,		;AND RETURN

;ROUTINE TO SCAN A UFD/MFD
; RETURN WITH C(T1) = # BLOCKS FROM CHANIO DATA (-VE IF NOT VALID)

NEXT:	SOSL	T4,CIOCNT(P1)	;NEED ANOTHER CHANIO?
	JRST	MORE		;NO, HAVEN'T FINISHED BUFFER
	MOVSI	T1,CIOUFD	;YES, GET UFD SCAN FUNCTION
	HRR	T1,IOCHAN(P1)	;AND I/O CHANNEL OF SCANNER
	CHANIO	T1,CIOBLK(P1)	;DO THE CHANIO FOR MORE DATA
	  POPJ	P,		;NO MORE, GIVE NON-SKIP RETURN
	JRST	NEXT		;OK, GO GET DATA

MORE:	IMULI	T4,4		;GET INDEX INTO DATA
	ADDI	T4,CIOBUF(P1)	;ADD ADDRESS OF BUFFER
	MOVE	T1,EXLBLK+EXLNAM(P1)	;GET NAME OF WHATS BEING SCANNED
	MOVEM	T1,EXLBLK+EXLPPN(P2)	;THIS IS WHERE TO LOOK IT UP
	MOVE	T1,0(T4)	;GET NAME
	MOVEM	T1,EXLBLK+EXLNAM(P2) ;STORE NAME IN LOOKUP BLOCK
	MOVE	T1,1(T4)	;GET EXTENSION
	MOVEM	T1,EXLBLK+EXLEXT(P2) ;STORE EXT THERE TOO
	MOVE	T1,3(T4)	;RETURN LICENSE WORD.
CPOPJ1:	AOS	(P)
CPOPJ:	POPJ	P,		;RETURN
SUBTTL EXECUTE I/O UUOS

;ROUTINE TO DO A LOOKUP FOR I/O BLOCK IN P2

XCTLKP:	MOVSI	T1,CIOLKP	;LOOKUP FN CODE
	HRR	T1,IOCHAN(P2)	;GET I/O CHANNEL NUMBER
	CHANIO	T1,EXLBLK(P2)	;LOOK THE THING UP
	  POPJ	P,		;GIVE ERROR RETURN
	JRST	CPOPJ1		;OK, GIVE SKIP RET
PRTFIL:	FILOUT	<(>
	MOVE	T1,USRNAM
	PUSHJ	P,SIXOUT
	MOVE	T1,USRNAM+1
	PUSHJ	P,SIXOUT
	FILOUT	<)>
	MOVE	T1,FILBLK+EXLBLK+EXLNAM
	PUSHJ	P,SIXOUT
	FILOUT	<.>
	HLLZ	T1,FILBLK+EXLBLK+EXLEXT
	PUSHJ	P,SIXOUT
	JRST	CRLF

UFDTOT:	MOVE	T1,USRNAM
	PUSHJ	P,SIXOUT
	MOVE	T1,USRNAM+1
	PUSHJ	P,SIXOUT
	FILOUT	<:>
	MOVE	T1,UFDALC
	PUSHJ	P,DECOUT
	FILOUT	< OUT OF >
	MOVE	T1,UFDNUM
	PUSHJ	P,DECOUT
	JRST	CRLF
SUBTTL GET NEXT AUN AND USER NAME FROM LUD AND DUL

NXTLUD:	PUSHJ	P,FNDENT	;GET NEXT LUD ENTRY
	  POPJ	P,		;NO MORE,DONE
	MOVE	T1,3(T4)	;WORT WITH TP BIT IN IT
	TLNE	F,(FL.NTP)	;IF NOT PRINTING TP PEOPLE
	TRNN	T1,40000	;AND THIS IS ONE,
	CAIA			;OK TO PRINT
	JRST	NXTLUD		;NOT OK, GET ANOTHER
	MOVSI	T1,'UFD'
	MOVEM	T1,UFDBLK+EXLBLK+EXLEXT ;AND EXTENTION
	MOVE	T1,(T4)		;GET AUN
	MOVEM	T1,UFDBLK+EXLBLK+EXLNAM ;STORE AUN AS NAME
	PUSHJ	P,LOKDUL	;GET USR NAME FOR AUN C(T1)
	DMOVEM	T1,USRNAM	;SAVE
	JRST	CPOPJ1		;DONE.

FNDENT:	MOVE	T4,LUDPTR
	JUMPN	T4,FNDEN1
FNDEN2:	IN LUD,LUDINB
	SKIPA
	POPJ	P,
	MOVEI	T4,LUDBUF
FNDEN3:	SKIPG	(T4)
	JRST	FNDEN2
	SKIPN	4(T4)		;ZERO USER HASH?
	JRST	FNDEN1		;YES, SEE IF ANOTHER ENTRY IN THIS BLOCK
	MOVEM	T4,LUDPTR
	JRST	CPOPJ1
FNDEN1:	LDB	T2,[POINT 7,2(T4),35]
	ADD	T4,T2
	JRST	FNDEN3

;ROUTINE TO SEARCH DUL FOR AN AUN

LOKDUL:	MOVE	T2,T1
	IDIVI	T2,^D101
	ADDI	T3,1
LOKDL2:	USETI	DUL,(T3)
	INPUT	DUL,DULCOM
	MOVEI	T2,DULBUF
LOKDL1:	CAMN	T1,(T2)
	JRST	[MOVE T1,1(T2)
		MOVE T2,2(T2)
		POPJ P,]
	SKIPL	(T2)
	JRST	[ADDI T2,3
		CAIGE T2,DULBUF+200
		JRST LOKDL1
		MOVE	T1,[SIXBIT/******/]
		MOVE T2,T1
		POPJ P,]
	HRRZ	T2,(T2)
	JRST	LOKDL2
SUBTTL UTILITY ROUTINES

SIXOUT:	MOVE	T4,[POINT 6,T1]	;POINTER
SIXOU1:	ILDB	CH,T4		;GET A BYTE
	ADDI	CH," "-' '	;CONVERT TO ASCII
	PUSHJ	P,CHROUT	;OUTPUT CHARACTER
	TLNE	T4,770000	;OUT OF BYTES?
	JRST	SIXOU1		;NO
	POPJ	P,		;YES

OCTOUT:	SKIPA	T3,[^D8]	;OCTAL
DECOUT:	MOVEI	T3,^D10
RADOUT:	IDIVI	T1,(T3)
	HRLM	T2,(P)
	SKIPE	T1
	PUSHJ	P,RADOUT
	HLRZ	CH,(P)
	ADDI	CH,"0"		;CONVERT TO ASCII
	PUSHJ	P,CHROUT	;OUTPUT IT
	POPJ	P,

MSGOUT:	HRLI	T1,440700	;MAKE INTO BYTE POINTER
MSGLUP:	ILDB	CH,T1		;GET A BYTE
	JUMPE	CH,CPOPJ	;FINISHED COUNTING
	PUSHJ	P,CHROUT
	JRST	MSGLUP		;CONTINUE

CHROUT:	JUMPE	CH,CPOPJ	;IGNORE NULLS
	AOS	HPOS		;INCREMENT HOR POS
	SOSGE	OBUF+2		;MORE IN BUFFER?
	JRST	CHROU1		;NO, DO INPUT
	IDPB	CH,OBUF+1
	POPJ	P,
CHROU1:	OUT	OCH,		;OUTPUT A BUFFER
	JRST	CHROU2		;GO PUT CHAR IN NOW
	WARN	<OUTPUT ERROR>,<CHROUT>
CHROU2:	SOS	HPOS		;WILL BE INNCREMENTED AGAIN
	JRST	CHROUT

CRLF:	MOVEI	T1,[BYTE (7)15,12,0,0,0]
	PUSHJ	P,MSGOUT
	SETZM	HPOS		;BACK TO POS 0
	POPJ	P,		;RETURN


DOPOS:	CAMN	T1,HPOS		;ALREADY THERE?
	POPJ	P,		;YES, JUST RETURN
	CAMG	T1,HPOS		;PAST WHERE WE WANT?
	PUSHJ	P,[PUSH P,T1
			PUSHJ P,CRLF
			POP P,T1
			POPJ P,]
	MOVEI	CH," "		;PRINT BLANK
	PUSHJ	P,CHROUT
	JRST	DOPOS
HEADER:	POPJ	P,

TOTALS:	PUSHJ	P,CRLF
	MOVE	T1,ALCCNT
	PUSHJ	P,DECOUT
	MOVEI	T1,[ASCIZ/ RIPALC FILES OUT OF /]
	PUSHJ	P,MSGOUT
	MOVE	T1,FILNUM
	PUSHJ	P,DECOUT
	MOVEI	T1,[ASCIZ/ TOTAL/]
	PUSHJ	P,MSGOUT
	JRST	CRLF
SUBTTL STORAGE

PDL:	BLOCK	PDLLEN

USRNAM:	BLOCK	2		;CURRENT USER NAME


DULNAM:	3
	1,,4
	SIXBIT/DUL/
	SIXBIT/SYS/

LUDNAM:	3
	1,,4
	SIXBIT/LUD/
	SIXBIT/SYS/


OUTENT:	3
OUTPPN:	0
OUTNAM:	SIXBIT/CLRALC/
OUTEXT:	SIXBIT/DAT/
OBUF:	BLOCK	3

LUDPTR:	0
LUDBUF:	BLOCK	200

DULCOM:	-200,,DULBUF-1
	0
DULBUF:	BLOCK	200

LUDINB:	-200,,LUDBUF-1
	0
UFDSUM:	BLOCK	1		;SUM OF ALL PAGES IN EACH UFD
HPOS:	BLOCK	1		;HORIZONTAL POSITION
OURPPN:	BLOCK	1		;OUR PPN
FILNUM:	BLOCK	1
UFDNUM:	BLOCK	1
UFDALC:	BLOCK	1
ALCCNT:	BLOCK	1

	IOBLK(UFDBLK,UFD,<1,1>)
	IOBLK(FILBLK,FIL)

	END	START
   