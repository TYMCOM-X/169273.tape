begin

external boolean RPGSW;
require "AUX" load!module;
require 8 version;

boolean File,Det;
integer DskChan,Eof;

string procedure outstr(string s); begin
	integer c;

	if File then out (DskChan,S);
	while (c _ lop(s)) neq null do
		auxclv(-1,c,3);
end;

external integer !skip!;
integer IChan,DSKIN;
string procedure prompt(string msg); begin
	string S; integer SKIP;
	while true do begin
	    if DSKIN then begin
		S _ input(IChan,1); SKIP _ !SKIP!;
		if EOF then begin
		    DSKIN _ false;
		    continue;
		    end;
	    end
	    else begin
		outstr (MSG);
		S _ inchwl; SKIP _ !SKIP!;
		if !SKIP! = '33 then begin "password"
		    auxclr(-1,memory['200],'64);
		    S _ S & '33 & inchwl; SKIP _ !SKIP!;
		    outstr('15&'12);
		    auxclr(-1,memory['000],'64);
		end "password";
	    end;
	    if equ(S[1 to 2],"@@") then begin
		!SKIP! _ SKIP; return(S[2 to inf]);
	    end;
	    if S="@" then begin
		release(IChan);
		open(IChan_getchan,"DSK",1,1,0, 256,!SKIP!,EOF);
		lookup(IChan,S[2 to inf],EOF_0);
		if EOF then lookup(IChan,S[2 to inf]&".MHX",EOF_0);
		if EOF then begin
		    outstr("?file "&S[2 to INF]&" not found"&'15&'12);
		    DSKIN _ false;
		    continue;
	    	end;
		DSKIN _ true;
		continue;
	    end;
	    !SKIP! _ SKIP; return(S);
	    end;
	end;

label error;

integer foo, h;

external integer procedure auxcre(string username);
external procedure auxcmd(integer port; string line);
external procedure auxout(integer port; string text);
external integer procedure auxinc(integer port);

string aux!name;
integer aux!port;


define GETTAB = '41;
define JBTUMN = -'22;
define JBTUM1 = -'21;

string commands;

define nhosts = 100;
string array hosts[0:nhosts-1]; integer lasthost;
integer array HostTab[0:nhosts-1];

procedure gethosts; begin
	integer h;
	label retry;
	string line, savline;

retry:	line _ prompt("hosts: ");
	if line[1 for 1] = "?" then begin
		outstr("one of"&'15&'12&
		"- host numbers, separated by commas"&'15&'12&
		"- 10s (to get all PDP10s)"&'15&'12
		);
		goto retry;
	end;
	if equ(line,"10s") or equ(line,"10S") then begin
	    integer chan,eof,i;
	    open(Chan_getchan,"DSK",'14,2,0, 0,0,Eof);
	    lookup(Chan,"(PJ)JOBS.DAT",Eof);
	    if Eof then usererr(0,0,"Can't read (PJ)JOBS.DAT","X");
	    for h_0 step 1 until 12 do wordin(Chan);
	    h _ -1;
	    while 0 < i_wordin(chan) do
		if i land '1000000000 then
		    HostTab[h_h+1] _ i land '777777;
	    release(Chan);
	    lasthost _ h;
	    do begin "hack-sort"
		i _ 0;
		for h _ 1 step 1 until lasthost do
		    if HostTab[h-1] > HostTab[h] then begin
			HostTab[h-1] swap HostTab[h];
			i _ i + 1;
			end;
		end until i=0;
	    for h _ 0 step 1 until lasthost do
		Hosts[h] _ cvs(HostTab[h]);
	    end
	else begin
		integer ns;
		for h _ 0 step 1 until nhosts-1 do begin
			lasthost _ h-1;
			if (savline_line) = null then done;
			ns _ intscan(line,foo);
			if foo = -1 then begin
				outstr(savline&"? -- "
				&"type ? for help"&'15&'12);
				goto retry;
			end;
			hosts[h] _ cvs(ns);
		end;
	end;
	if lasthost = -1 then begin
		outstr("no hosts? -- type ? for help"&'15&'12);
		goto retry;
	end;
end;

string procedure doesc(string s); begin
	string res;
	integer c;

	res _ null;
	while c _ lop(s) do
		if c = "$" then begin
			if "$" = (c _ lop(s))
			    then res_res&"$"
			    else res_res&(c land '37);
		end else res_res&c;
	return(res);
end;

procedure getcommands; begin
	string cl,fs;
	external integer !skip!;

	commands _ null; fs _ "commands (end with ctrl-D):"&13&10;
	while true do begin
		commands _ commands & (cl _ doesc(prompt(fs)));
		fs _ null;
		case !SKIP! of begin
		[4] begin
		    if length(cl) then commands_commands & '15;
		    done; end;
		['12] commands_commands&'15;
		else commands_commands& !SKIP!
		end;
	end;
end;

procedure getfilestuff; begin
	ttyup(true);
	setbreak(1,'12&'4,'15,"SINK");
	File _ (prompt("record? ") = "Y");
	if File then begin
	    open(DskChan_getchan,"DSK",0,0,4, 0,0,Eof);
	    enter(DskChan,prompt("output file: "),Eof);
	    if Eof then usererr(Eof,2,"Enter failure: ","X");
	    Det _ (prompt("detach? ") = "Y");
	    end
	else Det _ false;
end;

boolean BlankLine;

aux!name _ cv6str(calli(-1 lsh 18 lor JBTUMN, GETTAB))
	 & cv6str(calli(-1 lsh 18 lor JBTUM1, GETTAB));
setbreak(1,'12&'4,'15,"SINF");

gethosts;
getcommands;
getfilestuff;
if Det then begin print("Job ",call(0,"PJOB")," detaching...");
	calli(0,-6); end;

for h _ 0 step 1 until lasthost do begin "hostloop"
	integer ch;

	outstr(hosts[h]&":");
	aux!port _ auxcre(aux!name&":"&hosts[h]);
	if aux!port = -1 then begin
		outstr(" cannot build circuit"&'15&'12);
		continue;
	end;
	outstr('15&'12);
	auxout(aux!port,'15&'15); comment proj code/attach msgs;
	auxout(aux!port,";("&'15); comment begin marker;
	auxout(aux!port,commands);
	auxout(aux!port,";)"&'15); comment end marker;
	auxout(aux!port,"exit"&'15&'12);


	comment search for begin marker;
	while true do begin
		ch _ auxinc(aux!port);
		if ch = -1 then continue "hostloop";
		if RPGSW then outchr(ch);
		if ch = ";" then begin
			ch _ auxinc(aux!port);
			if ch = -1 then continue "hostloop";
			if RPGSW then outstr(ch);
			if ch = "(" then begin
				ch _ auxinc(aux!port);
				if ch = -1 then
					continue "hostloop";
				if RPGSW then outstr(ch);
				done;
			end;
		end;
	end;

	comment copy command output until end marker;
	BlankLine _ true;
	while true do begin
		ch _ auxinc(aux!port);
		if ch = -1 then continue "hostloop";
		if ch > '40 then BlankLine _ false;
		if ch = ";" 
		    then begin
			ch _ auxinc(aux!port);
			if ch = -1 then continue "hostloop";
			if ch = ")" then done;
			outstr(";"&ch);
		    end
		    else begin
			if (ch neq '12) or not BlankLine
			    then outstr(ch);
		    end;
		if ch = '12 then BlankLine _ true;
	end;
    	if RPGSW then outstr(";)");

	comment copy characters until zapped;
	while (ch _ auxinc(aux!port)) neq -1 do
		if RPGSW then outchr(ch);
	outstr('15&'12);
end;
close(DskChan); release(DskChan);
if Det then calli(0,-'130);	comment LOGOFF;
call(0,"EXIT");
end
