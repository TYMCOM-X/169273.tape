	Title	PFD	Phantom File Directory
	Search	Carl,Macten,jobdat,uuosym
	Sall

	.Request dsk:tymcab.rel

	entry	PFD
	extern	getwrd,swdec,outsix,trimt3,cryesn

	Subttl	Definitions & Macros

	.rbcnt==0

	Pv.err==1b0		; Value not permitted.
	Pv.req==1b1		; Value required.
	Pn.err==1b2		; Name not permitted.
	Pn.req==1b3		; Name required.
	Pl.err==1b4		; Lookup Succeed = Error
	Pl.req==1b5		; Lookup Succeed required.

Define errtxt(code,type,part1,part2,part3,part4)<
pfd'code:	movei	t2,[asciz\

'type'PFD'code'	'part1''part2''part3''part4'
\]
	Jrst	pfdtxt
>

Define Gtinfo(What,Where)<
	Hrroi	T1,What
	Gettab	T1,
	  Setz	T1,
	Movem	T1,Where
>

Define	Movdef(Name,First)<
Define	Name(From,To)<
	First	T1,From
	Movem	T1,To
>
>
	Movdef	Moveit,Move
	Movdef	Moveii,Movei
	Movdef	Movsit,Movsi
	Subttl	Data Gathering Section

pfd:	reset			; Usually do this
	move	p,[iowd 20,pdl]	; Need a stack?
	Store	f,t1,l,0	; Clear ac's
	Store	f,zcore,ezcore,0; Clear variable stuff
	Hrroi	p2,.Axost	; Master string typeout AC

	Gtinfo	.gtunm,user	; Get your user name
	Gtinfo	.gtun1,user+1	; ..
	Gtinfo	.gtlic,licens	; .. your license bits
	txne	t1,lc.jl	; Set if Jacct on
	  setom	Jac.p		; ..
	txne	t1,2b15		; Set if Read files
	  setom	Rdf.p		; ..
	txne	t1,2b17		; Set if Write files
	  setom	Wtf.p		; ..
	Gtinfo	.gtprv,privs	; .. your privilages
	txne	t1,jp.tym	; Set if Tymshare Proprietary
	  setom	Tym.p		; ..
	txne	t1,jp.asv	; Set if Account Supervisor
	  setom	Sup.p		; ..
	Gtinfo	.gtaun,ident	; good idea to see your identity (AUN)

	hlrz	t1,t1		; see if gan 3?
	caie	t1,3		; well?
	  jrst	pfdzen		; NO! Well, run A Zen program
	Subttl	Main Program loop

loop:	auxcal	p2,[asciz\
>\]
	movsi	t1,.chopn	; Open the disk on channel 0
	chanio	t1,opndsk	; for all PFD stuff
	  exit
	pushj	p,getwrd	; get a name
	movem	t2,ufdnam	; save the name (If any)
	skipn	t2		; see if blank
	jumpl	t1,loop		; if eol also, reset
	jumpl	t1,chkpfd	; No switches -- Set PFD or complain
	caie	t1,'/'		; Is there a slash - switch specifier?
	  jrst	pfdjnk		; No--complain that there was junk
	pushj	p,getwrd	; See if any switches
	movem	t2,swtnam	; save it if there is one
	jumpe	t2,pfdnss	; oops--no switch specified ... yeach!
	Subttl	PROCSW	Switch processor *** Unique switches only ***

procsw:	movem	t1,Saveol	; Save the eol flag
	movsi	t4,-swblen	; get each switch to process
proclp:	move	t3,swblock(t4)	; one at a time
	pushj	p,trimt3	; trim for comparison
	camn	t2,t3		; see if they match
	  jrst	procfd		; Yes--Do some checks
	aobjn	t4,proclp	; No --loop till done
pfdiss:	auxcal	p2,[asciz\?
?PFDISS	Illegal Switch Specified '\]
	move	t1,t2		; Tell there's no match
	pushj	p,outsix
	movei	t2,[asciz\'
\]
	Jrst	pfdtxt		; type message & exit

	Subttl	PROCFD	Switch definition checking

procfd:	Move	t2,swproc(t4)	; Get <bits>,,<Proc>
	Txne	t2,Pv.err	; Value:Error?
	 skipge	Saveol		; Anything after the switch?
	caia
	  jrst	pfdjnk		; Yes-- complain!

	Txne	t2,Pv.req	; Value:Required?
	  skipn	Saveol		; Anything after the switch?
	caia
	  jrst	pfdval		; No--- complain!

	Txne	t2,Pn.err	; Name:Error?
	  skipn	ufdnam		; Any name specified?
	caia
	  jrst	pfdnna		; Yes-- complain!

	Txnn	t2,Pn.req	; Name:Required?
	  jrst	procf1		; No.
	skipn	ufdnam		; Any name specified?
	  jrst	pfdpns		; No--- complain!
	skipl	ufdnam		; Remember! It must be Negative!!!
	  jrst	pfdpnn		; Not? -- Complain!

procf1:	Setzm	chanel		; Use channel 0
	Txne	t2,Pl.err	; Lookup succeeds -- Error
	Pushj	p,Chkufd	; Is it there?
	  caia			; No. Ok.
	  jrst	pfdpae		; PFD Already exists - Bletch!

	Txnn	t2,Pl.req	; Lookup the file?
	  jrst	procfx		; No.
	Pushj	p,Chkufd	; Yes!
	  jrst	pfddnf		; Not here?  Awful!  Complain!

procfx:	jrst	@swproc(t4)	; yes--do it

	Subttl	CHKPFD	No Switches -- See if we can go there

Chkpfd:	Setzm	chanel		; Use channel 0
	pushj	p,Chkufd	; Go see if it's there, <.Chlk>
	  jrst	pfddnf		;  No -- Oh well?
Gothere:
	push	p,[pfdtxt]	; Remember where to go
Gohere:	movsi	t1,.Tcrdd	; Since we're going away...
	Tmpcor	t1,		; Delete my TMPCOR tmp files
	  jfcl			; Never happens--but necessary!
	move	t1,ufdnam	; who am I?
	movei	t2,Ok
	chgppn	t1,		; Oh yes!
	  jrst	pfdgfd		; Oh noooooo!
	popj	p,		; Type the message and exit (Mostly)

Chkufd:	Store	t1,look,look+.rbpid,0	; Clear lookup block
	moveit	ufdnam,look+.rbnam	; Use the PFD specified
	moveit	<[1,,1]>,look+.rbppn	; Look in (UFD)
	movsit	 'ufd',look+.rbext	; It is a directory
	moveii	.rbpid,look+.rbcnt	; large lookup block
	movsi	t1,.chlk		; Lookup
	hrr	t1,chanel		; Using their channel
	chanio	t1,look			;   ...
	  popj	p,			; Nope!
	aos	(p)			; Yep!
	popj	p,

	Subttl	PFDHLP	Help text routine

pfdhlp:	Auxcal	p2,[Asciz\

	PFD Commands Summary

\]
	movsi	p1,-swblen		; get each switch
pfdhl0:	move	t1,swblock(p1)		; one at a time
	pushj	p,outsix		; and type the name...
	Auxcal	p2,[Asciz\	\]	;
	Auxcal	p2,@swtext(p1)		;  followed by the text
	Aobjn	p1,pfdhl0		; Loop for all switches
	Auxcal	p2,[Asciz\
\]
	Jrst	Pfd			; Then **Restart**
	Subttl	CREATE	See if it exists already or create it

create:	Skipn	Wtf.p		; Do we have Write files?
	  jrst	pfdnel		; No -- Not enough license!
	Setzm	Chanel		; Use Channel 0
	pushj	p,chkufd	; Does it exist?
	  caia			; No -- Default skip
	jrst	pfduae		; Yes-- tell the user
	Auxcal	p2,[asciz\[Create UFD?]\]
	pushj	p,cryesn	; Ask the user for his opinion.
	  jrst	pfdabt		; No Match -- byebye!
chkok:	movsit	 'ufd',look+.rbext	; Setup extension right!
	moveit	dftqti,look+.rbqtf	; Get default quota in
	moveit	dftqto,look+.rbqto	; now out.
	dmove	t1,user		; set ufd name
	dmovem	t1,look+.rbunm
	movsi	t1,.chent	; create ufd
	hrr	t1,chanel	; on their channel
	chanio	t1,look		; ...
	  jrst	pfdccu		; Nope!
	movsi	t1,.chcls	; Yes--Now close it so it's there
	chanio	t1,
	jrst	Gothere		; And perform the GFD function
	Subttl	Create UFD message for already exists

pfduae:	auxcal	p2,[asciz\
%PFDUAE	UFD \]
	move	t1,ufdnam	; and let him know which one
	pushj	p,outsix
	auxcal	t1,[asciz\ Already Exists

[GFD?]\]
	pushj	p,Cryesn	; Get a response from the user
	  jrst	pfdabt		; No Match -- byebye!
	jrst	gothere		; ok!
	Subttl	DELETE	PURGE

delete:	Tdza	t1,t1		; Zero if DELETE
purge:	Seto	t1,		; Minus if PURGE
	Movem	t1,prgflg	; Save as a flag
	Skipn	Wtf.p		; Do we have Write files?
	  jrst	pfdnel		; No -- Not enough license!
	movei	t2,[asciz\[Delete PFD?]\]
	skipe	prgflg		; Purge?
	movei	t2,[asciz\[Purge PFD?]\]
	Auxcal	t1,(t2)		; ..
	pushj	p,Cryesn	; Check for <CR>-Yes / No
	  jrst	pfdabt		; No Match -- byebye!
	move	t1,[.chopn,,1]	; Open a DSK
	chanio	t1,opndsk
	  halt	.-1
	setzm	ufdfnd		; Say we're starting out
	movsit	'*  ',ufdpnt+2	; Look for *.*
delpfd:	movsi	t1,.chufd	; Read some file names
	chanio	t1,ufdpnt	; ..
	  jrst	prgdon		; Scan is done!!
	skipe	prgflg		; Are we purging?
	  jrst	prgpfd		; Yes--Skip this stuff
	Auxcal	p2,[asciz\[PFD not Empty - Purge?]\]
	pushj	p,Cryesn	; Check for <CR>-Yes / No
	  jrst	pfdabt		; No Match -- byebye!
	setom	prgflg		; Ok! Set flag so we don't ask again
	pushj	p,gohere	; Oh yes! GFD to it so we can rename
prgpfd:	Movn	p1,ufdcnt	; Obtain the number of entries found
	hrlz	p1,p1		; Force an AOBJN word
	  caia			; Initial skip.
prgpf0:	aoj	p1,		; Increment pointer by 2 for loop
	skipn	t1,ufdblk(p1)	; Must be non-zero name
	  aobjn	p1,prgpf0	; Nope, so loop back for next
	jumpge	p1,delpfd	; Loop if we're at the end
	store	t2,look,look+.rbpid,0	; Clear lookup block
	movem	t1,look+.rbnam	; Save for the lookup
	moveii	.rbpid,look	; Specify longest block
	hllz	t1,ufdblk+1(p1)	; get the extension
	movem	t1,look+.rbext	; set it
	move	t1,[.chlk,,1]	; Lookup using other channel
	chanio	t1,look		;   ...
	  jrst	pfdcrf		; Hmmm. Cannot lookup -- Cannot rename
	move	t1,look+.rbaut	; Ok.  Get the author's name
	movem	t1,look+.rbppn	; Use it for the PPN
	move	t1,[.chren,,1]	; Then do the RENAME
	chanio	t1,look		; ..
	  jrst	pfdcrf		; Hmmm.  We tried -- Tell the user!
	Aobjn	p1,prgpf0	; then jump back into the loop
	jrst	delpfd		; Hmmm. Got lucky! last one in block.

pfdcrf:	Aos	ufdfnd		; Count the ones we can't rename
	Auxcal	p2,[Asciz\
Can't Rename file: \]
	move	t1,look+.rbnam	; Get the filename
	pushj	p,outsix	; Type it.
	Auxcal	p2,[Asciz\ \]	; Followed by a space.
	hllz	t1,look+.rbext	; Then the extension.
	pushj	p,outsix	; ..
	Aobjn	p1,prgpf0	; then jump back into the loop
	jrst	delpfd		; Hmmm. Got lucky! last one in block.

prgdon:	Skipg	ufdfnd		; Any we couldn't rename?
	  jrst	delok		; No.  Everything worked!
	Auxcal	p2,[Asciz\
\]
	jrst	pfdcdd		; Well!  Tell user we can't delete it!

delok:	pushj	p,Chkufd	; Lookup the PFD again
	  jrst	pfdcff		; Well!  It was there.
	setzm	look+.rbnam	; zap ufd looked up
	setzm	look+.rbext	; not necessary
	movsi	t1,.chren	; then rename
	hrr	t1,chanel	;  using their channel to
	movei	t2,Ok
	chanio	t1,look		; null name -- i.e. delete it
	  jrst	pfdcdd		; Well, We tried anyway.  Bitch!

gohome:	hrroi	t1,.gtaun
	gettab	t1,
	  jrst	bye		; If this fails, bye!
	movei	t2,[asciz\
.GFD \]
	chgppn	t1,		; Now become yourself again
	  movei	t2,[asciz\?
?PFDNPR	No Privilages to restore youself to \]
	auxcal	p2,(t2)
	move	t1,user		; tell the world who you are
	pushj	p,outsix
	move	t1,user+1	; in two parts
	pushj	p,outsix
	auxcal	p2,[asciz\
\]
	exit	1,
	exit
	Subttl	SCNUFD search routine

Scnufd:	Skipn	Rdf.p		; See if We have Read Files?
	  jrst	pfdnel		; No -- Not enough License
	Moveii	2,chanel	; Use channel 2 for lookup scan
	move	t1,[.chopn,,2]	; Open a DSK
	chanio	t1,opndsk
	  halt	.-1
	moveit	<[1,,1]>,ufdnam	; Remember this is (UFD)
	pushj	p,Chkufd	; See if it's there
	  jrst	pfdunf		; Can't happen easily, UFD not there
	setzm	chanel		; Make sure we use the right channel below ***
	setzm	ufdfnd		; Say we're starting out
	movsit	'UFD',ufdpnt+2	; Look for *.UFD
Scnuf2:	move	t1,[.chufd,,2]	; Read some file names
	chanio	t1,ufdpnt	; ..
	  jrst	Scndon		; Scan is done!!
	Movn	p1,ufdcnt	; Obtain the number of entries found
	hrlz	p1,p1		; Force an AOBJN word
	  caia			; Initial skip.
Scnuf4:	aoj	p1,		; Increment pointer by 2 for loop
	skipl	t1,ufdblk(p1)	; Look at the name for sign bit
	  aobjn	p1,Scnuf4	; Nope, so loop back for next
	jumpge	p1,Scnuf2	; Loop if we're at the end
	movem	t1,ufdnam	; Save for the lookup
	pushj	p,outsix	; Print the name
	pushj	p,Chkufd	; Is it there -- Really?
	  jrst	Scnuf6		; Can't get any info?
;	skipn	look+.rbunm	; User name?
;	  jrst	Scnuf5		; No!
;	hrroi	t1,.Axost	; Ok, give a TAB and a '('
;	Auxcal	T1,[Asciz\	<\]
;	Move	t1,look+.rbunm	; Get the user name
;	pushj	p,outsix	; print it
;	Skipe	t1,look+.rbunm+1; Any more?
;	  pushj	p,outsix	; Maybe.
;	hrroi	t1,.Axost
;	Auxcal	t1,[Asciz\>\]
Scnuf5:	move	t1,look+.rbaut	; Get the author
	movem	t1,look+.rbnam	; use this for a file name
	movsi	t1,.chlk	; Channel
	chanio	t1,look
	  jrst	Scnuf6		; Can't get any info?
	hrroi	t1,.Axost	; Ok, give a TAB and a '('
	Auxcal	T1,[Asciz\	Author: \]
	Move	t1,look+.rbunm	; Get the user name
	pushj	p,outsix	; print it
	Skipe	t1,look+.rbunm+1; Any more?
	  pushj	p,outsix	; Maybe.
Scnuf6:	hrroi	t1,.Axost	;  followed by a <CRLF>
	Auxcal	T1,[Asciz\
\]
	Aos	UFDFND		; Count the ones we find
	Aobjn	p1,Scnuf4	; then jump back into the loop
	jrst	Scnuf2		; Hmmm. Got lucky! last one in block.

Scndon:	Skipe	Ufdfnd		; Any found?
	  Jrst	Pfd		; Yes!
	hrroi	t1,.Axost
	Auxcal	T1,[Asciz\
%PFDNPF	No PFD's Found
\]
	Jrst	Pfd

	Subttl	QUOTAS	QTA.IN	QTAOUT

Quotas:	Skipn	Tym.p		; Only Tymshare Props can change it
	  jrst	pfdnel		; ..
	pushj	p,inqta
qtaout:	Skipn	Tym.p		; Only Tymshare Props can change it
	  jrst	pfdnel		; ..
	pushj	p,outqta
quota:	movsit	'ufd',look+.rbext
	movsi	t1,.chren	; Rename the file
	hrr	t1,chanel	; Using the right channel
	movei	t2,Ok
	chanio	t1,look		; just changing the quotas
	  jrst	pfdccq		; Can't change quota
	jrst	Pfd		; Start over

qta.in:	Skipn	Tym.p		; Only Tymshare Props can change it
	  jrst	pfdnel		; Nope.
	pushj	p,inqta
	jrst	quota
	Subttl	INQTA	OUTQTA

inqta:	hrroi	t1,.axost
	skipge	Saveol			; Is there stuff on the line?
	auxcal	t1,[asciz\What Quota IN:  \]
	pushj	p,swdec
	movem	C,Saveol		; Save the newest State of the line
	skiple	N			; No change if .le. 0
	movem	N,look+.rbqtf
	popj	p,

outqta:	hrroi	t1,.axost
	skipge	Saveol			; Is there more?
	auxcal	t1,[asciz\What Quota OUT: \]
	pushj	p,swdec
	movem	C,Saveol		; Save the newest State of the line
	skiple	N			; No change if .le. 0
	movem	N,look+.rbqto
	popj	p,

	Subttl	PFDZEN	Illegal user!!!

Pfdzen:	movei	t1,[sixbit/dsk/
		    sixbit/zen/
		    0
		    0
		    3,,213211
		    0]
	run	t1,
	  halt	.
	exit

	Subttl	Error Messages

pfdtxt:	hrroi	t1,.axost
	auxcal	t1,(t2)
bye:	exit	1,
	exit

Errtxt	ABT,%,<Action Aborted.>
Errtxt	CCQ,?,<Cannot Change Quota on Directory.>
Errtxt	CCU,?,<Can't Create UFD for specified directory.>
Errtxt	CDD,?,<Cannot Delete Directory.>
Errtxt	CFF,?,<Cannot Find File -- It just Disappeared!>
Errtxt	GFD,?,<Cannot GFD to Directory Specified.>
Errtxt	JNK,?,<Junk found at end of line -- Try again.>
Errtxt	NEL,?,<Not enough License for this function.>
Errtxt	NNA,?,<PFD Name Not Allowed for this switch.>
Errtxt	NSS,?,<No Switch Specified.>
Errtxt	PNN,?,<PFD Name is Non-Negative - It must start with a letter.>
Errtxt	PNS,?,<PFD name *NOT* Specified.>
Errtxt	UNF,?,<(UFD) *NOT* Found.>
Errtxt	VAL,?,<Value Required for this switch.>

pfddnf:	hrroi	t1,.axost
	auxcal	t1,[asciz\?
?PFDDNF	Directory '\]
	move	t1,ufdnam
	pushj	p,outsix
	movei	t2,[asciz\' not found
\]
	jrst	pfdtxt

pfdpae:	hrroi	t1,.axost	; tell him the UFD is there
	auxcal	t1,[asciz\
%PFDPAE	PFD \]
	move	t1,ufdnam	; and let him know which one
	pushj	p,outsix
	movei	t2,[asciz\ Already Exists
\]
	jrst	pfdtxt

	Subttl	Pure Data Storage Area *** Switch Definitions ***

define	switch<
x	help,	pfdhlp,	<pn.err>,	<This Text>
;x	build,	build,	<pn.req!pv.err>,<Build files into a PFD>
x	create,	create,	<pn.req!pv.err>,<Create a *NEW* PFD>
x	delete,	delete,	<pn.req!pv.err!pl.req>,	<Delete an existing PFD>
x	purge,	purge,	<pn.req!pv.err!pl.req>,	<Purge files from PFD & Delete it>
x	search,	scnufd,	<pn.err>,	<List all existing PFD's>
x	quota,	quotas,	<pn.req!pl.req>,<Change the Quota for the specified PFD>
x	input,	qta.in,	<pn.req!pl.req>,<Change the Input Quota for the PFD>
x	output,	qtaout,	<pn.req!pl.req>,<Change the Output Quota for the PFD>
x	gfd,	gohome,	<pn.err!pv.err>,<GFD to your Logged-In Directory>
x	exit,	bye,	<pn.err!pv.err>,<Exit to Monitor>
>
define x(a,b,c,d)<sixbit/a/>
swblock:switch
	swblen==.-swblock
define x(a,b,c,d)<exp c'!'b>
swproc:	switch
define x(a,b,c,d)<[Asciz\'d'
\]>
swtext:	switch

	Subttl	Pure Data Storage

Ok:	asciz\
Ok.
\
opndsk:	17
	sixbit/dsk/
	0
dftqti:	^d10000
dftqto:	^d1000
ufdpnt:	-2000,,ufdblk
	sixbit /*/
	sixbit /UFD/
zcore:	0
	0
	0
	0
ufdcnt:	0
	Subttl	Impure data Storage *** Note ZCORE==.-5 ***

ufdfnd:	block	1
ufdblk:	block	2000

ufdnam:	block	1
swtnam:	block	1
prgflg:	block	1
saveol:	block	1
chanel:	block	1
look:	block	.rbpid+1

Rdf.p:	block	1
Wtf.p:	block	1
Jac.p:	block	1
Tym.p:	block	1
Sup.p:	block	1

Privs:	block	1
User:	block	2
Licens:	block	1
Ident:	block	1

Pdl:	block	20
ezcore==.-1

	end	pfd
   