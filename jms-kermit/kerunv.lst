KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 1
KERUNV	MAC	 7-May-74 05:38		Robert C. McQueen/NB

     1	000000'	000740	000000			FTKLKS,0	;Make this work on a KI or KA
     2						UNIVER	KERUNV - Universal for KERMIT-10
     3						SUBTTL	Robert C. McQueen/NB
     4						REMARK	Version 1 - Antonino N. J. Mione/NB/RCM
     5
     6					  ; Universals
     7
     8						SEARCH	GLXMAC			; Parser interface definitions
     9
    10					  ; Version number
    11
    12					;[CSM] According to KERV3.MEM, this is KERMIT version 3(123)
    13			000003			KERVER==3		;[CSM]	; Major version number
    14			000000			KERMIN==0			; Minor version number
    15			000124			KEREDT==124			; Edit level
    16			000000			KERWHO==0			; Customer edit
    17
    18					  ; Prologue
    19
    20						PROLOG	(KERUNV)^		; Interface to GLXMAC correctly
    21
    22
    23
    24					;[CSM] Changed some defaults
    25			000034			D$ESCAP==.CHCBS	;[CSM] Control-Backslash to match documentation
    26			000000			D$FTP==$FBS7	;[CSM] Default byte size=7 (because of SED)
    27					;[CSM] Made all symbols suppressed to DDT
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 2
KERUNV	MAC	 7-May-74 05:38		Table of Contents

    28						SUBTTL	Table of Contents
    29
    30					;+
    31					;.pag.lit
    32					;                          Table of Contents of KERUNV
    33					;
    34					;
    35					;                                    Section                             Page
    36					;   1.   Table of Contents. . . . . . . . . . . . . . . . . . . . . . . .   2
    37					;   2.   Revision History . . . . . . . . . . . . . . . . . . . . . . . .   3
    38					;   3.   Definitions
    39					;      3.1.   Default . . . . . . . . . . . . . . . . . . . . . . . . . .   4
    40					;      3.2.   Operating system
    41					;         3.2.1.   TOPS-10
    42					;            3.2.1.1.   Channels. . . . . . . . . . . . . . . . . . . . .   4
    43					;            3.2.1.2.   Terminal info . . . . . . . . . . . . . . . . . .   5
    44					;      3.3.   Macro blocks. . . . . . . . . . . . . . . . . . . . . . . .   6
    45					;   4.   .FD block extensions . . . . . . . . . . . . . . . . . . . . . .   7
    46					;   5.   LOKWLD routine calling sequence. . . . . . . . . . . . . . . . .   8
    47					;   6.   Definitions
    48					;      6.1.   BLISS-36 interface symbols. . . . . . . . . . . . . . . . .   9
    49					;      6.2.   Symbols
    50					;         6.2.1.   File types (byte size) . . . . . . . . . . . . . . . .  10
    51					;      6.3.   Macro
    52					;         6.3.1.   BLSRTN - Define a BLISS called routine . . . . . . . .  11
    53					;         6.3.2.   BLSRET - Return a value to BLISS . . . . . . . . . . .  12
    54					;         6.3.3.   BLSCAL - Call a BLISS-36 routine . . . . . . . . . . .  13
    55					;         6.3.4.   KERRORS - Things passed to BLISS . . . . . . . . . . .  14
    56					;         6.3.5.   $KERR - Issue error messages . . . . . . . . . . . . .  15
    57					;         6.3.6.   KERERR - Issue an error to the remote. . . . . . . . .  16
    58					;         6.3.7.   Character masks. . . . . . . . . . . . . . . . . . . .  17
    59					;   7.   End of KERUNV. . . . . . . . . . . . . . . . . . . . . . . . . .  18
    60					;
    61					;.end lit.pag
    62					;-
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 3
KERUNV	MAC	 7-May-74 05:38		Revision History

    63						SUBTTL	Revision History
    64
    65					COMMENT	|
    66
    67					Start of version 2(100)
    68
    69					100	By: Robert C. McQueen		On: Yes.
    70						Lots of rewritting and other things.
    71
    72					101	By: Nick Bush			On: 22-August-1983
    73						Fix setting up of seven or eight bit byte pointers for file
    74						I/O.  Do this once when the file is opened, not each time
    75						a buffer is read.  TOPS-10 is quite happy to use whatever
    76						byte size is stored in the buffer header byte pointer, and will
    77						use that size to determine the byte count.
    78
    79					102	By: Robert C. McQueen		On: 29-August-1983
    80						Remove the TT% routines and use the common TT_ routines in the
    81						Bliss module KERTT.
    82
    83					103	By: Robert C. McQueen		On: 16-September-1983
    84						Add XFR%STATUS and baud rate stats.
    85
    86					104	By: Robert C. McQueen & Nick Bush	On: Many days
    87						- Add CRC support
    88						- Redo the SHOW command processing
    89						- Fix random bugs.
    90
    91					105	By: Robert C. McQueen & Nick Bush	On: Many days
    92						- Implement IBM mode
    93						- Implement file disposition
    94						- Make CCL entry work
    95
    96					106	By: Nick Bush		On: 3-November-1983
    97						Fix terminal handling for non-network systems.  Also make sure
    98						the terminal will be available when we try to use it by grabing
    99						it when we set the line.
   100						Modules: KERMIT
   101
   102					107	By: Nick Bush		On: 12-November-1983
   103						Add macro definition capability for SET options.
   104						Modules: KERMIT
   105
   106					110	By: Robert C. McQueen		On: 16-November-1983
   107						Fix message number checks so that they all would be mod 64.
   108						Modules: KERUNV
   109
   110					111	By: Nick Bush		On: 16-November-1983
   111						Add TAKE command.
   112						Modules: KERMIT
   113
   114					112	By: Nick Bush		On: 17-November-1983
   115						Clear the input buffer before we send a message.  This ignores any garbage
   116						which came in on the line since the last message we received.
   117						Modules: KERMIT
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 3-1
KERUNV	MAC	 7-May-74 05:38		Revision History

   118
   119					113	By: Nick Bush		On: 14-December-1983
   120						Add some more single character commands for use during transfers.
   121						Control-A will type a status line, control-D will toggle debugging, and
   122						carriage return will force a timeout (therefore either a NAK or retransmission).
   123						Modules: KERMIT
   124
   125					114	By: Nick Bush		On: 19-December-1983
   126						Default the transfer terminal to KERMIT: if the logical name exists and
   127						is a terminal.
   128	
   129						Remove FILE%DUMP, since KERMSG no longer references it.
   130						Modules: KERMIT
   131
   132					115	By: Nick Bush		On: 5-January-1983
   133						Add support for different types of file names.  This changes the
   134						SET FILE-xxx commands to be SET FILE xxx and adds a SET FILE NAMING
   135						command.
   136						Modules: KERMIT
   137
   138					116	By: Nick Bush		On: 14-March-1984
   139						Add parsing for all REMOTE commands.
   140						Add support for some generic and local commands.
   141						Fix wild card processing to handle pathological names correctly.
   142						Modules: KERMIT,KERSYS,KERWLD
   143
   144					117	By: Nick Bush		On: 14-March-1984
   145						Add code to support changing default path.
   146						Modules: KERSYS
   147
   148					120	By: Robert C. McQueen		On: 28-March-1984
   149						Add bug fixes from WMU.  Many thanks to the people out in Kalamazoo.
   150						Modules: KERMIT,KERWLD
   151
   152					121	By: Robert C. McQueen		On: 28-March-1984
   153						Add SET PROMPT command.  Start adding support for generic COPY and
   154						RENAME commands.
   155						Modules: KERUNV,KERMIT,KERWLD
   156
   157					122	By: Robert C. McQueen		On: 29-March-1984
   158						Remove ADJBP instructions and add the five instructions that adjust byte
   159						pointers for the KI10s that use Kermit.'
   160						Modules: KERMIT
   161
   162					123	By: Nick Bush		On: 2-April-1984
   163						Change SPACE generic command to use PPN of default path instead of users
   164						PPN if no argument is supplied.
   165						Make DIRECTORY and DELETE generic commands print out a header at the
   166						top of the list, and print file size in both words and allocated blocks.
   167						Add SPACE as synonym for DISK-USAGE command and ERASE as synonym for
   168						DELETE.
   169	
   170						Modules: KERMIT,KERSYS
   171
   172					124	By: Robert C. McQueen		On: 8-May-1984
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 3-2
KERUNV	MAC	 7-May-74 05:38		Revision History

   173						Fix KERMIT-10's handling of remote directories
   174						Modules: KERWLD
   175					|
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 4
KERUNV	MAC	 7-May-74 05:38		Definitions -- Default

   176						SUBTTL	Definitions -- Default
   177
   178					; The following are assembly parameters for KERMIT
   179		777777	777777		ND	FTKLKS,	-1			; Assume this is a KL or KS processor
   180
   181			000400		ND	PDLLEN,	400			; Stack size
   182					TOPS10<
   183			000005		ND	D$MSFD,	^D5			; Max number of SFDs
   184			000200		ND	D$BLKS,	^D128			; Number of words to read in directory
   185					>; End of TOPS10 conditional
   186			000005		ND	D$PSIZ,	^D5			; Max prompt size in words including null
   187					;[CSM] This definition does not match documentation (or its own comment)
   188			000034		ND	D$ESCAP,.CHCNY			; Use control back slash for escape character
   189			000200		ND	D$MAXD,	^D128			;[107] May have up to 128 macros
   190
   191
   192
   193						SUBTTL	Definitions -- Operating system -- TOPS-10 -- Channels
   194
   195					; The following are the various definitions for the TOPS-10 version of
   196					; Kermit-10.
   197
   198					TOPS10<
   199			000001			FIL==	1			; File channel
   200			000002			TTY==	2			; Kludge channel
   201			000003			TTYHLD==3			; Channel to hold onto terminal with
   202					>; End of TOPS10 conditional
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 5
KERUNV	MAC	 7-May-74 05:38		Definitions -- Operating system -- TOPS-10 -- Terminal info

   203						SUBTTL	Definitions -- Operating system -- TOPS-10 -- Terminal info
   204
   205					;[CSM] Fix the diagram below
   206					;
   207					; The following are the terminal information blocks.  These blocks are used
   208					; to process the various information for a terminal.
   209
   210					;; !=========================================================================!
   211					;; !                   ANF node the terminal is connect to                   !
   212					;; !-------------------------------------------------------------------------!
   213					;; !                        Line number on that node                         !
   214					;; !-------------------------------------------------------------------------!
   215					;; !                           Sixbit device name                            !
   216					;; !-------------------------------------------------------------------------!
   217					;; !                             Channel number                              !
   218					;; !-------------------------------------------------------------------------!
   219					;; !                              Terminal UDX                               !
   220					;; !-------------------------------------------------------------------------!
   221					;; !                       I/O status on failing UUOs                        !
   222					;; !-------------------------------------------------------------------------!
   223					;; !                             Buffer address                              !
   224					;; !-------------------------------------------------------------------------!
   225					;; !                          Buffer size in words                           !
   226					;; !-------------------------------------------------------------------------!
   227					;; \                                                                         \
   228					;; \                           Input buffer header                           \
   229					;; \                                                                         \
   230					;; !-------------------------------------------------------------------------!
   231					;; \                                                                         \
   232					;; \                          Output buffer header                           \
   233					;; \                                                                         \
   234					;; !-------------------------------------------------------------------------!
   235					;; !                          Status of TTY PAGE bit                         !
   236					;; !=========================================================================!
   237					;
   238					;[CSM] Put $TTPAG in comments above
   239
   240					TOPS10<
   241			000000			$TTNOD==0			; ANF node the terminal is connected to
   242			000001			$TTLIN==1			; Line number on that node
   243			000002			$TTDEV==2			; Device name
   244			000003			$TTCHN==3			; Terminal channel
   245			000004			$TTUDX==4			; Terminal UDX
   246			000005			$TTIOS==5			; Status from failing UUO
   247			000006			$TTBAD==6			; Address of the buffers
   248			000007			$TTBSZ==7			; Size of the buffers
   249			000010			$TTIBH==10			; Input buffer header offset
   250			000013			$TTOBH==13			; Output buffer header
   251			000016			$TTPAG==16			; Status of TTY PAGE when terminal opened
   252			000017			$TTSIZ==17			; Size of the block
   253					>; End of TOPS10 definitions
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 6
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro blocks

   254						SUBTTL	Definitions -- Macro blocks
   255
   256					;[107] The following is the format used to store the SET macros.
   257					;
   258					;; !=========================================================================!
   259					;; !       Address of this block        ! Address of action routine (SETMAC) !
   260					;; !-------------------------------------------------------------------------!
   261					;; !      Offset to expansion text      !       Length of entire block       !
   262					;; !=========================================================================!
   263					;; \                                                                         \
   264					;; \                           Macro name in ASCIZ                           \
   265					;; \                                                                         \
   266					;; !=========================================================================!
   267					;; \                                                                         \
   268					;; \                        Macro expansion in ASCIZ                         \
   269					;; \                                                                         \
   270					;; !=========================================================================!
   271					;
   272			000000			$MBRTN==0			; Address of routine
   273			000001			$MBOFS==1			; Address of offset to text
   274		777777	000000				MB$OFS==LHMASK		; Offset is in left half
   275			000001			$MBLEN==1			; Offset to length
   276			777777				MB$LEN==RHMASK		; In right halfword
   277			000002			$MBNAM==2			; Offset to name text
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 7
KERUNV	MAC	 7-May-74 05:38		.FD block extensions

   278						SUBTTL	.FD block extensions
   279
   280					; The .FD block extensions are to allow the handling of wild card processing
   281					; in this module.
   282
   283					; Additional words
   284
   285					TOPS10<
   286			000012			.FDNMM==FDXSIZ			; Name mask
   287			000013			.FDEXM==.FDNMM+1		; Extension mask
   288			000014			.FDDIM==.FDEXM+1		; Offset to the directory mask
   289			000015			.FDSFM==.FDDIM+1		; First SFD mask
   290			000022			.FDMOD==.FDSFM+5		; Mod word
   291			000023			.FDMOM==.FDMOD+1		; Mask word for the mod word
   292			000024			.FDSIZ==.FDMOM+1		; Size of the block
   293
   294					; Offsets
   295
   296			000010			.FDD2M==.FDDIM-.FDPPN		; Define offset from one to another
   297
   298					; Flag bits in .FXMOD
   299
   300		400000	000000			FD.DIR==1B0			; Directory given
   301		200000	000000			FD.DFX==1B1			; Use default directory
   302					>; End of TOPS10 conditional
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 8
KERUNV	MAC	 7-May-74 05:38		LG block definitions

   303						SUBTTL	LG block definitions
   304
   305					; The following defines the block for the log file definitions
   306
   307			000000			$LGFLG==0			; Flags
   308			400000				LG$SET==1B18		; Log file name set
   309			200000				LG$APP==1B19		; Append to file
   310			100000				LG$OPN==1B20		; File is open
   311			000001			$LGIFN==$LGFLG+1		; IFN for open file
   312			000002			$LGFOB==$LGIFN+1		; FOB for log file
   313			000004			$LGFD==	$LGFOB+FOB.MZ		; Offset for FD
   314			000016			$LGSIZ==$LGFD+FDXSIZ		; Length of block
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 9
KERUNV	MAC	 7-May-74 05:38		LOKWLD routine calling sequence

   315						SUBTTL	LOKWLD routine calling sequence
   316
   317					; The following is the argument block that is used to call the TOPS-10 wild
   318					; card processing routine.  The FILOP block that is passed is required to have
   319					; the LEB address store in it and the PTH block stored in the LEB.
   320
   321					;; !=========================================================================!
   322					;; !                            .FD block addrss                             !
   323					;; !-------------------------------------------------------------------------!
   324					;; !       Length of FILOP. block       !      Address of FILOP. block       !
   325					;; !-------------------------------------------------------------------------!
   326					;; !                                  Flags                             !
   327					;; !=========================================================================!
   328
   329					; Argument block offsets
   330
   331					TOPS10<
   332			000000		$LKFDB==0				; Offset to the .FD block
   333			000001		$LKFLP==1				; Filop. block information
   334		777777	000000		 LK$FLN==LHMASK				; Length  of the FILOP. block
   335			777777		 LK$FLP==RHMASK				; Address of the FILOP. block
   336			000002		$LKFLG==2				; Flags
   337		400000	000000		 LK$FRS==1B0				; First time being called
   338		200000	000000		 LK$SFD==1B1				; Return SFDs to the caller, otherwise
   339										;  they are suppressed
   340			000003		$LKLEN==3				; Length of the block
   341					>; End of TOPS10 conditional
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 10
KERUNV	MAC	 7-May-74 05:38		Definitions -- BLISS-36 interface symbols

   342						SUBTTL	Definitions -- BLISS-36 interface symbols
   343
   344					; The following symbols are required to interface with BLISS-36 KERMSG.
   345
   346			000001			BLSTRU==	1		; Bliss value of true
   347			000000			BLSFAL==	0		; Bliss value of false
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 11
KERUNV	MAC	 7-May-74 05:38		Definitions -- Symbols -- File types (byte size)

   348						SUBTTL	Definitions -- Symbols -- File types (byte size)
   349
   350					; The following are the allowed bytes sizes or types
   351
   352					DEFINE $FLTYP<
   353						FT	S7,<7-bit>
   354						FT	S8,<8-bit>
   355						FT	AUT,<Auto>
   356					>; End of $FLTYP macro definition
   357
   358					DEFINE FT(NAM,TEXT)<
   359						$FB'NAM==..
   360						..==..+1
   361					>; End of FT macro definition
   362
   363			000000			$FBSMIN==0			; Min value
   364			000000			..==0				; Initialize the value
   365						$FLTYP				; Expand the values
   366			000002			$FBSMAX==2			; Max value
   367
   368			000000		ND	D$FTP,	$FBAUT			; Use auto as default
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 12
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- ADJSP - Adjust stack pointer

   369						SUBTTL	Definitions -- Macro -- ADJSP - Adjust stack pointer
   370
   371					; This macro is only defined for running on KI or KA processors.
   372					;It will generate the correct code from fixing a stack pointer.
   373
   374					IFE FTKLKS,<
   375						DEFINE	ADJSP(AC,VALUE)
   376					<IFGE VALUE,ADD AC,[XWD VALUE,VALUE]
   377					 IFL  VALUE,SUB AC,[XWD -VALUE,-VALUE]
   378					> ; End of DEFINE ADJSP
   379					> ; End of IFE FTKLKS
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 13
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- BLSRTN - Define a BLISS called routine

   380						SUBTTL	Definitions -- Macro -- BLSRTN - Define a BLISS called routine
   381
   382					; BLSRTN - This macro will define a routine that is called by BLISS-36.  It
   383					;	will define the offsets to the arguments on the stack.
   384					;
   385					; Usage:
   386					;
   387					;	BLSRTN	(Routine,<Arguments>)
   388					;
   389
   390					DEFINE	BLSRTN(ROUTINE,ARGUMENTS)<
   391					ROUTINE::
   392						PUSH	P,.FP		;; Save the frame pointer
   393						PUSH	P,[[POP	P,.FP		;; Restore 16
   394							POPJ	P,]]		;; Return to the caller
   395						XMOVEI	.FP,-2(P)	;; Point to the arguments
   396					IFNB <ARGUMENTS><
   397						.XCREF			;; Turn off cross reference
   398						..==1			;; First argument is -1 on the stack
   399						IRP <ARGUMENTS><
   400							.BLSRT(ARGUMENTS,\..) ;; Define the argument
   401							..==..+1	;; Count back
   402						>;; End of IRP <ARGUMENTS>
   403						.CREF			;; Turn CREF information back on
   404					>;; End of IFNB <ARGUMENTS>
   405					>; End of BLSRTN macro definition
   406
   407					DEFINE	.BLSRT(ITEM,OFFSET)<DEFINE ITEM<-^O'OFFSET'(.FP)>>
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 14
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- BLSRET - Return a value to BLISS

   408						SUBTTL	Definitions -- Macro -- BLSRET - Return a value to BLISS
   409
   410					; BLSRET - This macro will return a value to the BLISS-36 routine.  It will
   411					;	store the value to return in register 1.
   412
   413					DEFINE	BLSRET(ARGUMENT),<
   414						JRST	[MOVX	S1,ARGUMENT		;; Get the value to return
   415							$RET]				;; Return to the caller
   416					>; End of BLSRET macro definition
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 15
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- BLSCAL - Call a BLISS-36 routine

   417						SUBTTL	Definitions -- Macro -- BLSCAL - Call a BLISS-36 routine
   418
   419					;+
   420					;.hl1 BLSCAL
   421					;This routine is used to call a BLISS-36 routine.  It will cause the arguments
   422					;that are given to be pushed on the stack and then the routine to be called.
   423					;When the routine returns it will remove the items from the stack.
   424					;.literal
   425					;
   426					; Usage:
   427					;	BLSCAL	(PARITY,S1)
   428					;
   429					;.END LITERAL
   430					;-
   431
   432					DEFINE	BLSCAL(ROUTINE,ARGS)<
   433						.XCREF				;; Turn off CREF Processing
   434						.CNT.==0			;; Initialize the count
   435						.XCREF	.CNT.			;; Don't cref this either
   436						.CREF				;; Turn the CREF stuff back on
   437					IFNB <ARGS><
   438					    IRP <ARGS><
   439						PUSH	P,ARGS			;; Put an item on the stack
   440						.CNT.==.CNT.+1			;; Increment the count
   441					    >;; End of IRP
   442					>;; IFNB <ARGS>
   443						PUSHJ	P,ROUTINE		;; Call the BLISS routine
   444					IFN .CNT.,<
   445						ADJSP	P,-.CNT.		;; Remove the items from the stack
   446					>;; End of IFN .CNT.
   447					>; End of BLSCAL macro definition
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 16
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- KERRORS - Things passed to BLISS

   448						SUBTTL	Definitions -- Macro -- KERRORS - Things passed to BLISS
   449
   450					;+
   451					;.HL1 KERRORS
   452					;The following are the items that are passed back to the BLISS-36 routines.
   453					;-
   454
   455					DEFINE	KERRORS<
   456					KER NORMAL,013,<Normal return>
   457					KER INTERNALERR,022,<Internal error>
   458					KER LINTOOLNG,102,<Command line too long>
   459					KER EOF,113,<End of file reached>
   460					KER RMS32,122,<!AS for !AS>
   461					KER NOMORFILES,133,<No more files>
   462					KER ILLFILTYP,142,<Illegal file type>
   463					KER REC%TOO%BIG,152,<Record to big for KERMIT's internal buffers>
   464					KER ERRMSG,162,<Received an E (error) packet>
   465					KER CHKSUMERR,172,<Checksum error>
   466					KER SNDERR,202,<Send failure>
   467					KER RETRIES,212,<Too many retries>
   468					KER EXIT,223,<Server requested exit>
   469					KER UNIMPLGEN,232,<Unimplemented generic command>
   470					KER UNISRV,242,<Unimplemented server command>
   471					KER PROTOERR,252,<Protocol error>
   472					KER ZEROLENMSG,262,<Zero length message>
   473					KER LINTERM,272,<Line specified is not a terminal>
   474					KER TIMEOUT,300,<Timed out waiting to receive/send packet>
   475					KER ABORTED,312,<Transfer aborted by user interrupt>
   476					KER RECERR,322,<Receive error - !AS>
   477					>; End of KERRORS macro definition
   478
   479					DEFINE	KER(TYPE,VALUE,TEXT)<TYPE==VALUE> ;[CSM] Make suppressed to DDT
   480						KERRORS
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 17
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- $KERR - Issue error messages

   481						SUBTTL	Definitions -- Macro -- $KERR - Issue error messages
   482
   483					;+
   484					;.hl1 $KERR
   485					;This macro will cause an error message to be issued.
   486					;-
   487
   488					DEFINE	$KERR(Message)<
   489					TOPS10<
   490						$TEXT	(,<?Kermit-10 Message>)
   491					>; End of TOPS10 conditional
   492					TOPS20<
   493						$TEXT	(,<?Kermit-20 Message>)
   494					>; End of TOPS20 conditional
   495					>; End of $KERR macro definition
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 18
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- KERERR - Issue an error to the remote

   496						SUBTTL	Definitions -- Macro -- KERERR - Issue an error to the remote
   497
   498					;+
   499					;.hl1 KERERR
   500					;This macro is used to issue an error message to the remote KERMIT.
   501					;.LITERAL
   502					;
   503					; Usage:
   504					;	KERERR	(<Text>)
   505					;	(Return here)
   506					;
   507					;.end literal
   508					;-
   509
   510					DEFINE	KERERR(TEXT)<
   511						GLOB	<.KERERR>
   512						$CALL	.KERERR
   513						JUMP	[ITEXT(TEXT)]
   514					>; End of KERERR macro definition
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 19
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- Character masks

   515						SUBTTL	Definitions -- Macro -- Character masks
   516
   517					;+
   518					;.hl1 Character mask macros
   519					; The following set of macros will define a four word bit map, with
   520					;each bit corresponding to a single ascii character.  Only the first
   521					;32 bits of each word are used.  This is compatible with the corresponding
   522					;macro in MACSYM, the usage of character masks in TOPS-20 JSYS's, and
   523					;the usage in TECO.
   524					;
   525					;.hl2 BRINI$
   526					; This macro will initialize the masks.
   527					;.literal
   528					;
   529					; Usage:
   530					;	BRINI$(NAME)
   531					;
   532					; Where: NAME is the name to be used for building the mask. It should not
   533					;	 be more than 3 characters, as it is used to generate symbol names.
   534					;
   535					;.end literal
   536					;-
   537
   538					DEFINE BRINI$(NAME,INIT),<
   539						IFNB <INIT>,<
   540							%.0'NAME==%.0'INIT ;; Copy the initial values (if any)
   541							%.1'NAME==%.1'INIT
   542							%.2'NAME==%.2'INIT
   543							%.3'NAME==%.3'INIT
   544						> ;; End of IFNB <INIT>
   545						IFB <INIT>,<
   546							%.0'NAME==<%.1'NAME==0> ;; If no initial value, use 0
   547							%.2'NAME==<%.3'NAME==0>
   548						> ;; End of IFB <INIT>
   549					> ; End of DEFINE BRINI$
   550
   551					;; Now define the macros for adding an removing characters
   552
   553					DEFINE BRKCH$(NAME,FIRST,LAST)<
   554						$$$VAL==FIRST
   555						$$$VL1==FIRST
   556						IFNB <LAST>,<$$$VL1==LAST>
   557						.XCREF $$$VAL,$$$VL1
   558						BRK$$$(NAME,$$$VAL,$$$VL1,!)
   559						SUPPRESS $$$VAL,$$$VL1
   560					> ;; End of BRKCH$
   561
   562					DEFINE UNBRK$(NAME,FIRST,LAST)<
   563						$$$VAL==FIRST
   564						$$$VL1==FIRST
   565						IFNB <LAST>,<$$$VL1==LAST>
   566						.XCREF $$$VAL,$$$VL1
   567						BRK$$$(NAME,$$$VAL,$$$VL1,&^-)
   568						SUPPRESS $$$VAL,$$$VL1
   569					> ;; End of UNBRK$
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 19-1
KERUNV	MAC	 7-May-74 05:38		Definitions -- Macro -- Character masks

   570
   571
   572
   573					DEFINE BRK$$$(NAME,FIRST,LAST,OP)<
   574						$$$FST==FIRST		;; Get initial value
   575						$$$LST==LAST		;; Get final value
   576						.XCREF $$$FST,$$$LST
   577						REPEAT $$$LST-$$$FST+1,<
   578							$$$WRD==$$$FST/^D32	;; Determine which word gets this char
   579							$$$BIT==$$$FST-<$$$WRD*^D32> ;; And determine the bit
   580							IFE $$$WRD-4,<		;; Special 'char' for TECO?
   581								$$$WRD==3	;; Yes, put in 3rd word
   582								$$$BIT==$$$BIT+^D32 ;; After 32'nd bit
   583							> ;; End of IFE $$$WRD-4
   584							BR$$$$(NAME,\"<$$$WRD+"0">,$$$BIT,OP)
   585							$$$FST==$$$FST+1
   586						> ;; End of REPEAT
   587					> ; End of BRK$$$
   588
   589					DEFINE BR$$$$(NAME,WORD,BIT,OP)<%.'WORD'NAME==%.'WORD'NAME'OP'1B<BIT>>
   590
   591
   592					DEFINE BRGEN$(NAME)<EXP %.0'NAME,%.1'NAME,%.2'NAME,%.3'NAME>
   593
   594					DEFINE BRWRD$(NAME,INDEX),<%.'INDEX'NAME>
   595
   596
   597					; Now generate some common masks
   598
   599						BRINI$(ALL)			; All characters
   600						BRKCH$(ALL,0,177)		;  .  .  .
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 20
KERUNV	MAC	 7-May-74 05:38		End of KERUNV

   601						SUBTTL	End of KERUNV
   602
   603						END

NO ERRORS DETECTED

PROGRAM BREAK IS 000001
CPU TIME USED 01:49.383

52P CORE USED
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page S-1
KERUNV	MAC	 7-May-74 05:38		SYMBOL TABLE

ABORTE		000312	spd	TIMEOU		000300	spd	.FDDIM		000014	spd	
BLSFAL		000000	spd	TTY		000002	spd	.FDEXM		000013	spd	
BLSTRU		000001	spd	TTYHLD		000003	spd	.FDMOD		000022	spd	
CHKSUM		000172	spd	UNIMPL		000232	spd	.FDMOM		000023	spd	
D$BLKS		000200	spd	UNISRV		000242	spd	.FDNMM		000012	spd	
D$ESCA		000034	spd	ZEROLE		000262	spd	.FDPPN		000004	spd	
D$FTP		000000	spd	$$$BIT		000037	spd	.FDSFM		000015	spd	
D$MAXD		000200	spd	$$$FST		000200	spd	.FDSIZ		000024	spd	
D$MSFD		000005	spd	$$$LST		000177	spd	.POPJ		000000	ext	
D$PSIZ		000005	spd	$$$WRD		000003	spd	.RETF		000000	ext	
EOF		000113	spd	$FBAUT		000002	spd	.RETT		000000	ext	
ERRMSG		000162	spd	$FBS7		000000	spd	
EXIT		000223	spd	$FBS8		000001	spd	
FD.DFX	200000	000000	spd	$FBSMA		000002	spd	
FD.DIR	400000	000000	spd	$FBSMI		000000	spd	
FDXSIZ		000012	spd	$LGFD		000004	spd	
FIL		000001	spd	$LGFLG		000000	spd	
FOB.MZ		000002	spd	$LGFOB		000002	spd	
FTJSYS		000000	sin	$LGIFN		000001	spd	
FTKLKS	777777	777777	spd	$LGSIZ		000016	spd	
FTUUOS	777777	777777	sin	$LKFDB		000000	spd	
GLXVRS	000100	001136	spd	$LKFLG		000002	spd	
ILLFIL		000142	spd	$LKFLP		000001	spd	
INTERN		000022	spd	$LKLEN		000003	spd	
JUMPF	322000	000000	spd	$MBLEN		000001	spd	
JUMPT	326000	000000	spd	$MBNAM		000002	spd	
KEREDT		000124	spd	$MBOFS		000001	spd	
KERMIN		000000	spd	$MBRTN		000000	spd	
KERVER		000003	spd	$RET	263740	000000	spd	
KERWHO		000000	spd	$RETF	324740	000000*	spd	
LG$APP		200000	spd	$RETIF	322000	000000*	spd	
LG$OPN		100000	spd	$RETIT	326000	000000*	spd	
LG$SET		400000	spd	$RETT	324740	000000*	spd	
LHMASK	777777	000000	spd	$TTBAD		000006	spd	
LINTER		000272	spd	$TTBSZ		000007	spd	
LINTOO		000102	spd	$TTCHN		000003	spd	
LK$FLN	777777	000000	spd	$TTDEV		000002	spd	
LK$FLP		777777	spd	$TTIBH		000010	spd	
LK$FRS	400000	000000	spd	$TTIOS		000005	spd	
LK$SFD	200000	000000	spd	$TTLIN		000001	spd	
LSTIN.		000000	spd	$TTNOD		000000	spd	
MB$LEN		777777	spd	$TTOBH		000013	spd	
MB$OFS	777777	000000	spd	$TTPAG		000016	spd	
NOMORF		000133	spd	$TTSIZ		000017	spd	
NORMAL		000013	spd	$TTUDX		000004	spd	
P		000017	spd	%%.GLX		000010	spd	
PDLLEN		000400	spd	%%.MOD	534562	655666	spd	
PJRST	324740	000000		%%UUOS	001400	000457	spd	
PROTOE		000252	spd	%.0ALL	777777	777760	spd	
REC%TO		000152	spd	%.1ALL	777777	777760	spd	
RECERR		000322	spd	%.2ALL	777777	777760	spd	
RETRIE		000212	spd	%.3ALL	777777	777760	spd	
RHMASK		777777	spd	..		000003	spd	
RMS32		000122	spd	.CHCBS		000034	spd	
SNDERR		000202	spd	.FDD2M		000010	spd	

KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 1
KERUNV	MAC	 7-May-74 05:38		Ro
Symbol cross reference

ABORTE	   480#
BLSFAL	   347#
BLSTRU	   346#
CHKSUM	   480#
D$BLKS	   184	   184#
D$ESCA	    25#	   188	   188#
D$FTP	    26#	   368	   368#
D$MAXD	   189	   189#
D$MSFD	   183	   183#
D$PSIZ	   186	   186#
EOF	   480#
ERRMSG	   480#
EXIT	   480#
FD.DFX	   301#
FD.DIR	   300#
FDXSIZ	   286	   314
FIL	   199#
FOB.MZ	   313
FTKLKS	     1	   179	   179#	   374
FTUUOS	   182	   198	   240	   285	   331
ILLFIL	   480#
INTERN	   480#
KEREDT	    15#
KERMIN	    14#
KERVER	    13#
KERWHO	    16#
LG$APP	   309#
LG$OPN	   310#
LG$SET	   308#
LHMASK	   274	   334
LINTER	   480#
LINTOO	   480#
LK$FLN	   334#
LK$FLP	   335#
LK$FRS	   337#
LK$SFD	   338#
LSTIN.	    21
MB$LEN	   276#
MB$OFS	   274#
NOMORF	   480#
NORMAL	   480#
P	    22
PDLLEN	   181	   181#
PROTOE	   480#
REC%TO	   480#
RECERR	   480#
RETRIE	   480#
RHMASK	   276	   335
RMS32	   480#
SNDERR	   480#
TIMEOU	   480#
TTY	   200#
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 1
KERUNV	MAC	 7-May-74 05:38		Ro
Symbol cross reference

TTYHLD	   201#
UNIMPL	   480#
UNISRV	   480#
ZEROLE	   480#
$$$BIT	   600#	   600
$$$WRD	   600#	   600
$FBAUT	   365#
$FBS7	    26	   365#
$FBS8	   365#
$FBSMA	   366#
$FBSMI	   363#
$LGFD	   313#	   314
$LGFLG	   307#	   311
$LGFOB	   312#	   313
$LGIFN	   311#	   312
$LGSIZ	   314#
$LKFDB	   332#
$LKFLG	   336#
$LKFLP	   333#
$LKLEN	   340#
$MBLEN	   275#
$MBNAM	   277#
$MBOFS	   273#
$MBRTN	   272#
$RETF	    22
$RETIF	    22
$RETIT	    22
$RETT	    22
$TTBAD	   247#
$TTBSZ	   248#
$TTCHN	   244#
$TTDEV	   243#
$TTIBH	   249#
$TTIOS	   246#
$TTLIN	   242#
$TTNOD	   241#
$TTOBH	   250#
$TTPAG	   251#
$TTSIZ	   252#
$TTUDX	   245#
%.0ALL	   599#	   600	   600#
%.1ALL	   599#	   600	   600#
%.2ALL	   599#	   600	   600#
%.3ALL	   599#	   600	   600#
..	   364#	   365	   365#
.CHCBS	    25
.FDD2M	   296#
.FDDIM	   288#	   289	   296
.FDEXM	   287#	   288
.FDMOD	   290#	   291
.FDMOM	   291#	   292
.FDNMM	   286#	   287
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 1
KERUNV	MAC	 7-May-74 05:38		Ro
Symbol cross reference

.FDPPN	   296
.FDSFM	   289#	   290
.FDSIZ	   292#
.POPJ	    22
.RETF	    22
.RETT	    22
KERUNV - Universal for KERMIT-10	MACRO %53B(1155)-2 16:26  3-Oct-85 Page 1
KERUNV	MAC	 7-May-74 05:38		Ro
Macro/Opdef cross reference

BLSCAL	   432#
BLSRET	   413#
BLSRTN	   390#
BR$$$$	   589#	   600
BRGEN$	   592#
BRINI$	   538#	   599
BRK$$$	   573#	   600
BRKCH$	   553#	   600
BRWRD$	   594#
FT	   358#	   365
GLOB	    22
JUMPF	    22
JUMPT	    22
KER	   479#	   480
KERERR	   510#
KERROR	   455#	   480
LSTOF.	    21
ND	   179	   181	   183	   184	   186	   188	   189	   368
PJRST	    22
PROLOG	    20
TOPS10	   182	   198	   240	   285	   331
UNBRK$	   562#
$FLTYP	   352#	   365
$KERR	   488#
$RET	    22#	    22
$RETF	    22#
$RETIF	    22#
$RETIT	    22#
$RETT	    22#
.BLSRT	   407# yQA