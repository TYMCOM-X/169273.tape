


                   FAA Talk Facility Specifications
                   ================================


     FAA has a mandatory requirement to provide a terminal-to-terminal
     communications   facility   (hereafter  referred  to  as  a  TALK
     facility).  FAA has left the design details of this  facility  up
     to  us.   After several brainstorming sessions we have decided to
     pursue a design that includes the following functionality.

     * Users may log into one or more hosts  while  connected  to  the
     TALK facility.

     * Users can obtain a list of other users who are  logged-in,  and
     initiate TALK connections to one or more other users.

     * Users may deny TALK access from other users if desired.

     * Users may be restricted from obtaining information about  other
     users, or talking to them with a closed user group scheme.

     * Users can locate other users in their user group even  if  they
     are   logged  into  another  TALK  facility  (ie.   another  slot
     elsewhere in the network).

     * In addition to the TALK feature, users should be able to form a
     transparent  link  with  other  users for the purpose of PC-to-PC
     file transfers.

     * Various levels of status and various tools should  provide  for
     easy administration and control of the TALK facility.

     * The TALK  facility  should  support  a  large  user  population
     (10,000 or more).

     * The TALK facility should be designed so that it is as  easy  to
     use  as  possible, keeping the requirement for user training to a
     minimum.

     We  have  an  example  design  specification  that  might  be  an
     evolution  from either the MUX or the Menu Server slot which will
     be outlined here.  It is not the  intention  here  to  suggest  a
     specific  way  of  implementing  the  TALK  facility.   It is the
     purpose of this example to help the reader understand what  kinds
     of functionality we feel are required.

     First, the user connects to the slot providing the TALK function.
     The  TALK slot then looks up the users 'alias' and other relevant
     information based on the login username, or  an  optional  second
     login.  If the user is valid he may at this point either log into
     a network host system or cause the TALK  server  to  provide  him
     with  a prompt.  At the prompt he can (depending on authorization
     level) issue on of several commands.

                                                                Page 2


     * TALK <alias> <alias> ... 
     * TALK ALL

     The TALK command allows the user to send data to  other  user(s).
     It   sets   up   a  one-way  communications  path  to  the  other
     terminal(s).  The users specified by 'alias' (the  alias  concept
     described  later)  will receive a message like:  'Connection from
     [originating  alias]'.   The  originator  will  get   a   message
     indicating  that the connection is successful.  In some cases the
     originator may be denied access to other users if  the  other  is
     already  logged into a network host, or has disallowed others the
     right to talk to him.  These constraints may be circumvented with
     the appropriate status.  To set up a two-way communications path,
     the 'called' user can issue a TALK  command  to  the  originator.
     Some  facility  should allow conferencing by telling the 'called'
     party about all other parties that where 'called'.  There  should
     also  be  a way to 'hang up' on the 'caller' (unless the 'caller'
     has some override status).  At this point, the 'caller' should be
     notified  that  his TALK circuit has been disconnected.  The TALK
     function should echo, and provide  automatic  folding  of  lines.
     Also data should be labeled as to the originator so that there is
     no confusion as to who is talking in a conference situation.

     * CONNECT <alias> <alias> ...
     * CONNECT ALL

     The connect command is like the TALK command except  that  it  is
     transparent  to  data.   The  purpose  is  to allow PCs and other
     devices to use file transfer protocols etc.

     * GAG

     Disallow all unsolicited connections except for those  originated
     by  users  with  GAG override status.  Notify any 'calling' party
     that the 'called' user is unavailable.

     * ASK

     Query the 'called' party before a talk connection is  made.   The
     'called'   party  may  disallow  a  connection  with  a  negative
     response.  The 'calling' party is then  notified  that  his  TALK
     request  has  been  denied.   ASK does not inhibit users with GAG
     override status from initiating a TALK connection.

     * WHO

     List all logged-in users within the users closed user  group  and
     their status (ie.  active or waiting ...  active means logged-in,
     or already talking to another user).

     * HOLD <alias> <alias>

     Privileged command to put a users host or talk circuit on hold so
     that the active state may be overridden by a privileged user.
                                                                Page 3


     * HANG <alias> <alias>
     * HANG ALL

     Privileged command to hang up a user.

     * ESCAPE <new escape string>

     Multiple character escape sequences should  be  allowed  so  that
     they  won't  interfere with transparent data transmissions.  This
     command allows the user  to  change  his  escape  sequence.   The
     escape  sequence  allows  the  user  to  access  the  prompt from
     anywhere in the session.

     * DIRECTORY <optional alias> /optional switches

     Like the who command, but allows the user to list  the  directory
     of  all  TALK  slots.   This  directory would be stored in a TALK
     directory slot (probably on disk).  When a  user  logs  into  the
     TALK  slot his attributes are read from the directory system (his
     status level, and user group information etc.).   The  amount  of
     information  printed by the DIRECTORY command may be dependant on
     the status of the party making the query and  the  switches  that
     are set.

     * WHERE <alias>

     Finds the alias specified (if he is in the same user  group)  and
     prints his home system and if he is logged-in or not.

     * CHANGE HOME

     Each user should have a 'home' TALK system.  This is  because  it
     will  not  be  possible  to accommodate thousands of users in one
     slot.  The theory here is that all users be allowed to access all
     TALK slots, but in order to contact a user, you will have to know
     where his home system is, and log into it.

     One problem may arise here if you want to conference people  from
     diverse systems.  Also, if someone is traveling, they may want to
     be re-homed temporarily to a system closer to their new  location
     for response time reasons etc.  This is a privileged command that
     allows a users home system to be changed.

     We should expound on the concepts of an  alias,  user  groups,  a
     home system, and a directory slot.

     First, the alias allows multiple usernames to have the same group
     name  within  the  TALK  slot and helps keep the directory small.
     Also, the username may not be an appropriate name within the TALK
     slot  environment  since  people  or groups may want to use their
     personal names or initials.

     User groups may be implemented by having 'colors' of users.   For
     example  one  user may be red, another blue, and another may have
     both red and blue attributes.  Either the first or the second may
                                                                Page 4


     talk to the third, but not to each other.

     The home system concept is necessary because there will  need  to
     be more than one TALK slot to support a large user community.  In
     order to distribute the users evenly across many  slots,  and  at
     the same time give them access to all of the TALK slots, the home
     system concept was considered as a possible solution.

     The directory slot is important so that the customer can maintain
     access  controls for the TALK function.  Further, the information
     required to support thousands of users may be too large  to  keep
     in  core  in each slot.  Also, other information may be kept with
     the directory entry.  It might be nice, for example, to know  the
     last date and time when a particular user logged in, or if anyone
     has tried to reach him since he last logged in etc.

     I am certain that the reader will think of  refinements  to  this
     basic  concept,  or  find  that some features can be accomplished
     more effectively in other ways, however, the basic  functionality
     outlined above is required for FAA.
  