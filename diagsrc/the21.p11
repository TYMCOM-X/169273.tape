 
 
;SEQ932
 
 
.SBTTL *ICTL1*  ISOLATION ROUTINE FOR TEST 21 (ECTL1 VER B.)
 
.REM    %
THE TEST CHECKS MOST OF THE LOGIC ON THE CTL BOARD. MOST FAULTS ARE ON
THE CTL, BUT THE CRAM # AND COND FIELD, AS WELL AS ARX 18 AND CRAM AD CRY
MCL SHORT STACK BITS TO THIS BOARD ARE PREVIOUSLY UNTESTED BUFFERED COPIES FROM THE CRM
BOARDS. THE ISOLATION ROUTINE USES SUBTEST # AND FAILING BIT PATTERNS TO
FIND THESE CASES.
%
 
ICTL1:  $SAVE           ;SAVE DIACON PARAMETERS
        $CLRUML         ;CLEAN START
 
;DISPATCH ON SUBTEST #:
 
        CMP     #2,(R4)         ;DOING 1 OR 2?
        BGT     D1              ;YES, ONE
        BEQ     D2              ;YES,DOING TWO
        CMP     #3,(R4)         ;DOING 3?
        BEQ     D3              ;YES, THREE
        CMP     #6,(R4)         ;DOING 6?
        BEQ     D6              ;YES,SIX
        CMP     #^D8,(R4)        ;DOING 8?
        BEQ     D8              ;YES, EIGHT
        CMP     #^D14,(R4)      ;DOING 13?
        BGT     D13             ;YES, THIRTEEN
        BEQ     D14             ;YES, FOURTEEN
        JMP     CTLX            ;OTHERWISE DISPATCH TO BASIC CALL OUT
 
;DISPATCH TABLE:
 
D1:     JMP     ONE
D2:     JMP     TWO
D3:     JMP     THREE
D6:     JMP     SIX
D8:     JMP     EIGHT
D13:    JMP     TRTEN
D14:    JMP     FRTEN
 
;SEQ933
 
;HERE FOR LOW-NUMBERED SUBTESTS:
 
ONE:    $PARSE  $$P1            ;LOOK FOR 'M/ARLI' S@1
        TST     R0              ;ALL PRESENT?
        BGE     ONEA            ;NO, TEST FURTHER
        MOV     #1,R2           ;SET S@1 FLAG
MCL0:   MOV     #PARLI,R1       ;YES,SETUP STK SIGNAL NAME PTR
MCL1:   $SSET   MCL             ;SET MCL
        CLR     R2              ;CLEAR S@1 FLAG
        JMP     STKX            ;COMMON CALLOUT
 
ONEA:   $PARSE  $$P1A           ;LOOK FOR 'CRAM MQ SEL' S@1
        TST     R0              ;ALL PRESENT?
        BGE     ONEB            ;NO,TEST FURTHER
        MOV     #PMQSEL,R1      ;YES,SETUP STK SIGNAL NAME PTR
CR161:  MOV     #1,R2           ;AND SET S@1 FLAG
CR16:   $SSET   CRM16           ;AND CRM16'S SLOT
        $SETHP CRM16           ;MAKE IT MOST LIKELY
 
;SEQ934
 
STKX:   JSR     PC,CPNT ;SET CTL,PRINT BOARDS &MSG1
        $PSTUCK         ;PRINT STUCK SIGNAL MSG
HELP:   $HELP                   ;END WITH HELP MSG
ONEB:   $PARSE  $$P1B           ;LOOK FOR 'COND 03 A' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONEC            ;NO,TEST FURTHER
        MOV     #PCOND3,R1      ;YES,SETUP STK SIGNAL NAME PTR
CR12:   $SSET   CRM12           ;SET BUFFER BOARD
        $SETHP  CRM12           ;MAKE IT MOST LIKELY
        JMP     STKX            ;COMMON CALLOUT
ONEC:   $PARSE  $$P1C           ;OOK FOR 'COND 04 A' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONED            ;NO, TEST FURTHER
        MOV     #PCOND4,R1      ;YES, SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
ONED:   $PARSE  $$P1D           ;LOOK FOR 'COND 05 A' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONEE            ;NO, TEST FURTHER
        MOV     #PCOND5,R1      ;YES, SETUP STK SIGNAL NAME PTR
        JMP     CR16            ;COMMON EXIT CR16
 
ONEE:   $PARSE  $$P1E           ;LLOK FOR 'CR# 00' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONEF            ;NO, TEST FURTHER
        MOV     #PCR00C,R1      ;YES, SETUP STK SIGNAL NAME PTR
 
 
;SEQ935
 
CR8:    $SSET   CRM8            ;SET CRM8
        $SETHP  CRM8            ;MAKE IT MOST LIKELY
        JMP     STKX            ;COMMON EXIT
 
ONEF:   $PARSE  $$P1F           ;LOOK FOR 'CR# 01' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONEG            ;NO, TEST FURTHER
        MOV     #PCR01C,R1      ;YES, SETUP STK SIGNAL NAME PTR
        JMP     CR8             ;COMMON EXIT CR8
 
ONEG:   $PARSE  $$P1G           ;LOOK FOR 'CR# 02' S@1
        MOV     #1,R2           ;SET S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONEH            ;NO, TEST FURTHER
        MOV     #PCR02C,R1      ;YES,SETUP STK SINAL NAME PTR
        JMP     CR8             ;COMMON EXIT CR8
 
ONEH:   $PARSE  $$P1H           ;LOOK FOR 'CR# 05' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONEI            ;NO, TEST FURTHER
        MOV     #PCR05C,R1      ;YES, SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
ONEI:   $PARSE  $$P1I           ;LOOK FOR 'CR# 07' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     ONEJ            ;NO, TEST FURTHER
        MOV     #PCR07C,R1      ;YES, SETUP STK SIGNAL NAME PTR
        JMP     CR16            ;COMMON EXIT CR16
 
ONEJ:   $PARSE  $$P1J           ;LOOK FOR 'CR# 08' S@1
        TST     R0              ;ALL PRESENT?
        BGE     ONEJX           ;NO, CALLOUT CTL BOARD
        MOV     #PCR08C,R1      ;YES, SETUP STK SIGNAL NAME PTR
        JMP     CR161           ;COMMON EXIT CR161
 
ONEJX:  JMP     CTLX
 
;HERE IF FAULT IS PROBABLY ON CTL BOARD ITSELF:
 
CTLX:   JSR     PC,CPNT         ;GO SET CONTROL SLOTS(S), PRINT THEM
                                                                        ;WITH MSG
 
;SEQ936
 
        JMP     HELP            ;EXIT
 
 
 
;SEQ937
 
;HERE FOR SUBTEST TWO'S ISOLATION
 
TWO:    $PARSE  $$P2            ;LOOK FOR 'M/ARLI' S@0
        TST     R0              ;ALL PRESENT?
        BGE     TWOA            ;NO, TEST FURTHER
        JMP     MCL0            ;COMMON EXIT MCL0
 
TWOA:   $PARSE  $$P2A           ;LOOK FOR 'CRAM MQ SEL' S@0
        CLR     R2              ;CLEAR S@1 FLAG
        TST     R0              ;ALL PRESENT?
        BGE     TWOB            ;NO, TEST FURTHER
        MOV     #PMQSEL,R1      ;YES, SETUP STK SIGNAL NAME PTR
        JMP     CR16            ;COMMON EXIT CR16
 
TWOB:   $PARSE  $$P2B           ;LOOK FOR 'CR# 00' S@1
        TST     R0              ;ALL PRESENT?
        BGE     TWOC            ;NO, TEST FURTHER
        MOV     #1,R2           ;YES SET S@1 FLAG
        MOV     #PCR00C,R1      ;AND SETUP STK SINAL NAME PTR
        JMP     CR8             ;COMMON EXIT CR8
 
TWOC:   $PARSE  $$P2D           ;LOOK FOR 'CR# 02' S@0
        TST     R0              ;ALL PRESENT?
        BGE     TWOD            ;NO, TEST FURTHER
        CLR     R2              ;CLEAR S@1 FLAG
        MOV     #PCR02C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR8             ;COMMON EXIT CR8
 
TWOD:   $PARSE  $$P2D           ;LOOK FOR 'CR# 04' S@0
        TST     R0              ;ALL PRESENT?
        BGE     TWOE            ;NO, TEST FURTHER
        CLR     R2              ;CLEAR S@1 FLAG
        MOV     #PCR04C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
;SEQ398
 
TWOE:   $PARSE  $$P2E           ;LOOK FOR 'CR# 05' S@1
        TST     R0              ;ALL PRESENT?
        BGE     TWOF            ;NO, TEST FURTHER
        MOV     #1,R2           ;SET S@1 FLAG
        MOV     #PCR05C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
TWOF:   $PARSE  $$P2F           ;LOOK FOR 'CR# 06' S@0
        TST     R0              ;ALL PRESENT?
        BGE     TWOG            ;NO, TEST FURTHER
        CLR     R2              ;YES, AND CLEAR S@1 FLAG
        MOV     #PCR06C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR16            ;COMMON EXIT CR16
 
TWOG:   $PARSE  $$P2G           ;LOOK FOR 'CR# 08' S@0
        TST     R0              ;ALL PRESENT?
        BGE     TWOGX           ;NO, CALL OUT CTL BOARD
        CLR     R2              ;YES, CLEAR S@1 FLAG
        MOV     #PCR08C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR16            ;COMMON EXIT CR16
 
TWOGX:  JMP     CTLX
 
;HERE FOR SUBTEST 3'S ISOLATION
 
THREE:  $PARSE  $$P3            ;LOOK FOR 'CR# 01' S@1
        TST     R0              ;ALL PRESENT?
        BGE     THREEA          ;NO, TEST FURTHER
        MOV    #1,R2           ;YES, SET S@1 FLAG
        MOV     #PCR01C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR8             ;COMMON EXIT CR8
 
THREEA: $PARSE  $$P3A           ;LOOK FOR 'CR# 04' S@1
        TST     R0              ;ALL PRESENT?
        BGE     THREEB          ;NO, TEST FURTHER
        MOV    #1,R2           ;SET S@1 FLAG
        MOV     #PCR04C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
 
;SEQ939
 
THREEB: $PARSE  $$P3B           ;LOOK FOR 'CR# 06' S@1
        TST     R0              ;ALL PRESENT?
        BGE     THREEC          ;NO, TEST FURTHER
        MOV     #1,R2           ;SET S@1 FLAG
        MOV     #PCR06C,R1      ;AND SETUP STK SINAL NAME PTR
        JMP     CR16            ;COMMON EXIT CR16
 
THREEC: $PARSE  $$P3C           ;LOOK FOR 'CR# 07' S@1
        TST     R0              ;ALL PRESENT?
        BGE     THREED          ;NO, TEST FURTHER
        CLR     R2              ;CLEAR S@1 FLAG
        MOV     #PCR07C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR16            ;COMMON EXIT CR16
 
THREED: $PARSE  $$P3D           ;LOOK FOR 'CRAM AD CRY S@0
        TST     R0              ;ALL PRESENT?
        BGE     THREEX          ;NO, ALL OUT CTL BOARD
        CLR     R2              ;CLEAR S@1 FLAG
        MOV     #PADCRY,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
THREEX: JMP     CTLX
 
;HERE FOR SUBTEST 6'S ISOLATION
 
SIX:    $PARSE  $$P6            ;LOOK FOR 'ARX 18 B' S@1
        TST     R0              ;ALL PRESENT?
        BGE    SIXX            ;NO, CALL OUT CTL BOARD
        MOV    #1,R2           ;SET S@1 FLAG
        MOV     #PARX18,R1      ;AND SETUP STK SIGNAL NAME PTR
 
EDP18X: $SSET   EDP18           ;SET EDP18
        $SETHP  EDP18           ;MAKE IT MOST LIKELY
        JMP     STKX            ;COMMON EXIT
SIXX:   JMP     CTLX
 
 
;SEQ940
 
;HERE FOR SUBTEST 8'S ISOLATION
 
EIGHT:  $PARSE  $$P8            ;LOOK FOR 'CR# 03' S@0
        TST     R0              ;ALL PRESENT?
        BGE     EIGHTA          ;NO, TEST FURTHER
        CLR    R2              ;CLEAR S@1 FLAG
        MOV     #PCR03C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
EIGHTA: $PARSE  $$P8A           ;LOOK FOR 'MCL SHORT STACK' S@0
        TST     R0              ;ALL PRESENT?
        BGE     EIGHTX          ;NO, CALL OUT CTL BOARD
        CLR     R2              ;CLEAR S@1 FLAG
        MOV     #PSHSTK,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     MCL1            ;COMMON EXIT, MCL0
 
EIGHTX: JMP     CTLX
 
;HERE FOR SUBTEST 13'S ISOLATION
 
TRTEN:  $PARSE  $$P13           ;LOOK FOR 'ARX 18 B' S@0
        TST     R0              ;ALL PRESENT?
        BGE     TRTENX          ;NO, CALL OUT CTL BOARD
        CLR     R2              ;CLEAR S@1 FLAG
        MOV     #PARX18,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     EDP18X          ;COMMON EXIT EDP18
 
TRTENX: JMP     CTLX
 
;HERE FOR SUBTEST 14'S ISOLATION
 
FRTEN:  $PARSE  $$P14           ;LOOK FOR 'CR# 03' S@1
        TST     R0              ;ALL PRESENT?
        BGE     FRTENX          ;NO, CALL OU CTL BOARD
        MOV     #1,R2           ;YES, AND SET S@1 FLAG
        MOV     #PCR03C,R1      ;AND SETUP STK SIGNAL NAME PTR
        JMP     CR12            ;COMMON EXIT CR12
 
FRTENX: JMP     CTLX
 
;SEQ941
 
;HERE TO BAIL OUT WHEN STACK SEEMS AFIRE:
        $ABORT
 
;SUBROUTINE TO SET SLOTS, PRINT THEM AND PRINT THE BASIC MESSAGE:
 
CPNT:   $CCALL          ;SET CONTROL BOARD SLOTS
        $PNTUML         ;PRINT THEM
        PMSG<\TESTING DISP FIELD DECODE, AR, ARX, & MQ REG. CONTROL ON CTL BOARD.>
        RTS     PC
 
;SOME   ASCII STRING FOR IDENTIFYING STUCK SIGNALS:
 
PARLI:  .ASCIZ"MEM/ARL IND"
PSHSTK: .ASCIZ"MCL SHORT STACK"
PMQSEL: .ASCIZ/CRAM MQ SEL/
PCOND3: .ASCIZ/CRAM COND 03 A/
PCOND4: .ASCIZ/CRAM COND 04 A/
PCOND5: .ASCIZ/CRAM COND 05 A/
PCR00C: .ASCIZ/CRAM #00 C/
PCR01C: .ASCIZ/CRAM #01 C/
PCR02C: .ASCIZ/CRAM #02 C/
PCR03C: .ASCIZ/CRAM #03 C/
PCR04C: .ASCIZ/CRAM #04 C/
PCR05C: .ASCIZ/CRAM #05 C/
PCR06C: .ASCIZ/CRAM #06 C/
PCR07C: .ASCIZ/CRAM #07 C/
PCR08C: .ASCIZ/CRAM #08 C/
PADCRY: .ASCIZ/CRAM ADCRY/
PARX18: .ASCIZ/EDP ARX 18 B/
 
.EVEN
 
;SEQ942
 
;PARSE TABLES:
 
$$P1:   $FIND   41,10           ;AR12C
        $FIND   40,10           ;AR00C
        $FIND   42,10           ;ARRCLR
        $FIND   43,10           ;-SCALL
        $FIND   37,10           ;ARLS4
        $FIND   34,40           ;ARLS2
        $FIND   35,20           ;-ARRLB
        $FEND   34,20           ;-ARRLA
 
$$P1A:  $FIND   42,20           ;MQMEM
        $FIND   36,20           ;MQMS2
        $FIND   37,20           ;MQMS1
        $FEND   41,20           ;MQS1
 
$$P1B:  $FIND   36,100          ;C/AREX
        $FIND   35,20           ;-ARRLB
        $FIND   34,20           ;-ARRLA
        $FIND   35,10           ;-AR09L
 
;SEQ943
 
        $FEND   40,20           ;MQS2
 
$$P1C:  $FIND   36,100          ;C/AREX
        $FIND   36,10           ;ARXLOD
        $FIND   35,10           ;-AR09L
        $FIND   34,10           ;-AR00L
        $FEND   40,20           ;MQS2
 
;SEQ944
 
$$P1D:  $FIND   36,100          ;C/AREX
        $FIND   41,10           ;AR12C
        $FIND   40,10           ;AR00C
        $FIND   42,10           ;ARRCLR
        $FIND   43,10           ;-SCALL
        $FIND   37,10           ;ARLS4
        $FIND   34,40           ;ARLS2
        $FIND   35,20           ;-ARRLB
        $FIND   34,20           ;-ARRLA
        $FEND   40,20           ;MQS2
 
$$P1E:  $FEND   34,10           ;-AR00L
$$P1F:  $FEND   35,10           ;-AR09L
$$P1G:  $FIND   35,20           ;-ARRLB
        $FEND   34,20           ;-ARRLA
$$P1H:  $FEND   36,100          ;C/AREX
$$P1I:  $FEND   40,20           ;MQS2
$$P1J:  $FEND   41,20           ;MQS1
$$P2:   $FIND   41,10           ;AR12C
        $FIND   40,10           ;ARR00C
        $FIND   36,20           ;MQMS2
        $FEND   37,20           ;MQMS1
$$P2A:  $FIND   42,20           ;MQMEN
        $FEND   36,20           ;MQMS2
$$P2B:  $FEND   43,10           ;-SCALL
$$P2C:  $FIND   36,20           ;MQMS2
        $FEND   37,20           ;MQMS1
$$P2D:  $FIND   41,10           ;AR12C
        $FEND   40,10           ;AR00C
$$P2E:  $FEND   42,10           ;ARRCLR
$$P2F:  $FEND   37,10           ;ARLS4
 
$$P2G:  $FEND   35,40           ;ARLS1
$$P3:   $FEND   34,10           ;-AR00L
$$P3A:  $FIND   41,10           ;AR12C
        $FIND   40,10           ;AR00C
        $FIND   35,10           ;-AR09L
        $FEND   34,10           ;-AR00L
$$P3B:  $FIND   37,10           ;ARLS4
        $FIND   35,10           ;-AR09L
        $FEND   34,10           ;-AR00L
$$P3C:  $FIND   34,40           ;ARLS2
        $FIND   35,10           ;-AR09L
        $FEND   34,10           ;-AR00L
$$P3D:  $FEND   43,200          ;-INC18
$$P6:   $FIND   41,10           ;AR12C
        $FIND   40,10           ;AR00C
        $FIND   35,10           ;-AR09L
        $FEND   34,10           ;-AR00L
$$P8:   $FEND   36,10           ;ARXLOD
$$P8A:  $FEND   27,1            ;MCL SHORT STACK
$$P13:  $FIND   41,10           ;AR12C
        $FIND   40,10           ;AR00C
        $FEND   34,10           ;-AR00L
$$P14:  $FEND   36,10           ;ARXLOD
 
 
   