;THF1.P11
 
;SEQ726
 
.SBTTL *ISOLATION ROUTINE MAINLINE CODE*
 
.REM    %
ISOLATION. THIS CODE IS USED WHEN A DATA PATH TEST ERRS AND 
REPORTS ERROR SYMPTOMS VIA THE SUBROUTINE 'EDPTST'. THE FIRST SECTION
OF CODE HERE GOES TO THE ERROR REPORTERS' ERROR STACK AND FILLS IN
A BIT MAP TABLE WHICH GIVES US A MAPPING OF WHICH BOARDS AND
WHICH REGISTERS HAD A DISCREPANCY. SIX SEQUENTIAL BYTES ARE USED,
EACH BYTE REPRESENTING ONE OF THE 6 DATA PATH BOARDS.
EACH OF THE 8 BITS OF A BYTE REPRESENTS ONE OF THE 8 DATA PATH REGISTERS.
BIT1=AR; BIT2=BR; BIT3=AD; BIT4=ARX; BIT5=BRX; BIT6=ADX;
BIT7=MQ; BIT8=FM.  ANY BIT SET IN THE TABLE, MEANS THAT THE REGISTER OF
THAT 'BIT', AND THE BOARD OF THAT 'BYTE' HAD A DISCREPANCY BETWEEN
ACTUAL AND EXPECTED DATA. SECTION 2 OF THIS CODE DECIDES WHAT TO DO
WITH THE INFOMATION IN THE BIT MAP TABLE.
%
 

        .EDP=1
        ISOINI                  ;ENTER ISOLATION
 
;SEQ727
 
        PMSG<DATA PATH REGISTER MUX SELECT FAILURE OR REGISTER BITS STUCK\>
        
        PMSG<BITS DROPPED OR PICKED IN DATA PATH REGISTERS WHILE MOVING\>
 
        PMSG<PATTERN OF ALL ONES(777777 777777) THRU THE DATA PATHS\>
 
;SEQ728
 
        PMSG<SEE EBOX DIAGNOSTIC MICRO-CODE LISTING FOR MORE DETAIL\>
         
        SETTAB  REGS,ERRMAP     ;FILL IN BIT MAPABLE FROM ERROR SYMPTOMS
 
;SEQ729
 
;SEQ730
 
        JSR     PC,SPEC         ;CHECK FOR SPECIAL CASES
        CLASS1  REGLST,ERRMAP,UMLS 
 
;SEQ731
 
;SEQ732
 

        CLASS2  REGLST,ERRMAP,UMLS,EBRDS
 
;SEQ733
 
;SEQ734
 
        CLASS3  REGLST,ERRMAP,STNDRD,EBRDS
 
;SEQ735
 
        CONFUS  COPOUT
 
;THIS CODE IS USED TO DETECT SPECIAL FAULT SYMPTOMS
;PRODUCED IN TEST EDP1 & TO MAKE SPECIAL CALLOUTS BASED
;ON THE SPECIAL FAULT SYMPTOMS.
 
SPEC:   RSTINI

        CMP     (R4),#^D3       ;SUBTEST 3?
        BNE     1$              ;BR IF NO
        SSET    CRM12,STNDRD
        BR      50$             ;OUT
1$:     CMP     (R4),#^D20      ;SUBTEST 20?
        BNE     2$              ;BR IF NO
        SSET    CRM8,STNDRD     ;SET ADDITIONAL BRD IF YES
 
;SEQ736
 
        BR      50$
 
2$:     CMP     (R4),#^D4       ;SUBTEST 4?
        BNE     3$
 
;IF YES REQUIRE A GOOD DEAL MORE CHECKING
        MOV     #^D12,R0        ;CNT # BYTES IN ERRMAP
        MOV     #ERRMAP+^D12,R1 ;GET PNTR TO BOTTOM OF ERR MAP
20$:    BITB    -(R1),#ADXERR   ;ERR DATA FROM ADX??
        BEQ     21$             ;BR IF NO
        DEC     R0              ;HERE IF YES..DOWN BYTE COUNT
        BGT     20$             ;BR IF NOT DONE ALL BRDS
        BR      50$             ;OUT OTHRWISE
 
21$:    BIT     #BIT0,R0        ;R0 BETTER BE EVEN
        BNE     50$             ;ELSE GO OU
 
;BEFORE CALLING EDP BRD, MUST BE SURE ALL LESSER BRDS
;AVE NO BAD BITS
        PUSH    R0              ;SAVE REG R0
 
22$:    BITB    -(R1),#ADXERR   ;ADX DATA BEST BE 0 FROM HERE ON
        BNE     49$             ;GO OUT IF MORE ERRORS.. FIX R0 FIRST
        DEC     R0              ;DOWN THE BYTE COUNTER
        BGT     22$             ;LOOK FOR MORE ZEROES
 
;ALL OK IF GET TO HERE.. NOW MAKE SPECIAL CALLOUT
        POP     R0              ;RESTORE R0
        TST     R0              ;NO SEE IF R0 IS DOWN TO 0
        BEQ     50$             ;IF YES.. THEN NO SPECIAL CASE
        JSR     PC,@EBRDS-2(R0) ;SET CORRECT EDP BRD
        BR      50$             ;AND OUT
 
3$:     CMP     (R4),#^D28      ;CHECK FO SPECIAL CASES IN SUBTEST 28
        BITB    #MQERR,ERRMAP ; MQ MEET SPECIAL CASE??
        BEQ     50$             ;BR IF NO .. OUT
        MOV     #12,R0  ;YES MQ IN ERR
30$:    BITB    #ADXERR,ERRMAP(R0) ;CHECK ADX FOR MULTIPLE ERRORS

        BEQ     50$             ;ELSE OUT
        DEC     R0              ;DOWN COUNT
        BGE     30$             ;BACK UNTIL DONE
 
;SEQ737
 
        
;FALL THRU HERE IF MEETS SPECIAL CASE
        SSET    EDP0,STNDRD     ;SET EDP BRD
        BR      50$             ;CONTINUE
49$:    POP     R0              ;A LITTLE CLEAN-UP
50$:    RTS     PC              ;OUT
 
;SEQ738
 
UMLS:   .WORD   ARUML
        .WORD   ARXUML
        .WORD   BRUML
        .WORD   BRXUML
        .WORD   MQUML
        .WORD   ADUML
        .WORD   ADXUML
        .WORD   FMUML
 
 
ARUML:  UML<36,50>      ;CTL-CRM
 
;SEQ739
 
ARXUML: UML<36,40>      ;CTL-CRM
BRUML:                  ;SAME AS BRX
BRXUML: UML<42>         ;CRM
 
;SEQ740
 
MQUML:  UML<36>         ;CTL
ADUML:          
ADXUML: UML<52,50>      ;CRM
 
;SEQ741
 
FMUML:  UML<35,34,36>   ;CON-APR-CTL
 
;SEQ742
 
 
COPOUT:UML<36,35,32,34,47,39,41,43,49,51,53>
 
;SEQ743
 
