
.SBTTL  MA20/MB20 READ-PAUSE-WRITE ERROR ISOLATION ROUTINE
        .NLIST  CND,BEX
.REM    %
        DGKBB ISOLATION ROUTINE FOR TEST#18.
        %
$M18:   JSR     R5,MINIT                ;INIT ISOLATION ROUTINE
        DVAOT                   ;CHK FOR DATA VALID ERR
        GPW     6               ;GET TEST CONTR #
        MOVB    R0,CONTR                ;SAVE
        CMAT    UML4            ;MAT BD
        CCI                     ;MAC BD
        PMSG    <INTERNAL MEMORY READ-PAUSE-WRITE ERROR.\>
        JMP     (R5)            ;RETURN TO DIACON


;SEQ324

;-----SUBROUTINE TO TAKE THE CONTR # IN R0 AND DUMP THE UML
;       DATA FOR THE SBUS INTERFACE BOARD FOR THAT CONTROLLER
CCIN:   MOVB    CONTR,R0                ;GET CONTR #
        CMP     R0,#4           ;DMA20 CONTR?
        BNE     1$              ;BR IF NO
        SSET    3,UML4          ;ELSE SET DTR BD (M8560) IN DMA20
        BR      3$
1$:     BIT     #1,R0           ;EVEN OR ODD MA20?
        BNE     2$              ;BR IF ODD
        SSET    26.,UML4                ;SET MAC BD FOR EVEN MA20 CONTRE
        BR      3$
2$:     SSET    29.,UML4        ;SET MAC BD FOR ODD MA20 CONTR
3$:     MOVB    CNTBNT(R0),R0   ;GET & SET BACKPLANE #
        BACKPLANE
        RTS     R5
CCI:    JSR     R5,CCIN         ;SET UP FOR PRINT
        PNTUML  UML4
        RTS     R5              ;RETURN
;-----SUBROUTINE TO CHK FOR FAILURE OF SUBROUTINE DVAOT IN DGKBB.
DVAOTT: CMP     (R4),#3         ;WHAT SUBTEST DID WE DIE IN?
        BLT     1$              ;BR IF 1 OR 2...TAKE CARE OF IT HERE
        RTS     R5              ;ELSE RETURN TO CALLER
1$:     SSET    22.,UML1        ;MBC
        BACKPLANE 4             ;CPU BACKPLANE
        PNTUML  UML1
        PMSG    <MBC BOARD (M8531) NOT ABLE TO GENERATE BOTH OF THE \>
        PMSG    <"DATA VALID A/B OUT H" SIGNALS.\>
        RTS     PC              ;RETURN TO DIACON
;-----SUBROUTINE TO SET THE MAT BOARD INTO THE GIVEN UML DEPENDING
;       ON EVEN OR ODD COINTROLLER
CMAT:   MOV     (R5)+,R0        ;GET UML ADR
        BIT     #BIT0,CONTR     ;EVEN OR ODD CONTR?
        BEQ     1$              ;BR IF EVEN
        BIS     #BIT9,6(R0)     ;SET MAT BD FOR ODD CONTR (SLOT 54)
        RTS     R5
1$:     RTS     #BIT14,(R0)     ;SET EVEN MAT RD (SLOT 1)
;-----SUBROUTINE TO CHECK FOR AND EXTRACT A PARAMETER WORD FROM THE
;       ERROR STACK.  THE DATA PASSED TO THE SUBROUTINE IS THE DIS-
;       PLACEMENT OF THE 'FTPRM' OR 'FT10' ID FROM THE BEGINNING OF THE
;       ERROR STACK, THE ADR OF WHICH SHD B IN R3.
GPW:    MOV     (R5)+,R0        ;GET DISP TO FTPRM IDENTIFIER
GPW1:   ADD     R3,R0           ;CALC ADR OF IDENTIFIER
        CMP     (R0)+,#FTPRM    ;IS IT THE CORRECT IDENTIFIER
        BEQ     1$              ;YES...OK
        PMSG    <ERR STK PARAM WD EXPECTED BUT NOT FOUND\>
        FATAL
1$:     CMP     (R0)+,(R0)+     ;BYPASS FT10 GARBAGE
2$:     MOV     (R0),R0         ;RETURN PARAMETER WORD IN R0
        RTS     R5              ;DONE
        .EVEN
$$FF:   $$CLIT          ;FIRST FREE
        $$LITT=.        ;START OF LITERAL AREA
.END    STARTA
