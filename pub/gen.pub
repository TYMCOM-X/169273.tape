.TURN ON ""
.SIDES _ 1
.REQUIRE "GENRAL.PUB" SOURCE!FILE
.NEW!PAGE!ON!SECTION FALSE
.SPACES 1
.COMPACT
.CB |General PUB Macros in GENRAL.PUB|

GENRAL.PUB sets  up  some standardized  PUB conventions  for
producing  documents.   These macros are  designed for  two different
user groups.  The  first consists of casual  PUB users who desire  to
avoid having to learn much about PUB.  The price you pay for being in
this  group is that you  have to live with  the features and document
formats that are provided.  The second group is  that of PUB hackers.
By copying these macros to your own disk area, these macros provide a
starting place for the venturesome souls  who want to tailor them  to
their own needs.

The features provided  by these macros  include
formats for printing  on either one or both sides  of a page; formats
for printing  one or two columns per side; single, double, triple, or
even greater  spacing; macros  for four levels  of section  headings;
footnote generation;  and automatic generation of  table of contents.
Follow the instructions below  to properly set up  your .PUB file  to
get the desired options.
.S |Special Characters|

Alpha ("^B") and the underline command characters ("^A^X" and  "^X^A") are
turned on.
To get things underlined, use //text/.
Note  that you can't get
an underlined  slash  using  this scheme;  use  ^A^Xtext  with  slash^X^A
instead.
To get text all caitalized, use ^/TEXT/.
You can't get an underbar within all capitals however, so
exit all capitals  mode for one  character instead.   Also, a  double
quote in underline  or all capitals mode must be  doubled.  Underline
and  all  capitals modes  even  work simultaneously.    The following
characters should be input as shown:

.SKIP 1
.BEGIN VERBATIM
	to get						input
	^B						^B^B
	^A						^B^A
	//						^B//
	^/						^B^/
	$/						^B$/
	" (underline and all capitals only)		""
.END
.S |Sides of the Page to Be Printed|

Using the appropriate statement of

.SKIP 1
.BEGIN VERBATIM
	.SIDES _ 1;
	.SIDES _ 2;
.END

choose whether printing will be on one side of  a page or both sides.
For documents that will be printed on only one side of the paper, the
section name of the current section will appear in the upper  left of
each  page and  the current  page  number in  the upper  right.   For
documents  that will  be  printed on  both sides  of the  paper, even
numbered (lefthand) pages wll have the page number in the upper left
corner  and  the section  name  in the  upper  right.   Odd  numbered
(righthand) pages will have the section name in the upper
left and  the page  number in  upper right.
.S |Slurping Up the Macros File|

Following the  SIDES  statement (discussed  above), there
must be a statement of the form

.SKIP 1
.BEGIN VERBATIM
	.REQUIRE "GENRAL.PUB" SOURCE!FILE;
.END

All  macro  calls  discussed below  must  occur  after  this  REQUIRE
statement.
.S |Columns per Side to Be Printed|

By using the appropriate command of

.SKIP 1
.BEGIN VERBATIM
	.COLMNS 1;
	.COLMNS 2;
.END

printing will be  done in either one column  or two.  In  either case
the top, bottom, left,  and right margins are all one inch.  With two
columns there  is a  one-half inch  space between  the  columns.   In
addition, in  the middle of  your text you can  switch to one  or two
column printing  by using the appropriate command; however, this will
start a new page.  If there is a table of contents, it will be in the
column format specified by the last COLMNS command given.
.S |Spacing|

By using the command

.SKIP 1
.BEGIN VERBATIM
	.SPACES <positive integer>;
.END

you will  get sigle, double,  triple, etc.   spacing (i.e.,  1 gives
single  spacing, 2  double spacing,  etc.).   Spacing can  be changed
throughout a document,  but such a change  causes a paragraph  break.
Initially  single  spacing is  assumed.    If  there  is a  table  of
contents,  it will  be spaced  according to  the last  SPACES command
given.
.S |Section Headings|

Main sections and appendices can either start a new page (an odd page
if printing two sides) by using

.SKIP 1
.ONCE VERBATIM
	.NEW!PAGE!ON!SECTION TRUE;

or not start a new page by using

.SKIP 1
.ONCE VERBATIM
	.NEW!PAGE!ON!SECTION FALSE;

If the latter  mode is in  effect, then at  least five lines  of text
will follow the  section heading in the same column.  Initially a new
section will start a new page.

.GROUP
Begin each logical segment of your document  with the appropriate one
of the following macros:

.SKIP 1
.BEGIN VERBATIM
	.S |<section name>|;
	.SS |<subsection name>|;
	.SSS |<subsubsection name>|;
	.APP |<appendix name>|;
.END
.APART

None of these section names should contain a vertical bar ("|"), left
curly  bracet  ("{"),  left  arrow  ("_"),  or  right  arrow  ("^Y").
Sections will  be numbered one  up.   Subsections and  subsubsections
will  be  numbered decimally  within  the  section.   Appendices  are
labelled with capital letters, beginning with "A".  All three section
levels, as well as appendices,  will appear in the table  of contents
if there is one(see  below).  All section and appendix headings will
appear in all capitals.  At least four
lines of text will occur below a subsection  name in the same column;
at least three lines are guaranteed for subsubsections.

If you wish  to have an unnumbered  section which will not  appear in
the  table of  contents, use  the following macro  to make  its title
appear centered and in all capitals:

.SKIP 1
.ONCE VERBATIM
	.CB |<title>|;

The same conventions  as for section names  hold for this title.   CB
guarantees that  at least two lines of text  occur below the title in
the same column.

None of the line  guarantees specified in this section  are in effect
within  a column containing  footnotes.  If  you end up  with a window
section heading, put a GROUP  command just before the heading and  an
APART command just after the first paragraph following the heading.
.S |Text Justification|

Another handy macro is

.SKIP 1
.ONCE VERBATIM
	.JUSTIFY;

which begins stanard text justification.   Just before entering your
text file JUSTIFY is  called, so you will only need to call it if you
ever stop justifying for some reason.

Note that  this macro RETAINs  all blanks between  words in  order to
allow for  two blanks after sentences ending  with a period, question
mark, exclamation  mark,  colon, right  parenthesis,  right  bracket,
right single  quote, double quote,  etc.  In  order for this  to work
correctly, you  must always leave the exact number of blanks that you
want to appear in the justified text.
.S |Footnotes|

A footnote that will  appear at the bottom of the  current column can
be generated  at the point of  reference.  This is done  by a call of
the form

.SKIP 1
.ONCE VERBATIM
	$/<text of footnote>/

Because  of this  format, you  can't  use a  "/"  character inside  a
footnote.

Footnotes are numbered  one up within  each main section.   The above
call is replaced  by the next footnote number generated, displayed as
a numeral in brackets.   The footnotes
for a column  will appear sequentially at the bottom  of that column,
separated  from the  main text  by a  solid line  of underbars.   The
footnote entry consists of  the footnote number followed by  the text
of the footnote.   The text is displayed  single spaced
and justified.

Caution: The handling  of footnotes by PUB  is known to be  buggy, so
be prepared to fiddle a bit to get them to work.
.S |Automatic Generation of Table of Contents|

If you wish to have a table of contents, put the PUB statement

.SKIP 1
.ONCE VERBATIM
	.INSERT CONTENTS;

before the REQUIRE statement discussed above and call the macro

.SKIP 1
.ONCE VERBATIM
	.COLLECT CONTENTS;

at the very  end of your document.   Note that the column  format and
spacing of  the table of contents are determined  by the last call to
COLMNS  and   SPACES,  respectively.     Currently   calling   COLMNS
immediately before COLLECT  CONTENTS doesn't work quite  right, so be
sure to have some text in between.
.S |Example|

Here is an example of using these commands.  The text of the paper in
this case  is located in TEST.TXT.  A  two sided, two column document
will be produced.   Using the optional commands in  curly
brackets will override  the default conditions, producing  a table of
contents,  a double spaced document, and no  new page at the start of
main sections and appendices.

.SKIP 1
.BEGIN VERBATIM
	.SIDES _ 2;
       {.INSERT CONTENTS;}
	.REQUIRE "GENRAL.PUB" SOURCE!FILE;
	.COLMNS 2;
       {.SPACES 2;}
       {.NEW!PAGE!ON!SECTION FALSE;}
	.REQUIRE "TEST.TXT" SOURCE!FILE;
       {.COLLECT CONTENTS;}
.END

If the file containing the above statements  is called TEST.PUB, then
you should call PUB with the monitor command

.SKIP 1
.ONCE VERBATIM
	.PUB TEST
    