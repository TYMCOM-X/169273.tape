Entry

	GetLic, GetOpr, LicErr, LError
;
begin "XEXLIC"

require "(SAILIB)SAIL.DEF" source!file;
require "(CARL)VMFILE.REQ"   source!file;

define SystemDevice = {"SYS"};		! {"SYS"};

define
	ErrNone   =   0			! bad name or password ;
,	ErrInit   =   ErrNone + 1	! cannot init SYS ;
,	ErrFNF    =   ErrInit + 1	! oper file not found ;
,	ErrFML    =   ErrFNF  + 1	! oper file missing license ;
;


internal own integer LError;		! error code ;

string OPER!NAME;


internal simple string procedure LicErr( integer Code );
begin "license error"

    return( case ( code )
     of (
	[ErrNone] "bad name or password",
	[ErrInit] "cannot init SYS",
	[ErrFNF]  "oper file not found",
	[ErrFML]  "oper file missing license"
      )
    );

end "license error";


simple string procedure get!line;
begin "G!L"
    integer I;
    string S;
    S _ null;
    do begin
	I _ auxclv(-1,0,'46);		! input a character;
	if I geq '173 then done;	! these are line breaks (ugh);
	if I geq '140 then I _ I - '40;	! convert lower to upper case;
	if I geq '40  then S _ S & I;	! add to string if legal;
    end until I < '40;
    if I = #cr then auxclv(-1,0,'46);	! If CR then read the LF;
    auxclv(-1,0,'11);			! Try and get node to echo;
    return(S);
end "G!L";


internal procedure GetOpr( reference integer L; reference string Name );
begin
    Simple Integer Procedure Radix.45(Integer Ch);
    Begin
	If Ch geq "A" and Ch leq "Z" then Return( Ch+1  - "A" );
	If Ch geq "a" and Ch leq "z" then Return( Ch+1  - "a" );
	If Ch geq "0" and Ch leq "9" then Return( Ch+31 - "0" );
	Return(
	    Case Ch of (
		[" "]  0,
		["-"] 28,
		["."] 29,
		["/"] 30,
		[":"] 41,
		["*"]["@"] 42,
		["'"] 43,
		else 44
	    )
	);
    end;
    
  integer C;
  string  OperName;
  own safe integer array NM[0:1];

  while ( ( length( Name ) = 0 ) or ( Name = "?" ) )
   do begin
    if ( Name = "?" )
      then print( "Enter your name as it appears in the OPER"&
		  " license file."& crlf);
    print("Oper name: ");		! prompt first time or on "?" ;
    Name _ get!line;			! read oper name ;
    if ( length( Name ) = 0 )		! if no name specified ;
     then done;				! user may be stuck, so leave ;
   end;

  OperName _ (Name & "            ")[1 for 12];
  arrclr( NM );
  while ( length( OperName ) ) do begin	! make name reasonable ;
    C _ Radix.45( Lop( OperName ) );
    start!code
      MOVE 3,NM[0];
      MOVE 1,NM[1];
      IMULI 3,45;
      MULI 1,45;
      ADD 1,3;
      ADD 2,C;
      MOVEM 1,NM[0];
      MOVEM 2,NM[1];
      end;
    end;
  arrblt( L, NM[0], 2 );		! return result in array ;
end;


integer procedure CVHASH(string PW);
begin
  integer C,FIVES,T1,T2,T3,T4;
  integer array X[0:4];
  X[0] _ X[2] _ X[4] _ '555555555555;
  X[1] _ X[3] _ '361275431652;
  FIVES _ '343277244615;
  T3 _ 0;
  while length(PW) do begin "PSWLP"
    C _ lop(PW);
    X[0] _ X[0] + C;
    X[3] _ X[3] + C;
    T4 _ '40;
    do begin "RAND"
      T1 _ X[T3];
      start!code
	MOVE 1,T1;
	MUL 1,FIVES;
	MOVEM 1,T1;
	MOVEM 2,T2;
	end;
      T3 _ T3 + 1;
      X[T3] _ X[T3] + T2;
      if T3 = 4 then begin
	T3 _ X[4] lsh -'42;
	X[0] _ X[0] + X[4];
	end;
      end "RAND" until (T4_T4-1) leq 0;
    end "PSWLP";
  return(X[0]);
  end;


internal integer procedure GetLic( reference integer OperName, Hash );
begin "get license"
    safe integer array NAME[0:1];
    boolean NotSupplied;
    integer LIC,PTR,OP,BUF,PAG;
    string TMP;

    define bomb (X,Y) = {begin
	if ( NotSupplied )		! no name given - interactive ;
	 then print( Y, crlf )		! give message and continue ;
	 else LError_ X;		! else set flag variable ;
	if ( OP > 0 )			! channel is open? ;
	 then VMFree( OP );		!  yes, so close it ;
	Oper!Name _ null;		! clear opername ;
	return(0) end};			! and goodbye ;
    define
	bfnm1 = 0,
	bfnm2 = 1,
	bfpsw = 2,
	bflic = 3;

    LError_ ErrNone;			! no license for this name ;

    if ( NotSupplied_ ( Hash = 0 ) )	! was a password provided ;
     then begin "get password"
	auxclr(-1,memory['200],'64);	! Turn off echo;
	while ( true )
	 do begin "prompt and read"
	    print("Password: ");	! ask for password ;
	    TMP _ get!line;		! get line (no echo ) ;
	    if TMP = "?"		! if "?" give help ;
	     then print("?"& crlf & "Enter your password associated " &
				"with the specified OPER name."& crlf )
	     else done;			!  else go on ;
	 end "prompt and read";

	Hash_ CvHash( TMP );		! return hashed password ;
	print(crlf);
	auxclr(-1,memory[0],'64);	! Turn on echo ;
	auxclv(-1,0,'11);		! LevDef ;

     end "get password";

    OP_ VMFile( "("& SystemDevice &")DRWSPR.EPO", VM$Read );
    if ( OP < 0 )
     then bomb( ErrInit, "?Can't init password file");

    if not( VMGetC( OP,VM$Lic ) land '400000 )
     then bomb( ErrFML, "?OPER password file has no license");

    BUF_ VMGetC( OP, VM$Base ) lsh 9;	! remember base address ;
    PAG_ LIC_ 0;			! start clear at the beginning ;
    arrblt( Name[0], OperName, 2 );	! copy oper name in radix ;

    while ( VMPMap( OP, PAG_ PAG+1 ) )	! while file has pages ;
     do begin "SEARCH"			!  scan through them ;

	for PTR_ BUF step 7 until BUF+'770
	 do begin "TRY"
	    if memory[ PTR+bfnm1 ] neq Name[0]
	     then continue "TRY";
	    if memory[ PTR+bfnm2 ] neq Name[1]
	     then continue "TRY";
	    if ( ( Hash = -1 ) or ( memory[ PTR+bfpsw ] = Hash ) )
	     then begin "get it"
		LIC_ memory[ PTR+bflic ];
		done "SEARCH";
	     end "get it";
	 end "TRY";

     end "SEARCH";

    VMFree(OP);
    if ( LIC = 0 )
     then begin
	if ( NotSupplied )
	 then print("?Bad name or password",crlf)
	 else LError_ ErrNone;
     end;

    return(LIC);

end "get license";


end "XEXLIC";
