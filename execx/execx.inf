
Define EXECX!!VER   = '1;
Define EXECX!!EDIT  = '226;

require "  EXECX %" & cvos( EXECX!!VER )
	ifcr EXECX!!EDIT
	 thenc & "(" & cvos( EXECX!!EDIT ) & ")"
	endc
    & " Revision History  " message;

comment
!
!			*** EXECX Revision History ***
!
!  %1 (226)	22-Sep-87 /Carl
!		Rename module VMFILE to XEXFIL in parent directory to
!		avoid major modifications to EXECX during VMFILE changes.
!
!  %1 (225)	04-May-87 /Carl
!		Remove code which prints lines skipped on :GOTO / :BACKTO
!		just leaving the note saying how many lines are skipped.
!
!  %1 (224)	04-May-87 /Carl
!		Modified module JQUE to require EnaTRP and DisTRP routines
!		to enable and disable ^C trapping.  In EXECX and XEXEC these
!		will be dummy routines since we do not want to turn the ^C
!		trapping off at any time.
!
!  %1 (223)	09-Apr-87 /Carl
!		Modified all sources and command files to use direcrtory
!		EXECX for source and library files for XEXEC-EXECX modules.
!
!  %1 (222)	30-Jan-87 /Carl
!		Implement :TRULIMIT n, which works exactly the same as the
!		:$TRULIMIT=n construct.
!
!  %1 (221)	30-Jan-87 /Carl
!		Fix :COM file to default username to current GFD directory
!		for the running user instead of OPER (since EXECX was logged
!		in as OPER).  Change :TIME to :TIMELIMIT to be more precise.
!
;


comment
!
!  %1 (220)	31-Dec-86 /Carl
!		Try only LXRBRK without LXRCHR with the twist that whenever
!		LXRORG is seen, we assume LXRBRK was seen.  Maybe even set
!		the flag to insure any characters available are read.
!
!  %1 (217)	30-Dec-86 /Carl
!		Allow zappers on jobs with LogF so programs can logout
!		if the user knows it "will" happen.  Fix ::label code.
!
!  %1 (216)	30-Dec-86 /Carl
!		Use format type to look for primary characters.
!		Use ":" for TYMCOMX, "." for TOPS10, "@" for TOPS20.
!
!  %1 (215)	30-Dec-86 /Carl
!		Modify cleanup code to dump out the rest of the command
!		file after an abort or stop.
!
!  %1 (214)	30-Dec-86 /Carl
!		Use GOTO code for startup and modify it for skipping <n>
!		lines if given a numeric argument.
!
!  %1 (213)	30-Dec-86 /Carl
!		Make starting at label actually start on the line with the
!		label instead of after it so it can execute any command on
!		that line.
!
!  %1 (212)	29-Dec-86 /Carl
!		Fixed problem waiting for LXRBRK in interrupt code to look
!		for both LXRBRK and LXRCHR when an interrupt is received.
!		This seems to put the echo/output in the correct order.
!
!  %1 (211)	29-Dec-86 /Carl
!		Remove SYNC from ESCAPE code.  It may have caused false
!		orange balls preceeding command line echo.  SYNC code now
!		clears ORG! and noone else is supposed to do this anymore.
!		A SYNC was added at the end of command processing.
!
;


comment
!
!  %1 (210)	29-Dec-86 /Carl
!		Add additional checks for delayed command logic.  It seemed
!		to be coded right, but it didn't appear to work correctly.
!
!  %1 (207)	23-Dec-86 /Carl
!		Change BACKTO to call the right procedure instead of GOTO.
!		Put second-orange ball code into logging to catch delayed
!		output from the previous command.
!
!  %1 (206)	22-Dec-86 /Carl
!		Implement starting at label.  (Needed for checkpoint and
!		other restart options).  Remove character pointer stuff in
!		GOTO/BACKTO since it didn't work.  Add code to detect any
!		kind of label and setup the line properly.
!
!  %1 (205)	18-Dec-86 /Carl
!		Fix labels in GOTO/BACKTO.  Label:: was processed as a user
!		command rather than a label.  Reset character pointer to
!		the point after the label rather than in front of it.
!
!  %1 (204)	18-Dec-86 /Carl
!		Put commands into the log file if there is one.
!
!  %1 (203)	10-Dec-86 /Carl
!		Add $Error and check for ErrChr in position 1 on each
!		output line in PortLine, marking DoError if found.
!		Add :ERROR and :NOERROR both to set ErrChr properly.
!		Do NOT set ERR! until :IF is implemented.
!
!  %1 (202)	09-Dec-86 /Carl
!		Modify $Mail to read and set the MAIL field in the job
!		action word.  Enable $Logging checks in PortLine.
!		Add :SILENCE and :REVIVE for $Logging compatibility.
!
!  %1 (201)	02-Dec-86 /Carl
!		Add checks to EveryMinute to change log files when the
!		date wraps.  Also, eliminate #EOT from VMFILE until it
!		is fixed, allowing ^D to be put into command files.
!
;


comment
!
!  %1 (200)	24-Nov-86 /Carl
!		Another change to EXIT code.  HANG left EXECX in ^C, so
!		we now try setting logout-on-stop and just exiting.
!
!  %1 (177)	23-Nov-86 /Carl
!		Changed LOGOFF uuo in exit to HANG uuo since LOGOFF was
!		leaving the job detached in ^C running LOGOUT.
!
!  %1 (176)	23-Nov-86 /Carl
!		Put in timeout to logout after 15 minutes of inactivity.
!
!  %1 (175)	21-Nov-86 /Carl
!		Install feature RProc to tell scheduler that we are in
!		the process of starting a new processor.
!
!  %1 (174)	14-Nov-86 /Carl
!		Remove the RESTART command code as a conversion aid.
!		This command is now a no-op and is ignored.
!
!  %1 (173)	14-Nov-86 /Carl
!		Remove duplication by changing TMPF option to CCLF and
!		re-using the CCL flag bit for the new LOGOUT flag bit to
!		allow a job to logout without aborting the queue entry.
!		Remove Abort$CCL by using Abort$Run properly and re-use
!		the CCL entry for Abort$Logout (job went away).
!
!  %1 (172)	14-Nov-86 /Carl
!		Added :OPER command to cause a fatal error.  Removed the
!		new functionality of :PAUSE by making it ignore the line.
!
!  %1 (171)	14-Nov-86 /Carl
!		Add macro QQJ to JQUE.DEF to retrieve the frame number from
!		the frame descriptor since GETTAB doesn't always work right
!		with an FD.
!
;


comment
!
!  %1 (170)	13-Nov-86 /Carl
!		Fixed $TimeLimit parameter to return the correct data.
!
!  %1 (167)	18-Oct-86 /Carl
!		Rewrote GETLIC routine to use VMFILE and page through the
!		oper password file scanning for a match.  Fixed bug in code
!		which broke LICENSE option at runtime.
!
!  %1 (166)	15-Oct-86 /Carl
!		Removed E!Password from queue entry record and associated
!		routines.  Reassembly with new definitions required.
!
!  %1 (165)	24-Sep-86 /Carl
!		Changed Log:Append/Supersede code again.  Used proper req
!		number for termination messages.
!
!  %1 (164)	24-Sep-86 /Carl
!		Changed completion line to print less info, since all the
!		available info was being duplicated except the completon
!		data.  Put request number in log file.  Added debugging for
!		append code which isn't obviously working.
!
!  %1 (163)	23-Sep-86 /Carl
!		Modified JQUEUE.DEF macros and changed JS$ to ST$ in all
!		necessary modules.  Changed status string array sizes.
!
!  %1 (162)	03-Sep-86 /Carl
!		More code to determine which of a ZAP or ECF really did
!		occur by checking for 'TTY' or null in port name.
!
!  %1 (161)	02-Sep-86 /Carl
!		Add code to enable port interrupts on port after ECF is
!		detected to catch final circuit zap.
!
;


comment
!
!  %1 (160)	28-Aug-86 /Carl
!		Move code for running a job to RUNJOB in XEXPKG.
!
!  %1 (157)	25-Aug-86 /Carl
!		Exceeding limits now calls CLEANUP to finish files.
!		FRMXCT of !foRUN now clears "known" extensions.
!		Minor cleanup of TempFile and parameter code.
!
!  %1 (156)	24-Aug-86 /Carl
!		Split DO!CLEANUP into CLEANUP and friends which do the
!		appropriate things on ECF ZAP etc.
!
!  %1 (155)	24-Aug-86 /Carl
!		Changed main command loop to look at all conditions for
!		each job instead of each condition for all jobs.  Called
!		routines reflect the change as logical flags are setup.
!
!  %1 (154)	22-Aug-86 /Carl
!		Fixed some !DAYTIM routines to handle proper time zones.
!
!  %1 (153)	22-Aug-86 /Carl
!		Make sure FORGET!SUBSTITUTIONS is called prior to clearframe
!		so that each job cleans up after itself.
!
!  %1 (152)	18-Aug-86 /Carl
!		Added MyBit and NoBit globals for 1 lsh MyJob and lnot same.
!		Made all references to QRA QRS QRx QQA QQS QQx use MyJob as
!		part of the macro.  Other arguments removed from the code.
!
!  %1 (151)	16-Aug-86 /Carl
!		Added fields for OPERNAME and PASSWORD to entry and moved
!		a few fields.  This implies and complete re-compile of any
!		module which references a user queue entry.
!
;


comment
!
!  %1 (150)	11-Aug-86 /Carl
!		Modified TIMER and DATSTR routines to use supplied timezone
!		so user gets proper value.
!
!  %1 (147)	11-Aug-86 /Carl
!		Implemented OverTime flag and Everyminute code to check for
!		exceeded limits.  Cleaned up NTQ and ZAP-NeedZap code.
!		Modified startup to check for CBVPM# and Exit with message.
!
!  %1 (146)	04-Aug-86 /Carl
!		Removed UPTIME info since SysUDT is the only really accurate
!		mechanism to track when the system started.  Renamed the
!		variable to FLAGS to keep track of processor/scheduler flags.
!
!  %1 (145)	04-Aug-86 /Carl
!		Moved Create!Child to XEXPKG:CChild fixing off-by-one that
!		lost license.  Change forces compatibility for both programs.
!
!  %1 (144)	01-Aug-86 /Carl
!		Removed usererr messages from MOV.  Use ClubXX from XEXPKG.
!		Use new Set/Test/Clear-Feature macros from JQUE.
!		Use new QQR/QQT macros for TRU and Time limits.
!		Tweak startup code again.
!
!  %1 (143)	29-Jul-86 /Carl
!		Fixed startup code to handle other processor.  Removed the
!		duplicate messages from FrontEnd.  Removed FileLicense code.
!
!  %1 (142)	26-Jul-86 /Carl
!		Removed arrays and string that were not being used.
!
!  %1 (141)	20-Jul-86 /Carl
!		Implemented RUNF code from scheduler.
!		Revised JobExit and ClearFrame code.
!
;


comment
!
!  %1 (140)	15-Jul-86 /Carl
!		Added new code to JQUE to keep track of record numbers.
!		Implement QFET$INTER to control restarting the processor
!		as the load permits.
!
!  %1 (137)	01-Jul-86 /Carl
!		Put Ifcr FALSE thenc endc around code to start/stop the
!		processor.  Let it run all the time for now.
!
!  %1 (136)	28-Jun-86 /Carl
!		Implemented new scheme to keep scheduler and processor in
!		tune with each other.  Scheduler gets interlock, waits for
!		processor to set Q!HAVEP, releases interlock and goes on.
!		Processor tries interlock, sets Q!HAVEP, waits up to 5 min
!		for the interlock, and goes on.  Sets Q!HAVEP every cycle.
!
!  %1 (135)	28-Jun-86 /Carl
!		Commented out SIAENB and installed new JQUE module which
!		does a PREREF on all mapped pages prior to fetching data.
!
!  %1 (134)	27-Jun-86 /Carl
!		Removed all new WAKE/HIBER code in favor of SLEEP.  Now
!		using new XEXINT version which does not use WAKE code.
!
!  %1 (133)	22-Jun-86 /Carl
!		Installed !FOCSI='44 into interrupt module and changed the
!		WAKE code to use !FOCSI instead.  Changed all interrupt
!		code to wake up the frame stored in XEXJOB which should be
!		the current frame at all times.
!
!  %1 (132)	20-Jun-86 /Carl
!		Removed some modified code to fix EOF problem.  Seems that
!		scheduler restart code needs work.  Add code to modify the
!		flag HAVEP at the appropriate times.
!
!  %1 (131)	17-Jun-86 /Carl
!		Changed the code which read data from the input file and
!		broke seeing end of file.
!
;


comment
!
!  %1 (130)	15-Jun-86 /Carl
!		Merged xxxTRP back into XEXINT using a common definition
!		file to avoid overlapping channels.  Rearranged the values
!		of the interrupt channels to skip 1-4 which SAIL may use.
!
!  %1 (127)	14-Jun-86 /Carl
!		Moved LogInfo to XEXPKG and made messages and status info
!		more consistant and accurate.
!
!  %1 (126)	13-Jun-86 /Carl
!		Split common routines from XEXEC, EXECX and XEXSUB into
!		new module XEXPKG so only one copy of the code exists.
!		Modified CVName routine to use VMChan.
!
!  %1 (125)	10-Jun-86 /Carl
!		Converted many messages to use the new LogInfo routine.
!		Removed all print statements.
!
!  %1 (124)	10-Jun-86 /Carl
!		Removed SetSxx macros and installed all new class$type
!		values wherever possible.
!
!  %1 (123)	10-Jun-86 /Carl
!		Added InfoFile and InfoJob routines to build filename
!		and job information strings used throughout.
!
!  %1 (122)	06-Jun-86 /Carl
!		Fixed BACKTO command to actually backup in the file to
!		look for the label instead of starting at the top.
!
!  %1 (121)	04-Jun-86 /Carl
!		Split some initialization routines into smaller pieces
!		make them more manageable and to aid in working out the
!		kinks.  Add CLUB mechanism to check for Scheduler and
!		Processor already running.
!
;


comment
!
!  %1 (120)	29-May-86 /Carl
!		Added more startup information to the queue to handle the
!		various scheduler/processor/job states.  Removed almost
!		all PRELIMINARY conditionals in favor of a routine to log
!		previous "print" statements to the debug file based on
!		features in QQ(Feature).
!
!  %1 (117)	28-May-86 /Carl
!		Modified create!child to return information to set the
!		proper error/wait state.  Imbedded FRAME[x] in the map
!		area.  Fixed up some of the state changes.
!
!  %1 (116)	23-May-86 /Carl
!		Put in debugging and remote restart code to allow the
!		scheduler and processor to reset.
!
!  %1 (115)	21-May-86 /Carl
!		Expanded Proc field to allow each status class to have
!		individual type values.  This makes it easier to pass
!		more specific information between the scheduler and the
!		processor and to allow the command file and outside
!		programs to communicate operator/user actions to the job.
!
!  %1 (114)	16-May-86 /Carl
!		Fixed code which checked for new jobs to use the correct
!		range and completed primitive testing.  ** Success **
!		A job scheduled by XEXEC was processed successfully by
!		the EXECX program.  Error detection also was shown to work
!		although recovery from error needs some work.
!
!  %1 (113)	14-May-86 /Carl
!		Finished revamping code to perform only the job processing
!		half.  This was an ongoing set of changes and took place
!		during the entire second quarter, not just the last week.
!
!  %1 (112)	28-Jan-86 /Carl
!		Split XEXEC into the scheduler and the processor.
!		This module is EXECX the job processor.
!
!  %1 (111)	27-Dec-85 /Carl
!		Rework logout process, put mail (if any) into logfile,
!		tie loose ends dealing with initialization & termination.
!
;


comment
!
!  %1 (110)	27-Dec-85 /Carl
!		Install NeedZap, control access to Frame[MyJob], and do
!		all manipulation of ActiveCount in main schedule loop.
!
!  %1 (107)	27-Dec-85 /Carl
!		No longer wait for ESCAPE to finish.  Set NeedEscape and
!		only process new file data when the flag gets cleared.
!		** Note: No provision for job which cannot be stopped! **
!
!  %1 (106)	20-Dec-85 /Carl
!		Replaced code at ESCAPE with new .foSTP call to stop frame.
!
!  %1 (105)	Reworked ESCAPE code into SAIL and eliminated typeo from
!		old PCOM code.  [Corrected code never worked, see above].
!
!  %1 (104)	Reworked code involving circuit zaps to put each port on
!		a separate priority level so we can determine which port
!		was zapped.
!
!  %1 (103)	Added READ option to files in VMFILE and removed all old
!		style i/o from the job scheduler code.
!
!  %1 (102)	Modified commands code to use tables and to handle some of
!		the intricacies of TOPS-10 BATCON commands with ".*=" all
!		fully implemented.  Included "-" same as "." in cretin mode.
!
!  %1 (101)	26-Nov-85 /Carl
!		Added GETINT( Why,What ) to set the appropriate job-bit in
!		WHY based on WHAT using POLPRT.  Rewrote interrupt code for
!		BRK and ORG to use it.  Changed mainline code to only clear
!		the job-bit in CHR! and ORG! when appropriate.
!
;


comment
!
!	XEXEC %1(100) preliminary release 19-Nov-85 /Carl
!		*** Multiple job code runs a single job successfully ***
!
!  %1 (100)	Main-line code rewritten to handle multiple job streams
!		asynchronously.
!
!  %1  (77)	Sprout handles both frame and port creation and returns
!		the proper combination to the caller.
!
!  %1  (76)	Front!end initializes the current job information as well
!		as opening the input and output (if any) files.
!
!  %1  (75)	Routines which could stand by themselves were removed into a
!		new module XEXSUB for support routines not directly involved
!		with the XEXEC data arrays.
!
!  %1  (74)	Many scaler variables became arrays to handle the multiple
!		job capability of XEXEC.  Flag scalers remained scalers and
!		are now utilized as bitflags, one bit per job.
!
!  %1  (73)	Sail file I/O was ripped out and replaced with module VMFILE
!		which writes files using paging.  (Replaced LOGFILE i/o).
!
!  %1  (72)	Old interrupt code was replaced with module XEXINT which sets
!		flags and depends on the main program to know what to do next.
!
!	XEXEC %1(71) released from PCOM %101(71)  /Carl
!		*** reads jobs from JQUEUE.SYS instead of the user ***
!
;

 