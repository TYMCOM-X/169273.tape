
XEXEC Queue Information						Page  1
Map page format

  Version		Queue format version
  Feature		Queue features implemented
    QFet$Debug		Debug code enabled flag
    QFet$RSched		Restart scheduler flag
    QFet$RProc		Restart processor flag
    QFet$Logout		Logout on exit flag
  Type			Type of queue
  Name			Queue name
  Lock			Lock the entire queue
  WLock			Write lock, ok to read
  Open			Count of users in queue
  Next			Next available seq #
  High			Highest entry in use
  Hole			First available entry slot
  Count			Total entries in queue
  RSlot			Maximum run slots in queue
  ISlot			Maximum job slots in queue
  New			Indicate something changed

  - Operation
  Uptime		System uptime
  Daytime		Last UDT scheduler was here
  Running		Total running entries/jobs
  Active		Total active entries/jobs

  - Parameter
  TruLim		Default TRU limit (see E!TruLim)
  LogLim		Default log limits (see E!LogLim)
  Action		Default action (see E!Action)
  RJobs			# Running jobs to schedule
  IJobs			# Interactive jobs to schedule

  - Per Job
  RFrame	RunMax	Current frame for run jobs
  IFrame	JobMax	Current frame for each job
  Runner	RunMax	Current job status for run jobs
  Status	JobMax	Current job status for each job
  RunId		RunMax	Universal frame-id for run jobs
  JobId		JobMax	Universal frame-id for each job


XEXEC Queue Information						Page  2
Primary record information

  RunTime		Universal date,,time
  PPN			Gfd (connected) directory
  Privs			Privilege word
  AUN			Login directory
  Username		12 Character Username
  Network		Network Node-Port info
  Project		15 Character Project Code
  License		Frame License

  CmdFile (5)		device:(username)file.ext block

  LogFile (5)		device:(username)file.ext block
    Device		** Device name
    User		** Username
    Name		** File Name
    Ext			** File Extension
  * FErr, 18		File error, stored in half of CmdFile+Ext

  LogLim		Logging limits [bit fields]
  * LogL, 9		Max logfile size in pages		[0]
  * TimL,18		Max elapsed time in minutes		[60]

  Status		Status information [bit fields]
  * Stat, 3		Entry Status				[JS$Queued]
  * Proc, 6		Processing status
  * DepL, 6		Dependency level {0-63}			[0]
  * Seq, 18		Sequence number  {0-262144}		[n]

  Action		Action information [bit fields]
  * Log,  2		Logging action				[JL$Supersede]
  * Disp, 3		Log file disposition			[JD$None]
  * Spl,  2		Spool action  **Future**		[JS$None]
  * Mail, 2		Mailer action				[JM$Always]
  * MPrg, 2		Mailer					[JP$RPG]
  * Restart,3		Restart action				[JR$None]
  * Uniq, 2		Unique login				[JR$Job]
  * JPri, 4		Job request priority			[JP$Def]
  * HaltF,1		Halt: not allowed to halt		[0]
  * CtyF, 1		Cty: log events to cty/opr		[0]
  * RunF, 1		Run: not a command file			[0]
  * DetF, 1		Det: no PTY-pair requested		[0]

  Parameters		Parameters {0-80 chars}			[-null-]


XEXEC Queue Information						Page  3
Status field definitions

  Status		Status information [bit fields]

  * Stat, 3		Entry Status				[JS$Queued]

      JS$Queued		Queued for processing
      JS$Hold		Hold this record (do not process)
      JS$Sched		Scheduled to run but not in-process
      JS$Proc		Scheduled to run and in-process
      JS$Done		Completed
      JS$Abort		Was running and job aborted
      JS$Cancel		Cancelled by user or operator

  * Proc, 6		Processing status

      PSQ$Wait		Queued and waiting for scheduling (normal)
      PSQ$Special	Queued and in special wait
      PSQ$Abort		Queued and waiting for reset after prior abort
      PSQ$Crash		Queued and waiting for reset after prior crash

      PSH$None		Not held?
      PSH$User		Held by user, must be reset to be processed
      PSH$System	Held by system, must be reset by operator
      PSH$Restart	Held for restart count

      PSS$Wait		Scheduled, waiting for processing (normal)
      PSS$Frame		Scheduled, waiting for a frame

      PSP$Run		Running (normal)
      PSP$Pause		Was running, paused by user or operator
      PSP$Stop		Was running, stopped (^C) by user or operator
      PSP$Restart	Was running, waiting for restart due to error
      PSP$Cancel	Was running, cancelled by user or operator

      PSD$End		Done, encountered end of job stream
      PSD$Stop		Done, encountered :STOP in job stream
      PSD$Restart	Done, encountered :RESTART/REQUE in job stream
      PSD$Error		Done, encountered and handled ?error in job stream
      PSD$Lost		Done, processor lost characters to log file

      PSA$Input		Aborted, cound not find input (command) file
      PSA$Frame		Aborted, could not create frame
      PSA$Run		Aborted, could not run command program
      PSA$Enter		Aborted, could not create log file
      PSA$Update	Aborted, could not update log file (append)
      PSA$Append	Aborted, could not append to log file
      PSA$Error		Aborted, encountered ?error in job stream
      PSA$Notice	Aborted, received notice to quit by controller
      PSA$Time		Aborted, time limit exceeded
      PSA$Tru		Aborted, TRU limit exceeded
      PSA$Zap		Aborted, lost circuit to command port
      PSA$Command	Aborted, illegal command in job stream
      PSA$Format	Aborted, format check failed

  * DepL, 6		Dependency level {0-63}			[0]
  * Seq, 18		Sequence number  {0-262144}		[n]


XEXEC Queue Information						Page  4
Action field definitions

  Action		Action information [bit fields]
  * Log,  2		Logging action				[JL$Supersede]
      JL$None		No log file
      JL$Append		Append log to exisiting file
      JL$Supersede	Create new log file
      JL$Spool		** Future ** (do not document)

  * Disp, 3		Log file dispition			[JD$None]
      JD$None		No action
      JD$Delete		Delete log file at job completion
      JD$Error		Delete log file if no error at completion

  * Spl,  2		Spool action  **Future**		[JS$None]
      JS$None		** Future **
      JS$LogFile	** Future **
      JS$ErrorFile	** Future **
      JS$All		** Future **

  * Mail, 2		Mailer action				[JM$Always]
      JM$None		No mail
      JM$Success	Send mail on successful job completion
      JM$Error		Send mail on error in job
      JM$Always		Always send mail

  * MPrg, 2		Mailer					[JP$RPG]
      JP$RPG		Use standard RPG mailer
      JP$TUMS		Use TYMNET(R) Universal Mail System mailer
      JP$ONTYME		** Future ** (not supported)
      JP$SPECIAL	** Future ** (not supported)

  * Restart,3		Restart action				[JR$None]
      JR$None		No restart
      JR$CHKPNT		If error, restart job at CHKPNT label
      JR$Label		If error, restart job at specified label
      JR$Continue	If error, restart job at next line
      JR$Repeat		If error, restart job at current line

  * Uniq, 2		Unique login				[JR$Job]
      JU$None		No controls
      JU$User		Only allow 1 job with this logged-in username
      JU$Path		Only allow 1 job with this connected directory
      JU$Job		Only allow 1 job with this command file

  * JPri, 4		Job request priority
      JP$Min = 0	Minimum priority in table (use current default)
      JP$Max = (2^4)-1	Maximum priority in table (some reserved for system)
      JP$Def = 5	Default priority
      JP$Sys = 10	System priority (requires license to request geq)
      JP$Run = JP$Min-1	Actual priority for active running jobs

  * HaltF,1		Halt: not allowed to halt		[0]
  * CtyF, 1		Cty: log events to cty/opr		[0]
  * RunF, 1		Run: not a command file			[0]
  * DetF, 1		Det: no PTY-pair requested		[0]


XEXEC Queue Information						Page  5
Defaults

  DefTruLim   =  0

  DefLogLim   =  0 at bit 17  lor  60 at bit 35

  DefAction   =	 JL$None at bit  1  lor  JD$None   at bit  4  lor
		 JS$None at bit  6  lor  JM$Always at bit  8  lor
		 JP$RPG  at bit 10  lor  JR$None   at bit 13  lor
		 JU$Job  at bit 15  lor  JP$Min    at bit 21  lor
		   0     at bit 32  lor    0       at bit 33  lor
		   0     at bit 34  lor    0       at bit 35

   