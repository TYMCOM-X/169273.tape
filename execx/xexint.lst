
XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 1
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

1	entry
2	
3		ESC!,   EscEnb, EscDis
4	,	NTQ!,   NtqEnb, NtqDis
5	,	TIM!,   TimEnb, TimDis, SetTim
6	
7	,	CHR!,   PrtEnb, PrtDis
8	,	ORG!,   LOS!,   ZAP!,   ZapTim
9	
10	,	FEX!,   FEXEnb, FEXDis
11	,	ECF!,   ECFEnb, EFCDis
12	,	LCF!,   LCFEnb, LCFDis
13	,	SIP!,   SIPEna, SIPDis
14	,	SIC!,   SICEna, SICDis
15	,	SIS!,   SISEna, SISDis
16	,	SIA!,   SIAEna, SIADis
17	;
18	begin "XEXINT"
19	
20	require "(SAILIB)SAIL.DEF" source!file;
21	require "(MPL)UUOSYM.DEF"  source!file;
22	require "(CARL)JQUEUE.DEF" source!file;
23	require "(CARL)XEXEC.REQ"  source!file;
24	require "(CARL)XEXINT.DEF" source!file;
25	require "(CARL)DAYTIM.REQ" source!file;
26	!get!definitions(tymint);
27	
28	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 2
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

29	
30	!	Definitions
31	;
32	
33	Define	!iaLCF='0,  !iaECF='1
34	,	!iaSIP='6,  !iaSIC='7,  !iaSIS='10, !iaSIA='11;
35	
36	Define SetFlg(x) = { x_ x lor MyBit };
37	Define ClrFlg(x) = { x_ x land NoBit };
38	
39	
40	internal boolean
41		NTQ!	! true if notice-to-quit ;	! generally from KSYS ;
42	,	ESC!	! true if ^C or ESC hit ;	! keyboard interrupt ;
43	,	TIM!	! true if timer interrupt ;	! general clock timer ;
44	
45	,	CHR!	! true if character-break ;	! per-port interrupts ;
46	,	ORG!	! true if orange ball ;
47	,	ZAP!	! true if circuit zap ;
48	,	ZapTim	! TDT of last zapper received ;
49	,	LOS!	! true if characters lost ;
50	
51	,	FEX!	! true if exit in child ;	! .IAFEX any child ;
52	,	ECF!	! true if exit in child ;	! .IAECF specified ;
53	,	LCF!	! true if logout in child ;	! .IALCF specified ;
54	
55	,	SIP!	! true if software interrupt from parent ;
56	,	SIC!	! true if software interrupt from child ;
57	,	SIS!	! true if software interrupt from sibling ;
58	,	SIA!	! true if software interrupt from anyone ;
59	;
60	
61	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 3
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

62	
63	!	the interrupt cause routine
64	;
65	
66	Internal simple procedure IntMak( integer intChan );
67	start!code
68		move	1,intChan;	! channel with bits set;
69		andi	1,'77;		! mask out newenb;
70		movn	2,1;		! negate;
71		movsi	1,'400000;	! set bit 0;
72		rot	1,(2);		! rotate the right number of channels;
73		tlo	1,'400000;	! set cause interrupt flag;
74		calli	1,-'35;		! intact;
75		 setom	!skip!;
76	end;
77	
78	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 4
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

79	
80	!	Interrupt routines
81	;
82	
83	simple procedure ESC;    ESC!_ true;	! set ESC flag and return ;
84	simple procedure NTQ;    NTQ!_ true;	! set NTQ flag and return ;
85	
86	!	Port interrupt procedures
87	;
88	
89	simple procedure Dummy;	begin end;
90	
91	simple procedure ZAP( Integer Bits );
92	begin "ZAP"
93	    ZapTim_ GetTDT;
94	    ZAP!_ ZAP! lor Bits;
95	    CHR!_ CHR! lor Bits;
96	end "ZAP";
97	
98	ForC ZapC_ 0 stepC 1 untilC E!JobMax
99	 doC {
100	    Simple Procedure ZAP}&"ZapC"&{;
101	    ZAP(1 lsh ZapC);
102	    }
103	 endc
104	
105	
106	simple procedure LOS;	GetInt( LOS!,LXROCL lor LXRICL );
107	simple procedure ORG;	GetInt( ORG!,LXROBS );	! check for OBS and return ;
108	simple procedure CHR;	GetInt( CHR!,LXRBRK );	! check for BRK and return ;
109	
110	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 5
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

111	
112	!	Frame interrupt procedures
113	;
114	
115	simple procedure ECF( Integer Bits );    ECF!_ ECF! lor Bits;
116	simple procedure LCF( Integer Bits );    LCF!_ LCF! lor Bits;
117	
118	
119	ForC FEXC_ 0 stepC 1 untilC E!JobMax
120	 doC {
121	    Simple Procedure ECF}&"FEXC"&{;    ECF(1 lsh FEXC);
122	    Simple Procedure LCF}&"FEXC"&{;    LCF(1 lsh FEXC);
123	    }
124	 endc
125	
126	simple procedure FEX;    FEX!_ true;
127	
128	simple procedure SIP;    SIP!_ true;
129	simple procedure SIC;    SIC!_ true;
130	simple procedure SIS;    SIS!_ true;
131	simple procedure SIA;    SIA!_ true;
132	
133	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 6
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

134	
135	!	Disable procedures
136	;
137	
138	internal simple procedure EscDis;
139	begin "disable ESC"
140	    intMap( intass( !iaESC,0 ), Dummy, 0 );
141	    disable (newenb(int!ESC));	! <esc> ;
142	end "disable ESC";
143	
144	internal simple procedure TimDis;
145	begin "disable TIM"
146	    intMap( intass( !iaTIM,0 ), Dummy, 0 );
147	    disable (newenb(int!TIM));	! timer ;
148	end "disable TIM";
149	
150	simple procedure TIM;
151	begin "tim"
152	    TIM!_ true;			! set TIM flag and return ;
153	    TimDis;			! one time timer ;
154	end "tim";
155	
156	
157	internal simple procedure NTQDis;
158	begin "disable NTQ"
159	    intMap( intass( !iaNTQ,0 ), Dummy, 0 );
160	    disable (newenb(int!NTQ));	! NTQ ;
161	end "disable NTQ";
162	
163	!	Port Disable procedures
164	;
165	
166	internal simple procedure PrtDis( integer Port );
167	begin
168	
169	    intMap( tinass( Port,!iaBRK,0 ), CHR, 0 );	! break characters ;
170	    intMap( tinass( Port,!iaLOS,0 ), LOS, 0 );	! lost characters ;
171	    intMap( tinass( Port,!iaORG,0 ) ,ORG, 0 );	! orange balls ;
172	    intMap( tinass( Port,!iaZAP,0 ), Dummy, 0 );
173	
174	end;
175	
176	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 7
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

177	
178	!	Frame Disable procedures
179	;
180	
181	internal simple procedure EcfDis( integer Frame );
182	begin
183	    intMap( finass( Frame,!iaECF,0 ), Dummy, 0 );
184	    disable( newenb( int!LCF+MyJob ) );
185	end;
186	
187	internal simple procedure LcfDis( integer Frame );
188	begin
189	    intMap( finass( Frame,!iaLCF,0 ), Dummy, 0 );
190	    disable( newenb( int!LCF+MyJob ) );
191	end;
192	
193	internal simple procedure FEXDis;
194	begin
195	    intMap( intass( !iaFEX,0 ), Dummy, 0 );
196	    disable( newenb( int!FEX ) );
197	end;
198	
199	internal simple procedure SIPDis;
200	begin
201	    intMap( intass( !iaSIP,int!SIP ), Dummy, 0 );
202	    disable( newenb( int!SIP ) );
203	end;
204	
205	internal simple procedure SICDis;
206	begin
207	    intMap( intass( !iaSIC,int!SIC ), Dummy, 0 );
208	    disable( newenb( int!SIC ) );
209	end;
210	
211	internal simple procedure SISDis;
212	begin
213	    intMap( intass( !iaSIS,int!SIS ), Dummy, 0 );
214	    disable( newenb( int!SIS ) );
215	end;
216	
217	internal simple procedure SIADis;
218	begin
219	    intMap( intass( !iaSIA,int!SIA ), Dummy, 0 );
220	    disable( newenb( int!SIA ) );
221	end;
222	
223	
224	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 8
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

225	
226	!	Enable procedures
227	;
228	
229	internal simple procedure TimEnb;
230	begin
231	    TIM!_ False;
232	    intmap (intass(!IATIM,int!TIM),TIM,0);
233	    enable (newenb(int!TIM));
234	end;
235	
236	
237	internal simple procedure SetTim( integer Time, Units( 1 ) );
238	begin "set time"
239	    TimEnb;		! just in case it wasn't ;
240	    calli( !Xwd( Units,Time ), calli!SETTIM );
241	end "set time";
242	
243	
244	internal simple procedure NtqEnb;
245	begin
246	    NTQ!_ False;
247	    intmap (intass(!IANTQ,int!NTQ),NTQ,0);
248	    enable (newenb(int!NTQ));
249	end;
250	
251	
252	internal simple procedure EscEnb;
253	begin
254	    ESC!_ False;
255	    intmap (tinass(-1,!IAESC,int!ESC),ESC,0);
256	    enable (newenb(int!ESC));
257	end;
258	
259	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 9
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

260	
261	!	Port Enable procedures
262	;
263	
264	internal simple procedure PrtEnb( integer Port );
265	begin
266	
267	    ClrFlg( CHR! );
268	    ClrFlg( ZAP! );
269	    ClrFlg( LOS! );
270	    ClrFlg( ORG! );
271	
272	    Auxclv( Port,#LF ! lor !bit(27); ,!AXS8B );	! #lf is break;
273	
274	    intMap( tinass(Port,!iaBRK,int!CHR),CHR,0 );
275	    enable( newenb( int!CHR ) );
276	    intMap( tinass(Port,!iaLOS,int!LOS),LOS,0 );
277	    enable( newenb( int!LOS ) );
278	    intMap( tinass(Port,!iaORG,int!ORG),ORG,0 );
279	    enable( newenb( int!ORG ) );
280	
281	    Case MyJob
282	     of begin
283		ForC ZapC_ 0 stepC 1 untilC E!JobMax	! circuit zaps ;
284		 doC {
285		    intMap( Tinass(Port,!iaZAP,int!Zap+ZapC), ZAP}&"ZapC"&{, 0 );
286		    }
287		 endc
288	      end;
289	    enable( newenb( int!ZAP + MyJob ) );
290	
291	    Auxclr( Port, 0, !AXLDE );	! start it up by saying we're ready ;
292	    Auxclr( Port, 0, !AXSYB );	! then reflect the yellow ball ;
293	    intMak( int!ORG );		! and setup the interrupt ;
294	
295	end;
296	
297	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 10
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

298	
299	!	Frame Enable procedures
300	;
301	
302	internal simple procedure LcfEnb( integer Frame );
303	begin
304	    ClrFlg( LCF! );
305	    Case MyJob
306	     of begin
307		ForC FEXC_ 0 stepC 1 untilC E!JobMax	! frame lost ;
308		 doC {
309		    intMap( finass(Frame,!iaLCF,int!LCF+FEXC), LCF}&"FEXC"&{, 0 );
310		    }
311		 endc
312	      end;
313	    enable( newenb( int!LCF + MyJob ) );
314	end;
315	
316	internal simple procedure EcfEnb( integer Frame );
317	begin
318	    ClrFlg( ECF! );
319	    Case MyJob
320	     of begin
321		ForC FEXC_ 0 stepC 1 untilC E!JobMax	! frame exits ;
322		 doC {
323		    intMap( finass(Frame,!iaECF,int!ECF+FEXC), ECF}&"FEXC"&{, 0 );
324		    }
325		 endc
326	      end;
327	    enable( newenb( int!ECF + MyJob ) );
328	end;
329	
330	internal simple procedure FEXEnb;
331	begin
332	    FEX!_ false;
333	    intMap( intass( !iaFEX,int!FEX ), FEX, 0 );
334	    enable( newenb( int!FEX ) );
335	end;
336	
337	

XEXINT.SAI                      created 17-Aug-86 19:33                                  Page 11
Program Listing                 by CRFSYM %5 at 03-Dec-86 17:00

338	
339	!	Software interrupts
340	;
341	
342	simple procedure SIPEnb;
343	begin
344	    SIP!_ false;
345	    intMap( intass( !iaSIP,int!SIP ), SIP, 0 );
346	    enable( newenb( int!SIP ) );
347	end;
348	
349	internal simple procedure SICEnb;
350	begin
351	    SIC!_ false;
352	    intMap( intass( !iaSIC,int!SIC ), SIC, 0 );
353	    enable( newenb( int!SIC ) );
354	end;
355	
356	internal simple procedure SISEnb;
357	begin
358	    SIS!_ false;
359	    intMap( intass( !iaSIS,int!SIS ), SIS, 0 );
360	    enable( newenb( int!SIS ) );
361	end;
362	
363	internal simple procedure SIAEnb;
364	begin
365	    SIA!_ false;
366	    intMap( intass( !iaSIA,int!SIA ), SIA, 0 );
367	    enable( newenb( int!SIA ) );
368	end;
369	
370	
371	
372	end "XEXINT" $
    