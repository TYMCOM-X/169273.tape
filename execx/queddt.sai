begin "QUEDDT"

require "(SAILIB)SAIL.DEF"  source!file;
require "(MPL)UUOSYM.DEF"   source!file;
require "(EXECX)JQUEUE.DEF" source!file;
require "(EXECX)JQUE.REQ"   source!file;

redefine !jbddt = '74, !jbsa = '120;
label thistime;

own safe integer array myac[0:'17];
own integer there, oldstart, filepage;


simple procedure MapIt;
begin "Map it"
    own safe integer array arg[0:1];
    own integer page;
    
    Print( "Data page? " );
    page_ cvd( inchwl );

    if ( page neq FilePage )
     then begin "must map"

	calli( Arg[0]_ !xwd( '6001,((QueAct lsh -9)+1) ), -'66 );
	Arg[1]_ page + QueueAct + 1;
	chnior( 1, Arg[0], !chMFP );
	FilePage_ page;

     end "must map";

end "Map it";


simple procedure WhereIsIt;
begin "where is it"

print( "JQueue DDT"&crlf&crlf,
	"  queue[ ",cvos(queue),
	"  querun[ ",cvos(querun),
	"  queact[ ",cvos(queact),
	crlf,
	"  active=",cvos(queue+Q!Active),
	"  runner=",cvos(queue+Q!Runner),
	"  status=",cvos(queue+Q!Status),
	"  rframe=",cvos(queue+Q!RFrame),
	"  runid=", cvos(queue+Q!Runid),
	crlf,
	"  sts=", cvos(E!Status),
	"  act=", cvos(E!Action),
	"  lic=", cvos(E!License),
	crlf&crlf
      );

end "where is it";


simple procedure DoInstall;
begin "do install"

    if not( InQue )		! anything? ;
     then if not( OpnQue( que$Run lor que$Act ) )
	 then UserErr( 0,0, "Cannot do much - so there", "X" );

    QQ( Feature )_ QQ( Feature ) lor QFet$RSched lor QFet$Debug;

end "do install";


simple procedure NeedHelp;
begin "need help"

    print( crlf &
	"Job Queue DDT: Help Summary" & crlf & crlf &
	"INSTALL$G  Set feature to re-start XEXEC automatically" & crlf &
	"PURGE$G    Clear out RUN/ACT pages and in-queue active data" & crlf &
	"WHERE$G    List some pertinant offsets" & crlf &
	"PAGE$G     Prompts for a data page number to map" & crlf &
	"HELP$G     Type this message" & crlf &
	"QUIT$G     To close queue and exit" & crlf &
	" or  $G    Same as QUIT$G" & crlf &
	crlf );

end "need help";


if not( memory[!jbddt] )		! is DDT loaded? ;
 then UserErr( 0,0, "No DDT - so there", "X" );

if not( OpnQue( que$Run lor que$Act ) )
 then UserErr( 0,0, "Cannot do much - so there", "X" );

thistime:
    WhereIsIt;

start!code
	Internal Label	NoDDT, Again;
	Internal Label  Purge, Page, Where, Help, Quit, Install;
	Label Here;

	Movem	0,Myac[0];		! store BLT ac ;
	Hrlzi	0,1;			!  from 1 ;
	Hrri	0,Myac[1];		!  to block+1 ;
	Blt	0,myac['17];		! Copy them. ;
	Skipn	1,OldStart;		! been here before? ;
	  Hrrz	1,!jbsa;		! no- get address ;
	Movem	1,OldStart;		! reset old start address ;
Here:	Hrrz	1,!jbddt;		! ddt address ;
	Movem	1,There;		! store ;
	Hrri	1,NoDDT;		! get new address ;
	Hrrm	1,!jbsa;		!  for starting ;
	Move	1,Myac[1];		! get ac back ;
	Jrst	@There;			! go to it ;

Again:	Hrlzi	0,Myac[1];		!  from block+1 ;
	Hrri	0,1;			!  to 1 ;
	Blt	0,'17;			! Copy them. ;
	Move	0,Myac[0];		! restore work ac ;
	Jrst	ThisTime;		! repeat entry ;

Purge:	Move	1,Queue;		! get address of queue ;
	Movei	2,Q!Active(1);		! for BLT -- ,,Active ;
	Hrli	2,-1(2);		!     Running,,   ;
	Setzm	Q!Running(1);		! clear them all out ;
	Blt	2,Q!LastEntry(1);	! through the end ;
	Move	1,QueRun;		! get address of active ;
	Hrl	2,1;			! copy address ;
	Hrri	2,1(1);			!  to address plus 1 ;
	Setzm	(1);			! clear it out ;
	Blt	2,'2777(1);		!  to the end ;
	Jrst	Here;			!  and go ;

Page:	Hrlzi	0,Myac[1];		!  from block+1 ;
	Hrri	0,1;			!  to 1 ;
	Blt	0,'17;			! Copy them. ;
	Pushj	'17,Mapit;		! perform mapping function ;
	Jrst	Here;			! and go ;

Where:	Hrlzi	0,Myac[1];		!  from block+1 ;
	Hrri	0,1;			!  to 1 ;
	Blt	0,'17;			! Copy them. ;
	Pushj	'17,WhereIsIt;		! list stuff ;
	Jrst	Here;			! and go ;

Help:	Hrlzi	0,Myac[1];		!  from block+1 ;
	Hrri	0,1;			!  to 1 ;
	Blt	0,'17;			! Copy them. ;
	Pushj	'17,NeedHelp;		! print help message ;
	Jrst	Here;			! and go ;

Install:Hrlzi	0,Myac[1];		!  from block+1 ;
	Hrri	0,1;			!  to 1 ;
	Blt	0,'17;			! Copy them. ;
	Pushj	'17,DoInstall;		! restart XEXEC job ;
	Jrst	Here;			! and go ;


Quit:
NoDDT:	Hrlzi	0,Myac[1];		!  from block+1 ;
	Hrri	0,1;			!  to 1 ;
	Blt	0,'17;			! Copy them. ;
	Move	0,OldStart;		! get old start address ;
	Hrrm	0,!jbsa;		!  and set it up ;
	Move	0,Myac[0];		! restore work ac ;

end;

ClsQue;

end "QUEDDT";
