module dispatch = begin

bind CtrlxValue=#400;
bind MetaValue=#200;

external ctrlat;			! Mark
external ctrla,ctrle;			! Move = Beginning-end of line
external ctrlp,ctrln,ctrlf,ctrlb;	! Move = Up, Down, Right, Left
external metaf,metab;			! Move = Right word, Left Word
external Lastpage, Nextpage;		! Move = Last page, Next page
external ctrld,rubout,metad,metadel;	! Char-Word Delete-Rubout

external distbl,abdefine,mycj;
external ctrll,ctrlo,ctrlq,ctrlr,ctrls,ctrlt,ctrlu,ctrlv;
external ctrlw,ctrly,ctrlz,ctrlar,ctrlc,ctrlg,ctrlk;
external metaa,metac,metaj,metak,metap,metaq,metar,metav,metaw,metaz,metaar;
external metas,extend,metao,metal,metabs,metarc,metarp,metalp,metabang,metcw;
external metacn,metacp,metagt,metalt,metaquest,metarb,metalb,metalc,metcar;
external ctrlxa,ctrlxx,ctrlxs,ctrlxr,ctrlxw,ctrlxi,ctrlxe,ctrlxf;
external ctrlxb,ctrlxl,ctrlxz,ctrlxt,ctrlxv,ctrlx2,ctrlxm;
external uctrlb,uctrlo,uctrlc,uctrlp,uctrln,uctrld,uctrlz,uctrll;
external tabline,toleft,untabline,toright,IctrlR,IctrlS;

global routine initdispatch = begin

global bind MaxPatches=120;
global bind MaxPPerFrame=8;
!This NEXT LINE MUST BE changed when MaxCalls is changed.
global parmarray[100*MaxPPerFrame];
own freearea[500];
bind bar=(freearea-1)<1,7>;
!This NEXT LINE MUST BE changed when MaxCalls is changed.
global freestk[100];
global freezone=bar;
global patsp=1;
global discat[2*MaxPatches+1];
structure odas[i] = .odas + .i; !based at zero array
map odas distbl;

patsp_1;			       !no patches.

incr i from #000 to #777 do distbl[.i] _ ctrlg;	! Error if not defined.
incr i from  " " to  "~" do distbl[.i] _ 1;	! Insert text characters.
distbl[#000]_ ctrlat;	! Set-Erase Mark
distbl[#001]_ ctrla;	! Beginning of Line
distbl[#002]_ ctrlb;	! Backward Character
distbl[#003]_ ctrlc;	! Exit to Superior
distbl[#004]_ ctrld;	! Delete Character
distbl[#005]_ ctrle;	! End of Line
distbl[#006]_ ctrlf;	! Forward Character
distbl[#007]_ ctrlg;	! Abort Operation
distbl[#010]_ rubout;	! Rubout Character
distbl[#011]_ 1;	! Tabs insert themselves for now.
distbl[#012]_ mycj;	! Linefeed does this!
distbl[#013]_ ctrlk;	! Kill Line
distbl[#014]_ ctrll;	! Redisplay Screen
distbl[#015]_ 1;	! CR's insert themselves for now.
distbl[#016]_ ctrln;	! Down Text Line
distbl[#017]_ ctrlo;	! Open Blank Line
distbl[#020]_ ctrlp;	! Up Text Line
distbl[#021]_ ctrlq;	! Quote Character
distbl[#022]_ IctrlR;	! Reverse Search
distbl[#023]_ IctrlS;	! Incremental Search
distbl[#024]_ ctrlt;	! Transpose Characters
distbl[#025]_ ctrlu;	! Universal Argument
distbl[#026]_ ctrlv;	! Next Screen
distbl[#027]_ ctrlw;	! Kill Region to Mark
distbl[#030]_ 1;	! C-X's are impossible to dispatch from.
distbl[#031]_ ctrly;
	!distbl[#032]_ ctrlz;	!scroll down.
distbl[#033]_ 1;	! Esc?
distbl[#034]_ 1;	! FS?
distbl[#035]_ 1;	! GS?
distbl["?^"]_ ctrlar;	!case invert
distbl["?_"]_ 1;	!control-backarrow.
distbl[#177]_ rubout;

distbl[MetaValue+"?C"]_ ctrlc;		! Exit to Superior
distbl[MetaValue+"?G"]_ ctrlg;		! Abort Operation
distbl[MetaValue+"?H"]_ metadel;	! Rubout Wordn
	!distbl[MetaValue+"?I"]_ toright;	! Indent Region
distbl[MetaValue+"?R"]_ Ictrlr;		! Reverse Search
distbl[MetaValue+"?S"]_ Ictrls;		! Incremental Search
	!distbl[MetaValue+"?U"]_ toleft;		! UnIndent Region
distbl[MetaValue+"?W"]_ metcw;		! Copy Region to mark
distbl[MetaValue+"?^"]_ metcar;		! Invert Case Region

distbl[MetaValue+"!"]_ metabang;	! Scroll Line to Top
distbl[MetaValue+"$"]_ metar;		! Replace String
distbl[MetaValue+"%"]_ metaq;		! Query Replace String
distbl[MetaValue+"("]_ metalp;		! Find Matching Right Paren
distbl[MetaValue+")"]_ metarp;		! Find Matching Left Paren
	!distbl[MetaValue+","]_ metacp; !meta comma
	!distbl[MetaValue+"."]_ metacn; !meta dot
distbl[MetaValue+"<"]_ metalt;		! Beginning of Text
distbl[MetaValue+">"]_ metagt;		! End of Text
distbl[MetaValue+"??"]_ metaquest;	! Help Me

	!distbl[MetaValue+"A"]_ metaa;		! Beginning of sentence
	!distbl[MetaValue+"a"]_ metaa;
distbl[MetaValue+"B"]_ metab;		! Backward Word
distbl[MetaValue+"b"]_ metab;
	!distbl[MetaValue+"C"]_ metac;
	!distbl[MetaValue+"c"]_ metac;
distbl[MetaValue+"D"]_ metad;		! Delete Word
distbl[MetaValue+"d"]_ metad;
	!distbl[MetaValue+"E"]_ metae;	! End of Sentence
	!distbl[MetaValue+"e"]_ metae;
distbl[MetaValue+"F"]_ metaf;		! Forward Word
distbl[MetaValue+"f"]_ metaf;
distbl[MetaValue+"H"]_ metadel;		! Rubout Word
distbl[MetaValue+"h"]_ metadel;
	!distbl[MetaValue+"I"]_tabline;		! Tabify Line
	!distbl[MetaValue+"i"]_tabline;
	!distbl[MetaValue+"J"]_ metaj;
	!distbl[MetaValue+"j"]_ metaj;
	!distbl[MetaValue+"K"]_ metak;	! Kill Sentence
	!distbl[MetaValue+"k"]_ metak;
	!distbl[MetaValue+"L"]_ metal;
	!distbl[MetaValue+"l"]_ metal;
	!distbl[MetaValue+"M"]_ metam;
	!distbl[MetaValue+"m"]_ metam;

distbl[MetaValue+"O"]_ metao;		! Toggle Display Output
distbl[MetaValue+"o"]_ metao;
	!distbl[MetaValue+"P"]_ metap;
	!distbl[MetaValue+"p"]_ metap;

distbl[MetaValue+"R"]_ ctrlr;		! Reverse String Search
distbl[MetaValue+"r"]_ ctrlr;
distbl[MetaValue+"S"]_ ctrls;		! String Search
distbl[MetaValue+"s"]_ ctrls;

	!distbl[MetaValue+"U"]_ untabline;	! Untabify Line
	!distbl[MetaValue+"u"]_ untabline;
distbl[MetaValue+"V"]_ metav;		! Previous Screen
distbl[MetaValue+"v"]_ metav;
distbl[MetaValue+"W"]_ metaw;		! Kill Region to String
distbl[MetaValue+"w"]_ metaw;
distbl[MetaValue+"X"]_ extend;		! Extended Command
distbl[MetaValue+"x"]_ extend;
	!distbl[MetaValue+"Z"]_ metaz;
	!distbl[MetaValue+"z"]_ metaz;
distbl[MetaValue+"["]_ metalb;		! Up Paragraph.
distbl[MetaValue+"\"]_ Metak;		! Kill Horizontal Blankspace
distbl[MetaValue+"]"]_ metarb;		! Down Paragaph.
distbl[MetaValue+"^"]_ metaar;		! Invert Case Word
distbl[MetaValue+"{"]_ metalc;		! Beginning of Page
distbl[MetaValue+"}"]_ metarc;		! End of Page
distbl[MetaValue+#177]_ metadel;	! Rubout Word

distbl[CtrlxValue+"?A"]_ abdefine;	! Define Abbreviations
distbl[CtrlxValue+"?B"]_ ctrlxb;	! List Buffers
distbl[CtrlxValue+"?C"]_ ctrlc;		! Exit to Superior
	!distbl[CtrlxValue+"?E"]_ ctrlxe;	! Save and Run Superior
	!distbl[CtrlxValue+"?F"]_ ctrlxf;	! Finish File
distbl[CtrlxValue+"?G"]_ ctrlg;		! Abort Operation
	!distbl[CtrlxValue+"?I"]_ ctrlxi;	! Insert File.
distbl[CtrlxValue+"?K"]_ uctrlo;	!C-X C-K Read "killed" buffer
	!distbl[CtrlxValue+"?L"]_ ctrlxl;
	!distbl[CtrlxValue+"?O"]_ uctrlo;       !ctrlx-ctrlo command.
distbl[CtrlxValue+"?R"]_ ctrlxr;
distbl[CtrlxValue+"?S"]_ ctrlxs;	!if it works.
	!distbl[CtrlxValue+"?T"]_ ctrlxt;
distbl[CtrlxValue+"?V"]_ ctrlxv;	! Visit File
distbl[CtrlxValue+"?W"]_ ctrlxw;	! Write File
distbl[CtrlxValue+"?X"]_ ctrlxx;	! Exchange Point and Mark
	!distbl[CtrlxValue+"?Z"]_ ctrlxz;	Reverse scroll?

distbl[CtrlxValue+"("]_ ctrlxm;		!C-X ( Define Keyboard Macro
distbl[CtrlxValue+")"]_ metap;		!C-X ) Return from Keyboard Macro
distbl[CtrlxValue+"2"]_ ctrlx2;

distbl[CtrlxValue+"@"]_ ctrlxt;		!C-X @ Execute @ filename
distbl[CtrlxValue+"B"]_ uctrlb;
distbl[CtrlxValue+"b"]_ uctrlb;
distbl[CtrlxValue+"C"]_ uctrlc;		!C-X C Create Alternate Window
distbl[CtrlxValue+"c"]_ uctrlc;
distbl[CtrlxValue+"D"]_ uctrld;		!C-X D Delete Alternate Window
distbl[CtrlxValue+"d"]_ uctrld;
distbl[CtrlxValue+"E"]_ metac;		!C-X E Execute Keyboard Macro
distbl[CtrlxValue+"e"]_ metac;
	!distbl[CtrlxValue+"L"]_ uctrll;
	!distbl[CtrlxValue+"l"]_ uctrll;
distbl[CtrlxValue+"M"]_ ctrlxm;		! Major Mode
distbl[CtrlxValue+"m"]_ ctrlxm;
distbl[CtrlxValue+"N"]_ uctrln;
distbl[CtrlxValue+"n"]_ uctrln;
	!distbl[CtrlxValue+"O"]_ uctrlo;	! Delete Blank Lines
	!distbl[CtrlxValue+"o"]_ uctrlo;
distbl[CtrlxValue+"P"]_ uctrlp;
distbl[CtrlxValue+"p"]_ uctrlp;
distbl[CtrlxValue+"Q"]_ metaa;		!C-X Q Keyboard Macro Query
distbl[CtrlxValue+"q"]_ metaa;
distbl[CtrlxValue+"Z"]_ uctrlz;
distbl[CtrlxValue+"z"]_ uctrlz;
distbl[CtrlxValue+"["]_ Lastpage;	! Previous Page
distbl[CtrlxValue+"]"]_ Nextpage;	! Next page
	!distbl[CtrlxValue+#177]_???;		! Backward Kill Sentence

end;

end eludom
  