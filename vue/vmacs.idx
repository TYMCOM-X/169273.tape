.hl 1 $Bold(COMMAND INDEX)
.paragraph
This index contains brief descriptions with cross references for all
commands, grouped by topic.  Within each topic, they are in alphabetical
order.  Our version of alphabetical order places ASCII characters first,
then meta characters, then control-X last.

.hl 2 $Bold(Prefix Characters)

.b;.i-12;Escape or Altmode  (Prefix Meta)
.break
Escape is a bit prefix character which turns on the Meta bit in the
next character.  Thus, Escape F is equivalent to the single character
Meta-F, which is useful if your keyboard has no Meta key.
.b;.i-12;Control-Q  (Quoted Insert)
.break
Control-Q inserts the following character.  This is a way of inserting
control characters.
.b;.i-12;Control-U (Universal Argument)
.break
Control-U is a prefix for numeric arguments which works the
same on all terminals.
.b;.i-12;Control-X
.break
Control-X is a prefix character which begins a two-character command.
Each combination of Control-X and another character is a "Control-X
command".  Individual Control-X commands appear in this index according
to their uses.
.b;.i-12;Meta-X  (Extended Command)
.break
Meta-X  is  a prefix character which introduces an extended
command name.

.hl 2 $Bold(Simple Cursor Motion)
.b.i-12;Control-A  (Beginning of Line, built-in function)
.break
Control-A moves to the beginning of the line.
.b;.i-12;Control-B  (Backward Character, built-in function)
.break
Control-B moves backward one character.
.b;.i-12;Control-E  (End of Line, built-in function)
.break
Control-E moves to the end of the line.
.b;.i-12;Control-F  (Forward Character, built-in function)
.break
Control-F moves forward one character.
.b;.i-12;Control-H  (Backward Delete Character, built-in function)
.break
Control-H deletes the previous character.
.b;.i-12;Control-N  (Down Text Line)
.break
Control-N moves vertically straight down.
.b;.i-12;Control-P  (Up Text Line)
.break
Control-P moves vertically straight up.  
.b;.i-12;Control-R  (Reverse Search)
.break
Control-R is like Control-S but searches backward.
.b;.i-12;Control-S  (Incremental Search)
.break
Control-S searches for a string, terminated by Escape.  It
searches as you type.
.b;.i-12;Meta-<  (Goto Beginning of Text)
.break
Meta-< moves to the beginning of the buffer.  
.b;.i-12;Meta->  (Goto End of Text)
.break
Meta-> moves to the end of the buffer.  

.hl 2 $Bold(Lines)

.b;.i-12;Return  (CRLF)
.break
Return inserts a line separator, or advances onto a following blank
line.
.b;.i-12;Control-O  (Open Line, built-in function)
.break
Control-O  inserts a line separator, but point stays before it.
.b;.i-12;Control-X Control-O  (Delete Blank Lines)
.break
Control-X Control-O deletes all but one of the blank lines around
point.  If the current line is not blank, all blank lines following it
are deleted.  
.b;.i-12;Control-X Control-T  (Transpose Lines)
.break
Control-X  Control-T  transposes the contents of two lines.

.hl 2 $Bold(Killing and Un-killing)
.b;.i-12;Rubout  (Backward Delete Character, built-in function)
.break
Rubout deletes the previous character.  
.b;.i-12;Control-Rubout  (Backward Delete Hacking Tabs, built-in function)
.break
Control-Rubout deletes the previous character, but converts a tab
character into several spaces.
.b;.i-12;Control-D  (Delete Character, built-in function)
.break
Control-D deletes the next character.  
.b;.i-12;Control-K  (Kill Line)
.break
Control-K kills to the end of the line, or, at the end of a line, kills
the line separator.
.b;.i-12;Control-W  (Kill Region)
.break
Control-W kills the region, the text betwen point and the mark.
.b;.i-12;Control-Y  (Un-kill)
.break
Control-Y  reinserts  the  last saved block of killed text.
.b;.i-12;Meta-W  (Copy Region)
.break
Meta-W saves the region as if it were killed without removing it from
the buffer.  
.b;.i-12;Meta-Y  (Un-kill Pop)
.break
Meta-Y rolls the kill ring to reinsert  saved  killed  text
older than the most recent kill.
.b;.i-12;Control-Meta-W  (Append Next Kill)
.break
Control-Meta-W causes an immediately following kill command
to  append its text to the last saved block of killed text.
.b;.i-12;Control-X T  (Transpose Regions)
.break
Control-X T transposes two  arbitrary  regions  defined  by
point  and the last three marks.

.hl 2 $Bold(Scrolling and Display Control)

.b;.i-12;Control-L  (New Window)
.break
Control-L clears the screen and centers point in it.   With
an  argument,  it  can  put point on a specific line of the
screen.
.b;.i-12;Control-V  (Next Screen)
.break
Control-V scrolls downward by a screenful or several lines.
.b;.i-12;Meta-!  (Move Line to Top)
.break
Meta-!  moves the line on which the cursor resides, to the top of the
screen, scrolling the remaining section of the screen up at the same
time.
.b;.i-12;Meta-V  (Previous Screen)
.break
Meta-V scrolls upward by a screenful.

.hl 2 $Bold(The Mark and the Region)

.b;.i-12;Control-@  (Set/Pop Mark)
.break
Control-@ sets the mark or moves to the location of the mark.
Given an argument (using C-U) the mark is cleared.
.b;.i-12;Meta-@  (Mark Word)
.break
Meta-@ puts the mark at the end of the next word.
.b;.i-12;Control-X H  (Mark Whole Buffer)
.break
Control-X H puts point at the beginning of the buffer and
the mark at the end.
.b;.i-12;Control-X Control-P  (Mark Page)
.break
Control-X Control-P puts point  at  the  beginning  of  the
current  page  and  the	mark  at  the end.
.b;.i-12;Control-X Control-X  (Exchange Point and Mark)
.break
Control-X Control-X sets point where the mark was  and  the
mark where point was.

.hl 2 $Bold(Whitespace and Indentation)
.b;.i-12;Tab  (Indent According to Mode)
.break
Tab  either  adjusts the indentation of the current line or
inserts some indentation, in a  way  that  depends  on  the
major  mode.
.b;.i-12;Linefeed  (Indent New Line)
.break
Linefeed is equivalent to Return followed by Tab.  It moves
to a new line and indents that line.  If done in the middle
of a line, it breaks the line and indents  the  new  second
line.
.b;.i-12;Meta-Tab  (Tab to Tab Stop)
.break
Meta-Tab  indents  to the next EMACS-defined tab stop.
.b;.i-12;Meta-M  (Back to Indentation)
.break
Meta-M positions the cursor on the current line  after  any
indentation.
.b;.i-12;Meta-\  (Delete Horizontal Space)
.break
Meta-\  deletes all spaces and tab characters around point.
.b;.i-12;Meta-Control-O  (Split Line)
.break
Meta-Control-O  breaks  a  line,  preserving the horizontal
position of the second half by  indenting  it  to  its  old
starting  position.
.b;.i-12;Meta-Control-\  (Indent Region)
.break
Control-Meta-\ indents each line in the region,  either	by
applying  Tab  to  each  line,  or  by giving each the same
specified  amount  of  indentation.
.b;.i-12;Control-X Tab  (Indent Rigidly)
.break
Control-X Tab shifts all the lines in the region right or left the same
number of columns.  

.hl 2 $Bold(Words, Sentences and Paragraphs)

.b;.i-12;Control-X Rubout  (Backward Kill Sentence)
.break
Control-X Rubout kills back to the beginning of the sentence.
.b;.i-12;Meta-A  (Backward Sentence)
.break
Meta-A moves to the beginning of the sentence.
.b;.i-12;Meta-B  (Backward Word)
.break
Meta-B moves backward one word.
.b;.i-12;Meta-D  (Kill Word)
.break
Meta-D  kills one word following the cursor.
.b;.i-12;Meta-E  (Forward Sentence)
.break
Meta-E moves to the end of the sentence.
.b;.i-12;Meta-F  (Forward Word)
.break
Meta-F  moves forward one word.
.b;.i-12;Meta-H  (Mark Paragraph)
.break
.b;.i-12;Meta-K  (Kill Sentence)
.break
Meta-K kills to the end of the sentence.
.b;.i-12;Meta-T  (Transpose Words)
.break
Meta-T  transposes two consecutive words.
.b;.i-12;Meta-[  (Backward Paragraph)
.break
Meta-[ moves to  the  beginning  of  the  paragraph.
.b;.i-12;Meta-]  (Forward Paragraph)
.break
Meta-] moves to the end of the paragraph.
.b;.i-12;Meta-Rubout  (Backward Kill Word)
.break
Meta-Rubout kills the previous word.

.hl 2 $Bold(Filling Text)

.b;.i-12;Meta-G  (Fill Region)
.break
Meta-G fills the  region,  treating  it  (usually)  as  one
paragraph.
.b;.i-12;Meta-Q  (Fill Paragraph)
.break
Meta-Q fills the current or next paragraph.
.b;.i-12;Meta-S  (Center Line)
.break
Meta-S centers the current line.
.b;.i-12;Control-X :  (Set Fill Prefix)
.break
Control-X  :	specifies  the fill prefix, which is used for
filling indented text.
.b;.i-12;Control-X F  (Set Fill Column)
.break
Control-X F sets the variable Fill Column which controls the margin for
filling and centering.

.hl 2 $Bold(Exiting)

.b;.i-12;Control-]  (Abort Recursive Edit)
.break
Control-] aborts a recursive editing level; that is to say,
exits  it  without allowing the command which invoked it to
finish.

.b;.i-12;Control-Meta-C  (Exit, built-in function)
.break
Control-Meta-C exits from a  recursive  editing  level	and
allows  the  command  which	invoked  the recursive editing
level to finish.  At top level, it exits from EMACS to  its
superior job.

.b;.i-12;Control-X Control-C  (Return to Superior)
.break
Control-X Control-C returns from EMACS to its superior job,
even  if  EMACS  is  currently  inside  a recursive editing
level.  In that case, re-entering EMACS will find it  still
within  the  recursive  editing	level.
.b;.i-12;
.break

.hl 2 $Bold(Pages)

.b;.i-12;Control-X L  (Count Lines Page)
.break
Control-X L prints the number of lines on the current page, and how
many come before point and how many come after.
.b;.i-12;Control-X P  (Set Bounds Page)
.break
Control-X  P	narrows the virtual boundaries to the current
page.

.b;.i-12;Control-X [  (Previous Page)
.break
Control-X [ moves backward to the previous  page  boundary.
.b;.i-12;Control-X ]  (Next Page)
.break
Control-X ] moves forward to the next page boundary.
.b;.i-12;Control-X Control-P  (Mark Page)
.break
Control-X Control-P puts point at the beginning and the mark at the end
of the current page.

.hl 2 $Bold(Lisp)

.b;.i-12;Meta-(  [Make ()]
.break
Meta-( places a pair of parentheses around the next several
s-expressions.
.b;.i-12;Meta-)  [Move Over )]
.break
Meta-) moves past the next close parenthesis and adjusts the
indentation of the following line.  

.hl 2 $Bold(Files)

.b;.i-12;Meta-~  (Buffer Not Modified)
.break
Meta-~ clears the flag which says that the buffer contains changes that
have not been saved.  
.b;.i-12;Control-X Control-F  (Find File)
.break
Control-X Control-F visits a file in its own buffer.
.b;.i-12;Control-X Control-Q  (Do Not Write File)
.break
Control-X  Control-Q  tells EMACS not to offer to save this
file.

.b;.i-12;Control-X Control-R  (Read File)
.break
Control-X Control-R visits a file and tells  EMACS  not  to
offer  to save it.

.b;.i-12;Control-X Control-S  (Save File)
.break
Control-X Control-S saves the visited file.
.b;.i-12;Control-X Control-V  (Visit File)
.break
Control-X Control-V visits a file.  

.hl 2 $Bold(Buffers)

.b;.i-12;Control-X A  (Append to Buffer)
.break
Control-X A adds the text of region into another buffer.
.b;.i-12;Control-X B  (Select Buffer)
.break
Control-X B is the command for switching to another buffer.
.b;.i-12;Control-X K  (Kill Buffer)
.break
Control-X  K kills a buffer.

.hl 2 $Bold(Comments)

.b;.i-12;Meta-Linefeed  (Indent New Comment Line)
.break
Meta-Linefeed moves to a new line and indents it.  If point
had been within a comment on the old line, a new comment is
started  on  the  new	line and indented under the old one.
.b;.i-12;Meta-;  (Indent for Comment)
.break
Meta-; inserts a properly indented comment at  the  end  of
the current line, or adjusts the indentation of an existing comment.
.b;.i-12;Meta-N  (Down Comment Line)
.break
Meta-N moves down a line and starts a comment, deleting empty comments.

.b;.i-12;Meta-P  (Up Comment Line)
.break
Meta-P moves down a line and  starts  a  comment,  deleting
empty comments.

.b;.i-12;Control-X ;  (Set Comment Column)
.break
Control-X ; sets the column at which comments are indented,
from an argument,  the  current  column,  or  the	previous
comment.

.hl 2 $Bold(Case Conversion)

.b;.i-12;Meta-C  (Uppercase Initial)
.break
Meta-C makes the next word lower case with a capital initial.  It moves
over the word.
.b;.i-12;Meta-L  (Lowercase Word)
.break
Meta-L  moves over a word converting it to lower case.
.b;.i-12;Meta-U  (Uppercase Word)
.break
Meta-U moves over a word converting it to upper case.
.b;.i-12;Control-X Control-L  (Lowercase Region)
.break
Control-X Control-L converts the text of the region to
lower  case.
.b;.i-12;Control-X Control-U  (Uppercase Region)
.break
Control-X Control-U converts the text of the region to
upper  case.

.hl 2 $Bold(Windows)

.b;.i-12;Control-X 2  (Two Windows)
.break
Control-X 2 displays two windows.  
.b;.i-12;Control-X 3  (View Two Windows)
.break
Control-X 3 displays two windows but  stays  in  the  first
one.
.b;.i-12;Control-X 4  (Visit in Other Window)
.break
Control-X 4 displays two windows and selects a buffer or visits a file
in the other window.  
.b;.i-12;Control-X O  (Other Window)
.break
Control-X  O	switches  from  one window to the other.
.b;.i-12;Control-X ^  (Grow Window)
.break
Control-X ^ changes the allocation of screen space  to  the
two windows.

.hl 2 $Bold(Narrowing)

.b;.i-12;Control-X N  (Set Bounds Region)
.break
Control-X N narrows the virtual boundaries to the region as
it  was  before the command.
.b;.i-12;Control-X P  (Set Bounds Page)
.break
Control-X  P	narrows the virtual boundaries to the current
page.
.b;.i-12;Control-X W  (Set Bounds Full)
.break
Control-X W widens	the  virtual  boundaries  back	to  the
entire buffer.

.hl 2 $Bold(Status Information)

.b;.i-12;Control-X =  (What Cursor Position)
.break
Control-X = prints information on the screen position and character
position of the cursor, the size of the file, and the character after
the cursor.
.b;.i-12;Control-X L  (Count Lines Page)
.break
Control-X L prints the number of lines in the current page,
and  how  many  come before or after point.

.hl 2 $Bold(Keyboard Macros)

.b;.i-12;Control-X (  (Start Kbd Macro)
.break
Control-X  (	begins  defining  a  keyboard	macro.
.b;.i-12;Control-X )  (End Kbd Macro)
.break
Control-X  ) terminates the definition of a keyboard macro.
.b;.i-12;Control-X E (Call Last Kbd Macro)
.break
Control-X E executes the  most  recently  defined  keyboard
macro.
.b;.i-12;Control-X Q (Kbd Macro Query)
.break
Control-X Q in a keyboard macro can ask the user whether to
continue  or allow him to do some editing before continuing
with the keyboard macro.

.hl 2 $Bold(Minibuffer)

.b;.i-12;Meta-$  (Replace String)
.break
Meta-$ invokes a minibuffer containing a call to Replace String.  You
fill in the arguments.  

.b;.i-12;Meta-%  (Query Replace)
.break
Meta-% invokes a minibuffer containing a call to Query Replace.  You
fill in the arguments.  
  