.hl 1 $Bold(Extended (Meta-X) Commands and Functions)
.paragraph
While the most often useful VUE commands are accessible via one or two
characters, the less often used commands go by long names to make them
easier to remember.  They are known as "extended commands" because they
extend the set of two-character commands.  They are also called
"$Bold(M-X) commands", because they all start with the character Meta-X
The M-X is followed by the command's name, actually the name of a
function to be called.  Terminate the name of the function with a Return
(unless you are supplying string arguments; see below).  For example,
Meta-X Page Mode_<cr_> invokes the function Page Mode.  This function
when executed turns Page Mode on and off.
.paragraph
We say that M-X Foo_<cr_> calls "the function FOO".  When documenting
the individual extended commands, we will call them "functions" to
avoid confusion between them and the one or two character "commands".
We will also use "M-X" as a title like "Mr."  for functions, as in "use
M-X Foo".  The "extended command" is what you type, starting with M-X,
and what the command does is call a function.  The name that goes in the
command is the name of the command and is also the name of the
function, and both terms will be used.

.hl 2 $Bold(Issuing Extended Commands)
.hl 3;$Bold(Typing The Command Name)
When you type M-X, the cursor moves down to the echo area at the bottom
of the screen.  "M-X" is printed there, and when you type the command
name it echoes there.  This is known as "reading a line in the echo
area".  You can use Rubout to cancel one character of the command name
or C-G to cancel the whole M-X.  These editing characters apply to
anything which reads a line in the echo area.  The string "M-X" which
appears in the echo area is called a "prompt".  The prompt always tells
you what sort of argument is required and what it is going to be used
for; "M-X" means that you are inside of the M-X command and should type
the name of a function to be called.

.hl 3;$Bold(Completion*)
You can abbreviate the name of the command, as long as the abbreviation
is unambiguous.  You can also use completion on the function name.  This
means that you type part of the command name, and VUE visibly fills in
the rest.  You request completion by typing an _<Esc_>.  For example, if
you type M-X Set Mo _<Esc_>, the "Set Mo" expands to "Set Mode
Parameters" because "Set Mo" was unique for the expanded name.
If you ask for completion when there are several
alternatives you receive an error.  Thus, it is best to use a long a string
as is necessary to make it unique, but short enought to type often.

.hl 3;$Bold(Numeric Arguments and String Arguments)
.paragraph
Some functions can use numeric prefix arguments.  Simply give the Meta-X
command an argument and Meta-X will pass it along to the function which
it calls.
.paragraph
Some functions require "string arguments" or "suffix arguments".  For
those functions, after the function name is terminated with an _<Esc_>,
then youtype the arguments, separated by _<esc_>s.  After the last
argument, type a Return to cause the function to be executed.  For
example, the function Major Mode initializes various functions based
upon the mode name, whose name must be given as a string argument.  An
example of using it is Meta-X Major Mode _<esc_> TEXT _<cr_>, which
initializes the "TEXT" mode.

.hl 1 $Bold(Commands and Functions)
.paragraph
Actually, every command in VUE simply runs a function.  For example,
when you type the command C-N, it runs the function "Down Text Line".
You could just as well do M-X Down Text Line _<cr_> and get the same
effect.  C-N can be thought of as a sort of abbreviation.  We say that
the command C-N has been "connected" to the function "Down Text Line".
The name is looked up once when the command and function are connected,
so that it does not have to be looked up again each time the command is
used.  For historical reasons, the default argument passed to a function
which is connected to a command you typed is 1.  The documentation for
individual VUE commands usually gives the name of the function which
really implements the command in parentheses after the command itself.

.paragraph
Just as any function can be called directly with M-X, so almost any
function can be connected to a command.  This is the basis of
customization of VUE.  You can use the function Bind Functionn to do
this.  To define C-N, you could type M-X Bind Function _<esc_> Down Text
Line _<cr_>, and then type C-N.  If you use the function Execute File
often, you could connect it to the command C-X F (not normally
defined).  You could even connect it to the command C-X C-T, replacing
that command's normal definition.  This can be done with the function
Bind Function; or you can use an init file to do it permanently.  See
the section on VUE.INI for more details about "init" files.
