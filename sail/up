COMMENT \HISTORY
AUTHOR,REASON
021  102100000012 \;

COMMENT \
VERSION 17-1(10) 09-JUL-80 by SDD insist segment Globals in dispatch table
VERSION 17-1(7) 22-FEB-80 by SDD use SEGLOC, for segment base, end UPWRT with releases
VERSION 17-1(6) 29-JAN-80 by SDD TENEX: use true segment size for SSAVE 
VERSION 17-1(5) 18-JAN-80 by SDD merge TAILOR, UP.TNX, fix some UP.TNX
VERSION 17-1(4) 5-30-74 BY RLS BUG #SL# REMAIN COMPATIBLE WITH TOPS10
VERSION 17-1(3) 1-11-74 BY JRL CMU SWITCHES
VERSION 17-1(2) 12-8-73 BY JRL REMOVE MOST SPECIAL STANFORD CHARS
VERSION 17-1(1) 11-20-73 BY RFS CHANGE `PRINT' TO `SPRINT' MACRO
VERSION 17-1(0) 7-26-73 BY RHT BY RHT TO KEEP UP THE VERSION NUMBER 
VERSION 15-2(1) 12-2-71 BY DCS INSTALL VERSION NUMBER

\;

SLOF:	SLOFIL
	SIXBIT /REL/
	0
	0

NOTENX <
MYFIL:	FILXXX
STANFO < SIXBIT	/SEG/ ;> SIXBIT	/SHR/	;all but SUAI call these .SHR
	0
	0
>;NOTENX

LOCSM:	LOCSYM
STOPOK:	0	;flag to COPY as to whether to emit error message

TENX <
?RENSW__0	;not for making a TENEX segment
>;TENX

IFNDEF SEGPAG, <
 IFDEF  SEGLOC, <?SEGPAG__SEGLOC/1000>
 IFNDEF SEGLOC, <?SEGPAG__400>		;normal high segment base 400000
>; IFNDEF SEGPAG

IFNDEF SEGLOC, <?SEGLOC__SEGPAG*1000>

IFN SEGPAG*1000-SEGLOC, <PRINTX *SEGLOC and SEGPAG disagree*>

?SEGS__1
?LOWER__0
?UPPER__1
STSW(GLOBSW,0)
CMU <
STSW(GASSW,0)
GGAS <
DEFINE UPPER <GASSUP>
>;GGAS
>;CMU
	TITLE UPPER 
BEGIN UPPER1

A_1
B_2
C_3
D_4
E_5

^UPWRT:
UPGOT:
TENX<	JSYS	RESET
	HRRZ	A,JOBSYM	;DELETE SYMBOL TABLE
>;TENX
NOTENX<	CALL6(0,RESET)		;RESET!
	HLRZ	A,JOBSA		;DELETE SYMBOL TABLE
>;NOTENX
	SETZM	FIRLOC+11	;NO 2D SEGMENT SYMBOL TABLE
	MOVEI	A,-FIRLOC-1(A)
	HRRZM	A,ASIZ		;SIZE OF SEC. SEG. -1
	ADDI	A,SEGLOC	;relocate to second segment
	HRRZM	A,FIRLOC+12	;TOP2 WORD.....
TENX<
;move the code to the desired destination
	move	b,[xwd firloc,segloc]
	blt	b,(a)
;reset the entry vector
	movei	a,400000	;this fork
	move	b,[jrst	400010]	;entry vector indicates JOBSA for start
	jsys	sevec

;;now save it away with SSAVE
gtseg:	hrroi	a,[asciz /
Type name for segment file
assembled name is /]
	jsys	psout

;;figure out T20/TENEX, get appropriate name
	move	b,[xwd 112,11]	;GETTAB to get system type
	calli	b,41		;the only non-emulated CALLI
	 movei	b,030000	;if it failed, must be (very old) TENEX
	ldb	b,[point 6,b,23];TENEX has this field=3, TOPS20 has 4
	setz	a,		;assume TENEX
	caie	b,3
	 movei	a,2		;nope, use TOPS20
	move	a,[filxxx]+1(a)	;get string pointer
	move	c,a		;and save it temporarily for null input
	jsys	psout
	hrroi	a,[asciz /
*/]
	jsys	psout
	hrlzi	a,400003	;output, jfn!jfn, short form
	move	b,[xwd 100,101]	;I/O to primary
	jsys	gtjfn
	 jrst	.+2
	 jrst	namok
	cain	a,600115		;error GJFX33 (null name)
	 jrst	[hrroi	a,[asciz / Using assembled name. /]
		jsys	psout
		hrlzi	a,400001	;output, string pointer
		move	b,c		;pick up name again
		jsys	gtjfn
		 jrst	.+1
		jrst	namok]
	hrroi	a,[asciz /
Can't GTJFN segment file, try again./]
	jrst	gtseg

namok:
;SSAVE the segment
	hrli	a,400000	;this fork
	hrrzi	b,segloc-1000	;calculate -number of pages in high seg
	sub	b,firloc+12	;get last address in upper segment
	ash	b,=9		;put in left half (-page count)
	hrri	b,520000+segpag	;right half: COW,READ,XCT from SEGPAG
	setz	3,
	jsys	ssave
	jsys	rljfn
	 jrst	[hrroi	a,[asciz /
Couldn't RLJFN the segment file???/]
		jsys	psout
		jsys	haltf]
>;TENX

NOTENX,<
	INIT 1,17
	SIXBIT /DSK/		;THE FILE SYSTEM!
	0			;NO BUFFERS.
	SPRINT	<NO DISK TODAY>
	
	HLLZS	MYFIL+1
	SETZM	MYFIL+2 
	SETZM	MYFIL+3

	ENTER	1,MYFIL		;THE VERY SAME.
	SPRINT	<NO DISK TODAY>

	MOVN	A,ASIZ
	HRLI	A,-1(A)		;MAKE UP IOWD.
	HRRI	A,FIRLOC-1	;LIKE SO......
	MOVEM	A,DUMPR
	OUTPUT	1,DUMPR
	RELEASE	1,
>;NOTENX
COMMENT \
 THE INTERNAL SYMBOLS FROM THIS UPPER SEGMENT WILL NOW BE
COPIED INTO THE LOWER SEGMENT .REL FILE, TO PROVIDE UPPER/LOWER
LINKAGES.  THIS ELIMINATES THE NEED FOR THE LOADER TO KNOW ANYTHING 
ABOUT STRANGE SAIL UPPER SEGMENTS
\

	INIT	1,14		;INPUT
	'DSK   '
	IBUF
	SPRINT	<NO DISK TODAY>
	SETZM	SLOF1+2
	SETZM	SLOF1+3
	LOOKUP	1,SLOF1		;GET SAILOW.REL OR SOMETHING
	SPRINT	<WHERE IS LOWER?>
	INIT	2,14		;OUTPUT
	'DSK   '
	XWD	OBUF,0
	SPRINT	<NO DISK TODAY>
	HLLZS	SLOF+1
	SETZM	SLOF+2
	SETZM	SLOF+3
	ENTER	2,SLOF		;PUT SAME
	SPRINT	<CAN'T MAKE NEW SAILOW>
	HLRE	3,JOBSYM	;get size of symbol table
	MOVMS	3
	HRRZ	2,JOBSYM
	ADD	2,3		;PNT PAST END OF SYMBOL TABLE
	HRRZM	2,JOBFF		;IF NO DDT, LOADER HAS WIPED SYMTAB
	INBUF	1,2
	OUTBUF	2,2
	setzm	stopok		;better be able to copy for a while
	HLLZS	SMTAB		;SOME INITIALIZATION (NOT MUCH)
FOR II_1,4 <
	JSP	1,COPY		;COPY FIRST FOUR WORDS (NAME BLOCK)
>
	LSH	3,-1		;#SYMBOLS
NOTYMSHR <
	MOVE	TEMP,[RADIX50 0,UPPER] ;LOOK FOR THIS PROGRAM
LP1:	CAMN	TEMP,(2)
	JRST	LOOP
	SUBI	2,2
	SOJG	3,LP1
	HALT			;DIDN'T FIND IT
>;NOTYMSHR
LOOP:	SUBI	2,2		;BACK UP ONE ENTRY
	JSP	6,COPSYM	;COPY ONE ENTRY IF INTERNAL
	SOJG	3,LOOP		;GET ALL OF THEM
	JSP	6,FORSYM	;FORCE REMAINING OUT
	setom	stopok		;now it is ok to stop.
	JSP	1,COPY		;COPY REST OF FILE
	JRST	.-1		;WILL NOT RETURN ON EOF

COPY:	SOSLE	IBUF+2		;INPUT ROUTINE
	 JRST	OKIN
	INPUT	1,0		;SURELY YOU'VE SEEN THESE BEFORE?
	STATZ	1,20000		;EOF?
	 jrst  [skipn	stopok		;in allowable place?
		 sprint <Unexpected EOF on LOWER.REL>	; no, complain
		releas	1,		;drop LOWER
		releas	2,		;finish up the output file
		TENX < JSYS HALTF ;> CALL6(0,EXIT)	;and lets stop
		]
	STATZ	1,740000	;ERROR?
	 SPRINT	<INPUT DATA ERROR IN SAILOW UPDATE>
OKIN:	ILDB	4,IBUF+1	;GET ONE
OUTWD:	SOSG	OBUF+2		;OUTPUT ROUTINE
	OUTPUT	2,
	IDPB	4,OBUF+1
	JRST	(1)

COPSYM:	LDB	4,[POINT 4,(2),3] ;SYMBOL TYPE
;;was: notymshr[ JUMPE 4,1(6) ] ;ANOTHER PROG, QUIT 
;;was:   tymshr[ JUMPE 4,(6)  ] ;JUST IGNORE PROGRAM 
;;now:
	jumpe	4,(6)		;just ignore program
;;
	SKIPE	LOCSM		;LOAD ALL IF LOCAL SYMBOLS WANTED
	 JRST	 ALLTHM
	CAIE	4,1		;INTERNAL?
	 JRST	(6)		;NO
	HRRZ	4,1(2)
	CAIGE	4,segloc	;Second segment symbol?
	 JRST	(6)		;NO AGAIN
	move	4,1(2)		;lets check it carefully
	cail	4,dspbas
	 cail	4,dspbas+dsplen
NOTYMSHR <
	  jrst	(6)	;Dont copy GLOBALs that point into segment
>;NOTYMSHR
TYMSHR <;Lets harrass us into removing these non-DISPATCH entries
	  jrst .+2
	  jrst	allthm		;yup ... its in the dispatch table
	SPRINT <
GLOBAL Symbol in HIGH-SEG, but not DISPATCH table: >
	move	4,(2)		;print as radix-50
	tlz	4,740000	;clear GLOBAL bit
	push	p,6		;recursive print--eventually go to (6)
pr5:	idivi	4,50
	hrlm	5,(p)
	jumpe	4,.+2
	 pushj	p,pr5
	hlrz	5,(p)
	cain	5,0
	 movei	"_"	;show blanks as underscores
	caig	5,12
	 addi	5,"0"-1
	caig	5,44
	 addi	5,"A"-13
	caig	5,47
	 move	5,["."
		   "$"
		   "%"]-45(5)
	outchi	(5)
	popj	 p,
;;>;TYMSHR

ALLTHM:	AOS	SMTAB		;MAKE ROOM FOR 2
	AOS	5,SMTAB
	HRRZS	5		;INDEX TO SYMBOL BLOCK
	MOVE	4,(2)
	MOVEM	4,SMTAB(5)
	MOVE	4,1(2)		;MAKE THE TRANSFERS
	MOVEM	4,SMTAB+1(5)
	CAIGE	5,22		;FULL?
	JRST	(6)		;NO, DONE
FORSYM:	HRRZ	5,SMTAB		;GET COUNT
	JUMPE	5,(6)		;RETURN IF EMPTY
	MOVNI	5,2(5)		;FOR BLOCK TYPE AND RELOC WORDS
	HRLS	5		;AOBJN PTR
	HRRI	5,SMTAB
OLP:	MOVE	4,(5)		;WORD TO GO OUT
	JSP	1,OUTWD		;OUT IT GOES
	AOBJN	5,OLP		;GET ALL
	HLLZS	SMTAB
	JRST	(6)		;THAT'S ALL
SMTAB:	XWD	2,0		;BLOCK TYPE (SYMBOLS)
	0			;NEVER RELOCATE THESE
	BLOCK	22		;ROOM FOR SYMBOLS

IBUF:	BLOCK	3
OBUF:	BLOCK	3

;SLOF, MYFIL ARE NOW IN FILE `TAILOR', LOADED AHEAD OF THIS

SLOF1:	SIXBIT	/LOWER/		;ALWAYS
	SIXBIT	/REL/		;LOWER FOR INPUT
	0
	0

DUMPR:	BLOCK	2
	ASIZ:	0
	AONE:	XWD FIRLOC,segloc

	LIT
FIRLOC:

BEND UPPER1

?%FIRLOC:
PHASE segloc		;MAGIC ....
	0
	REPEAT 10,<0>	;REMAIN COMPATIBLE (?) WITH DEC -- 10 WORD.
	0		;400011 -- JOBSYM POINTER.
?TOP2:	0		;400012 -- TOP SEC SEG ADDRESS.

GLOB <
?GLBPNT:	0	;400013
	BLOCK GLBAR	;400014 -- GLOBAL AREA ..... !!!!
>;GLOB

CMU <
 GGAS <
?GLBPNT:	0	;400013
	BLOCK	GLBAR	;400014
GAS:0
?GAS_GAS
GASS_GAS
INTERNAL GAS,GASS
 >;GGAS
>;CMU
INTERNAL %ALLOC

    