begin "MAKLIB"
require "(SAILIB)sail.def" source!file;
!get!module(randio);
integer b!fileSpec, pass!White, pass!Token, b!page, b!line;

simple procedure doBreaks;
begin	string str; integer ch;
setbreak(b!fileSpec_getbreak, ":", #ht&#sp, "INS"); 
setbreak(b!page_getbreak, #ff, null,"INS");
setbreak(b!line_getbreak, #lf&#ff,#cr,"INS");
setbreak(pass!white_getbreak, #cr&#lf&#ff&#ht&#sp, null, "XNR"); 
setbreak(pass!token_getbreak,
	#ctrl(["X"]) & "!ABCDEFGHIJKLMNOPQRSTUVWXYZ.0123456789",
	null, 
	"XKR"); 
! setbreak(b!noWhite!line_getbreak, #lf&#ff, #cr&#ht&#sp, "INS"); 
! str_null;
! for ch_0 upto 127 do str_str&ch;
! setbreak(b!skipPage_getbreak, #ff, str,"INS");
! str_null;
end;
require doBreaks initialization;

! variables associated with the major input file:;
integer inch, ibrk, ieof, page, linno, sosnum;

string procedure setInch( string fileSpec ); 
begin	string dev,nam;
	integer brk;
	boolean flag;
dev_ "DSK";
nam_ scan(fileSpec,b!fileSpec,brk);
if brk = ":" 
 then begin	string rest;
	dev_ nam;
	nam_ scan(fileSpec,b!fileSpec,brk);
	if brk = ":" then return("Too many Devices specified");
      end;
if inch=0 then inch_getchan;
open(inch,dev, '10000, 4,0, 200,ibrk,ieof_true); ! bad file name quiet;
if ieof
 then begin 
	release(inch); 
	inch_0;
	return("OPEN error on device " & dev);
      end;
lookup(inch,nam,flag);
if flag then return("LOOKUP error on file " & dev & ":" & nam);
setpl(inch, linno, page, sosnum);
page_1; linno_sosnum_0;
return(null);
end;
integer back!binary, back!page, back!line, back!sos;

string procedure nextText;
! reads the next non-blank line from INCH (blanks are suppressed)
! bin,pag,lin, and sos are the binary, text page,line,and sos numbers
! for the first (non-white) character of that line
;
begin
do input(inch,pass!white) until ibrk or ieof;
back!binary_ rchptr(inch); 
back!page_ page; 
back!line_ linno;
back!sos_ sosnum;
return(input(inch,b!line));
end;

simple procedure printBacks( string line );
print(crlf&"p", back!page, "-", back!line, "(", cvstr(back!sos),
	")"& #ht& "*", back!binary, #ht, line );

procedure Mapit;
begin	boolean inCompile; string line,word1;
inCompile_ false;
while length(line_ nextText)
   do begin
	word1_ scan(line,pass!Token,!skip!);
	if equ(word1,"BSAIL")
	 then begin 
		inCompile_ true;
		printBacks( line );
	      end
	 else if not inCompile then begin
		setprint(null,"T");
		printBacks( word1 );
		print( "<-?->", line, 
			crlf& "happened when expecting a BSAIL.");
	      end;
	do input(inch,b!page) until ibrk or ieof;
      end;
end;
string txt;

while true do begin
	print(crlf& "Now map file: ");
	if length(txt_ setInch(inchwl))
	 then print(txt)
	 else mapit;
      end;
END "MAKLIB"
$
