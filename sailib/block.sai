Entry
	Block;

Begin

Define Byte(S,a,b,c,d,e,f,g,Name)=
    "(((((((('"&"a) Lsh S + '"&"b) Lsh S + '"&"c) Lsh S + '"&"d)
     Lsh S + '"&"e) Lsh S + '"&"f) Lsh S + '"&"g) Lsh 1)";

Preset!With
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "00"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "01"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "02"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "03"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "04"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "05"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "06"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "07"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "10"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "11"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "12"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "13"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "14"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "15"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "16"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "17"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "20"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "21"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "22"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "23"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "24"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "25"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "26"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "27"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "30"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "31"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "32"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "33"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "34"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "35"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "36"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  "37"),
    BYTE(5, 00, 00, 00, 00, 00, 00, 00,  " "),
    BYTE(5, 04, 04, 04, 04, 04, 00, 04,  "!"),
    BYTE(5, 12, 12, 00, 00, 00, 00, 00,  "Quote"),
    BYTE(5, 12, 12, 37, 12, 37, 12, 12,  "#"),
    BYTE(5, 04, 17, 24, 37, 05, 36, 04,  "$"),
    BYTE(5, 31, 31, 02, 04, 10, 23, 23,  "%"),
    BYTE(5, 10, 24, 10, 24, 23, 22, 15,  "&"),
    BYTE(5, 06, 02, 04, 00, 00, 00, 00,  "'"),
    BYTE(5, 04, 10, 20, 20, 20, 10, 04,  "("),
    BYTE(5, 04, 02, 01, 01, 01, 02, 04,  ")"),
    BYTE(5, 00, 25, 16, 33, 16, 25, 00,  "*"),
    BYTE(5, 00, 04, 04, 37, 04, 04, 00,  "+"),
    BYTE(5, 00, 00, 00, 00, 00, 06, 02,  ","),
    BYTE(5, 00, 00, 00, 37, 00, 00, 00,  "-"),
    BYTE(5, 00, 00, 00, 00, 00, 06, 06,  "."),
    BYTE(5, 00, 00, 01, 02, 04, 10, 20,  "/"),
    BYTE(5, 16, 21, 23, 25, 31, 21, 16,  "0"),
    BYTE(5, 04, 14, 04, 04, 04, 04, 16,  "1"),
    BYTE(5, 16, 21, 01, 02, 04, 10, 37,  "2"),
    BYTE(5, 16, 21, 01, 02, 01, 21, 16,  "3"),
    BYTE(5, 22, 22, 22, 37, 02, 02, 02,  "4"),
    BYTE(5, 37, 20, 34, 02, 01, 21, 16,  "5"),
    BYTE(5, 16, 20, 20, 36, 21, 21, 16,  "6"),
    BYTE(5, 37, 01, 01, 02, 04, 10, 20,  "7"),
    BYTE(5, 16, 21, 21, 16, 21, 21, 16,  "8"),
    BYTE(5, 16, 21, 21, 17, 01, 01, 16,  "9"),
    BYTE(5, 00, 06, 06, 00, 06, 06, 00,  ":"),
    BYTE(5, 00, 06, 06, 00, 06, 06, 02,  ";"),
    BYTE(5, 02, 04, 10, 20, 10, 04, 02,  "<"),
    BYTE(5, 00, 00, 37, 00, 37, 00, 00,  "="),
    BYTE(5, 10, 04, 02, 01, 02, 04, 10,  ">"),
    BYTE(5, 16, 21, 01, 02, 04, 00, 04,  "?"),
    BYTE(5, 16, 21, 27, 25, 25, 23, 10,  "@"),
    BYTE(5, 16, 21, 21, 21, 37, 21, 21,  "A"),
    BYTE(5, 36, 21, 21, 36, 21, 21, 36,  "B"),
    BYTE(5, 17, 20, 20, 20, 20, 20, 17,  "C"),
    BYTE(5, 36, 21, 21, 21, 21, 21, 36,  "D"),
    BYTE(5, 37, 20, 20, 36, 20, 20, 37,  "E"),
    BYTE(5, 37, 20, 20, 36, 20, 20, 20,  "F"),
    BYTE(5, 17, 20, 20, 20, 27, 21, 16,  "G"),
    BYTE(5, 21, 21, 21, 37, 21, 21, 21,  "H"),
    BYTE(5, 16, 04, 04, 04, 04, 04, 16,  "I"),
    BYTE(5, 01, 01, 01, 01, 21, 21, 16,  "J"),
    BYTE(5, 21, 21, 22, 34, 22, 21, 21,  "K"),
    BYTE(5, 20, 20, 20, 20, 20, 20, 37,  "L"),
    BYTE(5, 21, 33, 25, 21, 21, 21, 21,  "M"),
    BYTE(5, 21, 21, 31, 25, 23, 21, 21,  "N"),
    BYTE(5, 16, 21, 21, 21, 21, 21, 16,  "O"),
    BYTE(5, 36, 21, 21, 36, 20, 20, 20,  "P"),
    BYTE(5, 16, 21, 21, 21, 25, 22, 15,  "Q"),
    BYTE(5, 36, 21, 21, 36, 24, 22, 21,  "R"),
    BYTE(5, 17, 20, 20, 16, 01, 01, 36,  "S"),
    BYTE(5, 37, 04, 04, 04, 04, 04, 04,  "T"),
    BYTE(5, 21, 21, 21, 21, 21, 21, 37,  "U"),
    BYTE(5, 21, 21, 21, 21, 21, 12, 04,  "V"),
    BYTE(5, 21, 21, 21, 21, 25, 33, 21,  "W"),
    BYTE(5, 21, 21, 12, 04, 12, 21, 21,  "X"),
    BYTE(5, 21, 21, 12, 04, 04, 04, 04,  "Y"),
    BYTE(5, 37, 01, 02, 04, 10, 20, 37,  "Z"),
    BYTE(5, 14, 10, 10, 10, 10, 10, 14,  "["),
    BYTE(5, 00, 00, 20, 10, 04, 02, 01,  "\"),
    BYTE(5, 06, 02, 02, 02, 02, 02, 06,  "]"),
    BYTE(5, 00, 04, 16, 25, 04, 04, 00,  "^"),
    BYTE(5, 00, 04, 10, 37, 10, 04, 00,  "_"),
    BYTE(5, 14, 10, 04, 00, 00, 00, 00,  "`"),
    BYTE(5, 00, 00, 14, 22, 36, 22, 22,  "a"),
    BYTE(5, 00, 00, 34, 22, 34, 22, 34,  "b"),
    BYTE(5, 00, 00, 16, 20, 20, 20, 16,  "c"),
    BYTE(5, 00, 00, 34, 22, 22, 22, 34,  "d"),
    BYTE(5, 00, 00, 36, 20, 34, 20, 36,  "e"),
    BYTE(5, 00, 00, 36, 20, 34, 20, 20,  "f"),
    BYTE(5, 00, 00, 16, 20, 26, 22, 16,  "g"),
    BYTE(5, 00, 00, 22, 22, 36, 22, 22,  "h"),
    BYTE(5, 00, 00, 16, 04, 04, 04, 16,  "i"),
    BYTE(5, 00, 00, 02, 02, 02, 22, 14,  "j"),
    BYTE(5, 00, 00, 22, 24, 30, 24, 22,  "k"),
    BYTE(5, 00, 00, 10, 10, 10, 10, 16,  "l"),
    BYTE(5, 00, 00, 21, 33, 25, 21, 21,  "m"),
    BYTE(5, 00, 00, 22, 32, 36, 26, 22,  "n"),
    BYTE(5, 00, 00, 14, 22, 22, 22, 14,  "o"),
    BYTE(5, 00, 00, 34, 22, 34, 20, 20,  "p"),
    BYTE(5, 00, 00, 14, 22, 22, 24, 12,  "q"),
    BYTE(5, 00, 00, 34, 22, 34, 24, 22,  "r"),
    BYTE(5, 00, 00, 16, 20, 14, 02, 34,  "s"),
    BYTE(5, 00, 00, 37, 04, 04, 04, 04,  "t"),
    BYTE(5, 00, 00, 22, 22, 22, 22, 16,  "u"),
    BYTE(5, 00, 00, 21, 21, 21, 12, 04,  "v"),
    BYTE(5, 00, 00, 21, 21, 21, 25, 12,  "w"),
    BYTE(5, 00, 00, 21, 12, 04, 12, 21,  "x"),
    BYTE(5, 00, 00, 21, 12, 04, 04, 04,  "y"),
    BYTE(5, 00, 00, 36, 06, 14, 30, 36,  "z"),
    BYTE(5, 06, 10, 10, 20, 10, 10, 06,  "{"),
    BYTE(5, 04, 04, 04, 04, 04, 04, 04,  "|"),
    BYTE(5, 14, 02, 02, 01, 02, 02, 14,  "}"),
    BYTE(5, 00, 00, 10, 25, 02, 00, 00,  "~"),
    BYTE(5, 37, 37, 37, 37, 37, 37, 37,  "Del");

    Own Integer Safe Array Character[0:'177];

Internal Procedure BLOCK(String Text; Integer Chan, Width(1), Height(0);
		 Integer Cipher(0), Left!Margin(0), Right!Edge(0),
				    Top!Margin(0), Bottom!Margin(0) );
Begin "BLOCK"
    Safe String Array Line[0:6];
    String On, Off, Off!chr, Margin, LMargin, RMargin;
    Integer L, C, W, Ch, Right!Margin;

Define CRLF="'15&'12";
Define Repeat(Var,Count)= "For Var _ Count-1 Step -1 until 0 Do";

Require "(SAILIB)TXTSUB.REQ" Source!file;


If Height = 0 then Height _ Width;
If Right!Edge = 0 then Right!Edge _ (Length(Text)*Width*7) + Left!Margin;
Right!Margin _ Right!Edge - (Left!Margin +  (Length(Text)*Width*7));
Off _ DUPL(Off!chr_If Cipher < 0 then -Cipher else " ", Width);
Margin  _ If Off!chr leq " " then null else Dupl(Off!chr, Right!Edge);
LMargin _ If Left!Margin leq 0 then null else Dupl(Off!chr, Left!Margin);
RMargin _ If Right!Margin leq 0 then null else Dupl(Off!chr, Right!Margin);
Arrclr(Line);

While Ch _ Lop(Text) Do
Begin "A character at a time"
    W _ Character[Ch];
    On  _ DUPL(If Cipher > 0 then Cipher
		 else If Cipher < 0 then " " else Ch, Width);
    Repeat( L , 7 )
    Begin "Each line"
	Repeat( C , 5 )
	Begin "Each position"
	    Line[L] _ Line[L] & (If W < 0 then On else Off);
	    W _ W Lsh 1;
	End "Each position";
	Line[L] _ Line[L] & Off & Off;
    End "Each line";
End "A character at a time";

If Top!Margin > 0 then Repeat( L , Top!Margin ) Cprint(Chan, Margin, CRLF);
Repeat( L , 7 )
    Repeat( C, Height )
	Cprint(Chan, LMargin, Line[L], RMargin, CRLF );
If Bottom!Margin > 0 then
    Repeat( L, Bottom!Margin ) Cprint(Chan, Margin, CRLF);
Arrclr(Line);
Margin _ LMargin _ RMargin _ On _ Off _ Null;
Return;

End "BLOCK";
End;
