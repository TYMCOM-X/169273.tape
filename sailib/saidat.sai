ENTRY RDDATE,STDATE;
BEGIN "SAIDAT"
PRELOAD!WITH "JANUARY","FEBRUARY","MARCH","APRIL","MAY","JUNE",
	"JULY","AUGUST","SEPTEMBER","OCTOBER","NOVEMBER",
	"DECEMBER";
OWN STRING ARRAY MONTHS[1:12];
SIMPLE INTERNAL BOOLEAN PROCEDURE RDDATE(REFERENCE INTEGER DATE,
	OVSCAN; VALUE INTEGER FSTSCN; REFERENCE STRING STR);
BEGIN

COMMENT THIS PROCEDURE READS THE DATE FROM THE STRING PASSED.
	IT USES SCANU AND STRSRC. IT ASSUMES THAT SCANU
	HAS BEEN CALLED BEFORE IT AND THE VALUE RETURNED BY
	SCANU IS PASSED IN FSTSCN. IT CALLS SCANU ONE EXTR TIME
	AND RETURNS THE VALUE IN OVSCAN. THE DATE IS RETURNED
	IN DATE IN THE STANDARD DEC DATE FORMAT

		((YR-64)*12+MONTH-1)*31+DAY-1
	IT ACCEPTS DATES IN THE FOLLOWING FORMATS
		MM-DD-YY
		DD-MONTH-YY
		MONTH DD,YY
	DD IS THE DAY (AS A NUMBER) MM THE MONTH (AS A NUMBER)
	MONTH THE NAME FOR THE MONTH (OR A SHORTENED VERSION AS
	SEP FOR SEPTEMBER). THE - MAY BE OMITTED OR REPLACED
	BY A /. THE YEAR (YY) MAY BE EITHER A 2 DIGIT YEAR AS 76
	OR A 4 DIGIT YEAR AS 1976;

EXTERNAL SIMPLE BOOLEAN PROCEDURE SCANSS(BOOLEAN B);
EXTERNAL SIMPLE BOOLEAN PROCEDURE SCANSN(BOOLEAN B);
EXTERNAL SIMPLE INTEGER PROCEDURE SCANU(REFERENCE STRING STR);
EXTERNAL INTEGER SCNVAL;
EXTERNAL STRING ACCUM;
EXTERNAL SIMPLE INTEGER PROCEDURE STRSRC(STRING ARRAY NAMES;
	STRING LOOK; BOOLEAN EXACT);
INTEGER MON,DAY,YR;
BOOLEAN BOOL,BOOL2,BOOL3;
PRELOAD!WITH 31,29,31,30,31,30,31,31,30,31,30,31;
OWN INTEGER ARRAY MONDYS[1:12];

SIMPLE BOOLEAN PROCEDURE RSTSCN;
BEGIN SCANSN(BOOL3); RETURN(SCANSS(BOOL2)) END "RSTSCN";

SIMPLE INTEGER PROCEDURE DSHSCN(REFERENCE STRING STR);
BEGIN INTEGER I;
IF (I_SCANU(STR))=3 THEN IF NOT "-" NEQ SCNVAL NEQ "/" THEN
   RETURN(SCANU(STR)) ELSE RETURN(0) ELSE RETURN(I)
END "DSHSCN";

BOOL2_SCANSS(FALSE); BOOL3_SCANSN(FALSE);
CASE FSTSCN MIN 3 OF BEGIN
[0][3] RETURN(RSTSCN);
 COMMENT WE KNOW RSTSCN WILL RETURN FALSE AT THIS POINT;
[1] IF (MON_STRSRC(MONTHS,ACCUM,BOOL))=0 OR SCANU(STR) NEQ 2
   OR NOT(MONDYS[MON] GEQ (DAY_SCNVAL)>0) OR SCANU(STR) NEQ 3 OR
   SCNVAL NEQ "," OR SCANU(STR) NEQ 2
    THEN RETURN(RSTSCN);
[2] BEGIN DAY_SCNVAL;
   CASE DSHSCN(STR) OF BEGIN
   [0][3] RETURN (RSTSCN);
   [2] IF NOT(12 GEQ (MON_DAY)>0) OR
	NOT(MONDYS[MON] GEQ (DAY_SCNVAL)>0) OR
	DSHSCN(STR) NEQ 2 THEN RETURN(RSTSCN);
   [1] IF (MON_STRSRC(MONTHS,ACCUM,BOOL))=0 OR NOT(MONDYS[MON]
	GEQ DAY>0) OR DSHSCN(STR) NEQ 2
	THEN RETURN(RSTSCN)
   END
  END
END;
IF NOT(44 GEQ (YR_IF SCNVAL>100 THEN SCNVAL-1964 ELSE SCNVAL-64)
   GEQ 0) THEN RETURN(RSTSCN);
RSTSCN;
OVSCAN_SCANU(STR); DATE_(YR*12+MON-1)*31+DAY-1;
RETURN (TRUE) END "RDDATE";
SIMPLE INTERNAL STRING PROCEDURE STDATE(INTEGER DATE,FLAG);
BEGIN

COMMENT THIS PROCEDURE TAKES AN INTEGER DATE IN DEC DATE FORMAT
	AND GENERATES A STRING FROM IT. THE INTEGER FLAG CONTROLS
	THE FORMATTING FOR THE STRING RETURNED AS FOLLOWS:

	BITS 33-35 (FLAG LAND '7) IS THE GENERAL FORMAT
	 (DD INDICATES DAY AS A NUMBER MM MONTH AS A NUMBER
	  MON MONTH AS TEXT AND YY YEAR AS A NUMBER (2 OR 4 DIGITS)
	 0 MM-DD-YY
	 1 DD-MON-YY
	 2 DD-MM-YY
	 3 MON DD,YY
	 UNASSIGNED FORMATS ARE THE SAME AS 1.
	BITS 29-32 (FLAG LSH -3 LAND '17) ARE THE SIZE
	 OF THE MON STRING (0 IS FULL WIDTH) THIS IS THE MAX
	 WIDTH.
	BIT 28 (FLAG LAND '200) INDICATES THAT THE YEAR IS
	 4 DIGITS NOT 2
	BITS 26-27 (FLAG LSH -8 LAND '3) GIVE A CHR TO REPLACE
	 THE - IN FORMATS 0,1, AND 2: 0 IS - 1 IS / 2 IS BLANK
	 3 IS UNDEFINED (BLANK);

INTEGER DAY,MON,YR,I,J; STRING DAYS,MONS,YRS,SMON,ST;
DAY_DATE MOD 31+1; MON_(DATE DIV 31) MOD 12+1;
YR_DATE DIV (31*12)+64;
IF FLAG LAND '200 NEQ 0 THEN YR_YR+1900;
GETFORMAT(I,J); SETFORMAT(0,0);
DAYS_CVS(DAY); MONS_CVS(MON); YRS_CVS(YR); SETFORMAT(I,J);
ST_CASE (FLAG LSH -8) LAND '3 OF ("-","/"," "," ");
SMON_MONTHS[MON];
IF (I_(FLAG LSH -3) LAND '17) NEQ 0 THEN SMON_SMON[1 FOR I];
CASE FLAG LAND '7 OF BEGIN
   [0] RETURN (MONS&ST&DAYS&ST&YRS);
   [1][4][5][6][7] RETURN (DAYS&ST&SMON&ST&YRS);
   [2] RETURN (DAYS&ST&MONS&YRS);
   [3] RETURN (SMON&" "&DAYS&","&YRS) END
END "STDATE";
END "SAIDAT"
