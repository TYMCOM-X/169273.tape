ENTRY LP4MAT;
BEGIN "LP4MAT"
COMMENT THE FOLLOWING PROCEDURE IS USED TO OBTAIN A SYMBOLIC LISTING
	OF THE GLOBAL AND LOCAL LEAP MODELS. IT FIRST ASKS FOR A 
	FILENAME TO WHICH THE LISTING SHOULD BE DIRECTED. IF THE USER 
	RESPONDS WITH THE CHARACTERS "T","T","Y" FOLLOWED BY A CARRIAGE
	RETURN THE OUTPUT WILL BE DIRECTED TO HIS TERMINAL, OTHERWISE 
	TO THE DISK FILE WITH THE NAME HE HAS TYPED. THE FORMAT IS:
	THE ITEM NAMES(PNAME OR "CVI(item #)") FOLLOWED BY THE PROPS, 
	DATUM TYPE FOLLOWED BY THE DATUM(IF ANY).

	THE CALLING SEQUENCE IS SIMPLY:

		LP4MAT

	THIS PROCEDURE MUST BE LOADED WITH PROCEDURES OUTTTY, AND ENDOUT
	WHICH ARE CONTAINED IN FILE IOMODS.SAI.

	ALSO REQUIRED ARE AMUNGE,UNMUNGE, CONTAINED IN
	MUNGE.SAI.

	SEPTEMBER 1972. JIM LOW, STANFORD ARTIFICIAL INTELLIGENCE LAB.;


REQUIRE "[][]" DELIMITERS;
DEFINE GLOBSW _ 0; COMMENT NORMALLY NO GLOBAL MODEL STUFF;


DEFINE	GLOB = [ IFC GLOBSW THENC ]
,	NOGLOB = [ IFC NOT GLOBSW THENC ]
;
let ENDGLOB = ENDC, ENDNOGLOB = ENDC;
define crlf=[('15&'12)];
let outtty=print;

COMMENT TYPEIT CODES;
comment REQUIRE "TYPEIT.HDR" SOURCE!FILE;
define	!untyped=1,!bracketed=2,!string=3,!real=4,!integer=5,!set=6
,	!list=7,!procedure=8,!process=9,!event=10,!context=11
,	!reference=12,!record!pointer=13,!label=14,!record!class=15
,	!long!real=17,!string!array=23,!real!array=24,!integer!array=25
,	!set!array=26,!list!array=27,!context!array=31
,	!record!pointer!array=33,!long!real!array=37
;

STRING simple PROCEDURE ITNAME(ITEMVAR X);
   BEGIN INTEGER FLAG; STRING PNAME;
      PNAME_CVIS(X,FLAG);
      return( IF FLAG THEN "CVI(" & CVS(CVN(X)) & ")"  ELSE PNAME);
   END;

simple procedure ptrip(itemvar a,b,c );
  print( CRLF, ITNAME(a), " XOR ", ITNAME(b) , " EQV ", ITNAME(c) );

PROCEDURE OUTLST(LIST X);
   WHILE LENGTH(X) DO print("  ", ITNAME(LOP(X)) );

simple procedure prtlst( LIST foo );
  BEGIN 
     print( CRLF & "{{");
     outlst( foo );
     print( "  }}" );
  END;

simple procedure prtset( SET foo );
  BEGIN 
     print( CRLF & "{");
     outlst( foo );
     print( "  }" );
  END;
INTERNAL PROCEDURE LP4MAT;
BEGIN "LP4MAT"
comment "IOMODS.HDR" SOURCE!FILE;
comment "MUNGE.REL" LOAD!MODULE;
   EXTERNAL INTEGER PROCEDURE AMUNGE(ITEMVAR X);
   EXTERNAL PROCEDURE UNMUNG(ITEMVAR X);
	
GLOB EXTERNAL INTEGER ginftb; ENDGLOB
EXTERNAL INTEGER inftb;
require "SYS:GOGTAB.DEF" source!file;
external integer array gogtab[0:endren];

   INTEGER FLAG,ITMMAX,TYPE,I,J,K;
   ITEMVAR ITMVR;
   LIST LISTV;
COMMENT FIRST OUTPUT THE LOCAL MODEL;

IF INFTB = 0 THEN print( "NO LOCAL LEAP MODEL" )
ELSE BEGIN "Local"
   ITMMAX_ GOGTAB[MAXITM];
   FOR I _ 1 STEP 1 UNTIL ITMMAX DO
      IF (TYPE_TYPEIT(CVI(I))) THEN
         BEGIN "if stmt"
	    ITMVR_ CVI(I);
	    print( CRLF & CRLF & "#ITEM##" 
		& CRLF & "#PNAME#", ITNAME(ITMVR)
		, CRLF & "#PROPS#", PROPS(ITMVR)
		, CRLF & "#DATUM#" );
	    CASE TYPE OF
	    BEGIN "case stmt"
	    [!UNTYPED] print( "UNTYPED ITEM" );
	    [!BRACKETED] begin print( "BRACKETED TRIPLE" );
			ptrip( FIRST(ITMVR), SECOND(ITMVR), 
				third(itmvr) );
			end;
	    [!STRING] 	print( "STRING" & CRLF, DATUM(ITMVR,STRING) );
	    [!REAL]	print( "REAL" & CRLF, CVF(DATUM(ITMVR,REAL)));
	    [!INTEGER]	print( "INTEGER" & CRLF, DATUM(ITMVR,INTEGER) );
	    [!SET] BEGIN print( "SET" ); 
			prtset( DATUM(ITMVR,SET) );
		   END;
	    [!LIST] BEGIN print( "LIST" ); 
			prtlst( DATUM(ITMVR,LIST) );
		   END;
            [!PROCEDURE] BEGIN STRING PNAME;
			 START!CODE	comment get PDA;
				HRRZ	1,access(DATUM(ITMVR,INTEGER));
				HRROI	2,2(1);
				MOVEI	3,PNAME;
				POP	2,(3);
				POP	2,-1(3);
			 END;
			 print( "PROCEDURE" & CRLF, PNAME );
		   END;
	    [!PROCESS]	print( "PROCESS" & CRLF & "PROCESSES NOT PRINTED");
	    [!EVENT]	print( "EVENT" & CRLF & "EVENTS NOT PRINTED" );
	    [!CONTEXT]	print( "CONTEXT" & CRLF & "CONTEXTS NOT PRINTED.");
	    [!STRING!ARRAY] 
		   BEGIN print( "STRING ARRAY" );
			 J_AMUNGE(ITMVR);
			 FOR K_ 1 STEP 1 UNTIL J DO
			     print( CRLF, DATUM(ITMVR,STRING ARRAY)[K]);
			 UNMUNG(ITMVR);
		   END;
	      [!REAL!ARRAY] 
		   BEGIN print( "REAL ARRAY" );
			 J_AMUNGE(ITMVR);
			 FOR K _ 1 STEP 1 UNTIL J DO
			     print( CRLF, CVF(DATUM(ITMVR,REAL ARRAY)[K]));
			 UNMUNG(ITMVR);
		   END;
	      [!INTEGER!ARRAY] 
		   BEGIN print( "INTEGER ARRAY" );
			 J_AMUNGE(ITMVR);
			 FOR K _ 1 STEP 1 UNTIL J DO
			     print( CRLF, DATUM(ITMVR,INTEGER ARRAY)[K]);
			 UNMUNG(ITMVR);
		   END;
	      [!SET!ARRAY] 
		   BEGIN print( "SET ARRAY");
			 J_AMUNGE(ITMVR);
			 FOR K _ 1 STEP 1 UNTIL J DO
				prtset( DATUM(ITMVR,SET ARRAY)[K] );
			 UNMUNG(ITMVR);
		   END;
	      [!LIST!ARRAY] 
		   BEGIN print( "LIST ARRAY");
			 J_AMUNGE(ITMVR);
			 FOR K_ 1 STEP 1 UNTIL J DO
				prtlst(DATUM(ITMVR,LIST ARRAY)[K]);
			 UNMUNG(ITMVR);
		   END;
	      [!CONTEXT!ARRAY] print( "CONTEXT ARRAY" 
				& CRLF & "CONTEXTS NOT PRINTED");
	      ELSE print( "INVALID TYPEIT CODE ", type )
	    END "case stmt";
	END "if stmt";

   COMMENT OUTPUT LOCAL ASSOCIATIONS;

   OUTTTY(CRLF & CRLF & CRLF & CRLF & "#ASSOCIATIONS#");

   begin itemvar one,two;
   FOR I _ 1 STEP 1 UNTIL ITMMAX DO
      IF TYPEIT(CVI(I)) THEN
	 FOREACH one,two | one XOR two EQV CVI(I) 
		DO ptrip(one,two,cvi(i));
   print( CRLF );
   end;
  END "Local";

GLOB
IF GINFTB = 0 THEN print( CRLF & "NO GLOBAL LEAP MODEL" & CRLF )
ELSE BEGIN "Global"
   USERCON(MAXITM,ITMMAX,-2); COMMENT GET LOWEST GLOBAL ITEM NUMBER;
   FOR I _ ITMMAX STEP 1 UNTIL 4095 DO
      IF (TYPE_TYPEIT(CVI(I))) THEN
	BEGIN "global if"
	    OUTTTY(CRLF & CRLF& "#GLOBAL ITEM#");
	    IITMVR_IAITMVR_RAITMVR_RITMVR_ITMVR_SITMVR_CVI(I);
	    SAITMVR_LITMVR_LAITMVR_ITMVR;
	    OUTTTY(CRLF&"#PNAME#"&ITNAME(CVI(I)));
	    OUTTTY(CRLF&"#PROPS#"&CVS(GLOBAL PROPS(IITMVR)));
	    OUTTTY(CRLF & "#DATUM#");
	    CASE TYPE OF
	    BEGIN "case stmt"
	    [!UNTYPED] print( "UNTYPED ITEM");
	    [!BRACKETED] print( "BRACKETED TRIPLE"
			    & CRLF, ITNAME(GLOBAL FIRST(ITMVR))
			    , " XOR ", ITNAME(GLOBAL SECOND(ITMVR))
			    , " EQV ", ITNAME(GLOBAL THIRD(ITMVR)) );
	    [!STRING] USERERR(0,1,"DRYROT- GLOBAL STRING?");
	    [!REAL]    print( "REAL" & CRLF, CVF(GLOBAL DATUM(RITMVR)));
	    [!INTEGER] OUTTTY("INTEGER"&CRLF&CVS(GLOBAL DATUM(IITMVR)));
	    [!SET] BEGIN OUTTTY("SET");
			    OUTTTY(CRLF&"{");
			    OUTLST(GLOBAL DATUM(LITMVR));
			    OUTTTY("  ~");
		      END;
	    [!LIST] BEGIN OUTTTY("LIST");
			    OUTTTY(CRLF&"{{");
			    OUTLST(GLOBAL DATUM(LITMVR));
			    OUTTTY("  ~~");
		      END;
	    [!PROCEDURE] USERERR(0,1,"DRYROT- GLOBAL PROCEDURE ITEM");
	    [!PROCESS] USERERR(0,1,"DRYROT- GLOBAL PROCESS ITEM");
	    [!EVENT] USERERR(0,1,"DRYROT- GLOBAL EVENT ITEM");
	    [!CONTEXT] USERERR(0,1,"DRYROT- GLOBAL CONTEXT ITEM");
	    [!STRING!ARRAY] USERERR(0,1,"DRYROT LP4MAT-GLOBAL STRING ARRAY?");
	    [!REAL!ARRAY] BEGIN OUTTTY("REAL ARRAY");
			    J_AMUNGE(RAITMVR);
			    FOR K _ 1 STEP 1 UNTIL J DO
				OUTTTY(CRLF&CVF(GLOBAL DATUM(RAITMVR)[K]));
			    UNMUNG(RAITMVR);
		      END;
	    [!INTEGER!ARRAY] BEGIN OUTTTY("INTEGER ARRAY");
			    J_AMUNGE(IAITMVR);
			    FOR K _ 1 STEP 1 UNTIL J DO
				OUTTTY(CRLF&CVS(GLOBAL DATUM(IAITMVR)[K]));
			    UNMUNG(IAITMVR);
		      END;
	    [!SET!ARRAY] BEGIN OUTTTY("SET ARRAY");
			    J_AMUNGE(LAITMVR);
			    FOR K _ 1 STEP 1 UNTIL J DO
			    BEGIN OUTTTY(CRLF&"{");
				  OUTLST(GLOBAL DATUM(LAITMVR)[K]);
				  OUTTTY("  ~");
			    END;
			    UNMUNG(LAITMVR);
		      END;
	    [!LIST!ARRAY] BEGIN OUTTTY("LIST ARRAY");
			    J_AMUNGE(LAITMVR);
			    FOR K_ 1 STEP 1 UNTIL J DO
			    BEGIN OUTTTY(CRLF&"{{");
				  OUTLST(GLOBAL DATUM(LAITMVR)[K]);
				  OUTTTY( "  ~~");
			    END;
			    UNMUNG(LAITMVR);
		      END;
	    [!CONTEXT!ARRAY] USERERR(0,1,"DRYROT- GLOBAL CONTEXT ARRAY ITEM");
	    [ELSE] print( "INVALID GLOBAL TYPEIT CODE ", typeit(itmvr) )
	    END "global case";
	END "global if";

   COMMENT OUTPUT GLOBAL ASSOCIATIONS;
   OUTTTY(CRLF & CRLF & CRLF & CRLF & "#GLOBAL ASSOCIATIONS#");

   FOR I _ ITMMAX STEP 1 UNTIL 4095 DO
      IF TYPEIT(CVI(I)) THEN
	 FOREACH SAITMVR,RAITMVR
	 | GLOBAL SAITMVR XOR RAITMVR EQV CVI(I) DO
	    ptrip( SAITMVR, " XOR ", RAITMVR, " EQV ", CVI(I) );
   OUTTTY(CRLF);
ENDGLOB

END "LP4MAT";

END "LP4MAT"

   