Begin "SPL"

require 0 lsh 18 lor 0 version;
require "(SAILIB)SAIL.DEF" source!file;
require "UUOSYM.DEF" source!file;
require "ARRMAP.REQ" source!file;

define	GDFile = {"SPOOL.GDF"}, FDFile = {"SPOOL.FDF"};
define	!Block(Group, Name, Size) = {
    Ifcr Length(Cvps(Size)) = 0 thenc assignc Size = 1; Endc
    Define Group}&{Name = Group;
    Redefine Group = Group + Size;};

require "SPLFMT.DEF" source!file;

Own Integer Array VirtualStorage[ 0 : '3000 ];
Own Integer BasePage, Index, Eof;
Own Integer GdfBase, GdfChan, GdfPage;
Own Integer FdfBase, FdfChan, FdfPage;
Own r!p (arm1) GD;
Own r!p (arm2) FD;

simple procedure SetupBasePage;
begin
    GdfBase _ (Location(VirtualStorage[0]) +'777) lsh -9;
    FdfBase _ GdfBase + 1;
    GdfPage _ FdfPage _ 0;
    Calli( !Xwd( '2002, GdfBase ), calli!VCLEAR );
end;
require SetupBasePage initialization;

simple procedure FilePage( Integer Chan, FPage, MPage );
begin
    own integer array arg[0:1];
    Arg[ 0 ]_ !Xwd('2001, MPage);	! <.prro>b7 + 1b17,,base;
    Arg[ 1 ]_ FPage;			! use newest file-page;
    Chnior( Chan, Arg[0], !chMFP );	! map file page;
    If not !skip!
     then usererr( 0,1,	"Cannot map file page "&cvd(FPage)&
			" on channel "&cvd(Chan) );
end;

Open(GdfChan_getchan,"DSK",'17,0,0,0,0,Eof_-1);
Lookup(GdfChan, GDFile ,Eof_-1);
    If Eof then begin
	Print("File ", GDFile ," not found (",cvos(!rh(Eof)),")",crlf);
	Calli( 1, calli!EXIT );
    end;
Open(FdfChan_getchan,"DSK",'17,0,0,0,0,Eof_-1);
Lookup(FdfChan, FDFile ,Eof_-1);
    If Eof then begin
	Print("File ", FDFile ," not found (",cvos(!rh(Eof)),")",crlf);
	Calli( 1, calli!EXIT );
    end;

FilePage( GdfChan, GdfPage_GdfPage+1, GdfBase );
GD_ arm1cr( GdfBase );

For Index _ 0 step '200 until '1000-'200 do begin
    Print( "Request: ", CvXSTR( arm1:a[GD][Index] lsh 6 ) );
    Print( " ", Case (arm1:a[GD][Index] rot 6) land '77 of
		( [0] "Pending",	[1] "Hold",
		  [2] "Transfer",	[3] "Processing",
		  [4] "On Tape",	[5] "Tape Printed",
		  [6] "Completed",	[7] "Complete *D*",
		  [8] "Cancelled",	[else] "Unknown"), Crlf );
    Print( CvXSTR( arm1:a[GD][Index+GDF!RequestName] ),
	   CvXSTR( arm1:a[GD][Index+GDF!RequestName+1] ),
	   CvXSTR( arm1:a[GD][Index+GDF!RequestName+2] ),
	   CvXSTR( arm1:a[GD][Index+GDF!RequestName+3] ), " ",
	   CvXSTR( arm1:a[GD][Index+GDF!Project] ),
	   CvXSTR( arm1:a[GD][Index+GDF!Project+1] ),
	   "FD block: ", arm1:a[GD][Index+GDF!FDBlock], Crlf, Crlf);
end;

Calli( 1, calli!EXIT );

end;
