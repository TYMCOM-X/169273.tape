CHR  C(@),  ctrlat,	< Set-Erase Mark >
CHR  C(A),  ctrla,	< Beginning of Line >
CHR  C(B),  ctrlb,	< Backward Character >
CHR  C(C),  ctrlc,	< Exit to Superior >
CHR  C(D),  ctrld,	< Delete Character >
CHR  C(E),  ctrle,	< End of Line >
CHR  C(F),  ctrlf,	< Forward Character >
CHR  C(G),  ctrlg,	< Abort Operation >
CHR  C(H),  rubout,	< Rubout Character >
CHR  C(I),  selfI,	< Self Insert >
CHR  C(J),  mycj,	< Linefeed >
CHR  C(K),  ctrlk,	< Kill Line >
CHR  C(L),  ctrll,	< Redisplay Screen >
CHR  C(M),  selfI,	< Self Insert >
CHR  C(N),  ctrln,	< Down Text Line >
CHR  C(O),  ctrlo,	< Open Blank Line >
CHR  C(P),  ctrlp,	< Up Text Line >
CHR  C(Q),  ctrlq,	< Quote Character >
CHR  C(R),  IctrlR,	< Reverse Search >
CHR  C(S),  IctrlS,	< Incremental Search >
CHR  C(T),  ctrlt,	< Transpose Characters >
CHR  C(U),  ctrlu,	< Universal Argument >
CHR  C(V),  ctrlv,	< Next Screen >
CHR  C(W),  ctrlw,	< Kill Region to Mark >
CHR  C(X),  selfI,	< Self Insert >
CHR  C(Y),  ctrly,	< Yank Kill Buffer >
CHR  C(Z),  ctrlz,	< Scroll Down >
CHR  C([),  selfI,	< Self Insert >
CHR  C(\),  selfI,	< Self Insert >
CHR  C(]),  selfI,	< Self Insert >
CHR  C(^),  ctrlar,	< Invert Case Character >
CHR  C(_),  selfI,	< Self Insert >

CHR  " ",  selfI,	< Self Insert >
CHR  "!",  selfI,	< Self Insert >
CHR   42,  selfI,	< Self Insert >
CHR  "#",  selfI,	< Self Insert >
CHR  "$",  selfI,	< Self Insert >
CHR  "%",  selfI,	< Self Insert >
CHR  "&",  selfI,	< Self Insert >
CHR  "'",  selfI,	< Self Insert >
CHR  "(",  selfI,	< Self Insert >
CHR  ")",  selfI,	< Self Insert >
CHR  "*",  selfI,	< Self Insert >
CHR  "+",  selfI,	< Self Insert >
CHR  ",",  selfI,	< Self Insert >
CHR  "-",  selfI,	< Self Insert >
CHR  ".",  selfI,	< Self Insert >
CHR  "/",  selfI,	< Self Insert >
CHR  "0",  selfI,	< Self Insert >
CHR  "1",  selfI,	< Self Insert >
CHR  "2",  selfI,	< Self Insert >
CHR  "3",  selfI,	< Self Insert >
CHR  "4",  selfI,	< Self Insert >
CHR  "5",  selfI,	< Self Insert >
CHR  "6",  selfI,	< Self Insert >
CHR  "7",  selfI,	< Self Insert >
CHR  "8",  selfI,	< Self Insert >
CHR  "9",  selfI,	< Self Insert >
CHR  ":",  selfI,	< Self Insert >
CHR  ";",  selfI,	< Self Insert >
CHR  "<",  selfI,	< Self Insert >
CHR  "=",  selfI,	< Self Insert >
CHR  ">",  selfI,	< Self Insert >
CHR  "?",  selfI,	< Self Insert >

CHR  U(@),  selfI,	< Self Insert >
CHR  U(A),  selfI,	< Self Insert >
CHR  U(B),  selfI,	< Self Insert >
CHR  U(C),  selfI,	< Self Insert >
CHR  U(D),  selfI,	< Self Insert >
CHR  U(E),  selfI,	< Self Insert >
CHR  U(F),  selfI,	< Self Insert >
CHR  U(G),  selfI,	< Self Insert >
CHR  U(H),  selfI,	< Self Insert >
CHR  U(I),  selfI,	< Self Insert >
CHR  U(J),  selfI,	< Self Insert >
CHR  U(K),  selfI,	< Self Insert >
CHR  U(L),  selfI,	< Self Insert >
CHR  U(M),  selfI,	< Self Insert >
CHR  U(N),  selfI,	< Self Insert >
CHR  U(O),  selfI,	< Self Insert >
CHR  U(P),  selfI,	< Self Insert >
CHR  U(Q),  selfI,	< Self Insert >
CHR  U(R),  selfI,	< Self Insert >
CHR  U(S),  selfI,	< Self Insert >
CHR  U(T),  selfI,	< Self Insert >
CHR  U(U),  selfI,	< Self Insert >
CHR  U(V),  selfI,	< Self Insert >
CHR  U(W),  selfI,	< Self Insert >
CHR  U(X),  selfI,	< Self Insert >
CHR  U(Y),  selfI,	< Self Insert >
CHR  U(Z),  selfI,	< Self Insert >
CHR  U([),  selfI,	< Self Insert >
CHR  U(\),  selfI,	< Self Insert >
CHR  U(]),  selfI,	< Self Insert >
CHR  U(^),  selfI,	< Self Insert >
CHR  U(_),  selfI,	< Self Insert >

CHR  L(`),  selfI,	< Self Insert >
CHR  L(a),  selfI,	< Self Insert >
CHR  L(b),  selfI,	< Self Insert >
CHR  L(c),  selfI,	< Self Insert >
CHR  L(d),  selfI,	< Self Insert >
CHR  L(e),  selfI,	< Self Insert >
CHR  L(f),  selfI,	< Self Insert >
CHR  L(g),  selfI,	< Self Insert >
CHR  L(h),  selfI,	< Self Insert >
CHR  L(i),  selfI,	< Self Insert >
CHR  L(j),  selfI,	< Self Insert >
CHR  L(k),  selfI,	< Self Insert >
CHR  L(l),  selfI,	< Self Insert >
CHR  L(m),  selfI,	< Self Insert >
CHR  L(n),  selfI,	< Self Insert >
CHR  L(o),  selfI,	< Self Insert >
CHR  L(p),  selfI,	< Self Insert >
CHR  L(q),  selfI,	< Self Insert >
CHR  L(r),  selfI,	< Self Insert >
CHR  L(s),  selfI,	< Self Insert >
CHR  L(t),  selfI,	< Self Insert >
CHR  L(u),  selfI,	< Self Insert >
CHR  L(v),  selfI,	< Self Insert >
CHR  L(w),  selfI,	< Self Insert >
CHR  L(x),  selfI,	< Self Insert >
CHR  L(y),  selfI,	< Self Insert >
CHR  L(z),  selfI,	< Self Insert >
CHR  L({),  selfI,	< Self Insert >
CHR  L(|),  selfI,	< Self Insert >
CHR  L(}),  selfI,	< Self Insert >
CHR  L(~),  selfI,	< Self Insert >
CHR  177,rubout,	< Delete Character >

CHR  MC(@),  none,	< >
CHR  MC(A),  none,	< >
CHR  MC(B),  none,	< >
CHR  MC(C),  ctrlc,	< Exit to Superior >
CHR  MC(D),  none,	< >
CHR  MC(E),  none,	< >
CHR  MC(F),  none,	< >
CHR  MC(G),  ctrlg,	< Abort Operation >
CHR  MC(H),  metadel,	< Rubout Word >
CHR  MC(I),  toright,	< Indent Region >
CHR  MC(J),  none,	< >
CHR  MC(K),  none,	< >
CHR  MC(L),  none,	< >
CHR  MC(M),  none,	< >
CHR  MC(N),  none,	< >
CHR  MC(O),  none,	< >
CHR  MC(P),  none,	< >
CHR  MC(Q),  none,	< >
CHR  MC(R),  Ictrlr,	< Reverse Search >
CHR  MC(S),  Ictrls,	< Incremental Search >
CHR  MC(T),  none,	< >
CHR  MC(U),  toleft,	< UnIndent Region >
CHR  MC(V),  none,	< >
CHR  MC(W),  metcw,	< Copy Region to mark >
CHR  MC(X),  none,	< >
CHR  MC(Y),  none,	< >
CHR  MC(Z),  none,	< >
CHR  MC([),  none,	< >
CHR  MC(\),  none,	< >
CHR  MC(]),  none,	< >
CHR  MC(^),  metcar,	< Invert Case Region >
CHR  MC(_),  none,	< >

CHR  M( ),  none,	< >
CHR  M(!),  metabang,	< Scroll Line to Top >
CHR  M("),  none,	< >
CHR  M(#),  none,	< >
CHR  M($),  metar,	< Replace String >
CHR  M(%),  metaq,	< Query Replace String >
CHR  M(&),  none,	< >
CHR  M('),  none,	< >
CHR  M(<(>),  metalp,	< Find Matching Right Paren >
CHR  M(<)>),  metarp,	< Find Matching Left Paren >
CHR  M(*),  none,	< >
CHR  M(,),  metacp,	< Top Of Screen >
CHR  M(-),  none,	< >
CHR  M(.),  metacn,	< Bottom Of Screen >
CHR  M(-),  none,	< >
CHR  M(/),  none,	< >
CHR  M(0),  none,	< >
CHR  M(1),  none,	< >
CHR  M(2),  none,	< >
CHR  M(3),  none,	< >
CHR  M(4),  none,	< >
CHR  M(5),  none,	< >
CHR  M(6),  none,	< >
CHR  M(7),  none,	< >
CHR  M(8),  none,	< >
CHR  M(9),  none,	< >
CHR  M(:),  none,	< >
CHR  M(;),  none,	< >
CHR  M(<),  metalt,	< Beginning of Text >
CHR  M(=),  none,	< >
CHR  M(>),  metagt,	< End of Text >
CHR  M(?),  metaquest,	< Help Me >

CHR  M(A),  metaa,	< Beginning of sentence >
CHR  M(B),  metab,	< Backward Word >
CHR  M(C),  metac,	< >
CHR  M(D),  metad,	< Delete Word >
CHR  M(E),  metae,	< End of Sentence >
CHR  M(F),  metaf,	< Forward Word >
CHR  M(H),  metadel,	< Rubout Word >
CHR  M(I),  ;,	< Tabify Line >
CHR  M(K),  metak,	< Kill Sentence >
CHR  M(L),  metal,	< >
CHR  M(M),  metam,	< >
CHR  M(O),  quiet,	< Toggle Display Output >
CHR  M(P),  metap,	< >
CHR  M(R),  ctrlr,	< Reverse String Search >
CHR  M(S),  ctrls,	< String Search >
CHR  M(U),  untabline,	< Untabify Line >
CHR  M(V),  metav,	< Previous Screen >
CHR  M(W),  metaw,	< Kill Region to String >
CHR  M(X),  extend,	< Extended Command >
CHR  M(Z),  metaz,	< >
CHR  M([),  metalb,	< Up Paragraph >
CHR  M(\),  Metak,	< Kill Horizontal Blankspace >
CHR  M(]),  metarb,	< Down Paragaph >
CHR  M(^),  metaar,	< Invert Case Word >
CHR  M({),  metalc,	< Beginning of Page >
CHR  M(|),  none,	< >
CHR  M(}),  metarc,	< End of Page >
CHR   377,  metadel,	< Rubout Word >

CHR  M(a),  metaa,	< >
CHR  M(b),  metab,	< >
CHR  M(c),  metac,	< >
CHR  M(d),  metad,	< >
CHR  M(e),  metae,	< >
CHR  M(f),  metaf,	< >
CHR  M(h),  metadel,	< >
CHR  M(i),  none	< >
CHR  M(j),  metaj,	< >
CHR  M(k),  metak,	< >
CHR  M(l),  metal,	< >
CHR  M(m),  metam,	< >
CHR  M(o),  quiet,	< >
CHR  M(p),  metap,	< >
CHR  M(r),  ctrlr,	< >
CHR  M(s),  ctrls,	< >
CHR  M(u),  untabline,	< >
CHR  M(v),  metav,	< >
CHR  M(w),  metaw,	< >
CHR  M(x),  extend,	< >
CHR  M(z),  metaz,	< >

CHR  X(?)",abdefine,	< Define Abbreviations >
CHR  X(?)",LstBuf,	< List Buffers >
CHR  X(?)",ctrlc,	< Exit to Superior >
CHR  X(?)",ctrlxe,	< Save and Run Superior >
CHR  X(?)",ctrlxf,	< Finish File >
CHR  X(?)",ctrlg,	< Abort Operation >
CHR  X(?)",ctrlxi,	< Insert File. >
CHR  X(?)",uctrlo,	<C-X C-K Read "killed" buffer >
CHR  X(?)",ctrlxl,	< >
CHR  X(?)",uctrlo,	<       !ctrlx-ctrlo command. >
CHR  X(?)",ctrlxr,	< >
CHR  X(?)",ctrlxs,	<if it works. >
CHR  X(?)",ctrlxt,	< >
CHR  X(?)",ctrlxv,	< Visit File >
CHR  X(?)",ctrlxw,	< Write File >
CHR  X(?)",ctrlxx,	< Exchange Point and Mark >
CHR  X(?)",ctrlxz,	<Reverse scroll? >

CHR  X((),  ctrlxm,	<C-X ( Define Keyboard Macro >
CHR  X()),  metap,	<C-X ) Return from Keyboard Macro >
CHR  X(2),  ctrlx2,	< >

CHR  X(@),  ctrlxt,	<C-X @ Execute @ filename >
CHR  X(B),  SelBuf,	< >
CHR  X(b),  SelBuf,	< >
CHR  X(C),  uctrlc,	<C-X C Create Alternate Window >
CHR  X(c),  uctrlc,	< >
CHR  X(D),  uctrld,	<C-X D Delete Alternate Window >
CHR  X(d),  uctrld,	< >
CHR  X(E),  metac,	<C-X E Execute Keyboard Macro >
CHR  X(e),  metac,	< >
CHR  X(L),  uctrll,	< >
CHR  X(l),  uctrll,	< >
CHR  X(M),  ctrlxm,	< Major Mode >
CHR  X(m),  ctrlxm,	< >
CHR  X(N),  uctrln,	< >
CHR  X(n),  uctrln,	< >
CHR  X(O),  uctrlo,	< Delete Blank Lines >
CHR  X(o),  uctrlo,	< >
CHR  X(P),  uctrlp,	< >
CHR  X(p),  uctrlp,	< >
CHR  X(Q),  metaa,	< !C-X Q Keyboard Macro Query >
CHR  X(q),  metaa,	< >
CHR  X(Z),  uctrlz,	< >
CHR  X(z),  uctrlz,	< >44x
CHR  X([",Lastpage,	< Previous Page >
CHR  X(,],	< Nextpage;	! Next page >
CHR  CtrlxValue+#177,?,	<?;		! Backward Kill Sentence >

   