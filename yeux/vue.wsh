Wish-list for Tymshare's screen editor

This is a list of "pie-in-the-sky" capabilities and wishes for
some Tymshare screen editor to perform.  Some of them are already
implemented in VUE (those marked with a "*").  Some may be put
into use in the near future, and others will "NEVER" occur.

Please read them over and comment on any or all, or feel free to
add your own suggestions.  Anything even "imaginably" useful will
be considered (at least for a few micro-seconds).

Most of the deficiencies with the current VUE program are listed
herein, as well as anything "known" about other editors.



Tymcom-X
    [ ] Mike		[ ] Adele	    [ ] Bill		[ ] Scott

    [ ] Sherman		[ ] Lois	    [ ] Todd		[ ] Tim

    [ ] Dmitry		[ ] Carl	    [ ] Darren		[ ] Dave


D.S.S.
    [ ] Dennis		[ ] Gazel	    [ ] Ishan		[ ]

    [ ]			[ ]		    [ ]			[ ]


Magnum
    [ ] Stan		[ ] Chris	    [ ] Jean		[ ] 

    [ ]			[ ]		    [ ]			[ ]



Return this list to CARL after it has been circulated.

 1. Sherman	-*- C-X<char> or M-<char> undefined should remain
		    undefined & not insert itself.


 2. Sherman	--- Display text past column 79.


 3. Sherman	--- Keep <mark> stationary regardless of insert/delete.


 4. Sherman	--- Integrate with RPG/Monitor "EDIT" commands.


 5. Tim		--- Don't leave garbage on screen while flipping
		    through the file.  (under status line!).


 6. Carl	--- Make it more intelligent about what "IS" on the
		    screen rather than what it thinks is on the screen.


 7. Sherman	-*- Allow "true" rebinding of keys, (swapping!).
		    Part of "binding" keys to routine names.


 8. Carl / Greg	--- Configuration map for dispat table, bound keys.
		    Part of "binding" keys to routine names.


 9. Carl	--- Configuration map for defined macros.
		    Part of "binding" keys to routine names.


10. Carl	--- View, dump Macro's & Key bindings.
		    Part of "binding" keys to routine names.

11. Carl	--- Define mode, {a la TVEDIT} for macros.
		    Part of "new" Keyboard Macro facility.


12. Tim		--- Know about Erase EOS, Erase page on some terminals
		    to avoid "walking" down the screen. {REDISPLAY}


13. Tim		--- Set both margins for justification of text.
		    Right/Left, possibly #lines on page also.


14. Tim		--- Skip over white space command.


15. Carl	--- Kill * Backwards, text, white space, etc.
		    Part of Negative Arguments.


16. Carl	--- Knowledge of many terminals, 1 page mapped.


17. Carl	--- Knowledge of filename extensions for mode packages.
		    Part of major-minor Mode project.


18. Carl	--- Able to edit any-size files.
		    Part of "mapping" project.


19. Carl	--- Catch all system errors, ILL MEM REF, etc., so that
		    when monitor mode is reached, the terminal is
		    always back to its original state.


20. Carl	-*- Have good documentation prepared.
		 *  o Reference Manual		| VUE.DOC
		 *  o Tutorial			| VUE.TUT
		 *  o Quick Reference sheet	| VUECRD.TXT, VUEKRD.TXT

21. Tim		--- Place marker as well as delete/indent marker.


22. Tim		--- Modes: Various languages; Lisp Fortran Macro.
		    Part of mode package rewrite.


23. Tim		--- Magnum filenames.  (Alias names for files.)


24. Carl	--- Support full Tymcom-X names, ppn's whatever can be
		    typed in by the user that is recognizeable by the
		    other Tymcom-X utilities.


25. Sherman	-*- Tymshare Proprietary license required.


26. Carl	--- Overwrite 'mode'.


27. Carl	-*- Terminal type default(?) gotten from the monitor.


28. Carl	--- Update 'all' messages to be less 'hack'ish.
		    (Done in many, but not all modules %1)


29. Network Dev	--- Remove 'Error' messages from the screen after N
		    keystrokes.  Possibly 1 to 5.


30. Network Dev	--- List *Macros, Key bindings, Key re-bindings.

31. Network Dev	--- Print Control-Characters on screen as themselves
		    for terminals with *Display mode.


32. Network Dev	--- Have C-n C-p stay in same column instead of zig-zag
		    for tabs or other reasons.


33. Carl, Bill	--- Provide a way to display tab vs. spaces.


34. Bill	--- Allow "copy" command to copy 'n' lines before or after
		    the cursor, m times immediately.  Not manually with
		    C-W/X C-Y type sequence.


35. Network Dev	--- Do not 'clear' screen upon exit.  (OPTION?).
    Chris Larue


36. Network Dev	--- Make Pascal Mode smarter, ignore key-words in comments.
		    Comments are "..." and (*...*).


37. Network Dev	--- Make all file commands be consistent, .<space>, .<last>,
		    .<me> , etc.


38. Network Dev	--- Search-String over 70+ chars can be painful, such as
		    causing the screen to shift, etc.


39. Network Dev	--- Must have a command to go to a specific line #. !!!


40. Network Dev	--- Make it work with a 'track ball'.

41. Carl	--- Make C-X K kill a buffername.


42. Carl	--- Make C-X C-O delete blank lines, etc.


43. Carl	--- Make C-T, M-T, C-X C-T, C-X T, M-C-T work!


44. Carl	--- Make M-A, M-E, M-K work on sentences.


45. Carl	-*- Make key rebinding to names a reality.


46. Carl	--- Make keyboard macro work C-X ( macro C-X ) a reality.


47. Samuel F.	--- Have ability to list all commands relevent to a given
		    subject area. (ie. word, replace, case, etc.)


48. Samual F.	--- On-line description of any command by "name" or keystroke,
		    in short or long form.


49. Samuel F.	--- Access the same text as in the manual, in hierarchical
		    or cross-referenced order, with ease of access to any
		    section.


50. Sherman	--- "GO" command which does an Exit & Run appropriately for
		    the correct compiler based upon file extension?
		    (Doesn't RPG do this already?  "Save and Run superior".

51. Sherman	--- Means of interrupting screen redisplay, a la ^O ???
		    Possibly, any character (input) might do this.


52. Sherman	--- Means of redisplay current line or screen.


53. Sherman	--- Backpressure commands,  a la ^S, ^Q.


54. Sherman	--- Consistent character input.  Eg. ^G will always cause
    Carl	    an abort no matter where it's read from/to.


55. Carl	-*- Read VUE.INI from the logged-in ppn instead of GFD.


56. Stan	--- Give error when user overwrites a hard-coded function.


57. Network Dev	--- C-X C-F too close to C-C.  Have VUE prompt the user
		    for exit verification "before" saving the new edits.


58. Network Dev	--- Do correct editing functions while reading filenames,
		    doing searches, replacing text, etc.  ? C-H vs bindings.


59. Carl	--- Implement "Here I Am" on the screen function.
		    (will help for 'track-ball', moving cursor by hand, etc.)


60. Chris Larue	--- Keep correct protections, etc on edited files.

61. Chris Larue	--- Move line to Top/Bottom of screen (M-! M-i) ?


62. Chris Larue	--- Un-do last command.  (Last N commands?)


63. Chris Larue	--- Change modes ?


64. Carl	--- News feature. (possibly just read formatted file.)


65. Chris Larue	--- Find "...." (all occurrances, eg. EDITOR)


66. Chris Larue	--- Read-only (for magnum? others) mode.


67. Chris Larue	--- MAGNUM mode. or switches (a la #66.)


68. Chris Larue	--- Match "begin end" a la '..' () <> {} [] ".."


69. Carl	--- "REAL" Command completion a la TOPS-20.


70. Network Dev	--- Make .BAK files, .VUE files TMP so they "go away".

71. Network Dev	--- Delete all .VUE files upon graceful exit.
    Carl	    Including only those indicated in the current map.


72. Network Dev	--- Mark mode?  Don't erase mark after a wipe, indent,
		    un-indent, etc.  Only allow user to explicitly erase it.


73. Network Dev	--- Have C-N, C-P stay in the same column regardless of
		    the end-of-line position.  Until insert done, then fill
		    with spaces, or collapse them upon entry/exit to line.


74. Network Dev	--- Allow putting characters in the middle of tabs, by adding
		    appropriate spaces when necessary.  (FLAG dependent).


75. Network Dev	--- Allow copy from previous line.  (C-U -1 C-K)?


76. Network Dev	--- <CR> in search, etc. should print ^M instead of left-edge.


77. Carl	-*- Fix terminal types not supported to be un-typable, or
		    make them "not" cause VUE to {Barf}.


78. Network Dev	-*- Reset REV-XON upon exit, including startup when C-C or
		    "E"xit is typed.


79. Network Dev	--- Ignore "keywords" in comments in various mode packages.


80. Network Dev	--- Do something reasonable with search/replace string which
		    are greater than 70 characters.

81. Carl	--- Rescan the startup line properly, so that spaces
		    ignored by RPG and the monitor are also ignored by
		    VUE.  Eg. " CT4 file.dat" is translated wrong.


82. Carl, Tim	--- Implement some kind of PAGE/LINE counting so that
		    positioning to a specific page or line can be done
		    with a minimal amount of work.


83. Carl, Jean	--- Don't "blow-up" if user runs out of disk space while
    Chris Larue	    attempting to read in a file.  MUNCHI returns bad?


84. Jean, Carl	--- Fix C-U arg <macro-call> to use the arg & repeat ok.


85. Carl	--- Move all "SET MODE PARAMETER" functions to top level.


86. Carl	--- Better management of "KILL".
		    o If pointer moved, then moved back, next kill adds.
		    o Have Make "new" Kill command.
		    o Have Add to previous Kill command.
		    o Implement PUSH/POP Kill, a la EMACS. (non-destructive?)
		    o Make 'moved pointer' work with PUSH/POP ? Rotate.
		    o Allow specification of "MARK"(s) C-U n <mark>


87. Carl	--- With multiple marks, allow push/pop, rotate through
		    list, possible C-X C-X extension through list via
		    C-U n C-X C-X .. or C-X M-X ???  Position cursor to
		    Nth next/last mark.


88. Carl	--- Implement "Print" commands to print page, print from
		    point to mark, etc.  (Terminal dependent).


89. Carl	--- Force C-L commands to only work inside the current
		    window.  Entire screen if only one window.


90. Carl	--- Add real arithmetic capability, a la teco.  Increment
		    and decrement counter, q-register, type as a #, read
		    number from buffer/terminal, value of next character
		    from buffer/terminal.

91. Carl	--- Type TIME-of-DAY in current time-zone in the status
		    line or echo area.  So we can mark our "progress".
		    Possibly time since start of VUE also?


92. Carl	-*- Let user know if MAIL WAITING message bit set.


93. Carl	--- READ MAIL, of course!


94. Carl	--- Map buffer names into a TEMP file, so that restoring
		    "KILLED" buffers will be possible once the names go
		    away, since there will always be a name-conflict if
		    two people want to edit in the same directory.


95. Tim, Carl	--- Redisplay mode to allow full screen, line repainting
		    with/without centering, regardless of the default mode.


96. Tim, Carl	--- Add the status lines as the "bottom" lines on the screen
		    and repaint them as part of the "normal" procedure.


97. Chris, Carl	--- Implement (REVERSE) and movement/search commands while
		    inside "query-replace" mode.


98. Carl	--- Make upper/lower case independent of more commands.


99. Carl	--- Rebinding note:  Have <esc><UC-key> set both upper
		    and lower case commands, with <esc><LC-key> setting
		    only the lower case command.  Possibly set a flag as
		    TECO does, to say -1 means (UPPER precidence), 0 means
		    (independent), +1 means (LOWER precidence).


100. Carl	--- Have "normal" exit, prompt for non-current buffers
		    which have been modified and ask whether to write them
		    out or not.  (Flag dependent, OF COURSE!)

101. Carl	--- Rewrite ABBREV mode.  (Mode package rewrite)
		    Need the capability to set mode-flags so that we
		    do not have to change modes to get such capabilities.


102. Carl	--- Implement the "ALARM" command, which will notify you
		    if an event occurs.  (elapsed time, various watch-dog
		    functions, core-size, mail, etc.)


103. Carl	--- Better FILE management.  (protection, license...)
		    allow for "warnings" to the user "before" they
		    are lost or overwritten.


104. 		--- ???

  