Module Isrch(optimize) = begin

bind CST = 0;

external submod,sst,distbl,physpos,phsylin,CmdStk,CmdLvl,comchar,toprompt;
external physlin,physpos,goxy,writeloss,clearline,hend,hbot,lowend;
external therep,moveforward,flubfr,putch,moveback,readch;
external defwindow,inwind,linesz,modpos,echosize,MetaPrefix,Escvalue;

forward rtos,stor;

global	ISFlag;	!-1 =failing 0=not in isearch, 1=not failing 2=first

own Savpos,savlin,Ind,needsave,savemeta;
Own savdis[#200];
routine wgoxy (x,y) = begin
    defwindow(1,1,.linesz,.modpos+.echosize);
    goxy(.x,.y);
    inwind_1;
end;
Global Routine SrchString(Prmpt)= Begin
	ToPrompt(.Prmpt);
	SavLin_.Physlin;
	Incr i from 1 to .Ind-1 do writeloss(.sst[.I]);
	FluBfr();
	Savpos_.Physpos;
end;
routine ISDel = Begin
	If .Ind leq 1 then return;
	Ind_.Ind-1;
	If .ISFlag gtr 0 then Moveback(1);
	If .CmdStk[.CmdLvl] eql CST
	 then begin
	    wgoxy(.savpos-1,.savlin);
	    if .sst[.ind] leq "?_"
	     then wgoxy(.savpos-2,.savlin);
	    If .CmdStk[.CmdLvl] eql CST
	     then clearline()
	 end;
	SavPos_.physpos;
	sst[0]_.ind-1;
	If .ISFlag gtr 0
	 then return;
	Moveback(.Ind-1);
	If not therep(sst,.lowend)
	 then (moveforward(.ind-1);return);
	Moveforward(.Ind-1);
	ISFlag_1;	!indicate ok
	SrchString (plit asciz 'I-Search:');
	Return;
end;
routine IRDel = Begin
	If .Ind leq 1 then return;
	Ind_.Ind-1;
	If .CmdStk[.CmdLvl] eql CST then wgoxy(.savpos-1,.savlin);
	if .sst[.ind] leq "?_" and .CmdStk[.CmdLvl] eql CST then 
	    wgoxy(.savpos-2,.savlin);
	SavPos_.physpos;
	If .CmdStk[.CmdLvl] eql CST then clearline();
	sst[0]_.ind-1;
	If .ISFlag gtr 0 then return;
	If Not Therep(sst,.lowend) then return;
	ISFlag_1;	!indicate ok
	Srchstring (plit asciz 'Reverse I-Search:');
	Return;
end;
routine Iesc = Begin local i;
	Incr I from 1 to #177 do ((@distbl)[.I]_.SavDis[.i]);
	If .needsave neq 0 then MetaPrefix_.Savemeta;	! Restore meta
	If .CmdStk[.CmdLvl] eql CST then wgoxy(.savpos,.savlin);
	Submod_0;	!indicate not in I-search
	ISFlag_0;	!indicate not in I-search
	Writeloss("$");
	flubfr();
	return
end;
routine iserch= begin
	If .Isflag eql 2 then (Ind_1;  ! iF first time reset ind
				Isflag_1);
	If .CmdStk[.CmdLvl] eql CST then wgoxy(.savpos,.savlin);
	writeloss(.comchar);
	FluBfr();
	savpos_.Physpos;
	sst[.ind]_.comchar; ! set the char.
	sst[0]_.ind;
	ind_.ind+1;
	If .IsFlag gtr 0 then
	Begin
		moveback(.Ind-1);
		incr i from .lowend to .lowend+.hend-.hbot-.ind do
			if therep (sst,.i) then begin
				moveforward(.i+.Ind-.lowend-1);
				ISFlag_1;	!indicate ok
				Return
			end;
		moveforward(.ind-1)
	end;
	ISFlag_-1;	!indicate failing
	If .CmdStk[.CmdLvl] eql CST then putch("?G");
	Srchstring (plit asciz 'Failing I-Search:');
	return
end;
routine ISquote = Begin
	Comchar_Readch();
	Iserch();
	Return
End;
routine IRserch= begin 
	If .Isflag eql 2 then (Ind_1;  ! iF first time reset ind
				Isflag_1);
	If .CmdStk[.CmdLvl] eql CST then wgoxy(.savpos,.savlin);
	writeloss(.comchar);
	FluBfr();
	savpos_.Physpos;
	sst[.ind]_.comchar; ! set the char.
	sst[0]_.ind;
	ind_.ind+1;
	if .ISFlag gtr 0 then
	Begin
		moveforward(.ind-1);
		decr i from .lowend-.sst[0]+1 to 1 do
			if therep (sst,.i) then begin
				moveBack(.lowend-.i);
				ISFlag_1;  !not failing
				Return
			end;
		moveback(.ind-1)
	End;
	ISFlag_-1;	!failing
	If .CmdStk[.CmdLvl] eql CST then putch("?G");
	Srchstring (plit asciz 'Failing Reverse I-Search:');
	return
end;
routine IRquote = Begin
	Comchar_Readch();
	IRserch();
	Return
End;
routine ISNext= Begin local i;
	If .ISFlag eql 2 then (Isflag_1;
			Srchstring(plit asciz 'I-Search:'));
	Incr I from .lowend to .lowend+.hend-.hbot-.ind+1 do
		if therep (sst,.i) then begin
			moveforward(.i+.Ind-1-.lowend);
			ISFlag_1; !not failing
			Return
		end;
	ISFlag_-1;
	If .CmdStk[.CmdLvl] eql CST then putch("?G");
	Srchstring (plit asciz 'Failing I-Search:');
	return
End;
routine IRNext= Begin local i;
	If .ISFlag eql 2 then (Isflag_1;
			Srchstring(plit asciz 'Reverse I-Search:'));
	decr i from .lowend-.sst[0] to 1 do
		if therep (sst,.i) then begin
			moveBack(.lowend-.i);
			ISFlag_1;  !not failing
			Return
		end;
	ISFlag_-1;   !failing
	If .CmdStk[.CmdLvl] eql CST then putch("?G");
	Srchstring (plit asciz 'Failing Reverse I-Search:');
	return
End;
Routine rtos = Begin local I;
	Incr I from 1 to #177 do
		If .(@distbl)[.I] eql IRserch then (@distbl)[.I]_Iserch;
	(@distbl)["?R"]_stor;
	(@distbl)[#177]_ISDel;
	(@distbl)["?H"]_ISDel;
	(@distbl)["?S"]_ISNext;
	(@distbl)["?Q"]_ISquote;
	ISFlag_1;  !no fail yet
	Srchstring (plit asciz 'I-Search:');
	ISNext();
	Return
end;
Routine stor = Begin
	Incr I from 1 to #177 do
		If .(@distbl)[.I] eql Iserch then (@distbl)[.I]_Irserch;
	(@distbl)["?S"]_Rtos;
	(@distbl)[#177]_IRDel;
	(@distbl)["?H"]_IRDel;
	(@distbl)["?R"]_IRNext;
	(@distbl)["?Q"]_IRquote;
	ISFlag_1;  !no Fail yet
	Srchstring (plit asciz 'Reverse I-Search:');
	IRNext();
	Return
end;
global routine Ictrls = begin
	local tc,i;
	ToPrompt(plit asciz 'I-Search:');
	ISFlag_2;  !not failing first time
	SavLin_.physlin;
	Savpos_.physpos;
	Submod_sixbit'SEARCH';
	Incr I from 1 to #177 do begin
		If .(@distbl)[.I] neq Iserch then
			SavDis[.I]_.(@distbl)[.I];
		If .(@distbl)[.I] leq 1 Or .I geq " " then ((@distbl)[.I]_Iserch)
	End;
	(@distbl)["?G"]_iesc;
	(@distbl)["?["]_iesc;
	If .EscValue eql .MetaPrefix then begin
	    Savemeta_.MetaPrefix;
	    MetaPrefix_"?\";
	    Needsave_1
	end
	else Needsave_0;
	(@distbl)[#177]_ISDel;
	(@distbl)["?H"]_ISDel;
	(@distbl)["?S"]_ISNext;
	(@distbl)["?R"]_Stor;
	(@distbl)["?Q"]_ISquote
end;
global routine IctrlR = begin
	local tc,i;
	ToPrompt(plit asciz 'Reverse I-Search:');
	SavLin_.physlin;
	ISFlag_2;  !not fail yet first time
	Savpos_.physpos;
	Submod_sixbit'SEARCH';
	Incr I from 1 to #177 do begin
		If .(@distbl)[.I] neq IRSerch then
			SavDis[.I]_.(@distbl)[.I];
		If .(@distbl)[.I] leq 1 or .I geq " " then ((@distbl)[.I]_IRserch)
	End;
	(@distbl)["?G"]_iesc;
	(@distbl)["?["]_iesc;
	If .EscValue eql .MetaPrefix then begin
	    Savemeta_.MetaPrefix;
	    MetaPrefix_"?\";
	    Needsave_1
	end
	else Needsave_0;
	(@distbl)[#177]_IRDel;
	(@distbl)["?H"]_IRDel;
	(@distbl)["?R"]_IRNext;
	(@distbl)["?S"]_rtos;
	(@distbl)["?Q"]_IRquote
end;
end eludom

