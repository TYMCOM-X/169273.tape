You are looking at the VUE tutorial.

VUE commands generally involve the CONTROL key (sometimes labelled
CTRL or CTL) or the META key (sometimes labelled EDIT).  Rather than
write out META or CONTROL each time we want you to prefix a character,
we'll use the following abbreviations:

 C-<chr>  means hold the CONTROL key while typing the character <chr>
          Thus, C-F would be: hold the CONTROL key and type F.
 M-<chr>  means hold the META or EDIT key down while typing <chr>.
          If there is no META or EDIT key, type <ESC>, release it,
          then type the character <chr>.  "<ESC>" stands for the
          key labelled "ESC" or "ALT".

Important note: if you must exit at some point, type C-X C-C.
The characters ">>" at the left margin indicate directions for you to
try using a command.  For instance:

>>  Now type C-V (View next screen) to move to the next screen.
        (go ahead, do it by depressing the control key and V together).
        From now on, you'll be expected to do this whenever you finish
        reading the screen.

Note that there is an overlap of one line when going from screen to
screen.  Having the last line of the previous screen at the top of the
new screen helps to provide some continuity when moving through the
file.

The first thing that you need to know is how to move around from
place to place in the file.  You already know how to move forward a
screen, with C-V.  To move backwards a screen, type M-V (depress the
META key and type V, or type <ESC>V if you don't have a META or EDIT
key).

>>  Try typing M-V and then C-V to move back and forth a few times.

Another thing which is useful is the "Redisplay Screen" command, which
you perform by typing C-L.  This command does two things:  First, it
clears the screen and then redisplays what was on it.  Second, if you
are not already positioned near the top of a page, it attempts to move
your current position to the center of the screen.

>>  Find the cursor and remember what text is near it.
    Then type a C-L.

>>  Find the cursor again and see what text is near it now.
    Notice that the cursor is near the center line on the screen.
    Look at the text which is near the cursor.  It is the same
    text which was near the cursor before you typed the C-L.



SUMMARY
-------
The following commands are useful for viewing screenfuls:

        C-V     Move forward one screenful.
        M-V     Move backward one screenful.
	C-L	Clear screen and redisplay everything putting the
		text near the cursor at the center line on the screen.


BASIC CURSOR CONTROL
--------------------
Getting from screenful to screenful is useful, but how do you
reposition yourself within a given screen to a specific place?
There are several ways you can do this.  One way (not the best, but
the most basic) is to use the commands previous, backward, forward
and next.  As you can imagine these commands (which are given to
VUE as C-P, C-B, C-F, and C-N  respectively) move the cursor from
where it currently is to a new place in the given direction.  Here,
in a more graphical form are the commands:
 
                          Previous line, C-P
                                  :
                                  :
   Backward, C-B .... Current cursor position .... Forward, C-F
                                  :
                                  :
                          Next line, C-N

You'll probably find it easy to think of these by letter.  P for
previous, N for next, B for backward and F for forward.  These are
the basic cursor positioning commands and you'll be using them ALL
the time so it would be of great benefit if you learn them now.

>> Do a few C-N's to bring the cursor down to this line.

>> Move into the line with C-F's and then up with C-P's.
   See what C-P does when the cursor is in the middle of the line.



Lines are separated by a pair of characters, a Return and a Linefeed,
but VUE almost always makes them look like one character.  You
can think of it as a Newline.


>> Try to C-B at the beginning of a line.  Do a few more C-B's.
   Then do C-F's back to the end of the line and beyond.


When you go off the top or bottom of the screen, the text beyond
the edge is shifted onto the screen so that your instructions can
be carried out while keeping the cursor on the screen.


>> Try to move the cursor off the bottom of the screen with C-N and
   see what happens.


Notice that you are now on a new screen.  This is similar to typing
the C-V command, with one exception.  C-V always repositions the
cursor to the top line on the screen.  Moving past the edge (either
the top or the bottom) scrolls the text so that some of the text on
either side of the cursor is still visible.

>>  Type some C-P's to move off the top of the screen now.  Remember
    to watch where the cursor is positioned when you are done.


If moving by characters is too slow, you can move by words.  M-F
(Meta-F) moves forward a word and M-B moves back a word.

>> Type a few M-F's and M-B's.  Intersperse them with C-F's and C-B's.


Notice the parallel between C-F and C-B on the one hand, and M-F and
M-B on the other hand.  Very often Meta characters are used for
operations related to English text whereas Control characters operate
on the basic textual units that are independent of what you are
editing (characters, lines, etc).

The location of the cursor in the text is also called "point".  To
paraphrase, the cursor shows on the screen where point is located in
the text.

Here is a summary of simple moving operations including
the character and word moving commands:

        C-F     Move forward a character
        C-B     Move backward a character
        M-F     Move forward a word
        M-B     Move backward a word

        C-N     Move to next line
        C-P     Move to previous line



>> Try typing these commands a few times to try them out.
   Once you feel comfortable, continue to the next group of cursor
   positioning commands below.


Please note:  All commands in VUE can be given arguments which cause
them to be executed repeatedly.  The way you give a command a repeat
count is by typing C-U and then the digits before you type the command.
If you have a META or EDIT key, you can omit the C-U if you hold down
the META or EDIT key while you type the digits.  This is easier, but we
recommend the C-U method because it works on any terminal.



For instance, C-U 8 C-F moves forward eight characters.
        
>> Try giving a suitable argument to C-N or C-P to come as close
   as you can to this line in one jump.

If you mis-type a numeric argument or the beginning of a command that
you don't want to finish, you can use C-G to discard your command.
Notice that the message "Error" is printed on the bottom line of your
screen.  This is to give you positive reinforcement that your command
has been aborted, and not that you have made an error.


>> Type C-U 100 to make a numeric arg of 100, then type C-G.
   Now type C-F.  How many characters does it move?
   If you have typed an <ESC> by mistake, you can get rid of it
   with a C-G.

Do you remember what the C-L command does?  It clears the screen and
then redisplays it with the current line repositioned near the center
line of the screen.  Well, by giving a numeric argument to the C-L
command, you can specify at which actual line you want the current line
redisplayed.

For example, C-U 8 C-L  would position the current line at line 8.

>>  Try it.  Type C-U 8 C-L and see where the current line is positioned.
    Now, move the cursor and type C-U 8 C-L again.  This is very useful
    for repositioning the text short distances for better viewing.

Note:  Because of the way that VUE decodes commands, it is not currently
possible to distinguish between simply typing C-L, without an argument, 
and typing C-U 1 C-L.  Thus, this method cannot be used to position the
current line at the top of screen.

The command M-! (Meta Exclaimation-Point) will do this.  (Position the
current line at the top of screen).  This is also known as the function
"Scroll line to Top" function.

>>  Move the cursor down to the end of this paragraph and type M-!
    It will scroll this line to the top of the screen.

There are also commands to position the cursor at more specific places
within the file.  Some of these will also reposition text on the screen
depending upon the current location of the cursor.

Two simple cursor motion commands are M-< (Meta Less-than), which moves
to the beginning of the text buffer, and M-> (Meta Greater-than), which
moves to the end of the text buffer.  You probably don't need to try
them, since finding this spot again will be boring.  If you need the
shift key to type a "<", then you must also use the shift key to type
M-<.  Otherwise, you would be typing M-, (Meta Comma), which is not a
legal VUE command.

Some files are formatted into pages of text, usually separated by a
form-feed character which is designated in the text as "^L" on your
screen.  To position the cursor at the beginning of the current text
page, you type the M-{ (Meta Open-Set [Open curly bracket]) command.
To position the cursor at the end of the current text page use the
M-} (Meta Close-Set) command.  However, please note that this file is
composed of only one long page so the M-{ and M-} commands will act
identically to the M-< and M-> commands.

A short summary of these commands follows:

	M-<	move cursor to the beginning of the file
	M->	move cursor to the end of the file

	M-{	move cursor to the beginning of text page
	M-}	move cursor to the end of text page



INSERTING AND DELETING
----------------------
If you want to type text, just do it.  Characters which you can see,
such as A-Z, 0-9, *, etc. are taken by VUE as text and inserted
immediately.  Type <Return> (the carriage-return key) to insert a line
separator.

You can delete the last character you typed by typing <Rubout>.
<Rubout> is a key on the keyboard, which may be labelled "Delete" or
"Del" instead of "Rubout" on some terminals.  More generally, <Rubout>
deletes the character immediately before the current cursor position.

>> Do this now, type a few characters and then delete them
   by typing <Rubout> a few times.  Don't worry about this file
   being changed; you won't affect the master tutorial.  This is just
   a copy of it.

Remember that most VUE commands can be given a repeat count;  Note
that this includes characters which insert themselves.

>>  Try that now -- type C-U 8 * and see what happens.
>>  Now, type C-U 8 <Rubout>  and see what happens.

You've now learned the most basic way of typing something in
VUE and correcting errors.  You can delete by words or lines
as well.  Here is a summary of the delete operations:

        <Rubout>     delete the character just before the cursor
        C-D          delete the next character after the cursor

        M-<Rubout>   delete the word immediately before the cursor
        M-D          delete the next word after the cursor

        <Backspace>  delete the character just before the cursor
        C-H          delete the character just before the cursor
        M-H          delete the word immediately before the cursor

        C-K          kill from the cursor position to end of line
	C-W          kill from the cursor position to the mark

Notice that <Rubout> and C-D vs M-<Rubout> and M-D extend the
parallel started by C-F and M-F (well, <Rubout> isn't really a
control character, but let's not worry about that).  Also, note
that <Backspace> and C-H perform exactly the same function as a
<Rubout>.  This is to facilitate using VUE on terminals which do
not have easily accessible <rubout> or <Delete> keys.  Likewise
M-H works like M-<Rubout> in order to maintain the parallelism
between the functions of "Control" keys and "Meta" keys.

Now suppose you kill something, and then you decide that you want to
get it back?  Well, whenever you kill something, VUE saves it for you.
To yank it back, use C-Y.  Note that you don't have to be in the same
place to do the C-Y; This is a good way to move text around.  Also note
that the difference between "Killing" and "Deleting" something is that
the "Killed" things can be yanked back, and "Deleted" things cannot.
Generally, the commands that can destroy a lot of text save it, while
the ones that attack only one character, or nothing but blank lines and
spaces, do not save.

For instance, type C-N a couple times to postion the cursor
at some line on this screen.

>> Do this now, move the cursor and kill that line with C-K.

Note that a single C-K kills the contents of the line, and a second
C-K kills the line itself, and make all the other lines move up.  Note
that blank lines are killed by only a single C-K.  Thus, if you give
C-K a repeat count, you must be careful, because for each line, the
first C-K erases the contents and makes it a "Blank" line while the
second C-K kills the line.

The text that has just disappeared is saved so that you can
retrieve it.  To retrieve the last killed text and put it where
the cursor currently is, type C-Y.

>>  Try it; type C-Y to yank the text back.

Think of C-Y as if you were yanking something back that someone
took away from you.  Notice that if you do several C-K's in a row
the text that is killed is all saved together so that one C-Y will
yank all of the lines.

>>  Do this now, type C-K several times.
    Now to retrieve that killed text:

>> Type C-Y.  Then move the cursor down a few lines and type C-Y
   again.  You now see how to copy some text.

What do you do if you have some text you want to yank back, and then
you kill something else?  C-Y would yank the more recent kill.  At
present, the previous kill is lost.  Each time you reposition the
cursor, or delete some text, the next time you kill something, the
previous contents of the kill buffer is lost.  This point is very
important to remember, because only one portion of text may be moved
at a time.


FILES ----- In order to make the text you edit permanent, you must put
it in a file.  Otherwise, it will go away when you are finished your
current VUE session.  You put your editing in a file by "visiting" the
file.  What visiting means is that you see the contents of the file on
your screen, and, loosely speaking, what you are editing is the file
itself.  However, the changes still don't become permanent until you
"save" the file.  This is so you can have control to avoid leaving a
half-changed file around when you don't want to.  Even then, VUE really
makes a new version of the file and doesn't change the old version at
all (so that you can verify or throw away your changes later if you
like).

If you look near the botton of the screen you will see a line that
starts with "VUE" followed by your terminal type and a few other
things in parentheses.  These other "things" are mode information
flags and will be explained later.  Near the end of the line you will
find the text "File:"  followed immediately by the filename "VUE.TUT".
This is the name of your own temporary copy of the text of the VUE
tutorial; the file you are now visiting.  Whatever file you visit,
that file's name will appear in that precise spot.

The commands for visiting and saving files are unlike the other
commands you have learned in that they consist of two characters.
They both start with the character Control-X.  There is a whole series
of commands that start with Control-X.  Many of them have to do with
files, buffers, and related things, and all of them consist of
Control-X followed by some other character.

Another thing about the command for visiting a file is that you have
to say what file name you want.  We say the command "reads an argument
from the terminal" (in this case, the argument is the name of the
file).  After you type the command:

        C-X C-V   Visit a file

VUE will ask you for the file name.  You should end the name with
the Return key.  After this command, you will see the contents of the
file in your VUE.  You can edit the contents.  When you wish to make
the changes permanent, issue the command:

        C-X C-S   Save the file

A new version of the file will be created.  When the operation is
finished, VUE prints a message telling you that the current buffer
was written successfully.

If you forget to save and visit a different file, you will not be
reminded that there were any changes, so it is best to save any
changes made "before" visiting another file.  (If you don't save
them, they will be thrown away.  That might be what you want!)
However, in the case where you are working on multiple buffers
you do not want to "SAVE" the changes each time you change buffers,
thus, the "List Buffers" command will tell you with an asterisk (*)
what buffers have had changes made to them.

To make a new file, just visit it "as if" it already existed.  Then
start typing in the text.  When you ask to "save" the file, VUE
will really create the file with the text that you have inserted.
From then on, you can consider yourself to be editing an already
existing file.

It is not easy for you to try out visiting a file and continue with
the tutorial.  But you can always come back into the tutorial by
starting it over and skipping forward.  So, when you feel ready, you
should try visiting a file named "TEST", putting some text in it, and
saving it; then exit from VUE and look at the file to be sure that
it worked.


EXTENDING THE COMMAND SET
-------------------------

There are many, many more VUE commands than could possibly be put
on all the control and meta characters.  VUE gets around this with
the X (eXtend) command.  This comes in two flavors:

        C-X     Character eXtend.  Followed by one character.
        M-X     Named command eXtend.  Followed by a long name.

These are commands that are generally useful but used less than the
commands you have already learned about.  You have already seenof
them:  the file commands C-X C-V to Visit and C-X C-S to Save.  Another
example is the command to tell VUE that you'd like to stop editing.  The
command to do this is C-X C-C.

There are many C-X commands.  The ones you need immediately are:

        C-X C-V         Visit file.
        C-X C-S         Save file.
        C-X C-C         Quit VUE.  This does NOT save your file.

    The standard way to save and exit is C-X C-S C-X C-C.

Named eXtend commands are commands which are used even less
frequently, or commands which are used only in certain modes.  These
commands are usually called "functions".  For example, the function
Redisplay Screen, which clears the screen and positions you near the
center line, can be entered as a function.  First, you type M-X, then
VUE prompts you at the bottom of the screen with "M-X" and you should
type the name of the function you wish to call.  In this example, type
"Redisplay Screen".  Just type "RED<ESC>" and VUE will complete the
name.



MODE LINE
---------
For some commands, VUE will "prompt" you for the next input.  This will
happen at the bottom of the screen in an area called the echo area.  The
echo area contains the bottom lines of the screen.  The line immediately
above this is called the MODE LINE.  The mode line says something like:

   VUE (HP2621  INIT  Save) MAIN    File: filename  --nn%-- *

This is a very useful "information" line.
You already know what the filename means; it is the file you have
visited.  What the  --nn%--  means is that nn percent of the file is
above the cursor.  If you are positioned at the top of the buffer it
will say  --TOP--  instead of  --00%--.  If the cursor is positioned
at the end of the file on the screen, it will say  --BOT--.

You can find out more about the status line by reading the manual in
more detail, however, one useful piece of information to know is the
reason for the asterisk (*) at the end of the line.  When you initially
begin a session, this will not appear.  However, as soon as the buffer
is modified, it will be displayed.

SEARCHING
---------

VUE can do searches for strings (these are groups of contiguous
characters or words) either forward through the text or backward
through it.  To search for the string means that you are trying to
locate it somewhere in the buffer and have VUE show you where the
occurrences of the string exist.  VUE has two different types
of search commands, each of which "requests" terminal input to tell
it what to search for.

The default type of search which VUE uses is somewhat different from
what you may be familiar with.  It is performed as you type in the thing
to search for.  The command to initiate a search is C-S for forward
search (Control-S).  BUT WAIT!  Don't try it yet!!!.

When you type C-S you'll notice that the string "I-Search" appears as a
prompt in the echo area.  This tells you that VUE is in what is called
incremental search mode and is waiting for you to type the thing that
you want to search for.  To tell VUE that you are done searching, type
either an <ESC> or a C-G.

>>  Now type C-S to start incremental search mode.

    SLOWLY, one letter at a time, type the word 'cursor', pausing after
you type each character to notice what happens to the cursor.

>>  Do *NOT* type an <ESC> yet.  Instead type C-S again to find
    the next occurrence of "cursor". Notice that you are still
    in incremental search mode.
>>  Now type <Rubout> four times and see how the cursor moves.
>>  Type <ESC> now, to terminate the search.

Did you see what happened?  VUE, in an incremental search, tries to
go to the occurrence of the string that you've typed out so far.  To go
to the next occurrence of 'cursor' just type C-S again.  If no such
occurrence exists VUE beeps and tells you that it is a failing
search.  C-G would also terminate the search.

If you are in the middle of an incremental search and type <Rubout>,
you'll notice that the last character in the search string is erased
and that the cursor backs up one character on the screen.* (In the
future this will change, and the cursor will back up to the last place
that it found correctly in the search).  Anyway, suppose you currently
have typed 'cu' and you see that your cursor is at the first occurrence
of 'cu'.  If you now type <Rubout>, the 'u' on the search line is erased
and you'll be repositioned in the text to the occurrence of 'c' where
the search took you before you typed the 'u'.  This provides a useful
means for backing up while you are searching.

If you are in the middle of an I-search and happen to type a control
character (other than a C-S or C-R, which tell VUE to search for
the next occurrence of the string), VUE will attempt to perform
the command associated with that control-character if it is possible.

The C-S command starts a search that looks for any occurrence of the
search string AFTER the current cursor position.  But what if you want
to search for something earlier in the text?  To do this one should type
C-R for Reverse I-search.  Everything that applies to C-S applies to C-R
except that the direction of the search is reversed.


The second type of searching is rather straight forward.  You type the
command M-S followed by your string to search for and terminate with
an <ESC> character.

	M-S text-string <ESC>

VUE then begins searching from the current cursor position until
it finds your specified string, and then it redisplays the screen at
the current point.  If the string is on the current screen, then only
the cursor is moved.

>>  Type M-S search <ESC> and watch where the cursor is positioned.
>>  Now, type M-S <ESC>  and notice that the second occurrance of
    the string "search" is now located by the cursor.  You may also
    type numeric arguments using C-U as in other VUE commands.

Just as C-R performs a "reverse" C-S incremental search, the command
M-R will perform a reverse M-S search.


GETTING MORE HELP
-----------------

In this tutorial we have tried to supply just enough information to
get you started using VUE.  There is also additional documentation
available in the manual "(SYSNEWS)VUE.DOC" as well as a brief
list of commands and their functions available internally to VUE.

>>  Type the command M-?  (Meta Question) for the brief summary now,
    while you are still in this tutorial.  Then, you will remember how
    to get it when you need a quick refresher course.

The list of commands you just saw (from typing M-?)  can also be found
in the file (SYSNEWS)VUE.HLP.


FINIS
-----
Remember, to simply exit use C-X C-C.

This tutorial is meant to be understandable to all new users, so if
you found something unclear, don't sit and blame yourself - complain!

Comments on this document should be sent to (CARL) on system 33.  There
are no guarantees implied or expressed about an answer, but if there
is a problem which needs attention and there is time to look at it, it
might just get done.
-Carl.

   P g