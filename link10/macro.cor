 REP 1/1
	TITLE MACRO %53A(1152)	19-JUL-1979
	SUBTTL EDIT BY MCHC/JBC/EGM
 WIT
	TITLE MACRO %53B(1155)	07-Sep-79
	SUBTTL EDIT BY MCHC/JBC/EGM/MFB
 REP 23/1
		VUPDATE==1		;DEC UPDATE LEVEL
		VEDIT==1152		;EDIT NUMBER
		VCUSTOM==0		;NON-DEC UPDATE LEVEL
 WIT
		VUPDATE==2		;Update level (Rex Shadrick @ EE)
		VEDIT==1155		;EDIT NUMBER (+1167, 1171, 1203-1207)
		VCUSTOM==2		;Edited by customer
 INS 25/3
	;<
 REP 90/3
	;676		PREVENT THE USE OF ARGUMENTS < 4 TO /NNL
 WIT
	;676		PREVENT THE USE OF ARGUMENTS < 4 TO /NNL	;>
 REP 11/4
	;1031		TURN OFF FLAG IN RC TO INDICATE UNDEF IN LITERAL IN STOLIT 
 WIT
	;1031		TURN OFF FLAG IN RC TO INDICATE UNDEF IN LITERAL IN STOLIT
 INS 142/4
	;1153	(Q3465)	Fix assignment of: external "operator" assignment
	;		( X=B##+<N=N+1>-2 ) to generate correct code.
	;1154		Fix phase errors in literals caused by finding polish in
	;		universal files.
	;1155		Set inter-PSECT reference bit on in IO if switching from
	;		macro to symbol at EVAS3.
	;* (Missing edits)
	;1167		Edit 1151 broke more than one LIT in the last program of a
	;		PRGEND'ed file.
	;1171		Fix phase erros generated by macro call inside a literal
	;		with created symbol argument missing.
	;* (Missing edits)
	;1203	PY	1-Oct-80	SPR 10-30018
	;		Remove edit 653, as it is possible to generate UNV files
	;		with synonyms that do not have VARF set.
	;1204	PY	2-Oct-80	SPR 10-29908, 10-30021
	;		Test for inter-PSECT references involving special pointers
	;		with additive fixups that will not go Polish.  These consist
	;		of LEFT,,0 where LEFT is non-zero.
	;1205	PY	3-Oct-80	SPR 10-30043 from CSM
	;		If processing the END statement, and the start address label
	;		has the same name as a macro, do not incorrectly set the
	;		inter-PSECT reference bit.  Broken by Edit 1155.
	;1206	PY	14-Oct-80	SPR 10-30104 from CSM
	;		MCROBL message is printed instead of MCROQE error, prefix
	;		is printed as garbage.
	;1207	PY	16-Oct-80	SPR 10-30103 from CSM
	;		Fix skewed listing when BYTE or SIXBIT psuedo-oprs are used
	;		in PSECTed programs
	;* (Missing edits)
	;1232	PY	17-Jun-82	SPR 10-32674
	;		Allow assignments or opdefs before .COMMON statements.
	;
	;* Start of STC/EE/CSM revisions to MACRO
	;*1*		Add the macro listing option for DEFINE MACRO [SALL],<...>
	;*2*	<	Change the prompt to MAC> and have change the message
	;		prefix to MACxxx instead of MCRxxx.
	;*3*		Add the IFDIFX and IFIDNX pseudo-ops which are the same
	;		as the IFDIF and IFIDN pseudo-ops, respectively, except
	;		lower case is converted to upper case.
	;*4*		More of edit *1*, add the /TEMPORARY and /PERMANENT
	;		switches.
	;*5*		Add the $TOC psudeo-ops, which is the same as SUBTTL
	;		for use with Table-Of-Contents macros in TECO and EMACS.
	;*6*		[CSM] Match angle brackets.
	;  End of STC/EE/CSM revisions to MACRO
	;
 REP 56/5
	OBRCKT=="<"
 WIT
	OBRCKT=="<"			;>
 REP 33/9
	   IFE POLISH,<.URVER==^-<UALL-UPOL>> ;WILL NOT READ POLISH STUFF IN UNV 
 WIT
	   IFE POLISH,<.URVER==^-<UALL-UPOL>> ;WILL NOT READ POLISH STUFF IN UNV
 INS 43/12
	;<
 REP 24/14
			 JFCL		;[714] 
 WIT
			 JFCL		;[714]
 REP 20/16
		TRO ER,ERRM		;FLAG MULTIPLY DEFINED ERROR 
 WIT
		TRO ER,ERRM		;FLAG MULTIPLY DEFINED ERROR
 INS 18/19
	;<
 REP 22/19
		JRST ANGLB		;5; "<"
		JRST SQBRK		;6; "["
		JRST QUOTES		;7; ""","'" 
 WIT
		JRST ANGLB		;5; "<"			;>
		JRST SQBRK		;6; "["
		JRST QUOTES		;7; ""","'"
 REP 49/25
			SUBI AC2,2	;[735] 
 WIT
			SUBI AC2,2	;[735]
 INS 23/27
	;<
 REP 39/27
		CALL ASSIG1
 WIT
		PUSH P,INASGN		;[1153] Save original values of INASGN
		PUSH P,EXTPNT		;[1153]  and EXTPNT around call to ASSIG1
		CALL ASSIG1
		POP P,EXTPNT		;[1153] Restore the values of EXTPNT
		POP P,INASGN		;[1153]  and INASGN
 REP 63/27
		TLO FR,POLSW		;[727] 
 WIT
		TLO FR,POLSW		;[727]
 REP 48/32
		CAIN C,"<"		;[1034] ALLOW <EXP>
 WIT
		CAIN C,"<"		;[1034] ALLOW <EXP>	;>
 INS 31/36
		PUSH P,SX		;[1155] Save SX on stack
		HRRZ SX,SGNCUR		;[1205] Get current PSECT number
		CAMN SX,SGWFND		;[1155] Symbol found in current PSECT?
		JRST EVAS3A		;[1155] Yes, continue
		TLNE ARG,LELF!RELF	;[1155] No, relocation bits on?
		TLO IO,RSASSW		;[1155] Yes, set inter-PSECT ref bit
	EVAS3A:	POP P,SX		;[1155] Restore SX
 REP 13/38
	EVTST1:	TLNN ARG,EXTF		;[740] 
 WIT
	EVTST1:	TLNN ARG,EXTF		;[740]
 REP 59/38
		JUMP2 POLPOP		;[610] YES, OUTPUT IT IN PASS2
 WIT
		JRST POLPOP		;[1154,610] Yes, output it in pass 2
 REP 35/39
		TDNN RC,[777700,,777700] ;CHECK FOR EXTERNALS IN EITHER 
 WIT
		TDNN RC,[777700,,777700] ;CHECK FOR EXTERNALS IN EITHER
 REP 5/44
	POLPOP:	CALL POLFRR		;[636] SET UP FRR POLISH FLAGS
 WIT
	POLPOP:	JUMP1 [	SKIPE LITLVL		;[1154] Inside a literal?
			TRO ER,ERRF		;[1154] Yes, prevent collapsing
			RET]			;[1154]
		CALL POLFRR		;[636] SET UP FRR POLISH FLAGS
 REP 17/44
			CALL GETCHR	;[636] YES, 
 WIT
			CALL GETCHR	;[636] YES,
 REP 26/45
		MOVE PS,CSTAT+'!'	;FORCE IOR 
 WIT
		MOVE PS,CSTAT+'!'	;FORCE IOR
 INS 3/53
	;<
 INS 7/73
	   IFN FTPSECT,<
		SKIPE SGNMAX		;[1207] Listing with PSECTs?
		MOVEI C,3		;[1207] Yes, account for extra characters
	   >
 REP 28/73
		JRST [	CAIL C,^D16	;[717]
 WIT
		JRST [	CAIL C,^D24	;[1207]
 REP 47/73
	   IFN FTPSECT,<		;[717]
		SKIPE SGNMAX		;[717]
		IBP TABP		;[717]
	   >				;[717]
 WIT
	;[1207] Remove 4 lines at BOUT3E+5
 REP 38/75
			CALL COUT	;[735] OUTPUT -1 FOR LEFT 
 WIT
			CALL COUT	;[735] OUTPUT -1 FOR LEFT
 INS 13/76
	   IFN FTPSECT,<
		SKIPE SGNMAX		;[1207] Listing with PSECTs?
		IBP TABP		;[1207] Yes, avoid tab
	   >
 REP 40/77
		CALL COUT		;OUTPUT IT 
 WIT
		CALL COUT		;OUTPUT IT
 REP 62/81
	STOW22:	SKIPN LITLVL		;[614] ARE WE IN LITERAL?
		JRST [AOS LOCA		;NO, INCREMENT ASSEMBLY LOCATION
 WIT

	;[1232] Allow .COMMON after an assignment using ND macro (1-Sep-82 Dispatch)

	STOW22:	SKIPN LITLVL		;[614] ARE WE IN LITERAL?
		JRST [AOS LOCA		;NO, INCREMENT ASSEMBLY LOCATION
			SKIPN INASGN	;[1232] If in ASSIGN
			SKIPE INOPDF	;[1232] or in OPDEF
			JRST .+1	;[1232] No code actually stored
 REP 20/82
		CAIE AC1,(RC)		;DOES IT MATCH 
 WIT
		CAIE AC1,(RC)		;DOES IT MATCH
 REP 11/88
		JUMP2 INZ3		;[1151]  DURING PASS2 - SKIP PSECT INIT
 WIT
		JUMP2 INZ2A		;[1167]  DURING PASS2 - SKIP PSECT INIT
 INS 20/88
	INZ2A:				;[1167]
 INS 27/88
		TLNE IO,MFLSW		;[1167] Doing PRGEND?
		JUMP2 INZ3		;[1167] Yes, skip PSECT init
 REP 25/95
		CAIN C,'<'		;OR START OF CONDITIONAL?
 WIT
		CAIN C,'<'		;OR START OF CONDITIONAL?	;>
 REP 31/95
		CAIE C,'<'		;OLD METHOD USED ANGLES
 WIT
		CAIE C,'<'		;OLD METHOD USED ANGLES		;>
 REP 13/96
		CAIN C,"<"		;LEFT BRACKET?
 WIT
		CAIN C,"<"		;LEFT BRACKET?		;>
 INS 11/97
		ANDI AC0,1		;[*3*] Convert to IFDIF/IFIDN
 REP 31/97
		CAIN C,"<"		;WAS IT LEFT BRACKET?
 WIT
		CAIN C,"<"		;WAS IT LEFT BRACKET?	;>
 REP 45/97
		SOJG SX,.+2		;ANY ROOM IN COMPARISON BLOCK?
 WIT
		CAIGE AC0,2		;[*3*] Skip if upper and lower are the same
		JRST IFCLR2		;[*3*] Go store the character
		CAIL C,"a"		;[*3*] Skip if not a lower case character
		CAILE C,"z"		;[*3*] Skip if a lower case character
		JRST IFCLR2		;[*3*] Not a lower case character
		SUBI C,"a"-"A"		;[*3*] Convert lower to upper case
	IFCLR2:	SOJG SX,.+2		;[*3*] ANY ROOM IN COMPARISON BLOCK?
 REP 1/98
	IFEX1:	CALL GETCHR		;SEARCH FOR "<"
		CAIN C,EOL		;ERROR IF END OF LINE
		JRST ERRAX
		CAIE C,'<'
 WIT
	IFEX1:	CALL GETCHR		;SEARCH FOR "<"		;>
		CAIN C,EOL		;ERROR IF END OF LINE
		JRST ERRAX
		CAIE C,'<'		;	;>
 REP 41/100
		CAIE C,'<'		;[677] IF "<", SET REPEAT AND CONTINUE
 WIT
		CAIE C,'<'		;[677] IF "<", SET REPEAT AND CONTINUE ;>>
 REP 7/118
		JUMPGE RC,OP		;[772] 
 WIT
		JUMPGE RC,OP		;[772]
 REP 30/118
		PUSH P,AC0		;STACK CODE 
 WIT
		PUSH P,AC0		;STACK CODE
 REP 96/119
			JRST .+1]>	;RETURN TO ADD 
 WIT
			JRST .+1]>	;RETURN TO ADD
 REP 14/125
	;THIS IS A GENERALIZE FORCEP-- 
 WIT
	;THIS IS A GENERALIZE FORCEP--
 REP 29/125
	;HERE TO NEGATE A POLISH 
 WIT
	;HERE TO NEGATE A POLISH
 REP 25/127
		MOVE RC,INANGL		;[730] 
 WIT
		MOVE RC,INANGL		;[730]
 REP 30/129
			MOVEM AC1,POLTYP ;[1067] 
 WIT
			MOVEM AC1,POLTYP ;[1067]
 REP 2/135
	; NEW .DIRECTIVE PSEUDO-OP 
 WIT
	; NEW .DIRECTIVE PSEUDO-OP
 REP 46/136
	PSEND3:	CALL PSEND4		;SAVE LAST PROGRAM 
 WIT
	PSEND3:	CALL PSEND4		;SAVE LAST PROGRAM
 REP 15/141
	REPEA2:	CALL GCHARQ		;GET STARTING "<"
 WIT
	REPEA2:	CALL GCHARQ		;GET STARTING "<"		;>
 REP 20/141
		CAIE C,"<"		;"<"?
 WIT
		CAIE C,"<"		;"<"?		;>>
 REP 52/141
		RET			;[664] NO 
 WIT
		RET			;[664] NO
 REP 5/142
	REPZ0:	CALL GCHAR0		;[1003][753] GET STARTING <
 WIT
	REPZ0:	CALL GCHAR0		;[1003][753] GET STARTING <	;>
 REP 10/142
		CAIE C,"<"		;<?
 WIT
		CAIE C,"<"		;<?		;>>
 REP 31/142
	REPO:	CALL GCHAR		;GET "<"
 WIT
	REPO:	CALL GCHAR		;GET "<"		;>
 REP 36/142
		CAIE C,"<"		;<?
 WIT
		CAIE C,"<"		;<?		;>>
 REP 5/143
	BY THE MACRO PROCESSOR.  
 WIT
	BY THE MACRO PROCESSOR.
 REP 2/144
	DEFIN0:	SKIPN UWVER	;WRITING UNV FILE?
 WIT
	DEFIN0:	SKIPN UWVER		;WRITING UNV FILE?
 REP 14/144
	DEF02:	CALL GCHAR0		;[1003] SEARCH FOR "(" OR "<"
 WIT
		SETZM MACLST		;[*1*] Clear the list option
	DEF02:	CALL GCHAR0		;[1003] SEARCH FOR "(" OR "<"	;>
 REP 21/144
		CAIN C,"<"		;"<"?
		JRST DEF20		;YES
 WIT
		CAIN C,"]"		;[*1*] Missing [
		JRST DEFERR		;[*1*] Yes, give an error (strange DEFINE)
		CAIN C,"<"		;"<"?		;>>
		JRST DEF20		;YES
		CAIN C,"["		;[*1*] "["?
		JRST DEF90		;[*1*] Yes
 REP 30/144
		CAIN C,'<'		;A DEFAULT ARGUMENT COMING UP?
 WIT
		CAIN C,'<'		;A DEFAULT ARGUMENT COMING UP?	;>
 REP 40/144
		CAIE C,"<"		;"<"?
 WIT
		CAIE C,"<"		;"<"?		;>>
 INS 4/145
		ADD ARG,MACLST		;[*1*] Also supply the list option
 REP 18/145
		HRRZ C,1(V)		;GET SHIFTED ARG COUNT
		LSH C,-9		;GET ARG COUNT BACK
 WIT
		LDB C,[POINT 7,1(V),26]	;[*1*] Get the argument count
 REP 18/146
			JRST DEF30]	;AND CONTINUE 
 WIT
			JRST DEF30]	;AND CONTINUE
 INS 21/147
	;<
 REP 12/149
		CAIE C,">"		;CLOSING ANGLE?
 WIT
		CAIE C,">"		;CLOSING ANGLE?		;>
 REP 20/149
		JRST DEF12		;YES, LOOK FOR "<"
 WIT
		JRST DEF12		;YES, LOOK FOR "<"		>

	DEF90:	SKIPN MACLST		;[*1*] The first time here?
		CALL GETSYM		;[*1*] Yes, get the macro listing option
		 JRST DEF94		;[*1*] Flag the error
		MOVE AC1,[-3,,1]	;[*1*] Get the number of valid options
	DEF91:	CAME AC0,['LALL  '	    ;[*1*] Was a
			  'SALL  '	    ;[*1*]  match
			  'XALL  ']-1(AC1)  ;[*1*]  found?
		AOBJN AC1,DEF91		;[*1*] No, loop until finished
		JUMPGE AC1,DEF94	;[*4*] Any match found?
		LSH AC1,^D16		;[*1*] Yes, position the result
		HRRZM AC1,MACLST	;[*1*] Save for later
		CAIE C,'/'		;[*4*] Was it terminated with a "/"?
		JRST DEF93		;[*4*] No, go try for a "]" then
		CALL GETSYM		;[*4*] Get the switch
		 JRST DEF94		;[*4*] Flag the error
		MOVSI AC1,-2		;[*4*] Get the number of valid switches
	DEF92:	CAME AC0,['TEMPOR'	;[*4*] Was a match
			  'PERMAN'](AC1);[*4*]  found?
		AOBJN AC1,DEF92		;[*4*] No, loop until finished
		JUMPGE AC1,DEF94	;[*4*] Any match found?
		MOVEI AC0,1_^D15	;[*4*] Yes, get the permanent bit
		TRNE AC1,-1		;[*4*] Temporary?
		ORM AC0,MACLST		;[*4*] No, set the permanent bit
	DEF93:	CAIN C,']'		;[*4*] Was it terminated with a "]"?
		TLZA IO,IORPTC		;[*1*] Don't reeat the "]"
	DEF94:	TRO ER,ERRA		;[*1*] Flag the error
		JRST DEF02		;[*1*] Get back into the main loop
 REP 15/150
		LDB SX,[POINT 9,SDEL,26] ;GET ARG COUNT
 WIT
		LDB SX,[POINT 3,SDEL,20];[*4*] Get the macro
		MOVEM SX,MACLST		;[*1*]  listing option
		LDB SX,[POINT 6,SDEL,26];[*4*] Get the argument count
 REP 35/150
		CAIG C,CR
 WIT
		SKIPN LITLVL		;[1171] Inside a literal?
		JRST MAC10A		;[1171] No
		CAIN C,"]"		;[1171] Closing bracket?
		JRST MAC21		;[1171] Yes, Go set up argument list
	MAC10A:	CAIG C,CR
 REP 50/150
		CAIN C,"<"		;"<"?
 WIT
		CAIN C,"<"		;"<"?		;>>
 REP 24/151
		CAIN C,"<"		;OPEN ANG BKT?
 WIT
		CAIN C,"<"		;OPEN ANG BKT?		;>
 REP 25/152
		EXCH MP,RP		;[1015] 
 WIT
		HLLZ SX,IO		;[*1*] Get a copy of the IO flags
		TLZ SX,^-<IOPALL!IOSALL>;[*1*] Save the new listing option
		ADD SX,MACLST		;[*1*] Get the new listing option
		PUSH MP,SX		;[*1*] Save for later
		JUMP1 MAC21F		;[*1*] Jump if pass 1
		SKIPE MACOPT		;[*1*] Is the macro list option wanted?
		JRST MAC21F		;[*1*] No, don't change the listing then
		TLZ IO,IOPALL!IOSALL	;[*1*] Clear the listing flags
		XCT    [TDO IO,SX		;[*1*] Don't change the listing
			HALT			;[*4*] Should never here
			JFCL			;[*1*] LALL/Temporary
			JFCL			;[*4*] LALL/Permanent
			TLO IO,IOPALL!IOSALL	;[*1*] SALL/Temporary
			TLO IO,IOPALL!IOSALL	;[*4*] SALL/Permanent
			TLO IO,IOPALL		;[*1*] XALL/Temporary
			TLO IO,IOPALL](SX)	;[*4*] XALL/Permanent
	MAC21F:	EXCH MP,RP		;[*1*,1015]
 REP 29/152
		JUMPN MRP,MAC27		;IN MACRO?
		CALL SEMSRC		;CHECK FOR IMMEDIATE COMMENT
 WIT
		JUMPE MRP,MAC21G	;[*1*] Top level macro?
		TLNE SX,-1		;[*1*] No, previous level LALL?
		JRST MAC27		;[*1*] No, leave the character
		TLZ IO,IOPALL!IOSALL	;[*1*] Switch to LALL for awhile
	MAC21G:	CALL SEMSRC		;[*1*] Check for an immediate comment
 INS 37/152
		TLO IO,IOPALL!IOSALL	;[*1*] Change back to SALL
 INS 47/154
	;<
 REP 13/155
	;HERE IF ENCOUNTERED UNQUOTED "<", "[", OR "(".  SCAN TO MATCHING
 WIT
	;HERE IF ENCOUNTERED UNQUOTED "<", "[", OR "(".  SCAN TO MATCHING  ;>
 REP 17/157
		SKIPA MP,MACPNT		;RESET MP AND SKIP
 WIT
		MOVS MP,(MP)		;[*1*] Get the old list option
		JUMP1 MACEN4		;[*1*] Jump if pass 1
		SKIPE MACOPT		;[*1*] Is listing option wanted?
		JRST MACEN4		;[*1*] No, don't reset it then
		TLNN MP,1		;[*4*] Was /Permanent given?
		TLNN MP,-1		;[*1*] No, was the list option specified?
		JRST MACEN4		;[*1*] No, don't reset it then
		TLZ IO,IOPALL!IOSALL	;[*1*] Clear some flags
		TLO IO,(MP)		;[*1*] Restore the list option
	MACEN4:	SKIPA MP,MACPNT		;[*1*] Reset MP and skip
 REP 21/157
		JUMPG V,MACEN1		;IF >0, DECREMENT REFERENCE
		JUMPL V,MACEN2		;IF <0, BYPASS
 WIT
		JUMPL V,MACEN2		;IF <0, BYPASS
		JUMPG V,MACEN1		;IF >0, DECREMENT REFERENCE
 REP 8/158
		CAIE C,"<"
 WIT
		CAIE C,"<"		;	;>
 REP 32/158
	IRP15:	CALL MREADS		;GET A CHARACTER LOOKING FOR "<"
		CAIE C,"<"		;"<"?
 WIT
	IRP15:	CALL MREADS		;GET A CHARACTER LOOKING FOR "<"	;>
		CAIE C,"<"		;"<"?		;>>
 INS 38/158
	;<
 REP 36/167
		MOVEM CS,HWFMT>		;SET IT (TEMP) 
 WIT
		MOVEM CS,HWFMT>		;SET IT (TEMP)
 REP 66/167
		MOVEI C,"*"
		IDPB C,CTOBUF+1
 WIT
	;< [*2*] Match angle brackets
		MOVEI CS,['MAC>@ ']	;[*2*] Output a
		PUSHJ P,TYPM2		;[*2*]  prompt
 REP 8/170
		MOVEM ACPPN,INDIR+3	;SET PPN 
 WIT
		MOVEM ACPPN,INDIR+3	;SET PPN
 REP 149/177
		DPB 2,[POINT 3,1,23]	;MERGE TO BITS 
 WIT
		DPB 2,[POINT 3,1,23]	;MERGE TO BITS
 REP 9/178
		TLO FR,MTAPSW!LOADSW	;SET FLAGS 
 WIT
		TLO FR,MTAPSW!LOADSW	;SET FLAGS
 INS 28/182
	;<
 INS 46/182
	;<
 INS 21/185
		SETSW D,<SETOM MACOPT>	;[*1*] Disable macro listion option
 REP 31/186
	ERRNE0:	CALL EFATAL		;OUTPUT CR-LF ?MCR
 WIT
	ERRNE0:	CALL EFATAL		;OUTPUT CR-LF ?MAC
 REP 85/186
	?MCRFNF FILE NOT FOUND-/]
 WIT
	?MACFNF FILE NOT FOUND-/]		;[*2*]
 REP 92/186
	?MCRRFO REL FILE OPEN ERROR - /]
		JRST EINIT0
	EINIT2:	OUTSTR [ASCIZ/
	?MCRLFO LST FILE OPEN ERROR - /]
 WIT
	?MACRFO REL FILE OPEN ERROR - /]	;[*2*]
		JRST EINIT0
	EINIT2:	OUTSTR [ASCIZ/
	?MACLFO LST FILE OPEN ERROR - /]	;[*2*]
 REP 44/187
		MOVE CS,PREFIX		;[1066] OUTPUT PREFIX
 WIT
	;[*2*] This one edit will change the prefix on all messages
		MOVE CS,PREFIX		;[1066] OUTPUT PREFIX
		HRLI CS,'MAC'		;[*2*] Use 'MACxxx' instead of 'MCRxxx'
 REP 36/193
		TLNN CS,DSKBIT		;SKIP IF DSK OUTPUT
 WIT
		TLNE CS,DSKBIT		;[1206] If not DSK output
		JRST ERRFIN		;[1206]  keep above QUOTA EXCEEDED message
 REP 54/204
		MOVEM AC0,UNVDIR	;RESTORE NAME OF UNV 
 WIT
		MOVEM AC0,UNVDIR	;RESTORE NAME OF UNV
 REP 77/204
		CALL UNVREAD		;READ 
 WIT
		CALL UNVREAD		;READ
 REP 49/213
	   IFN IIISW,<X ASCID , 773>
 WIT
	   IFN IIISW,<X ASCID , 775>	;[*3*]
 INS 50/215
	X IFDIFX, 773			;[*3*]
 INS 54/215
	X IFIDNX, 774			;[*3*]
 INS 70/219
	X $TOC,723			;*5* Alternate SUBTTL

 INS 67/223
		Z IFIDN0 (2)		;[*3*] IFDIFX
		Z IFIDN0 (3)		;[*3*] IFIDNX
 REP 58/229
		PUSH P,ER		;SAVE 
 WIT
		PUSH P,ER		;SAVE
 REP 64/230
	SRCHSP:	SKIPL 1(ARG)		;[1116] POINTER TO POLISH DEFINITION?
		SKIPE (ARG)		;[1116] OR EXT+N WHICH WILL GO POLISH
		JRST SRCH4		;[1116] YES - NO NEED TO COPY SYMBOLS
 WIT
	SRCHSP:	SKIPGE 1(ARG)		;[1204] Pointer to Polish definition?
		 JRST SRCH4		;[1204] Yes - no need to copy symbols
		MOVE AC1,(ARG)		;[1204] Get addition
		TRNN AC1,-1		;[1204] Is right half non-zero?
		TLNN AC1,-1		;[1204]  or all zero?
		 JRST SRCH4		;[1116] YES - NO NEED TO COPY SYMBOLS
 INS 141/230
	  REPEAT 0,<	;Removed by edit [1203]   1-Oct-80
 INS 149/230
	  >  ;End of REPEAT 0		;[1203]
 INS 114/240
	MACOPT:	BLOCK 1			;[*1*] Disable the macro listing option

 INS 100/241
	MACLST: BLOCK 1			;[*1*] Macro list option flags
 REP 107/241
	LOCAL:	BLOCK 1			;LINKED LIST OF LOCAL FIXUPS 
 WIT
	LOCAL:	BLOCK 1			;LINKED LIST OF LOCAL FIXUPS
 REP 162/241
	POLAD0:	BLOCK 1			;[1060] FIXUP ADDRESS FOR ?MCRPTC
	POLSY0:	BLOCK 1			;[1060] FIXUP SYMBOL FOR ?MCRPTC
	POLPS0:	BLOCK 1			;[1060] FIXUP PSECT FOR ?MCRPTC
 WIT
	POLAD0:	BLOCK 1			;[1060] FIXUP ADDRESS FOR ?MACPTC
	POLSY0:	BLOCK 1			;[1060] FIXUP SYMBOL FOR ?MACPTC
	POLPS0:	BLOCK 1			;[1060] FIXUP PSECT FOR ?MACPTC
 REP 169/241
	PREFIX:	BLOCK 1			;[1066] PREFIX FOR ERROR MESSAGE (MCRxxx)
 WIT
	PREFIX:	BLOCK 1			;[1066] PREFIX FOR ERROR MESSAGE (MACxxx) [*2*]
 REP 43/242
 WIT

 SUM 2296
    