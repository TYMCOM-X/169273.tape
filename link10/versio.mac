SUBTTL	/DVB/TJW/JMS, 17-Jun-80

; Required Universals

	SEARCH	SYSUNV			; Shadrick's definitions

; Assembly Directives

	.DIRECTIVE	FLBLST		; For pretty listing
	SALL				;  ...


	$BEGIN	(VERSION -- Sets version numbers on files,VSN,2(17)-2,<TOPS10,SCAN,WILD,TYPER,HELPER>)


;===============================================================================

;		List of known bugs or suggestions

; Allow ".VERSIO *=*" to lookup all EXE files and set the version number
;on all corresponding source files.

;===============================================================================

;                  Table of Contents for VERSIO
;
;
;			   Section			      Page
;
;    1. Revision History . . . . . . . . . . . . . . . . . . .   2
;    2. Comments . . . . . . . . . . . . . . . . . . . . . . .   3
;    3. Misc definitions & SCAN Interface  . . . . . . . . . .   4
;    4. Storage  . . . . . . . . . . . . . . . . . . . . . . .   5
;    5. Initialization, Main Loop, and Prompt Routine  . . . .   6
;    6. GETVER - Get version from input  . . . . . . . . . . .   7
;    7. FMTFOP - Routine to Format a FILOP Block . . . . . . .   9
;    8. DOFILS - Process All Files with Extended Rename  . . .  10
;    9. VEREXE - Read .JBVER from EXE file . . . . . . . . . .  11
;   10. ALCIN/ALCOUT - Routines to Allocate for Input/Output .  12
SUBTTL	Revision History

	COMMENT	~

Version 1

1	Written by Don Burt

2	?

3	Modified by TJW


Start of version 2

4	Converted to use SYSUNV instead of STCUNV.  Set up to RESCAN
	command line when called by ".VERSION OUT=IN".  The monitor was
	patched to run SYS:VERSIO.EXE if arguments are given to the
	".VERSION" command.  (With no arguments, it still types the
	version number of the current core image.)  Joe Smith at the
	Colorado School of Mines, 17-Jun-80.

5	LOOKUP file.EXE if no extension.

6	Close the input file so the RENAMEs work.  701 load 053 was getting
	error code 4 for each file until the original EXE file was closed.

7	LOOKUP each file so the RENAME really sets .RBVER, this seems to be
	a bug in 7.01 load 053.  Without the LOOKUP, the FILOP. got the
	skip return but did nothing.

10	Copy ALL of the LOOKUP block, so as to preserve .RBSPL, etc.

11	Add /NAME:SPOOLING-NAME switch to set .RBSPL.

12	Preserve FO.PRV when doing the RENAME

13	Allow ".VERSION [13,52].UFD=/NAME:JOE"

Edit	   Date    Who	              Description
====	=========  ===	===================================================
  14	 1-Feb-82  JMS	Add /DATE switch to change creation date.
			This switch is NOT documented and should not be.

  15	 9-Feb-83  JMS	/DATE with no argument uses input file date.

  16	 9-Feb-83  JMS	Read .EXE file if no /VERSION value and zero .RBVER

  17	 5-Apr-84  JMS	Add /MODE to change RB.MOD (for SED vs KERMIT)

	~	; End comment
SUBTTL	Comments

	Comment ~	VERSIO.HLP	9-Jul-80

This program gives the user the ability to set the version word and
spooling name of any file.  These two words will then show up in the
DIRECTory command and provide further identification of files.

Example of use:

  .VERSION COMPIL=COMPIL	;Get version number and spooling
				; name from COMPIL.EXE and put them
				; on COMPIL.* (.REL, .MAC, etc)

  .VERSION REL:SCN7C.REL=/VERSION:7C(575)	;Versify REL file

  .VERSION SWITCH.INI=/NAME:JOE		;Set spooling name to "JOE"

  .VERSION SYS:FORLIB.REL=/VERSION:5A(721)/NAME:KI	;KI version

  .R VERSIO			;Can be started by the ".R" command
  VSN>COMPIL.REL,COMPIL.MAC=COMPIL.EXE	;Multiple output files allowed

Wildcards are allowed on the output side, if the extension is not
given, it defaults to "*".   The argument to /VERSION: is  the
standard DEC format, such as 1A(3)-2, where:

	1	the major version
	A	the minor version
	3	the current edit level
	2	indicator of who last edited (customer in this case)

Restrictions:

1) A maximum of 8 output files can be specified.  Use more lines if
   necessary.
2) The equals sign MUST be given.  This allows the scanner and other
   parts of the program to easily tell output specs from input specs.

[End of VERSIO.HLP]
~	;End of COMMENT
SUBTTL	Misc definitions & SCAN Interface

; I/O Channel Definitions

	CHNW==1			; For WILD
	CHND==2			; For LOOKUP and RENAME action

; Default Assembly Parameters

	$ND	EXTLEN,.RBEST+1		; Length of extended RENAME/LOOKUP block
	$ND	MAXSPC,^D8		; Most output specifications
	$ND	PDLEN,100		; Push down list

; Scan interface

DEFINE	SWTCHS,<
	SP *DATE,S.DATE,.DATIM##,, <FS.LRG!FS.NFS!FS.NCM>	;[15]
	SP *NAME,S.NAME,SIXQWW,,   <FS.LRG!FS.NFS!FS.NCM>	;[11]
	SP *MODE,S.MODE,.OCTNW##,,        <FS.NFS!FS.NCM!FS.VRQ>;[17]
	SP *VERSI,S.VERS,.VERSW##,,<FS.LRG!FS.NFS!FS.NCM!FS.VRQ>
>	; End SWTCHS


; Generate Switch Table

	DEFINE	CONT.,<>		;So that this fits on one page
	DEFINE	$CONTINUE,<>		;In case of Shadrick's definitions

	$HIGH				;Start in HISEG

	DOSCAN VSN

; SCAN and WILD

ISNBLK:	IOWD	1,PRGNAM		; RESCAN for VERSIO
	XWD	RUNOFF,TP.PFX		; Run offset, CCL name
	0				; No special char routines
	0				; No indirect file
	DOPRMT,,0			; Prompt,,No MONRET
	0				; No flags
ISNPTR:	<.-ISNBLK>,,ISNBLK		; Pointer for call to ISCAN

TSNBLK:	IOWD VSNL,VSNN			; User switches
	XWD  VSND,VSNM			;  ...
	XWD  0,VSNP			;  ...
PRGNAM:	SIXBIT	/VERSIO/		; Use our name for help
	0				; No clear routines
	ALCIN,,ALCOUT			; Scan block allocation routines
	0				; No sticky processing
	1B18!1B19			; Allow multiple outputs
TSNPTR:	<.-TSNBLK>,,TSNBLK		; Pointer for call to TSCAN

LKWLDB:	LKWP1,,LKWP2			; Locations for spec pointers
	OPNBLK,,LKPBLK			; Open,,lookup blocks
	.FXLEN,,EXTLEN			; Length of blocks
	200000+CHNW,,LKWP3		; Dir before SFD's+chn,,pointer to current block
	0				; Routine to call at end directory
SUBTTL	Storage

	$LOW				; All in the Low seg

RUNOFF:	BLOCK	1			; Run offset
PDL:	BLOCK	PDLEN			; Stack
SAVFF:	BLOCK	1			; For core reuse

LKWP1:	BLOCK	1			; Pointers for .LKWLD
LKWP2:	BLOCK	1			;  ...
LKWP3:	BLOCK	1			;  ...

; SCAN switches

S.VERS:	BLOCK	1			; Version
S.NAME:	BLOCK	1			; Spooling name			[11]
S.DATE:	BLOCK	1			; Date				[14]
S.MODE:	BLOCK	1			; Mode				[17]

; File specs and associated values (cleared on each command)

IZERO:!					; Start of area to zero
ISPEC:	BLOCK	.FXLEN+1		; Holds ISPEC and in-use flag (hence +1)
OSPEC:	BLOCK	<.FXLEN*MAXSPC>		; Block for OSPECs (MAXSPC of them)
SPCCNT:	BLOCK	1			; Holds count of OSPEC's seen
IZERND=.-1				; Zero to here for each command

; File handling areas

FOPBLK:	BLOCK	.FOPAT+1		; FILOP block
OPNBLK==FOPBLK+.FOIOS			; OPEN block for .STOPB
LKPBLK:	BLOCK	EXTLEN			; For LOOKUPs
RENBLK:	BLOCK	EXTLEN			; For RENAMEs
PTHSPC:	BLOCK	.PTMAX			; Path as specified by user
PTHFOP:	BLOCK	.PTMAX			; Real path returned by FILOP.
IBUF:	BLOCK	3			; Input buffer header		[15]
SUBTTL	Initialization, Main Loop, and Prompt Routine

	$HIGH				; All code in the high seg

; Initialization

VSN:	TDZA	T1,T1			; Standard entry point
	 MOVEI	T1,1			;  ...
	MOVEM	T1,RUNOFF		;  ...
	RESET				; Clear the World
	MOVE	P,[IOWD PDLEN,PDL]	; Load stack pointer
	MOVE	T1,ISNPTR		; Set up to call ISCAN
	PUSHJ	P,.ISCAN##		; Initialize SCAN
	MOVSI	T1,TP.PFX		; Set up to
	$TYPES	(INI)			;  initialize TYPER
	MOVE	T1,.JBFF		; Get our size now
	MOVEM	T1,SAVFF		; And save so can reset per command
					; Fall into main loop

; Main Loop

MAIN:	SETZM	SPCCNT			; Clear count of OSPECs seen
	STORE	(T1,IZERO,IZERND)	; Zero the data area
	SETOM	S.VERS			; Clear version value
	SETOM	S.NAME			; Clear name switch		[11]
	SETOM	S.DATE			; Clear date switch		[14]
	SETOM	S.MODE			; Clear mode switch		[17]
	MOVE	T1,SAVFF		; Get first free at start of command
	MOVEM	T1,.JBFF		; And reset so we reuse disk buffers
	MOVE	T1,TSNPTR		; Set up to call
	PUSHJ	P,.TSCAN##		;  traditional scanner
	PUSHJ	P,GETVER		; Go get the input version number
	  JRST	MAIN			; Couldn't, error message out
	PUSHJ	P,DOFILS		; Now loop thru all OSPECs setting version
	JRST	MAIN			; Done this command, get next


; Prompt Routine
;< Matching angle brackets

DOPRMT:	MOVEI	T1,">"			; Top level prompt
	$TYPES	(PRM)			; Issue the prompt
	POPJ	P,			; Return

;  Routine to get a single SIXBIT word

SIXQWW:	PUSHJ	P,.SIXQW##		; Get string			[11]
	MOVE	P3,.NMUL##		; Get first word		[11]
	POPJ	P,			; Return result			[11]
SUBTTL	GETVER - Get version from input


; First check for input file

GETVER:	HLRZ	T1,OSPEC+.FXEXT		; Get the output extension	[13]
	CAIN	T1,'UFD'		; Doing the UFD?		[13]
	 SETOM	OSPEC+.FXNAM		; Yes, there is an output file	[13]
	SKIPN	OSPEC+.FXNAM		; Did user give any output files
	 $TYPE	(F,OFR,$NON,<Output Files Required>,,P)
	SKIPE	ISPEC+1			; Did user give an ISPEC
	 JRST	GETINP			; Yes, go LOOKUP input file

; Here if no input file

	MOVE	T1,S.VERS		; Get /VERSION value
	MOVE	T2,S.NAME		; Get /NAME value		[14]
	MOVE	T3,S.DATE		; Get /DATE value		[14]
	MOVE	T4,S.MODE		; Get /MODE value		[17]
	CAMN	T1,[-1]			; /VERSION specified?
	CAME	T2,[-1]			;  or /NAME?			[14]
	 JRST	.POPJ1##		; Yes to one or the other	[16]
	CAMN	T4,[-1]			; Check /MODE			[17]
	CAME	T3,[-1]			; No /NAME or /VER, check /DATE	[14]
	 JRST	.POPJ1##		; OK				[16]
	$TYPE	(F,MUS,$NON,<Must use /VERSION or /NAME if no input file>,,P)

; Read current version, name, and date from input file

GETINP:	SKIPN	T1,ISPEC+.FXEXT		; Was an extention supplied?	[16]
	 HRLOI	T1,'EXE'		; No, use .EXE if no period	[16]
	MOVEM	T1,ISPEC+.FXEXT		; Save				[16]
	MOVE	T1,[.FXLEN,,ISPEC]	; Set up to convert
	MOVEI	T2,OPNBLK		;  SCAN block to
	MOVE	T3,[EXTLEN,,LKPBLK]	;  OPEN/LOOKUP
	MOVEI	T4,PTHSPC		;  ...
	PUSHJ	P,.STOPB##		; Let SCAN do work
	  $TYPE	(F,ISW,$NON,<Input Specification Cannot be Wild>,,P1)
;(Future versions of this program may allow wildcards on input)

	MOVEI	T1,EXTLEN-1		; Get number of args
	MOVEM	T1,LKPBLK		; And store since .STOPB doesn't
	MOVEI	T1,.FORED		; Get function we want
	PUSHJ	P,FMTFOP		; Format FILOP block
	HRRZS	FOPBLK+.FOLEB		; Clear RENAME address here
	MOVEI	T1,IBUF			; Set up input buffer		[15]
	MOVEM	T1,FOPBLK+.FOBRH	;  to read .JBVER from input	[15]

; LOOKUP the input file to read it's /NAME/VERSION/DATE

	MOVE	T1,[XWD	.FOPAT+1,FOPBLK]; Point to block		[5]
	FILOP.	T1,			; Try to LOOKUP
	  $TYPE	(F,LKE,$ERR,<Lookup Failed, |>,,P,,[FOPBLK])
; Check if /DATE needs to be defaulted

CHKDAT:	SKIPE	S.DATE			; /DATE with no argument?	[15]
	 JRST	CHKVER			; Argument or default of -1	[15]
	LDB	T1,[$POINT LKPBLK+.RBEXT,RB.CRX] ; Get creation date	[15]
	LDB	T2,[$POINT LKPBLK+.RBPRV,RB.CRD]
	LSH	T1,^D12			; Shift the DATE75 bits		[15]
	IOR	T2,T1			; Combined date in T2		[15]
	LDB	T1,[$POINT LKPBLK+.RBPRV,RB.CRT] ; Get creation time	[15]
	IMULI	T1,^D<60*1000>		; Convert minutes to milliseconds [15]
	PUSHJ	P,.CNVDT##		; Convert to UDT format		[15]
	MOVEM	T1,S.DATE		; Fill in the /DATE argument	[15]

; Default version from .RBVER if needed

CHKVER:	MOVE	T1,S.VERS		; Get user specified version	[16]
	CAME	T1,[-1]			; Default?			[16]
	 JRST	CHKNAM			; No, use it			[16]
	SKIPN	T1,LKPBLK+.RBVER	; Get version from input RIB	[16]
	 PUSHJ	P,VEREXE		; Read .JBVER from EXE file	[16]
	SKIPE	T1			; If nonzero,			[16]
	 MOVEM	T1,S.VERS		;  propagate it to output file	[16]

; Default name from .RBSPL if needed

CHKNAM:	MOVE	T1,S.NAME		; Get the supplied spooling name[11]
	CAME	T1,[-1]			; Default?			[11]
	 JRST	GOTINP			; No, use it			[11]
	SKIPE	T1,LKPBLK+.RBSPL	; Otherwise get from input file	[11]
	 MOVEM	T1,S.NAME		; -1 means do not change	[11]

GOTINP:	MOVEI	T1,CL.ACS!CL.DAT	; Don't update access date	[16]
	MOVEM	T1,FOPBLK+.FOIOS	;  and don't save access data	[16]
	MOVEI	T1,.FOCLS		; Close the channel		[6]
	HRRM	T1,FOPBLK+.FOFNC	;  so that the RENAMEs		[6]
	MOVE	T1,[2,,FOPBLK]		;  have an unOPENed channel	[6]
	FILOP.	T1,			;  and will succeed		[6]
	  JFCL				; Not very likely		[6]
	JRST	.POPJ1##		; Skip return back to MAIN+13
SUBTTL	FMTFOP - Routine to Format a FILOP Block

FMTFOP:	HRLI	T1,CHND+(FO.PRV)	; Get left half ready
	MOVEM	T1,FOPBLK+.FOFNC	; Save in block
	MOVEI	T1,.IOBIN		; Binary mode			[16]
	MOVEM	T1,FOPBLK+.FOIOS	;  ...				[16]
	SETZM	FOPBLK+.FOBRH		; No buffers
	SETZM	FOPBLK+.FONBF		;  ...
	MOVE	T1,[RENBLK,,LKPBLK]	; Address of RENAME,,LOOKUP
	MOVEM	T1,FOPBLK+.FOLEB	;  ...
	MOVE	T1,[.PTMAX,,PTHFOP]	; Path that file was actually found on
	MOVEM	T1,FOPBLK+.FOPAT	;  ...
	POPJ	P,


; Examine All Output specs

DOFILS:	SETZM	LKWP3			; Clear pointer to current spec block
	MOVEI	T1,OSPEC		; Get pointer to first spec
	MOVEM	T1,LKWP1		; Save for wild
	MOVE	T2,SPCCNT		; Get number specs user gave us
	MOVEI	T1,.FXLEN		; Length of a block
	IMULI	T1,-1(T2)		; Offset to last block
	ADDI	T1,OSPEC		; Now address of last block
	MOVEM	T1,LKWP2		; Save for WILD

DOFLS1:	MOVE	T1,[5,,LKWLDB]		; Set up for call to
	PUSHJ	P,.LKWLD##		; WILD for a spec
	  POPJ	P,			; No more, quit here
	PUSHJ	P,.CHKTM##		; See if time constraints
	  JRST	DOFLS1			; Yes, try next
	MOVEI	T1,.FORED		; Read the current RIB of file	[7]
	PUSHJ	P,FMTFOP		;  ...
					; Continue at LOKUP
SUBTTL	DOFILS - Process All Files with Extended Rename

LOKUP:	MOVE	T1,[XWD	.FOPAT+1,FOPBLK]; Point to block		[7]
	FILOP.	T1,			;  ...
	  $TYPE	(W,CFO,$ERR,<Cannot access output file, |>,,DOFLS1,,[FOPBLK]);	[7]
	MOVEI	T1,PTHFOP		; Get PATH that FILOP. returned	[7]
	MOVEM	T1,LKPBLK+.RBPPN	; Store for TYPER		[7]
	MOVE	T1,[XWD LKPBLK,RENBLK]	; Set up a BLT pointer		[10]
	BLT	T1,RENBLK+EXTLEN-1	; Copy the RIB data (.RBSPL in particular) [10]

	MOVE	T1,S.VERS		; Get the current version number [10]
	CAME	T1,[-1]			; If /NAME only, do not change version [11]
	 MOVEM	T1,RENBLK+.RBVER	; This is the whole point of this program [10]
	MOVE	T1,S.NAME		; Get the spooling name		[11]
	CAME	T1,[-1]			; If given,			[11]
	 MOVEM	T1,RENBLK+.RBSPL	;  store value			[11]
	MOVE	T1,S.MODE		; Get the file mode		[17]
	CAME	T1,[-1]			; If given,			[17]
	 DPB	T1,[$POINT RENBLK+.RBPRV,RB.MOD] ;set it		[17]
	SKIPE	T1,S.DATE		; Should be filled in or default[15]
	CAMN	T1,[-1]			; If not specified,		[14]
	 JRST	RENAM			;  leave it alone		[14]

	PUSHJ	P,.CNTDT##		; Convert UDT to 15 bit		[14]
	DPB	T2,[$POINT RENBLK+.RBPRV,RB.CRD] ;Set low order 12 bits	[14]
	LSH	T2,-^D12		;Shift bits over		[14]
	DPB	T2,[$POINT RENBLK+.RBEXT,RB.CRX] ;Set 3 bit date extension[14]
	ADDI	T1,^D30000		; Do rounding			[14]
	IDIVI	T1,^D60000		; Convert milliseconds to minutes [14]
	SKIPE	T1			; If time was specified,	[14]
	 DPB	T1,[$POINT RENBLK+.RBPRV,RB.CRT] ;Set creation time	[14]

RENAM:	MOVEI	T1,.FORNM		; Set to RENAME now		[7]
	HRRM	T1,FOPBLK+.FOFNC	;  ...				[12]
	MOVE	T1,[XWD	.FOLEB+1,FOPBLK]; Point to block
	FILOP.	T1,			; Change the version number
	  $TYPE	(W,RNF,$ERR,<Rename Failed, |>,,DOFLS1,,[FOPBLK])
	SKIPN	RENBLK+.RBSPL		; Different message if no spool name [11]
	 $TYPE	(I,RNE,$IND,<Renamed | to %|>,,DOFLS1,,<$LKP [FOPBLK],$VER RENBLK+.RBVER>)
	$TYPE	(I,RNS,$IND,<Renamed | to %| (|)>,,DOFLS1,,<$LKP [FOPBLK],$VER RENBLK+.RBVER,$SIX RENBLK+.RBSPL>)
SUBTTL	VEREXE - Read .JBVER from EXE file

;This code was stolen from DIRECT version 6.  Entire page added by edit [16]

VEREXE:	MOVEI	T3,0		;Clear progress count
VERE.1:	PUSHJ	P,NEXTDW	;Get block type of header
	  JRST	RETZER		;None if EOF
	JUMPE	T1,RETZER	;If block header=0, skip reading further
	AOS	T3		;Count word
	HLRZ	T2,T1		;Get block type
	CAIN	T2,1776		;See if exe directory
	JRST	VERE.3		;Yes, go lookup page 0
	CAIL	T2,1776		;If not valid type,
	JRST	RETZER		; exit without version
	HRRZ	T2,T1		;Ok, get block size
VERE.2:	SOJLE	T1,VERE.1	;(allow for first word)
	PUSHJ	P,NEXTDW	;Skip this block
	  JRST	RETZER		;Give up if EOF
	AOS	T3		;Count progress
	JRST	VERE.2		;Loop
VERE.3:	HRRZ	T4,T1		;Directory, get size
	LSH	T4,-1		;Get count of biwords
VERE.4:	SOJL	T4,RETZER	;Give up if not in directory
	PUSHJ	P,NEXTDW	;Get first word of pair
	  JRST	RETZER		;Give up if end
	MOVE	T2,T1		;Save for a minute
	PUSHJ	P,NEXTDW	;Get second word of pair
	  JRST	RETZER		;Give up
	ADDI	T3,2		;Count progress
	TRNE	T1,-1		;See if page 0
	JRST	VERE.4		;No--loop over directory
	HRRZ	T4,T2		;Get position in file
	LSH	T4,^D9		;Convert to words
	SUB	T4,T3		;Allow for current position
	JUMPLE	T4,RETZER	;Error if behind us
	ADDI	T4,.JBVER	;Set to version location
VERE.5:	PUSHJ	P,NEXTDW	;Advance to word
	  JRST	RETZER		;Give up if end
	SOJGE	T4,VERE.5	;Read up to .JBVER
	POPJ	P,		;Value returned in T1

;Routine to read next data word from input file

NEXTDW:	SOSGE	IBUF+2		;Check word count
	 JRST	GETBUF		;Need new buffer
	ILDB	T1,IBUF+1	;Get next word
	JRST	.POPJ1##	;Skip return

GETBUF:	MOVEI	T1,.FOINP	;Input function
	HRRM	T1,FOPBLK+.FOFNC
	MOVE	T1,[1,,FOPBLK]	;Point to arg
	FILOP.	T1,		;Read next block
	  JRST	RETZER		;Assume EOF
	JRST	NEXTDW		;Try again
SUBTTL	ALCIN/ALCOUT - Routines to Allocate for Input/Output Specs


; Input allocation routine

ALCIN:	AOSG	ISPEC+.FXLEN		; Flag block as in use
	 $TYPE	(F,MII,$NON,<Multiple Inputs are Illegal>,,VSN)
	MOVEI	T1,ISPEC		; Address of block
	MOVEI	T2,.FXLEN		; And size
	POPJ	P,			; Back to SCAN


; Output allocation routine

ALCOUT:	AOS	T2,SPCCNT		; Increment counter for specs seen
	CAILE	T2,MAXSPC		; Within limit of storage block still?
	  $TYPE	(F,EMS,$DEC,<Exceeded Max Spec Count of |; Use Two Lines>,,VSN,,[MAXSPC])
	MOVEI	T1,.FXLEN		; Get block length
	IMULI	T1,-1(T2)		; Times number allocated
	ADDI	T1,OSPEC		; Plus base of blocks
	MOVEI	T2,.FXLEN		; Tell SCAN size and..
	POPJ	P,			; Return


RETZER:	MOVEI	T1,0		;Return zero on EOF
	POPJ	P,

LITS:	$END	VSN
  