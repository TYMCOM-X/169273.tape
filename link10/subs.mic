; SETBANK - SETS REQUESTED MEMORY BANK. ALSO SETS PROPER ACCESS SPEED.
;       UPON ENTRY: ACCUMULATOR = BANK NUMBER
;       UPON EXIT: MEMORY BANK AND SPEED IS SET.
;       RETISTERS USED: ACC, REG Y
;       RETISTERS NOT USED: REG X
;
; PAGE 00:
CURBANK: DS     1       ; CURRENT ACTIVE MEMORY BANK
; PAGE 3E:
BANKSEL EQU     3EFFH   ; MEMORY BANK SELECT
; PAGE 50:
CSPEED  EQU     502BH   ; CAPSULE SPEED FLAG
CSBIT   EQU     04H     ; CAPSULE SLOW BIT
;
SETBANK: CMP    CURBANK ; REQUESTING A BANK CHANGE?
        BEQ     SETBKX  ; BRANCH IF NO
        STA     CURBANK ; SET NEW BANK IF YES
        CMP     #4      ; INTRINSIC CAPSULE?
        BPL     SETBK1  ; BRANCH IF NO
        LDA     #0
        STA     BANKSEL ; DESELECT EXTERNAL BANK
        LDA     LATCHS  ; GET CURRENT LATCH
        AND     #0F8H   ; CLEAR CAPSULE STUFF
        ORA     CURBANK ; INCLUDE CAPSULE ADDR
        ORA     #SLOMEM ; SET SLOW ACCESS
        JSR     DOLATCH ; SET NEW LATCH
        LDA     CSPEED  ; READ SPEED FROM CAPSULE
        AND     #CSBIT  ; IS THIS CAPSULE FAST?
        BEQ     SETBK3  ; BRANCH IF YES
        RTS             ; RETURN IF NO
;
; EXTRINSIC CAPSULE, PERIPHERAL, OR RAM
;
SETBK1: LDA     LATCHS
        ORA     #SLOBIT+CAPOFF ; DESELECT CAPS, SET SLOW
        JSR     DOLATCH ; *
        LDA     CURBANK ; NEW BANK
        STA     BANKSEL ; SELECT
        LDA     CSPEED  ; READ SPEED FLAG
        TAY             ; SAVE IN Y
        EOR     #0FFH   ; FLIP IT
        STA     CSPEED  ; TRY TO STORE
        CMP     CSPEED  ; SUCCESSFUL?
        BNE     SETBK2  ; BRANCH IF NO. MUST BE ROM.
        STY     CSPEED  ; RESTORE RAM
        BEQ     SETBK3  ; GO SET FAST SPEED
;
SETBK2: AND     #CSBIT  ; IS ROM SLOW?
        BEQ     SETBKX  ; BRANCH IF YES (BIT WAS FLIPPED)
SETBK3: LDA     #255-SLOMEM ; SET FAST MEM
        JSR     ANDLATCH ; *
SETBKX: RTS             ; RETURN


; COMPARE - COMPARES TWO STRINGS UNTIL A NON COMPARE IS FOUND.
;       LOCS 0 AND 1 CONTAIN THE ADDRESS OF ONE STRING AND
;       LOCS 2 AND 3 CONTAIN THE ADDRESS OF THE OTHER.
;
COMPARE: LDY    #0
BGN:    LDA     (0),Y
        CMP     (2),Y
        BNE     DONE
        INC     0
        BNE     .+4
        INC     1
        INC     2
        BNE     .+4
        INC     3
        BNE     BGN
DONE:   RTS
