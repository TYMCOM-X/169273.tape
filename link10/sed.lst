SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT

     1					TITLE	SED - Screen Editor
     2					SUBTTL	A CHRISTOPHER HALL FECIT
     3
     4						SEARCH	SEDSYM
     5					TOPS10^IFE TOPS-10,^<	SEARCH	UUOSYM >
     6					TOPS20^IFE TOPS-20,^<	SEARCH	MONSYM >
     7					TOPS30^IFE TOPS-<10+20>,^<	PRINTX	?Cannot do both TOPS-10 and TOPS-20 yet>
     8					IFTYM^IFN FT$TYM,^<	SEARCH	UUOTYM >
     9
    10					;[CSM] Minor modifications made by Joe Smith @ Colorado School of Mines
    11					;[JMS] Minor modifications to make SED run on TYMCOM-X
    12
    13					;To create SED.EXE:
    14					;	.LOAD SETSYM.MAC/COMPIL,SEDTTY.MAC,SED.MAC   ;SED.REL must be last
    15
    16
    17						.DIRECTIVE FLBLST	;[CSM] List first line binary of ASCIZ
    18
    19					;TREATMENT BY TOPS10:
    20					;	PIM MODE: NO CODES ECHOED; NO INTERRUPTS
    21					;	<C> IS A LEGAL COMMAND DISPATCHING TO ROUTINE "ABORT"
    22					;TREATMENT BY TOPS20:
    23					;	CODES .GT. 040 ECHOED NORMALLY, GO TO ROUTINE ALPNUM
    24					;	<H> <J> <\> <]> <UP> <_> ECHOED NORMALLY
    25					;	<I> <M> <O> <Q> <S> <T> CAUSE SOFTWARE INTERRUPTS
    26					;	<C> INTERCEPTED BY MONITOR, CAUSING ABORT
    27
    28	400000'					TWOSEG
    29	400000'					RELOC	400000
    30
    31						EXTERN	TERMNL		;Address of dispatch table
    32						INTERN	CPOPJ,PUTSTG,PUTNUM,PUTSQ1,PUTTYP,TRMNAM,TYPBUF
    33						INTERN	CHOME,CDOWN,CRIGHT
    34						EXTERN	.JBREL,.JBAPR,.JBTPC,.JBREN
    35					IFN CM-<RW+1>,<PRINTX ?DMOVEM RW,SAVPOS requires that CM=RW+1>
    36
    37					;         Table of Contents for SED - Full screen editor
    38					;
    39					;
    40					;			   Section			      Page
    41					;
    42					;    1. Startup  . . . . . . . . . . . . . . . . . . . . . . .   2
    43					;    2. Main input loop  . . . . . . . . . . . . . . . . . . .   3
    44					;    3. Decode ESCape-sequence sub-table . . . . . . . . . . .   4
    45					;    4. ALPNUM - Store non-control character on the screen . .   5
    46					;    5. Process cursor movements . . . . . . . . . . . . . . .   6
    47					;    6. Search for string  . . . . . . . . . . . . . . . . . .   7
    48					;    7. Set INSERT mode  . . . . . . . . . . . . . . . . . . .   8
    49					;    8. PERCEN - Goto position in file . . . . . . . . . . . .   9
    50					;    9. EXIT and ABORT commands  . . . . . . . . . . . . . . .  10
    51					;   10. Insert line  . . . . . . . . . . . . . . . . . . . . .  11
    52					;   11. Delete lines . . . . . . . . . . . . . . . . . . . . .  12
    53					;   12. Copy lines into buffer . . . . . . . . . . . . . . . .  13
    54					;   13. Insert spaces  . . . . . . . . . . . . . . . . . . . .  14
    55					;   14. Delete characters  . . . . . . . . . . . . . . . . . .  15
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1-1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT

    56					;   15. PICK command . . . . . . . . . . . . . . . . . . . . .  16
    57					;   16. PUT command  . . . . . . . . . . . . . . . . . . . . .  17
    58					;   17. SLIDE left and right . . . . . . . . . . . . . . . . .  18
    59					;   18. EXECUTE command  . . . . . . . . . . . . . . . . . . .  19
    60					;   19. Select input file  . . . . . . . . . . . . . . . . . .  20
    61					;   20. The ENTER command  . . . . . . . . . . . . . . . . . .  21
    62					;   21. Roll forward/backward pages  . . . . . . . . . . . . .  22
    63					;   22. RESET command  . . . . . . . . . . . . . . . . . . . .  23
    64					;   23. Change switch settings . . . . . . . . . . . . . . . .  24
    65					;   24. RECALL command . . . . . . . . . . . . . . . . . . . .  25
    66					;   25. REAL TAB, MARK, and COUNTER  . . . . . . . . . . . . .  26
    67					;   26. Utility subroutines  . . . . . . . . . . . . . . . . .  27
    68					;   27. Terminal output routines . . . . . . . . . . . . . . .  28
    69					;   28. HISEG data . . . . . . . . . . . . . . . . . . . . . .  29
    70					;   29. Command dispatch table . . . . . . . . . . . . . . . .  30
    71					;   30. LOWSEG data  . . . . . . . . . . . . . . . . . . . . .  31
    72					;   31. End of LOWSEG, start of text buffer  . . . . . . . . .  32
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 2
SED	MAC	21-May-74 00:04		Startup

    73					SUBTTL	Startup
    74
    75
    76	400000'	255 00 0 00 000000 	START:	JFCL			;(TO ACCOUNT FOR CCL ENTRY)
    77	400001'	200 17 0 00 411065'		MOVE	P,[IOWD 20,STACK]
    78	400002'	200 10 0 00 411066'		MOVE	TY,[010700,,TYPBUF-1] ;SET UP TYPE BUFFER POINTER
    79					IFN SAVETY,<
    80						MOVE	T1,[POINT 7,DEBBUF]
    81						MOVEM	T1,DEBPTR
    82					>
    83	400003'	200 01 0 00 411067'		MOVE	T1,[%CNMNT]	;Get monitor type
    84	400004'	047 01 0 00 000041 		GETTAB	T1,
    85	400005'	201 01 0 00 000000 		  MOVEI	T1,0
    86	400006'	135 01 0 00 411070'		LDB	T1,[POINT 6,T1,23] ;Get CN%MNT
    87	400007'	275 01 0 00 000001 		SUBI	T1,.CNT10	;Check for TOPS-10
    88	400010'	202 01 0 00 000174'		MOVEM	T1,TYMCOM	;Nonzero if on TYMCOM-X
    89	400011'	403 05 0 00 000030'		SETZB	F,GOPERC	;SET UP NOMINAL PERCENT TO GO TO
    90	400012'	403 07 0 00 000024'		SETZB	TM,ADDLSP	;  AND SPACES ADDED WITH LINES
    91	400013'	402 00 0 00 000044'		SETZM	PICKSP		;  AND SPACES TO PICK
    92	400014'	402 00 0 00 000047'		SETZM	XCTITR		;  AND NUMBER OF TIMES TO ITERATE AN EXECUTE
    93	400015'	476 00 0 00 000357'		SETOM	SLDFLG
    94	400016'	476 00 0 00 000361'		SETOM	BAKFLG
    95	400017'	402 00 0 00 000360'		SETZM	UPPFLG		;UPPER CASE FLAG IS INITIALLY OFF
    96	400020'	402 00 0 00 000064'		SETZM	PREDP		;SAY THERE'S NO PRE-SET DISPLAY POINTER
    97	400021'	200 14 0 00 411071'		MOVE	EN,[350700,,BUFFEN] ;SET UP THAT "WELCOME TO E" MESSAGE
    98	400022'	400 11 0 00 000000 		SETZ	SL,		;CLEAR SLIDE OFFSET
    99					TOPS10^IFE TOPS-10,^<	IFN FT$TYM,<
   100	400023'	561 01 0 00 777755 		HRROI	T1,.GTAUN	;Get accounting user number
   101	400024'	047 01 0 00 000041 		GETTAB	T1,		;The PPN used to LOGIN with
   102					>  ;End of IFN FT$TYM		      ;If this succeeds, skip over GETPPN
   103	400025'	047 01 0 00 000024 		GETPPN	T1,		;GET USER'S PPN
   104	400026'	255 00 0 00 000000 		  JFCL
   105	400027'	202 01 0 00 000217'		MOVEM	T1,USRPPN	;SAVE IT FOR FUTURE REFERENCE
   106	400030'	047 01 0 00 000030 		PJOB	T1,		;GET JOB NUMBER FOR .TMP FILES
   107	400031'	200 13 0 00 411072'		MOVE	PT,[POINT 6,T4,17]
   108	400032'	231 01 0 00 000144 		IDIVI	T1,^D100	;CONVERT NUMBER TO 3 SIXBIT DIGITS
   109	400033'	231 02 0 00 000012 		IDIVI	T2,^D10		;IN RH OF T4
   110	400034'	136 01 0 00 000013 		IDPB	T1,PT
   111	400035'	136 02 0 00 000013 		IDPB	T2,PT
   112	400036'	136 03 0 00 000013 		IDPB	T3,PT
   113	400037'	271 04 0 00 202020 		ADDI	T4,'000'
   114	400040'	506 04 0 00 000225'		HRLM	T4,PIKFIL	;SET UP AS PICK FILE NAME (nnnPIK)
   115	400041'	506 04 0 00 000233'		HRLM	T4,CLSFIL	;AND AS CLOSE FILE NAME   (nnnCLS)
   116	400042'	506 04 0 00 000241'		HRLM	T4,STTFIL	;AND AS STAT FILE NAME	  (nnnSTT)
   117					>
   118					TOPS20^IFE TOPS-20,^<	SETO	T1,		;GET THIS JOB NUMBER IN T1
   119						MOVE	T2,[-1,,1]
   120						SETZB	T3,T4
   121						GETJI
   122						  SETZ	T1,		;HOW CAN IT MISS?
   123						MOVE	PT,[POINT 7,T4]
   124						IDIVI	T1,^D100	;CONVERT NUMBER TO 3 SIXBIT DIGITS
   125						IDIVI	T2,^D10		;IN RH OF T4
   126						IDPB	T1,PT
   127						IDPB	T2,PT
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 2-1
SED	MAC	21-May-74 00:04		Startup

   128						IDPB	T3,PT
   129						ORM	T4,PIKFIL	;SET UP AS PICK FILE NAME (nnnPIK)
   130						ORM	T4,CLSFIL	;AND AS CLOSE FILE NAME   (nnnCLS)
   131						ORM	T4,STTFIL	;AND AS STAT FILE NAME	  (nnnSTT)
   132					>
   133	400043'	260 17 0 00 410264'		PUSHJ	P,REDSWH	;READ SWITCH.INI, IF INI
   134	400044'	260 17 0 00 410131'		PUSHJ	P,REDTMP	;nnnSTT.TMP, IF ANY
   135	400045'	260 17 0 00 410045'		PUSHJ	P,RSCANL	;IF USER ENTERED WITH FILESPECS SET THEM UP
   136	400046'	260 17 0 00 410213'		PUSHJ	P,TTYINI	;[JMS] Set up for image-mode input
   137	400047'	540 07 0 00 000000*		HRR	TM,TERMNL	;Set pointer to default terminal characteristics
   138	400050'	200 01 0 00 400047*		MOVE	T1,TERMNL	;[CSM] Get flags or instruction
   139	400051'	603 01 0 00 777000 		TLNE	T1,777000	;[CSM] Is TERMNL the start of a subroutine?
   140	400052'	260 17 0 00 400050*		 PUSHJ	P,TERMNL	;[CSM] Yes, go ask monitor for terminal type
   141	400053'	260 17 1 07 000026 		PUSHJ	P,@RTE(TM)	;CALL USER'S ENTRY ROUTINE
   142	400054'	201 01 0 00 000764 		MOVEI	T1,^D500	;[CSM] Pause 1/2 second
   143	400055'	047 01 0 00 000072 	TOPS10^IFE TOPS-10,^<	HIBER	T1,		;[CSM] For .SET WATCH FILES messages
   144	400056'	255 00 0 00 000000 		  JFCL	>		;[CSM]
   145					TOPS20^IFE TOPS-20,^<	DISMS	>		;[CSM]
   146	400057'	514 01 0 07 000025 		HRLZ	T1,TCH(TM)	;GET TERMINAL-SPECIFIC FLAGS
   147	400060'	434 07 0 00 000001 		OR	TM,T1		;SET THEM UP
   148	400061'	603 07 0 00 020000 		TLNE	TM,NRU		;CAN TERMINAL ROLL UP?
   149	400062'	660 05 0 00 001000 		TRO	F,NRC		;NO - DON'T AUTOMATICALLY ROLL FROM LAST LINE
   150	400063'	201 01 0 00 000007 		MOVEI	T1,XBFNUM-1	;MAKE LAST (NULL) EXECUTE BUFFER ACTIVE
   151	400064'	200 01 0 01 002057'		MOVE	T1,XCTADR(T1)
   152	400065'	202 01 0 00 000051'		MOVEM	T1,XCTACW
   153	400066'	201 01 0 00 410511'	TOPS10^IFE TOPS-10,^<	MOVEI	T1,REEERR	;SET UP RE-ENTRY ADDRESS
   154	400067'	202 01 0 00 000000*		MOVEM	T1,.JBREN
   155	400070'	201 01 0 00 410627'		MOVEI	T1,GETAK	;SET UP SO AN ILL MEM REF
   156	400071'	542 01 0 00 000000*		HRRM	T1,.JBAPR	;  EXPANDS CORE AUTOMATICALLY
   157	400072'	201 01 0 00 420000 		MOVEI	T1,420000
   158	400073'	047 01 0 00 000016 		APRENB	T1,
   159					>
   160	400074'	200 01 0 07 000023 		MOVE	T1,LPP(TM)	;SET UP LINES PER ROLL
   161	400075'	571 03 0 01 777777 		HRREI	T3,-1(T1)
   162	400076'	231 01 0 00 000003 		IDIVI	T1,3
   163	400077'	202 01 0 00 000326'		MOVEM	T1,LPR
   164	400100'	202 03 0 00 000323'		MOVEM	T3,LPP.1	;SAVE LINES PER PAGE - 1
   165	400101'	202 03 0 00 000324'		MOVEM	T3,LPP.2	;SAVE BOTTOM LINE OF SCREEN
   166	400102'	603 07 0 00 004000 		TLNE	TM,NEL		;IF BOTTOM IS SCRATCH, USE NEXT LINE UP
   167	400103'	370 00 0 00 000324'		SOS	LPP.2
   168	400104'	200 01 0 07 000024 		MOVE	T1,CPL(TM)	;SET UP CPL - 1
   169	400105'	360 01 0 00 000000 		SOJ	T1,
   170	400106'	202 01 0 00 000325'		MOVEM	T1,CPL.1
   171
   172	400107'	201 01 0 00 000001 		MOVEI	T1,1
   173	400110'	202 01 0 00 000026'		MOVEM	T1,ROLPGS	;SET UP NOMINAL PAGES TO ROLL
   174	400111'	202 01 0 00 000043'		MOVEM	T1,PICKLN	;  AND LINES TO PICK
   175	400112'	202 01 0 00 000020'		MOVEM	T1,ADDSPC	;  AND SPACES TO OPEN/CLOSE
   176	400113'	202 01 0 00 000023'		MOVEM	T1,ADDLNS	;  AND LINES DITTO
   177	400114'	201 01 0 00 000010 		MOVEI	T1,10		;SET UP NOMINAL SPACES TO SLIDE
   178	400115'	202 01 0 00 000045'		MOVEM	T1,SLIDES
   179	400116'	200 01 0 00 000326'		MOVE	T1,LPR		;SET UP NOMINAL LINES TO ROLL
   180	400117'	202 01 0 00 000025'		MOVEM	T1,ROLLIN
   181	400120'	332 00 0 00 000353'		SKIPE	RSCANF		;GOT A FILE FROM RESCAN?
   182	400121'	254 00 0 00 410115'		JRST	SETSCN		;YES - SET IT UP AND GO TO LOOP1
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 2-2
SED	MAC	21-May-74 00:04		Startup

   183	400122'	336 00 0 00 000072'		SKIPN	FILSPC		;GOT A FILE FROM nnnSTT.TMP?
   184	400123'	254 00 0 00 400131'		JRST	REDNO		;NO - START OUT WITH CHEERY MESSAGE
   185	400124'	261 17 0 00 000007 		PUSH	P,TM		;YES - DISABLE ERROR MESSAGES
   186	400125'	400 07 0 00 000000 		SETZ	TM,
   187	400126'	260 17 0 00 407470'		PUSHJ	P,PARSEF	;PARSE AND UNPARSE THE FILESPECS
   188	400127'	262 17 0 00 000007 		POP	P,TM
   189	400130'	254 00 0 00 403763'		JRST	SETFL1		;AND GO SET UP THAT FILE
   190
   191	400131'	260 17 0 00 410253'	REDNO:	PUSHJ	P,PNTSTT	;ELSE DISPLAY CHEERY MESSAGE
   192	400132'	661 05 0 00 000400 		TLO	F,RDO		;MESSAGE IS READ-ONLY
   193
   194	400133'	621 05 0 00 401002 	NEWFIL:	TLZ	F,ENT!CHG!PCM	;FILE UNCHANGED; ENTER OFF; NO MARK
   195	400134'	661 05 0 00 000020 		TLO	F,XPB		;LAST-LINE POINTER IS INVALID
   196	400135'	201 01 0 00 000100 		MOVEI	T1,SQZVAL	;SET UP # OF COMMANDS TO SKIP BETWEEN SQUEEZES
   197	400136'	202 01 0 00 000350'		MOVEM	T1,SQZCNT
   198	400137'	316 14 0 00 411073'		CAMN	EN,[010700,,BUFFER-1] ;ANYTHING IN THE BUFFER?
   199	400140'	254 00 0 00 400145'		JRST	LOOP
   200	400141'	332 01 0 00 000031'		SKIPE	T1,GOPRCT	;WANT TO START SOME PERCENT IN?
   201						JRST	[MOVEM T1,GOPERC ;YES - SET UP THE RIGHT PERCENT
   202							 SETZM GOPRCT	 ;FORGET THAT IT WAS GIVEN
   203	400142'	254 00 0 00 411074'			 JRST  PERNPM]	 ;AND LET THE PERCENT COMMAND DO THE DISPLAY
   204	400143'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;YES - DISPLAY A SCREENFUL
   205	400144'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;POSITION THE CURSOR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 3
SED	MAC	21-May-74 00:04		Main input loop

   206					SUBTTL	Main input loop
   207
   208
   209					;NOW ACCEPT CHARACTERS AND DO THINGS
   210					;NOTE: NON-SOFTWARE INTERRUPT COMMANDS ARE ARE AT LOOP
   211					;      HOWEVER, ALL COMMANDS ARE HANDLED STARTING AT LOOP1
   212
   213					TOPS10^IFE TOPS-10,^<
   214	400145'				INTEND:
   215					>
   216	400145'	400 12 0 00 000000 	LOOP:	SETZ	DO,		;SAY NO COMMAND IS BEING HANDLED
   217	400146'	602 05 0 00 100000 		TRNE	F,RST		;RESTORE NOMINALS?
   218	400147'	260 17 0 00 400215'		PUSHJ	P,RSTNOM	;YES - DO SO
   219	400150'	602 05 0 00 000020 		TRNE	F,XCT		;TAKE COMMAND FROM EXECUTE BUFFER?
   220	400151'	254 00 0 00 403615'		JRST	XCTGET		;YES - DO SO (GOES TO ALPNUM OR LOOP)
   221	400152'	622 05 0 00 000004 		TRZE	F,CWT		;IS CHARACTER ALREADY WAITING?
   222						JRST	[MOVE T1,TYPCHR ;YES - PICK IT UP
   223	400153'	254 00 0 00 411077'			 JRST LOOP1]	;AND USE IT AS CURRENT TERMINAL INPUT
   224	400154'	051 00 0 00 000001 	TOPS10^IFE TOPS-10,^<	INCHRW T1>		;READ A CHARACTER
   225					TOPS20^IFE TOPS-20,^<	PBIN>			;READ A CHARACTER
   226
   227	400155'				LOOP1:
   228					IFN SAVETY,<
   229						IDPB	T1,DEBPTR	;SAVE CHARACTER FOR DEBUG
   230					>
   231	400155'	603 05 0 00 000100 		TLNE	F,CCH		;CANCEL ENTER-CONTROL-CHAR FLAG - ON?
   232						JRST	[CAIE  T1,33	;YES - WAS ENTER TYPED?
   233							 JRST  .+1	;NO - CONTINUE
   234							 MOVEI T1,"["	;YES - HANDLE LIKE E-C-C "["
   235	400156'	254 00 0 00 411101'			 JRST  ALPNUM]
   236	400157'	301 01 0 00 000040 		CAIL	T1," "		;SOME CONTROL CHARACTER?
   237	400160'	254 00 0 00 400236'		JRST	ALPNUM		;NO - JUST PUT IT IN FILE OR BUFFER
   238	400161'	621 05 0 00 020100 		TLZ	F,ERF!CCH	;CLEAR CONSECUTIVE ERROR FLAG
   239	400162'	270 01 0 07 000031 		ADD	T1,ITB(TM)	;GET OFFSET IN TERMINAL TABLE
   240	400163'	335 01 0 01 000000 		SKIPGE	T1,(T1)		;IS IT A NORMAL COMMAND?
   241	400164'	260 17 0 00 400176'		PUSHJ	P,SUBTAB	;NO - READ MORE CHARACTERS
   242
   243	400165'	602 05 0 00 000040 	LOOP2:	TRNE	F,XSV		;SAVE COMMAND IN EXECUTE BUFFER?
   244						JRST	[MOVEI T2,"^"	 ;YES - DO SO
   245							 CAIL  T1," "	 ;GOT A HIGH-NUMBERED COMMAND?
   246							 IDPB  T2,XCTPTW ;YES - SAVE UP-ARROW AS FLAG
   247							 IDPB  T1,XCTPTW ;SAVE COMMAND
   248							 MOVE  T2,XCTACW ;SEE IF BUFFER WILL OVERFLOW
   249							 ADDI  T2,XBFSIZ
   250							 CAME  T2,XCTPTW
   251							 JRST  .+1	 ;NO OVERFLOW - CONTINUE
   252							 TRZ   F,XSV	 ;OVERFLOW - STOP SAVING
   253	400166'	254 00 0 00 411105'			 JRST  XCTERR]	 ;AND GIVE ERROR MESSAGE
   254	400167'	603 05 0 00 000002 		TLNE	F,ENT		;ENTERING A PARAMETER?
   255						JRST	[HLRZ T2,CMDTBL(T1) ;GET PROPER DISPATCH ADDRESS
   256							 TRNE F,CMV
   257							 JRST .+2
   258							 MOVE RW,SAVPOS	;RESTORE SAVED POSITION
   259							 MOVE CM,SAVPOS+1
   260	400170'	254 00 0 00 411117'			 JRST .+2]
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 3-1
SED	MAC	21-May-74 00:04		Main input loop

   261	400171'	200 02 0 01 410713'		MOVE	T2,CMDTBL(T1)	;NO - GET PROPER DISPATCH ADDRESS
   262	400172'	200 12 0 00 000001 		MOVE	DO,T1		;SAVE COMMAND THAT WAS TYPED
   263	400173'	326 02 0 02 000000 		JUMPN	T2,(T2)		;IF THERE IS AN ADDRESS, GO TO IT AND DO IT
   264	400174'	201 01 0 00 411125'	ILCERR:	MOVEI	T1,[ASCIZ /#########Illegal command/]
   265	400175'	254 00 0 00 410520'		JRST	ERROR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 4
SED	MAC	21-May-74 00:04		Decode ESCape-sequence sub-table

   266					SUBTTL	Decode ESCape-sequence sub-table
   267
   268					;SUBROUTINE TO REFERENCE A TERMINAL'S SUBTABLES
   269
   270	400176'	200 04 0 00 000001 	SUBTAB:	MOVE	T4,T1		;SET UP ADDRESS OF SUBTABLE
   271	400177'				SUBTB1:
   272	400177'	051 00 0 00 000001 	TOPS10^IFE TOPS-10,^<	INCHRW T1 >		;GET NEXT CHARACTER
   273					TOPS20^IFE TOPS-20,^<	PBIN >			;GET NEXT CHARACTER
   274	400200'	336 03 0 04 000000 	SUBTB2:	SKIPN	T3,(T4)		;GET A SUBTABLE ENTRY - END?
   275	400201'	254 00 0 00 400174'		JRST	ILCERR		;YES - INPUT SEQUENCE NOT FOUND
   276	400202'	606 03 0 00 777777 		TRNN	T3,-1		;MATCH ON ANY CHARACTER?
   277	400203'	254 00 0 00 400207'		JRST	SUBTB3		;YES - SET UP REAL COMMAND NOW
   278	400204'	302 01 0 03 000000 		CAIE	T1,(T3)		;DO USER'S AND TABLE'S CHARS MATCH?
   279	400205'	253 04 0 00 400200'		AOBJN	T4,SUBTB2	;NO - LOOP ON THE TABLE
   280	400206'	327 04 0 00 400174'		JUMPG	T4,ILCERR	;JUMP IF END OF TABLE AND NOT FOUND
   281	400207'	321 03 0 00 400212'	SUBTB3:	JUMPL	T3,SUBTBS	;ELSE FOUND - JUMP IF WANT ANOTHER LEVEL
   282	400210'	554 01 0 00 000003 		HLRZ	T1,T3		;ELSE SET UP REAL COMMAND
   283	400211'	263 17 0 00 000000 		POPJ	P,		;AND DONE, SUCCESSFULLY
   284
   285	400212'	554 04 0 00 000003 	SUBTBS:	HLRZ	T4,T3		;POINT TO NEW SUBTABLE
   286	400213'	505 04 0 00 777600 		HRLI	T4,-^D128	;[CSM] Set length to max (terminated by zero)
   287	400214'	254 00 0 00 400177'		JRST	SUBTB1		;READ ANOTHER CHARACTER FROM TERMINAL
   288
   289					;SUBROUTINE TO RESTORE NOMINALS, IF RST FLAG IS SET
   290
   291	400215 01 0 00 000001 	RSTNOM:	MOVEI	T1,1
   292	400216'	402 00 0 00 000030'		SETZM	GOPERC
   293	400217'	202 01 0 00 000023'		MOVEM	T1,ADDLNS
   294	400220'	402 00 0 00 000024'		SETZM	ADDLSP
   295	400221'	202 01 0 00 000020'		MOVEM	T1,ADDSPC
   296	400222'	202 01 0 00 000043'		MOVEM	T1,PICKLN
   297	400223'	402 00 0 00 000044'		SETZM	PICKSP
   298	400224'	202 01 0 00 000026'		MOVEM	T1,ROLPGS
   299	400225'	200 01 0 00 000326'		MOVE	T1,LPR
   300	400226'	202 01 0 00 000025'		MOVEM	T1,ROLLIN
   301	400227'	201 01 0 00 000010 		MOVEI	T1,10
   302	400230'	202 01 0 00 000045'		MOVEM	T1,SLIDES
   303	400231'	263 17 0 00 000000 		POPJ	P,
   304
   305					;HERE ON SOFTWARE INTERRUPTS: SET UP THE DESIRED CHARACTER AND TREAT
   306					;LIKE ALL THE OTHERS
   307
   308					;NOTE: INTERRUPTS ARE ONLY KOSHER WHEN THE EDITOR IS WAITING FOR A COMMAND
   309					;(IE, DO/ 0). IF NOT, THE COMMAND IS IGNORED (FOR NOW)
   310
   311					TOPS20^IFE TOPS-20,^<
   312					RUBOUT:	CAIE	DO,"R"-100	;DOING A SEARCH COMMAND?
   313						CAIN	DO,"E"-100
   314						JRST	RUBSRC		;YES - ABORT THE SEARCH
   315						CAIN	DO,"X"-100	;DOING AN EXECUTE?
   316						JRST	RUBEXC		;YES - ABORT IT
   317						TLZE	F,SCN		;IN SCAN MODE?
   318						DEBRK			;YES - CLEARING FLAG WILL END IT
   319						MOVEI	T0,177		;ELSE PICK UP A REAL RUBOUT
   320					
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 4-1
SED	MAC	21-May-74 00:04		Decode ESCape-sequence sub-table

   321						JRST	CTRL		;AND PROCESS IT
   322					CTRLI:	MOVEI	T0,11
   323						JRST	CTRL
   324					CTRLM:	MOVEI	T0,15
   325						JRST	CTRL
   326					CTRLO:	MOVEI	T0,"O"-100
   327						JRST	CTRL
   328					CTRLQ:	MOVEI	T0,"Q"-100
   329						JRST	CTRL
   330					CTRLS:	MOVEI	T0,"S"-100
   331						JRST	CTRL
   332					CTRLT:	MOVEI	T0,"T"-100
   333					
   334					CTRL:	CAIN	DO,1000		;GIVING HELP?
   335						JRST	CTRHLP		;YES - HANDLE SPECIALLY
   336						JUMPN	DO,CTRLSV	;IF NOT WAITING FOR A COMMAND, SAVE THIS ONE
   337						TLO	F,INT		;SET INTERRUPT-LEVEL FLAG
   338						MOVE	T1,T0		;SET UP COMMAND
   339						JRST	LOOP1		;AND PROCESS IT
   340					
   341					CTRHLP:	TLO	F,INT
   342						CAIN	T0,177		;GOT A RUBOUT?
   343						JRST	CTRHL1		;YES - GET ITS COMMAND
   344						MOVE	T1,T0		;ELSE SET COMMAND UP
   345						ADD	T1,ITB(TM)	;GET OFFSET IN TERMINAL TABLE
   346						JRST	ENTHL2		;AND GIVE HELP AT INTERRUPT LEVEL
   347					
   348					CTRHL1:	MOVE	T1,ITB(TM)	;GET THE COMMAND INVOKED BY RUBOUT
   349						MOVE	T1,-1(T1)
   350						JRST	ENTHL3		;GIVE WITH THE HELP
   351					
   352					;ALL INTERRUPT ROUTINES JUMP HERE WHEN DONE TO RESET THEIR STATUS
   353					;OTHER ROUTINES DO, TOO, IF THEY ARE NOT SURE IF THEY ARE AT INTERRUPT LEVEL
   354					
   355					INTEND:	TLZN	F,INT		;CLEAR INTERRUPT FLAG - WAS IT ON?
   356						JRST	LOOP		;NO - GET ANOTHER COMMAND
   357						SETZ	DO,		;YES - SAY NO COMMAND IS BEING PROCESSED
   358						DEBRK			;DISMISS THE INTERRUPT
   359					
   360					CTRLSV:	TRON	 F,CWT		 ;SAY CHARACTER HAS BEEN READ - HAS ONE?
   361						MOVEM	 T0,TYPCHR	 ;NO - SAVE COMMAND FOR LATER
   362						DEBRK			 ;DISMISS IT IN EITHER CASE
   363					> ;END TOPS20
   364
   365					;HERE IF USER TYPED RUBOUT DURING A SEARCH - ABORT THE SEARCH
   366
   367	400232'	201 01 0 00 411132'	RUBSRC:	MOVEI	T1,[ASCIZ /##########Search aborted/]
   368					TOPS20^IFE TOPS-20,^<	RUBSR1:	MOVEI	T2,LOOP+1	;MAKE INTERRUPT RETURN TO CHARACTER 
   369					INPUT
   370						MOVEM	T2,PC2
   371						TLO	F,INT		;SET FLAG FOR INTERRUPT LEVEL
   372					>
   373	400233'	254 00 0 00 410520'		JRST	ERROR
   374
   375					;HERE IF USER TYPED RUBOUT DURING AN EXECUTE - ABORT THE EXECUTE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 4-2
SED	MAC	21-May-74 00:04		Decode ESCape-sequence sub-table

   376
   377	400234'	201 01 0 00 411137'	RUBEXC:	MOVEI	T1,[ASCIZ /#########Execution stopped/]
   378	400235'	254 00 0 00 410520'	TOPS10^IFE TOPS-10,^<	JRST	ERROR
   379					>
   380					TOPS20^IFE TOPS-20,^<	JRST	RUBSR1
   381					>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 5
SED	MAC	21-May-74 00:04		ALPNUM - Store non-control character on the screen

   382					SUBTTL	ALPNUM - Store non-control character on the screen
   383
   384					;HERE IF A NON-CONTROL CHARACTER WAS TYPED - PUT IT IN FILE OR
   385					;PARAMETER BUFFER, AND ADJUST CURSOR POSITION ONE TO THE RIGHT
   386
   387	400236'	306 01 0 00 000177 	ALPNUM:	CAIN	T1,177		;REALLY A RUBOUT?
   388						JRST	[MOVE T1,ITB(TM);YES - GET ITS COMMAND
   389							 MOVE T1,-1(T1)
   390	400237'	254 00 0 00 411145'			 JRST LOOP2]
   391	400240'	474 12 0 00 000000 		SETO	DO,		;NOTE THAT A COMMAND IS ACTIVE
   392	400241'	332 00 0 00 000360'		SKIPE	UPPFLG		;WANT UPPER CASE ALPHABETICS?
   393						JRST	[CAIGE T1,"a"	;YES - IS CHARACTER LOWER CASE?
   394							 JRST  .+1	;NO - O.K.
   395							 CAIG  T1,"z"
   396							 SUBI  T1,40	;YES - CONVERT TO LOWER
   397	400242'	254 00 0 00 411150'			 JRST  .+1]	;CONTINUE
   398	400243'	602 05 0 00 000040 		TRNE	F,XSV		;SAVE COMMAND IN EXECUTE BUFFER?
   399						JRST	[IDPB T1,XCTPTW	;YES - DO SO
   400							 CAIN T1,"^"	;IS CHARACTER A REAL UP-ARROW?
   401							 IDPB T1,XCTPTW	;YES - SAVE TWO OF THEM
   402							 MOVE T2,XCTACW	;SEE IF BUFFER WILL OVERFLOW
   403							 ADDI T2,XBFSIZ
   404							 CAME T2,XCTPTW
   405							 JRST .+1	;NO OVERFLOW - CONTINUE
   406							 TRZ  F,XSV	;OVERFLOW - STOP SAVING
   407	400244'	254 00 0 00 411155'			 JRST XCTERR]	;AND GIVE ERROR MESSAGE
   408	400245'	623 05 0 00 000100 		TLZE	F,CCH		;WANT A CONTROL CHARACTER?
   409	400246'	405 01 0 00 000037 		ANDI	T1,37		;YES - MAKE IT ONE
   410	400247'	603 05 0 00 000002 		TLNE	F,ENT		;ENTERING A PARAMETER?
   411	400250'	254 00 0 00 400463'		JRST	ALPENT		;YES - HANDLE SEPARATELY
   412
   413	400251'	603 05 0 00 000400 		TLNE	F,RDO		;NO - IS FILE READ-ONLY?
   414	400252'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
   415	400253'	661 05 0 00 041000 		TLO	F,CHG!INS	;LET LINE BE EXTENDED IF NECESSARY
   416	400254'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION
   417	400255'	621 05 0 00 440000 		TLZ	F,INS!PCM
   418	400256'	602 05 0 00 000200 		TRNE	F,IMD		;IN INSERT MODE?
   419	400257'	254 00 0 00 400422'		JRST	ALPIMD		;YES - HANDLE SEPARATELY
   420
   421					;HERE TO PUT CHARACTER IN FILE (NON-INSERT-MODE)
   422
   423	400260'	400 04 0 00 000000 		SETZ	T4,		;CLEAR (MAYBE) POINTER TO FIRST NULL
   424	400261'	134 02 0 00 002253'	ALPNM2:	ILDB	T2,CHRPTR	;GET CHARACTER THAT WILL BE OVERWRITTEN
   425	400262'	322 02 0 00 400335'		JUMPE	T2,ALPNUL	;IF NULL, SAVE POINTER
   426	400263'	306 02 0 00 000011 		CAIN	T2,11		;TAB?
   427	400264'	254 00 0 00 400346'		JRST	ALPTAB		;YES - NEED TO BREAK THE TAB APART
   428	400265'	306 02 0 00 000015 		CAIN	T2,15		;CARRIAGE RETURN?
   429	400266'	260 17 0 00 400376'		PUSHJ	P,ALPEXT	;YES - MAY NEED TO EXTEND LINE
   430	400267'	137 01 0 00 002253'	ALPNM3:	DPB	T1,CHRPTR	;SAVE CHARACTER IN BUFFER
   431	400270'	316 14 0 00 002253'		CAMN	EN,CHRPTR	;AT THE END OF FILE?
   432	400271'	133 00 0 00 000014 		IBP	EN		;YES - INCREASE FILE SIZE BY ONE CHARACTER
   433
   434					;HERE TO DISPLAY CHARACTER, FROM REPLACE MODE OR PARAMETER
   435
   436	400272'	202 01 0 00 000341'	ALPDIS:	MOVEM	T1,CHARAC	;SAVE USER'S CHARACTER
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 5-1
SED	MAC	21-May-74 00:04		ALPNUM - Store non-control character on the screen

   437	400273'	602 05 0 00 000020 		TRNE	F,XCT		;EXECUTING?
   438	400274'	254 00 0 00 400330'		 JRST	ALPPOS		;YES - POSITION, BUT NO ECHO
   439	400275'	305 01 0 00 000040 		CAIGE	T1," "		;GOT A CONTROL CHARACTER?
   440	400276'	254 00 0 00 400303'		 JRST	ALPCCH		;YES - DISPLAY SPECIALLY
   441	400277'	316 15 0 00 000323'		CAMN	RW,LPP.1	;AT LAST LINE?
   442						 JRST	[TLZN  F,FNC	;YES - IS FENCE UP?
   443							 JRST  .+1	;NO - DRIVE ON
   444							 PUSH  P,T1	;YES - SAVE CHARACTER TYPED
   445							 PUSHJ P,CBOTOM ;TAKE FENCE DOWN
   446							 PUSHJ P,POSCUR ;RE-POSITION CURSOR
   447							 POP   P,T1	;GET CHARACTER BACK
   448	400300'	254 00 0 00 411166'			 JRST  .+1]	;CONTINUE
   449	400301'	051 15 0 00 000001 	TOPS10^IFE TOPS-10,^<	IONEOU T1>		;ELSE ECHO CHARACTER
   450					TOPS20^IFE TOPS-20,^<	PBOUT>		;ECHO CHARACTER
   451	400302'	254 00 0 00 400504'		JRST	RIGHT+1		;DONE
   452
   453					;HERE TO OUTPUT A PROTECTED CONTROL CHARACTER
   454
   455	400303'	200 02 0 00 000001 	ALPCCH:	MOVE	T2,T1		;GET CHARACTER
   456	400304'	271 02 0 00 000100 		ADDI	T2,100		;  AS A REAL CHARACTER
   457	400305'	306 01 0 00 000011 		CAIN	T1,11		;GOT A TAB?
   458	400306'	254 00 0 00 400320'		 JRST	ALPDTB		;YES - HANDLE SPECIALLY
   459	400307'	261 17 0 00 000001 		PUSH	P,T1		;SAVE KNOCKED CHARACTER
   460	400310'	260 17 0 00 410337'		PUSHJ	P,PROTON	;OUTPUT THE CHARACTER PROTECTED
   461	400311'	200 01 0 00 000002 		MOVE	T1,T2
   462	400312'	136 01 0 00 000010 		IDPB	T1,TY
   463	400313'	260 17 0 00 410340'		PUSHJ	P,PROTOF
   464	400314'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;OUTPUT IT NOW
   465	400315'	262 17 0 00 000001 		POP	P,T1		;GET CONTROL CHAR BACK AGAIN
   466	400316'	254 00 0 00 400504'		JRST	RIGHT+1
   467
   468	400317'	201 12 0 00 000037 		MOVEI	DO,37		;CAUSE POSITIONING TO OCCUR
   469	400320'	205 01 0 00 070000 	ALPDTB:	MOVSI	T1,70000	;MOVE POINTER BEHIND THE LATEST CHARACTER
   470	400321'	270 01 0 00 002253'		ADD	T1,CHRPTR
   471	400322'	325 01 0 00 400324'		JUMPGE	T1,.+2
   472	400323'	274 01 0 00 411175'		SUB	T1,[430000,,1]
   473	400324'	202 01 0 00 002253'		MOVEM	T1,CHRPTR	;SAVE CHARACTER POINTER
   474	400325'	260 17 0 00 405150'		PUSHJ	P,DISLIN	;REWRITE REMAINDER OF LINE
   475	400326'	133 00 0 00 002253'		IBP	CHRPTR		;MAKE CHARACTER POINTER RIGHT
   476	400327'	200 01 0 00 000341'		MOVE	T1,CHARAC	;GET LATEST-TYPED CHARACTER
   477	400330'	302 01 0 00 000011 	ALPPOS:	CAIE	T1,11		;TAB?
   478	400331'	254 00 0 00 400504'		JRST	RIGHT+1		;NO - MOVE TO THE RIGHT AND LOOP
   479	400332'	620 16 0 00 000007 		TRZ	CM,7		;YES - POINT TO CHARACTER AFTER TAB
   480	400333'	271 16 0 00 000010 		ADDI	CM,10
   481	400334'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION AND LOOP
   482
   483					;HERE IF NULL FOUND WHERE CHARACTER POINTER POINTS
   484
   485	400335'	326 04 0 00 400337'	ALPNUL:	JUMPN	T4,.+2		;IF NOT FIRST NULL, DON'T SAVE POINTER
   486	400336'	200 04 0 00 002253'		MOVE	T4,CHRPTR	;ELSE SAVE POINTER TO FIRST NULL
   487	400337'	312 14 0 00 002253'		CAME	EN,CHRPTR	;AT END OF FILE?
   488	400340'	254 00 0 00 400261'		JRST	ALPNM2		;NO - LOOP
   489	400341'	202 04 0 00 002253'		MOVEM	T4,CHRPTR	;YES - POINT BACK TO FIRST NULL
   490	400342'	322 04 0 00 400344'		JUMPE	T4,ALPERR	;ERROR IF NO NULL FOUND (SHOULDN'T HAPPEN)
   491	400343'	254 00 0 00 400267'		JRST	ALPNM3		;SAVE CHARACTER THERE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 5-2
SED	MAC	21-May-74 00:04		ALPNUM - Store non-control character on the screen

   492
   493	400344'	201 01 0 00 411176'	ALPERR:	MOVEI	T1,[ASCIZ /########BUG - No null found/]
   494	400345'	254 00 0 00 410520'		JRST	ERROR
   495
   496					;HERE IF CHARACTER TO OVERWRITE IS A TAB - PRECEDE IT WITH SPACES AND CHAR
   497					;IF CHARACTER IS GOING INTO THE 7TH POSITION OF THE TAB, TAKE THE TAB OUT
   498
   499	400346'	261 17 0 00 000001 	ALPTAB:	PUSH	P,T1		;SAVE CHARACTER USER TYPED
   500	400347'	200 02 0 00 411204'		MOVE	T2,[70000,,0]	;ELSE BACK POINTER UP BEFORE THE TAB
   501	400350'	273 02 0 00 002253'		ADDB	T2,CHRPTR
   502	400351'	325 02 0 00 400354'		JUMPGE	T2,.+3
   503	400352'	210 02 0 00 411175'		MOVN	T2,[430000,,1]
   504	400353'	272 02 0 00 002253'		ADDM	T2,CHRPTR
   505	400354'	350 02 0 00 000345'		AOS	T2,TABSPC	;GET SPACES (+ CHAR) TO ADD BEFORE TAB
   506	400355'	202 02 0 00 000336'		MOVEM	T2,NUMCHR	;ADD THAT MANY SPACES TO THE FILE
   507	400356'	260 17 0 00 406777'		PUSHJ	P,MAKSPC	;NOTE: T4 HAS PTR TO LAST THING ADDED
   508
   509					;MAKCHR POINTS TO START OF ADDED SPACES
   510					;MAKPTR   "    "  LAST SPACE ADDED
   511					;T4	  "    "  POINTS TO THE TAB
   512
   513	400357'	400 01 0 00 000000 		SETZ	T1,		;NULL OUT THE FORMER TAB
   514	400360'	136 01 0 00 000004 		IDPB	T1,T4
   515	400361'	262 17 0 00 000001 		POP	P,T1		;GET USER'S CHARACTER BACK AGAIN
   516	400362'	661 05 0 00 000020 		TLO	F,XPB		;NOW BOTTOM PTR IS BAD
   517	400363'	200 04 0 00 000342'		MOVE	T4,MAKPTR
   518	400364'	137 01 0 00 000004 		DPB	T1,T4		;SAVE IT OVER THE LAST THING TYPED
   519	400365'	202 04 0 00 002253'		MOVEM	T4,CHRPTR	;SAVE AS CURRENT POSITION
   520	400366'	210 02 0 00 000345'		MOVN	T2,TABSPC
   521	400367'	273 02 0 00 000344'		ADDB	T2,TABSIZ	;SEE IF ENTIRE TAB HAS BEEN USED UP
   522	400370'	402 00 0 00 000345'		SETZM	TABSPC		;NO LONGER ANY SPACES TO LEFT OF TAB
   523	400371'	327 02 0 00 400373'		JUMPG	T2,.+2		;IS TAB NOW EXPRESSED ENTIRELY IN CHARS?
   524	400372'	634 02 0 00 000002 		TDZA	T2,T2		;YES - NULL OUT THE TAB
   525	400373'	201 02 0 00 000011 		MOVEI	T2,11		;NO - MOVE TAB OVER
   526	400374'	136 02 0 00 000004 		IDPB	T2,T4
   527	400375'	254 00 0 00 400272'		JRST	ALPDIS		;DONE - GO DISPLAY
   528
   529					;SUBROUTINE FOR IF GOING TO OVERWRITE A <CR>. IF IT'S <CRLF> EXTEND LINE
   530					;HOWEVER, IF A NULL WAS PASSED OVER, SAVE CHARACTER THERE; LEAVE <CR> ALONE
   531
   532	400376'	326 04 0 00 400420'	ALPEXT:	JUMPN	T4,ALPEX1	;IF FOUND A NULL, SAVE CHARACTER THERE
   533	400377'	200 03 0 00 002253'		MOVE	T3,CHRPTR
   534	400400'	134 02 0 00 000003 		ILDB	T2,T3
   535	400401'	302 02 0 00 000012 		CAIE	T2,12		;IS IT A LINEFEED?
   536	400402'	263 17 0 00 000000 		POPJ	P,		;NO - JUST OVERWRITE THE LONE <CR>
   537	400403'	261 17 0 00 000001 		PUSH	P,T1		;YES - SAVE CHARACTER USER TYPED
   538
   539	400404'	205 01 0 00 070000 		MOVSI	T1,70000	;MOVE POINTER BEHIND THE <CR>
   540	400405'	270 01 0 00 002253'		ADD	T1,CHRPTR
   541	400406'	325 01 0 00 400410'		JUMPGE	T1,.+2
   542	400407'	274 01 0 00 411175'		SUB	T1,[430000,,1]
   543	400410'	202 01 0 00 002253'		MOVEM	T1,CHRPTR	;SAVE IT AGAIN
   544
   545	400411'	201 01 0 00 000012 		MOVEI	T1,12		;GO ADD 12 NULLS TO THE FILE
   546	400412'	202 01 0 00 000336'		MOVEM	T1,NUMCHR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 5-3
SED	MAC	21-May-74 00:04		ALPNUM - Store non-control character on the screen

   547	400413'	260 17 0 00 406777'		PUSHJ	P,MAKSPC	;PUT IN SOME SPACES
   548	400414'	262 17 0 00 000001 		POP	P,T1		;GET CHARACTER BACK
   549	400415'	133 00 0 00 002253'		IBP	CHRPTR		;POINT BACK TO REAL CHARACTER POSITION
   550	400416'	661 05 0 00 000020 		TLO	F,XPB		;MARK BOTTOM POINTER AS BAD
   551	400417'	263 17 0 00 000000 		POPJ	P,		;AND GO PUT IT INTO BUFFER
   552
   553	400420'	202 04 0 00 002253'	ALPEX1:	MOVEM	T4,CHRPTR	;GO SAVE CHARACTER OVER THAT NULL
   554	400421'	263 17 0 00 000000 		POPJ	P,		;..
   555
   556					;HERE IF EDITOR IS IN INSERT MODE - ADD CHARACTER AT CURSOR; DON'T REPLACE
   557
   558	400422'	313 16 0 00 000325'	ALPIMD:	CAMLE	CM,CPL.1	;AT 80TH COLUMN?
   559	400423'	254 00 0 00 400454'		JRST	ALPIBP		;YES - INSERT NOT ALLOWED
   560	400424'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET CHARACTER POINTER
   561	400425'	202 01 0 00 000341'		MOVEM	T1,CHARAC	;SAVE USER'S CHARACTER
   562	400426'	134 02 0 00 000013 		ILDB	T2,PT		;GET CHARACTER AT POINTER
   563	400427'	322 02 0 00 400457'		JUMPE	T2,ALPIM4	;IF NULL, SAVE NEW CHAR THERE
   564	400430'	135 02 0 00 002253'		LDB	T2,CHRPTR	;ELSE GET CHARACTER BEFORE POINTER
   565	400431'	322 02 0 00 400460'		JUMPE	T2,ALPIM5	;IF NULL, SAVE NEW CHAR THERE
   566									;ELSE NEED TO INSERT SOME SPACE:
   567	400432'	201 01 0 00 000001 		MOVEI	T1,1		;TELL MAKCHR TO INSERT ONE CHARACTER
   568	400433'	202 01 0 00 000336'		MOVEM	T1,NUMCHR
   569	400434'	260 17 0 00 407003'		PUSHJ	P,MAKCHR	;INSERT THAT CHARACTER
   570	400435'	133 00 0 00 002253'		IBP	CHRPTR		;POINT TO CHARACTER AFTER THIS ONE
   571	400436'	661 05 0 00 000020 		TLO	F,XPB		;MARK BOTTOM POINTER AS BAD
   572	400437'	200 01 0 00 000341'	ALPIM1:	MOVE	T1,CHARAC	;GET LATEST-TYPED CHARACTER
   573	400440'	306 01 0 00 000011 		CAIN	T1,11		;IS IT A TAB?
   574	400441'	254 00 0 00 400320'		JRST	ALPDTB		;YES - REWRITE REST OF LINE
   575	400442'	201 04 0 00 000001 		MOVEI	T4,1		;SET TO OPEN LINE ONE CHARACTER
   576	400443'	332 03 0 07 000014 		SKIPE	T3,ISP(TM)	;CAN TERMINAL OPEN SPACES ON ITS OWN?
   577	400444'	260 17 0 00 402505'		PUSHJ	P,OPNSPI	;YES - OPEN UP THE LINE (SKIP RETURN)
   578	400445'	254 00 0 00 400317'		JRST	ALPDTB-1	;NO - REWRITE THE LINE CURSOR IS ON
   579	400446'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;GET BACK TO START OF NEWLY-OPENED SPACE
   580	400447'	200 01 0 00 000341'		MOVE	T1,CHARAC	;GET LATEST-TYPED CHARACTER
   581	400450'	305 01 0 00 000040 		CAIGE	T1," "		;GOT A CONTROL CHARACTER?
   582	400451'	254 00 0 00 400303'		JRST	ALPCCH		;YES - DISPLAY SPECIALLY
   583	400452'	136 01 0 00 000010 		IDPB	T1,TY		;DISPLAY IT
   584	400453'	344 16 0 00 405127'		AOJA	CM,DISCUR	;RE-DISPLAY THE CURSOR; DONE
   585
   586	400454'	201 01 0 00 000007 	ALPIBP:	MOVEI	T1,7		;IF AT 80TH COLUMN, JUST BEEP
   587	400455'	051 15 0 00 000001 	TOPS10^IFE TOPS-10,^<	IONEOU T1>
   588					TOPS20^IFE TOPS-20,^<	PBOUT>
   589	400456'	254 00 0 00 400145'		JRST	LOOP
   590
   591					;HERE IF NULL FOUND AT (ALPIM4) OR BEFORE (ALPIM5) CURSOR POSITION
   592					;SAVE NEW CHARACTER THERE; NO INSERT NECESSARY
   593
   594	400457'	133 00 0 00 002253'	ALPIM4:	IBP	CHRPTR		;SKIP OVER THIS NEW CHARACTER
   595	400460'	200 01 0 00 000341'	ALPIM5:	MOVE	T1,CHARAC	;GET LATEST-TYPED CHARACTER
   596	400461'	137 01 0 00 002253'		DPB	T1,CHRPTR	;SAVE NEW CHARACTER JUST BEFORE POINTER
   597	400462'	254 00 0 00 400437'		JRST	ALPIM1		;GO DISPLAY WHAT HAPPENED
   598
   599					;HERE FOR A CHARACTER TYPED AS PART OF A PARAMETER
   600
   601	400463'	622 05 0 00 000010 	ALPENT:	TRZE	F,CMV		;DOING CURSOR MOVEMENT?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 5-4
SED	MAC	21-May-74 00:04		ALPNUM - Store non-control character on the screen

   602	400464'	254 00 0 00 407464'		JRST	CMXERR		;YES - CAN'T MIX CURSOR AND OTHERWISE
   603	400465'	136 01 0 00 002227'		IDPB	T1,PARPTR	;SAVE THIS CHARACTER IN PARAMETER BUFFER
   604	400466'	602 05 0 00 000020 		TRNE	F,XCT		;EXECUTING?
   605	400467'	344 16 0 00 400145'		AOJA	CM,LOOP		;YES - NO OUTPUT
   606	400470'	305 01 0 00 000040 		CAIGE	T1," "		;GOT A CONTROL CHARACTER?
   607	400471'	254 00 0 00 400474'		JRST	ALPENC		;YES - OUTPUT IT PROTECTED
   608	400472'	051 15 0 00 000001 	TOPS10^IFE TOPS-10,^<	IONEOU T1>		;ECHO CHARACTER
   609					TOPS20^IFE TOPS-20,^<	PBOUT>		;ECHO CHARACTER
   610	400473'	344 16 0 00 400145'		AOJA	CM,LOOP		;GET ANOTHER COMMAND
   611
   612	400474'	200 04 0 00 000001 	ALPENC:	MOVE	T4,T1		;SAVE CHARACTER
   613	400475'	260 17 0 00 410337'		PUSHJ	P,PROTON	;PROTECT CHARACTER
   614	400476'	201 01 0 04 000100 		MOVEI	T1,100(T4)	;GET REAL CHARACTER BACK
   615	400477'	136 01 0 00 000010 		IDPB	T1,TY		;SAVE IT
   616	400500'	260 17 0 00 410340'		PUSHJ	P,PROTOF
   617	400501'	260 17 0 00 410451'		PUSHJ	P,PUTTYP
   618	400502'	344 16 0 00 400145'		AOJA	CM,LOOP		;GET ANOTHER COMMAND
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6
SED	MAC	21-May-74 00:04		Process cursor movements

   619					SUBTTL	Process cursor movements
   620
   621					;DISPATCH AREAS FOR CURSOR CONTROL CHARACTERS
   622					;IF ENTER WAS TYPED, RIGHT GOES TO RGTARG; ALSO LFTARG, UPARG, DWNARG, HOMARG
   623
   624	400503'	661 05 0 00 000010 	RIGHT:	TLO	F,XPC		;CHARACTER POINTER IS NO LONGER GOOD
   625	400504'	315 16 0 00 000325'		CAMGE	CM,CPL.1	;OFF THE RIGHT SIDE?
   626	400505'	344 16 0 00 400534'		AOJA	CM,AJDONE	;NO - JUST MOVE RIGHT
   627	400506'	400 16 0 00 000000 		SETZ	CM,		;YES - MOVE TO LEFT MARGIN
   628	400507'	201 12 0 00 000037 		MOVEI	DO,37		;MAKE CURSOR POSITION ABSOLUTELY
   629	400510'	661 05 0 00 000014 		TLO	F,XPL!XPC	;LINE POINTER IS NO GOOD EITHER
   630	400511'	315 15 0 00 000324'		CAMGE	RW,LPP.2	;AT BOTTOM?
   631	400512'	344 15 0 00 400534'		AOJA	RW,AJDONE	;NO - DROP DOWN ONE MORE
   632	400513'	344 15 0 00 400656'		AOJA	RW,RETROL	;YES - SEE IF SCREEN SHOULD BE ROLLED
   633
   634	400514'	661 05 0 00 000014 	DOWN:	TLO	F,XPL!XPC	;LINE POINTER IS NO LONGER GOOD
   635	400515'	311 15 0 00 000324'		CAML	RW,LPP.2	;AT BOTTOM?
   636	400516'	634 15 0 00 000015 		TDZA	RW,RW		;YES - MOVE TO TOP
   637	400517'	344 15 0 00 400534'		AOJA	RW,AJDONE	;NO - DROP DOWN ONE MORE
   638	400520'	201 12 0 00 000037 		MOVEI	DO,37		;MAKE CURSOR POSITION ABSOLUTELY
   639	400521'	254 00 0 00 400534'		JRST	AJDONE
   640
   641	400522'	666 05 0 00 000010 	LEFT0:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT?
   642	400523'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - PUT CURSOR BACK IN TEXT
   643					;	PUSHJ	P,PUTTYP
   644	400524'	661 05 0 00 000010 	LEFT:	TLO	F,XPC		;CHARACTER POINTER IS NO LONGER GOOD
   645	400525'	365 16 0 00 400534'		SOJGE	CM,AJDONE	;MOVE LEFT - OFF THE EDGE?
   646	400526'	200 16 0 00 000325'		MOVE	CM,CPL.1	;YES - SET TO RIGHT EDGE
   647									;AND GO UP ONE
   648	400527'	201 12 0 00 000037 		MOVEI	DO,37		;MAKE CURSOR POSITION ABSOLUTELY
   649	400530'	661 05 0 00 000014 	UP:	TLO	F,XPL!XPC	;LINE POINTER IS NO LONGER GOOD
   650	400531'	365 15 0 00 400534'		SOJGE	RW,AJDONE	;MOVE UP - OFF THE TOP?
   651	400532'	200 15 0 00 000324'		MOVE	RW,LPP.2	;YES - SET TO BOTTOM
   652	400533'	201 12 0 00 000037 		MOVEI	DO,37		;MAKE CURSOR POSITION ABSOLUTELY
   653
   654	400534'	306 12 0 00 000010 	AJDONE:	CAIN	DO,10		;ELSE WANT A CURSOR LEFT?
   655						JRST	[PUSHJ P,CLEFT	;YES - HANDLE SEPARATELY
   656	400535'	254 00 0 00 411205'			 JRST  AJDON1]
   657	400536'	305 12 0 00 000034 		CAIGE	DO,34		;GOT A REAL CURSOR MOVE?
   658	400537'	254 00 0 00 400542'		JRST	AJDON1+1	;NO - NO OUTPUT, THEN
   659	400540'	260 17 1 12 410605'		PUSHJ	P,@CMVTBL-34(DO) ;YES - MOVE THE CURSOR THE RIGHT WAY
   660	400541'	260 17 0 00 410451'	AJDON1:	PUSHJ	P,PUTTYP
   661	400542'	603 05 0 00 000001 		TLNE	F,FLG		;WANT A SUBROUTINE RETURN?
   662	400543'	263 17 0 00 000000 	CPOPJ:	POPJ	P,		;YES
   663	400544'	254 00 0 00 400145'		JRST	LOOP		;NO - GO GET MORE INPUT
   664
   665	400545'	666 05 0 00 000010 	HOMARG:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT?
   666	400546'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - PUT CURSOR BACK IN TEXT
   667	400547'	403 15 0 00 000016 	HOME:	SETZB	RW,CM		;SET TO TOP AND LEFT MARGIN OF SCREEN
   668	400550'	661 05 0 00 000014 		TLO	F,XPL!XPC	;LINE AND CHARACTER POINTERS ARE INVALID
   669	400551'	260 17 0 00 410355'		PUSHJ	P,CHOME		;MOVE THE CURSOR HOME
   670	400552'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;ELSE OUTPUT IT NOW
   671	400553'	254 00 0 00 400145'		JRST	INTEND
   672
   673	400554'	666 05 0 00 000010 	UPARG:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6-1
SED	MAC	21-May-74 00:04		Process cursor movements

   674	400555'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - PUT CURSOR BACK IN TEXT
   675	400556'	254 00 0 00 400530'		JRST	UP
   676
   677	400557'	666 05 0 00 000010 	DWNARG:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT?
   678	400560'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - PUT CURSOR BACK IN TEXT
   679	400561'	254 00 0 00 400514'		JRST	DOWN
   680
   681	400562'	666 05 0 00 000010 	RGTARG:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT?
   682	400563'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - PUT CURSOR BACK IN TEXT
   683	400564'	254 00 0 00 400503'		JRST	RIGHT
   684
   685					;LFTARG IS SPECIAL: IT OPERATES BOTH AS CURSOR MOVEMENT AND TO DELETE
   686					;FROM THE PARAMETER BUFFER.
   687
   688	400565'	602 05 0 00 000010 	LFTARG:	TRNE	F,CMV		;DOING CURSOR MOVEMENT?
   689	400566'	254 00 0 00 400524'		JRST	LEFT		;YES - MOVE THE CURSOR
   690	400567'	200 02 0 00 002227'		MOVE	T2,PARPTR	;IS THIS THE 1ST CHARACTER OF THE ARGUMENT?
   691	400570'	316 02 0 00 411207'		CAMN	T2,[POINT 7,PARBUF]
   692	400571'	254 00 0 00 400522'		JRST	LEFT0		;YES - START CURSOR MOVEMENT
   693	400572'	316 02 0 00 411210'		CAMN	T2,[010700,,PARBUF-1]
   694	400573'	254 00 0 00 400145'		JRST	LOOP		;SKIP, IF USER DELETED ALL OF ARG
   695	400574'	270 02 0 00 411204'		ADD	T2,[70000,,0]	;FUDGE A DECREMENT OF THE PARM POINTER
   696	400575'	325 02 0 00 400577'		JUMPGE	T2,.+2		;IE, DELETE THE LATEST CHARACTER
   697	400576'	274 02 0 00 411175'		SUB	T2,[430000,,1]
   698	400577'	202 02 0 00 002227'		MOVEM	T2,PARPTR	;SAVE IT AGAIN
   699	400600'	260 17 0 00 410343'		PUSHJ	P,CLEFT		;ERASE A CHARACTER OF PARAMETER
   700	400601'	201 01 0 00 000040 		MOVEI	T1," "
   701	400602'	136 01 0 00 000010 		IDPB	T1,TY
   702	400603'	260 17 0 00 410343'		PUSHJ	P,CLEFT
   703	400604'	260 17 0 00 410451'		PUSHJ	P,PUTTYP
   704	400605'	254 00 0 00 400145'		JRST	LOOP		;AND GET A NEW COMMAND
   705
   706					;HERE FOR <CR> - OUTPUT A CARRIAGE RETURN-LINEFEED
   707
   708	400606'	666 05 0 00 000010 	RETARG:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT?
   709	400607'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - PUT CURSOR BACK IN TEXT
   710	400610'	254 00 0 00 400613'		JRST	RETUR0		;IT'S NEVER INSERT MODE IN A PARAMETER
   711
   712	400611'	602 05 0 00 000200 	RETURN:	TRNE	F,IMD		;IN INSERT MODE?
   713	400612'	254 00 0 00 400622'		JRST	RETIMD		;YES - ACT LIKE AN OPEN-LINE COMMAND
   714	400613'	400 16 0 00 000000 	RETUR0:	SETZ	CM,		;GO TO THE LEFT
   715	400614'	350 04 0 00 000015 		AOS	T4,RW		;AND DOWN ONE (AND GET FOR POSLIN)
   716	400615'	661 05 0 00 000014 		TLO	F,XPL!XPC	;LINE AND CHARACTER POINTERS ARE INVALID
   717	400616'	313 15 0 00 000324'		CAMLE	RW,LPP.2	;OFF THE BOTTOM?
   718	400617'	254 00 0 00 400656'		JRST	RETROL		;YES - MOVE TO THE TOP OR ROLL
   719	400620'	260 17 0 00 405764'	RETUR1:	PUSHJ	P,POSLIN	;MOVE TO THE RIGHT LINE
   720	400621'	254 00 0 00 400145'		JRST	INTEND		;AND GET ANOTHER COMMAND
   721
   722					;HERE FOR RETURN IN INSERT MODE: INSERT A LINE, THEN RETURN
   723
   724	400622'	602 05 0 00 040000 	RETIMD:	TRNE	F,NCR		;BEHAVE LIKE A NORMAL CR?
   725	400623'	254 00 0 00 400613'		JRST	RETUR0		;YES - GO BACK AND RETURN
   726	400624'	603 05 0 00 000400 		TLNE	F,RDO		;IS FILE READ-ONLY?
   727	400625'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
   728	400626'	260 17 0 00 410333'		PUSHJ	P,CLRLNR	;CLEAR TO END OF PRESENT LINE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6-2
SED	MAC	21-May-74 00:04		Process cursor movements

   729	400627'	661 05 0 00 001020 		TLO	F,XPB!CHG	;SAY BOTTOM POINTER BAD; FILE MODIFIED
   730	400630'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION
   731	400631'	201 04 0 00 000002 		MOVEI	T4,2		;SET TO INSERT TWO LINEFEEDS
   732	400632'	202 04 0 00 000336'		MOVEM	T4,NUMCHR
   733	400633'	201 01 0 00 000012 		MOVEI	T1,12		;  (CHANGE ONE OF 'EM TO A <CR> LATER)
   734	400634'	202 01 0 00 000341'		MOVEM	T1,CHARAC
   735	400635'	260 17 0 00 407003'		PUSHJ	P,MAKCHR
   736
   737	400636'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET POINTER TO CURSOR POSITION
   738	400637'	201 01 0 00 000015 		MOVEI	T1,15		;GET A CARRIAGE RETURN
   739	400640'	136 01 0 00 000013 		IDPB	T1,PT		;SET UP A NEW LINE
   740	400641'	133 00 0 00 000013 		IBP	PT		;SKIP OVER LINEFEED
   741	400642'	202 13 0 00 002253'		MOVEM	PT,CHRPTR	;SAVE CHARACTER POINTER AGAIN
   742	400643'	202 13 0 00 002252'		MOVEM	PT,LINPTR	;IT'S NOW THE LINE POINTER, TOO
   743	400644'	400 16 0 00 000000 		SETZ	CM,		;DO THE ACTUAL CARRIAGE RETURN
   744	400645'	340 15 0 00 000000 		AOJ	RW,
   745	400646'	311 15 0 07 000023 		CAML	RW,LPP(TM)	;WORKING ON BOTTOM LINE?
   746	400647'	254 00 0 00 400656'		JRST	RETROL		;YES - MOVE TO THE TOP OR ROLL
   747	400650'	201 04 0 00 000001 		MOVEI	T4,1		;GET SIZE OF OPEN
   748	400651'	336 03 0 07 000013 		SKIPN	T3,ILN(TM)	;CAN TERMINAL OPEN ITS OWN LINES?
   749	400652'	254 00 0 00 405112'		JRST	DISDWN		;NO - GO REDISPLAY FROM HERE DOWN
   750	400653'	260 17 0 00 402017'		PUSHJ	P,OPENLD	;OPEN UP THE SCREEN
   751	400654'	260 17 0 00 405173'		PUSHJ	P,DISONE	;RE-WRITE LINE
   752	400655'	254 00 0 00 400145'		JRST	INTEND		;DONE
   753
   754					;HERE IF RETURN TYPED AT BOTTOM OF SCREEN. IF NRC FLAG IS SET
   755					;ROLL THE SCREEN ONE LINE, POSITION TO NEW BOTTOM, ELSE GO TO TOP
   756					;ROLL A LINE; ELSE MOVE TO TOP OF SCREEN
   757
   758	400656'	602 05 0 00 001000 	RETROL:	TRNE	F,NRC		;WANT TO ROLL?
   759						JRST	[SETZB T4,RW	;NO - MOVE TO THE TOP
   760	400657'	254 00 0 00 411211'			 JRST  RETUR1]	;AND CONTINUE
   761	400660'	332 00 0 00 000355'		SKIPE	MRKPTR		;HAS A MARK BEEN MADE?
   762	400661'	254 00 0 00 400664'		JRST	.+3		;YES - O.K.
   763	400662'	603 05 0 00 000002 		TLNE	F,ENT		;NO - ENTERING A PARAMETER?
   764	400663'	364 15 0 00 400145'		SOJA	RW,INTEND	;PARAMETER, BUT NO MARK - DO NOTHING
   765	400664'	201 04 0 00 000001 		MOVEI	T4,1		;SET TO ROLL ONE LINE
   766	400665'	254 00 0 00 404430'		JRST	RFLNPM+1	;DO THE ROLL AND LOOP
   767
   768					;HERE FOR TAB - MOVE CURSOR POINTER AND CURSOR ON SCREEN
   769
   770	400666'	666 05 0 00 000010 	TABARG:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT?
   771	400667'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - PUT CURSOR BACK IN TEXT
   772
   773	400670'	602 05 0 00 000400 	TAB:	TRNE	F,WTB		;WANT WORD-WISE TABS?
   774	400671'	254 00 0 00 400712'		JRST	WTAB		;YES - GO DO THEM
   775	400672'	200 03 0 00 000343'		MOVE	T3,TABLEN	;GET LENGTH OF A TAB
   776	400673'	302 03 0 00 000010 		CAIE	T3,10		;IS IT THE USUAL?
   777	400674'	254 00 0 00 400700'		JRST	TAB0		;NO - HANDLE IT SPECIALLY
   778	400675'	620 16 0 00 000007 		TRZ	CM,7		;ELSE TAB OVER
   779	400676'	271 16 0 00 000010 		ADDI	CM,10
   780	400677'	254 00 0 00 400705'		JRST	TAB1-1
   781
   782	400700'	200 01 0 00 000016 	TAB0:	MOVE	T1,CM		;MOVE TO NEXT USER-SET TAB STOP
   783	400701'	230 01 0 00 000003 		IDIV	T1,T3		;MOVE BACK TO PREVIOUS STOP
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6-3
SED	MAC	21-May-74 00:04		Process cursor movements

   784	400702'	220 01 0 00 000003 		IMUL	T1,T3
   785	400703'	270 01 0 00 000003 		ADD	T1,T3		;THEN JUMP TO NEXT ONE
   786	400704'	200 16 0 00 000001 		MOVE	CM,T1
   787
   788	400705'	661 05 0 00 000010 		TLO	F,XPC		;CHARACTER POINTER IS BAD
   789	400706'	311 16 0 00 000325'	TAB1:	CAML	CM,CPL.1	;OFF THE RIGHT SIDE?
   790	400707'	254 00 0 00 400611'		JRST	RETURN		;YES - GO TO START OF NEXT LINE
   791	400710'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;NO - POSITION THE CURSOR
   792	400711'	254 00 0 00 400145'		JRST	INTEND		;AND GET ANOTHER COMMAND
   793
   794					;HERE FOR DOING A TAB IN WORD-PROCESSING MODE: MOVE TO START OF NEXT WORD
   795					;IE, LOOK FOR NEXT SPACE OR TAB; POINT TO NON- SPACE OR TAB AFTER THAT
   796					;IF BEYOND END OF LINE JUST DO REGULAR TABS
   797					;IF TAB WOULD GO OFF SCREEN MOVE TO START OF NEXT LINE
   798
   799	400712'	603 05 0 00 000010 	WTAB:	TLNE	F,XPC		;GOT POINTER TO CURRENT POSITION?
   800	400713'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;NO - RE-MAKE IT
   801	400714'	200 13 0 00 002253'		MOVE	PT,CHRPTR
   802	400715'	200 03 0 00 000016 		MOVE	T3,CM		;SAVE CURRENT POSITION
   803	400716'	134 01 0 00 000013 		ILDB	T1,PT		;GET FIRST CHARACTER
   804	400717'	322 01 0 00 400716'		JUMPE	T1,.-1		;IGNORE IF NULL
   805	400720'	306 01 0 00 000015 		CAIN	T1,15		;CARRIAGE RETURN?
   806	400721'	254 00 0 00 400777'		JRST	WTABT		;YES - DO A NORMAL TAB
   807	400722'	306 01 0 00 000040 		CAIN	T1," "		;SPACE?
   808	400723'	344 16 0 00 400763'		AOJA	CM,WTABS	;YES - CHECK FOR TRAILING SPACES
   809	400724'	306 01 0 00 000011 		CAIN	T1,11		;TAB?
   810	400725'	254 00 0 00 400774'		JRST	WTABS1		;YES - CHECK FOR TRAILING SPACES
   811
   812	400726'	354 03 0 00 000016 		AOSA	T3,CM		;BUMP AND GET POSITION NUMBER
   813	400727'	200 03 0 00 000016 	WTABC:	MOVE	T3,CM		;SAVE POSITION NUMBER
   814	400730'	200 02 0 00 000013 		MOVE	T2,PT		;  AND CHARACTER POINTER
   815	400731'	134 01 0 00 000013 		ILDB	T1,PT		;GET NEXT CHARACTER
   816	400732'	322 01 0 00 400731'		JUMPE	T1,.-1		;IGNORE IF NULL
   817	400733'	306 01 0 00 000040 		CAIN	T1," "		;IS IT A SPACE?
   818	400734'	344 16 0 00 400746'		AOJA	CM,WTABCS	;YES - PHASE TWO
   819	400735'	306 01 0 00 000011 		CAIN	T1,11		;NO - IS IT A TAB?
   820	400736'	254 00 0 00 400744'		JRST	WTABCT		;YES - COUNT IT AND SKIP SPACES
   821	400737'	302 01 0 00 000015 		CAIE	T1,15		;NO - GOT A CARRIAGE RETURN?
   822	400740'	344 16 0 00 400727'		AOJA	CM,WTABC	;NO - SKIP THIS REAL CHARACTER
   823
   824	400741'	200 16 0 00 000003 	WTABX:	MOVE	CM,T3		;GET POSITION BEFORE TRAILING SPACES
   825	400742'	202 02 0 00 002253'	WTABX0:	MOVEM	T2,CHRPTR	;SAVE CHARACTER POINTER
   826	400743'	254 00 0 00 400706'		JRST	TAB1		;AND FINISH OFF
   827
   828	400744'	620 16 0 00 000007 	WTABCT:	TRZ	CM,7		;TAB OVER
   829	400745'	271 16 0 00 000010 		ADDI	CM,10
   830	400746'	202 16 0 00 000310'	WTABCS:	MOVEM	CM,SAVEAC	;SAVE POSITION
   831	400747'	200 00 0 00 000013 		MOVE	T0,PT		;AND CHARACTER POINTER
   832	400750'	134 01 0 00 000013 		ILDB	T1,PT		;GET NEXT CHARACTER
   833	400751'	322 01 0 00 400750'		JUMPE	T1,.-1		;IGNORE IF NULL
   834	400752'	306 01 0 00 000015 		CAIN	T1,15		;NO - GOT A CARRIAGE RETURN?
   835	400753'	254 00 0 00 400741'		JRST	WTABX		;YES - POSITION TO END OF LINE
   836	400754'	306 01 0 00 000040 		CAIN	T1," "		;SPACE?
   837	400755'	344 16 0 00 400746'		AOJA	CM,WTABCS	;YES - SKIP UNTIL NOT ONE OF THOSE
   838	400756'	306 01 0 00 000011 		CAIN	T1,11		;TAB?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6-4
SED	MAC	21-May-74 00:04		Process cursor movements

   839	400757'	254 00 0 00 400744'		JRST	WTABCT		;YES - COUNT THE TAB AND SKIP IT
   840	400760'	200 16 0 00 000310'		MOVE	CM,SAVEAC	;GET POINTER TO THIS CHARACTER
   841	400761'	202 00 0 00 002253'		MOVEM	T0,CHRPTR
   842	400762'	254 00 0 00 400706'		JRST	TAB1		;AND MOVE CURSOR HERE
   843
   844					;HERE IF CHARACTER AT CURSOR IS SPACE OR TAB
   845
   846	400763'	200 02 0 00 000013 	WTABS:	MOVE	T2,PT		;SAVE POSITION
   847	400764'	134 01 0 00 000013 		ILDB	T1,PT		;GET CHARACTER AFTER <CR>
   848	400765'	322 01 0 00 400764'		JUMPE	T1,.-1		;IGNORE IF NULL
   849	400766'	306 01 0 00 000040 		CAIN	T1," "		;SPACE?
   850	400767'	344 16 0 00 400763'		AOJA	CM,WTABS	;YES - COUNT AND SKIP IT
   851	400770'	306 01 0 00 000015 		CAIN	T1,15		;CARRIAGE RETURN?
   852	400771'	254 00 0 00 400777'		JRST	WTABT		;YES - POSITION TO END OF LINE
   853	400772'	302 01 0 00 000011 		CAIE	T1,11		;TAB?
   854	400773'	254 00 0 00 400742'		JRST	WTABX0		;NO - POSITION TO CURRENT CHARACTER
   855	400774'	620 16 0 00 000007 	WTABS1:	TRZ	CM,7		;YES - TAB OVER
   856	400775'	271 16 0 00 000010 		ADDI	CM,10
   857	400776'	254 00 0 00 400763'		JRST	WTABS		;AND KEEP SKIPPING
   858
   859	400777'	200 16 0 00 000003 	WTABT:	MOVE	CM,T3		;HERE IF AT END OF LINE - DO NORMAL TAB
   860	401000'	254 00 0 00 400672'		JRST	TAB+2
   861
   862					;HERE TO HANDLE A BACK-TAB - MOVE BACK TO THE NEAREST TAB STOP
   863
   864	401001'	666 05 0 00 000010 	BTBARG:	TRON	F,CMV		;ALREADY DOING CURSOR MOVEMENT
   865	401002'	260 17 0 00 405412'		PUSHJ	P,MARKUP	;NO - SET UP FOR IT
   866
   867	401003'	602 05 0 00 000400 	BAKTAB:	TRNE	F,WTB		;WANT WORD-WISE BACKTABS?
   868	401004'	254 00 0 00 401026'		JRST	WBTAB		;YES - GO DO THEM
   869	401005'	661 05 0 00 000010 		TLO	F,XPC		;CHARACTER POINTER IS BAD
   870	401006'	200 03 0 00 000343'		MOVE	T3,TABLEN	;GET LENGTH OF A TAB
   871	401007'	302 03 0 00 000010 		CAIE	T3,10		;IS IT THE USUAL?
   872	401010'	254 00 0 00 401014'		JRST	BAKTB0		;NO - HANDLE IT SPECIALLY
   873	401011'	626 16 0 00 000007 		TRZN	CM,7		;YES - TAB BACKWARD
   874	401012'	275 16 0 00 000010 		SUBI	CM,10
   875	401013'	254 00 0 00 401021'		JRST	BAKTB1		;FINISH OFF
   876
   877	401014'	375 01 0 00 000016 	BAKTB0:	SOSGE	T1,CM		;GET AND DECREMENT POSITION. IF AT LEFT,
   878	401015'	254 00 0 00 401022'		JRST	BAKTB1+1	;  MOVE TO RIGHT OF PREVIOUS LINE
   879	401016'	230 01 0 00 000003 		IDIV	T1,T3		;ELSE MOVE TO PREVIOUS TAB STOP
   880	401017'	220 01 0 00 000003 		IMUL	T1,T3
   881	401020'	200 16 0 00 000001 		MOVE	CM,T1
   882
   883	401021'	325 16 0 00 405127'	BAKTB1:	JUMPGE	CM,DISCUR	;DONE, IF ON SCREEN
   884	401022'	200 16 0 00 000325'		MOVE	CM,CPL.1	;ELSE MOVE TO RIGHT
   885	401023'	365 15 0 00 405127'		SOJGE	RW,DISCUR	; OF NEXT HIGHER LINE
   886	401024'	200 15 0 00 000324'		MOVE	RW,LPP.2	;IF AT TOP, MOVE TO BOTTOM
   887	401025'	254 00 0 00 405127'		JRST	DISCUR
   888
   889					;HERE FOR DOING A BACK-TAB IN WORD-PROCESSING MODE
   890					;MOVE TO START OF PREVIOUS WORD
   891					;IE, LOOK FOR NEXT SPACE OR TAB; POINT TO NEXT NON- SPACE OR TAB
   892					;IF AT START OF LINE, MOVE TO END OF PREVIOUS LINE (BUT NOT OFF SCREEN)
   893
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6-5
SED	MAC	21-May-74 00:04		Process cursor movements

   894	401026'	603 05 0 00 000010 	WBTAB:	TLNE	F,XPC		;GOT POINTER TO CURRENT POSITION?
   895	401027'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;NO - RE-MAKE IT
   896	401030'	603 05 0 00 000004 		TLNE	F,XPL		;IS CURSOR BEYOND END OF BUFFER?
   897	401031'	254 00 0 00 401147'		JRST	WBTABO		;YES - MOVE IT TO END OF LAST LINE
   898	401032'	322 16 0 00 401075'		JUMPE	CM,WBTABB	;IF AT START OF LINE, MOVE TO END OF PREVIOUS
   899	401033'	200 13 0 00 002253'		MOVE	PT,CHRPTR
   900	401034'	254 00 0 00 401040'		JRST	.+4		;START WITH CHARACTER AT CURSOR
   901
   902	401035'	270 13 0 00 411204'	WBTABS:	ADD	PT,[70000,,0]	;SKIP SPACES AFTER WORD
   903	401036'	325 13 0 00 401040'		JUMPGE	PT,.+2
   904	401037'	274 13 0 00 411175'		SUB	PT,[430000,,1]
   905	401040'	135 01 0 00 000013 		LDB	T1,PT		;GET IT
   906	401041'	322 01 0 00 401035'		JUMPE	T1,WBTABS	;IGNORE IF NULL
   907	401042'	302 01 0 00 000040 		CAIE	T1," "		;SPACE
   908	401043'	306 01 0 00 000011 		CAIN	T1,11		;  OR TAB?
   909	401044'	254 00 0 00 401035'		JRST	WBTABS		;YES - SKIP UNTIL NOT ONE OF THOSE
   910	401045'	306 01 0 00 000012 		CAIN	T1,12		;NO - GOT A CARRIAGE RETURN?
   911	401046'	254 00 0 00 401064'		JRST	WBTABL		;YES - CHECK FOR END OF LINE
   912
   913	401047'	270 13 0 00 411204'	WBTABC:	ADD	PT,[70000,,0]	;SKIP TO BEGINNING OF PREVIOUS WORD
   914	401050'	325 13 0 00 401052'		JUMPGE	PT,.+2
   915	401051'	274 13 0 00 411175'		SUB	PT,[430000,,1]
   916	401052'	135 01 0 00 000013 		LDB	T1,PT		;GET IT
   917	401053'	302 01 0 00 000040 	WBTBC1:	CAIE	T1," "		;IS IT A SPACE
   918	401054'	306 01 0 00 000011 		CAIN	T1,11		;  OR A TAB?
   919	401055'	254 00 0 00 401061'		JRST	WBTABX		;YES - DONE
   920	401056'	306 01 0 00 000012 		CAIN	T1,12		;NO - GOT A LINEFEED?
   921	401057'	254 00 0 00 401064'		JRST	WBTABL		;YES - CHECK FOR END OF LINE
   922	401060'	254 00 0 00 401047'		JRST	WBTABC		;NO - KEEP SKIPPING
   923
   924	401061'	202 13 0 00 002253'	WBTABX:	MOVEM	PT,CHRPTR	;SAVE POINTER TO START OF NEXT WORD
   925	401062'	200 13 0 00 002252'		MOVE	PT,LINPTR	;GET POINTER TO START OF LINE
   926	401063'	254 00 0 00 401125'		JRST	WBTABE		;AND FINISH OFF
   927
   928	401064'	270 13 0 00 411204'	WBTABL:	ADD	PT,[70000,,0]	;POINT TO PREVIOUS CHARACTER
   929	401065'	325 13 0 00 401067'		JUMPGE	PT,.+2
   930	401066'	274 13 0 00 411175'		SUB	PT,[430000,,1]
   931	401067'	135 01 0 00 000013 		LDB	T1,PT		;GET CHARACTER BEFORE <LF>
   932	401070'	302 01 0 00 000015 		CAIE	T1,15		;CARRIAGE RETURN?
   933	401071'	254 00 0 00 401053'		JRST	WBTBC1		;NO - KEEP LOOKING
   934	401072'	400 16 0 00 000000 	WBTBL1:	SETZ	CM,		;YES - POSITION TO START OF THE LINE
   935	401073'	661 05 0 00 000010 		TLO	F,XPC		;MAKE CHAR PTR GET REMADE
   936	401074'	254 00 0 00 405127'		JRST	DISCUR		;POSITION CURSOR; DONE
   937
   938	401075'	361 15 0 00 400547'	WBTABB:	SOJL	RW,HOME		;MOVE UP A LINE - IF AT TOP, GO HOME
   939	401076'	200 03 0 00 002252'		MOVE	T3,LINPTR	;GET POINTER TO START OF LINE
   940	401077'	250 03 0 00 002254'		EXCH	T3,DISPTR	;FUDGE IT TO BE DISPLAY PTR
   941	401100'	201 04 0 00 000001 		MOVEI	T4,1		;BACK UP TO START OF PREVIOUS LINE
   942						JUMPN	SL,[MOVE  T1,LINPTR ;IF SLIDE, PRETEND POINTING
   943							    MOVEM T1,CHRPTR ;TO START OF LINE
   944	401101'	326 11 0 00 411213'			    JRST  .+1]
   945	401102'	260 17 0 00 405776'		PUSHJ	P,BAKDPT
   946	401103'	202 03 0 00 002254'		MOVEM	T3,DISPTR	;SAVE REAL DISPLAY POINTER AGAIN
   947	401104'	202 13 0 00 002252'		MOVEM	PT,LINPTR	;SAVE RE-DONE LINE POINTER
   948
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6-6
SED	MAC	21-May-74 00:04		Process cursor movements

   949	401105'	200 04 0 00 002253'		MOVE	T4,CHRPTR	;NOW FIND END OF LINE
   950	401106'	270 04 0 00 411204'	WBTBB1:	ADD	T4,[70000,,0]	;POINT TO PREVIOUS CHARACTER
   951	401107'	325 04 0 00 401111'		JUMPGE	T4,.+2
   952	401110'	274 04 0 00 411175'		SUB	T4,[430000,,1]
   953	401111'	135 01 0 00 000004 	WBTBB2:	LDB	T1,T4		;GET PREVIOUS CHARACTER
   954	401112'	306 01 0 00 000015 		CAIN	T1,15		;CARRIAGE RETURN?
   955	401113'	254 00 0 00 401106'		JRST	WBTBB1		;YES - SKIP IT
   956	401114'	302 01 0 00 000040 		CAIE	T1," "		;TRAILING SPACE
   957	401115'	306 01 0 00 000011 		CAIN	T1,11		;  OR TAB?
   958	401116'	254 00 0 00 401106'		JRST	WBTBB1		;YES - SKIP IT
   959	401117'	306 01 0 00 000012 		CAIN	T1,12		;NOTHING ON THIS LINE?
   960						JRST	[TLZE  F,FLG	;YES - WANT TO RE-DO RW?
   961							 PUSHJ P,CALCRW	;YES (ONLY IF BEYOND END OF BUFFER)
   962	401120'	254 00 0 00 411216'			 JRST  WBTBL1]	;MOVE TO START OF LINE
   963	401121'	202 04 0 00 002253'		MOVEM	T4,CHRPTR	;SAVE CHARACTER POINTER
   964	401122'	623 05 0 00 000001 		TLZE	F,FLG		;WANT TO RE-DO RW?
   965	401123'	260 17 0 00 406325'		PUSHJ	P,CALCRW	;YES (ONLY IF BEYOND END OF BUFFER)
   966	401124'	200 13 0 00 002252'		MOVE	PT,LINPTR	;SAVE RE-DONE LINE POINTER
   967
   968	401125'	400 16 0 00 000000 	WBTABE:	SETZ	CM,		;CLEAR COLUMN NUMBER
   969	401126'	316 13 0 00 002253'	WBTBE0:	CAMN	PT,CHRPTR	;UP TO CHARACTER POSITION?
   970	401127'	254 00 0 00 401137'		JRST	WBTBE1		;YES - FINISH OFF
   971	401130'	134 01 0 00 000013 		ILDB	T1,PT		;GET NEXT CHARACTER
   972	401131'	322 01 0 00 401126'		JUMPE	T1,WBTBE0	;IGNORE IF NULL
   973	401132'	302 01 0 00 000011 		CAIE	T1,11		;TAB?
   974	401133'	344 16 0 00 401126'		AOJA	CM,WBTBE0	;NO - COUNT AS ONE CHARACTER
   975	401134'	620 16 0 00 000007 		TRZ	CM,7		;YES - COUNT THE TAB
   976	401135'	271 16 0 00 000010 		ADDI	CM,10
   977	401136'	254 00 0 00 401126'		JRST	WBTBE0		;AND LOOP
   978
   979	401137'	274 16 0 00 000011 	WBTBE1:	SUB	CM,SL		;REMOVE THE SLIDE FROM THE COLUMN
   980	401140'	321 16 0 00 401144'		JUMPL	CM,WBTBE2	;JUMP IF OFF THE LEFT
   981	401141'	317 16 0 00 000325'		CAMG	CM,CPL.1	;OFF THE RIGHT?
   982	401142'	254 00 0 00 405127'		JRST	DISCUR		;NO - GO DISPLAY
   983	401143'	334 16 0 00 000325'		SKIPA	CM,CPL.1	;POSITION CURSOR AT RIGHT
   984	401144'	400 16 0 00 000000 	WBTBE2:	SETZ	CM,		;POSITION CURSOR AT LEFT
   985	401145'	661 05 0 00 000010 		TLO	F,XPC		;COLUMN POINTER IS NOT GOOD
   986	401146'	254 00 0 00 405127'		JRST	DISCUR
   987
   988	401147'	661 05 0 00 000001 	WBTABO:	TLO	F,FLG		;SET FLAG SO RW WILL BE REMADE
   989	401150'	200 04 0 00 002253'		MOVE	T4,CHRPTR	;GET POINTER TO CURRENT CHARACTER
   990	401151'	254 00 0 00 401111'		JRST	WBTBB2		;BACK UP TO END OF LAST LINE
   991
   992					;HERE ON LINEFEED, WHICH ERASES THE LINE THAT THE CURSOR GOES TO
   993
   994	401152'	607 07 0 00 400000 	LNFPAR:	TLNN	TM,LSD		;IS LINEFEED REALLY A CURSOR DOWN?
   995	401153'	254 00 0 00 400174'		JRST	ILCERR		;NO - ENTER LINEFEED IS ILLEGAL
   996	401154'	201 12 0 00 000034 		MOVEI	DO,34		;YES - DO A DOWN INSTEAD
   997	401155'	254 00 0 00 400557'		JRST	DWNARG
   998
   999	401156'	603 07 0 00 400000 	LNFEED:	TLNE	TM,LSD		;IS LINEFEED REALLY A CURSOR DOWN?
  1000						JRST	[MOVEI DO,34	;YES - DO A DOWN INSTEAD
  1001	401157'	254 00 0 00 411221'			 JRST  DOWN]
  1002	401160'	603 05 0 00 000400 		TLNE	F,RDO		;IS FILE READ-ONLY?
  1003	401161'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 6-7
SED	MAC	21-May-74 00:04		Process cursor movements

  1004	401162'	661 05 0 00 001000 		TLO	F,CHG		;SAY FILE HAS BEEN MODIFIED
  1005	401163'	316 15 0 00 000323'		CAMN	RW,LPP.1	;AT BOTTOM OF SCREEN?
  1006	401164'	254 00 0 00 401211'		JRST	LNFERR		;YES - ILLEGAL
  1007	401165'	340 15 0 00 000000 		AOJ	RW,		;MOVE TO NEXT ROW
  1008	401166'	201 01 0 00 000015 		MOVEI	T1,15		;MOVE TO START OF LINE
  1009	401167'	136 01 0 00 000010 		IDPB	T1,TY
  1010	401170'	260 17 0 00 410346'		PUSHJ	P,CDOWN		;MOVE DOWN ONE
  1011	401171'	260 17 0 00 410332'		PUSHJ	P,CLRLNA	;ERASE THE ENTIRE LINE
  1012	401172'	260 17 0 00 405766'		PUSHJ	P,POSCUR
  1013	401173'	621 05 0 00 400004 		TLZ	F,XPL!PCM	;SAY LINE POINTER IS BE GOOD; KILL MARK
  1014	401174'	260 17 0 00 406157'		PUSHJ	P,MAKLPT	;AND MAKE IT (IN LINPTR AND PT)
  1015	401175'	400 02 0 00 000000 		SETZ	T2,		;GET A NULL
  1016	401176'	134 01 0 00 000013 	LNFED1:	ILDB	T1,PT		;GET A CHARACTER
  1017	401177'	306 01 0 00 000015 		CAIN	T1,15		;CARRIAGE RETURN?
  1018	401200'	254 00 0 00 401203'		JRST	LNFED3		;YES - CHECK FOR END OF LINE
  1019	401201'	137 02 0 00 000013 	LNFED2:	DPB	T2,PT		;ELSE NULL OUT THE CHARACTER
  1020	401202'	254 00 0 00 401176'		JRST	LNFED1		;AND GET ANOTHER
  1021
  1022	401203'	200 04 0 00 000013 	LNFED3:	MOVE	T4,PT		;GET FRAGGABLE POINTER
  1023	401204'	134 01 0 00 000004 		ILDB	T1,T4		;GET (MAYBE) LINEFEED
  1024	401205'	302 01 0 00 000012 		CAIE	T1,12		;IS IT REALLY?
  1025	401206'	254 00 0 00 401201'		JRST	LNFED2		;NO - JUST NULL OUT THE <CR>
  1026	401207'	661 05 0 00 000010 		TLO	F,XPC		;SAY CHARACTER POINTER IS BAD
  1027	401210'	254 00 0 00 400145'		JRST	LOOP		;DONE
  1028
  1029	401211'	201 01 0 00 411223'	LNFERR:	MOVEI	T1,[ASCIZ /#Can't erase last line of display/]
  1030	401212'	254 00 0 00 410520'		JRST	ERROR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 7
SED	MAC	21-May-74 00:04		Search for string

  1031					SUBTTL	Search for string
  1032
  1033					;HERE FOR THE SEARCH BACKWARD COMMAND
  1034
  1035	401213'	200 03 0 00 411232'	SRCBAK:	MOVE	T3,[POINT 7,SRCKEY]
  1036	401214'	260 17 0 00 407276'		PUSHJ	P,PELS.1	;GET SEARCH KEY
  1037	401215'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ERASE PARAMETER
  1038
  1039	401216'	260 17 0 00 406040'	SRBNPM:	PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POINTER
  1040	401217'	200 00 0 00 002254'		MOVE	T0,DISPTR	;GET POINTER TO TOP OF SCREEN
  1041	401220'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET POINTER TO CURRENT POSITION
  1042	401221'	200 04 0 00 411233'		MOVE	T4,[350700,,SRCKEY] ;AND POINTER TO START OF SEARCH KEY
  1043	401222'	135 03 0 00 000004 		LDB	T3,T4		;GET THE FIRST KEY CHARACTER
  1044	401223'	602 05 0 00 002000 		TRNE	F,NLC		;WANT CASE INDEPENDENCE?
  1045						JRST	[CAIL T3,"a"	;YES - LOWER CASE?
  1046							 SUBI T3,40	;YES - CONVERT TO UPPER
  1047	401224'	254 00 0 00 411234'			 JRST .+1]	;CONTINUE
  1048	401225'	326 03 0 00 401232'		JUMPN	T3,SRCBK3	;O.K. IF SOMETHING TO SEARCH FOR
  1049	401226'	254 00 0 00 401422'		JRST	SRXERR		;ELSE ERROR
  1050
  1051	401227'	270 13 0 00 411204'	SRCBK1:	ADD	PT,[70000,,0]	;NO - BACK POINTER UP A NOTCH
  1052	401230'	325 13 0 00 401232'		JUMPGE	PT,.+2
  1053	401231'	274 13 0 00 411175'		SUB	PT,[430000,,1]
  1054	401232'	316 13 0 00 411073'	SRCBK3:	CAMN	PT,[010700,,BUFFER-1] ;AT START OF FILE YET?
  1055	401233'	254 00 0 00 401424'		JRST	SRCERR		;YES - NOT-FOUND ERROR
  1056	401234'	135 01 0 00 000013 		LDB	T1,PT		;GET A CHARACTER
  1057	401235'	316 00 0 00 000013 		CAMN	T0,PT		;BACK TO START OF SCREEN?
  1058	401236'	260 17 0 00 401343'		PUSHJ	P,SRCDKY	;YES - REMIND USER WHAT KEY IS
  1059	401237'	602 05 0 00 002000 		TRNE	F,NLC		;WANT CASE INDEPENDENCE?
  1060						JRST	[CAIL T1,"a"	;YES - LOWER CASE?
  1061							 SUBI T1,40	;YES - CONVERT TO UPPER
  1062	401240'	254 00 0 00 411237'			 JRST .+1]	;CONTINUE
  1063	401241'	316 01 0 00 000003 		CAMN	T1,T3		;SAME AS FIRST CHAR OF KEY?
  1064	401242'	254 00 0 00 401245'		JRST	SRCB2A		;YES - CHECK REST OF MATCH
  1065	401243'	302 03 0 00 000037 		CAIE	T3,37		;GOT A WILD KEY CHARACTER?
  1066	401244'	254 00 0 00 401227'		JRST	SRCBK1		;NO - KEEP GOING
  1067
  1068	401245'	202 13 0 00 000032'	SRCB2A:	MOVEM	PT,SRCPTR	;SAVE POINTER TO BUFFER
  1069	401246'	260 17 0 00 401263'	TOPS10^IFE TOPS-10,^<	PUSHJ	P,SRCIPT	;SEE IF USER WANTS TO INTERRUPT
  1070					>
  1071	401247'	134 02 0 00 000004 	SRCBK2:	ILDB	T2,T4		;GET NEXT CHARACTER OF KEY
  1072	401250'	322 02 0 00 401356'		JUMPE	T2,SRCMAT	;IF NULL, GOT A MATCH
  1073	401251'	134 01 0 00 000013 		ILDB	T1,PT		;LIKEWISE FROM BUFFER
  1074	401252'	322 01 0 00 401251'		JUMPE	T1,.-1		;IGNORE IF NULL
  1075	401253'	602 05 0 00 002000 		TRNE	F,NLC		;WANT CASE INDEPENDENCE?
  1076						JRST	[CAIL T2,"a"	;YES - GOT A LOWER CASE?
  1077							 SUBI T2,40	;YES - CONVERT TO UPPER
  1078							 CAIL T1,"a"	;GOT A LOWER CASE?
  1079							 SUBI T1,40	;YES - CONVERT TO UPPER
  1080	401254'	254 00 0 00 411242'			 JRST .+1]	;CONTINUE
  1081	401255'	312 01 0 00 000002 		CAME	T1,T2		;SAME?
  1082	401256'	306 02 0 00 000037 		CAIN	T2,37		;  OR KEY CHAR IS WILD?
  1083	401257'	254 00 0 00 401247'		JRST	SRCBK2		;YES - O.K. SO FAR
  1084
  1085	401260'	200 13 0 00 000032'		MOVE	PT,SRCPTR	;NO - NO MATCH - RESTORE BUFFER POINTER
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 7-1
SED	MAC	21-May-74 00:04		Search for string

  1086	401261'	200 04 0 00 411233'		MOVE	T4,[350700,,SRCKEY] ;AND POINTER TO START OF SEARCH KEY
  1087	401262'	254 00 0 00 401227'		JRST	SRCBK1		;AND CONTINUE LOOKING FOR THE ENTIRE KEY
  1088
  1089					TOPS10^IFE TOPS-10,^<
  1090	401263'	051 02 0 00 000001 	SRCIPT:	INCHRS	T1		;SEE IF USER TYPED ANYTHING
  1091	401264'	263 17 0 00 000000 		  POPJ	P,		;NO - CONTINUE
  1092	401265'	405 01 0 00 000177 		ANDI	T1,177		;YES - GET THE CHARACTER
  1093	401266'	306 01 0 00 000177 		CAIN	T1,177		;IS IT A RUBOUT?
  1094	401267'	254 00 0 00 400232'		JRST	RUBSRC		;YES - ABORT THE SEARCH
  1095	401270'	263 17 0 00 000000 		POPJ	P,		;NO - CONTINUE
  1096					>
  1097					;HERE FOR THE SEARCH FORWARD COMMAND
  1098
  1099	401271'	200 03 0 00 411232'	SRCFWD:	MOVE	T3,[POINT 7,SRCKEY]
  1100	401272'	260 17 0 00 407276'		PUSHJ	P,PELS.1	;GET SEARCH KEY
  1101	401273'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ERASE PARAMETER
  1102
  1103	401274'	260 17 0 00 406040'	SRFNPM:	PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POINTER
  1104	401275'	316 15 0 00 000323'		CAMN	RW,LPP.1	;IS CURSOR ON THE BOTTOM LINE?
  1105						JRST	[PUSHJ P,SRCDKY ;YES - SCREEN WILL BE RE-DONE
  1106	401276'	254 00 0 00 411247'			 JRST  SRFNP1]
  1107	401277'	623 05 0 00 000020 		TLZE	F,XPB		;GOT A VALID BOTTOM POINTER?
  1108	401300'	260 17 0 00 406234'		PUSHJ	P,MAKBPT	;NO - RE-MAKE IT
  1109	401301'	200 00 0 00 002255'		MOVE	T0,BOTPTR	;GET BOTTOM PTR TO SEE WHEN SRCH IS OFF SCREEN
  1110	401302'	200 13 0 00 002253'	SRFNP1:	MOVE	PT,CHRPTR	;GET POINTER TO CURRENT POSITION
  1111	401303'	134 01 0 00 000013 		ILDB	T1,PT		;SKIP FIRST REAL CHARACTER
  1112	401304'	322 01 0 00 401303'		JUMPE	T1,.-1		;  AT THIS LOCATION
  1113	401305'	200 04 0 00 411233'		MOVE	T4,[350700,,SRCKEY] ;AND POINTER TO START OF SEARCH KEY
  1114	401306'	135 03 0 00 000004 		LDB	T3,T4		;GET THE FIRST KEY CHARACTER
  1115	401307'	322 03 0 00 401422'		JUMPE	T3,SRXERR	;ERROR IF NOTHING TO SEARCH FOR
  1116	401310'	602 05 0 00 002000 		TRNE	F,NLC		;WANT CASE INDEPENDENCE?
  1117						JRST	[CAIL T3,"a"	;YES - LOWER CASE?
  1118							 SUBI T3,40	;YES - CONVERT TO UPPER
  1119	401311'	254 00 0 00 411251'			 JRST .+1]	;CONTINUE
  1120
  1121	401312'	316 13 0 00 000014 	SRCFW1:	CAMN	PT,EN		;AT END OF FILE YET?
  1122	401313'	254 00 0 00 401424'		JRST	SRCERR		;YES - NOT-FOUND ERROR
  1123	401314'	134 01 0 00 000013 		ILDB	T1,PT		;ELSE GET A CHARACTER
  1124	401315'	316 00 0 00 000013 		CAMN	T0,PT		;GOING OFF THE BOTTOM OF THE SCREEN?
  1125	401316'	260 17 0 00 401343'		PUSHJ	P,SRCDKY	;YES - REMIND USER WHAT KEY IS
  1126	401317'	602 05 0 00 002000 		TRNE	F,NLC		;WANT CASE INDEPENDENCE?
  1127						JRST	[CAIL T1,"a"	;YES - LOWER CASE?
  1128							 SUBI T1,40	;YES - CONVERT TO UPPER
  1129	401320'	254 00 0 00 411254'			 JRST .+1]	;CONTINUE
  1130	401321'	316 01 0 00 000003 		CAMN	T1,T3		;SAME AS FIRST CHAR OF KEY?
  1131	401322'	254 00 0 00 401325'		JRST	SRCF2A		;YES - CHECK REST OF KEY
  1132	401323'	302 03 0 00 000037 		CAIE	T3,37		;WILD SEARCH CHARACTER?
  1133	401324'	254 00 0 00 401312'		JRST	SRCFW1		;NO - KEEP GOING
  1134
  1135	401325'	202 13 0 00 000032'	SRCF2A:	MOVEM	PT,SRCPTR	;SAVE POINTER TO BUFFER
  1136	401326'	260 17 0 00 401263'	TOPS10^IFE TOPS-10,^<	PUSHJ	P,SRCIPT	;SEE IF USER WANTS TO INTERRUPT
  1137					>
  1138	401327'	134 02 0 00 000004 	SRCFW2:	ILDB	T2,T4		;GET NEXT CHARACTER OF KEY
  1139	401330'	322 02 0 00 401356'		JUMPE	T2,SRCMAT	;IF NULL, GOT A MATCH
  1140	401331'	134 01 0 00 000013 	SRCFW3:	ILDB	T1,PT		;LIKEWISE FROM BUFFER
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 7-2
SED	MAC	21-May-74 00:04		Search for string

  1141	401332'	322 01 0 00 401331'		JUMPE	T1,SRCFW3	;IGNORE IF NULL
  1142	401333'	602 05 0 00 002000 		TRNE	F,NLC		;WANT CASE INDEPENDENCE?
  1143						JRST	[CAIL T1,"a"	;YES - LOWER CASE?
  1144							 SUBI T1,40	;YES - CONVERT TO UPPER
  1145							 CAIL T2,"a"	;LOWER CASE?
  1146							 SUBI T2,40	;YES - CONVERT TO UPPER
  1147	401334'	254 00 0 00 411257'			 JRST .+1]	;CONTINUE
  1148	401335'	312 01 0 00 000002 		CAME	T1,T2		;SAME?
  1149	401336'	306 02 0 00 000037 		CAIN	T2,37		;  OR KEY CHAR IS WILD?
  1150	401337'	254 00 0 00 401327'		JRST	SRCFW2		;YES - O.K. SO FAR
  1151
  1152	401340'	200 13 0 00 000032'		MOVE	PT,SRCPTR	;NO - NO MATCH - RESTORE BUFFER POINTER
  1153	401341'	200 04 0 00 411233'		MOVE	T4,[350700,,SRCKEY] ;AND POINTER TO START OF SEARCH KEY
  1154	401342'	254 00 0 00 401312'		JRST	SRCFW1		;AND CONTINUE LOOKING FOR THE ENTIRE KEY
  1155
  1156					;SUBROUTINE FOR WHEN THE SEARCH HAS GONE BEYOND THE LIMITS OF THE SCREEN
  1157					;DISPLAY SEARCH KEY ON BOTTOM LINE AND SET T0 TO -1
  1158					;(THUS T0/-1 IF MATCH NOT ON SCREEN, ELSE NONZERO). FRAGS T1 ONLY.
  1159
  1160	401343'	602 05 0 00 000020 	SRCDKY:	TRNE	F,XCT		;EXECUTING?
  1161	401344'	254 00 0 00 401354'		JRST	SRCDK1		;YES - DON'T DISPLAY
  1162	401345'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;MOVE CURSOR TO BOTTOM
  1163	401346'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN PROTECTION ON
  1164	401347'	201 01 0 00 411264'		MOVEI	T1,[ASCIZ /Search for: /]
  1165	401350'	260 17 0 00 410365'		PUSHJ	P,PUTSTG	;DISPLAY SEARCH KEY
  1166	401351'	201 01 0 00 000033'		MOVEI	T1,SRCKEY
  1167	401352'	260 17 0 00 410373'		PUSHJ	P,PUTSTC
  1168	401353'	260 17 0 00 410340'		PUSHJ	P,PROTOF	;TURN PROTECTION OFF
  1169	401354'	474 00 0 00 000000 	SRCDK1:	SETO	T0,		;CLEAR ON-SCREEN INDICATOR
  1170	401355'	254 00 0 00 410451'		JRST	PUTTYP		;OUTPUT ALL THIS AND RETURN
  1171
  1172					;HERE WHEN A SEARCHER HAS FOUND A MATCH - DISPLAY A FEW LINES BEFORE MATCH
  1173
  1174	401356'	200 13 0 00 000032'	SRCMAT:	MOVE	PT,SRCPTR	;RESTORE PTR TO START OF MATCH
  1175	401357'	135 01 0 00 000013 		LDB	T1,PT		;GET FIRST CHARACTER OF MATCH
  1176	401360'	306 01 0 00 000012 		CAIN	T1,12		;LINEFEED?
  1177	401361'	133 00 0 00 000013 		IBP	PT		;YES - POINT TO FIRST CHARACTER
  1178	401362'	202 13 0 00 000032'		MOVEM	PT,SRCPTR	;SAVE ADJUSTED POINTER
  1179	401363'	316 00 0 00 411267'		CAMN	T0,[-1]		;IS MATCH ON SCREEN?
  1180	401364'	254 00 0 00 401377'		JRST	SRCMT0		;NO - GO RE-DISPLAY
  1181
  1182					;HERE IF MATCH IS ON SCREEN - JUST POSITION CURSOR AT MATCH
  1183
  1184	401365'	270 13 0 00 411204'		ADD	PT,[70000,,0]	;BACK IT UP A NOTCH
  1185	401366'	325 13 0 00 401370'		JUMPGE	PT,.+2
  1186	401367'	274 13 0 00 411175'		SUB	PT,[430000,,1]
  1187	401370'	202 13 0 00 002253'		MOVEM	PT,CHRPTR	;CHARACTER POSITION WILL BE START OF THE MATCH
  1188	401371'	260 17 0 00 406325'		PUSHJ	P,CALCRW	;CALCULATE PROPER VALUE OF RW
  1189	401372'	200 13 0 00 002252'		MOVE	PT,LINPTR	;POINT TO START OF LINE
  1190	401373'	260 17 0 00 406361'		PUSHJ	P,CALCCM	;CALCULATE PROPER VALUE OF CM
  1191	401374'	260 17 0 00 405131'		  PUSHJ	P,DISPLL	;RE-DISPLAY IF THERE WAS A SLIDE
  1192	401375'	621 05 0 00 000014 		TLZ	F,XPL!XPC
  1193	401376'	254 00 0 00 405127'		JRST	DISCUR		;POSITION CURSOR TO START OF MATCH; RETURN
  1194
  1195					;HERE IF MATCH IS NOT ON THE SCREEN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 7-3
SED	MAC	21-May-74 00:04		Search for string

  1196
  1197	401377'	260 17 0 00 401402'	SRCMT0:	PUSHJ	P,SRCSET	;SET UP THE RIGHT POINTERS
  1198	401400'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;RE-DISPLAY THE ENTIRE SCREEN
  1199	401401'	254 00 0 00 405127'		JRST	DISCUR		;POSITION TO START OF MATCH; RETURN
  1200
  1201	401402'	200 04 0 00 000326'	SRCSET:	MOVE	T4,LPR		;BACK UP ONE ROLL'S WORTH
  1202	401403'	340 04 0 00 000000 		AOJ	T4,
  1203	401404'	202 13 0 00 002254'		MOVEM	PT,DISPTR	;FROM THE MATCH
  1204	401405'	270 13 0 00 411204'		ADD	PT,[70000,,0]	;BACK IT UP A NOTCH
  1205	401406'	325 13 0 00 401410'		JUMPGE	PT,.+2
  1206	401407'	274 13 0 00 411175'		SUB	PT,[430000,,1]
  1207	401410'	202 13 0 00 002253'		MOVEM	PT,CHRPTR	;CHARACTER POSITION WILL BE START OF THE MATCH
  1208
  1209	401411'	260 17 0 00 405776'		PUSHJ	P,BAKDPT
  1210	401412'	200 15 0 00 000326'		MOVE	RW,LPR		;POINT TO START OF LINE WITH MATCH
  1211	401413'	274 15 0 00 000004 		SUB	RW,T4		;  (WHICH MAY NOT BE THE FULL DISTANCE DOWN)
  1212	401414'	260 17 0 00 406157'		PUSHJ	P,MAKLPT	;MAKE LINE PTR (IN LINPTR AND PT)
  1213	401415'	260 17 0 00 406361'		PUSHJ	P,CALCCM
  1214	401416'	625 05 0 00 200014 		  TLZA	F,XPL!XPC!FBL	;ROW AND COLUMN POINTERS ARE RIGHT
  1215	401417'	621 05 0 00 200014 		TLZ	F,XPL!XPC!FBL	;  AND BOTTOM LINE IS GOOD, TOO
  1216	401420'	661 05 0 00 000020 		TLO	F,XPB		;BUT BOTTOM POINTER IS NOT GOOD
  1217	401421'	263 17 0 00 000000 		POPJ	P,
  1218
  1219	401422'	201 01 0 00 411270'	SRXERR:	MOVEI	T1,[ASCIZ /#######Nothing to search for/]
  1220	401423'	254 00 0 00 410520'		JRST	ERROR
  1221	401424'	201 01 0 00 411276'	SRCERR:	MOVEI	T1,[ASCIZ /##########Search failure/]
  1222	401425'	254 00 0 00 410520'		JRST	ERROR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 8
SED	MAC	21-May-74 00:04		Set INSERT mode

  1223					SUBTTL	Set INSERT mode
  1224
  1225					;HERE ON ENTER-CONTROL-CHARACTER COMMAND. SET FLAG SO IF NEXT
  1226					;CHARACTER IS ASCII IT WILL BE MADE A CONTROL CHARACTER
  1227					;(ELSE THERE IS NO EFFECT)
  1228
  1229	401426'	661 05 0 00 000100 	ENTCCH:	TLO	F,CCH		;SET THAT OL' FLAG
  1230	401427'	254 00 0 00 400145'		JRST	INTEND		;THAT'S ALL
  1231
  1232
  1233
  1234					;HERE ON INSERT MODE TOGGLE COMMAND. SET FLAG SO CHARACTERS TYPED
  1235					;WILL BE INSERTED AT CURSOR POSITION, AND NOT REPLACE THE EXISTING CHARACTER
  1236					;TYPING THE COMMAND AGAIN REVERSES THIS EFFECT
  1237
  1238	401430'	603 07 0 00 000200 	INSMOD:	TLNE	TM,BEP		;WANT TO BEEP INSTEAD OF WORKING WITH MESSAGE?
  1239	401431'	254 00 0 00 401457'		JRST	INSBEP		;YES - GO DO SO
  1240	401432'	646 05 0 00 000200 		TRCN	F,IMD		;TOGGLE THE INSERT MODE FLAG - JUST TURNED ON?
  1241	401433'	254 00 0 00 401455'		JRST	INSMDO		;YES - DISPLAY MESSAGE AT BOTTOM
  1242	401434'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;NO - MOVE TO BOTTOM LINE AND CLEAR IT
  1243	401435'	260 17 0 00 406157'		PUSHJ	P,MAKLPT	;GET CURRENT LINE POINTER
  1244	401436'	621 05 0 00 200000 		TLZ	F,FBL		;BOTTOM LINE IS HEREBY GOOD
  1245	401437'	623 05 0 00 000020 		TLZE	F,XPB		;ERASE MESSAGE AT BOTTOM
  1246	401440'	260 17 0 00 406234'		PUSHJ	P,MAKBPT	;GET A VALID BOTTOM POINTER
  1247	401441'	336 13 0 00 002255'		SKIPN	PT,BOTPTR	;  AT THE BOTTOM OF THE SCREEN
  1248	401442'	254 00 0 00 401452'		JRST	INSMDF		;IF BEYOND FILE, PUT UP THE FENCE
  1249	401443'	201 04 0 00 000001 		MOVEI	T4,1		;ELSE WRITE ONE LINE
  1250	401444'	607 07 0 00 004000 		TLNN	TM,NEL		;LEAVE LAST LINE ALONE?
  1251	401445'	260 17 0 00 405175'		PUSHJ	P,DISPLY	;NO - RE-DO IT
  1252	401446'	603 07 0 00 004000 		TLNE	TM,NEL		;[CSM] No end line from file?
  1253	401447'	260 17 0 00 410331'		 PUSHJ	P,CBOTOM	;[CSM] Yes, clear it from screen
  1254	401450'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;REPOSITION THE CURSOR
  1255	401451'	254 00 0 00 400145'		JRST	LOOP		;AND LOOP
  1256
  1257	401452'	260 17 0 00 410477'	INSMDF:	PUSHJ	P,FNCPUT	;DISPLAY THE FENCE
  1258	401453'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;REPOSITION THE CURSOR
  1259	401454'	254 00 0 00 400145'		JRST	LOOP		;DONE
  1260
  1261	401455'	260 17 0 00 401471'	INSMDO:	PUSHJ	P,INSMSG	;OUTPUT INSERT MODE MESSAGE
  1262	401456'	254 00 0 00 400145'		JRST	LOOP		;DONE
  1263
  1264	401457'	646 05 0 00 000200 	INSBEP:	TRCN	F,IMD		;TOGGLE THE INSERT MODE FLAG - JUST TURNED ON?
  1265	401460'	254 00 0 00 401466'		JRST	INSBP1		;YES - BEEP ONCE
  1266	401461'	201 01 0 00 000007 		MOVEI	T1,7		;BEEP ONCE
  1267	401462'	051 15 0 00 000001 	TOPS10^IFE TOPS-10,^<	IONEOU T1>
  1268					TOPS20^IFE TOPS-20,^<	PBOUT>
  1269	401463'	201 01 0 00 000764 		MOVEI	T1,^D0500	;WAIT A WHILE
  1270	401464'	047 01 0 00 000072 	TOPS10^IFE TOPS-10,^<	HIBER T1,
  1271	401465'	255 00 0 00 000000 		      JFCL>
  1272					TOPS20^IFE TOPS-20,^<	DISMS>
  1273	401466'	201 01 0 00 000007 	INSBP1:	MOVEI	T1,7		;BEEP AGAIN
  1274	401467'	051 15 0 00 000001 	TOPS10^IFE TOPS-10,^<	IONEOU T1>
  1275					TOPS20^IFE TOPS-20,^<	PBOUT>
  1276	401470'	254 00 0 00 400145'		JRST	LOOP
  1277
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 8-1
SED	MAC	21-May-74 00:04		Set INSERT mode

  1278					;SUBROUTINE TO OUTPUT INSERT MODE MESSAGE
  1279
  1280	401471'	603 07 0 00 000200 	INSMSG:	TLNE	TM,BEP		;BEEPING?
  1281	401472'	263 17 0 00 000000 		POPJ	P,		;YES - NO MESSAGE
  1282	401473'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;ELSE MOVE TO BOTTOM LINE AND CLEAR IT
  1283	401474'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN PROTECTION ON
  1284	401475'	201 01 0 00 411303'		MOVEI	T1,[ASCIZ / *** INSERT MODE *** /]
  1285	401476'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  1286	401477'	260 17 0 00 410340'		PUSHJ	P,PROTOF
  1287	401500'	661 05 0 00 200000 		TLO	F,FBL		;MARK BOTTOM LINE AS FRAGGED
  1288	401501'	254 00 0 00 405766'		JRST	POSCUR		;REPOSITION THE CURSOR AND RETURN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 9
SED	MAC	21-May-74 00:04		PERCEN - Goto position in file

  1289					SUBTTL	PERCEN - Goto position in file
  1290
  1291					;HERE TO GO TO SOME GIVEN PERCENT OF THE FILE
  1292					;EXCEPTION: GOTO 100% PUTS UP THE LAST LPR LINES INVARIABLY
  1293
  1294	401502'	200 04 0 00 000030'	PERCEN:	MOVE	T4,GOPERC	;SET UP LAST TIME'S NOMINAL
  1295	401503'	202 04 0 00 002250'		MOVEM	T4,PARG1
  1296	401504'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  1297	401505'	322 01 0 00 401507'		JUMPE	T1,.+2		;JUMP IF JUST ENTER-PERCENT TYPED
  1298	401506'	334 04 0 00 002250'		SKIPA	T4,PARG1	;ELSE GET PERCENT TO MOVE
  1299	401507'	201 04 0 00 000144 		MOVEI	T4,^D100	;TREAT ENTER-PERCENT LIKE ENTER-100-PERCENT
  1300	401510'	260 17 0 00 405716'		PUSHJ	P,RESTPM
  1301	401511'	321 04 0 00 401571'		JUMPL	T4,PERERR	;ERROR IF NEGATIVE
  1302	401512'	303 04 0 00 000144 		CAILE	T4,^D100	;OR LARGER THAN 100
  1303	401513'	254 00 0 00 401571'		JRST	PERERR
  1304	401514'	202 04 0 00 000030'		MOVEM	T4,GOPERC	;ELSE SAVE AS NEW NOMINAL
  1305	401515'	200 04 0 00 000030'	PERNPM:	MOVE	T4,GOPERC	;SET UP LAST TIME'S NOMINAL
  1306	401516'	403 15 0 00 000016 		SETZB	RW,CM		;PUT CURSOR IN UPPER LEFT
  1307	401517'	322 04 0 00 401566'		JUMPE	T4,PERCST	;IF GOTO 0 PERCENT, GO TO START
  1308	401520'	661 05 0 00 000034 		TLO	F,XPL!XPC!XPB	;MARK NO POINTERS AS VALID
  1309	401521'	306 04 0 00 000144 		CAIN	T4,^D100	;GOTO 100 PERCENT?
  1310	401522'	254 00 0 00 401536'		JRST	PERCND		;YES - HANDLE SPECIALLY
  1311
  1312	401523'	550 01 0 00 000014 		HRRZ	T1,EN		;GET SIZE OF FILE
  1313	401524'	275 01 0 00 002257'		SUBI	T1,BUFFER
  1314	401525'	220 01 0 00 000004 		IMUL	T1,T4		;TIMES DISTANCE USER WANTS TO GO
  1315	401526'	231 01 0 00 000144 		IDIVI	T1,^D100	;DIVIDED INTO 100-WORD PIECES
  1316	401527'	270 01 0 00 411073'		ADD	T1,[010700,,BUFFER-1] ;GIVES POINTER INTO FILE
  1317	401530'	202 01 0 00 002254'		MOVEM	T1,DISPTR	;SAVE AS NEW DISPLAY POINTER
  1318	401531'	201 04 0 00 000001 		MOVEI	T4,1		;GO TO THE START OF THE NEXT LINE
  1319	401532'	312 01 0 00 411073'		CAME	T1,[010700,,BUFFER-1] ;DON'T BACK UP IF AT START
  1320	401533'	260 17 0 00 406023'		PUSHJ	P,ADVDPT
  1321	401534'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;RE-DISPLAY THE SCREEN
  1322	401535'	254 00 0 00 405127'		JRST	DISCUR		;REPOSITION AND GET ANOTHER COMMAD
  1323
  1324	401536'	202 14 0 00 002254'	PERCND:	MOVEM	EN,DISPTR	;DISPLAY FROM ONE ROLLS-WORTH FROM END OF FILE
  1325	401537'	200 04 0 00 000326'		MOVE	T4,LPR
  1326	401540'	260 17 0 00 405776'		PUSHJ	P,BAKDPT
  1327
  1328	401541'	200 02 0 00 000014 		MOVE	T2,EN		;POINT TO LAST REAL FILE CHARACTER
  1329	401542'	270 02 0 00 411204'	PERCD1:	ADD	T2,[70000,,0]	;BACK IT UP A NOTCH
  1330	401543'	325 02 0 00 401545'		JUMPGE	T2,.+2
  1331	401544'	274 02 0 00 411175'		SUB	T2,[430000,,1]
  1332	401545'	135 01 0 00 000002 		LDB	T1,T2		;GET CHARACTER
  1333	401546'	305 01 0 00 000040 		CAIGE	T1," "		;IS IT A REAL CHARACTER?
  1334	401547'	254 00 0 00 401542'		JRST	PERCD1		;NO - KEEP LOOKING
  1335
  1336	401550'	550 01 0 00 002254'		HRRZ	T1,DISPTR	;IS CHARACTER POINTER ON SCREEN?
  1337	401551'	301 01 0 02 000000 		CAIL	T1,(T2)
  1338						JRST	[SETZB RW,CM	;NO - MOVE CURSOR HOME
  1339							 TLO   F,XPC	;CHARACTER POINTER IS BAD
  1340	401552'	254 00 0 00 411310'			 JRST  PERCD2]	;FINISH OFF
  1341	401553'	202 02 0 00 002253'		MOVEM	T2,CHRPTR	;POSITION CURSOR TO VERY END OF FILE
  1342	401554'	260 17 0 00 406325'		PUSHJ	P,CALCRW	;CALCULATE PROPER VALUE OF RW
  1343	401555'	200 13 0 00 002252'		MOVE	PT,LINPTR	;POINT TO START OF LINE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 9-1
SED	MAC	21-May-74 00:04		PERCEN - Goto position in file

  1344	401556'	260 17 0 00 406361'		PUSHJ	P,CALCCM	;CALCULATE PROPER VALUE OF CM
  1345	401557'	344 15 0 00 401561'		  AOJA  RW,.+2		;IF SLIDE, MOVE TO START OF NEXT LINE
  1346	401560'	344 16 0 00 401563'		AOJA	CM,PERCD2	;MOVE TWO COLUMNS AWAY FROM LAST CHARACTER
  1347	401561'	403 16 0 00 000011 		SETZB	CM,SL		;ELSE MOVE TO START OF NEXT LINE
  1348	401562'	665 05 0 00 000034 		TLOA	F,XPL!XPC!XPB	;AND MARK NO POINTERS AS VALID
  1349	401563'	661 05 0 00 000030 	PERCD2:	TLO	F,XPC!XPB	;LINE POINTER IS THE ONLY ONE O.K.
  1350	401564'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;RE-DISPLAY THE SCREEN
  1351	401565'	254 00 0 00 405127'		JRST	DISCUR		;REPOSITION AND GET ANOTHER COMMAD
  1352
  1353	401566'	260 17 0 00 410253'	PERCST:	PUSHJ	P,PNTSTT	;SET UP POINTERS TO START OF FILE
  1354	401567'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;RE-DISPLAY THE SCREEN
  1355	401570'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION AND GET ANOTHER COMMAD
  1356
  1357	401571'	201 01 0 00 411313'	PERERR:	MOVEI	T1,[ASCIZ /#Percent must be between 0 and 100/]
  1358	401572'	254 00 0 00 410520'		JRST	ERROR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 10
SED	MAC	21-May-74 00:04		EXIT and ABORT commands

  1359					SUBTTL	EXIT and ABORT commands
  1360
  1361	401573'	661 05 0 00 000001 	EXIPAR:	TLO	F,FLG		;SET FLAG TO DO A RUN ON COMPIL
  1362	401574'				EEXIT:
  1363	401574'	070 01 0 00 000000 	TOPS10^IFE TOPS-10,^<	CLOSE	1,		;[CSM] Close to clear PIM mode
  1364	401575'	050 01 0 00 411322'		OPEN	1,[EXP 1,'TTY   ',0] ;[CSM] Open in ASCII LINE mode
  1365	401576'	255 00 0 00 000000 		  JFCL			;[CSM] So that typeahead is echoed properly
  1366					;[CSM] There is a problem with SET TTY DEFER in the 7.01 monitor.  Only the 1st
  1367					;[CSM] character of typeahead gets echoed, the rest of the line doesn't appear
  1368					;[CSM] until the job hits monitor level, which can take minutes on ENTER ^Z.
  1369	401577'	051 14 0 00 000000 		SKPINL			;[CSM] This TTCALL tells monitor to allow
  1370	401600'	255 00 0 00 000000 		 JFCL			;[CSM]  the deferred echo of a full line
  1371					>
  1372	401601'	260 17 0 00 410353'		PUSHJ	P,CLRALL	;HOME AND CLEAR SCREEN
  1373	401602'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;OUTPUT IT NOW
  1374					IFN SAVETY,<
  1375						OPEN	5,DEBBLK	;SAVE OFF THE DEBUG COMMAND FILE
  1376						  HALT	.
  1377						ENTER	5,DEBFIL
  1378						  HALT	.
  1379						OUTPUT	5,DEBCCL
  1380						RELEAS	5,
  1381					>
  1382	401603'	201 13 0 00 000106'	TOPS10^IFE TOPS-10,^<	MOVEI	PT,FILBLK	;POINT TO NAME OF CURRENT FILE
  1383					>
  1384	401604'	201 04 0 00 000072'		MOVEI	T4,FILSPC
  1385	401605'	332 00 0 00 000133'		SKIPE	INJFN		;IS THERE A JFN?
  1386	401606'	260 17 0 00 405534'		PUSHJ	P,SAVFIL	;YES - SAVE THE FILE
  1387	401607'	332 00 0 00 000072'		SKIPE	FILSPC		;GOT A CURRENT FILE?
  1388	401610'	254 00 0 00 401613'		JRST	.+3		;YES - CONTINUE
  1389	401611'	336 00 0 00 000134'		SKIPN	OLDSPC		;NO - GOT AN OLD FILE?
  1390	401612'	254 00 0 00 401673'		JRST	ABORT		;NEITHER - DON'T WRITE nnnSTT.TMP
  1391
  1392	401613'	200 10 0 00 411325'		MOVE	TY,[POINT 7,PIKBUF+PCBSIZ-400]
  1393	401614'	201 01 0 00 000072'		MOVEI	T1,FILSPC	;GET CURRENT FILE SPECS
  1394	401615'	200 04 0 00 002254'		MOVE	T4,DISPTR	;AND DISPLAY POINTER
  1395	401616'	260 17 0 00 401701'		PUSHJ	P,EXIFIL	;OUTPUT THE STATUS OF THE ACTIVE FILE
  1396	401617'	336 00 0 00 000134'		SKIPN	OLDSPC		;IS THERE AN ALTERNATE FILE?
  1397	401620'	254 00 0 00 401627'		JRST	EEXIT0		;NO - DON'T OUTPUT ITS STATUS
  1398	401621'	201 01 0 00 000134'		MOVEI	T1,OLDSPC	;GET ALTERNATE FILE SPECS
  1399	401622'	200 04 0 00 000176'		MOVE	T4,SAVEDP	;AND DISPLAY POINTER
  1400	401623'	550 15 0 00 000175'		HRRZ	RW,SAVERW
  1401	401624'	554 16 0 00 000175'		HLRZ	CM,SAVERW
  1402	401625'	200 11 0 00 000177'		MOVE	SL,SAVESL
  1403	401626'	260 17 0 00 401701'		PUSHJ	P,EXIFIL	;OUTPUT THE STATUS OF THE ALTERNATE FILE
  1404	401627'	400 01 0 00 000000 	EEXIT0:	SETZ	T1,		;MAKE SURE LAST WORD IS NULL
  1405	401630'	136 01 0 00 000010 		IDPB	T1,TY
  1406	401631'	136 01 0 00 000010 		IDPB	T1,TY
  1407	401632'	136 01 0 00 000010 		IDPB	T1,TY
  1408	401633'	136 01 0 00 000010 		IDPB	T1,TY
  1409	401634'	136 01 0 00 000010 		IDPB	T1,TY
  1410	401635'	553 00 0 00 000010 		HRRZS	TY		;FIND SIZE OF STUFF TO OUTPUT
  1411	401636'	275 10 0 00 000573'		SUBI	TY,PIKBUF+PCBSIZ-400
  1412					TOPS10^IFE TOPS-10,^<		;[CSM] Try writing TMP:SED before using DSK:000SST.TMP
  1413	401637'	210 01 0 00 000010 		MOVN	T1,TY		;[CSM] Get negative word count
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 10-1
SED	MAC	21-May-74 00:04		EXIT and ABORT commands

  1414	401640'	506 01 0 00 000246'		HRLM	T1,STTCCL	;[CSM] Store in IOWD
  1415	401641'	200 01 0 00 411326'		MOVE	T1,[3,,STTCCL-1];[CSM] Code to write file
  1416	401642'	047 01 0 00 000044 		TMPCOR	T1,		;[CSM] Write TMP:SED
  1417	401643'	334 00 0 00 000000 		  SKIPA			;[CSM] Can't, write to disk
  1418	401644'	254 00 0 00 401651'		 JRST	EEXIT1		;[CSM] Did it
  1419					>
  1420	401645'	561 02 0 00 000241'		HRROI	T2,STTFIL	;SET UP nnnSTT.TMP FILE FOR OUTPUT
  1421	401646'	260 17 0 00 405656'		PUSHJ	P,SETOUT
  1422	401647'	067 05 0 00 000246'	TOPS10^IFE TOPS-10,^<	OUTPUT	5,STTCCL	;OUTPUT THE STATUS STUFF
  1423	401650'	071 05 0 00 000000 		RELEAS	5,		;MAKE IT SOUP (YET)
  1424	401651'	200 10 0 00 411327'	EEXIT1:	MOVE	TY,[POINT 7,TYPBUF]
  1425
  1426	401652'	201 01 0 00 002021 	ABORT1:	MOVEI	T1,.TOPAG+.TOSET;Change TTY PAGE setting
  1427	401653'	200 02 0 00 000307'		MOVE	T2,TTYNUM	;For this terminal
  1428	401654'	201 03 0 00 000001 		MOVEI	T3,1		;To be ON
  1429	401655'	200 04 0 00 411330'		MOVE	T4,[XWD 3,T1]
  1430	401656'	047 04 0 00 000116 		TRMOP.	T4,
  1431	401657'	255 00 0 00 000000 		  JFCL
  1432	401660'	200 01 0 00 411331'		MOVE	T1,[5,,SAVEAC]	;SAVE ACS IN CASE OF REENTER
  1433	401661'	251 01 0 00 000322'		BLT	T1,SAVEAC+12
  1434	401662'	260 17 1 07 000027 		PUSHJ	P,@RTX(TM)	;CALL USER'S EXIT ROUTINE
  1435	401663'	071 01 0 00 000000 		RELEAS	1,		;[CSM] Finished with TTY after RTX routine
  1436	401664'	623 05 0 00 000001 		TLZE	F,FLG		;WANT TO EXIT AND GO?
  1437	401665'	254 00 0 00 401670'		JRST	EXITGO		;YES
  1438	401666'	047 01 0 00 000012 		EXIT	1,
  1439	401667'	254 00 0 00 410511'		JRST	REEERR		;[CSM] Treat ".CONTINUE" as ".REENTER"
  1440
  1441	401670'	200 01 0 00 411332'	EXITGO:	MOVE	T1,[1,,GOBLK]	;CODE TO RUN COMPIL
  1442	401671'	047 01 0 00 000035 		RUN	T1,		;LET COMPIL TAKE OVER
  1443	401672'	254 04 0 00 400000'		  HALT	START		;IF IT DOESN'T WORK, ACT INNOCENT
  1444					>
  1445					TOPS20^IFE TOPS-20,^<	MOVE	T2,[POINT 7,PIKBUF+PCBSIZ-400]
  1446						SETZ	T3,
  1447						SOUT			;WRITE OUT THE STATUS
  1448						CLOSF			;CLOSE THE FILE
  1449						  HALTF
  1450						MOVE	TY,[POINT 7,TYPBUF]
  1451					
  1452					ABORT1:	MOVEI	T1,.PRIIN
  1453						MOVE	T2,FMDSAV	;GET BACK THE ORIGINAL FMOD WORD
  1454						SFMOD
  1455						STPAR
  1456						PUSHJ	P,@RTX(TM)	;CALL USER'S EXIT ROUTINE
  1457						HALTF			;BYE
  1458					>
  1459	401673'				ABORT:
  1460	401673'	070 01 0 00 000000 	TOPS10^IFE TOPS-10,^<	CLOSE	1,		;[CSM] Close to clear PIM mode
  1461	401674'	050 01 0 00 411322'		OPEN	1,[EXP 1,'TTY   ',0] ;[CSM] Open in ASCII LINE mode
  1462	401675'	255 00 0 00 000000 		  JFCL			;[CSM] So that typeahead is echoed properly
  1463					>
  1464	401676'	201 04 0 00 000072'		MOVEI	T4,FILSPC	;TELL USER THAT FILE IS NOT CHANGED
  1465	401677'	260 17 0 00 405633'		PUSHJ	P,SAVMGN
  1466	401700'	254 00 0 00 401652'		JRST	ABORT1		;THEN GO FINISH OFF
  1467
  1468					;SUBROUTINE TO OUTPUT A FILESPEC STATUS LINE.
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 10-2
SED	MAC	21-May-74 00:04		EXIT and ABORT commands

  1469					;ENTER WITH T1/ADDR FILESPEC, T4/DISPTR; ALSO RW, CM, SL SET UP
  1470					;USES T0, T1, T2, T3
  1471
  1472	401701'	260 17 0 00 410365'	EXIFIL:	PUSHJ	P,PUTSTG	;PUT FILESPECS IN BUFFER
  1473	401702'	322 04 0 00 401724'		JUMPE	T4,EXIFL1	;IF DISPLAY PTR ZERO, JUST END LINE
  1474	401703'	550 02 0 00 000004 		HRRZ	T2,T4		;GET DISPLAY POINTER
  1475	401704'	275 02 0 00 002257'		SUBI	T2,BUFFER	;CONVERT TO CHARACTER POSITION
  1476	401705'	221 02 0 00 000005 		IMULI	T2,5
  1477	401706'	554 00 0 00 000004 		HLRZ	T0,T4		;FIND CHARACTERS IN LAST WORD, TOO
  1478	401707'	400 01 0 00 000000 		SETZ	T1,
  1479	401710'	312 00 0 01 410645'		CAME	T0,PTRTBL(T1)
  1480	401711'	344 01 0 00 401710'		AOJA	T1,.-1
  1481	401712'	270 02 0 00 000001 		ADD	T2,T1
  1482	401713'	200 01 0 00 411333'		MOVE	T1,[ASCII ?/FD:?]
  1483	401714'	260 17 0 00 401733'		PUSHJ	P,EXINUM	;ALWAYS OUTPUT DISPLAY POINTER
  1484	401715'	200 01 0 00 411334'		MOVE	T1,[ASCII ?/FR:?]
  1485	401716'	332 02 0 00 000015 		SKIPE	T2,RW		;IS ROW ZERO?
  1486	401717'	260 17 0 00 401733'		PUSHJ	P,EXINUM	;NO - OUTPUT IT
  1487	401720'	332 02 0 00 000016 		SKIPE	T2,CM		;IS COLUMN ZERO?
  1488	401721'	260 17 0 00 401732'		PUSHJ	P,EXICOL	;NO - OUTPUT IT
  1489	401722'	332 02 0 00 000011 		SKIPE	T2,SL		;IS SLIDE ZERO?
  1490	401723'	260 17 0 00 401731'		PUSHJ	P,EXISLI	;NO - OUTPUT IT
  1491	401724'	201 01 0 00 000015 	EXIFL1:	MOVEI	T1,15		;END LINE WITH A CARRIAGE RETURN
  1492	401725'	136 01 0 00 000010 		IDPB	T1,TY
  1493	401726'	201 01 0 00 000012 		MOVEI	T1,12
  1494	401727'	136 01 0 00 000010 		IDPB	T1,TY
  1495	401730'	263 17 0 00 000000 		POPJ	P,		;DONE
  1496
  1497	401731'	334 01 0 00 411335'	EXISLI:	SKIPA	T1,[ASCII ?/FS:?]
  1498	401732'	200 01 0 00 411336'	EXICOL:	MOVE	T1,[ASCII ?/FC:?]
  1499	401733'	260 17 0 00 410361'	EXINUM:	PUSHJ	P,PUTSQ1	;OUTPUT THE SWITCH NAME (IN T1)
  1500	401734'	200 01 0 00 000002 		MOVE	T1,T2		;GET THE VALUE
  1501	401735'	254 00 0 00 410466'		JRST	PUTNUM		;OUTPUT IT AND RETURN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 11
SED	MAC	21-May-74 00:04		Insert line

  1502					SUBTTL	Insert line
  1503
  1504					;HERE TO ADD BLANK LINES TO THE BUFFER
  1505
  1506	401736'	603 05 0 00 000400 	OPENLN:	TLNE	F,RDO		;IS FILE READ-ONLY?
  1507	401737'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
  1508	401740'	200 04 0 00 000023'		MOVE	T4,ADDLNS	;GET LAST TIME'S NOMINAL
  1509	401741'	607 05 0 00 000002 		TLNN	F,ENT		;IS THERE A PARAMETER TYPED?
  1510	401742'	254 00 0 00 401753'		JRST	OPLNPM		;NO - USE THE ONE ALREADY SET UP
  1511	401743'	202 04 0 00 002250'		MOVEM	T4,PARG1
  1512	401744'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  1513	401745'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO ADD
  1514	401746'	202 04 0 00 000023'		MOVEM	T4,ADDLNS	;SAVE AS NEW NOMINAL
  1515	401747'	602 05 0 00 000010 		TRNE	F,CMV		;CURSOR MOVEMENT?
  1516						JRST	[MOVE  T1,PARG2    ;YES - GET SPACES TO OPEN, TOO
  1517							 ADD   T1,SAVPOS+1 ;COUNT SPACES FROM LEFT MARGIN
  1518							 ADD   T1,SL
  1519							 MOVEM T1,ADDLSP
  1520	401750'	254 00 0 00 411337'			 JRST  OPLNPM-1]
  1521	401751'	402 00 0 00 000024'		SETZM	ADDLSP		;IF NO CURSOR MOVE, CLEAR EXTRA SPACES
  1522	401752'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;RESET ENTER MODE
  1523	401753'	323 04 0 00 405127'	OPLNPM:	JUMPLE	T4,DISCUR	;DONE, IF OPENING ZERO LINES
  1524	401754'	621 05 0 00 400000 		TLZ	F,PCM		;CANCEL THE PICK-CLOSE MARK, IF ANY
  1525	401755'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION
  1526	401756'	306 03 0 00 000011 		CAIN	T3,11		;IS CHARACTER AT CURSOR A TAB?
  1527	401757'	260 17 0 00 407155'		PUSHJ	P,RPLTAB	;YES - REPLACE IT WITH SPACES
  1528
  1529	401760'	661 05 0 00 001020 		TLO	F,XPB!CHG	;SAY BOTTOM POINTER BAD; FILE MODIFIED
  1530	401761'	200 04 0 00 000023'		MOVE	T4,ADDLNS	;GET LINES TO ADD - ANY?
  1531	401762'	242 04 0 00 000001 		LSH	T4,1		;MULTIPLY COUNT BY 2, FOR <CR><LF>
  1532	401763'	202 04 0 00 000336'		MOVEM	T4,NUMCHR	;GO ADD THAT MANY <LF>S
  1533	401764'	201 01 0 00 000012 		MOVEI	T1,12		;  (CHANGE HALF OF 'EM TO <CR>S LATER)
  1534	401765'	202 01 0 00 000341'		MOVEM	T1,CHARAC
  1535	401766'	260 17 0 00 407003'		PUSHJ	P,MAKCHR
  1536
  1537	401767'	201 01 0 00 000015 		MOVEI	T1,15		;NOW CHANGE HALF THE <LF>S TO <CR>S
  1538	401770'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET POINTER TO CURSOR POSITION
  1539	401771'	200 04 0 00 000023'		MOVE	T4,ADDLNS	;AND NUMBER OF LINES TO ADD
  1540	401772'	136 01 0 00 000013 		IDPB	T1,PT		;SET UP A NEW LINE
  1541	401773'	133 00 0 00 000013 		IBP	PT
  1542	401774'	367 04 0 00 401772'		SOJG	T4,.-2		;LOOP UNTIL ALL LINES SET UP
  1543	401775'	337 04 0 00 000024'		SKIPG	T4,ADDLSP	;NOW GOT SOME SPACES TO ADD?
  1544	401776'	254 00 0 00 402005'		JRST	OPNLD0		;NO - JUST RE-DISPLAY
  1545	401777'	202 04 0 00 000336'		MOVEM	T4,NUMCHR
  1546	402000'	250 13 0 00 002253'		EXCH	PT,CHRPTR
  1547	402001'	261 17 0 00 000013 		PUSH	P,PT
  1548	402002'	260 17 0 00 406777'		PUSHJ	P,MAKSPC	;ADD THE SPACES
  1549	402003'	262 17 0 00 000013 		POP	P,PT		;RESTORE THE REAL CHARACTER POINTER
  1550	402004'	250 13 0 00 002253'		EXCH	PT,CHRPTR
  1551	402005'	200 04 0 00 000023'	OPNLD0:	MOVE	T4,ADDLNS	;GET SIZE OF OPEN
  1552	402006'	260 17 0 00 402017'		PUSHJ	P,OPENLD	;OPEN UP THE SCREEN **MAY NOT RETURN**
  1553	402007'	326 16 0 00 402013'		JUMPN	CM,OPNLDX	;JUMP IF STARTING WITHIN A LINE
  1554	402010'	336 00 0 00 000024'		SKIPN	ADDLSP		;ELSE ENDING WITH A PARTIAL LINE?
  1555	402011'	254 00 0 00 402014'		JRST	OPNLDX+1	;NO - JUST POSITION AND LOOP
  1556	402012'	260 17 0 00 410346'		PUSHJ	P,CDOWN		;YES - MOVE DOWN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 11-1
SED	MAC	21-May-74 00:04		Insert line

  1557	402013'	260 17 0 00 405173'	OPNLDX:	PUSHJ	P,DISONE	;RE-DO THAT LINE
  1558	402014'	602 05 0 00 000200 		TRNE	F,IMD		;IN INSERT MODE?
  1559	402015'	260 17 0 00 401471'		PUSHJ	P,INSMSG	;YES - OUTPUT INSERT MESSAGE
  1560	402016'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND RETURN
  1561
  1562					;SUBROUTINE TO OPEN (T4) LINES ON THE SCREEN (USED BY OPENLN, PUT)
  1563					;NOTE: WILL NOT RETURN IF REST OF SCREEN MUST BE DISPLAYED (DOES JRST LOOP)
  1564
  1565	402017'	200 01 0 07 000023 	OPENLD:	MOVE	T1,LPP(TM)	;FIND NUMBER OF LINES BELOW CURSOR
  1566	402020'	274 01 0 00 000015 		SUB	T1,RW
  1567	402021'	317 01 0 00 000004 		CAMG	T1,T4		;ADDING MORE THAN THAT?
  1568						JRST	[PUSHJ P,POSCUR ;YES - REPOSITION THE CURSOR
  1569							 MOVE  T0,CM	;GET COLUMN POSITION FOR CLEAR
  1570							 PUSHJ P,CLEARP ;CLEAR TO END OF SCREEN
  1571	402022'	254 00 0 00 411344'			 JRST  PUTTYP]	;OUTPUT AND RETURN
  1572	402023'	336 03 0 07 000013 		SKIPN	T3,ILN(TM)	;CAN TERMINAL OPEN ITS OWN LINES?
  1573						JRST	[POP  P,	;NO - GO REDISPLAY FROM HERE DOWN
  1574	402024'	254 00 0 00 411350'			 JRST DISDWN]	;  AND GO DIRECTLY TO LOOP
  1575	402025'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;YES - POSITION THE CURSOR
  1576	402026'	621 05 0 00 200000 		TLZ	F,FBL		;BOTTOM LINE WILL BE IN GOOD SHAPE
  1577	402027'	607 03 0 00 774000 		TLNN	T3,774000	;[CSM] ASCII string?
  1578	402030'	607 03 0 00 002000 		TLNN	T3,IDARGS	;[CSM] No, does subroutine take INS/DEL args?
  1579	402031'	254 00 0 00 402042'		 JRST	OPNDLA		;[CSM] No, do it one line at a time
  1580	402032'	200 03 0 00 000015 		MOVE	T3,RW		;[CSM] Where to do it
  1581	402033'	322 16 0 00 402041'		JUMPE	CM,OPNDLB	;[CSM] At beginning of line?
  1582	402034'	260 17 0 00 410333'		PUSHJ	P,CLRLNR	;[CSM] No, clear partial line
  1583	402035'	201 01 0 00 000015 		MOVEI	T1,CR		;[CSM] Some terminals don't work right
  1584	402036'	136 01 0 00 000010 		IDPB	T1,TY		;[CSM]  unless in column 1
  1585	402037'	260 17 0 00 410346'		PUSHJ	P,CDOWN		;[CSM] Go to where new line belongs
  1586	402040'	201 03 0 15 000001 		MOVEI	T3,1(RW)	;[CSM] Start scrolling below the current line
  1587	402041'	324 17 1 07 000013 	OPNDLB:	PJRST	@ILN(TM)	;[CSM] Insert T4 lines at row T3
  1588
  1589	402042'	322 16 0 00 402047'	OPNDLA:	JUMPE	CM,OPNLD1+1	;WITHIN A LINE?
  1590	402043'	260 17 0 00 410333'		PUSHJ	P,CLRLNR	;YES - CLEAR TO END OF LINE
  1591	402044'	201 01 0 00 000015 		MOVEI	T1,15		;DROP TO START OF NEXT LINE
  1592	402045'	136 01 0 00 000010 		IDPB	T1,TY
  1593	402046'	260 17 0 00 410346'	OPNLD1:	PUSHJ	P,CDOWN
  1594	402047'	200 01 0 00 000003 		MOVE	T1,T3		;OPEN UP ONE LINE
  1595	402050'	260 17 0 00 410357'		PUSHJ	P,PUTSEQ
  1596	402051'	367 04 0 00 402046'		SOJG	T4,OPNLD1	;LOOP THROUGH ALL LINES
  1597	402052'	263 17 0 00 000000 		POPJ	P,		;DONE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 12
SED	MAC	21-May-74 00:04		Delete lines

  1598					SUBTTL	Delete lines
  1599
  1600					;HERE TO REMOVE LINES FROM THE BUFFER (NULL THEM OVER, REALLY)
  1601
  1602	402053'	603 05 0 00 000400 	CLOSLN:	TLNE	F,RDO		;IS FILE READ-ONLY?
  1603	402054'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
  1604	402055'	200 04 0 00 000023'		MOVE	T4,ADDLNS	;SET UP LAST TIME'S NOMINAL
  1605	402056'	607 05 0 00 000002 		TLNN	F,ENT		;IS THERE A PARAMETER TYPED?
  1606	402057'	254 00 0 00 402070'		JRST	CLLNPM		;NO - USE THE ONE ALREADY SET UP
  1607	402060'	202 04 0 00 002250'		MOVEM	T4,PARG1
  1608	402061'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  1609	402062'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET SPACES TO ADD
  1610	402063'	202 04 0 00 000023'		MOVEM	T4,ADDLNS	;SAVE AS NEW NOMINAL
  1611	402064'	602 05 0 00 000010 		TRNE	F,CMV		;CURSOR MOVEMENT?
  1612						JRST	[MOVE  T1,PARG2 ;YES - GET SPACES TO CLOSE, TOO
  1613							 ADD   T1,SAVPOS+1 ;COUNT SPACES FROM LEFT MARGIN
  1614							 ADD   T1,SL
  1615							 CAIN  T4,0	   ;CLOSING ZERO LINES?
  1616							 MOVE  T1,PARG2    ;YES - COUNT ONLY SPACES PASSED OVER
  1617							 MOVEM T1,ADDLSP
  1618	402065'	254 00 0 00 411352'			 JRST  .+2]
  1619	402066'	402 00 0 00 000024'		SETZM	ADDLSP		;IF NO CURSOR MOVE, CLEAR EXTRA SPACES
  1620	402067'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ERASE PARAMETER
  1621
  1622	402070'	620 05 0 00 000002 	CLLNPM:	TRZ	F,COV		;ASSUME CLOSE BUFFER WILL NOT OVERFLOW
  1623	402071'	603 05 0 00 400000 		TLNE	F,PCM		;HAS A MARK BEEN MADE?
  1624	402072'	254 00 0 00 402265'		JRST	CLSMRK		;YES - DO THINGS DIFFERENTLY
  1625	402073'	327 04 0 00 402076'		JUMPG	T4,.+3		;IF CLOSING SOME LINES, CONTINUE
  1626	402074'	336 00 0 00 000024'		SKIPN	ADDLSP		;IF ZERO LINES, GOT ZERO SPACES TOO?
  1627	402075'	254 00 0 00 405127'		JRST	DISCUR		;YES - NOTHING TO DO
  1628	402076'	661 05 0 00 041020 		TLO	F,INS!XPB!CHG	;LET LINE BE EXTENDED; BOTPTR BAD; FILE MOD'D
  1629	402077'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION
  1630	402100'	621 05 0 00 040000 		TLZ	F,INS
  1631	402101'	306 03 0 00 000011 		CAIN	T3,11		;IS CHARACTER AT CURSOR A TAB?
  1632	402102'	260 17 0 00 407155'		PUSHJ	P,RPLTAB	;YES - REPLACE WITH SPACES BEFORE CURSOR
  1633	402103'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET CURRENT CURSOR POSITION
  1634	402104'	403 02 0 00 001174'		SETZB	T2,CLSCNT	;AND A NULL, AND PTR TO CLOSE BUFFER
  1635	402105'	200 03 0 00 411361'		MOVE	T3,[POINT 7,CLSBUF]
  1636	402106'	336 04 0 00 000023'		SKIPN	T4,ADDLNS	;GET NUMBER OF LINES TO CLOSE - ANY?
  1637	402107'	254 00 0 00 402133'		JRST	CLSLN3		;NO - JUST GO CLOSE SPACES
  1638
  1639	402110'	316 14 0 00 000013 	CLSLN1:	CAMN	EN,PT		;AT END OF USEABLE BUFFER?
  1640	402111'	254 00 0 00 402217'		JRST	CLOSEN		;YES - DO END OF BUFFER-Y THINGS
  1641	402112'	134 01 0 00 000013 		ILDB	T1,PT		;GET A CHARACTER
  1642	402113'	322 01 0 00 402110'		JUMPE	T1,CLSLN1	;IF NULL, GET ANOTHER ONE
  1643	402114'	137 02 0 00 000013 		DPB	T2,PT		;REPLACE IT WITH A NULL
  1644	402115'	316 03 0 00 411362'	CLSLN2:	CAMN	T3,[010700,,CLSBUF+PCBSIZ-1]
  1645	402116'	260 17 0 00 402402'		PUSHJ	P,CLSOVF	;IF ABOUT TO OVERFLOW, STORE ON DISK
  1646	402117'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE CHARACTER IN THE CLOSE BUFFER
  1647	402120'	350 00 0 00 001174'		AOS	CLSCNT		;BUMP COUNT
  1648	402121'	302 01 0 00 000015 		CAIE	T1,15		;CARRIAGE RETURN?
  1649	402122'	254 00 0 00 402110'		JRST	CLSLN1		;NO - DRIVE ON
  1650
  1651	402123'	134 01 0 00 000013 		ILDB	T1,PT		;YES - PICK UP THE <LF>
  1652	402124'	137 02 0 00 000013 		DPB	T2,PT		;REPLACE IT WITH A NULL
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 12-1
SED	MAC	21-May-74 00:04		Delete lines

  1653	402125'	302 01 0 00 000012 		CAIE	T1,12		;IS IT REALLY A LINEFEED?
  1654	402126'	254 00 0 00 402115'		JRST	CLSLN2		;NO - IT'S NOT THE END OF THE LINE
  1655	402127'	367 04 0 00 402115'		SOJG	T4,CLSLN2	;YES - LOOP THROUGH DESIRED NUMBER OF ROWS
  1656	402130'	316 03 0 00 411362'		CAMN	T3,[010700,,CLSBUF+PCBSIZ-1]
  1657	402131'	260 17 0 00 402402'		PUSHJ	P,CLSOVF	;IF ABOUT TO OVERFLOW, STORE ON DISK
  1658	402132'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE THE LINEFEED IN THE CLOSE BUFFER
  1659	402133'	333 04 0 00 000024'	CLSLN3:	SKIPLE	T4,ADDLSP	;GOT SOME SPACES TO CLOSE TOO?
  1660	402134'	260 17 0 00 402256'		PUSHJ	P,CLLSPS	;YES - DO THEM
  1661
  1662	402135'	400 01 0 00 000000 	CLSLN4:	SETZ	T1,		;AND END BUFFER WITH A NULL
  1663	402136'	136 01 0 00 000003 		IDPB	T1,T3
  1664	402137'	350 00 0 00 001174'		AOS	CLSCNT		;BUMP COUNT FOR <LF>
  1665	402140'	602 05 0 00 000002 		TRNE	F,COV		;HAS BUFFER OVERFLOWED?
  1666	402141'	260 17 0 00 402234'		PUSHJ	P,CLSLST	;YES - WRITE OUT THE LAST PIECE
  1667
  1668	402142'	377 00 0 00 000350'		SOSG	SQZCNT		;TIME TO DO A SQUEEZE?
  1669	402143'	260 17 0 00 405431'		PUSHJ	P,SQUEZW	;YES - REMOVE ALL NULL WORDS
  1670	402144'	623 05 0 00 400000 		TLZE	F,PCM		;WAS THERE A MARK?
  1671						JRST	[PUSHJ P,DISPLL	;YES - RE-DISPLAY THE SCREEN
  1672	402145'	254 00 0 00 411363'			 JRST  DISCUR]
  1673	402146'	336 00 0 00 000023'		SKIPN	ADDLNS		;REALLY CLOSE ANY LINES?
  1674	402147'	254 00 0 00 402213'		JRST	CLSLNL		;NO - JUST SPACES - RE-DO ONE LINE
  1675	402150'	336 03 0 07 000015 		SKIPN	T3,DLN(TM)	;CAN TERMINAL DO ITS OWN CLOSES?
  1676	402151'	254 00 0 00 405112'		JRST	DISDWN		;NO - DISPLAY ALL FROM HERE DOWN
  1677	402152'	200 04 0 07 000023 		MOVE	T4,LPP(TM)	;GET NUMBER OF LINES PER PAGE
  1678	402153'	274 04 0 00 000015 		SUB	T4,RW		;LESS CURRENT POSITION
  1679	402154'	274 04 0 00 000023'		SUB	T4,ADDLNS	;LESS SIZE OF DELETE, GIVES LINES LEFT
  1680	402155'	321 04 0 00 405112'		JUMPL	T4,DISDWN	;IF NONE (BIG DELETE), JUST RE-DISPLAY
  1681					;[CSM]	TLNE	F,FNC		;IS FENCE ON SCREEN?
  1682	402156'	603 05 0 00 200040 		TLNE	F,FNC!FBL	;[CSM] Is FENCE or INSERT-MODE on screen?
  1683	402157'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;YES - ERASE IT
  1684	402160'	200 04 0 00 000015 		MOVE	T4,RW		;MOVE TO START OF THE LINE THE CURSOR IS ON
  1685	402161'	260 17 0 00 405764'		PUSHJ	P,POSLIN
  1686	402162'	200 02 0 00 000023'		MOVE	T2,ADDLNS	;GET SIZE OF DELETE
  1687	402163'	202 02 0 00 000027'		MOVEM	T2,ROLLS	;SET IT UP FOR ROLFW1
  1688	402164'	603 05 0 00 200000 		TLNE	F,FBL		;IS BOTTOM LINE O.K.?
  1689	402165'	350 00 0 00 000027'		AOS	ROLLS		;NO - REWRITE ONE MORE LINE
  1690	402166'	607 03 0 00 771000 		TLNN	T3,771000	;[CSM] String of ASCII?
  1691	402167'	607 03 0 00 002000 		TLNN	T3,IDARGS	;[CSM] No, does subroutine take INS/DEL args?
  1692	402170'	254 00 0 00 402175'		 JRST	CLSLN5		;[CSM] No, do one line at a time
  1693	402171'	201 03 0 15 000000 		MOVEI	T3,(RW)		;[CSM] Where to do it
  1694	402172'	200 04 0 00 000002 		MOVE	T4,T2		;[CSM] How many to do
  1695	402173'	260 17 1 07 000015 		PUSHJ	P,@DLN(TM)	;[CSM] Delete T4 lines starting at row T3
  1696	402174'	254 00 0 00 402200'		JRST	CLSLN6		;[CSM] Continue
  1697
  1698	402175'	200 01 0 00 000003 	CLSLN5:	MOVE	T1,T3		;GET CODE TO CLOSE LINES
  1699	402176'	260 17 0 00 410357'		PUSHJ	P,PUTSEQ	;CLOSE A LINE
  1700	402177'	367 02 0 00 402175'		SOJG	T2,CLSLN5	;LOOP THROUGH ALL LINES
  1701
  1702	402200'	336 00 0 00 000024'	CLSLN6:	SKIPN	ADDLSP
  1703	402201'	322 16 0 00 402204'		JUMPE	CM,.+3		;JUMP IF AT START OF A LINE
  1704	402202'	200 13 0 00 002252'		MOVE	PT,LINPTR
  1705	402203'	260 17 0 00 405173'		PUSHJ	P,DISONE	;ELSE DISPLAY SINGLE CLOSED-UP LINE
  1706	402204'	200 04 0 07 000023 		MOVE	T4,LPP(TM)	;GET LINE NUMBER OF START OF REWRITE
  1707	402205'	274 04 0 00 000023'		SUB	T4,ADDLNS
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 12-2
SED	MAC	21-May-74 00:04		Delete lines

  1708	402206'	603 05 0 00 200000 		TLNE	F,FBL		;IS BOTTOM LINE O.K.?
  1709	402207'	360 04 0 00 000000 		SOJ	T4,		;NO - RE-DO IT, TOO
  1710	402210'	202 04 0 00 000310'		MOVEM	T4,SAVEAC	;SET IT UP IN T4 AND SAVEAC
  1711	402211'	260 17 0 00 404470'		PUSHJ	P,ROLFW1	;AND REWRITE FROM THERE DOWN
  1712	402212'	254 00 0 00 400145'		JRST	LOOP
  1713
  1714	402213'	260 17 0 00 405150'	CLSLNL:	PUSHJ	P,DISLIN	;DISPLAY REST OF LINE CURSOR IS ON
  1715	402214'	211 01 0 00 000002 		MOVNI	T1,2		;UN-COUNT THE <CRLF> THAT WAS COUNTED BEFORE
  1716	402215'	272 01 0 00 001174'		ADDM	T1,CLSCNT
  1717	402216'	254 00 0 00 405127'		JRST	DISCUR		;RESTORE CURSOR AND LOOP
  1718
  1719					;HERE IF END OF BUFFER REACHED DURING THE CLOSE
  1720
  1721	402217'	200 13 0 00 002253'	CLOSEN:	MOVE	PT,CHRPTR	;GET POINTER TO FIRST DELETED CHARACTER
  1722	402220'	133 00 0 00 000013 		IBP	PT		;PLUS A CHARACTER
  1723	402221'	200 14 0 00 000013 		MOVE	EN,PT		;SAVE AS NEW END OF BUFFER
  1724	402222'	326 11 0 00 402224'		JUMPN	SL,.+2		;DID CLOSE START AT START OF A LINE?
  1725	402223'	322 16 0 00 402225'		JUMPE	CM,.+2
  1726	402224'	260 17 0 00 406225'		PUSHJ	P,ADDCR		;NO - PUT A <CRLF> AFTER THAT PARTIAL LINE
  1727	402225'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;PUT CURSOR WHERE IT BELONGS
  1728	402226'	200 00 0 00 000016 		MOVE	T0,CM		;MAKE THE CLEAR GO FROM THE CURSOR POSITION
  1729	402227'	260 17 0 00 410476'		PUSHJ	P,FNCCLR	;CLEAR AND PUT UP THE FENCE
  1730	402230'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;GET BACK TO PROPER POSITION
  1731	402231'	602 05 0 00 000002 		TRNE	F,COV		;HAS BUFFER OVERFLOWED?
  1732	402232'	260 17 0 00 402234'		PUSHJ	P,CLSLST	;YES - WRITE OUT THE LAST PIECE
  1733	402233'	254 00 0 00 400145'		JRST	LOOP		;AND GET ANOTHER COMMAND
  1734
  1735					;SUBROUTINE TO WRITE OUT THE LAST PIECE OF THE CLOSE BUFFER
  1736
  1737	402234'	400 01 0 00 000000 	CLSLST:	SETZ	T1,		;MAKE SURE LAST WORD OF BUFFER IS NULLED
  1738	402235'	136 01 0 00 000003 		IDPB	T1,T3
  1739	402236'	136 01 0 00 000003 		IDPB	T1,T3
  1740	402237'	136 01 0 00 000003 		IDPB	T1,T3
  1741	402240'	136 01 0 00 000003 		IDPB	T1,T3
  1742	402241'	136 01 0 00 000003 		IDPB	T1,T3
  1743	402242'	200 01 0 00 001174'		MOVE	T1,CLSCNT	;GET COUNT OF WORDS CLOSED
  1744	402243'	231 01 0 00 000005 		IDIVI	T1,5
  1745	402244'	340 01 0 00 000000 		AOJ	T1,
  1746	402245'	275 01 0 00 000600 		SUBI	T1,PCBSIZ	;FIND SIZE OF LAST PIECE
  1747	402246'	301 01 0 00 000600 		CAIL	T1,PCBSIZ	;SMALL ENOUGH?
  1748	402247'	254 00 0 00 402245'		JRST	.-2		;NO - SUBTRACT SOME MORE
  1749	402250'	213 00 0 00 000001 	TOPS10^IFE TOPS-10,^<	MOVNS	T1
  1750	402251'	506 01 0 00 000237'		HRLM	T1,CLSCCL	;SET TO OUTPUT THAT MANY WORDS
  1751	402252'	260 17 0 00 402415'		PUSHJ	P,CLSOV0	;YES - WRITE OUT THE LAST PIECE
  1752					>
  1753	402253'	211 01 0 00 000600 	TOPS10^IFE TOPS-10,^<	MOVNI	T1,PCBSIZ	;RESTORE FULL BUFFER SIZE
  1754	402254'	506 01 0 00 000237'		HRLM	T1,CLSCCL	;  TO CHANNEL COMMAND
  1755					>
  1756	402255'	254 00 0 00 402424'		JRST	CLSOVE		;CLOSE THE DISK FILE AND RETURN
  1757
  1758					;SUBROUTINE FOR WHEN USER WANTS TO CLOSE SOME SPACES AFTER CLOSING LINES
  1759					;(WHICH HE'S INDICATED BY USING CURSOR MOVEMENT)
  1760
  1761	402256'	661 05 0 00 000001 	CLLSPS:	TLO	F,FLG
  1762	402257'	260 17 0 00 402324'		PUSHJ	P,SPCBUF	;NULL OUT (T4)S WORTH OF CHARACTERS
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 12-3
SED	MAC	21-May-74 00:04		Delete lines

  1763	402260'	621 05 0 00 000001 		TLZ	F,FLG
  1764	402261'	200 01 0 00 000347'		MOVE	T1,SPCCNT	;GET COUNT OF CHARACTERS
  1765	402262'	272 01 0 00 001174'		ADDM	T1,CLSCNT	;ADD TO TOTAL COUNT
  1766	402263'	350 00 0 00 001174'		AOS	CLSCNT		;(IT WAS ONE TOO SMALL)
  1767	402264'	263 17 0 00 000000 		POPJ	P,		;FINISH OFF
  1768
  1769					;HERE IF MARK WAS MADE - CLOSE FROM STARTING CHARACTER TO CURRENT POSITION
  1770					;note: does nothing about starting or ending in a tab
  1771
  1772	402265'	260 17 0 00 406040'	CLSMRK:	PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION
  1773	402266'	661 05 0 00 001034 		TLO	F,XPL!XPC!XPB!CHG;NO POINTERS ARE GOOD; FILE IS CHANGED
  1774	402267'	260 17 0 00 402304'		PUSHJ	P,MRKSET	;SET UP TO USE THE MARK
  1775	402270'	200 03 0 00 411361'		MOVE	T3,[POINT 7,CLSBUF]
  1776	402271'	316 13 0 00 000355'	CLSMK1:	CAMN	PT,MRKPTR	;AT END OF THE CLOSE?
  1777	402272'	254 00 0 00 402302'		JRST	CLSMKE		;YES - FINISH OFF
  1778	402273'	316 03 0 00 411362'	        CAMN	T3,[010700,,CLSBUF+PCBSIZ-1]
  1779	402274'	260 17 0 00 402402'		PUSHJ	P,CLSOVF	;WRITE TO DISK ON CLOSE BUFFER OVERFLOW
  1780	402275'	134 01 0 00 000013 		ILDB	T1,PT		;GET A CHARACTER
  1781	402276'	322 01 0 00 402271'		JUMPE	T1,CLSMK1	;SKIP, IF NULL
  1782	402277'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE IT IN THE CLOSE BUFFER
  1783	402300'	137 04 0 00 000013 		DPB	T4,PT		;NULL OUT THE CHARACTER IN THE FILE
  1784	402301'	344 02 0 00 402271'		AOJA	T2,CLSMK1	;COUNT CHARACTER AND LOOP
  1785
  1786	402302'	202 02 0 00 001174'	CLSMKE:	MOVEM	T2,CLSCNT	;SAVE COUNT OF CHARACTERS CLOSED
  1787	402303'	254 00 0 00 402135'		JRST	CLSLN4		;FINISH OFF
  1788
  1789	402304'	200 01 0 00 002253'	MRKSET:	MOVE	T1,CHRPTR	;GET POINTER TO ENDING POSITION
  1790	402305'	250 01 0 00 000355'		EXCH	T1,MRKPTR	;SAVE IT AND GET OLD DISPLAY POINTER
  1791	402306'	250 01 0 00 002254'		EXCH	T1,DISPTR	;SWAP WITH OLD DISPLAY POINTER
  1792	402307'	250 15 0 00 000332'		EXCH	RW,SVPMRK
  1793	402310'	250 16 0 00 000333'		EXCH	CM,SVPMRK+1
  1794	402311'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POINTER
  1795	402312'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET POINTER TO STARTING POSITION
  1796	402313'	403 02 0 00 000004 		SETZB	T2,T4		;CLEAR COUNT OF CHARACTERS CLOSED
  1797	402314'	550 00 0 00 000355'		HRRZ	T0,MRKPTR	;GET ENDING ADDRESS
  1798	402315'	303 00 0 13 000000 		CAILE	T0,(PT)		;REALLY WANT TO GO BACKWARDS?
  1799	402316'	263 17 0 00 000000 		POPJ	P,		;NO - DONE
  1800	402317'	250 13 0 00 000355'		EXCH	PT,MRKPTR	;YES - SWAP POINTERS
  1801	402320'	202 01 0 00 002254'		MOVEM	T1,DISPTR	;AND GET OLD DISPLAY STATUS BACK
  1802	402321'	200 15 0 00 000332'		MOVE	RW,SVPMRK
  1803	402322'	200 16 0 00 000333'		MOVE	CM,SVPMRK+1
  1804	402323'	263 17 0 00 000000 		POPJ	P,		;DONE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 13
SED	MAC	21-May-74 00:04		Copy lines into buffer

  1805					SUBTTL	Copy lines into buffer
  1806
  1807
  1808					;SUBROUTINE TO FIND (T4) REAL CHARACTERS (NOT NULLS) AT (PT), WHICH IS FRAGGED
  1809					;AND PUT THEM IN THE AREA POINTED TO BY T3
  1810					;IF FLG IS SET, NULLS THE CHARACTER IN THE FILE BUFFER; ELSE LEAVES IT ALONE
  1811					;STOPS WHEN COUNTED OUT. IF END OF LINE REACHED, PADS WITH SPACES
  1812					;RETURNS COUNT OF CHARACTERS MOVED IN SPCCNT
  1813
  1814					;NOTE: PICK OR CLOSE BUFFER can't OVERFLOW WHILE IN THIS ROUTINE, AS LONG AS
  1815					;BUFFER SIZE IS LARGER THAN ONE SCREENFUL (80*20/5 = 320 WORDS)
  1816					;THAT'S BECAUSE THIS IS REACHED FROM A CURSOR MOVE COMMAND, AND CURSOR MOVE
  1817					;CAN'T ENCOMPASS MORE THAN A SCREENFUL.
  1818					;WELL, ALMOST:	REAL LONG LINES can OVERFLOW. SO BEWARE OF, SAY, OBJECT FILES
  1819
  1820	402324'	202 04 0 00 000335'	SPCBUF:	MOVEM	T4,WRTNUM	;SAVE NUMBER OF CHARS TO NULL
  1821	402325'	402 00 0 00 000347'		SETZM	SPCCNT		;CLEAR COUNT OF CHARACTERS MOVED
  1822	402326'	403 01 0 00 000336'		SETZB	T1,NUMCHR	;GET A NULL; CLEAR # SPACES TO ADD
  1823
  1824	402327'	134 02 0 00 000013 	SPCBF1:	ILDB	T2,PT		;GET A CHARACTER
  1825	402330'	316 13 0 00 000014 		CAMN	PT,EN		;AT END OF BUFFER?
  1826	402331'	263 17 0 00 000000 		POPJ	P,		;YES - GO HOME EARLY
  1827	402332'	322 02 0 00 402327'		JUMPE	T2,SPCBF1	;IGNORE IF NULL
  1828	402333'	306 02 0 00 000015 		CAIN	T2,15		;IS IT A <CR>?
  1829	402334'	260 17 0 00 402350'		PUSHJ	P,SPCBF3	;YES - DONE, IF FOLLOWED BY <LF>
  1830	402335'	603 05 0 00 000001 		TLNE	F,FLG		;ELSE WANT TO NULL IT OUT?
  1831	402336'	137 01 0 00 000013 		DPB	T1,PT		;YES - ZAP
  1832	402337'	350 00 0 00 000347'		AOS	SPCCNT		;BUMP COUNT OF CHARACTERS
  1833	402340'	306 02 0 00 000011 		CAIN	T2,11		;IS IT A TAB?
  1834	402341'	254 00 0 00 402362'		JRST	SPCBTB		;YES - SEE HOW LONG THE TAB IS
  1835	402342'	136 02 0 00 000003 		IDPB	T2,T3		;NO - SAVE CHARACTER IN THE DESIRED BUFFER
  1836	402343'	367 04 0 00 402327'		SOJG	T4,SPCBF1	;AND COUNT IT - GOT ENOUGH?
  1837	402344'	332 00 0 00 000336'	SPCBEN:	SKIPE	NUMCHR		;GOT ANY SPACES TO ADD,
  1838	402345'	627 05 0 00 000001 		TLZN	F,FLG		;REALLY WANT TO ADD THEM?
  1839	402346'	263 17 0 00 000000 		POPJ	P,		;NO - JUST RETURN
  1840	402347'	254 00 0 00 406777'		JRST	MAKSPC		;YES - ADD THEM AND RETURN
  1841
  1842	402350'	200 00 0 00 000013 	SPCBF3:	MOVE	T0,PT		;GOT <CR>: GET SCRATCH BUFFER POINTER
  1843	402351'	134 00 0 00 000000 		ILDB	T0,T0		;GET NEXT CHARACTER
  1844	402352'	302 00 0 00 000012 		CAIE	T0,12		;<LF>?
  1845	402353'	263 17 0 00 000000 		POPJ	P,		;NO - NULL OUT THE <CR>, TOO
  1846	402354'	262 17 0 00 000000 		POP	P,		;YES - KILL THE RETURN FROM HERE
  1847	402355'	272 04 0 00 000347'		ADDM	T4,SPCCNT	;COUNT THE EXTRA SPACES
  1848	402356'	201 01 0 00 000040 		MOVEI	T1," "		;PAD OUT WITH SPACES:
  1849	402357'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE SPACES UNTIL COUNTED OUT
  1850	402360'	367 04 0 00 402357'		SOJG	T4,.-1
  1851	402361'	263 17 0 00 000000 		POPJ	P,		;DONE FOR KEEPS
  1852
  1853	402362'	200 00 0 00 000335'	SPCBTB:	MOVE	T0,WRTNUM	;GET LENGTH OF DELETE
  1854	402363'	270 00 0 00 000016 		ADD	T0,CM		;  PLUS STARTING CURSOR POSITION
  1855	402364'	274 00 0 00 000004 		SUB	T0,T4		;  LESS NUMBER TO GO, GIVES PRESENT POSITION
  1856	402365'	405 00 0 00 000007 		ANDI	T0,7		;FIND NEGATIVE SIZE OF TAB
  1857	402366'	275 00 0 00 000010 		SUBI	T0,10
  1858	402367'	270 04 0 00 000000 		ADD	T4,T0		;COUNT OFF THAT MANY SPACES FROM DELETE
  1859						JUMPG	T4,[IDPB T2,T3	;IF STILL MORE TO GO, SAVE TAB
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 13-1
SED	MAC	21-May-74 00:04		Copy lines into buffer

  1860	402370'	327 04 0 00 411365'			    JRST SPCBF1];AND CONTINUE
  1861	402371'	370 00 0 00 000347'		SOS	SPCCNT		;REMOVE TAB FROM COUNT OF CHARACTERS
  1862	402372'	210 01 0 00 000004 		MOVN	T1,T4		;GET COUNT OF SPACES TO ADD TO FILE
  1863	402373'	272 01 0 00 000336'		ADDM	T1,NUMCHR
  1864	402374'	274 04 0 00 000000 		SUB	T4,T0		;GET COUNT OF SPACES TO ADD TO BUFFER
  1865	402375'	201 01 0 00 000040 		MOVEI	T1," "		;AND SAVE OFF THOSE SPACES
  1866	402376'	136 01 0 00 000003 		IDPB	T1,T3
  1867	402377'	350 00 0 00 000347'		AOS	SPCCNT		;BUMP COUNT OF CHARACTERS
  1868	402400'	367 04 0 00 402376'		SOJG	T4,.-2
  1869	402401'	254 00 0 00 402344'		JRST	SPCBEN		;AND FINISH UP
  1870
  1871					;SUBROUTINE FOR OVERFLOW OF CLOSE BUFFER - SAVE ON DISK; SET COV FLAG
  1872
  1873	402402'	261 17 0 00 000001 	CLSOVF:	PUSH	P,T1		;SAVE LIVE CHARACTER
  1874	402403'	400 01 0 00 000000 		SETZ	T1,		;STORE A NULL AT END OF CLOSE BUFFER
  1875	402404'	136 01 0 00 000003 		IDPB	T1,T3
  1876	402405'	662 05 0 00 000002 		TROE	F,COV		;SET CLOSE OVERFLOW FLAG - ALREADY SET?
  1877	402406'	254 00 0 00 402416'		JRST	CLSOV1		;YES - FILE ALREADY OPEN
  1878	402407'	261 17 0 00 000002 		PUSH	P,T2		;SAVE AN AC
  1879	402410'	561 02 0 00 000233'		HRROI	T2,CLSFIL
  1880	402411'	260 17 0 00 405704'	TOPS10^IFE TOPS-10,^<	PUSHJ	P,SETDEL	;DELETE OLD .TMP FILE
  1881					>
  1882	402412'	260 17 0 00 405656'		PUSHJ	P,SETOUT	;SET UP THE CLOSE OUTPUT FILE
  1883	402413'	202 01 0 00 001175'		MOVEM	T1,CLSJFN
  1884	402414'	254 00 0 00 402417'		JRST	CLSOV2
  1885
  1886	402415'	261 17 0 00 000001 	CLSOV0:	PUSH	P,T1		;SAVE AN AC
  1887	402416'	261 17 0 00 000002 	CLSOV1:	PUSH	P,T2		;SAVE AN AC
  1888	402417'	067 05 0 00 000237'	TOPS10^IFE TOPS-10,^<	CLSOV2:	OUTPUT	5,CLSCCL	;WRITE OUT THE CLOSE BUFFER
  1889					>
  1890					TOPS20^IFE TOPS-20,^<	MOVE	T1,CLSJFN
  1891					CLSOV2:	HRROI	T2,CLSBUF	;WRITE OUT THE CLOSE BUFFER
  1892						SETZ	T3,
  1893						SOUT
  1894					>
  1895	402420'	200 03 0 00 411361'		MOVE	T3,[POINT 7,CLSBUF] ;START THE BUFFER AFRESH
  1896	402421'	262 17 0 00 000002 		POP	P,T2		;RESTORE ACS
  1897	402422'	262 17 0 00 000001 		POP	P,T1		;RESTORE ACS
  1898	402423'	263 17 0 00 000000 		POPJ	P,		;CONTINUE
  1899
  1900	402424'				CLSOVE:
  1901	402424'	071 05 0 00 000000 	TOPS10^IFE TOPS-10,^<	RELEAS	5,		;FINISH OFF THE FILE
  1902					>
  1903					TOPS20^IFE TOPS-20,^<	MOVE	T1,CLSJFN	;GET FILE HANDLE
  1904						CLOSF			;CLOSE IT
  1905						  HALTF			;IT BETTER WORK
  1906					>
  1907	402425'	263 17 0 00 000000 		POPJ	P,		;DONE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 14
SED	MAC	21-May-74 00:04		Insert spaces

  1908					SUBTTL	Insert spaces
  1909
  1910					;HERE TO ADD SPACES TO THE BUFFER
  1911
  1912	402426'	200 04 0 00 000020'	OPENSP:	MOVE	T4,ADDSPC	;SET UP LAST TIME'S NOMINAL
  1913	402427'	202 04 0 00 002250'		MOVEM	T4,PARG1	;AS DEFAULT FOR THIS TIME
  1914	402430'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  1915	402431'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET SPACES TO ADD
  1916	402432'	602 05 0 00 000010 		TRNE	F,CMV		;DOING CURSOR MOVEMENT?
  1917	402433'	260 17 0 00 402624'		PUSHJ	P,SPSCUR	;YES - HANDLE THINGS A LITTLE DIFFERENTLY
  1918	402434'	202 04 0 00 000020'		MOVEM	T4,ADDSPC	;SAVE NEW NOMINAL
  1919	402435'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ERASE PARAMETER
  1920	402436'	603 05 0 00 000400 	OPSNPM:	TLNE	F,RDO		;IS FILE READ-ONLY?
  1921	402437'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
  1922	402440'	337 01 0 00 000020'		SKIPG	T1,ADDSPC	;SET UP LAST TIME'S NOMINAL
  1923	402441'	254 00 0 00 405127'		JRST	DISCUR		;DONE, IF NOTHING TO ADD
  1924	402442'	661 05 0 00 001020 		TLO	F,XPB!CHG	;SAY BOTTOM POINTER BAD; FILE MODIFIED
  1925	402443'	661 05 0 00 040000 	OPSNP1:	TLO	F,INS		;LET LINE BE EXTENDED IF NECESSARY
  1926	402444'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION
  1927	402445'	621 05 0 00 440000 		TLZ	F,INS!PCM
  1928	402446'	202 01 0 00 000336'		MOVEM	T1,NUMCHR	;ADD THE RIGHT NUMBER OF SPACES
  1929	402447'	302 03 0 00 000011 		CAIE	T3,11		;IS CHARACTER AT CURSOR A TAB?
  1930	402450'	254 00 0 00 402457'		JRST	OPNSP1		;NO - CONTINUE
  1931	402451'	200 01 0 00 000344'		MOVE	T1,TABSIZ	;YES - CONVERT THE TAB TO SPACES
  1932	402452'	272 01 0 00 000336'		ADDM	T1,NUMCHR
  1933	402453'	400 01 0 00 000000 		SETZ	T1,		;AND NULL OUT THE TAB
  1934	402454'	137 01 0 00 000346'		DPB	T1,TABPTR
  1935	402455'	336 00 0 00 000345'		SKIPN	TABSPC		;POINTING TO START OF TAB?
  1936	402456'	661 05 0 00 000010 		TLO	F,XPC		;NO - CHARACTER POINTER IS BAD
  1937
  1938	402457'	260 17 0 00 406777'	OPNSP1:	PUSHJ	P,MAKSPC	;GO ADD THE SPACES
  1939	402460'	200 04 0 00 000020'		MOVE	T4,ADDSPC	;GET NUMBER OF SPACES TO ADD
  1940	402461'	332 03 0 07 000014 		SKIPE	T3,ISP(TM)	;CAN TERMINAL OPEN SPACES ON ITS OWN?
  1941	402462'	260 17 0 00 402505'		PUSHJ	P,OPNSPI	;YES - LET IT (SKIP RETURNS)
  1942	402463'	260 17 0 00 405150'		PUSHJ	P,DISLIN	;NO - REWRITE THE LINE CURSOR IS ON
  1943	402464'	375 00 0 00 000022'		SOSGE	ADDSLN		;WANT TO WORK WITH OTHER LINES?
  1944	402465'	254 00 0 00 405127'		JRST	DISCUR		;NO - JUST GET ANOTHER COMMAND
  1945	402466'	661 05 0 00 000014 		TLO	F,XPC!XPL	;YES - RE-MAKE SOME POINTERS
  1946	402467'	200 01 0 00 000020'		MOVE	T1,ADDSPC	;GET SIZE OF INSERT
  1947	402470'	344 15 0 00 402443'		AOJA	RW,OPSNP1	;AND DO THE SAME WITH THE NEXT LINE
  1948
  1949					;SUBROUTINES TO USE THE TERMINAL HARDWARE TO INSERT OR DELETE SPACES
  1950					;ENTER WITH T4/ NUMBER OF TIMES TO OUTPUT (T3)
  1951					;NORMAL RETURN: LINE HAS TABS, MUST BE RE-DISPLAYED
  1952					;SKIP	RETURN: LINE HAS BEEN HANDLED; NO FURTHER ACTION NECESSARY
  1953
  1954	402471'	200 02 0 00 002253'	CLSSPI:	MOVE	T2,CHRPTR	;SEE IF THERE ARE ANY TABS FROM HERE TO EOL
  1955	402472'	200 00 0 07 000024 		MOVE	T0,CPL(TM)	;GET LENGTH OF REMAINDER OF LINE
  1956	402473'	274 00 0 00 000020'		SUB	T0,ADDSPC
  1957	402474'	274 00 0 00 000016 		SUB	T0,CM
  1958	402475'	134 01 0 00 000002 	CLSSI1:	ILDB	T1,T2
  1959	402476'	322 01 0 00 402475'		JUMPE	T1,CLSSI1	;IGNORE IF NULL
  1960	402477'	306 01 0 00 000011 		CAIN	T1,11		;TAB?
  1961	402500'	263 17 0 00 000000 		POPJ	P,		;YES - GO RE-DISPLAY ENTIRE LINE
  1962	402501'	302 01 0 00 000015 		CAIE	T1,15		;END OF LINE?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 14-1
SED	MAC	21-May-74 00:04		Insert spaces

  1963	402502'	367 00 0 00 402475'		SOJG	T0,CLSSI1	;NO - KEEP LOOKING
  1964	402503'	327 00 0 00 402513'		JUMPG	T0,OPNSI2	;NO TAB - IF LINE SHORT DO IT WITH HARDWARE
  1965	402504'	263 17 0 00 000000 		POPJ	P,		;LONG LINE - GO REDISPLAY
  1966
  1967	402505'	200 02 0 00 002253'	OPNSPI:	MOVE	T2,CHRPTR	;SEE IF THERE ARE ANY TABS FROM HERE TO EOL
  1968	402506'	134 01 0 00 000002 	OPNSI1:	ILDB	T1,T2
  1969	402507'	306 01 0 00 000011 		CAIN	T1,11		;TAB?
  1970	402510'	263 17 0 00 000000 		POPJ	P,		;YES - GO RE-DISPLAY ENTIRE LINE
  1971	402511'	302 01 0 00 000015 		CAIE	T1,15		;END OF LINE?
  1972	402512'	254 00 0 00 402506'		JRST	OPNSI1		;NO - KEEP LOOKING
  1973
  1974	402513'	350 00 0 17 000000 	OPNSI2:	AOS	(P)		;SET UP FOR SKIP RETURN
  1975	402514'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;POINT TO THE RIGHT POSITION
  1976	402515'	607 03 0 00 771000 		TLNN	T3,771000	;[CSM] String of ASCII?
  1977	402516'	607 03 0 00 002000 		TLNN	T3,IDARGS	;[CSM] No, does subroutine take INS/DEL args?
  1978	402517'	254 00 0 00 402522'		 JRST	OPNSI3		;[CSM] No, do one space at a time
  1979	402520'	260 17 0 03 000000 		PUSHJ	P,(T3)		;[CSM] INS/DEL T4 spaces at current position
  1980	402521'	324 17 0 00 410451'		PJRST	PUTTYP		;[CSM] Continue
  1981
  1982	402522'	200 01 0 00 000003 	OPNSI3:	MOVE	T1,T3		;GET CODE TO DO THE OPEN
  1983	402523'	260 17 0 00 410357'		PUSHJ	P,PUTSEQ	;OPEN ONE SPACE
  1984	402524'	367 04 0 00 402522'		SOJG	T4,.-2		;LOOP THROUGH ALL SPACES
  1985	402525'	254 00 0 00 410451'		JRST	PUTTYP		;OUTPUT THE BUFFER AND SKIP RETURN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 15
SED	MAC	21-May-74 00:04		Delete characters

  1986					SUBTTL	Delete characters
  1987
  1988					;HERE TO REMOVE THE PREVIOUS CHARACTER FROM THE BUFFER
  1989
  1990	402526'	603 05 0 00 000400 	DELCHR:	TLNE	F,RDO		;IS FILE READ-ONLY?
  1991	402527'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
  1992	402530'	361 16 0 00 411367'		SOJL	CM,[AOJA CM,LOOP] ;BACK UP A NOTCH - IF AT START, DO NOTHING
  1993	402531'	201 01 0 00 000001 		MOVEI	T1,1		;SET TO REMOVE ONE CHARACTER
  1994	402532'	202 01 0 00 000021'		MOVEM	T1,ADDSPS	;YES - SET UP THE VALUE
  1995	402533'	661 05 0 00 000010 		TLO	F,XPC		;FORCE RE-MAKE OF CHARACTER POINTER
  1996	402534'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE IT
  1997	402535'	661 05 0 00 001030 		TLO	F,XPB!CHG!XPC	;SAY BOTTOM POINTER BAD; FILE MODIFIED
  1998	402536'	621 05 0 00 400000 		TLZ	F,PCM		;CANCEL THE PICK-CLOSE MARK, IF ANY
  1999	402537'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET CHARACTER POINTER
  2000	402540'	134 01 0 00 000013 		ILDB	T1,PT		;GET CHARACTER BEFORE THE CURSOR
  2001	402541'	302 01 0 00 000011 		CAIE	T1,11		;TAB?
  2002	402542'	254 00 0 00 402574'		JRST	CLSNP1+1	;NO - CONTINUE
  2003	402543'	400 01 0 00 000000 		SETZ	T1,		;YES - CLEAR OUT THE TAB
  2004	402544'	137 01 0 00 000013 		DPB	T1,PT
  2005	402545'	260 17 0 00 405166'		PUSHJ	P,DISONL	;RE-DISPLAY THAT LINE
  2006	402546'	200 13 0 00 002252'		MOVE	PT,LINPTR	;GET POINTER TO START OF LINE
  2007	402547'	260 17 0 00 406361'		PUSHJ	P,CALCCM	;POSITION TO THE START OF THE TAB
  2008	402550'	254 00 0 00 405127'		  JRST	DISCUR		;POSITION CURSOR AND LOOP
  2009	402551'	254 00 0 00 405127'		JRST	DISCUR
  2010
  2011					;HERE TO REMOVE CHARACTERS FROM THE BUFFER
  2012
  2013	402552'	603 05 0 00 000400 	CLOSSP:	TLNE	F,RDO		;IS FILE READ-ONLY?
  2014	402553'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
  2015	402554'	607 05 0 00 000002 		TLNN	F,ENT		;IS THERE A PARAMETER TYPED?
  2016	402555'	254 00 0 00 402566'		JRST	CLSNPM		;NO - USE THE ONE ALREADY SET UP
  2017	402556'	200 04 0 00 000020'		MOVE	T4,ADDSPC	;SET UP LAST TIME'S NOMINAL
  2018	402557'	202 04 0 00 002250'		MOVEM	T4,PARG1
  2019	402560'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  2020	402561'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET SPACES TO DELETE
  2021	402562'	602 05 0 00 000010 		TRNE	F,CMV		;DOING CURSOR MOVEMENT?
  2022	402563'	260 17 0 00 402624'		PUSHJ	P,SPSCUR	;YES - HANDLE THINGS A LITTLE DIFFERENTLY
  2023	402564'	202 04 0 00 000020'		MOVEM	T4,ADDSPC	;SAVE NEW NOMINAL
  2024	402565'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ERASE PARAMETER
  2025
  2026	402566'	337 01 0 00 000020'	CLSNPM:	SKIPG	T1,ADDSPC	;GOT ANYTHING TO DELETE?
  2027	402567'	254 00 0 00 402620'		JRST	CLOSP1		;NO - DONE
  2028	402570'	621 05 0 00 400000 		TLZ	F,PCM		;CANCEL THE PICK-CLOSE MARK, IF ANY
  2029	402571'	202 01 0 00 000021'		MOVEM	T1,ADDSPS	;YES - SET UP THE VALUE
  2030	402572'	661 05 0 00 001020 		TLO	F,XPB!CHG	;SAY BOTTOM POINTER BAD; FILE MODIFIED
  2031	402573'	260 17 0 00 406040'	CLSNP1:	PUSHJ	P,MAKCPT	;RE-MAKE CHARACTER POINTER
  2032	402574'	402 00 0 00 000336'		SETZM	NUMCHR		;ASSUME A TAB WON'T BE BROKEN
  2033	402575'	302 03 0 00 000011 		CAIE	T3,11		;IS CHARACTER AT CURSOR A TAB?
  2034	402576'	254 00 0 00 402601'		JRST	CLSNP2		;NO - CONTINUE
  2035	402577'	200 01 0 00 000345'		MOVE	T1,TABSPC	;YES - ADD SPACES TO LEFT OF TAB, AFTER CLOSE
  2036	402600'	202 01 0 00 000336'		MOVEM	T1,NUMCHR
  2037
  2038	402601'	200 13 0 00 002253'	CLSNP2:	MOVE	PT,CHRPTR
  2039	402602'	200 04 0 00 000021'		MOVE	T4,ADDSPS	;GET NUMBER OF SPACES TO CLOSE
  2040	402603'	260 17 0 00 406261'		PUSHJ	P,WRTNUL	;NULL OUT THAT MANY CHARACTERS
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 15-1
SED	MAC	21-May-74 00:04		Delete characters

  2041	402604'	202 04 0 00 000335'		MOVEM	T4,WRTNUM	;SAVE SIZE OF LEFTOVER, IF IT'S SHORT
  2042	402605'	332 00 0 00 000336'		SKIPE	NUMCHR		;WANT TO ADD SPACES FOR A BROKEN TAB?
  2043	402606'	260 17 0 00 406777'		PUSHJ	P,MAKSPC	;YES - DO IT
  2044	402607'	200 04 0 00 000021'		MOVE	T4,ADDSPS	;GET NUMBER OF SPACES TO CLOSE
  2045	402610'	274 04 0 00 000335'		SUB	T4,WRTNUM	;MINUS UNNEEDED OVERAGE
  2046	402611'	332 03 0 07 000016 		SKIPE	T3,DSP(TM)	;CAN TERMINAL CLOSE SPACES ON ITS OWN?
  2047	402612'	260 17 0 00 402471'		PUSHJ	P,CLSSPI	;YES - LET IT (SKIP RETURNS)
  2048	402613'	260 17 0 00 405150'		PUSHJ	P,DISLIN	;NO - REWRITE THE LINE CURSOR IS ON
  2049	402614'	375 00 0 00 000022'		SOSGE	ADDSLN		;WANT TO DO IT WITH ANOTHER LINE?
  2050	402615'	254 00 0 00 402620'		JRST	CLOSP1		;NO - JUST GET ANOTHER COMMAND
  2051	402616'	661 05 0 00 000014 		TLO	F,XPC!XPL	;YES - RE-MAKE SOME POINTERS
  2052	402617'	344 15 0 00 402573'		AOJA	RW,CLSNP1	;AND DO THE SAME WITH THE NEXT LINE
  2053
  2054	402620'	260 17 0 00 405766'	CLOSP1:	PUSHJ	P,POSCUR	;RE-POSITION THE CURSOR
  2055	402621'	377 00 0 00 000350'		SOSG	SQZCNT		;TIME TO DO A SQUEEZE?
  2056	402622'	260 17 0 00 405431'		PUSHJ	P,SQUEZW	;YES - REMOVE ALL NULL WORDS
  2057	402623'	254 00 0 00 400145'		JRST	INTEND		;AND GET ANOTHER COMMAND
  2058
  2059					;HERE FOR CURSOR MOVE OPENSP OR CLOSSP - COUNT LINES AND SPACES
  2060
  2061	402624'	202 04 0 00 000022'	SPSCUR:	MOVEM	T4,ADDSLN	;SAVE LINES TO WORK WITH
  2062	402625'	336 04 0 00 002251'		SKIPN	T4,PARG2	;GET NUMBER OF SPACES - ANY?
  2063	402626'	200 04 0 00 000020'		MOVE	T4,ADDSPC	;NO - USE CURRENT NOMINAL
  2064	402627'	263 17 0 00 000000 		POPJ	P,
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 16
SED	MAC	21-May-74 00:04		PICK command

  2065					SUBTTL	PICK command
  2066
  2067					;HERE TO TAKE LINES FROM THE BUFFER AND PUT THEM IN THE PICK BUFFER
  2068
  2069	402630'	200 04 0 00 000043'	PICK:	MOVE	T4,PICKLN	;SET UP LAST TIME'S NOMINAL
  2070	402631'	202 04 0 00 002250'		MOVEM	T4,PARG1
  2071	402632'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  2072	402633'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO PICK
  2073						JUMPE	T1,[SETZM PICKLN    ;IF GOT A TOKEN, READ ZERO LINES
  2074							    MOVEM T4,PICKSP ;AND GIVEN NUMBER OF SPACES
  2075	402634'	322 01 0 00 411370'			    JRST  PICK0]    ;CONTINUE
  2076	402635'	202 04 0 00 000043'		MOVEM	T4,PICKLN	;SAVE AS NEW NOMINAL
  2077	402636'	602 05 0 00 000010 		TRNE	F,CMV		;CURSOR MOVEMENT?
  2078						JRST	[MOVE  T1,PARG2    ;YES - GET SPACES TO PICK, TOO
  2079							 MOVEM T1,PICKSP   ;IF NO LINES, COUNT SPACES FROM CURSOR
  2080							 JUMPE T4,PICK0
  2081							 ADD   T1,SAVPOS+1 ;IF SOME LINES, COUNT FROM LEFT MARGIN
  2082							 ADD   T1,SL
  2083							 MOVEM T1,PICKSP
  2084	402637'	254 00 0 00 411373'			 JRST  PICK0]
  2085	402640'	402 00 0 00 000044'		SETZM	PICKSP		;IF NO CURSOR MOVE, CLEAR EXTRA SPACES
  2086	402641'	260 17 0 00 405722'	PICK0:	PUSHJ	P,ERASPM	;ERASE PARAMETER
  2087
  2088	402642'	620 05 0 00 000001 	PIKNPM:	TRZ	F,POV		;ASSUME PICK BUFFER WILL NOT OVERFLOW
  2089	402643'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POINTER
  2090	402644'	603 05 0 00 400000 		TLNE	F,PCM		;HAS A MARK BEEN MADE?
  2091	402645'	254 00 0 00 402772'		JRST	PIKMRK		;YES - DO THINGS DIFFERENTLY
  2092	402646'	400 02 0 00 000000 		SETZ	T2,		;CLEAR COUNT (IN CASE THERE AREN'T ANY LINES)
  2093	402647'	200 01 0 00 000003 		MOVE	T1,T3		;SAVE CHARACTER AT CURSOR
  2094	402650'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET CURRENT CURSOR POSITION
  2095	402651'	200 03 0 00 411402'		MOVE	T3,[POINT 7,PIKBUF]
  2096	402652'	337 04 0 00 000043'		SKIPG	T4,PICKLN	;GET NUMBER OF LINES TO PICK - ANY?
  2097	402653'	254 00 0 00 402717'		JRST	PICK3		;NO - DONE
  2098
  2099	402654'	302 01 0 00 000011 		CAIE	T1,11		;GOT A TAB AT THE CURSOR?
  2100	402655'	254 00 0 00 402675'		JRST	PICK1-1		;NO - SKIP THIS
  2101	402656'	200 02 0 00 000013 		MOVE	T2,PT		;GET CURSOR PTR AGAIN FOR SCRATCH
  2102	402657'	134 01 0 00 000002 		ILDB	T1,T2		;GET CHARACTER CURSOR POINTS TO
  2103	402660'	302 01 0 00 000011 		CAIE	T1,11		;FOUND THE TAB?
  2104	402661'	254 00 0 00 402657'		JRST	.-2		;NO - KEEP LOOKING
  2105	402662'	337 00 0 00 000345'		SKIPG	TABSPC		;YES - AT BEGINNING OF TAB?
  2106	402663'	254 00 0 00 402675'		JRST	PICK1-1		;YES - DON'T TOUCH THE TAB, THEN
  2107	402664'	200 13 0 00 000002 		MOVE	PT,T2		;WITHIN - POINT AFTER TAB
  2108	402665'	200 02 0 00 000344'		MOVE	T2,TABSIZ	;GET TAB'S SIZE TO RIGHT OF CURSOR
  2109	402666'	274 02 0 00 000345'		SUB	T2,TABSPC
  2110	402667'	261 17 0 00 000002 		PUSH	P,T2		;SAVE COUNT FOR A WHILE
  2111	402670'	201 01 0 00 000040 		MOVEI	T1," "		;PUT SOME SPACES IN THE PICK BUFFER
  2112	402671'	136 01 0 00 000003 		IDPB	T1,T3
  2113	402672'	367 02 0 00 402671'		SOJG	T2,.-1
  2114	402673'	262 17 0 00 000002 		POP	P,T2		;RESTORE COUNT OF SPACES PUT IN
  2115	402674'	254 00 0 00 402676'		JRST	PICK1
  2116
  2117	402675'	400 02 0 00 000000 		SETZ	T2,		;CLEAR COUNT OF CHARACTERS PICKED
  2118	402676'	316 14 0 00 000013 	PICK1:	CAMN	EN,PT		;AT END OF USEABLE BUFFER?
  2119	402677'	254 00 0 00 402752'		JRST	PIKPAD		;YES - PAD IN THE REMAINING <CRLF>S
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 16-1
SED	MAC	21-May-74 00:04		PICK command

  2120	402700'	316 03 0 00 411403'		CAMN	T3,[010700,,PIKBUF+PCBSIZ-1]
  2121	402701'	260 17 0 00 403007'		PUSHJ	P,PIKOVF	;WRITE TO DISK ON PICK BUFFER OVERFLOW
  2122	402702'	134 01 0 00 000013 		ILDB	T1,PT		;GET A CHARACTER
  2123	402703'	322 01 0 00 402676'		JUMPE	T1,PICK1	;SKIP, IF NULL
  2124	402704'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE IT IN THE PICK BUFFER
  2125	402705'	302 01 0 00 000015 		CAIE	T1,15		;CARRIAGE RETURN?
  2126	402706'	344 02 0 00 402676'		AOJA	T2,PICK1	;NO - IGNORE IT
  2127
  2128	402707'	316 03 0 00 411403'		CAMN	T3,[010700,,PIKBUF+PCBSIZ-1]
  2129	402710'	260 17 0 00 403007'		PUSHJ	P,PIKOVF	;WRITE TO DISK ON PICK BUFFER OVERFLOW
  2130	402711'	134 01 0 00 000013 		ILDB	T1,PT		;YES - PICK UP THE <LF>
  2131	402712'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE IT IN THE PICK BUFFER
  2132	402713'	271 02 0 00 000002 		ADDI	T2,2		;COUNT IT
  2133	402714'	302 01 0 00 000012 		CAIE	T1,12		;IS IT REALLY?
  2134	402715'	254 00 0 00 402676'		JRST	PICK1		;NO - IT'S NOT THE END OF THE LINE
  2135	402716'	367 04 0 00 402676'		SOJG	T4,PICK1	;YES - LOOP THROUGH DESIRED NUMBER OF LINES
  2136	402717'	202 02 0 00 000371'	PICK3:	MOVEM	T2,PIKCNT	;SAVE COUNT OF CHARACTERS PICKED
  2137	402720'	333 04 0 00 000044'		SKIPLE	T4,PICKSP	;DONE WITH LINES - GOT ANY SPACES?
  2138	402721'	260 17 0 00 402765'		PUSHJ	P,PIKSPS	;YES - PICK THEM, TOO
  2139	402722'	400 01 0 00 000000 	PICK4:	SETZ	T1,		;DONE - END PICK BUFFER WITH A NULL
  2140	402723'	136 01 0 00 000003 		IDPB	T1,T3
  2141	402724'	136 01 0 00 000003 	TOPS10^IFE TOPS-10,^<	IDPB	T1,T3		;CLEAR OUT ENTIRE LAST WORD
  2142	402725'	136 01 0 00 000003 		IDPB	T1,T3
  2143	402726'	136 01 0 00 000003 		IDPB	T1,T3
  2144	402727'	136 01 0 00 000003 		IDPB	T1,T3
  2145					>
  2146	402730'	623 05 0 00 400000 		TLZE	F,PCM		;WAS THERE A MARK?
  2147	402731'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;YES - RE-DISPLAY THE SCREEN
  2148	402732'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;RE-POSITION THE CURSOR
  2149	402733'	606 05 0 00 000001 		TRNN	F,POV		;HAS BUFFER OVERFLOWED?
  2150	402734'	254 00 0 00 400145'		JRST	LOOP		;NO - DONE
  2151	402735'	200 01 0 00 000371'		MOVE	T1,PIKCNT	;GET COUNT OF WORDS PICKED
  2152	402736'	231 01 0 00 000005 		IDIVI	T1,5
  2153	402737'	340 01 0 00 000000 		AOJ	T1,
  2154	402740'	275 01 0 00 000600 		SUBI	T1,PCBSIZ	;FIND SIZE OF LAST PIECE
  2155	402741'	301 01 0 00 000600 		CAIL	T1,PCBSIZ	;SMALL ENOUGH?
  2156	402742'	254 00 0 00 402740'		JRST	.-2		;NO - SUBTRACT SOME MORE
  2157	402743'	213 00 0 00 000001 	TOPS10^IFE TOPS-10,^<	MOVNS	T1
  2158	402744'	506 01 0 00 000231'		HRLM	T1,PIKCCL	;SET TO OUTPUT THAT MANY WORDS
  2159					>
  2160	402745'	260 17 0 00 403021'		PUSHJ	P,PIKOV1	;YES - WRITE OUT THE LAST PIECE
  2161	402746'	211 01 0 00 000600 	TOPS10^IFE TOPS-10,^<	MOVNI	T1,PCBSIZ	;RESTORE FULL BUFFER SIZE
  2162	402747'	506 01 0 00 000231'		HRLM	T1,PIKCCL	;  TO CHANNEL COMMAND
  2163					>
  2164	402750'	260 17 0 00 403026'		PUSHJ	P,PIKOVE	;CLOSE THE DISK FILE
  2165	402751'	254 00 0 00 400145'		JRST	LOOP		;AND GET ANOTHER COMMAND
  2166
  2167					;HERE IF PICK EXTENDS BEYOND FILE, TO PAD OUT WITH EXTRA <CR>S
  2168					;(IE, YOU ALWAYS GET THE NUMBER OF LINES YOU ASK FOR)
  2169
  2170	402752'	201 01 0 00 000015 	PIKPAD:	MOVEI	T1,15
  2171	402753'	201 13 0 00 000012 		MOVEI	PT,12
  2172	402754'	316 03 0 00 411403'	PIKPD1:	CAMN	T3,[010700,,PIKBUF+PCBSIZ-1]
  2173	402755'	260 17 0 00 403007'		PUSHJ	P,PIKOVF	;WRITE TO DISK ON PICK BUFFER OVERFLOW
  2174	402756'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE OFF ANOTHER <CRLF>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 16-2
SED	MAC	21-May-74 00:04		PICK command

  2175	402757'	316 03 0 00 411403'		CAMN	T3,[010700,,PIKBUF+PCBSIZ-1]
  2176	402760'	260 17 0 00 403007'		PUSHJ	P,PIKOVF	;WRITE TO DISK ON PICK BUFFER OVERFLOW
  2177	402761'	136 13 0 00 000003 		IDPB	PT,T3
  2178	402762'	271 02 0 00 000002 		ADDI	T2,2		;COUNT THE <CRLF>
  2179	402763'	367 04 0 00 402754'		SOJG	T4,PIKPD1	;CONTINUE THROUGH ALL LEFTOVER LINES
  2180	402764'	254 00 0 00 402717'		JRST	PICK3		;THEN FINISH OFF
  2181
  2182					;HERE TO PICK (T4) EXTRA SPACES AFTER THE LINES
  2183
  2184	402765'	621 05 0 00 000001 	PIKSPS:	TLZ	F,FLG		;DON'T NULL OUT THE PICKED CHARACTERS
  2185	402766'	260 17 0 00 402324'		PUSHJ	P,SPCBUF	;PICK (T4)S WORTH OF CHARACTERS AND RETURN
  2186	402767'	200 01 0 00 000347'		MOVE	T1,SPCCNT	;GET COUNT OF CHARACTERS
  2187	402770'	272 01 0 00 000371'		ADDM	T1,PIKCNT	;ADD TO TOTAL COUNT
  2188	402771'	263 17 0 00 000000 		POPJ	P,		;DONE
  2189
  2190					;HERE IF MARK WAS MADE - PICK FROM STARTING CHARACTER TO (MRKPTR)
  2191					;note: does nothing about starting or ending in a tab
  2192
  2193	402772'	661 05 0 00 000034 	PIKMRK:	TLO	F,XPL!XPC!XPB	;NO POINTERS ARE GOOD
  2194	402773'	260 17 0 00 402304'		PUSHJ	P,MRKSET	;SET UP TO USE THE MARK
  2195	402774'	200 03 0 00 411402'		MOVE	T3,[POINT 7,PIKBUF]
  2196	402775'	316 13 0 00 000355'	PIKMK1:	CAMN	PT,MRKPTR	;AT END OF THE PICK?
  2197	402776'	254 00 0 00 403005'		JRST	PIKMKE		;YES - FINISH OFF
  2198	402777'	316 03 0 00 411403'	        CAMN	T3,[010700,,PIKBUF+PCBSIZ-1]
  2199	403000'	260 17 0 00 403007'		PUSHJ	P,PIKOVF	;WRITE TO DISK ON PICK BUFFER OVERFLOW
  2200	403001'	134 01 0 00 000013 		ILDB	T1,PT		;GET A CHARACTER
  2201	403002'	322 01 0 00 402775'		JUMPE	T1,PIKMK1	;SKIP, IF NULL
  2202	403003'	136 01 0 00 000003 		IDPB	T1,T3		;SAVE IT IN THE PICK BUFFER
  2203	403004'	344 02 0 00 402775'		AOJA	T2,PIKMK1	;COUNT CHARACTER AND LOOP
  2204
  2205	403005'	202 02 0 00 000371'	PIKMKE:	MOVEM	T2,PIKCNT	;SAVE COUNT OF CHARACTERS PICKED
  2206	403006'	254 00 0 00 402722'		JRST	PICK4		;FINISH OFF
  2207
  2208					;SUBROUTINE FOR OVERFLOW OF PICK BUFFER - SAVE ON DISK; SET POV FLAG
  2209
  2210	403007'	400 01 0 00 000000 	PIKOVF:	SETZ	T1,		;SAVE A NULL AT END OF PICK BUFFER
  2211	403010'	136 01 0 00 000003 		IDPB	T1,T3
  2212	403011'	662 05 0 00 000001 		TROE	F,POV		;SET PICK OVERFLOW FLAG - ALREADY SET?
  2213	403012'	254 00 0 00 403021'		JRST	PIKOV1		;YES - FILE ALREADY OPEN
  2214	403013'	261 17 0 00 000002 		PUSH	P,T2		;SAVE AN AC
  2215	403014'	561 02 0 00 000225'		HRROI	T2,PIKFIL
  2216	403015'	260 17 0 00 405704'	TOPS10^IFE TOPS-10,^<	PUSHJ	P,SETDEL	;DELETE OLD .TMP FILE
  2217					>
  2218	403016'	260 17 0 00 405656'		PUSHJ	P,SETOUT	;SET UP THE PICK OUTPUT FILE
  2219	403017'	202 01 0 00 000372'		MOVEM	T1,PIKJFN
  2220	403020'	254 00 0 00 403022'		JRST	PIKOV2
  2221
  2222	403021'	261 17 0 00 000002 	PIKOV1:	PUSH	P,T2		;SAVE AN AC
  2223	403022'	067 05 0 00 000231'	TOPS10^IFE TOPS-10,^<	PIKOV2:	OUTPUT	5,PIKCCL	;WRITE OUT THE PICK BUFFER
  2224					>
  2225					TOPS20^IFE TOPS-20,^<	MOVE	T1,PIKJFN
  2226					PIKOV2:	HRROI	T2,PIKBUF	;WRITE OUT THE PICK BUFFER
  2227						SETZ	T3,
  2228						SOUT
  2229					>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 16-3
SED	MAC	21-May-74 00:04		PICK command

  2230	403023'	200 03 0 00 411402'		MOVE	T3,[POINT 7,PIKBUF] ;START THE BUFFER AFRESH
  2231	403024'	262 17 0 00 000002 		POP	P,T2		;RESTORE AC
  2232	403025'	263 17 0 00 000000 		POPJ	P,		;CONTINUE
  2233
  2234	403026'				PIKOVE:
  2235	403026'	071 05 0 00 000000 	TOPS10^IFE TOPS-10,^<	RELEAS	5,		;FINISH OFF THE FILE
  2236					>
  2237					TOPS20^IFE TOPS-20,^<	MOVE	T1,PIKJFN	;GET FILE HANDLE
  2238						CLOSF			;CLOSE IT
  2239						  HALTF			;IT BETTER WORK
  2240					>
  2241	403027'	263 17 0 00 000000 		POPJ	P,		;DONE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 17
SED	MAC	21-May-74 00:04		PUT command

  2242					SUBTTL	PUT command
  2243
  2244					;HERE TO PUT THE CONTENTS OF THE PICK BUFFER INTO THE BUFFER
  2245					;HERE, SPECIFICALLY, TO DO AN IN-LINE PUT: PUT TEXT IN THE MIDDLE OF A LINE
  2246
  2247	403030'	603 05 0 00 000400 	PUT:	TLNE	F,RDO		;IS FILE READ-ONLY?
  2248	403031'	254 00 0 00 410517'		JRST	RDOERR		;YES - COMMAND IS ILLEGAL
  2249	403032'	402 00 0 00 000372'		SETZM	PIKJFN		;ASSUME NOT READING FROM DISK
  2250	403033'	661 05 0 00 040000 		TLO	F,INS		;LET LINE BE EXTENDED IF NECESSARY
  2251	403034'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION
  2252	403035'	621 05 0 00 440000 		TLZ	F,INS!PCM
  2253	403036'	306 03 0 00 000011 		CAIN	T3,11		;IS CHARACTER AT CURSOR A TAB?
  2254	403037'	260 17 0 00 407155'		PUSHJ	P,RPLTAB	;YES - REPLACE IT WITH SPACES
  2255	403040'	661 05 0 00 005000 		TLO	F,CHG!WRH	;SET TO READ FROM THE PICK BUFFER
  2256	403041'	200 03 0 00 411404'		MOVE	T3,[010700,,PIKBUF-1]
  2257	403042'	202 03 0 00 000365'		MOVEM	T3,PUTPTR	;ASSUME WILL READ FROM PUT BUFFER
  2258	403043'	607 05 0 00 000002 		TLNN	F,ENT		;IS THERE A PARAMETER TYPED?
  2259	403044'	254 00 0 00 403102'		JRST	PUTNPM		;NO - USE THE PICK BUFFER
  2260	403045'	260 17 0 00 407276'		PUSHJ	P,PELS.1	;GET STRING TO PUT, IF ANY
  2261	403046'	322 01 0 00 403136'		JUMPE	T1,PUTCLS	;IF ENTER-PERCENT TYPED GO USE THE CLOSE BFR
  2262	403047'	621 05 0 00 000001 		TLZ	F,POV		;IF IMMEDIATE, BUFFER CAN'T OVERFLOW
  2263	403050'	202 01 0 00 000371'		MOVEM	T1,PIKCNT	;SAVE SIZE OF STRING
  2264	403051'	202 01 0 00 000336'		MOVEM	T1,NUMCHR	;SAVE AS NUMBER OF CHARACTERS TO ADD
  2265	403052'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;CLEAN THE SCREEN UP
  2266	403053'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-MAKE CURSOR POSITION, IF CURSOR MVMT USED
  2267	403054'	336 01 0 00 000371'		SKIPN	T1,PIKCNT	;GET COUNT OF CHARACTERS PICKED - ANY?
  2268	403055'	254 00 0 00 403154'		JRST	PUTERR		;NO - ERROR
  2269	403056'	260 17 0 00 407003'		PUSHJ	P,MAKCHR	;GO PUT IT IN
  2270
  2271					;HERE FOR AN IN-LINE PUT (IE, NO <CRLF>S IN THE BUFFER)
  2272
  2273	403057'	623 05 0 00 000004 	PUT0:	TLZE	F,XPL		;IS LINE POINTER O.K.?
  2274	403060'	260 17 0 00 406157'		PUSHJ	P,MAKLPT	;NO - RE-MAKE IT
  2275	403061'	661 05 0 00 000020 		TLO	F,XPB		;BOTTOM POINTER IS BAD
  2276	403062'	200 04 0 00 000336'		MOVE	T4,NUMCHR	;GET DISTANCE TO OPEN
  2277	403063'	332 03 0 07 000014 		SKIPE	T3,ISP(TM)	;CAN TERMINAL OPEN SPACES ON ITS OWN?
  2278	403064'	260 17 0 00 402505'		PUSHJ	P,OPNSPI	;YES - OPEN UP THE LINE (SKIP RETURN)
  2279	403065'	254 00 0 00 403076'		JRST	PUT0D		;NO - REWRITE THE LINE CURSOR IS ON
  2280	403066'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;GET BACK TO START OF NEWLY-OPENED SPACE
  2281	403067'	350 01 0 00 000365'		AOS	T1,PUTPTR	;WRITE PICK OR CLOSE BUFFER THERE
  2282	403070'	260 17 0 00 410372'		PUSHJ	P,PUTSTS
  2283	403071'	312 15 0 00 000323'		CAME	RW,LPP.1	;PUTTING ON BOTTOM LINE?
  2284	403072'	254 00 0 00 405127'		JRST	DISCUR		;NO - RE-DISPLAY THE CURSOR AND LOOP
  2285	403073'	623 05 0 00 000040 		TLZE	F,FNC		;YES - IS FENCE UP?
  2286	403074'	260 17 0 00 410332'		PUSHJ	P,CLRLNA	;YES - ERASE IT
  2287	403075'	254 00 0 00 405127'		JRST	DISCUR		;THEN RE-DISPLAY THE CURSOR AND LOOP
  2288
  2289	403076'	260 17 0 00 405150'	PUT0D:	PUSHJ	P,DISLIN	;TERMINAL CAN'T HELP - RE-DO ENTIRE LINE
  2290	403077'	316 15 0 00 000323'		CAMN	RW,LPP.1	;PUTTING ON BOTTOM LINE?
  2291	403100'	621 05 0 00 000040 		TLZ	F,FNC		;YES - IF FENCE WAS UP, IT AIN'T NO MO
  2292	403101'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND RETURN
  2293
  2294					;HERE TO PUT OLD CONTENTS OF PICK BUFFER
  2295
  2296	403102'	336 01 0 00 000371'	PUTNPM:	SKIPN	T1,PIKCNT	;GET COUNT OF CHARACTERS PICKED - ANY?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 17-1
SED	MAC	21-May-74 00:04		PUT command

  2297	403103'	254 00 0 00 403154'		JRST	PUTERR		;NO - ERROR
  2298	403104'	202 01 0 00 000336'		MOVEM	T1,NUMCHR	;SAVE AS NUMBER OF CHARACTERS TO ADD
  2299	403105'	661 05 0 00 005000 		TLO	F,CHG!WRH	;SET TO READ FROM THE PICK BUFFER
  2300	403106'	606 05 0 00 000001 		TRNN	F,POV		;WANT TO READ OFF DISK?
  2301	403107'	254 00 0 00 403113'		JRST	PUTNP2		;NO - READ FROM BUFFER
  2302	403110'	561 02 0 00 000225'		HRROI	T2,PIKFIL
  2303	403111'	260 17 0 00 405670'		PUSHJ	P,SETIN		;YES - SET FILE UP
  2304	403112'	202 01 0 00 000370'		MOVEM	T1,PUTJFN	;SAVE JFN FOR MAKSPC
  2305	403113'	402 00 0 00 000352'	PUTNP2:	SETZM	MAKLNS		;CLEAR NUMBER OF <CRLF>S IN BUFFER
  2306	403114'	260 17 0 00 407003'		PUSHJ	P,MAKCHR	;PUT THE BUFFER
  2307	403115'	336 04 0 00 000352'		SKIPN	T4,MAKLNS	;ARE THERE <CRLF>S IN THE PICK BUFFER?
  2308	403116'	254 00 0 00 403057'		JRST	PUT0		;NO - JUST REWRITE ONE LINE
  2309	403117'	661 05 0 00 000020 		TLO	F,XPB		;YES - BOTTOM POINTER IS BAD
  2310	403120'	260 17 0 00 402017'		PUSHJ	P,OPENLD	;OPEN UP, SOMEHOW **NOTE: MAY NOT RETURN**
  2311	403121'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;POSITION TO START OF PUT
  2312	403122'	200 04 0 00 000352'		MOVE	T4,MAKLNS	;GET NUMBER OF LINES TO DISPLAY
  2313	403123'	326 16 0 00 403126'		JUMPN	CM,.+3		;JUMP IF NOT AT START OF A COLUMN
  2314	403124'	135 01 0 00 000342'		LDB	T1,MAKPTR	;GET LAST CHARACTER PUT
  2315	403125'	302 01 0 00 000012 		CAIE	T1,12		;END OF LINE?
  2316	403126'	340 04 0 00 000000 		AOJ	T4,		;DO ONE MORE LINE IF START OR END W/IN LINE
  2317
  2318	403127'	200 01 0 07 000023 		MOVE	T1,LPP(TM)	;FIND NUMBER OF LINES BELOW CURSOR
  2319	403130'	274 01 0 00 000015 		SUB	T1,RW
  2320	403131'	317 01 0 00 000004 		CAMG	T1,T4		;IS PUT LONGER THAN THAT?
  2321	403132'	200 04 0 00 000001 		MOVE	T4,T1		;YES - DISPLAY ONLY WHAT WILL FIT
  2322
  2323	403133'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;DISPLAY FROM CURSOR POSITION
  2324	403134'	260 17 0 00 405175'		PUSHJ	P,DISPLY
  2325	403135'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND RETURN
  2326
  2327					;HERE TO PUT THE CONTENTS OF THE CLOSE BUFFER
  2328
  2329	403136'	200 01 0 00 411405'	PUTCLS:	MOVE	T1,[010700,,CLSBUF-1]
  2330	403137'	202 01 0 00 000365'		MOVEM	T1,PUTPTR	;SET TO READ FROM CLOSE BUFFER
  2331	403140'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ERASE PARAMETER
  2332	403141'	606 05 0 00 000002 		TRNN	F,COV		;WANT TO READ OFF DISK?
  2333	403142'	254 00 0 00 403146'		JRST	PUTCS1		;NO - READ FROM BUFFER
  2334	403143'	561 02 0 00 000233'		HRROI	T2,CLSFIL
  2335	403144'	260 17 0 00 405670'		PUSHJ	P,SETIN		;YES - SET FILE UP
  2336	403145'	202 01 0 00 000370'		MOVEM	T1,PUTJFN	;SAVE JFN FOR MAKSPC
  2337	403146'	337 01 0 00 001174'	PUTCS1:	SKIPG	T1,CLSCNT	;GET COUNT OF CHARS IN BUFFER - ANY?
  2338	403147'	254 00 0 00 403152'		JRST	PUCERR		;NO - ERROR
  2339	403150'	202 01 0 00 000336'		MOVEM	T1,NUMCHR	;YES - SAVE AS NUMBER OF CHARACTERS TO ADD
  2340	403151'	254 00 0 00 403113'		JRST	PUTNP2		;GO PUT THEM IN
  2341
  2342	403152'	201 01 0 00 411406'	PUCERR:	MOVEI	T1,[ASCIZ /#######Close buffer is empty/]
  2343	403153'	254 00 0 00 410520'		JRST	ERROR
  2344	403154'	201 01 0 00 411414'	PUTERR:	MOVEI	T1,[ASCIZ /########Put buffer is empty/]
  2345	403155'	254 00 0 00 410520'		JRST	ERROR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 18
SED	MAC	21-May-74 00:04		SLIDE left and right

  2346					SUBTTL	SLIDE left and right
  2347
  2348					;HERE TO SLIDE THE VIEWING WINDOW TO THE LEFT
  2349
  2350	403156'	200 04 0 00 000045'	SLIDEL:	MOVE	T4,SLIDES	;SET UP LAST TIME'S SLIDE AS NOMINAL
  2351	403157'	202 04 0 00 002250'		MOVEM	T4,PARG1
  2352	403160'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  2353	403161'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO ROLL
  2354	403162'	202 04 0 00 000045'		MOVEM	T4,SLIDES	;SAVE AS NEW NOMINAL
  2355	403163'	260 17 0 00 405722'		PUSHJ	P,ERASPM
  2356	403164'	336 00 0 00 000357'	SLLNPM:	SKIPN	SLDFLG		;NEVER WANT TO SLIDE?
  2357	403165'	254 00 0 00 405127'		JRST	DISCUR		;RIGHT - DON'T
  2358	403166'	274 11 0 00 000045'		SUB	SL,SLIDES	;SLIDE TO THE LEFT
  2359	403167'	270 16 0 00 000045'		ADD	CM,SLIDES	;KEEP CURSOR IN SAME POSITION IN TEXT
  2360						JUMPL	SL,[ADD  CM,SL	;IF GONE TOO FAR, STOP AT LEFT EDGE
  2361							    SETZ SL,	;YES - STOP AT THE LEFT EDGE
  2362	403170'	321 11 0 00 411422'			    JRST .+1]
  2363	403171'	315 16 0 00 000325'		CAMGE	CM,CPL.1	;HAS CURSOR GONE OFF THE RIGHT?
  2364	403172'	254 00 0 00 403175'		JRST	.+3		;NO - O.K.
  2365	403173'	200 16 0 00 000325'		MOVE	CM,CPL.1	;YES - MOVE IT TO THE EDGE OF THE SCREEN
  2366	403174'	661 05 0 00 000010 		TLO	F,XPC		;  (CHARACTER POINTER IS NOW BAD)
  2367	403175'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;RE-DISPLAY THE SCREEN
  2368	403176'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND RETURN
  2369
  2370					;HERE TO SLIDE THE VIEWING WINDOW TO THE RIGHT
  2371
  2372	403177'	200 04 0 00 000045'	SLIDER:	MOVE	T4,SLIDES	;SET UP LAST TIME'S SLIDE AS NOMINAL
  2373	403200'	202 04 0 00 002250'		MOVEM	T4,PARG1
  2374	403201'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  2375	403202'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO ROLL
  2376	403203'	602 05 0 00 000010 		TRNE	F,CMV		;CURSOR MOVEMENT?
  2377	403204'	200 04 0 00 002251'		MOVE	T4,PARG2	;YES -	GET CHANGE IN COLUMNS
  2378	403205'	202 04 0 00 000045'		MOVEM	T4,SLIDES	;SAVE AS NEW NOMINAL
  2379	403206'	260 17 0 00 405722'		PUSHJ	P,ERASPM
  2380	403207'	336 00 0 00 000357'	SLRNPM:	SKIPN	SLDFLG		;NEVER WANT TO SLIDE?
  2381	403210'	254 00 0 00 405127'		JRST	DISCUR		;RIGHT - DON'T
  2382	403211'	270 11 0 00 000045'		ADD	SL,SLIDES	;SLIDE TO THE RIGHT
  2383	403212'	274 16 0 00 000045'		SUB	CM,SLIDES	;KEEP CURSOR IN SAME POSITION IN TEXT
  2384	403213'	325 16 0 00 403216'		JUMPGE	CM,.+3		;HAS CURSOR GONE OFF THE LEFT?
  2385	403214'	400 16 0 00 000000 		SETZ	CM,		;YES - MOVE IT TO THE EDGE OF THE SCREEN
  2386	403215'	661 05 0 00 000010 		TLO	F,XPC		;  (CHARACTER POINTER IS NOW BAD)
  2387	403216'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;RE-DISPLAY THE SCREEN
  2388	403217'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND RETURN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19
SED	MAC	21-May-74 00:04		EXECUTE command

  2389					SUBTTL	EXECUTE command
  2390
  2391					;HERE TO OPEN OR CLOSE THE EXECUTE BUFFER OR SET UP TO ITERATE IT A FEW TIMES
  2392
  2393	403220'	621 05 0 00 400000 	EXECUT:	TLZ	F,PCM		;CANCEL THE PICK-CLOSE MARK, IF ANY
  2394	403221'	622 05 0 00 000010 		TRZE	F,CMV		;DID USER USER CURSOR MOVEMENT?
  2395						JRST	[MOVE  T3,[POINT 7,PARBUF]
  2396							 PUSHJ P,PELS.M	;YES - READ PARAMETER FROM THE FILE
  2397	403222'	254 00 0 00 411425'			 JRST  .+3]	;CONTINUE
  2398	403223'	400 01 0 00 000000 		SETZ	T1,		;END BUFFER WITH A NULL
  2399	403224'	136 01 0 00 002227'		IDPB	T1,PARPTR
  2400	403225'	554 01 0 00 002230'		HLRZ	T1,PARBUF	;GET FIRST CHARACTER OF PARAMETER
  2401	403226'	242 01 0 00 777765 		LSH	T1,-^D11
  2402	403227'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  2403	403230'	275 01 0 00 000040 		SUBI	T1,40		;YES - CONVERT TO UPPER
  2404	403231'	306 01 0 00 000123 		CAIN	T1,"S"		;SET UP A BUFFER?
  2405	403232'	254 00 0 00 403316'		JRST	XCTSET		;YES - DO IT
  2406	403233'	306 01 0 00 000113 		CAIN	T1,"K"		;KILL A BUFFER?
  2407	403234'	254 00 0 00 403335'		JRST	XCTKIL		;YES - DO IT
  2408	403235'	306 01 0 00 000127 		CAIN	T1,"W"		;WRITE INTO A BUFFER?
  2409	403236'	254 00 0 00 403344'		JRST	XCTWRT		;YES - DO IT
  2410	403237'	306 01 0 00 000122 		CAIN	T1,"R"		;READ AND LIST A BUFFER?
  2411	403240'	254 00 0 00 403465'		JRST	XCTRDL		;YES - DO IT
  2412	403241'	306 01 0 00 000116 		CAIN	T1,"N"		;LIST THE DEFINED BUFFER NAMES?
  2413	403242'	254 00 0 00 403546'		JRST	XCTNML		;YES - DO IT
  2414
  2415					;HERE TO SET UP A NUMBER OF ITERATIONS
  2416
  2417	403243'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ ARGUMENT, IF ANY
  2418	403244'	322 01 0 00 403306'		JUMPE	T1,EXCOPN	;IF NO ARG, JUST OPEN EXECUTE BUFFER
  2419	403245'	200 04 0 00 002250'		MOVE	T4,PARG1	;ELSE GET NUMBER OF ITERATIONS
  2420	403246'	200 03 0 00 000004 		MOVE	T3,T4		;HERE, TOOL
  2421	403247'	250 04 0 00 000047'		EXCH	T4,XCTITR	;SAVE AS NEW NOMINAL
  2422	403250'	250 03 0 00 000046'	EXCUT1:	EXCH	T3,XCTNUM	;AND AS CURRENT NUMBER
  2423	403251'	200 01 0 00 000051'		MOVE	T1,XCTACW	;GET BUFFER POINTER
  2424	403252'	134 01 0 00 000001 		ILDB	T1,T1		;MAKE SURE THERE'S SOMETHING THERE
  2425	403253'	322 01 0 00 403710'		JUMPE	T1,XCXERR	;IF NOTHING THERE, ERROR
  2426	403254'	662 05 0 00 000020 		TROE	F,XCT		;ALREADY EXECUTING?
  2427	403255'	260 17 0 00 403275'		PUSHJ	P,EXCSVX	;YES - SAVE CURRENT CONTEXT
  2428	403256'	200 01 0 00 000051'		MOVE	T1,XCTACW	;GET BUFFER POINTER
  2429	403257'	202 01 0 00 000053'		MOVEM	T1,XCTACR	;SET BUFFER UP FOR READING
  2430	403260'	202 01 0 00 000052'		MOVEM	T1,XCTPTR
  2431	403261'	626 05 0 00 000040 		TRZN	F,XSV		;SAVING COMMANDS?
  2432	403262'	254 00 0 00 403311'		JRST	EXCOP1		;NO - SKIP THIS
  2433	403263'	200 13 0 00 000050'		MOVE	PT,XCTPTW	;YES - GET POINTER TO END OF BUFFER
  2434	403264'	270 13 0 00 411204'	EXCUT2:	ADD	PT,[70000,,0]	;BACK IT UP A NOTCH
  2435	403265'	325 13 0 00 403267'		JUMPGE	PT,.+2		;(USER TYPED ENTER NUMBER EXECUTE:
  2436	403266'	274 13 0 00 411175'		SUB	PT,[430000,,1]	;  WANT TO REMOVE THAT FROM BUFFER)
  2437	403267'	135 01 0 00 000013 		LDB	T1,PT		;GET CHARACTER
  2438	403270'	302 01 0 00 000033 		CAIE	T1,33		;ENTER?
  2439	403271'	254 00 0 00 403264'		JRST	EXCUT2		;NO - KEEP SKIPPING
  2440	403272'	400 01 0 00 000000 		SETZ	T1,		;YES - END BUFFER WITH A NULL
  2441	403273'	137 01 0 00 000013 		DPB	T1,PT
  2442	403274'	254 00 0 00 403314'		JRST	XCTEND		;FINISH OFF
  2443
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19-1
SED	MAC	21-May-74 00:04		EXECUTE command

  2444					;SUBROUTINE TO SAVE CURRENT BUFFER STATUS SO ANOTHER CAN BE EXECUTED
  2445
  2446	403275'	332 00 0 00 000056'	EXCSVX:	SKIPE	XCTPSV		;ALREADY DOWN A LEVEL?
  2447	403276'	254 00 0 00 403705'		JRST	XSXERR		;YES - ONLY ONE STACK ALLOWED
  2448	403277'	200 01 0 00 000052'		MOVE	T1,XCTPTR	;NO - SAVE ACTIVE BUFFER POINTER
  2449	403300'	202 01 0 00 000056'		MOVEM	T1,XCTPSV
  2450	403301'	200 01 0 00 000053'		MOVE	T1,XCTACR	;AND ACTIVE BUFFER STARTING POINTER
  2451	403302'	202 01 0 00 000057'		MOVEM	T1,XCTASV
  2452	403303'	202 03 0 00 000055'		MOVEM	T3,XCTNSV       ;SAVE ACTIVE NUMBER OF ITERATIONS
  2453	403304'	202 04 0 00 000054'		MOVEM	T4,XCTISV       ;SAVE NOMINAL NUMBER OF ITERATIONS
  2454	403305'	263 17 0 00 000000 		POPJ	P,		;NOW GO BACK AND DO THE SET-UP
  2455
  2456					;HERE FOR JUST ENTER EXECUTE: OPEN BUFFER AND START SAVING COMMANDS
  2457
  2458	403306'	660 05 0 00 000040 	EXCOPN:	TRO	F,XSV		;SET FLAG TO SAVE COMMANDS
  2459	403307'	402 00 0 00 000047'		SETZM	XCTITR		;CLEAR NUMBER OF ITERATIONS
  2460	403310'	402 00 0 00 000046'		SETZM	XCTNUM
  2461	403311'	336 01 0 00 000051'	EXCOP1:	SKIPN	T1,XCTACW	;GET POINTER TO THE ACTIVE BUFFER
  2462	403312'	254 00 0 00 403712'		JRST	XCOERR		;ERROR - NO BUFFER IS ACTIVE
  2463	403313'	202 01 0 00 000050'		MOVEM	T1,XCTPTW	;SET IT UP
  2464	403314'	260 17 0 00 405722'	XCTEND:	PUSHJ	P,ERASPM
  2465	403315'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND RETURN
  2466
  2467					;HERE TO SET UP AN EXECUTE BUFFER - IF GIVEN NAME IS NOT FOUND,
  2468					;CREATE BUFFER WITH THAT NAME
  2469
  2470	403316'	620 05 0 00 000040 	XCTSET:	TRZ	F,XSV		;IF OLD BUFFER WAS OPEN, CLOSE IT
  2471	403317'	260 17 0 00 403567'		PUSHJ	P,XCTRED	;READ BUFFER NAME AND FIND IT
  2472	403320'	325 01 0 00 403330'		JUMPGE	T1,XCTST1	;JUMP IF FOUND
  2473	403321'	201 01 0 00 000007 		MOVEI	T1,XBFNUM-1	;ELSE CREATE IT - FIND OPEN SLOT
  2474	403322'	332 00 0 01 002047'		SKIPE	XCTNAM(T1)
  2475	403323'	365 01 0 00 403322'		SOJGE	T1,.-1		;NOT OPEN - TRY AGAIN
  2476	403324'	321 01 0 00 403714'		JUMPL	T1,XCSERR	;JUMP IF NONE OPEN - ERROR
  2477	403325'	202 04 0 01 002047'		MOVEM	T4,XCTNAM(T1)	;SAVE NAME IN THIS SLOT
  2478	403326'	200 02 0 01 002057'		MOVE	T2,XCTADR(T1)	;GET POINTER TO THIS BUFFER
  2479	403327'	402 00 0 02 000001 		SETZM	1(T2)		;CLEAR WHATEVER USED TO BE THERE
  2480	403330'	200 02 0 01 002057'	XCTST1:	MOVE	T2,XCTADR(T1)	;GET POINTER TO THIS BUFFER
  2481	403331'	202 02 0 00 000051'		MOVEM	T2,XCTACW	;SAVE AS ACTIVE POINTER
  2482	403332'	607 05 0 00 000001 		TLNN	F,FLG		;WANT TO RETURN (TO SWHMNY)?
  2483	403333'	254 00 0 00 403314'		JRST	XCTEND		;NO
  2484	403334'	263 17 0 00 000000 		POPJ	P,		;YES
  2485
  2486					;HERE TO KILL OFF A GIVEN EXECUTE BUFFER
  2487
  2488	403335'	260 17 0 00 403567'	XCTKIL:	PUSHJ	P,XCTRED	;READ AND FIND NAME OF BUFFER
  2489	403336'	321 01 0 00 403716'		JUMPL	T1,XCKERR	;NOT FOUND - ERROR
  2490	403337'	402 00 0 01 002047'		SETZM	XCTNAM(T1)	;ELSE ZERO OUT ITS NAME
  2491	403340'	200 02 0 01 002057'		MOVE	T2,XCTADR(T1)	;SEE IF IT IS THE ACTIVE ONE
  2492	403341'	316 02 0 00 000051'		CAMN	T2,XCTACW	;IS IT?
  2493	403342'	402 00 0 00 000051'		SETZM	XCTACW		;YES - SAY THERE IS NO ACTIVE BUFFER
  2494	403343'	254 00 0 00 403314'		JRST	XCTEND		;DONE
  2495
  2496					;HERE TO SAVE A STRING INTO THE ACTIVE BUFFER
  2497
  2498	403344'	200 13 0 00 411430'	XCTWRT:	MOVE	PT,[POINT 7,PARBUF,6]
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19-2
SED	MAC	21-May-74 00:04		EXECUTE command

  2499	403345'	200 04 0 00 000051'		MOVE	T4,XCTACW	;GET POINTERS TO SOURCE AND TARGET
  2500	403346'	400 00 0 00 000000 		SETZ	T0,		;CLEAR PARENTHETICAL FLAG
  2501
  2502	403347'	134 01 0 00 000013 	XCWRT1:	ILDB	T1,PT		;GET A CHARACTER
  2503	403350'	322 01 0 00 403453'		JUMPE	T1,XCWEND	;DONE IF NULL
  2504	403351'	306 01 0 00 000136 		CAIN	T1,"^"		;SOME COMMAND?
  2505	403352'	254 00 0 00 403361'		JRST	XCWCMD		;YES - PURSUE IT
  2506	403353'	306 01 0 00 000044 		CAIN	T1,"$"		;ENTER (OR ESCAPE)?
  2507	403354'	201 01 0 00 000033 		MOVEI	T1,33		;YES - SET IT UP
  2508	403355'	306 01 0 00 000051 		CAIN	T1,")"		;MAYBE THE END OF A REPEAT?
  2509	403356'	326 00 0 00 403445'		JUMPN	T0,XCWRPE	;IF SO, STOP THE REPEAT
  2510	403357'	136 01 0 00 000004 	XCWRT2:	IDPB	T1,T4		;SAVE CHARACTER
  2511	403360'	254 00 0 00 403347'		JRST	XCWRT1		;AND GET ANOTHER
  2512
  2513	403361'	134 01 0 00 000013 	XCWCMD:	ILDB	T1,PT		;GET 1ST LETTER OF COMMAND NAME
  2514	403362'	302 01 0 00 000051 		CAIE	T1,")"		;REALLY WANT A CLOSE PAREN,
  2515	403363'	306 01 0 00 000044 		CAIN	T1,"$"		;  OR A DOLLAR SIGN?
  2516	403364'	254 00 0 00 403357'		JRST	XCWRT2		;YES - JUST SAVE IT
  2517	403365'	306 01 0 00 000136 		CAIN	T1,"^"		;REALLY WANT AN UP-ARROW?
  2518						JRST	[IDPB T1,T4	;YES - JUST GO SAVE IT TWICE
  2519	403366'	254 00 0 00 411431'			 JRST XCWRT2]
  2520	403367'	307 01 0 00 000071 		CAIG	T1,"9"		;NO - GOT A REPEAT COUNT?
  2521	403370'	254 00 0 00 403422'		JRST	XCWRPT		;YES - SET COUNT UP
  2522	403371'	201 02 0 00 000136 	XCWCM1:	MOVEI	T2,"^"		;NO - GET AN UP-ARROW
  2523	403372'	260 17 0 00 403415'		PUSHJ	P,XCWGET+1	;PUT NEW CHARACTER IN WITH IT
  2524	403373'	260 17 0 00 403414'		PUSHJ	P,XCWGET	;GET REST OF COMMAND NAME
  2525	403374'	312 02 0 00 411433'		CAME	T2,["^RF"]	;GOT A ROLL FORWARD
  2526	403375'	316 02 0 00 411434'		CAMN	T2,["^RB"]	;  OR BACKWARD?
  2527	403376'	254 00 0 00 403411'		JRST	XCWRT3		;YES - NEED TO GET ANOTHER CHARACTER
  2528	403377'	242 02 0 00 000017 		LSH	T2,^D15		;NO - LEFT-JUSTIFY COMMAND NAME
  2529	403400'	201 01 0 00 000045 	XCWRT4:	MOVEI	T1,CMDLEN-1	;LOOK FOR COMMAND AMONG NAMES
  2530	403401'	312 02 0 01 410761'		CAME	T2,CMDNAM(T1)	;IS THIS IT?
  2531	403402'	365 01 0 00 403401'		SOJGE	T1,.-1		;NO - KEEP LOOKING
  2532	403403'	321 01 0 00 403461'		JUMPL	T1,XCWERR	;ERROR IF NOT FOUND
  2533	403404'	305 01 0 00 000040 		CAIGE	T1," "		;GOT A HIGH-NUMBERED COMMAND?
  2534	403405'	254 00 0 00 403357'		JRST	XCWRT2		;NO - O.K.
  2535	403406'	201 02 0 00 000136 		MOVEI	T2,"^"		;YES - PRECEDE IT WITH AN UP-ARROW
  2536	403407'	136 02 0 00 000004 		IDPB	T2,T4
  2537	403410'	254 00 0 00 403357'		JRST	XCWRT2		;THEN SAVE COMMAND
  2538
  2539	403411'	260 17 0 00 403414'	XCWRT3:	PUSHJ	P,XCWGET	;GET REST OF COMMAND NAME
  2540	403412'	242 02 0 00 000010 		LSH	T2,^D8		;LEFT-JUSTIFY COMMAND NAME
  2541	403413'	254 00 0 00 403400'		JRST	XCWRT4		;GO FIND THE COMMAND
  2542
  2543	403414'	134 01 0 00 000013 	XCWGET:	ILDB	T1,PT		;GET NEXT CHARACTER
  2544	403415'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  2545	403416'	275 01 0 00 000040 		SUBI	T1,40		;YES - CONVERT TO UPPER
  2546	403417'	242 02 0 00 000007 		LSH	T2,7		;SHIFT OVER ALREADY-GOTS
  2547	403420'	434 02 0 00 000001 		OR	T2,T1		;PUT NEW CHARACTER IN WITH THEM
  2548	403421'	263 17 0 00 000000 		POPJ	P,		;DONE
  2549
  2550	403422'	571 02 0 01 777720 	XCWRPT:	HRREI	T2,-60(T1)	;CONVERT CHARACTER TO A DIGIT
  2551	403423'	321 02 0 00 403461'		JUMPL	T2,XCWERR	;ERROR IF NOT NUMERIC
  2552	403424'	474 00 0 00 000000 		SETO	T0,		;SET WITHIN-REPEAT FLAG
  2553	403425'	201 01 0 00 000136 		MOVEI	T1,"^"		;ANNOUNCE START OF COUNT
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19-3
SED	MAC	21-May-74 00:04		EXECUTE command

  2554	403426'	136 01 0 00 000004 		IDPB	T1,T4
  2555	403427'	201 01 0 00 000137 		MOVEI	T1,"_"
  2556	403430'	136 01 0 00 000004 		IDPB	T1,T4
  2557	403431'	134 01 0 00 000013 	XCWRP1:	ILDB	T1,PT		;GET NEXT CHARACTER
  2558	403432'	307 01 0 00 000071 		CAIG	T1,"9"		;NUMERIC?
  2559	403433'	305 01 0 00 000060 		CAIGE	T1,"0"
  2560	403434'	254 00 0 00 403441'		JRST	XCWRP2		;NO - END OF COUNT
  2561	403435'	275 01 0 00 000060 		SUBI	T1,"0"		;MAYBE - CONVERT TO A DIGIT
  2562	403436'	221 02 0 00 000012 		IMULI	T2,^D10		;SHIFT OVER THE OLD STUFF
  2563	403437'	270 02 0 00 000001 		ADD	T2,T1		;PUT NEW DIGIT IN
  2564	403440'	254 00 0 00 403431'		JRST	XCWRP1		;AND GET ANOTHER ONE
  2565
  2566	403441'	136 02 0 00 000004 	XCWRP2:	IDPB	T2,T4		;SAVE REPEAT COUNT
  2567	403442'	306 01 0 00 000050 		CAIN	T1,"("		;GOT START OF THE REPEAT BLOCK?
  2568	403443'	254 00 0 00 403347'		JRST	XCWRT1		;YES - IGNORE IT
  2569	403444'	254 00 0 00 403350'		JRST	XCWRT1+1	;ELSE PROCESS CHARACTER, WHATEVER IT IS
  2570
  2571	403445'	201 01 0 00 000136 	XCWRPE:	MOVEI	T1,"^"		;MARK THE END OF THE REPEAT SECTION
  2572	403446'	136 01 0 00 000004 		IDPB	T1,T4
  2573	403447'	201 01 0 00 000137 		MOVEI	T1,"_"
  2574	403450'	136 01 0 00 000004 		IDPB	T1,T4
  2575	403451'	400 00 0 00 000000 		SETZ	T0,		;CLEAR REPEAT FLAG
  2576	403452'	254 00 0 00 403347'		JRST	XCWRT1		;GET NEXT CHARACTER
  2577
  2578	403453'	400 01 0 00 000000 	XCWEND:	SETZ	T1,		;END BUFFER WITH A NULL
  2579	403454'	136 01 0 00 000004 		IDPB	T1,T4
  2580	403455'	326 00 0 00 403463'		JUMPN	T0,XCWERP	;ERROR IF REPEAT BLOCK NOT CLOSED
  2581	403456'	607 05 0 00 000001 		TLNN	F,FLG		;WANT TO RETURN (TO SWHMNY)?
  2582	403457'	254 00 0 00 403314'		JRST	XCTEND		;NO
  2583	403460'	263 17 0 00 000000 		POPJ	P,		;YES
  2584
  2585	403461'	201 01 0 00 411435'	XCWERR:	MOVEI	T1,[ASCIZ /#########Bad command name/]
  2586	403462'	254 00 0 00 410520'		JRST	ERROR
  2587	403463'	201 01 0 00 411443'	XCWERP:	MOVEI	T1,[ASCIZ /#####Repeat block not closed/]
  2588	403464'	254 00 0 00 410520'		JRST	ERROR
  2589
  2590					;HERE TO OUTPUT NAME AND CONTENTS OF ACTIVE BUFFER
  2591
  2592	403465'	200 10 0 00 411207'	XCTRDL:	MOVE	TY,[POINT 7,PARBUF] ;WRITE TO PARAMETER BUFFER
  2593	403466'	200 13 0 00 000051'		MOVE	PT,XCTACW	;POINT TO ACTIVE EXECUTE BUFFER
  2594	403467'	201 02 0 00 000007 		MOVEI	T2,XBFNUM-1	;LOOK FOR NAME OF BUFFER
  2595	403470'	312 13 0 02 002057'		CAME	PT,XCTADR(T2)	;FIND WHEN POINTERS MATCH - NOW?
  2596	403471'	365 02 0 00 403470'		SOJGE	T2,.-1		;NO - LOOP
  2597	403472'	200 01 0 02 002047'		MOVE	T1,XCTNAM(T2)	;YES - GET NAME
  2598	403473'	620 01 0 00 000001 		TRZ	T1,1		;CLEAR FLAG BIT IN NAME
  2599	403474'	336 00 0 00 000001 		SKIPN	T1		;IS NAME NULL
  2600	403475'	200 01 0 00 411451'		MOVE	T1,[ASCII /<NUL>/] ;YES - SET UP NULL NAME
  2601	403476'	260 17 0 00 410357'		PUSHJ	P,PUTSEQ	;OUTPUT IT
  2602	403477'	201 01 0 00 000072 		MOVEI	T1,":"		;SEPARATE NAME AND CONTENTS
  2603	403500'	136 01 0 00 000010 		IDPB	T1,TY
  2604	403501'	400 04 0 00 000000 		SETZ	T4,		;CLEAR REPEAT FLAG
  2605
  2606	403502'	134 01 0 00 000013 	XCRDL0:	ILDB	T1,PT		;GET A CHARACTER
  2607	403503'	322 01 0 00 403541'		JUMPE	T1,XCREND	;IF NULL FINISH OFF
  2608	403504'	306 01 0 00 000136 		CAIN	T1,"^"		;SPECIAL FLAG?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19-4
SED	MAC	21-May-74 00:04		EXECUTE command

  2609	403505'	254 00 0 00 403514'		JRST	XCRSPC		;YES - HANDLE SEPARATELY
  2610	403506'	305 01 0 00 000040 		CAIGE	T1," "		;CONTROL CHARACTER?
  2611	403507'	254 00 0 00 403523'		JRST	XCRCTL		;YES - HANDLE SEPARATELY
  2612	403510'	306 01 0 00 000044 		CAIN	T1,"$"		;WANT A REAL DOLLAR SIGN?
  2613						JRST	[MOVEI T1,"^"	;YES - DISPLAY IT AS UP-ARROW DOLLAR SIGN
  2614							 IDPB  T1,TY
  2615							 MOVEI T1,"$"
  2616	403511'	254 00 0 00 411452'			 JRST  .+1]
  2617	403512'	136 01 0 00 000010 	XCRDL1:	IDPB	T1,TY		;OUTPUT CHARACTER
  2618	403513'	254 00 0 00 403502'		JRST	XCRDL0		;AND GET ANOTHER
  2619
  2620	403514'	134 01 0 00 000013 	XCRSPC:	ILDB	T1,PT		;GET CHARACTER AFTER SPECIAL FLAG
  2621	403515'	306 01 0 00 000137 		CAIN	T1,"_"		;GOT A REPEAT COUNT?
  2622	403516'	254 00 0 00 403526'		JRST	XCRRPT		;YES - HANDLE SEPARATELY
  2623	403517'	302 01 0 00 000136 		CAIE	T1,"^"		;WANT A REAL UP-ARROW?
  2624	403520'	254 00 0 00 403523'		JRST	XCRCTL		;NO - IT'S REALLY A COMMAND
  2625	403521'	136 01 0 00 000010 		IDPB	T1,TY		;YES - OUTPUT TWO ARROWS TO SHOW IT'S REAL
  2626	403522'	254 00 0 00 403512'		JRST	XCRDL1
  2627
  2628	403523'	200 01 0 01 410761'	XCRCTL:	MOVE	T1,CMDNAM(T1)	;GET COMMAND NAME
  2629	403524'	260 17 0 00 410361'		PUSHJ	P,PUTSQ1	;OUTPUT IT
  2630	403525'	254 00 0 00 403502'		JRST	XCRDL0		;BACK TO FLOW
  2631
  2632	403526'	326 04 0 00 403536'	XCRRPT:	JUMPN	T4,XCRRPE	;IF IN A REPEAT BLOCK, END IT
  2633	403527'	474 04 0 00 000000 		SETO	T4,		;ELSE SET REPEAT FLAG
  2634	403530'	201 01 0 00 000136 		MOVEI	T1,"^"		;FLAG NUMBER AS A COUNT
  2635	403531'	136 01 0 00 000010 		IDPB	T1,TY
  2636	403532'	134 01 0 00 000013 		ILDB	T1,PT		;GET REPEAT COUNT
  2637	403533'	260 17 0 00 410466'		PUSHJ	P,PUTNUM	;OUTPUT IT
  2638	403534'	201 01 0 00 000050 		MOVEI	T1,"("		;START OFF THE REPEAT BLOCK
  2639	403535'	254 00 0 00 403512'		JRST	XCRDL1		;SAVE CHARACTER AND FLOW
  2640
  2641	403536'	201 01 0 00 000051 	XCRRPE:	MOVEI	T1,")"		;END THE REPEAT BLOCK
  2642	403537'	400 04 0 00 000000 		SETZ	T4,		;CLEAR REPEAT FLAG
  2643	403540'	254 00 0 00 403512'		JRST	XCRDL1		;SAVE CHARACTER AND FLOW
  2644
  2645	403541'	400 01 0 00 000000 	XCREND:	SETZ	T1,		;END WITH A NULL
  2646	403542'	136 01 0 00 000010 		IDPB	T1,TY
  2647	403543'	202 10 0 00 002227'		MOVEM	TY,PARPTR	;SAVE TYPE POINTER AS PARAMETER POINTER
  2648	403544'	200 10 0 00 411066'		MOVE	TY,[010700,,TYPBUF-1] ;POINT BACK TO TYPE BUFFER
  2649	403545'	254 00 0 00 405040'		JRST	RECALL		;PRETEND THIS WAS THE LAST PARAM TYPED
  2650
  2651					;HERE TO OUTPUT LIST OF DEFINED NAMES
  2652
  2653	403546'	260 17 0 00 405722'	XCTNML:	PUSHJ	P,ERASPM	;FIX UP THE SCREEN
  2654	403547'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;MOVE TO BOTTOM LINE AND CLEAR IT
  2655	403550'	260 17 0 00 410337'		PUSHJ	P,PROTON	;PROTECT THE OUTPUT
  2656	403551'	201 02 0 00 000007 		MOVEI	T2,XBFNUM-1	;LOOK FOR NAME OF BUFFER
  2657	403552'	336 01 0 02 002047'	XCNAM1:	SKIPN	T1,XCTNAM(T2)	;GET A NAME - ANY?
  2658	403553'	365 02 0 00 403552'		SOJGE	T2,.-1
  2659	403554'	321 02 0 00 403564'		JUMPL	T2,XCNEND	;JUMP WHEN DONE
  2660	403555'	620 01 0 00 000001 		TRZ	T1,1		;ELSE CLEAR FLAG BIT IN NAME
  2661	403556'	336 00 0 00 000001 		SKIPN	T1		;IS THIS THE NULL BUFFER?
  2662	403557'	200 01 0 00 411451'		MOVE	T1,[ASCII /<NUL>/] ;YES - SET UP NULL NAME
  2663	403560'	260 17 0 00 410357'		PUSHJ	P,PUTSEQ	;OUTPUT NAME
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19-5
SED	MAC	21-May-74 00:04		EXECUTE command

  2664	403561'	200 01 0 00 411456'		MOVE	T1,[ASCII /   /];SEPARATE NAME FROM NEXT NAME
  2665	403562'	260 17 0 00 410357'		PUSHJ	P,PUTSEQ
  2666	403563'	365 02 0 00 403552'		SOJGE	T2,XCNAM1	;GET NEXT NAME
  2667
  2668	403564'	260 17 0 00 410340'	XCNEND:	PUSHJ	P,PROTOF	;DONE - ERASE PARAMETER
  2669	403565'	661 05 0 00 200000 		TLO	F,FBL		;MARK BOTTOM LINE AS FRAGGED
  2670	403566'	254 00 0 00 405127'		JRST	DISCUR		;AND RE-POSITION THE CURSOR
  2671
  2672					;SUBROUTINE TO READ THE BUFFER NAME AND FIND IT AMONG XCTNAM
  2673					;RETURNS NAME IN T4; INDEX IN T1. T1/-1 IF NOT FOUND
  2674
  2675	403567'	200 13 0 00 411457'	XCTRED:	MOVE	PT,[POINT 7,T4] ;GET POINTERS TO TARGET, SOURCE OF NAME
  2676	403570'	200 02 0 00 411430'		MOVE	T2,[POINT 7,PARBUF,6]
  2677	403571'	201 04 0 00 000001 		MOVEI	T4,1		;CLEAR TARGET - NAME WILL HAVE LOW BIT ON
  2678	403572'	201 03 0 00 000005 		MOVEI	T3,5		;READ AT MOST 5 CHARACTERS
  2679	403573'	260 17 0 00 410325'	XCTRD1:	PUSHJ	P,REDCHR	;GET A CHARACTER
  2680	403574'	322 01 0 00 403577'		JUMPE	T1,XCTRD2	;DONE IF NULL
  2681	403575'	136 01 0 00 000013 		IDPB	T1,PT		;STORE IT IN TARGET
  2682	403576'	367 03 0 00 403573'		SOJG	T3,XCTRD1	;GET ANOTHER CHARACTER
  2683	403577'	201 01 0 00 000007 	XCTRD2:	MOVEI	T1,XBFNUM-1	;NOW LOOK FOR NAME
  2684	403600'	312 04 0 01 002047'		CAME	T4,XCTNAM(T1)	;IS THIS IT?
  2685	403601'	365 01 0 00 403600'		SOJGE	T1,.-1		;NO - LOOP
  2686	403602'	263 17 0 00 000000 		POPJ	P,		;YES (OR NOT FOUND) - RETURN
  2687
  2688					;EXECUTE, NO PARAMETER: IF BUFFER IS OPEN, JUST CLOSE IT
  2689					;IF ALREADY CLOSED, SET TO DO SAME NUMBER OF ITERATIONS AS LAST TIME
  2690
  2691	403603'	626 05 0 00 000040 	EXCNPM:	TRZN	F,XSV		;NO LONGER SAVING COMMANDS
  2692	403604'	254 00 0 00 403610'		JRST	EXCNP1		;WEREN'T ANYWAY - SET UP FOR ITERATING
  2693	403605'	400 01 0 00 000000 		SETZ	T1,		;END EXECUTE BUFFER WITH A NULL
  2694	403606'	137 01 0 00 000050'		DPB	T1,XCTPTW	;  (PUT IT OVER THE X-COMMAND)
  2695	403607'	254 00 0 00 400145'		JRST	LOOP		;GET A NEW COMMAND
  2696
  2697	403610'	200 03 0 00 000047'	EXCNP1:	MOVE	T3,XCTITR	;GET NUMBER OF ITERATIONS
  2698	403611'	333 04 0 00 000003 		SKIPLE	T4,T3		;ANY?
  2699	403612'	254 00 0 00 403250'		JRST	EXCUT1		;YES - GO SET IT UP
  2700	403613'	201 01 0 00 411460'		MOVEI	T1,[ASCIZ /####Enter number of iterations/]
  2701	403614'	254 00 0 00 410520'		JRST	ERROR
  2702
  2703					;GET A COMMAND FROM THE EXECUTE BUFFER, FROM LOOP
  2704
  2705	403615'	134 01 0 00 000052'	XCTGET:	ILDB	T1,XCTPTR	;GET A COMMAND FROM READ BUFFER
  2706	403616'	306 01 0 00 000136 		CAIN	T1,"^"		;SPECIAL CHARACTER FLAG?
  2707	403617'	254 00 0 00 403640'		JRST	XCTGT1		;YES - HANDLE SPECIALLY
  2708	403620'	326 01 0 00 403635'		JUMPN	T1,XCTGTE	;IF GOT A REAL CHARACTER, USE IT
  2709	403621'	200 01 0 00 000053'		MOVE	T1,XCTACR	;ELSE POINT BACK TO START OF BUFFER
  2710	403622'	202 01 0 00 000052'		MOVEM	T1,XCTPTR
  2711	403623'	377 02 0 00 000046'		SOSG	T2,XCTNUM	;WANT TO DO ANOTHER ITERATION?
  2712	403624'	254 00 0 00 403661'		JRST	XCTDUN		;NO - FINISH OFF
  2713	403625'	606 02 0 00 000007 	TOPS10^IFE TOPS-10,^<	TRNN	T2,7		;YES - REALLY WANT TO WHISTLE?
  2714	403626'	051 15 0 00 411467'		IONEOU	[7]		;YES - WHISTLE
  2715	403627'	051 02 0 00 000001 		INCHRS	T1		;ANY TYPEAHEAD?
  2716	403630'	254 00 0 00 403615'		  JRST	XCTGET		;NO - CONTINUE
  2717	403631'	405 01 0 00 000177 		ANDI	T1,177
  2718	403632'	306 01 0 00 000177 		CAIN	T1,177		;IS IT A RUBOUT?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19-6
SED	MAC	21-May-74 00:04		EXECUTE command

  2719	403633'	254 00 0 00 400234'		JRST	RUBEXC		;YES - ABORT THE EXECUTE
  2720					>
  2721					TOPS20^IFE TOPS-20,^<	MOVEI	T1,7		;YES - GET SET TO WHISTLE
  2722						TRNN	T2,7		;REALLY WANT TO?
  2723						PBOUT			;YES - DO SO
  2724					>
  2725	403634'	254 00 0 00 403615'		JRST	XCTGET		;AND GET FIRST COMMAND
  2726
  2727	403635'	301 01 0 00 000040 	XCTGTE:	CAIL	T1," "		;SOME CONTROL CHARACTER?
  2728	403636'	254 00 0 00 400236'		JRST	ALPNUM		;NO - JUST PUT IT IN FILE OR BUFFER
  2729	403637'	254 00 0 00 400165'		JRST	LOOP2		;YES - HANDLE IT
  2730
  2731	403640'	134 01 0 00 000052'	XCTGT1:	ILDB	T1,XCTPTR	;GET CHARACTER AFTER THE UP-ARROW
  2732	403641'	306 01 0 00 000137 		CAIN	T1,"_"		;GOT THE START OR END OF A REPEAT?
  2733	403642'	254 00 0 00 403646'		JRST	XCTGRP		;YES - HANDLE IT
  2734	403643'	306 01 0 00 000136 		CAIN	T1,"^"		;WANT A REAL UP-ARROW?
  2735	403644'	254 00 0 00 400236'		JRST	ALPNUM		;YES - HANDLE IT
  2736	403645'	254 00 0 00 400165'		JRST	LOOP2		;NO - PROCESS THE COMMAND
  2737
  2738	403646'	371 01 0 00 000060'	XCTGRP:	SOSL	T1,XCTRPT	;ENTERING OR EXITING THE REPEAT?
  2739	403647'	254 00 0 00 403655'		JRST	XCTGRX		;EXITING - SET UP ANOTHER LOOP
  2740	403650'	134 01 0 00 000052'		ILDB	T1,XCTPTR	;GET REPEAT COUNT
  2741	403651'	202 01 0 00 000060'		MOVEM	T1,XCTRPT	;SAVE IT
  2742	403652'	200 01 0 00 000052'		MOVE	T1,XCTPTR	;GET POINTER TO REPEATABLE COMMAND
  2743	403653'	202 01 0 00 000061'		MOVEM	T1,XCTRPR	;SAVE IT
  2744	403654'	254 00 0 00 403615'		JRST	XCTGET		;PICK UP THE FIRST ITERATION
  2745
  2746	403655'	322 01 0 00 403615'	XCTGRX:	JUMPE	T1,XCTGET	;IF REPEAT DONE, JUST FORGE ON
  2747	403656'	200 01 0 00 000061'		MOVE	T1,XCTRPR	;ELSE GET REPEAT POINTER
  2748	403657'	202 01 0 00 000052'		MOVEM	T1,XCTPTR	;DO ANOTHER LOOP
  2749	403660'	254 00 0 00 403615'		JRST	XCTGET
  2750
  2751	403661'	400 01 0 00 000000 	XCTDUN:	SETZ	T1,		;GET READY TO ZERO THINGS
  2752	403662'	336 00 0 00 000056'		SKIPN	XCTPSV		;DONE - GOT A SAVED POINTER?
  2753	403663'	254 00 0 00 403675'		JRST	XCTDN1		;NO - REALLY DONE
  2754	403664'	250 01 0 00 000056'		EXCH	T1,XCTPSV	;YES - GET AND ZERO SAVED POINTER
  2755	403665'	202 01 0 00 000052'		MOVEM	T1,XCTPTR	;MAKE IT ACTIVE AGAIN
  2756	403666'	200 01 0 00 000057'		MOVE	T1,XCTASV	;GET SAVED STARTING POINTER
  2757	403667'	202 01 0 00 000053'		MOVEM	T1,XCTACR	;SET IT UP
  2758	403670'	200 01 0 00 000054'		MOVE	T1,XCTISV	;GET NOMINAL SAVED ITERATIONS
  2759	403671'	202 01 0 00 000047'		MOVEM	T1,XCTITR	;SET THEM UP, TOO
  2760	403672'	200 01 0 00 000055'		MOVE	T1,XCTNSV	;GET SAVED ITERATIONS
  2761	403673'	202 01 0 00 000046'		MOVEM	T1,XCTNUM	;SET THEM UP, TOO
  2762	403674'	254 00 0 00 403615'		JRST	XCTGET		;AND CONTINUE WITH THEM
  2763
  2764	403675'	620 05 0 00 000020 	XCTDN1:	TRZ	F,XCT		;STOP READING FROM BUFFER
  2765	403676'	250 01 0 00 000057'		EXCH	T1,XCTASV	;GET AND ZERO SAVED STARTING POINTER
  2766	403677'	322 01 0 00 403701'		JUMPE	T1,XCTDN2	;IS THERE ONE?
  2767	403700'	202 01 0 00 000051'		MOVEM	T1,XCTACW	;YES - MAKE IT REALLY ACTIVE
  2768	403701'	200 10 0 00 411066'	XCTDN2:	MOVE	TY,[010700,,TYPBUF-1]
  2769	403702'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;DISPLAY A NEW SCREENFUL
  2770	403703'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;RE-POSITION THE CURSOR
  2771	403704'	254 00 0 00 400145'		JRST	LOOP		;AND GET A NEW COMMAND
  2772
  2773					;EXECUTE ERROR MESSAGES
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 19-7
SED	MAC	21-May-74 00:04		EXECUTE command

  2774
  2775	403705'	201 01 0 00 411470'	XSXERR:	MOVEI	T1,[ASCIZ /####Execute stacked too deeply/]
  2776	403706'	402 00 0 00 000056'		SETZM	XCTPSV
  2777	403707'	254 00 0 00 410520'		JRST	ERROR
  2778	403710'	201 01 0 00 411477'	XCXERR:	MOVEI	T1,[ASCIZ /######Current buffer is empty/]
  2779	403711'	254 00 0 00 410520'		JRST	ERROR
  2780	403712'	201 01 0 00 411505'	XCOERR:	MOVEI	T1,[ASCIZ /########No buffer is active/]
  2781	403713'	254 00 0 00 410520'		JRST	ERROR
  2782	403714'	201 01 0 00 411513'	XCSERR:	MOVEI	T1,[ASCIZ /#No free buffers - kill something/]
  2783	403715'	254 00 0 00 410520'		JRST	ERROR
  2784	403716'	201 01 0 00 411522'	XCKERR:	MOVEI	T1,[ASCIZ /####Can't kill - name not found/]
  2785	403717'	254 00 0 00 410520'		JRST	ERROR
  2786	403720'	201 01 0 00 411531'	XCEERR:	MOVEI	T1,[ASCIZ /####Start or end of file reached/]
  2787	403721'	334 10 0 00 411066'		SKIPA	TY,[010700,,TYPBUF-1]
  2788	403722'	201 01 0 00 411540'	XCTERR:	MOVEI	T1,[ASCIZ /Execute buffer is about to overflow/]
  2789	403723'	254 00 0 00 410520'		JRST	ERROR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 20
SED	MAC	21-May-74 00:04		Select input file

  2790					SUBTTL	Select input file
  2791
  2792					;HERE TO SET UP A NEW FILE FOR EDITING
  2793
  2794	403724'	200 01 0 00 411550'	SETFIL:	MOVE	T1,[FILSPC,,OLDSPC]
  2795	403725'	251 01 0 00 000171'	TOPS10^IFE TOPS-10,^<	BLT	T1,OLDSPC+13+11+4+SFDS >
  2796					TOPS20^IFE TOPS-20,^<	BLT	T1,OLDSPC+13 >	;SAVE CURRENT SPECS IN OLD SPEC AREA
  2797	403726'	402 00 0 00 000356'	SETFLC:	SETZM	MFLPTR		;FORGET STAT.TMP STUFF IF USER GIVES A FILE
  2798	403727'	202 15 0 00 000175'		MOVEM	RW,SAVERW	;SAVE CURRENT ROW AND COLUMN POSITIONS
  2799	403730'	506 16 0 00 000175'		HRLM	CM,SAVERW
  2800	403731'	200 01 0 00 002254'		MOVE	T1,DISPTR	;SAVE CURRENT DISPLAY POINTER
  2801	403732'	202 01 0 00 000176'		MOVEM	T1,SAVEDP
  2802	403733'	202 11 0 00 000177'		MOVEM	SL,SAVESL	;SAVE SLIDE
  2803	403734'	200 03 0 00 411551'		MOVE	T3,[POINT 7,FILSPC]
  2804	403735'	260 17 0 00 407371'		PUSHJ	P,PELS.F	;PICK UP USERS FILESPEC, IF ANY
  2805	403736'	202 15 0 00 000175'		MOVEM	RW,SAVERW	;SAVE POSITION AGAIN IN CASE OF CUR MVMT
  2806	403737'	506 16 0 00 000175'		HRLM	CM,SAVERW
  2807	403740'	260 17 0 00 410253'		PUSHJ	P,PNTSTT	;SET UP POINTERS TO START OF FILE
  2808	403741'	260 17 0 00 407470'		PUSHJ	P,PARSEF	;PARSE FILESPEC AND (MAYBE) SWITCHES
  2809	403742'	260 17 0 00 410164'		PUSHJ	P,SAMFIL	;SEE IF NEW FILE IS SAME AS OLD ONE
  2810	403743'	621 05 0 00 400003 		TLZ	F,PCM!FLG!ENT	;CLEAR MARK, PARSE, AND ENTER FLAGS
  2811	403744'	400 01 0 00 000000 		SETZ	T1,		;CLEAR FLAG - GOT A FILE FROM RESCAN?
  2812	403745'	250 01 0 00 000353'		EXCH	T1,RSCANF
  2813	403746'	326 01 0 00 403763'		JUMPN	T1,SETFL1	;YES - DON'T SAVE; JUST GO LOOK IT UP
  2814	403747'	603 05 0 00 100000 		TLNE	F,SMF		;ARE FILES THE SAME?
  2815	403750'	254 00 0 00 400134'		JRST	NEWFIL+1	;YES - JUST SET THE THE NEW POSITION
  2816
  2817	403751'	201 04 0 00 000134'		MOVEI	T4,OLDSPC	;NO - PREPARE TO SAVE FILE
  2818	403752'	201 13 0 00 000150'	TOPS10^IFE TOPS-10,^<	MOVEI	PT,OLDBLK
  2819					>
  2820	403753'	336 00 0 00 000134'		SKIPN	OLDSPC		;IS THERE AN ACTIVE FILE?
  2821	403754'	254 00 0 00 403763'		JRST	SETFL1		;NO - DON'T SAVE IT
  2822	403755'	200 01 0 00 000176'		MOVE	T1,SAVEDP	
  2823	403756'	202 01 0 00 002254'		MOVEM	T1,DISPTR
  2824	403757'	260 17 0 00 405534'		PUSHJ	P,SAVFIL	;SAVE THE CURRENT FILE
  2825	403760'	200 01 0 00 411073'		MOVE	T1,[010700,,BUFFER-1]
  2826	403761'	250 01 0 00 002254'		EXCH	T1,DISPTR	
  2827	403762'	202 01 0 00 000176'		MOVEM	T1,SAVEDP
  2828
  2829	403763'	621 05 0 00 000001 	TOPS10^IFE TOPS-10,^<	SETFL1:	TLZ	F,FLG		;CLEAR FLAG FROM PARSEF
  2830	403764'	050 02 0 00 000106'		OPEN	2,FILBLK	;OPEN FILE FOR EDITING
  2831	403765'	254 00 0 00 404160'		  JRST	SETERR
  2832	403766'	402 00 0 00 000112'		SETZM	FILFIL+.RBPPN	;[CSM] Monitor does not like pointer to 0 PPN
  2833	403767'	200 01 0 00 000123'		MOVE	T1,FILPPN	;[JMS] Get PPN (zero if default)
  2834	403770'	332 00 0 00 000127'		SKIPE	FILUNM		;[JMS] If user name,
  2835	403771'	201 01 0 00 000127'		 MOVEI	T1,FILUNM	;[JMS] Use it
  2836	403772'	332 00 0 00 000124'		SKIPE	FILSFD		;[JMS] If any SFDs,
  2837	403773'	201 01 0 00 000121'		 MOVEI	T1,FILPTH	;[CSM] Get pointer to path
  2838	403774'	202 01 0 00 000112'		MOVEM	T1,FILFIL+.RBPPN;[CSM] Store PPN if no SFDs, else pointer to SFD
  2839	403775'	076 02 0 00 000111'	LK:	LOOKUP	2,FILFIL	;SET UP FILE FOR READING AND WRITING
  2840	403776'	254 00 0 00 404160'		  JRST	SETERR
  2841					IFDEC^IFE FT$TYM,^<	MOVEI	T1,FILPTH	;[CSM] Make sure pointer to path is there
  2842						MOVEM	T1,FILFIL+.RBPPN;[CSM]  in case SKIPE T2,FILPPN skipped
  2843						MOVEI	T1,2		;[CSM] Get channel number
  2844						MOVEM	T1,FILPTH	;[CSM] Put in PATH block
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 20-1
SED	MAC	21-May-74 00:04		Select input file

  2845						MOVE	T1,[SFDS+4,,FILPTH]
  2846						MOVE	T2,FILPPN	;[JMS]
  2847						PATH.	T1,		;[CSM] Find out where the file really is
  2848						  JRST	SETERR
  2849						MOVE	T1,FILPTH+0	;[CSM] Get device it was found on
  2850						MOVEM	T1,FILBLK+1	;[CSM] Create new file on same disk
  2851						SKIPN	T2		;[CSM] Was the old PPN zero?
  2852					>  ;End IFDEC
  2853	403777'	260 17 0 00 407721'		 PUSHJ	P,UNPARS	;[CSM] Yes, file may be in LIB:, so check it
  2854					;[CSM] Check for write access by trying to ENTER the file
  2855					IFDEC^IFE FT$TYM,^<	TLNE	F,RDO		;[CSM] Want file read-only?
  2856						 JRST	SETFL2		;[CSM] Yes
  2857						OPEN	5,FILBLK	;[CSM] Open scratch channel
  2858						  HALT	.		;[CSM] Cannot fail
  2859						MOVE	T1,FILFIL+.RBNAM;[CSM] Get file name
  2860						MOVE	T2,FILFIL+.RBEXT;[CSM] Extension
  2861						MOVE	T3,FILFIL+.RBPRV;[CSM] Protection
  2862						MOVE	T4,FILFIL+.RBPPN;[CSM] Actual path
  2863						ENTER	5,T1		;[CSM] Try to create
  2864						  TLOA	F,RDO		;NO - READ ONLY
  2865						TLZ	F,RDO		;YES - ENABLE FOR WRITING
  2866						MOVEI	T1,5		;[CSM] Channel number
  2867						RESDV.	T1,		;[CSM] Reset channel, without superseding file
  2868						  RELEAS 5,		;[CSM] RESDV. not implemented
  2869					SETFL2:	>  ;End IFDEC
  2870	404000'	476 00 0 00 000133'		SETOM	INJFN		;SAY FILE HAS BEEN SET UP
  2871	404001'	200 01 0 00 000116'		MOVE	T1,FILFIL+.RBSIZ;GET SIZE OF FILE (IN WORDS)
  2872					;	SKIPE	FILSBK		;GOT A LIMIT ON THE AMOUNT TO READ?
  2873					;	JRST	[CAML T1,FILSBK	;YES - IS FILE LARGER THAT THE LIMIT?
  2874					;		 EXCH T1,FILSBK	;YES - SWAP THE TWO
  2875					;		 JRST .+1]	;CONTINUE
  2876	404002'	303 01 0 00 372000 		CAILE	T1,MAXSIZ	;[CSM] Is file too big?
  2877	404003'	254 00 0 00 404105'		 JRST	SSZERR		;YES - ERROR
  2878	404004'	202 01 0 00 000131'		MOVEM	T1,FILSIZ	;NO - SAVE FILE SIZE
  2879	404005'	550 02 0 00 002254'		HRRZ	T2,DISPTR	;GET DISPLAY POINTER ADDRESS
  2880	404006'	275 02 0 00 002257'		SUBI	T2,BUFFER
  2881	404007'	315 01 0 00 000002 		CAMGE	T1,T2		;IS IT POINTING BEYOND THE BUFFER?
  2882						JRST	[MOVE  T2,[010700,,BUFFER-1]
  2883							 MOVEM T2,DISPTR ;YES - POINT TO START OF BUFFER
  2884	404010'	254 00 0 00 411552'			 JRST  .+1]
  2885	404011'	242 01 0 00 777771 		LSH	T1,-7		;GET SIZE IN BLOCKS
  2886	404012'	202 01 0 00 000132'		MOVEM	T1,FILBSZ	;SAVE IT, TOO
  2887	404013'	513 00 0 00 000114'		HLLZS	FILFIL+.RBEXT	;CLEAN UP FILESPEC BLOCK
  2888	404014'	402 00 0 00 000115'		SETZM	FILFIL+.RBPRV
  2889	404015'	201 01 0 00 002256'		MOVEI	T1,BUFFER-1	;SHRINK CORE TO GET RID OF OLD FILE
  2890	404016'	047 01 0 00 000011 		CORE	T1,
  2891	404017'	254 04 0 00 404017'		  HALT	.
  2892	404020'	200 01 0 00 000131'		MOVE	T1,FILSIZ	;EXPAND CORE TO ACCOMMODATE NEW FILE
  2893	404021'	271 01 0 00 002257'		ADDI	T1,BUFFER
  2894	404022'	315 01 0 00 000000*		CAMGE	T1,.JBREL	;IS IT WITHIN PRESENT CORE?
  2895						JRST	[SETZM BUFFER	;YES - CLEAR OUT ALL OF CORE
  2896							 MOVE  T2,[BUFFER,,BUFFER+1]
  2897							 MOVE  T3,.JBREL
  2898							 BLT   T2,(T3)
  2899	404023'	254 00 0 00 411556'			 JRST  .+1]
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 20-2
SED	MAC	21-May-74 00:04		Select input file

  2900	404024'	271 01 0 00 002000 		ADDI	T1,2000
  2901	404025'	047 01 0 00 000011 		CORE	T1,
  2902	404026'	254 04 0 00 404026'		  HALT	.
  2903	404027'	210 01 0 00 000131'		MOVN	T1,FILSIZ
  2904	404030'	336 00 0 00 000001 		SKIPN	T1		;[CSM] Zero length file?
  2905	404031'	211 01 0 00 000001 		 MOVNI	T1,1		;[CSM] Yes, use 1 word
  2906	404032'	506 01 0 00 000223'		HRLM	T1,FILCCL	;READ ENTIRE FILE IN
  2907	404033'	066 02 0 00 000223'		INPUT	2,FILCCL
  2908	404034'	071 02 0 00 000000 		RELEAS	2,		;GET RID OF CHANNEL
  2909	404035'	200 01 0 00 000131'		MOVE	T1,FILSIZ
  2910					>  ;End TOPS10
  2911					TOPS20^IFE TOPS-20,^<
  2912					SETFL1:	MOVE	T1,[GJ%OLD+GJ%SHT]
  2913						HRROI	T2,FILSPC	;GET A JFN FOR THIS FILE
  2914						GTJFN
  2915						  JRST	SETERR
  2916						MOVEM	T1,INJFN
  2917					
  2918						MOVE	T2,[OF%THW+OF%RD+OF%WR]
  2919						OPENF
  2920						  JRST	SETERR		;won't work if write protected, etc.
  2921						TLZ	F,RDO		;FILE WILL ALWAYS BE WRITEABLE (FOR NOW)
  2922					
  2923						MOVE	T2,[1,,.FBBYV]	;FIND BYTE SIZE OF THE FILE
  2924						MOVEI	T3,T4		;  IN T4
  2925						GTFDB
  2926						HLRZS	T4
  2927						ANDI	T4,7700		;CLEAR OUT ALL FIELDS BUT BYTE SIZE
  2928						MOVEI	PT,1		;ASSUME BYTE SIZE IS 7
  2929						CAIN	T4,4400		;IS IT REALLY 36?
  2930						MOVEI	PT,5		;YES - MAKE ADJUSTMENT
  2931					
  2932						SIZEF			;FIND THE SIZE OF THE FILE
  2933						  JRST	SETERR
  2934						IMUL	T2,PT		;CONVERT BYTE COUNT INTO CHARACTER COUNT
  2935						MOVEM	T2,FILSIZ	;AND SAVE IT
  2936						MOVEM	T3,FILBSZ	;AND BLOCK COUNT
  2937					
  2938						HRLZ	T1,INJFN	;READ IN THE ENTIRE FILE
  2939						MOVE	T2,[400000,,BUFBLK]
  2940						ADD	T3,[PM%CNT+PM%RD+PM%CPY]
  2941						PMAP
  2942					
  2943						MOVE	T1,FILSIZ	;GET BYTE SIZE
  2944						IDIVI	T1,5		;CONVERT TO WORDS
  2945					>  ;End TOPS20
  2946	404036'	200 14 0 00 411563'		MOVE	EN,[010700,,BUFFER]
  2947	404037'	273 14 0 00 000001 		ADDB	EN,T1		;SET UP POINTER TO END OF FILE
  2948	404040'	660 05 0 00 004000 		TRO	F,GFL		;NOTE THAT A FILE HAS BEEN SET UP
  2949	404041'	621 05 0 00 000001 		TLZ	F,FLG		;CLEAR EXTENSION FLAG
  2950	404042'	336 00 0 00 002254'		SKIPN	DISPTR		;WANT TO USE PRE-SET POINTERS?
  2951	404043'	260 17 0 00 410240'		PUSHJ	P,PRESET	;YES - SET THEM UP
  2952	404044'	254 00 0 00 404050'		JRST	SETCR0		;NOW DRIVE ON
  2953
  2954	404045'	270 01 0 00 411204'	SETCR:	ADD	T1,[70000,,0]	;BACK UP END POINTER A NOTCH
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 20-3
SED	MAC	21-May-74 00:04		Select input file

  2955	404046'	325 01 0 00 404050'		JUMPGE	T1,.+2
  2956	404047'	274 01 0 00 411175'		SUB	T1,[430000,,1]
  2957	404050'	135 02 0 00 000001 	SETCR0:	LDB	T2,T1		;GET CHARACTER
  2958	404051'	322 02 0 00 404045'		JUMPE	T2,SETCR	;SKIP IF NULL
  2959	404052'	302 02 0 00 000012 		CAIE	T2,12		;ELSE GOT A LINEFEED?
  2960	404053'	254 00 0 00 404062'		JRST	SETCR2		;NO - GO ADD A CRLF
  2961	404054'	270 01 0 00 411204'		ADD	T1,[70000,,0]	;YES - SEE IF IT'S PRECEDED BY A <CR>
  2962	404055'	325 01 0 00 404057'		JUMPGE	T1,.+2		;BACK UP A NOTCH
  2963	404056'	274 01 0 00 411175'		SUB	T1,[430000,,1]
  2964	404057'	135 02 0 00 000001 		LDB	T2,T1		;GET CHARACTER
  2965	404060'	306 02 0 00 000015 		CAIN	T2,15		;GOT A <CR>
  2966	404061'	254 00 0 00 404065'		JRST	SETLNO		;YES - O.K.
  2967
  2968	404062'	200 01 0 00 411564'	SETCR2:	MOVE	T1,[BYTE (7) 15,12] ;GET A <CRLF>
  2969	404063'	202 01 0 14 000001 		MOVEM	T1,1(EN)	;SAVE AS LAST WORD OF FILE
  2970	404064'	344 14 0 00 404065'		AOJA	EN,SETLNO	;NOW GO CHECK FOR LINE NUMBERS
  2971
  2972					;NOW SEE IF LOW ORDER BITS IS ON IN FILE WORDS: IF SO, FILE HAS
  2973					;LINE NUMBERS OR IS NOT TEXT. SET READ-ONLY FLAG AND WARN USER
  2974
  2975	404065'	201 03 0 00 002257'	SETLNO:	MOVEI	T3,BUFFER	;POINT TO START OF BUFFER
  2976	404066'	201 04 0 00 002457'		MOVEI	T4,BUFFER+200	;AND 128 WORDS OUT, OR END
  2977	404067'	303 04 0 14 000000 		CAILE	T4,(EN)		;FILE SMALLER THAN 128?
  2978	404070'	540 04 0 00 000014 		HRR	T4,EN		;YES - POINT TO END INSTEAD
  2979	404071'	201 02 0 00 000001 		MOVEI	T2,1		;GET BIT FOR COMPARISONS
  2980	404072'	612 02 0 03 000000 	SETLN1:	TDNE	T2,(T3)		;DOES THIS WORD HAVE LOW BIT ON?
  2981	404073'	254 00 0 00 404101'		JRST	SETLNL		;YES - SCREAM
  2982	404074'	312 03 0 00 000004 		CAME	T3,T4		;NO - AT END?
  2983	404075'	344 03 0 00 404072'		AOJA	T3,SETLN1	;NO - LOOP
  2984	404076'	607 05 0 00 000400 		TLNN	F,RDO		;NO LINE NRS, BUT IS FILE READ-ONLY ANYWAY?
  2985	404077'	254 00 0 00 400133'		JRST	NEWFIL		;NO - O.K.
  2986	404100'	334 01 0 00 411573'		SKIPA	T1,[[ASCIZ /######File cannot be modified/]]
  2987
  2988	404101'	201 01 0 00 411574'	SETLNL:	MOVEI	T1,[ASCIZ /######Line numbers - read only/]
  2989	404102'	260 17 0 00 410566'		PUSHJ	P,ERRDSP	;DISPLAY THE MESSAGE
  2990	404103'	661 05 0 00 000400 		TLO	F,RDO		;MARK FILE AS READ ONLY
  2991	404104'	254 00 0 00 400133'		JRST	NEWFIL		;AND GO EDIT IT
  2992
  2993					TOPS10^IFE TOPS-10,^<
  2994	404105'	201 01 0 00 411603'	SSZERR:	MOVEI	T1,[ASCIZ /#####File is too large to edit/]
  2995	404106'	254 00 0 00 410535'		JRST	STFERR
  2996					>
  2997					;HERE IF NO PARAMETER WAS TYPED - SET UP PREVIOUS FILE, AND SAVE PRESENT
  2998					;ONE AS NEW PREVIOUS ONE
  2999
  3000	404107'	336 00 0 00 000134'	SETNPM:	SKIPN	OLDSPC		;ARE THERE OLD FILE SPECS?
  3001	404110'	254 00 0 00 404205'		JRST	SETERX		;NO - ERROR
  3002	404111'	201 13 0 00 000106'	TOPS10^IFE TOPS-10,^<	MOVEI	PT,FILBLK	;POINT TO NAME OF CURRENT FILE
  3003					>
  3004	404112'	201 04 0 00 000072'		MOVEI	T4,FILSPC	;POINT TO SPECS (BOTH FOR SAVFIL)
  3005	404113'	603 05 0 00 100000 		TLNE	F,SMF		;ARE FILE AND ALTERNATE FILE THE SAME?
  3006	404114'	254 00 0 00 404117'		JRST	.+3		;YES - DON'T SAVE
  3007	404115'	332 00 0 00 000072'		SKIPE	FILSPC		;IS THERE AN ACTIVE FILE?
  3008	404116'	260 17 0 00 405534'		PUSHJ	P,SAVFIL	;YES - SAVE IT NOW
  3009	404117'	332 13 0 00 000356'		SKIPE	PT,MFLPTR	;GOT MORE FILES IN nnnSTT.TMP?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 20-4
SED	MAC	21-May-74 00:04		Select input file

  3010	404120'	260 17 0 00 404212'		PUSHJ	P,SETMFL	;YES - SET NEXT ONE UP AS ALTERNATE
  3011	404121'	201 01 0 00 000035 	TOPS10^IFE TOPS-10,^<	MOVEI	T1,13+11+4+SFDS >
  3012					TOPS20^IFE TOPS-20,^<	MOVEI	T1,13 >		;SWAP THE 8 WORDS OF THE FILE SPECS
  3013	404122'	200 02 0 01 000072'	SETNP1:	MOVE	T2,FILSPC(T1)
  3014	404123'	250 02 0 01 000134'		EXCH	T2,OLDSPC(T1)
  3015	404124'	202 02 0 01 000072'		MOVEM	T2,FILSPC(T1)
  3016	404125'	365 01 0 00 404122'		SOJGE	T1,SETNP1
  3017	404126'	504 15 0 00 000016 		HRL	RW,CM		;SWAP ROW AND COLUMN POSITIONS
  3018	404127'	250 15 0 00 000175'		EXCH	RW,SAVERW
  3019	404130'	554 16 0 00 000015 		HLRZ	CM,RW
  3020	404131'	550 15 0 00 000015 		HRRZ	RW,RW
  3021	404132'	200 01 0 00 002254'		MOVE	T1,DISPTR	;SWAP DISPLAY POINTER
  3022	404133'	250 01 0 00 000176'		EXCH	T1,SAVEDP
  3023	404134'	202 01 0 00 002254'		MOVEM	T1,DISPTR
  3024	404135'	250 11 0 00 000177'		EXCH	SL,SAVESL	;SET UP SLIDE
  3025	404136'	336 00 0 00 002254'		SKIPN	DISPTR		;NEED TO PARSE SPECS (FROM .TMP)?
  3026	404137'	260 17 0 00 407470'		PUSHJ	P,PARSEF	;YES - DO SO
  3027	404140'	661 05 0 00 000034 		TLO	F,XPC!XPL!XPB	;NO POINTERS ARE VALID
  3028	404141'	621 05 0 00 000001 		TLZ	F,FLG		;CLEAR FLAG FROM PARSEF
  3029					;	SKIPN	DISPTR		;NEED TO SET UP PRE-SET POINTERS?
  3030					;	PUSHJ	P,PRESET	;YES - DO SO
  3031	404142'	607 05 0 00 100000 		TLNN	F,SMF		;ARE FILE AND ALTERNATE FILE THE SAME?
  3032	404143'	254 00 0 00 403763'		JRST	SETFL1		;NO - GO SET UP THAT FILE
  3033	404144'	336 00 0 00 002254'		SKIPN	DISPTR		;NEED TO SET UP PRE-SET POINTERS?
  3034	404145'	260 17 0 00 410240'		PUSHJ	P,PRESET	;YES - DO SO
  3035	404146'	254 00 0 00 400134'		JRST	NEWFIL+1	;YES - DON'T LOOK FILE UP; JUST USE IT
  3036
  3037					;HERE TO CREATE FILE. WRITE FIRST LINE IN IT, CLOSE IT,
  3038					;AND PRETEND IT WAS THERE ALL THE TIME
  3039
  3040					TOPS10^IFE TOPS-10,^<
  3041	404147'	050 05 0 00 000220'	SETCRE:	OPEN	5,GENBLK	;OPEN A DUMP MODE OUTPUT FILE
  3042	404150'	254 04 0 00 404150'		  HALT	.		;ON CHANNEL 5
  3043	404151'	077 05 0 00 000111'		ENTER	5,FILFIL
  3044	404152'	254 04 0 00 404152'		  HALT	.
  3045	404153'	513 00 0 00 000114'		HLLZS	FILFIL+.RBEXT
  3046	404154'	402 00 0 00 000115'		SETZM	FILFIL+.RBPRV
  3047	404155'	067 05 0 00 000260'		OUTPUT	5,NEWCCL	;OUTPUT CHEERY MESSAGE
  3048	404156'	071 05 0 00 000000 		RELEAS	5,		;CLOSE THE FILE
  3049	404157'	263 17 0 00 000000 		POPJ	P,		;RETURN TO LOOK UP THE FILE FOR EDITING
  3050					>
  3051					TOPS20^IFE TOPS-20,^<
  3052					SETCRE:	HRROI	T2,FILSPC	;SET UP NEW FILE FOR OUTPUT
  3053						PUSHJ	P,SETOUT
  3054						MOVE	T2,[POINT 7,NEWMSG]
  3055						SETZ	T3,
  3056						SOUT			;WRITE STARTING MESSAGE TO NEW FILE
  3057						MOVEI	T2,15		;END IT ALL WITH A <CR>
  3058						BOUT
  3059						MOVEI	T2,12
  3060						BOUT
  3061						CLOSF			;COMPLETE THE FILE
  3062						  HALTF
  3063						POPJ	P,		;RETURN TO LOOK UP THE FILE FOR EDITING
  3064					>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 20-5
SED	MAC	21-May-74 00:04		Select input file

  3065	404160'	626 05 0 00 000100 	SETERR:	TRZN	F,CRE		;REALLY WANT TO CREATE?
  3066	404161'	254 00 0 00 404164'		JRST	SETER0		;NO - IT'S A REAL ERROR
  3067	404162'	260 17 0 00 404147'		PUSHJ	P,SETCRE	;YES - CREATE THE FILE
  3068	404163'	254 00 0 00 403763'		JRST	SETFL1		;NOW LOOK IT UP
  3069	404164'				SETER0:
  3070	404164'	603 05 0 00 000001 	TOPS10^IFE TOPS-10,^<	TLNE	F,FLG		;WORKING ON A LIST OF EXT'S?
  3071	404165'	254 00 0 00 404175'		JRST	SETER1		;YES - KEEP WORKING
  3072	404166'	332 00 0 00 000114'		SKIPE	FILFIL+.RBEXT	;IS THERE NO CURRENT EXTENSION?
  3073	404167'	254 00 0 00 404202'		JRST	SETER2		;NO - IT'S A REAL ERROR
  3074	404170'	661 05 0 00 000001 		TLO	F,FLG		;YES - TRY SOME USUAL EXTENSIONS
  3075	404171'	200 13 0 00 411612'		MOVE	PT,[POINT 18,EXTTBL]
  3076	404172'	554 01 0 00 000107'		HLRZ	T1,FILBLK+1	;GET DEVICE NAME
  3077	404173'	302 01 0 00 446353 		CAIE	T1,'DSK'	;IS IT DISK?
  3078	404174'	254 00 0 00 404177'		JRST	SETR1A		;NO - TRY USING DEVICE AS EXT, TOO
  3079
  3080	404175'	134 01 0 00 000013 	SETER1:	ILDB	T1,PT		;SET UP ANOTHER EXTENSION
  3081	404176'	322 01 0 00 404202'		JUMPE	T1,SETER2	;UNLESS NONE LEFT; THEN, ERROR
  3082	404177'	516 01 0 00 000114'	SETR1A:	HRLZM	T1,FILFIL+.RBEXT
  3083	404200'	260 17 0 00 407721'		PUSHJ	P,UNPARS	;UNPARSE THESE NEW SPECS
  3084	404201'	254 00 0 00 403763'		JRST	SETFL1
  3085	404202'	621 05 0 00 000001 	SETER2:	TLZ	F,FLG
  3086					>
  3087	404203'	201 01 0 00 411613'		MOVEI	T1,[ASCIZ /##########File not found/]
  3088	404204'	254 00 0 00 410535'		JRST	STFERR		;GO DISPLAY THE ERROR
  3089
  3090	404205'	201 01 0 00 411620'	SETERX:	MOVEI	T1,[ASCIZ /#########No alternate file/]
  3091	404206'	254 00 0 00 410520'		JRST	ERROR
  3092
  3093					;SUBROUTINE TO READ NEXT LINE OF STAT.TMP FILE INTO (T4 - FRAGGED)
  3094					;ENTER ALSO WITH PT/MFLPTR
  3095					;works only with TOPS-10 just now; frags end of pick buffer
  3096
  3097	404207'	200 04 0 00 411626'	SETMFE:	MOVE	T4,[POINT 7,OLDSPC] ;(LET STFERR READ INTO ALTERNATE BLOCK)
  3098	404210'	402 00 0 00 000176'		SETZM	SAVEDP		;CLEAR SAVED DISPLAY POINTER
  3099	404211'	254 00 0 00 404214'		JRST	SETMF0		;CONTINUE
  3100
  3101	404212'	200 04 0 00 411551'	SETMFL:	MOVE	T4,[POINT 7,FILSPC] ;POINT TO FILSPC BLOCK
  3102	404213'	402 00 0 00 002254'		SETZM	DISPTR		;CLEAR DISPLAY PTR SO SPECS WILL BE PARSED
  3103	404214'				SETMF0:
  3104					TOPS20^IFE TOPS-20,^<	POPJ	P,		;TOPS20: APRIL FOOL
  3105					>
  3106					TOPS10^IFE TOPS-10,^<	 ;[CSM] Try TMP:SED before DSK:000SST.TMP (should be there already)
  3107	404214'	200 01 0 00 411627'		MOVE	T1,[1,,STTCCL-1];[CSM] Code to read a file
  3108	404215'	047 01 0 00 000044 		TMPCOR	T1,		;[CSM] Read TMP:SED
  3109	404216'	334 00 0 00 000000 		  SKIPA			;[CSM] Error, try disk
  3110	404217'	254 00 0 00 404226'		 JRST	SETMF1		;[CSM] Got it
  3111					>
  3112	404220'	561 02 0 00 000241'		HRROI	T2,STTFIL
  3113	404221'	260 17 0 00 405670'		PUSHJ	P,SETIN		;GO FIND THE TEMPORARY FILE
  3114	404222'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;IF NONE, JUST RETURN (BUT THERE BETTER BE)
  3115	404223'	400 02 0 00 000000 	TOPS10^IFE TOPS-10,^<	SETZ	T2,
  3116	404224'	066 05 0 00 000246'		INPUT	5,STTCCL	;READ STATUS INTO PICK BUFFER
  3117	404225'	071 05 0 00 000000 		RELEAS	5,
  3118	404226'				SETMF1: >
  3119	404226'	620 05 0 00 004000 		TRZ	F,GFL		;CURRENT FILE IS NO LONGER AROUND
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 20-6
SED	MAC	21-May-74 00:04		Select input file

  3120	404227'	260 17 0 00 410202'		PUSHJ	P,TMPGET	;READ NEW SPECS INTO CURRENT FILE AREA
  3121	404230'	305 01 0 00 000060 		CAIGE	T1,"0"		;IS THERE AN ALPHANUMERIC ON THE NEXT LINE?
  3122	404231'	402 00 0 00 000356'		SETZM	MFLPTR		;NO - FORGET THE POINTER
  3123	404232'	263 17 0 00 000000 		POPJ	P,
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 21
SED	MAC	21-May-74 00:04		The ENTER command

  3124					SUBTTL	The ENTER command
  3125
  3126					;HERE TO ENTER AN ARGUMENT TO A COMMAND
  3127
  3128	404233'	663 05 0 00 000002 	ENTERA:	TLOE	F,ENT		;SAY ENTER TYPED - WAS IT ALREADY?
  3129	404234'	254 00 0 00 404276'		JRST	ENTHLP		;YES - MAYBE GIVE SOME HELP
  3130	404235'	200 01 0 00 411207'		MOVE	T1,[POINT 7,PARBUF] ;POINT TO START OF PARAMETER BUFFER
  3131	404236'	202 01 0 00 002227'		MOVEM	T1,PARPTR
  3132	404237'	124 15 0 00 000330'	ENTER0:	DMOVEM	RW,SAVPOS	;SAVE POSITION, IN CASE OF CURSOR MOVE
  3133	404240'	260 17 0 00 404257'		PUSHJ	P,MRKCUR	;MARK THE CURRENT CURSOR POSITION
  3134	404241'	200 15 0 00 000323'		MOVE	RW,LPP.1	;MOVE TO THE BOTTOM LEFT OF THE SCREEN
  3135	404242'	400 16 0 00 000000 		SETZ	CM,
  3136	404243'	602 05 0 00 000020 		TRNE	F,XCT		;EXECUTING?
  3137	404244'	254 00 0 00 400145'		JRST	LOOP		;YES - DONE NOW
  3138
  3139	404245'	260 17 0 00 410331'	ENTERM:	PUSHJ	P,CBOTOM	;MOVE TO BOTTOM OF SCREEN
  3140	404246'	621 05 0 00 200000 		TLZ	F,FBL		;BOTTOM LINE IS REALLY O.K.
  3141	404247'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN PROTECTION ON
  3142							   ;<
  3143	404250'	201 01 0 00 000076 		MOVEI	T1,">"		;PUT UP ENTER MARK
  3144	404251'	136 01 0 00 000010 		IDPB	T1,TY
  3145	404252'	260 17 0 00 410340'		PUSHJ	P,PROTOF	;TURN OFF PROTECTION
  3146	404253'	623 05 0 00 000001 		TLZE	F,FLG		;WANT TO RETURN (TO RECALL)?
  3147	404254'	263 17 0 00 000000 		POPJ	P,		;YES
  3148	404255'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;ELSE TYPE IT ALL OUT NOW
  3149	404256'	254 00 0 00 400145'		JRST	LOOP
  3150
  3151					;SUBROUTINE TO MARK CURRENT CURSOR POSITION
  3152					;NOTE: EXPECTS CALLER TO CALL PUTTYP TO OUTPUT ALL THIS
  3153
  3154	404257'	260 17 0 00 406040'	MRKCUR:	PUSHJ	P,MAKCPT	;MAKE MARK AT CURSOR POSITION - MAKE POINTER
  3155	404260'	200 02 0 00 002253'		MOVE	T2,CHRPTR	;GET CURSOR POINTER
  3156	404261'	202 02 0 00 000354'		MOVEM	T2,SAVCPT	;SAVE FOR AFTER ENTER
  3157	404262'	602 05 0 00 000020 		TRNE	F,XCT		;EXECUTING?
  3158	404263'	263 17 0 00 000000 		POPJ	P,		;YES - DONE NOW
  3159	404264'	305 03 0 00 000040 		CAIGE	T3," "		;POINTING TO A CONTROL CHARACTER?
  3160						JRST	[CAIE  T3,15	;YES - GOT A <CR>,
  3161							 CAIN  T3,11	;  OR A TAB?
  3162							 MOVEI T3," "	;YES - USE A SPACE INSTEAD
  3163	404265'	254 00 0 00 411630'			 JRST  .+1]
  3164	404266'	202 03 0 00 000327'		MOVEM	T3,CHRCUR	;SAVE IT FOR LATER
  3165	404267'	603 07 0 00 040000 		TLNE	TM,MRK		;WANT TO PUT UP A SPECIAL MARK?
  3166						JRST	[MOVE T1,MAR(TM) ;YES - GET THE MARK
  3167							 IDPB T1,TY	;SAVE IT
  3168	404270'	254 00 0 00 411634'			 POPJ P,]	;AND DISPLAY IT
  3169	404271'	305 03 0 00 000040 		CAIGE	T3," "		;GOT A CONTROL CHARACTER?
  3170	404272'	263 17 0 00 000000 		POPJ	P,		;YES - IT'S ALREADY REVERSED
  3171	404273'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN PROTECTION ON
  3172	404274'	136 03 0 00 000010 		IDPB	T3,TY
  3173	404275'	254 00 0 00 410340'		JRST	PROTOF		;TURN OFF PROTECTION AND RETURN
  3174
  3175					;HERE ON ENTER ENTER. IF SOMETHING ELSE TYPED, IGNORE SECOND ENTER
  3176					;ELSE PREPARE TO GIVE HELP (UNLESS NO HELP [NHP] FLAG IS SET)
  3177
  3178	404276'	200 01 0 00 411207'	ENTHLP:	MOVE	T1,[POINT 7,PARBUF]
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 21-1
SED	MAC	21-May-74 00:04		The ENTER command

  3179	404277'	606 05 0 00 020010 		TRNN	F,NHP!CMV	;REALLY DON'T WANT HELP, CURSOR MOVEMENT,
  3180	404300'	312 01 0 00 002227'		CAME    T1,PARPTR	;  OR HAS PART OF A PARAMETER BEEN TYPED?
  3181	404301'	254 00 0 00 400145'		JRST	LOOP		;EITHER - INGORE THIS EXTRA ENTER
  3182	404302'	201 12 0 00 001000 		MOVEI	DO,1000		;NOTE THAT HELP IS BEING GIVEN
  3183	404303'	120 15 0 00 000330'		DMOVE	RW,SAVPOS	;RESTORE SAVED POSITION
  3184	404304'	260 17 0 00 410337'	ENTHL0:	PUSHJ	P,PROTON	;NEITHER - SAY HELP IS ON THE WAY
  3185	404305'	201 01 0 00 411637'		MOVEI	T1,[ASCIZ /Type any command to get help for it /]
  3186	404306'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3187	404307'	201 01 0 00 411647'		MOVEI	T1,[ASCIZ /(or G to get out): /]
  3188	404310'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3189	404311'	260 17 0 00 410340'		PUSHJ	P,PROTOF
  3190	404312'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;TYPE OUT THE MESSAGE
  3191
  3192	404313'	332 01 0 00 000371'		SKIPE	T1,PIKCNT	;SEE IF PICK BUFFER WILL BE FRAGGED - LOADED?
  3193	404314'	602 05 0 00 000001 		TRNE	F,POV		;  AND NOT ON DISK?
  3194	404315'	254 00 0 00 404321'		JRST	ENTHL1		;NOT LOADED OR ON DISK - O.K.
  3195	404316'	231 01 0 00 000005 		IDIVI	T1,5		;FIND NUMBER OF WORDS USED
  3196	404317'	301 01 0 00 000377 		CAIL	T1,PCBSIZ-201	;WILL HELP MESSAGE FRAG IT?
  3197	404320'	402 00 0 00 000371'		SETZM	PIKCNT		;YES - PRETEND PICK BUFFER IS EMPTY
  3198
  3199	404321'	661 05 0 00 200000 	ENTHL1:	TLO	F,FBL		;BOTTOM LINE IS FRAGGED
  3200	404322'	621 05 0 00 000002 		TLZ	F,ENT		;NO LONGER ENTERING A PARAMETER
  3201	404323'	051 00 0 00 000001 	TOPS10^IFE TOPS-10,^<	INCHRW T1>		;GET CHARACTER FROM TERMINAL
  3202					TOPS20^IFE TOPS-20,^<	TLZE	F,INT		;AT INTERRUPT LEVEL?
  3203						DEBRK			;YES - RETURN FROM IT TO DO THE PBIN
  3204						PBIN			;READ A CHARACTER
  3205					>  ;End of TOPS20
  3206	404324'	405 01 0 00 000177 		ANDI	T1,177		;TOPS-10 reads 8 bits in PIM
  3207	404325'	302 01 0 00 000107 		CAIE	T1,"G"		;GOT A "G"?
  3208	404326'	306 01 0 00 000147 		CAIN	T1,"g"
  3209	404327'	254 00 0 00 404362'		JRST	ENTHLE		;YES - CAN'T GIVE HELP
  3210	404330'	301 01 0 00 000040 		CAIL	T1," "		;SOME CONTROL CHARACTER?
  3211	404331'	254 00 0 00 404364'		JRST	HLPERR		;NO - CAN'T GIVE HELP
  3212	404332'	270 01 0 07 000031 		ADD	T1,ITB(TM)	;GET OFFSET IN TERMINAL TABLE
  3213	404333'	335 01 0 01 000000 	ENTHL2:	SKIPGE	T1,(T1)		;IS IT A NORMAL COMMAND?
  3214	404334'	260 17 0 00 400176'		PUSHJ	P,SUBTAB	;NO - READ MORE CHARACTERS
  3215	404335'	603 07 0 00 400000 		TLNE	TM,LSD		;ARE LINEFEED AND CURSOR-DOWN ALIKE?
  3216						JRST	[CAIN  T1,12	;YES - GOT A LINEFEED?
  3217							 MOVEI T1,34	;YES - IT'S REALLY A CURSOR-DOWN
  3218	404336'	254 00 0 00 411653'			 JRST  .+1]
  3219	404337'				ENTHL3:
  3220					IFE NEWTAB,<
  3221						CAIN	T1,"K"-100	;CONVERT OLD TABLE'S COMMANDS
  3222						JRST	[MOVEI T1,"V"-100
  3223							 JRST  ENTHLO]
  3224						CAIN	T1,"L"-100
  3225						MOVEI	T1,"K"-100
  3226						CAIN	T1,"U"-100
  3227						MOVEI	T1,"L"-100
  3228						CAIN	T1,"N"-100
  3229						MOVEI	T1,"U"-100
  3230						CAIN	T1,"V"-100
  3231						MOVEI	T1,"N"-100
  3232					ENTHLO:
  3233					>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 21-2
SED	MAC	21-May-74 00:04		The ENTER command

  3234	404337'	200 13 0 00 000001 		MOVE	PT,T1		;SAVE INDEX OF COMMAND
  3235					TOPS10^IFE TOPS-10,^<
  3236					IFDEC^IFE FT$TYM,^<	MOVE	T1,[2,,5]
  3237						MOVSI	T2,'HLP'>	;LOOK ON DEVICE HLP:
  3238	404340'	561 01 0 00 777753 	IFTYM^IFN FT$TYM,^<	HRROI	T1,.GTFPN	;Get file PPN
  3239	404341'	047 01 0 00 000041 		GETTAB	T1,		; (the directory that this program came from)
  3240	404342'	201 01 0 00 000000 		  MOVEI	T1,0
  3241	404343'	205 02 0 00 446353 		MOVSI	T2,'DSK'	;Look for file on DSK
  3242					>  ;End IFTYM
  3243	404344'	202 02 0 00 000221'		MOVEM	T2,GENBLK+1
  3244	404345'	201 02 0 00 000301'		MOVEI	T2,HLPFIL
  3245	404346'	260 17 0 00 405671'		PUSHJ	P,SETIN1	;SET UP HELP FILE
  3246	404347'	205 02 0 00 446353 		MOVSI	T2,'DSK'	;GO BACK TO DISK
  3247	404350'	202 02 0 00 000221'		MOVEM	T2,GENBLK+1
  3248	404351'	322 01 0 00 404370'		JUMPE	T1,NHPERR	;IF NOT THERE, SCREAM
  3249	404352'	074 05 0 13 000001 		USETI	5,1(PT)		;READ BLOCK THAT COMMAND IS IN
  3250	404353'	066 05 0 00 000305'		INPUT	5,HLPCCL	;READ IT INTO THE END OF THE PICK BUFFER
  3251	404354'	071 05 0 00 000000 		RELEAS	5,		;GET RID OF FILE
  3252	404355'	260 17 0 00 410353'		PUSHJ	P,CLRALL	;GO HOME AND CLEAR SCREEN
  3253	404356'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;(NOW)
  3254	404357'	051 03 0 00 000773'		OUTSTR	PIKBUF+PCBSIZ-200 ;OUTPUT THE HELP
  3255					>
  3256					TOPS20^IFE TOPS-20,^<	HRROI	T2,HLPFIL
  3257						PUSHJ	P,SETIN		;SET UP HELP FILE
  3258						JUMPE	T1,NHPERR	;IF NOT THERE, SCREAM
  3259						PUSH	P,T1		;SAVE JFN
  3260					
  3261						MOVE	T1,PT		;COMVERT COMMAND TO PAGE AND POSITION
  3262						SETZ	T2,
  3263						LSHC	T1,-2
  3264						ROT	T2,2
  3265						MOVE	PT,T2		;SAVE POSITION IN PAGE
  3266						LSH	PT,7
  3267					
  3268						HRL	T1,(P)		;READ IN THE RIGHT FILE BLOCK
  3269						MOVE	T2,[400000,,377]
  3270						MOVE	T3,[PM%CNT+PM%RD+1]
  3271						PMAP
  3272						PUSHJ	P,CLRALL	;GO HOME AND CLEAR SCREEN
  3273						PUSHJ	P,PUTTYP	;(NOW)
  3274						MOVEI	T1,377000	;OUTPUT THE HELP
  3275						ADD	T1,PT
  3276						PSOUT
  3277						SETO	T1,		;UN-MAP THE BLOCK
  3278						MOVE	T2,[400000,,377]
  3279						MOVE	T3,[PM%CNT+1]
  3280						PMAP
  3281					
  3282						POP	P,T1		;GET JFN AGAIN
  3283						CLOSF			;CLOSE THE FILE
  3284						  HALTF
  3285					>
  3286	404360'	260 17 0 00 410331'		PUSHJ	P,CBOTOM
  3287	404361'	254 00 0 00 404304'		JRST	ENTHL0		;LOOP TO GET NEW OPTION
  3288
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 21-3
SED	MAC	21-May-74 00:04		The ENTER command

  3289	404362'	260 17 0 00 405131'	ENTHLE:	PUSHJ	P,DISPLL	;RE-DISPLAY THE SCREEN
  3290	404363'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION AND LOOP
  3291
  3292	404364'	306 01 0 00 000177 	HLPERR:	CAIN	T1,177		;RUBOUT?
  3293						JRST	[SETO T1,	;YES - GIVE HELP AFTER ALL
  3294	404365'	254 00 0 00 411656'			 JRST ENTHL2]
  3295	404366'	201 01 0 00 411660'		MOVEI	T1,[ASCIZ /##Can only give help for commands/]
  3296	404367'	254 00 0 00 410520'		JRST	ERROR		;ELSE FLAKE
  3297
  3298	404370'	201 01 0 00 411667'	NHPERR:	MOVEI	T1,[ASCIZ /########No help file. Sorry./]
  3299	404371'	254 00 0 00 410520'		JRST	ERROR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 22
SED	MAC	21-May-74 00:04		Roll forward/backward pages

  3300					SUBTTL	Roll forward/backward pages
  3301
  3302					;HERE TO ROLL FORWARD A GIVEN NUMBER OF PAGES (THE EASY WAY)
  3303
  3304	404372'	200 04 0 00 000026'	ROLFWP:	MOVE	T4,ROLPGS	;SET UP LAST TIME'S ROLL AS NOMINAL
  3305	404373'	202 04 0 00 002250'		MOVEM	T4,PARG1
  3306	404374'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  3307	404375'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO ROLL
  3308	404376'	202 04 0 00 000026'		MOVEM	T4,ROLPGS	;SAVE AS NEW NOMINAL
  3309	404377'	260 17 0 00 405716'		PUSHJ	P,RESTPM	;ERASE PARAMETER FIRST
  3310	404400'	200 04 0 00 000026'	RFPNPM:	MOVE	T4,ROLPGS	;SET UP LAST TIME'S ROLL AS NOMINAL
  3311	404401'	220 04 0 07 000023 		IMUL	T4,LPP(TM)	;GET NUMBER OF LINES TO ROLL
  3312	404402'	202 04 0 00 000027'		MOVEM	T4,ROLLS	;SAVE AS ARG TO ROLFW
  3313	404403'	260 17 0 00 404445'		PUSHJ	P,ROLFW		;GO DO THE ROLL
  3314	404404'	254 00 0 00 400145'		JRST	LOOP		;THEN GET ANOTHER COMMAND
  3315
  3316					;HERE TO ROLL BACKWARD A GIVEN NUMBER OF PAGES (ALSO THE EASY WAY)
  3317
  3318	404405'	200 04 0 00 000026'	ROLBKP:	MOVE	T4,ROLPGS	;SET UP LAST TIME'S ROLL AS NOMINAL
  3319	404406'	202 04 0 00 002250'		MOVEM	T4,PARG1
  3320	404407'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  3321	404410'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO ROLL
  3322	404411'	202 04 0 00 000026'		MOVEM	T4,ROLPGS	;SAVE AS NEW NOMINAL
  3323	404412'	260 17 0 00 405716'		PUSHJ	P,RESTPM	;ERASE PARAMETER FIRST
  3324	404413'	200 04 0 00 000026'	RBKNPM:	MOVE	T4,ROLPGS	;SET UP LAST TIME'S ROLL AS NOMINAL
  3325	404414'	220 04 0 07 000023 		IMUL	T4,LPP(TM)	;GET NUMBER OF LINES TO ROLL
  3326	404415'	202 04 0 00 000027'		MOVEM	T4,ROLLS	;SAVE AS ARG TO ROLBK
  3327	404416'	260 17 0 00 404551'		PUSHJ	P,ROLBK		;GO DO THE WORK
  3328	404417'	254 00 0 00 400145'		JRST	INTEND		;AND GET ANOTHER COMMAND
  3329
  3330					;HERE TO ROLL FORWARD A GIVEN NUMBER OF LINES
  3331
  3332	404420'	200 04 0 00 000025'	ROLFWL:	MOVE	T4,ROLLIN	;SET UP LAST TIME'S ROLL AS NOMINAL
  3333	404421'	202 04 0 00 002250'		MOVEM	T4,PARG1
  3334	404422'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  3335						JUMPE	T1,[TLO  F,SCN	;SET FLAG IF WANT SCAN MODE
  3336	404423'	322 01 0 00 411675'			    JRST RFLNPM-1]
  3337	404424'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO ROLL
  3338	404425'	202 04 0 00 000025'		MOVEM	T4,ROLLIN	;SAVE AS NEW NOMINAL
  3339	404426'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ERASE PARAMETER FIRST
  3340	404427'	200 04 0 00 000025'	RFLNPM:	MOVE	T4,ROLLIN	;SET UP LAST TIME'S ROLL AS NOMINAL
  3341	404430'	202 04 0 00 000027'		MOVEM	T4,ROLLS	;SAVE ALSO AS ARG TO ROLFW
  3342	404431'	260 17 0 00 404445'		PUSHJ	P,ROLFW		;GO DO THE ACTUAL ROLLING
  3343	404432'	607 05 0 00 002000 		TLNN	F,SCN		;SCANNING?
  3344	404433'	254 00 0 00 400145'		JRST	INTEND		;NO - GET ANOTHER COMMAND
  3345	404434'	201 01 0 00 002260 		MOVEI	T1,^D1200	;YES - WAIT A BIT
  3346	404435'	047 01 0 00 000072 	TOPS10^IFE TOPS-10,^<	HIBER	T1,
  3347	404436'	255 00 0 00 000000 		  JFCL
  3348					>
  3349					TOPS20^IFE TOPS-20,^<	DISMS
  3350					>
  3351	404437'	607 05 0 00 000040 		TLNN	F,FNC		;IS FENCE ON SCREEN?
  3352	404440'	254 00 0 00 404427'		JRST	RFLNPM		;NO - CONTINUE (UNTIL USER TYPES SOMETHING)
  3353	404441'	621 05 0 00 002000 		TLZ	F,SCN		;YES - TIME TO STOP SCANNING
  3354	404442'	201 15 0 00 000017 		MOVEI	RW,^D15		;PUT CURSOR NEAR CENTER OF SCREEN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 22-1
SED	MAC	21-May-74 00:04		Roll forward/backward pages

  3355	404443'	201 16 0 00 000050 		MOVEI	CM,^D40
  3356	404444'	254 00 0 00 404427'		JRST	RFLNPM		;AND DO THE LAST ONE
  3357
  3358					;SUBROUTINE TO DO THE ACTUAL ROLLING FORWARD (CALLED BY ROLFWL, ROLFWP)
  3359
  3360	404445'	323 04 0 00 405766'	ROLFW:	JUMPLE	T4,POSCUR	;DONE, IF NO ROLL
  3361	404446'	661 05 0 00 000020 		TLO	F,XPB		;SAY BOTTOM POINTER IS INVALID
  3362	404447'	260 17 0 00 406023'		PUSHJ	P,ADVDPT	;MOVE DISPLAY POINTER FORWARD
  3363	404450'	200 04 0 00 000027'		MOVE	T4,ROLLS	;GET LINES TO ROLL AGAIN
  3364	404451'	274 15 0 00 000004 		SUB	RW,T4		;ADJUST CURSOR POSITION
  3365						JUMPL	RW,[TLO   F,XPL!XPC ;LINE AND CHARACTER POINTERS ARE INVALID
  3366							    MOVM  RW,RW
  3367							    SETZB RW,CM	    ;PUT CURSOR AT UPPER LEFT
  3368	404452'	321 15 0 00 411677'			    JRST  .+1]
  3369	404453'	623 05 0 00 000001 		TLZE	F,FLG		;HIT END OF FILE?
  3370	404454'	254 00 0 00 404513'		JRST	ROLFW2-1	;YES - GO REWRITE THE SCREEN
  3371	404455'	607 07 0 00 020000 		TLNN	TM,NRU		;NO ROLL UP SEQUENCE,
  3372	404456'	311 04 0 07 000023 		CAML	T4,LPP(TM)	;  OR WANT TO ROLL MORE THAN A SCREENFUL?
  3373	404457'	254 00 0 00 404514'		JRST	ROLFW2		;YES - GO REWRITE THE SCREEN
  3374
  3375	404460'	260 17 0 00 410356'		PUSHJ	P,CMVBTM	;MOVE TO BOTTOM LINE
  3376	404461'	603 05 0 00 200040 		TLNE	F,FNC!FBL	;IS FENCE THERE?
  3377	404462'	260 17 0 00 410332'		PUSHJ	P,CLRLNA	;YES - ERASE IT
  3378	404463'	260 17 0 00 410350'		PUSHJ	P,ROLLUP	;DO A ROLL
  3379	404464'	367 04 0 00 404463'		SOJG	T4,.-1		;LOOP THROUGH PROPER NUMBER OF LINES
  3380
  3381	404465'	200 04 0 07 000023 		MOVE	T4,LPP(TM)	;POSITION TO START OF LINES TO REWRITE
  3382	404466'	274 04 0 00 000027'		SUB	T4,ROLLS
  3383	404467'	202 04 0 00 000310'		MOVEM	T4,SAVEAC	;SAVE POSITION COUNT
  3384	404470'	200 13 0 00 002254'	ROLFW1:	MOVE	PT,DISPTR
  3385	404471'	607 05 0 00 200000 		TLNN	F,FBL		;IS BOTTOM LINE ON SCREEN BAD?
  3386	404472'	603 07 0 00 004000 		TLNE	TM,NEL		;..
  3387	404473'	360 04 0 00 000000 		SOJ	T4,		;YES - WRITE FROM ONE HIGHER
  3388	404474'	260 17 0 00 406247'		PUSHJ	P,ADVLPT	;ELSE GET POINTER TO START OF NEW STUFF
  3389						JUMPL	T4,[PUSHJ P,FNCPUT ;IF BEYOND FILE OUTPUT THE FENCE
  3390	404475'	321 04 0 00 411703'			    JRST  POSCUR]  ;POSITION CURSOR AND RETURN
  3391	404476'	200 04 0 00 000310'		MOVE	T4,SAVEAC	;RESTORE POSITION COUNT
  3392	404477'	607 05 0 00 200000 		TLNN	F,FBL		;IS BOTTOM LINE ON SCREEN BAD?
  3393	404500'	603 07 0 00 004000 		TLNE	TM,NEL		;..
  3394	404501'	360 04 0 00 000000 		SOJ	T4,		;YES - WRITE FROM ONE HIGHER
  3395	404502'	260 17 0 00 405764'		PUSHJ	P,POSLIN	;POSITION CURSOR AT THE LINE
  3396	404503'	200 04 0 00 000027'		MOVE	T4,ROLLS	;DISPLAY THE MISSING LINES
  3397	404504'	603 05 0 00 200000 		TLNE	F,FBL		;IS BOTTOM LINE ON SCREEN BAD?
  3398	404505'	340 04 0 00 000000 		AOJ	T4,		;YES - WRITE ONE MORE LINE
  3399	404506'	621 05 0 00 200040 		TLZ	F,FNC!FBL	;FENCE WILL BE RE-DRAWN; BOTTOM LINE IS O.K.
  3400	404507'	260 17 0 00 405175'		PUSHJ	P,DISPLY	;REWRITE BOTTOM OF THE SCREEN
  3401	404510'	602 05 0 00 000200 		TRNE	F,IMD		;IN INSERT MODE?
  3402	404511'	260 17 0 00 401471'		PUSHJ	P,INSMSG	;YES - PUT MESSAGE UP
  3403	404512'	254 00 0 00 405766'		JRST	POSCUR		;RE-POSITION THE CURSOR AND RETURN
  3404
  3405	404513'	270 15 0 00 000004 		ADD	RW,T4		;DE-ADJUST CURSOR POSITION (AT EOF)
  3406	404514'	260 17 0 00 405131'	ROLFW2:	PUSHJ	P,DISPLL	;RE-DO THE WHOLE SCREEN
  3407	404515'	254 00 0 00 405766'		JRST	POSCUR		;RE-POSITION THE CURSOR AND RETURN
  3408
  3409					;HERE TO ROLL BACKWARD A GIVEN NUMBER OF LINES
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 22-2
SED	MAC	21-May-74 00:04		Roll forward/backward pages

  3410
  3411	404516'	200 04 0 00 000025'	ROLBKL:	MOVE	T4,ROLLIN	;SET UP LAST TIME'S ROLL AS NOMINAL
  3412	404517'	607 05 0 00 000002 		TLNN	F,ENT		;IS THERE A PARAMETER TYPED?
  3413	404520'	254 00 0 00 404527'		JRST	RBLNPM		;NO - USE THE ONE ALREADY SET UP
  3414	404521'	202 04 0 00 002250'		MOVEM	T4,PARG1
  3415	404522'	260 17 0 00 407166'		PUSHJ	P,PEEL.1	;READ NEW ARG, IF ANY
  3416						JUMPE	T1,[TLO  F,SCN	;SET FLAG IF WANT SCAN MODE
  3417							    MOVE T4,ROLLIN ;GET SIZE OF SCAN
  3418	404523'	322 01 0 00 411705'			    JRST RBLNPM-1]
  3419	404524'	200 04 0 00 002250'		MOVE	T4,PARG1	;GET LINES TO ROLL
  3420	404525'	202 04 0 00 000025'		MOVEM	T4,ROLLIN	;SAVE AS NEW NOMINAL
  3421	404526'	260 17 0 00 405716'		PUSHJ	P,RESTPM	;ERASE PARAMETER
  3422	404527'	202 04 0 00 000027'	RBLNPM:	MOVEM	T4,ROLLS	;SAVE ALSO AS ARG TO ROLBK
  3423	404530'	261 17 0 00 000005 		PUSH	P,F		;SAVE FENCE FLAG FOR LATER
  3424	404531'	260 17 0 00 404551'		PUSHJ	P,ROLBK		;DO THE ACTUAL WORK
  3425	404532'	262 17 0 00 000001 		POP	P,T1		;GET OLD FLAGS BACK
  3426	404533'	603 01 0 00 000040 		TLNE	T1,FNC		;DID FENCE USED TO BE ON SCREEN?
  3427	404534'	260 17 0 00 404544'		PUSHJ	P,RBLFNC	;YES - SEE IF IT NEEDS TO BE UP NOW
  3428	404535'	607 05 0 00 002000 		TLNN	F,SCN		;SCANNING?
  3429	404536'	254 00 0 00 400145'		JRST	LOOP		;NO - GET ANOTHER COMMAND
  3430	404537'	201 01 0 00 002260 		MOVEI	T1,^D1200	;NO - WAIT A BIT
  3431	404540'	047 01 0 00 000072 	TOPS10^IFE TOPS-10,^<	HIBER	T1,
  3432	404541'	255 00 0 00 000000 		  JFCL
  3433					>
  3434					TOPS20^IFE TOPS-20,^<	DISMS
  3435					>
  3436	404542'	200 04 0 00 000025'		MOVE	T4,ROLLIN	;GET SIZE OF ROLL AGAIN
  3437	404543'	254 00 0 00 404527'		JRST	RBLNPM		;AND CONTINUE (UNTIL USER TYPES SOMETHING)
  3438
  3439	404544'	260 17 0 00 406234'	RBLFNC:	PUSHJ	P,MAKBPT	;YES - RE-MAKE PTR TO BOTTOM OF SCREEN
  3440	404545'	621 05 0 00 000020 		TLZ	F,XPB		;MARK THAT IT'S GOOD
  3441	404546'	326 13 0 00 400543'		JUMPN	PT,CPOPJ	;IF NOT BEYOND END OF FILE, O.K.
  3442	404547'	260 17 0 00 410477'		PUSHJ	P,FNCPUT
  3443	404550'	254 00 0 00 405766'		JRST	POSCUR		;POSITION CURSOR AND RETURN
  3444
  3445					;SUBROUTINE TO ROLL BACKWARDS (CALLED BY ROLBKL AND ROLBKP)
  3446					;IT CAN'T JUST BE A FLOW, SINCE ONE GOES TO LOOP AND THE OTHER DEBRK'S
  3447
  3448	404551'	323 04 0 00 405766'	ROLBK:	JUMPLE	T4,POSCUR	;DONE IF NO ROLL
  3449	404552'	661 05 0 00 000020 		TLO	F,XPB		;SAY BOTTOM POINTER IS INVALID
  3450	404553'	260 17 0 00 405776'		PUSHJ	P,BAKDPT	;MOVE DISPLAY POINTER BACKWARD (T4) LINES
  3451	404554'	322 04 0 00 404561'		JUMPE	T4,ROLBK1	;HIT START OF FILE?
  3452	404555'	623 05 0 00 002000 		TLZE	F,SCN		;YES - SCANNING?
  3453						JRST	[MOVEI RW,^D5	;YES - PUT CURSOR NEAR CENTER OF SCREEN
  3454							 MOVEI CM,^D40
  3455	404556'	254 00 0 00 411710'			 JRST  .+1]	;AND CONTINUE
  3456	404557'	622 05 0 00 000020 		TRZE	F,XCT		;ALSO STOP EXECUTING - WERE WE?
  3457	404560'	254 00 0 00 403720'		JRST	XCEERR		;YES - GIVE SPECIAL MESSAGE
  3458	404561'	213 00 0 00 000004 	ROLBK1:	MOVNS	T4		;SUBTRACT FROM LINES ROLLED
  3459	404562'	273 04 0 00 000027'		ADDB	T4,ROLLS	;  (BOTH IN ROLLIN AND IN T4)
  3460	404563'	210 01 0 00 000004 		MOVN	T1,T4
  3461	404564'	322 04 0 00 405766'		JUMPE	T4,POSCUR	;IF ALREADY AT START OF BUFFER, QUIT
  3462	404565'	270 15 0 00 000004 		ADD	RW,T4		;ADJUST CURSOR POSITION
  3463	404566'	315 15 0 07 000023 		CAMGE	RW,LPP(TM)	;WILL CURSOR BE OFF THE SCREEN?
  3464	404567'	254 00 0 00 404572'		JRST	.+3		;NO - O.K.
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 22-3
SED	MAC	21-May-74 00:04		Roll forward/backward pages

  3465	404570'	403 15 0 00 000016 		SETZB	RW,CM		;YES - PUT IT AT UPPER LEFT
  3466	404571'	621 05 0 00 200000 		TLZ	F,FBL		;BOTTOM LINE IS ALL RIGHT
  3467	404572'	661 05 0 00 000014 		TLO	F,XPL!XPC	;LINE AND CHARACTER POINTERS ARE INVALID
  3468	404573'	607 07 0 00 010000 		TLNN	TM,NRD		;NO ROLL DOWN SEQUENCE,
  3469	404574'	311 04 0 07 000023 		CAML	T4,LPP(TM)	;  OR WANT TO ROLL MORE THAN A SCREENFUL?
  3470	404575'	254 00 0 00 404613'		JRST	ROLBK2		;EITHER - JUST REWRITE THE SCREEN
  3471
  3472	404576'	260 17 0 00 410355'		PUSHJ	P,CHOME		;HOME THE CURSOR
  3473	404577'	260 17 0 00 410351'		PUSHJ	P,ROLLDN	;ROLL AND CLEAR A LINE
  3474	404600'	367 04 0 00 404577'		SOJG	T4,.-1		;DO THE PHYSICAL ROLL OF THE SCREEN
  3475
  3476	404601'	200 13 0 00 002254'		MOVE	PT,DISPTR	;POINT TO DESIRED POSITION IN BUFFER
  3477	404602'	200 04 0 00 000027'		MOVE	T4,ROLLS	;GET NUMBER OF LINES TO REWRITE
  3478	404603'	260 17 0 00 405175'		PUSHJ	P,DISPLY	;REWRITE THEN
  3479	404604'	621 05 0 00 000020 		TLZ	F,XPB		;SAY BOTTOM POINTER IS VALID
  3480	404605'	260 17 0 00 406234'		PUSHJ	P,MAKBPT	;RE-MAKE POINTER TO BOTTOM OF SCREEN
  3481	404606'	322 13 0 00 405766'		JUMPE	PT,POSCUR	;IF FENCE IS UP, LEAVE IT UP
  3482	404607'	621 05 0 00 000040 		TLZ	F,FNC		;ELSE TAKE IT DOWN
  3483	404610'	602 05 0 00 000200 		TRNE	F,IMD		;IN INSERT MODE?
  3484	404611'	260 17 0 00 401471'		PUSHJ	P,INSMSG	;YES - OUTPUT INSERT MESSAGE
  3485	404612'	254 00 0 00 405766'		JRST	POSCUR		;RE-POSITION THE CURSOR AND RETURN
  3486
  3487	404613'	260 17 0 00 405131'	ROLBK2:	PUSHJ	P,DISPLL	;RE-DO THE WHOLE SCREEN
  3488	404614'	260 17 0 00 405716'		PUSHJ	P,RESTPM	;ERASE PARAMETER
  3489	404615'	621 05 0 00 000040 		TLZ	F,FNC		;NO WAY FENCE CAN BE ON SCREEN
  3490	404616'	254 00 0 00 405766'		JRST	POSCUR		;POSITION THE CURSOR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 23
SED	MAC	21-May-74 00:04		RESET command

  3491					SUBTTL	RESET command
  3492
  3493					;HERE ON RESET (ALIAS RUBOUT) RESETS ENTER MODE, OR RE-WRITES SCREEN
  3494
  3495	404617'	200 15 0 00 000330'	RESET:	MOVE	RW,SAVPOS	;RESTORE SAVED POSITION
  3496	404620'	200 16 0 00 000331'		MOVE	CM,SAVPOS+1
  3497	404621'	200 02 0 00 002227'		MOVE	T2,PARPTR	;DID USER TYPE JUST ENTER RESET?
  3498	404622'	312 02 0 00 411207'		CAME	T2,[POINT 7,PARBUF]
  3499	404623'	316 02 0 00 411210'		CAMN	T2,[010700,,PARBUF-1]
  3500	404624'	254 00 0 00 404636'		JRST	RESET1		;YES - LEAVE BUFFER ALONE
  3501	404625'	400 01 0 00 000000 		SETZ	T1,		;ELSE END PARAMETER BUFFER WITH A NULL
  3502	404626'	136 01 0 00 000002 		IDPB	T1,T2
  3503	404627'	200 02 0 00 411207'		MOVE	T2,[POINT 7,PARBUF]
  3504	404630'	134 01 0 00 000002 		ILDB	T1,T2		;GET 1ST CHARACTER OF ARG
  3505	404631'	306 01 0 00 000136 		CAIN	T1,136		;UP-ARROW?
  3506						JRST	[PUSHJ P,RESTPM ;YES - RESET ENTER PARAMETERS
  3507							 PUSHJ P,DISPLL ;RE-DISPLAY THE SCREEN
  3508	404632'	254 00 0 00 411713'			 JRST  RESNPM]	;AND GO RE-POSITION THE CURSOR
  3509	404633'	260 17 0 00 405722'	RESET2:	PUSHJ	P,ERASPM	;ERASE THE PARAMETER
  3510	404634'	260 17 0 00 405766'	RESNPM:	PUSHJ	P,POSCUR	;AND RE-POSITION THE CURSOR
  3511	404635'	254 00 0 00 400145'		JRST	INTEND		;AND GET ANOTHER COMMAND
  3512
  3513	404636'	602 05 0 00 000010 	RESET1:	TRNE	F,CMV		;CURSOR MOVE?
  3514	404637'	254 00 0 00 404633'		JRST    RESET2          ;YES - THEN IT'S NOT A TOKEN
  3515	404640'	623 05 0 00 000004 		TLZE	F,XPL		;ELSE RE-DO CURRENT LINE
  3516	404641'	260 17 0 00 406157'		PUSHJ	P,MAKLPT	;RE-MAKE LINE POINTER, IF NEEDED
  3517	404642'	260 17 0 00 405166'		PUSHJ	P,DISONL
  3518	404643'	254 00 0 00 404633'		JRST	RESET2		;CONTINUE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 24
SED	MAC	21-May-74 00:04		Change switch settings

  3519					SUBTTL	Change switch settings
  3520
  3521					;HERE FOR THE COMMAND TO SET A NUMBER OF SWITCHES
  3522
  3523	404644'	200 01 0 00 002227'	SWITCH:	MOVE	T1,PARPTR	;DID USER TYPE JUST ENTER SWITCH?
  3524	404645'	312 01 0 00 411207'		CAME	T1,[POINT 7,PARBUF]
  3525	404646'	316 01 0 00 411210'		CAMN	T1,[010700,,PARBUF-1]
  3526	404647'	254 00 0 00 404750'		JRST	SWHSTS		;YES - GIVE HIM SOME STATUS INFORMATION
  3527	404650'	260 17 0 00 405722'		PUSHJ	P,ERASPM	;ELSE ERASE ARGUMENT
  3528	404651'	400 01 0 00 000000 		SETZ	T1,		;END PARAMETER WITH A NULL
  3529	404652'	136 01 0 00 002227'		IDPB	T1,PARPTR
  3530	404653'	200 02 0 00 411207'		MOVE	T2,[POINT 7,PARBUF]
  3531	404654'	200 03 0 00 000002 		MOVE	T3,T2
  3532	404655'	134 01 0 00 000003 		ILDB	T1,T3		;GET FIRST CHARACTER
  3533	404656'	306 01 0 00 000057 		CAIN	T1,"/"		;SUPERFLUOUS SLASH?
  3534	404657'	200 02 0 00 000003 		MOVE	T2,T3		;YES - SKIP IT
  3535	404660'	260 17 0 00 406415'		PUSHJ	P,SWHMNY	;HANDLE THE SWITCH(S) IN THE PARAMETER BUFFER
  3536	404661'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND GET NEW COMMAND
  3537
  3538					;HERE ON SWITCH WITH NO PARAMETER: GIVE FILE STATUS
  3539
  3540	404662'	260 17 0 00 410331'	SWHNPM:	PUSHJ	P,CBOTOM	;MOVE TO BOTTOM LINE AND CLEAR IT
  3541	404663'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;DO THAT MOVE NOW
  3542	404664'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN PROTECTION ON
  3543	404665'	201 01 0 00 411716'		MOVEI	T1,[ASCIZ /File: /]
  3544	404666'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3545	404667'	201 01 0 00 000072'		MOVEI	T1,FILSPC
  3546	404670'	260 17 0 00 410442'		PUSHJ	P,PUTSTF
  3547
  3548	404671'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;MAKE A GOOD CHARACTER POINTER
  3549	404672'	200 02 0 00 000015 		MOVE	T2,RW		;SAVE REAL ROW POINTER
  3550	404673'	200 13 0 00 411073'		MOVE	PT,[010700,,BUFFER-1]
  3551	404674'	260 17 0 00 406342'		PUSHJ	P,FINDRW	;COUNT PAGES AND LINES FROM START OF BUFFER
  3552	404675'	250 02 0 00 000015 		EXCH	T2,RW
  3553	404676'	250 02 0 00 000310'		EXCH	T2,SAVEAC
  3554
  3555	404677'	336 00 0 00 000362'		SKIPN	PAGFLG		;WANT BOTH PAGES AND LINES?
  3556	404700'	254 00 0 00 404712'		JRST	SWHNP1		;NO - JUST LINES
  3557	404701'	201 01 0 00 411720'		MOVEI	T1,[ASCIZ / Page: /]
  3558	404702'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3559	404703'	201 01 0 03 000001 		MOVEI	T1,1(T3)	;GET PAGE NUMBER
  3560	404704'	260 17 0 00 410466'		PUSHJ	P,PUTNUM	;OUTPUT PAGE
  3561	404705'	201 01 0 00 000055 		MOVEI	T1,"-"
  3562	404706'	136 01 0 00 000010 		IDPB	T1,TY
  3563	404707'	350 01 0 00 000310'		AOS	T1,SAVEAC	;GET LINE NUMBER
  3564	404710'	260 17 0 00 410466'		PUSHJ	P,PUTNUM	;OUTPUT IT
  3565	404711'	254 00 0 00 404716'		JRST	SWHNP2		;SKIP LINES-ONLY STUFF
  3566
  3567	404712'	201 01 0 00 411722'	SWHNP1:	MOVEI	T1,[ASCIZ / Line: /]
  3568	404713'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3569	404714'	201 01 0 02 000001 		MOVEI	T1,1(T2)	;GET LINE NUMBER
  3570	404715'	260 17 0 00 410466'		PUSHJ	P,PUTNUM	;OUTPUT IT
  3571
  3572	404716'	201 01 0 00 000050 	SWHNP2:	MOVEI	T1,"("
  3573	404717'	136 01 0 00 000010 		IDPB	T1,TY
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 24-1
SED	MAC	21-May-74 00:04		Change switch settings

  3574	404720'	550 01 0 00 002252'		HRRZ	T1,LINPTR	;GET OFFET OF PAGE INTO BUFFER
  3575	404721'	275 01 0 00 002256'		SUBI	T1,BUFFER-1
  3576	404722'	221 01 0 00 000144 		IMULI	T1,^D100	;TIMES 100
  3577	404723'	550 02 0 00 000014 		HRRZ	T2,EN		;DIVIDED BY SIZE OF FILE
  3578	404724'	275 02 0 00 002257'		SUBI	T2,BUFFER
  3579	404725'	230 01 0 00 000002 		IDIV	T1,T2
  3580	404726'	260 17 0 00 410466'		PUSHJ	P,PUTNUM	;OUTPUT PERCENT THROUGH FILE
  3581
  3582	404727'	201 01 0 00 411724'		MOVEI	T1,[ASCIZ /%) Pos: /]
  3583	404730'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3584	404731'	201 01 0 16 000001 		MOVEI	T1,1(CM)	;OUTPUT COLUMN + SLIDE + 1
  3585	404732'	270 01 0 00 000011 		ADD	T1,SL
  3586	404733'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3587	404734'	336 00 0 00 000134'		SKIPN	OLDSPC		;GOT AN ALTERNATE FILE?
  3588	404735'	254 00 0 00 404742'		JRST	SWHNPE		;NO - DON'T TALK ABOUT IT
  3589	404736'	201 01 0 00 411726'		MOVEI	T1,[ASCIZ / Alt: /]
  3590	404737'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3591	404740'	201 01 0 00 000134'		MOVEI	T1,OLDSPC
  3592	404741'	260 17 0 00 410442'		PUSHJ	P,PUTSTF
  3593	404742'	201 01 0 00 000040 	SWHNPE:	MOVEI	T1," "
  3594	404743'	136 01 0 00 000010 		IDPB	T1,TY
  3595	404744'	136 01 0 00 000010 		IDPB	T1,TY
  3596	404745'	260 17 0 00 410340'		PUSHJ	P,PROTOF	;TURN PROTECTION OFF
  3597	404746'	661 05 0 00 200000 		TLO	F,FBL		;SAY BOTTOM LINE HAS BEEN FRAGGED
  3598	404747'	254 00 0 00 405127'		JRST	DISCUR		;RE-POSITION CURSOR AND RETURN
  3599
  3600					;HERE ON ENTER SWITCH WITH NO PARAMETER: GIVE NOMINAL SETTINGS
  3601
  3602	404750'	260 17 0 00 405716'	SWHSTS:	PUSHJ	P,RESTPM	;CLEAN UP THE PARAMETER ENTRY
  3603	404751'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;MOVE TO BOTTOM LINE AND CLEAR IT
  3604	404752'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN PROTECTION ON
  3605	404753'	201 01 0 00 411730'		MOVEI	T1,[ASCIZ / RL: /]
  3606	404754'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3607	404755'	200 01 0 00 000025'		MOVE	T1,ROLLIN	;OUTPUT NUMBER OF LINES TO ROLL
  3608	404756'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3609	404757'	201 01 0 00 411732'		MOVEI	T1,[ASCIZ /, RP: /]
  3610	404760'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3611	404761'	200 01 0 00 000026'		MOVE	T1,ROLPGS	;OUTPUT NUMBER OF PAGES TO ROLL
  3612	404762'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3613	404763'	201 01 0 00 411734'		MOVEI	T1,[ASCIZ /, PC: /]
  3614	404764'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3615	404765'	200 01 0 00 000030'		MOVE	T1,GOPERC	;OUTPUT PERCENT-GOTO NOMINAL
  3616	404766'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3617	404767'	201 01 0 00 411736'		MOVEI	T1,[ASCIZ /, SL: /]
  3618	404770'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3619	404771'	200 01 0 00 000045'		MOVE	T1,SLIDES	;OUTPUT SIZE OF SLIDE
  3620	404772'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3621	404773'	201 01 0 00 411740'		MOVEI	T1,[ASCIZ /, IL: /]
  3622	404774'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3623	404775'	200 01 0 00 000023'		MOVE	T1,ADDLNS	;OUTPUT NUMBER OF LINES TO INSERT/DELETE
  3624	404776'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3625	404777'	336 01 0 00 000024'		SKIPN	T1,ADDLSP	;GOT SPACES TO GO WITH THOSE LINES?
  3626	405000'	254 00 0 00 405005'		JRST	SWHST1		;NO - SKIP OUTPUT
  3627	405001'	201 01 0 00 000054 		MOVEI	T1,","
  3628	405002'	136 01 0 00 000010 		IDPB	T1,TY
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 24-2
SED	MAC	21-May-74 00:04		Change switch settings

  3629	405003'	200 01 0 00 000024'		MOVE	T1,ADDLSP	;AND SPACES TO GO WITH THOSE LINES
  3630	405004'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3631	405005'	201 01 0 00 411742'	SWHST1:	MOVEI	T1,[ASCIZ /, IS: /]
  3632	405006'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3633	405007'	200 01 0 00 000020'		MOVE	T1,ADDSPC	;OUTPUT NUMBER OF SPACES TO INSERT/DELETE
  3634	405010'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3635	405011'	201 01 0 00 411744'		MOVEI	T1,[ASCIZ /, PK: /]
  3636	405012'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3637	405013'	200 01 0 00 000043'		MOVE	T1,PICKLN	;OUTPUT NUMBER OF LINES TO PICK
  3638	405014'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3639	405015'	336 01 0 00 000044'		SKIPN	T1,PICKSP	;GOT SPACES TO GO WITH THOSE LINES?
  3640	405016'	254 00 0 00 405023'		JRST	SWHST2		;NO - SKIP OUTPUT
  3641	405017'	201 01 0 00 000054 		MOVEI	T1,","
  3642	405020'	136 01 0 00 000010 		IDPB	T1,TY
  3643	405021'	200 01 0 00 000044'		MOVE	T1,PICKSP	;AND SPACES TO PICK, TOO
  3644	405022'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3645	405023'	201 01 0 00 411746'	SWHST2:	MOVEI	T1,[ASCIZ /, TB: /]
  3646	405024'	260 17 0 00 410365'		PUSHJ	P,PUTSTG	;OUTPUT SIZE OF TAB
  3647	405025'	602 05 0 00 000400 		TRNE	F,WTB		;GOT WORD-WISE TABS?
  3648						JRST	[MOVEI T1,"W"	;YES - CALL THEM SIZE "W"
  3649							 IDPB  T1,TY
  3650	405026'	254 00 0 00 411750'			 JRST  SWHST3]
  3651	405027'	200 01 0 00 000343'		MOVE	T1,TABLEN	;NO - OUTPUT SIZE OF TAB
  3652	405030'	260 17 0 00 410466'		PUSHJ	P,PUTNUM
  3653	405031'	336 00 0 00 000033'	SWHST3:	SKIPN	SRCKEY		;GOT A SEARCH KEY?
  3654	405032'	254 00 0 00 404742'		JRST	SWHNPE		;NO
  3655	405033'	201 01 0 00 411753'		MOVEI	T1,[ASCIZ /; Key: /]
  3656	405034'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  3657	405035'	201 01 0 00 000033'		MOVEI	T1,SRCKEY
  3658	405036'	260 17 0 00 410373'		PUSHJ	P,PUTSTC
  3659	405037'	254 00 0 00 404742'		JRST	SWHNPE		;FINISH OFF
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 25
SED	MAC	21-May-74 00:04		RECALL command

  3660					SUBTTL	RECALL command
  3661
  3662					;HERE TO DO A RECALL COMMAND -
  3663					;GIVES BACK PREVIOUS ARGUMENT FOR EDITING AND REUSING
  3664
  3665	405040'	661 05 0 00 000003 	RECALL:	TLO	F,ENT!FLG	;PRETEND ENTER WAS TYPED
  3666	405041'	200 01 0 00 002227'		MOVE	T1,PARPTR
  3667	405042'	316 01 0 00 411207'		CAMN	T1,[POINT 7,PARBUF]
  3668	405043'	260 17 0 00 405056'		PUSHJ	P,RECAL1	;FUDGE, IF POINTER HAS BEEN RESET
  3669	405044'	260 17 0 00 404237'		PUSHJ	P,ENTER0	;SET UP LIKE AN ENTER
  3670	405045'	200 01 0 00 002227'		MOVE	T1,PARPTR	;GET RID OF NULL AT END OF PARAMETER BUFFER
  3671	405046'	270 01 0 00 411204'		ADD	T1,[70000,,0]	;FUDGE A DECREMENT OF THE PARM POINTER
  3672	405047'	325 01 0 00 405051'		JUMPGE	T1,.+2
  3673	405050'	274 01 0 00 411175'		SUB	T1,[430000,,1]
  3674	405051'	202 01 0 00 002227'		MOVEM	T1,PARPTR
  3675	405052'	201 01 0 00 002230'		MOVEI	T1,PARBUF	;OUTPUT CURRENT PARAMETER
  3676	405053'	260 17 0 00 410372'		PUSHJ	P,PUTSTS
  3677	405054'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;TYPE IT ALL OUT NOW
  3678	405055'	254 00 0 00 400145'		JRST	LOOP		;LET USER EDIT IT
  3679
  3680	405056'	134 02 0 00 000001 	RECAL1:	ILDB	T2,T1		;IF BUFFER NOT EMPTY SET UP LATEST PARAMETER
  3681	405057'	326 02 0 00 405056'		JUMPN	T2,.-1		;  BY POINTING TO FIRST NULL
  3682	405060'	202 01 0 00 002227'		MOVEM	T1,PARPTR
  3683	405061'	263 17 0 00 000000 		POPJ	P,
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 26
SED	MAC	21-May-74 00:04		REAL TAB, MARK, and COUNTER

  3684					SUBTTL	REAL TAB, MARK, and COUNTER
  3685
  3686					;HERE TO INSERT A REAL TAB IN THE FILE - SAME AS IF USER TYPED E-C-C I
  3687
  3688	405062'	201 01 0 00 000111 	REALTB:	MOVEI	T1,"I"		;GET AN I
  3689	405063'	661 05 0 00 000100 		TLO	F,CCH		;MAKE IT BE A CONTROL CHARACTER
  3690	405064'	201 02 0 00 000017 		MOVEI	T2,"O"-100
  3691	405065'	602 05 0 00 000040 		TRNE	F,XSV		;SAVING IN EXECUTE BUFFER?
  3692	405066'	137 02 0 00 000050'		DPB	T2,XCTPTW	;YES - MAKE REAL TAB LOOK LIKE E-C-C
  3693	405067'	254 00 0 00 400236'		JRST	ALPNUM		;EITHER WAY, TREAT IT LIKE E-C-C I
  3694
  3695					;**********************************************************************
  3696					;HERE TO MARK POSITION FOR PICK OR CLOSE-LINES. THE NEXT SUCH COMMAND
  3697					;WILL TAKE TEXT FROM THE MARK TO THE CURSOR POSITION.
  3698
  3699	405070'	200 01 0 00 002254'	MARK:	MOVE	T1,DISPTR
  3700	405071'	202 01 0 00 000355'		MOVEM	T1,MRKPTR	;SAVE CURRENT DISPLAY POINTER
  3701	405072'	661 05 0 00 400000 		TLO	F,PCM		;SET MARK FLAG
  3702	405073'	202 15 0 00 000332'		MOVEM	RW,SVPMRK	;SAVE STARTING POSITION
  3703	405074'	202 16 0 00 000333'		MOVEM	CM,SVPMRK+1
  3704	405075'	260 17 0 00 404257'		PUSHJ	P,MRKCUR	;MARK THE CURSOR POSITION
  3705	405076'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;RE-POSITION AND OUTPUT
  3706	405077'	254 00 0 00 400145'		JRST	LOOP		;THAT'S ALL
  3707
  3708					;**********************************************************************
  3709					;HERE TO WORK WITH THE INCREMENTING COUNTER
  3710					;NO PARAMETER: RESET COUNTER; PARAMETER: INCLUDE COUNTER IN PARM
  3711
  3712	405100'	402 00 0 00 000066'	CNTNPM:	SETZM	COUNTS		;RESET COUNTER
  3713	405101'	254 00 0 00 400145'		JRST	LOOP		;THAT'S ALL
  3714
  3715	405102'	201 01 0 00 000177 	COUNTR:	MOVEI	T1,177		;SAVE COUNTER FLAG IN BUFFER
  3716	405103'	136 01 0 00 002227'		IDPB	T1,PARPTR
  3717	405104'	136 01 0 00 002227'		IDPB	T1,PARPTR
  3718	405105'	260 17 0 00 405107'		PUSHJ	P,PUTCNT	;NO - OUTPUT COUNTER FLAG
  3719	405106'	254 00 0 00 400145'		JRST	LOOP		;YES - NO OUTPUT
  3720
  3721	405107'	201 01 0 00 000043 	PUTCNT:	MOVEI	T1,"#"		;OUTPUT COUNTER FLAG
  3722	405110'	136 01 0 00 000010 		IDPB	T1,TY
  3723	405111'	254 00 0 00 410451'		JRST	PUTTYP
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 27
SED	MAC	21-May-74 00:04		Utility subroutines

  3724					SUBTTL	Utility subroutines
  3725
  3726					;**********************************************************************
  3727					;			UTILITY SUBROUTINES
  3728					;**********************************************************************
  3729					;THE ROUTINES BELOW DEAL WITH DISPLAYING PART OF THE BUFFER ON THE SCREEN
  3730
  3731					;HERE TO DISPLAY FROM THE LINE THE CURSOR IS ON TO THE BOTTOM,
  3732					;POSITION THE CURSOR WHERE IT BELONGS, AND GO GET A NEW COMMAND
  3733
  3734	405112'	602 05 0 00 000020 	DISDWN:	TRNE	F,XCT		;DOING AN EXECUTE?
  3735	405113'	254 00 0 00 405127'		JRST	DISCUR		;YES - NO DISPLAY
  3736	405114'	200 04 0 00 000015 		MOVE	T4,RW		;MOVE CURSOR TO START OF LINE
  3737	405115'	260 17 0 00 405764'		PUSHJ	P,POSLIN
  3738	405116'	400 00 0 00 000000 		SETZ	T0,		;DO THE CLEAR FROM THE START OF THE LINE
  3739	405117'	260 17 0 00 410335'		PUSHJ	P,CLEARP	;CLEAR TO END OF PAGE
  3740	405120'	200 13 0 00 002252'		MOVE	PT,LINPTR
  3741	405121'	200 04 0 07 000023 		MOVE	T4,LPP(TM)
  3742	405122'	274 04 0 00 000015 		SUB	T4,RW
  3743	405123'	621 05 0 00 200040 		TLZ	F,FNC!FBL	;FENCE WILL BE RE-DRAWN; BOTTOM LINE O.K.
  3744	405124'	260 17 0 00 405175'		PUSHJ	P,DISPLY	;RE-DISPLAY ALL LINES AFTER CURSOR POSITION
  3745	405125'	602 05 0 00 000200 		TRNE	F,IMD		;IN INSERT MODE?
  3746	405126'	260 17 0 00 401471'		PUSHJ	P,INSMSG	;YES - PUT UP INSERT MESSAGE
  3747	405127'	260 17 0 00 405766'	DISCUR:	PUSHJ	P,POSCUR	;RE-POSITION THE CURSOR AND RETURN
  3748	405130'	254 00 0 00 400145'		JRST	INTEND		;AND GET ANOTHER COMMAND
  3749
  3750					;SUBROUTINE TO DISPLAY A SCREENFUL OF DATA, STARTING FROM DISPTR
  3751					;T1-T4 AND PT ARE FRAGGED
  3752
  3753	405131'	602 05 0 00 000020 	DISPLL:	TRNE	F,XCT		;DOING AN EXECUTE?
  3754	405132'	263 17 0 00 000000 		POPJ	P,		;YES - NO DISPLAY
  3755	405133'	260 17 0 00 410353'		PUSHJ	P,CLRALL	;GO HOME AND CLEAR THE SCREEN
  3756	405134'	200 13 0 00 002254'		MOVE	PT,DISPTR	;GET POINTER TO START OF DISPLAY
  3757	405135'	200 04 0 07 000023 		MOVE	T4,LPP(TM)	;GO DISPLAY ENTIRE SCREEN
  3758	405136'	260 17 0 00 405200'		PUSHJ	P,DISPS0
  3759	405137'	200 01 0 00 000351'		MOVE	T1,DISPPT	;GET POINTER TO LAST LINE
  3760	405140'	202 01 0 00 002255'		MOVEM	T1,BOTPTR	;SAVE AS BOTTOM POINTER
  3761	405141'	607 05 0 00 000040 		TLNN	F,FNC		;IS THE FENCE ON THE SCREEN?
  3762	405142'	625 05 0 00 000020 		TLZA	F,XPB		;NO - MARK BOTTOM POINTER AS GOOD
  3763	405143'	661 05 0 00 000020 		TLO	F,XPB		;YES - BOTTOM POINTER IS BAD
  3764	405144'	621 05 0 00 200000 		TLZ	F,FBL		;BUT BOTTON LINE ITSELF IS O.K.
  3765	405145'	602 05 0 00 000200 		TRNE	F,IMD		;IN INSERT MODE?
  3766	405146'	254 00 0 00 401471'		JRST	INSMSG		;YES - PUT INSERT MESSAGE UP
  3767	405147'	263 17 0 00 000000 		POPJ	P,		;NO - DONE
  3768
  3769					;SUBROUTINE TO DISPLAY ONE LINE, FROM CURSOR POSITION TO END
  3770					;CURSOR DOES NOT HAVE TO BE POSITIONED; CHRPTR MUST BE RIGHT
  3771
  3772	405150'	602 05 0 00 000020 	DISLIN:	TRNE	F,XCT		;DOING AN EXECUTE?
  3773	405151'	263 17 0 00 000000 		POPJ	P,		;YES - NO DISPLAY
  3774	405152'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;MOVE CURSOR TO ITS RIGHTFUL POSITION
  3775	405153'	260 17 0 00 410333'		PUSHJ	P,CLRLNR	;CLEAR OUT REST OF PRESENT LINE
  3776	405154'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;SET TO WRITE ONE LINE WHERE CURSOR IS
  3777	405155'	201 04 0 00 000001 		MOVEI	T4,1		;SAY ONE LINE WILL BE DISPLAYED
  3778
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 27-1
SED	MAC	21-May-74 00:04		Utility subroutines

  3779	405156'	210 02 0 07 000024 		MOVN	T2,CPL(TM)	;GET IOWD FOR CHARACTER COUNT:
  3780	405157'	270 02 0 00 000016 		ADD	T2,CM		;  COUNT: CHARS REMAINING IN LINE
  3781	405160'	603 07 0 00 100000 		TLNE	TM,WRP		;  WILL LINES WRAP AROUND?
  3782	405161'	360 02 0 00 000000 		SOJ	T2,		;  YES - DO ONE MORE CHARACTER
  3783	405162'	505 02 0 02 777777 		HRLI	T2,-1(T2)
  3784	405163'	540 02 0 00 000011 		HRR	T2,SL		;  OFFSET: SLIDE + CHARS NOT REMAINING
  3785	405164'	270 02 0 00 000016 		ADD	T2,CM
  3786	405165'	254 00 0 00 405202'		JRST	DISPL0		;DISPLAY FROM CURSOR TO END OF LINE
  3787
  3788					;HERE TO DISPLAY ONE ENTIRE LINE
  3789					;IF CURSOR IS ALREADY POSITIONED ENTER AT DISONE
  3790
  3791	405166'	602 05 0 00 000020 	DISONL:	TRNE	F,XCT		;DOING AN EXECUTE?
  3792	405167'	263 17 0 00 000000 		POPJ	P,		;YES - NO DISPLAY
  3793	405170'	200 04 0 00 000015 		MOVE	T4,RW
  3794	405171'	260 17 0 00 405764'		PUSHJ	P,POSLIN	;MOVE CURSOR TO START OF LINE
  3795	405172'	200 13 0 00 002252'		MOVE	PT,LINPTR
  3796	405173'	260 17 0 00 410332'	DISONE:	PUSHJ	P,CLRLNA	;CLEAR THE LINE
  3797	405174'	201 04 0 00 000001 		MOVEI	T4,1		;DISPLAY ONE ENTIRE LINE
  3798
  3799					;SUBROUTINE TO DISPLAY (T4) LINES STARTING AT WHERE PT POINTS IN BUFFER
  3800					;CURSOR IS ASSUMED TO BE AT THE RIGHT POSITION
  3801					;T1-T4 AND PT ARE FRAGGED
  3802
  3803	405175'	602 05 0 00 000020 	DISPLY:	TRNE	F,XCT		;DOING AN EXECUTE?
  3804	405176'	263 17 0 00 000000 		POPJ	P,		;YES - NO DISPLAY
  3805	405177'	625 05 0 00 010000 		TLZA	F,LFF
  3806	405200'	621 05 0 00 010040 	DISPS0:	TLZ	F,FNC!LFF
  3807	405201'	260 17 0 00 405352'		PUSHJ	P,DISSLD	;SKIP OVER, IF THERE'S A SLIDE
  3808	405202'	201 03 0 00 002040'	DISPL0:	MOVEI	T3,TYPBUF+TYPSIZ+1 ;SET UP END-OF-TYPE-BUFFER ADDRESS
  3809
  3810					;NOW COPY LINE INTO DISPLAY BUFFER
  3811
  3812	405203'	316 13 0 00 000014 	DISPL1:	CAMN	PT,EN		;AT END OF BUFFER?
  3813	405204'	254 00 0 00 405312'		JRST	DISPEN		;YES - DISPLAY THE REST, THEN DONE
  3814	405205'	134 01 0 00 000013 		ILDB	T1,PT		;GET A CHARACTER FROM THE FILE BUFFER
  3815	405206'	322 01 0 00 405203'		JUMPE	T1,DISPL1	;IGNORE A NULL
  3816	405207'	252 02 0 00 405221'		AOBJP	T2,DISSKP	;JUMP IF LINE HAS FILLED SCREEN
  3817	405210'	623 05 0 00 010000 		TLZE	F,LFF		;LOOKING FOR A LINEFEED?
  3818	405211'	254 00 0 00 405316'		JRST	DISPLF		;YES - SEE IF THIS IS ONE
  3819	405212'	302 01 0 00 000177 	DISPL2:	CAIE	T1,177		;[JMS] Rubout?
  3820	405213'	305 01 0 00 000040 		CAIGE	T1," "		;SOME KIND OF CONTROL CHARACTER?
  3821	405214'	254 00 0 00 405240'		JRST	DISCTL		;YES - HANDLE IT SEPARATELY
  3822	405215'	136 01 0 00 000010 	DISPL3:	IDPB	T1,TY		;STORE CHARACTER IN TYPE BUFFER
  3823
  3824	405216'	305 03 0 10 000000 	DISPL4:	CAIGE	T3,(TY)		;IS BUFFER FILLED?
  3825	405217'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;YES - FINISH BUFFER AND OUTPUT IT
  3826	405220'	254 00 0 00 405203'		JRST	DISPL1		;EITHER WAY, GET SOME MORE
  3827					;HERE IF A FULL LINE OF CHARACTERS HAS BEEN FOUND; IGNORE REST OF LINE
  3828
  3829	405221'	306 01 0 00 000012 	DISSKP:	CAIN	T1,12		;IS LAST CHARACTER A <LF>?
  3830						JRST	[TLZ  F,LFF	;YES - CLEAR LINEFEED FLAG
  3831	405222'	254 00 0 00 411755'			 JRST DISPLF]	;AND END LINE
  3832	405223'	302 01 0 00 000015 		CAIE	T1,15		;USE THIS CHAR IF IT'S A <CR>
  3833	405224'	134 01 0 00 000013 	DISKP1:	ILDB	T1,PT		;IGNORE REST OF LINE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 27-2
SED	MAC	21-May-74 00:04		Utility subroutines

  3834	405225'	302 01 0 00 000015 		CAIE	T1,15		;END OF LINE?
  3835	405226'	254 00 0 00 405224'		JRST	DISKP1		;NO - IGNORE ANOTHER CHARACTER
  3836	405227'	134 01 0 00 000013 		ILDB	T1,PT		;FOUND <CR> - GET <LF>
  3837	405230'	302 01 0 00 000012 		CAIE	T1,12		;IS IT REALLY?
  3838	405231'	254 00 0 00 405225'		JRST	DISKP1+1	;OF COURSE NOT - KEEP IGNORING
  3839	405232'	607 07 0 00 100000 		TLNN	TM,WRP		;NEED A CARRIAGE RETURN AT END OF LONG LINE?
  3840	405233'	254 00 0 00 405320'		JRST	DISPF1		;YES - FINISH LINE WITH CR
  3841	405234'	367 04 0 00 405324'		SOJG	T4,DISPF2	;NO - WORKING ON LAST LINE?
  3842
  3843					;need to know if this is last line on screen or just last of display
  3844
  3845	405235'	400 01 0 00 000000 		SETZ	T1,		;YES - OVERWRITE LAST CHAR WITH A NULL
  3846	405236'	137 01 0 00 000010 		DPB	T1,TY
  3847	405237'	254 00 0 00 410451'		JRST	PUTTYP		;FINISH THE DISPLAY AND RETURN
  3848
  3849					;HERE IF CHARACTER IS A CONTROL CHARACTER
  3850					;IF NOT <CR>, <LF>, OR <TB>, DISPLAY AS REVERSED-ASCII CHARACTER
  3851
  3852	405240'	306 01 0 00 000015 	DISCTL:	CAIN	T1,15		;JUST A <CR>?
  3853						JRST	[TLO  F,LFF	;MAYBE - SET FLAG TO LOOK FOR <LF>
  3854	405241'	254 00 0 00 411757'			 JRST DISPL4]	;AND CHECK NO FURTHER
  3855	405242'	306 01 0 00 000011 		CAIN	T1,11		;TAB?
  3856	405243'	254 00 0 00 405250'		JRST	DISTAB		;YES - TREAT SPECIALLY
  3857	405244'	306 01 0 00 000177 		CAIN	T1,177		;[JMS] Rubout?
  3858	405245'	201 01 0 00 777777 		 MOVEI	T1,"?"-100	;[JMS] Yes, display reversed "?"
  3859	405246'	260 17 0 00 405301'		PUSHJ	P,DISREV	;ELSE OUTPUT REVERSED CHARACTER
  3860	405247'	254 00 0 00 405216'		JRST	DISPL4
  3861
  3862					;HERE TO HANDLE A TAB - DE-BUMP POSITION BY SIZE OF TAB
  3863					;IF SLIDE IS A MULTIPLE OF 8, WORK WITH TAB; ELSE CONVERT TO SPACES
  3864
  3865	405250'	606 11 0 00 000007 	DISTAB:	TRNN	SL,7		;IS SLIDE A MULTIPLE OF 8?
  3866	405251'	607 07 0 00 200000 		TLNN	TM,TBS		;  OR GOT HARDWARE TABS?
  3867	405252'	254 00 0 00 405265'		JRST	DISTBX		;NEITHER - SIMULATE WITH SPACES
  3868	405253'	602 05 0 00 010000 		TRNE	F,DTB		;WANT TO DISPLAY TABS?
  3869	405254'	254 00 0 00 405260'		JRST	DISTBA
  3870					  ;Adjust position, output a hardware tab
  3871	405255'	602 02 0 00 000007 	DISTB0:	TRNE	T2,7		;MOVE OVER TO TAB BOUNDARY
  3872	405256'	253 02 0 00 405255'		AOBJN	T2,.-1
  3873	405257'	254 00 0 00 405215'		JRST	DISPL3		;SAVE TAB IN DISPLAY BUFFER
  3874
  3875					  ;Output inverse video "I" then send a hardware tab
  3876	405260'	260 17 0 00 405301'	DISTBA:	PUSHJ	P,DISREV	;OUTPUT A REVERSED "I"
  3877	405261'	606 02 0 00 000007 		TRNN	T2,7		;IS TAB REALLY ONLY ONE SPACE LONG?
  3878	405262'	254 00 0 00 405216'		JRST	DISPL4		;YES - DON'T OUTPUT THE TAB
  3879	405263'	201 01 0 00 000011 		MOVEI	T1,11		;ELSE - GET THE TAB BACK AGAIN
  3880	405264'	254 00 0 00 405255'		JRST	DISTB0	        ;AND OUTPUT IT
  3881
  3882					  ;Here when hardware tabs cannot be used
  3883	405265'	602 05 0 00 010000 	DISTBX:	TRNE	F,DTB		;WANT TO DISPLAY TABS?
  3884	405266'	254 00 0 00 405274'		JRST	DISTBB
  3885					  ;Output up to 8 spaces
  3886	405267'	201 01 0 00 000040 	DISTX1:	MOVEI	T1," "		;SIMULATE TAB: GET A SPACE
  3887	405270'	136 01 0 00 000010 		IDPB	T1,TY
  3888	405271'	602 02 0 00 000007 		TRNE	T2,7		;SAVE UNTIL AT TAB BOUNDARY
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 27-3
SED	MAC	21-May-74 00:04		Utility subroutines

  3889	405272'	253 02 0 00 405270'		AOBJN	T2,.-2
  3890	405273'	254 00 0 00 405216'		JRST	DISPL4
  3891
  3892					  ;Outut inverse video "I" then up to 7 spaces
  3893	405274'	260 17 0 00 405301'	DISTBB:	PUSHJ	P,DISREV	;OUTPUT A REVERSED "I"
  3894	405275'	606 02 0 00 000007 		TRNN	T2,7		;AT TAB BOUNDARY?
  3895	405276'	254 00 0 00 405216'		JRST	DISPL4		;YES - CONTINUE
  3896	405277'	253 02 0 00 405267'		AOBJN	T2,DISTX1	;NO - OUTPUT SOME SPACES, TOO
  3897	405300'	254 00 0 00 405267'		JRST	DISTX1
  3898					;SUBROUTINE TO OUTPUT THE CHARACTER IN T1 AS HIGHLIGHTED ASCII
  3899
  3900	405301'	261 17 0 00 000001 	DISREV:	PUSH	P,T1		;OUTPUT REVERSED CHARACTER
  3901	405302'	260 17 0 00 410337'		PUSHJ	P,PROTON
  3902	405303'	262 17 0 00 000001 		POP	P,T1		;RESTORE REVERSABLE CHARACTER
  3903	405304'	271 01 0 00 000100 		ADDI	T1,"A"-1	;MAKE IT A CHARACTER
  3904	405305'	136 01 0 00 000010 		IDPB	T1,TY
  3905	405306'	260 17 0 00 410340'		PUSHJ	P,PROTOF
  3906	405307'	305 03 0 10 000000 		CAIGE	T3,(TY)		;IS BUFFER FILLED?
  3907	405310'	254 00 0 00 410451'		JRST	PUTTYP		;YES - FINISH BUFFER AND OUTPUT IT
  3908	405311'	263 17 0 00 000000 		POPJ	P,		;NO - JUST RETURN
  3909
  3910					;HERE IF EOF REACHED BEFORE E.O. SCREEN. OUTPUT FENCE; DONE
  3911
  3912	405312'	136 01 0 00 000010 	DISPEN:	IDPB	T1,TY		;SAVE LATEST CHARACTER
  3913	405313'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;FINISH BUFFER AND OUTPUT IT
  3914	405314'	550 00 0 00 000002 		HRRZ	T0,T2		;GET POSITION TO CLEAR FROM
  3915	405315'	254 00 0 00 410476'		JRST	FNCCLR		;DISPLAY FENCE AND RETURN
  3916
  3917					;HERE IF EXPECTING A <LF> AFTER A <CR>. IF GOT ONE, COUNT AN END OF LINE
  3918
  3919	405316'	302 01 0 00 000012 	DISPLF:	CAIE	T1,12		;IS THIS CHARACTER A <LF>?
  3920	405317'	254 00 0 00 405330'		JRST	DISPCR		;NO - REVERSE THE <CR> AND CONTINUE
  3921	405320'	201 01 0 00 000015 	DISPF1:	MOVEI	T1,15		;ELSE SAVE THE OLD <CR>
  3922	405321'	136 01 0 00 000010 		IDPB	T1,TY
  3923						SOJLE	T4,[PUSHJ P,PUTTYP
  3924							    TLNE  F,SCN	 ;SCANNING?
  3925							    JRST  DISTST ;YES - SEE IF USER WANTS TO STOP
  3926	405322'	363 04 0 00 411761'			    POPJ  P,]
  3927	405323'	260 17 0 00 410346'		PUSHJ	P,CDOWN		;ELSE MOVE TO NEXT LINE DOWN
  3928
  3929	405324'	260 17 0 00 405335'	DISPF2:	PUSHJ	P,DISTST	;YES - INTERRUPT DISPLAY IF IT'S A COMMAND
  3930	405325'	260 17 0 00 405352'		PUSHJ	P,DISSLD	;SKIP OVER, IF THERE'S A SLIDE
  3931	405326'	202 13 0 00 000351'		MOVEM	PT,DISPPT	;SAVE POINTER TO THE START OF THIS LINE
  3932	405327'	254 00 0 00 405216'		JRST	DISPL4		;AND CONTINUE
  3933
  3934					;HERE IF CHARACTER FOLLOWING <CR> IS NOT <LF> - MAKE <CR> REVERSED CTRL-M
  3935
  3936	405330'	261 17 0 00 000001 	DISPCR:	PUSH	P,T1		;SAVE CURRENT CHARACTER
  3937	405331'	201 01 0 00 000015 		MOVEI	T1,15		;SET TO OUTPUT A REVERSED <CR>
  3938	405332'	260 17 0 00 405301'		PUSHJ	P,DISREV
  3939	405333'	262 17 0 00 000001 		POP	P,T1		;RESTORE CURRENT CHARACTER
  3940	405334'	254 00 0 00 405212'		JRST	DISPL2
  3941
  3942					;HERE IF USER TYPED A CHARACTER DURING THE DISPLAY - STOP IT IF
  3943					;ENTER OR COMMAND, ELSE DRIVE ON
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 27-4
SED	MAC	21-May-74 00:04		Utility subroutines

  3944
  3945	405335'				DISTST:
  3946	405335'	051 13 0 00 000000 	TOPS10^IFE TOPS-10,^<	SKPINC		;SEE IF USER TYPED ANYTHING
  3947	405336'	263 17 0 00 000000 		     POPJ  P,	>	;NO - CONTINUE
  3948					TOPS20^IFE TOPS-20,^<	MOVE   T1,[.PRIIN]
  3949						    SIBE	>	;SKIP IF NO INPUT
  3950	405337'	662 05 0 00 000004 	DISCHR:	     TROE  F,CWT	;SAY CHARACTER HAS BEEN READ - HAS ONE?
  3951	405340'	263 17 0 00 000000 		      POPJ P,		;YES - JUST HAVE TO FORGET THIS ONE, THEN
  3952	405341'	261 17 0 00 000001 		PUSH	P,T1		;NO - SAVE STATE
  3953	405342'	051 00 0 00 000001 	TOPS10^IFE TOPS-10,^<	INCHRW T1>		;GET CHARACTER FROM TERMINAL
  3954					TOPS20^IFE TOPS-20,^<	PBIN>		;GET CHARACTER FROM TERMINAL
  3955	405343'	623 05 0 00 002000 		TLZE	F,SCN		;SCANNING?
  3956						JRST	[TRZ   F,CWT	;YES - NO WAITING COMMAND
  3957							 MOVEI RW,^D12	;PUT CURSOR NEAR CENTER OF SCREEN
  3958							 MOVEI CM,^D40
  3959							 POP   P,T1	;RESTORE T1
  3960	405344'	254 00 0 00 411765'			 POPJ  P,]	;AND QUIT
  3961	405345'	202 01 0 00 000334'		MOVEM	T1,TYPCHR	;SAVE CHARACTER FOR LATER
  3962	405346'	301 01 0 00 000034 		CAIL	T1,34		;CONTROL CHARACTER (BUT NOT CURSOR MOVE)?
  3963						JRST	[POP  P,T1	;NO - JUST CONTINUE WITH THE DISPLAY
  3964	405347'	254 00 0 00 411770'			 POPJ P,]
  3965	405350'	200 17 0 00 411065'		MOVE	P,[IOWD 20,STACK] ;YES - CLEAN UP THE STACK
  3966	405351'	254 00 0 00 400145'		JRST	INTEND		;GET ANOTHER COMMAND
  3967
  3968					;SUBROUTINE TO SKIP OVER A SLIDE'S WORTH OF SPACES
  3969
  3970	405352'	322 11 0 00 405366'	DISSLD:	JUMPE	SL,DISSLE	;IF NO SLIDE, JUST SET UP SIZE
  3971	405353'	210 02 0 00 000011 		MOVN	T2,SL		;ELSE SKIP THAT MANY REAL CHARACTERS
  3972	405354'	514 02 0 00 000002 		HRLZ	T2,T2		;  GET AN IOWD FOR SLIDE SKIPPING
  3973	405355'	134 01 0 00 000013 	DISSL1:	ILDB	T1,PT		;GET A CHARACTER FROM THE FILE BUFFER
  3974	405356'	316 13 0 00 000014 		CAMN	PT,EN		;AT END OF BUFFER?
  3975						JRST	[POP  P,	;YES - KILL CALL TO DISSLD
  3976	405357'	254 00 0 00 411772'			 JRST DISPEN+1] ;DISPLAY THE REST, THEN DONE
  3977	405360'	322 01 0 00 405355'		JUMPE	T1,DISSL1	;IGNORE A NULL
  3978	405361'	306 01 0 00 000015 		CAIN	T1,15		;IF <CR>, SEE IF END OF LINE
  3979						JRST	[MOVE  T1,PT	;GET FRAGGABLE POINTER
  3980							 ILDB  T1,T1	;GET LINEFEED
  3981							 CAIE  T1,12	;IS IT REALLY?
  3982							 JRST  .+1	;NO - SKIP THE <CR>
  3983							 IBP   PT	;YES - SKIP <CRLF>
  3984							 POP   P,	;KILL CALL TO DISSLD
  3985	405362'	254 00 0 00 411774'			 JRST  DISPLF]	;AND END THE LINE
  3986	405363'	306 01 0 00 000011 		CAIN	T1,11		;TAB?
  3987	405364'	254 00 0 00 405372'		JRST	DISSLT		;YES - COUNT IT
  3988	405365'	253 02 0 00 405355'		AOBJN	T2,DISSL1	;GO UNTIL SKIPPED OUT
  3989	405366'	210 02 0 07 000024 	DISSLE:	MOVN	T2,CPL(TM)	;GET IOWD FOR CHARACTER COUNT
  3990	405367'	505 02 0 02 777777 		HRLI	T2,-1(T2)
  3991	405370'	540 02 0 00 000011 		HRR	T2,SL
  3992	405371'	263 17 0 00 000000 		POPJ	P,		;THEN RETURN
  3993
  3994	405372'	550 01 0 00 000002 	DISSLT:	HRRZ	T1,T2		;HERE IF TAB - FIND ITS SIZE
  3995	405373'	405 01 0 00 000007 		ANDI	T1,7
  3996	405374'	275 01 0 00 000010 		SUBI	T1,10
  3997	405375'	252 02 0 00 405400'		AOBJP	T2,DISLFP	;COUNT A SPACE; JUMP IF END OF SLIDE
  3998	405376'	341 01 0 00 405375'		AOJL	T1,.-1		;LOOP THROUGH TAB
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 27-5
SED	MAC	21-May-74 00:04		Utility subroutines

  3999	405377'	254 00 0 00 405355'		JRST	DISSL1		;GET ANOTHER CHARACTER
  4000
  4001	405400'	342 01 0 00 405366'	DISLFP:	AOJE	T1,DISSLE	;IF EXACTLY COUNTED OUT, PUT NOTHING IN
  4002	405401'	514 01 0 00 000001 		HRLZ	T1,T1		;GET IOWD FOR SPACES ADDED
  4003	405402'	201 02 0 00 000040 		MOVEI	T2," "		;SLIDE ENDS IN MIDDLE OF TAB - PUT IN SPACES
  4004	405403'	136 02 0 00 000010 		IDPB	T2,TY		;STORE CHARACTER IN TYPE BUFFER
  4005	405404'	253 01 0 00 405403'		AOBJN	T1,.-1		;PUT IN ALL EXTRA SPACES
  4006	405405'	514 02 0 00 000001 		HRLZ	T2,T1		;SET UP LENGTH OF REMAINDER OF LINE
  4007	405406'	514 00 0 07 000024 		HRLZ	T0,CPL(TM)
  4008	405407'	270 00 0 00 412003'		ADD	T0,[1,,0]
  4009	405410'	274 02 0 00 000000 		SUB	T2,T0
  4010	405411'	263 17 0 00 000000 		POPJ	P,		;THEN DONE
  4011
  4012					;************************************************************************
  4013					;SUBROUTINE TO INITIALIZE CURSOR MOVEMENT PARAMETERS
  4014					;PUT CURSOR BACK INTO TEXT AND MARK STARTING POSITION
  4015
  4016	405412'	602 05 0 00 000020 	MARKUP:	TRNE	F,XCT		;DOING AN EXECUTE?
  4017	405413'	263 17 0 00 000000 		POPJ	P,		;YES - NO DISPLAY, THEN
  4018	405414'	261 17 0 00 000001 		PUSH	P,T1		;SAVE CHARACTER TYPED BY USER
  4019	405415'	200 01 0 00 411207'		MOVE	T1,[POINT 7,PARBUF]
  4020	405416'	312 01 0 00 002227'		CAME	T1,PARPTR	;POINTING TO START OF PARAMETER BUFFER?
  4021						JRST	[POP  P,T1	;NO - DON'T WANT TO ALLOW CURSOR MOVE
  4022							 POP  P,
  4023							 TRZ  F,CMV
  4024	405417'	254 00 0 00 412004'			 JRST INTEND]
  4025	405420'	120 15 0 00 000330'		DMOVE	RW,SAVPOS	;RESTORE SAVED POSITION
  4026	405421'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;GO TO BOTTOM AND CLEAR LINE
  4027	405422'	260 17 0 00 410337'		PUSHJ	P,PROTON
  4028						MOVEI	T1,[BYTE (7) 076," ","*","*","*"
  4029	405423'	201 01 0 00 412010'			    ASCIZ / Arg defined by cursor movement ***/]
  4030	405424'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  4031	405425'	260 17 0 00 410340'		PUSHJ	P,PROTOF
  4032	405426'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;RE-POSITION THE CURSOR
  4033	405427'	262 17 0 00 000001 		POP	P,T1		;RESTORE USER'S CHARACTER
  4034	405430'	263 17 0 00 000000 		POPJ	P,
  4035
  4036					;************************************************************************
  4037					;SUBROUTINE TO SQUEEZE ENTIRE NULL WORDS OUT OF THE BUFFER
  4038					;CALLED DURING EDITING, TO TAKE CARE OF MASSIVE DELETIONS
  4039
  4040	405431'	201 00 0 00 000100 	SQUEZW:	MOVEI	T0,SQZVAL	;RESET NUMBER OF COMMANDS TO LET GO BY
  4041	405432'	202 00 0 00 000350'		MOVEM	T0,SQZCNT
  4042	405433'	602 05 0 00 000400 		TRNE	F,RDO		;IS FILE READ-ONLY?
  4043	405434'	263 17 0 00 000000 		POPJ	P,		;YES - DO NOTHING
  4044	405435'	261 17 0 00 000001 		PUSH	P,T1		;SAVE CURRENT COMMAND
  4045
  4046	405436'	336 00 0 14 000000 		SKIPN	(EN)		;IS END PTR POINTING TO A NULL WORD
  4047	405437'	364 14 0 00 405436'		SOJA	EN,.-1		;YES - BACK UP OVER IT
  4048	405440'	505 14 0 00 010700 		HRLI	EN,010700	;NO - POINT TO LAST BYTE OF NON-0 WORD
  4049	405441'	135 01 0 00 000014 		LDB	T1,EN		;GET THAT BYTE
  4050	405442'	322 01 0 00 405444'		JUMPE	T1,.+2		;IF NULL, O.K.
  4051	405443'	133 00 0 00 000014 		IBP	EN		;ELSE SKIP TO NEXT BYTE (WHICH IS ZERO)
  4052
  4053	405444'	201 03 0 00 002257'		MOVEI	T3,BUFFER	;GET TWO BUFFER POINTERS
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 27-6
SED	MAC	21-May-74 00:04		Utility subroutines

  4054	405445'	200 04 0 00 000003 		MOVE	T4,T3
  4055	405446'	550 02 0 00 002254'		HRRZ	T2,DISPTR	;SET UP ADDRESS FROM DISPLAY PTR
  4056	405447'	306 02 0 00 002256'		CAIN	T2,BUFFER-1
  4057	405450'	540 02 0 00 000014 		HRR	T2,EN		;YES - SET UP END POINTER INSTEAD
  4058
  4059	405451'	316 03 0 00 000002 	SQUEW1:	CAMN	T3,T2		;REACHED DISPLAY OR END POINTER?
  4060	405452'	254 00 0 00 405460'		JRST	SQUEW2		;YES - DO SOMETHING
  4061	405453'	336 01 0 03 000000 		SKIPN	T1,(T3)		;GET A WORD - NULL?
  4062	405454'	344 03 0 00 405451'		AOJA	T3,SQUEW1	;YES - SKIP OVER IT
  4063	405455'	340 03 0 00 000000 		AOJ	T3,		;NO - SAVE IT OFF
  4064	405456'	202 01 0 04 000000 		MOVEM	T1,(T4)
  4065	405457'	344 04 0 00 405451'		AOJA	T4,SQUEW1	;AND GET ANOTHER ONE
  4066
  4067	405460'	302 02 0 14 000000 	SQUEW2:	CAIE	T2,(EN)		;FOUND DISPLAY POINTER?
  4068						JRST	[HRRM T4,DISPTR ;YES - SAVE ITS NEW ADDRESS
  4069							 HRR  T2,EN
  4070	405461'	254 00 0 00 412021'			 JRST SQUEW1]	;AND CONTINUE
  4071	405462'	200 01 0 14 000000 		MOVE	T1,(EN)		;NO - SAVE LAST WORD OF BUFFER
  4072	405463'	202 01 0 04 000000 		MOVEM	T1,(T4)
  4073	405464'	540 14 0 00 000004 		HRR	EN,T4		;POINT TO SQUEEZED-OUT END OF BUFFER
  4074	405465'	201 01 0 14 000002 	TOPS10^IFE TOPS-10,^<	MOVEI	T1,2(EN)	;CLEAR FROM END OF FILE TO TOP OF CORE
  4075	405466'	505 01 0 01 777777 		HRLI	T1,-1(T1)
  4076	405467'	200 02 0 00 404022*		MOVE	T2,.JBREL
  4077	405470'	402 00 0 14 000001 		SETZM	1(EN)
  4078	405471'	251 01 0 02 000000 		BLT	T1,(T2)
  4079					>
  4080	405472'	661 05 0 00 000034 		TLO	F,XPB!XPL!XPC	;POINTERS ARE NO LONGER VALID
  4081	405473'	262 17 0 00 000001 		POP	P,T1		;RESTORE CURRENT COMMAND
  4082	405474'	263 17 0 00 000000 		POPJ	P,		;DONE
  4083
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28
SED	MAC	21-May-74 00:04		Utility subroutines

  4084					;SUBROUTINE CALLED ON EXIT TO REMOVE ALL NULLS AND TRAILING SPACES FROM FILE
  4085
  4086	405475'	200 04 0 00 412024'	TRAILL:	MOVE	T4,[POINT 7,BUFFER]
  4087	405476'	200 13 0 00 000004 		MOVE	PT,T4		;SET UP SOURCE AND TARGET POINTERS
  4088	405477'	200 03 0 00 002254'		MOVE	T3,DISPTR	;GET DISPLAY POINTER
  4089	405500'	261 17 0 00 000012 		PUSH	P,DO		;SAVE UNFRAGGABLE AC
  4090	405501'	400 12 0 00 000000 		SETZ	DO,
  4091	405502'	201 02 0 00 000040 		MOVEI	T2," "
  4092	405503'	134 01 0 00 000014 		ILDB	T1,EN		;MAKE SURE LAST CHARACTER IS A NULL
  4093	405504'	322 01 0 00 405506'		JUMPE	T1,TRAIL1	;IF SO, O.K.
  4094	405505'	137 02 0 00 000014 		DPB	T2,EN		;ELSE MAKE IT ONE
  4095
  4096	405506'	316 04 0 00 000003 	TRAIL1:	CAMN	T4,T3		;REACHED DISPTR?
  4097	405507'	202 13 0 00 002254'		MOVEM	PT,DISPTR	;YES - SAVE ADJUSTED POINTER
  4098	405510'	134 01 0 00 000004 		ILDB	T1,T4		;GET A CHARACTER
  4099	405511'	307 01 0 00 000040 		CAIG	T1," "		;IS IT A CONTROL CHAR OR A SPACE?
  4100	405512'	254 00 0 00 405520'		JRST	TRAILX		;YES - CHECK DEEPER
  4101	405513'	322 12 0 00 405516'	TRAIL2:	JUMPE	DO,TRAIL3	;JUMP IF NO SPACES TO PUT IN
  4102	405514'	136 02 0 00 000013 		IDPB	T2,PT		;ELSE PUT THEM IN
  4103	405515'	367 12 0 00 405514'		SOJG	DO,.-1
  4104	405516'	136 01 0 00 000013 	TRAIL3:	IDPB	T1,PT		;SAVE CHARACTER
  4105	405517'	254 00 0 00 405506'		JRST	TRAIL1		;AND GET ANOTHER
  4106
  4107					TRAILX:	JUMPE	T1,[CAME T4,EN	;IF NULL, AT END OF BUFFER?
  4108							    JRST TRAIL1 ;NO - IGNORE THE NULL
  4109							    MOVE EN,PT	;YES - SAVE ADJUSTED END POINTER
  4110							    IDPB T1,EN	;MAKE SURE IT ENDS ON A NULL
  4111							    IDPB T1,EN
  4112							    POP  P,DO
  4113	405520'	322 01 0 00 412025'			    POPJ P,]
  4114	405521'	306 01 0 00 000015 		CAIN	T1,15		;IS CHARACTER A CR?
  4115	405522'	254 00 0 00 405526'		JRST	TRAILC		;YES - HANDLE IT
  4116	405523'	306 01 0 00 000040 		CAIN	T1," "		;IS IT A SPACE?
  4117	405524'	344 12 0 00 405506'		AOJA	DO,TRAIL1	;YES - COUNT IT AND LOOP
  4118	405525'	254 00 0 00 405513'		JRST	TRAIL2		;NO - SAVE THE CHARACTER
  4119
  4120	405526'	200 00 0 00 000004 	TRAILC:	MOVE	T0,T4		;GET CHARACTER AFTER CR
  4121	405527'	134 00 0 00 000000 		ILDB	T0,T0
  4122	405530'	302 00 0 00 000012 		CAIE	T0,12		;IS IT A LINEFEED?
  4123	405531'	254 00 0 00 405513'		JRST	TRAIL2		;NO - GO SAVE CR
  4124	405532'	400 12 0 00 000000 		SETZ	DO,		;YES - FORGET THE TRAILING SPACES
  4125	405533'	254 00 0 00 405516'		JRST	TRAIL3		;AND SAVE THE CRLF
  4126
  4127					;************************************************************************
  4128					;SUBROUTINE TO SAVE THE CURRENT FILE
  4129					;TOPS10: ENTER WITH ADDRESS OF FILBLK OR OLDBLK SET UP IN AC PT
  4130					;BOTH:	 ENTER WITH ADDRESS OF FILSPC OR OLDSPC SET UP IN AC T4
  4131
  4132	405534'	627 05 0 00 001000 	SAVFIL:	TLZN	F,CHG		;HAS FILE BEEN MODIFIED?
  4133	405535'	254 00 0 00 405626'		JRST	SAVFNO		;NO - DON'T SAVE IT, THEN
  4134	405536'	260 17 0 00 405641'		PUSHJ	P,SAVMGS	;YES - OUTPUT FILE-MODIFIED MESSAGE
  4135	405537'	202 13 0 00 000311'		MOVEM	PT,SAVEAC+1	;SAVE POINTER TO TOPS10 FILE DATA
  4136	405540'	260 17 0 00 405475'		PUSHJ	P,TRAILL	;CHOP OUT TRAILING SPACES AND NULLS
  4137	405541'	200 13 0 00 000311'		MOVE	PT,SAVEAC+1	;RESTORE TOPS10 POINTER
  4138
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-1
SED	MAC	21-May-74 00:04		Utility subroutines

  4139	405542'	400 01 0 00 000000 		SETZ	T1,		;MAKE SURE THE REST OF LAST WORD IS NULL
  4140	405543'	201 02 0 00 000005 		MOVEI	T2,5
  4141	405544'	136 01 0 00 000014 		IDPB	T1,EN
  4142	405545'	367 02 0 00 405544'		SOJG	T2,.-1
  4143
  4144	405546'	402 00 0 14 000000 		SETZM	(EN)
  4145	405547'	201 01 0 14 000001 		MOVEI	T1,1(EN)	;THEN NULL OUT FROM END OF FILE
  4146	405550'	504 01 0 00 000014 		HRL	T1,EN
  4147	405551'	550 02 0 00 405467*	TOPS10^IFE TOPS-10,^<	HRRZ	T2,.JBREL	;TO END OF CORE
  4148	405552'	251 01 0 02 000000 		BLT	T1,(T2)
  4149
  4150	405553'	050 02 0 13 000000 		OPEN	2,(PT)		;SET UP CHANNEL FOR THE EXISTING FILE
  4151	405554'	254 04 0 00 405554'		  HALT	.
  4152	405555'	120 00 0 13 000005 		DMOVE	T0,5(PT)	;GET FILE NAME AND EXTENSION
  4153	405556'	400 02 0 00 000000 		SETZ	T2,
  4154	405557'	200 03 0 13 000004 		MOVE	T3,4(PT)	;GET FILE PPN
  4155	405560'	336 00 0 00 000361'		SKIPN	BAKFLG		;WANT A BACKUP FILE?
  4156	405561'	254 00 0 00 405611'		JRST	SAVFLB		;NO
  4157	405562'	205 01 0 00 424153 		MOVSI	T1,'BAK'	;YES - SET UP A BACKUP FLAVORED FILE
  4158	405563'	124 00 0 00 000254'		DMOVEM	T0,BAKFIL	;SAVE BACKUP NAME AND EXT
  4159	405564'	202 03 0 00 000257'		MOVEM	T3,BAKFIL+3	;SAVE BACKUP PPN
  4160	405565'	050 05 0 13 000000 		OPEN	5,(PT)		;ELIMINATE CURRENT BACKUP FILE (IF ANY)
  4161	405566'	254 04 0 00 405566'		  HALT	.
  4162	405567'	076 05 0 00 000254'		LOOKUP	5,BAKFIL
  4163	405570'	304 00 0 00 000000 		  CAIA			;(DON'T DO IT IF IT'S NOT THERE)
  4164	405571'	055 05 0 00 000250'		RENAME	5,DELFIL
  4165	405572'	255 00 0 00 000000 		  JFCL
  4166	405573'	071 05 0 00 000000 		RELEAS	5,
  4167	405574'	124 00 0 00 000254'		DMOVEM	T0,BAKFIL	;GET A CLEAN LOOKUP BLOCK
  4168	405575'	124 02 0 00 000256'		DMOVEM	T2,BAKFIL+2
  4169	405576'	076 02 0 13 000003 		LOOKUP	2,3(PT)		;RENAME THE OLD FILE TO *.BAK
  4170	405577'	304 00 0 00 000000 		  CAIA			;IF NONE, DON'T WORRY ABOUT IT
  4171	405600'	055 02 0 00 000254'		RENAME	2,BAKFIL
  4172	405601'	255 00 0 00 000000 		  JFCL
  4173	405602'	070 02 0 00 000000 		CLOSE	2,
  4174	405603'	500 01 0 13 000006 		HLL	T1,6(PT)	;GET REAL FILE'S EXTENSION
  4175	405604'	510 02 0 13 000007 		HLLZ	T2,7(PT)	;  AND ITS PROTECTION
  4176	405605'	621 02 0 00 000777 		TLZ	T2,000777
  4177	405606'	124 00 0 13 000005 		DMOVEM	T0,5(PT)	;SET UP EXT AND PROTECTION IN FILE BLOCK
  4178	405607'	202 02 0 13 000007 		MOVEM	T2,7(PT)	;SAVE FILE PROTECTION
  4179	405610'	202 03 0 13 000004 		MOVEM	T3,4(PT)	;  AND PPN
  4180
  4181	405611'	077 02 0 13 000003 	SAVFLB:	ENTER	2,3(PT)		;FIND THE FILE AGAIN (FOR OUTPUT)
  4182	405612'	254 04 0 00 405612'		  HALT	.		;  (IT BETTER WORK)
  4183	405613'	200 01 0 00 000014 		MOVE	T1,EN
  4184	405614'	275 01 0 00 002257'		SUBI	T1,BUFFER
  4185	405615'	210 01 0 00 000001 		MOVN	T1,T1
  4186	405616'	506 01 0 00 000223'		HRLM	T1,FILCCL	;SET UP FILE SIZE IN COMMAND
  4187	405617'	067 02 0 00 000223'		OUTPUT	2,FILCCL	;OUTPUT THE ENTIRE FILE
  4188					;[CSM] Make it ASCII mode instead of BINARY
  4189	405620'	205 01 0 00 000740 		MOVSI	T1,000740	;RB.MOD - mask for mode
  4190	405621'	412 01 0 13 000007 		ANDCAM	T1,7(PT)	;Set to ASCII mode (instead of binary DUMP)
  4191	405622'	055 02 0 13 000003 		RENAME	2,3(PT)		;RENAME closes the file
  4192	405623'	255 00 0 00 000000 		  JFCL
  4193	405624'	071 02 0 00 000000 		RELEAS	2,		;CLOSE THE FILE UP
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-2
SED	MAC	21-May-74 00:04		Utility subroutines

  4194					>
  4195					TOPS20^IFE TOPS-20,^<	HRRZ	T2,EN		;TO END OF PAGE
  4196						TRZ	T2,777
  4197						ADDI	T2,1000
  4198						BLT	T1,(T2)
  4199						HRRZ	T1,EN		;FIND FINAL FILE SIZE
  4200						SUBI	T1,BUFSTT
  4201						MOVE	T3,T1		;FIND IT IN BYTES
  4202						ADDI	T3,777		;ROUND TO NEXT HIGHER PAGE
  4203						LSH	T3,-11
  4204						MOVEM	T3,FILBSZ
  4205					
  4206						SOJ	T1,		;FIND IT IN CHARACTERS
  4207						IMULI	T1,5
  4208						HLRZ	T0,EN		;GET POINTER PART OF POINTER
  4209						SETZ	T2,		;FIND NUMBER OF CHARACTERS IN FINAL WORD
  4210						CAME	T0,PTRTBL(T2)
  4211						AOJA	T2,.-1
  4212						ADD	T1,T2
  4213						MOVEM	T1,FILSIZ
  4214					
  4215						MOVE	T1,[400000,,BUFBLK]
  4216						HRLZ	T2,INJFN	;WRITE ALL OF BUFFER INTO FILE
  4217						MOVE	T3,[PM%CNT+PM%WR]
  4218						ADD	T3,FILBSZ
  4219						PMAP
  4220					
  4221						SETO	T1,		;UN-MAP THE ENTIRE BUFFER
  4222						MOVE	T2,[400000,,BUFBLK]
  4223						MOVE	T3,[PM%CNT]
  4224						HRR	T3,FILBSZ
  4225						PMAP
  4226					
  4227						MOVE	T1,[CO%NRJ]	;CLOSE FILE; DON'T RELEASE JFN
  4228						HRR	T1,INJFN
  4229						CLOSF
  4230						  HALTF
  4231					
  4232						HRLI	T1,.FBSIZ	;CHANGE FILE SIZE IN DESCRIPTOR BLOCK
  4233						OR	T1,[CF%NUD]
  4234						SETO	T2,
  4235						MOVE	T3,FILSIZ
  4236						CHFDB
  4237					
  4238						HRLI	T1,.FBBYV	;TELL FILE IT'S BYTE SIZE IS NOW 7
  4239						MOVE	T2,[FB%BSZ]
  4240						MOVSI	T3,700
  4241						CHFDB
  4242					
  4243						MOVE	T1,INJFN	;NOW RELEASE THE JFN
  4244						RLJFN
  4245						  HALTF
  4246						TRZ	F,GFL		;SAY FILE IS NO LONGER AROUND
  4247					>
  4248	405625'	263 17 0 00 000000 		POPJ	P,
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-3
SED	MAC	21-May-74 00:04		Utility subroutines

  4249
  4250	405626'				SAVFNO:
  4251					TOPS20^IFE TOPS-20,^<	SETO	T1,		;UN-MAP THE ENTIRE BUFFER
  4252						MOVE	T2,[400000,,BUFBLK]
  4253						MOVE	T3,[PM%CNT]
  4254						HRR	T3,FILBSZ
  4255						PMAP
  4256						MOVE	T1,INJFN	;CLOSE FILE AND RELEASE JFN
  4257						CLOSF
  4258						  HALTF
  4259						TRZ	F,GFL		;SAY FILE IS NO LONGER AROUND
  4260					>
  4261	405626'	260 17 0 00 405633'		PUSHJ	P,SAVMGN	;TELL USER THAT FILE IS NOT CHANGED
  4262	405627'	201 01 0 00 001274 		MOVEI	T1,^D0700	;WAIT A WHILE
  4263	405630'	047 01 0 00 000072 	TOPS10^IFE TOPS-10,^<	HIBER	T1,
  4264	405631'	255 00 0 00 000000 		  JFCL
  4265					>
  4266					TOPS20^IFE TOPS-20,^<	DISMS
  4267					>
  4268	405632'	263 17 0 00 000000 		POPJ	P,
  4269
  4270					;ROUTINES TO OUTPUT FILE SAVE MESSAGES
  4271					;ENTER WITH T4/ ADDR OF OLDSPC OR FILSPC (WHICHEVER IS CURRENT FILE)
  4272
  4273	405633'	260 17 0 00 410353'	SAVMGN:	PUSHJ	P,CLRALL	;TELL USER THAT FILE IS NOT CHANGED
  4274	405634'	201 01 0 00 412034'		MOVEI	T1,[ASCIZ /Not modified: /]
  4275	405635'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  4276	405636'	200 01 0 00 000004 		MOVE	T1,T4		;OUTPUT FILESPECS
  4277	405637'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  4278	405640'	254 00 0 00 405651'		JRST	SAVMG1
  4279
  4280	405641'	260 17 0 00 410353'	SAVMGS:	PUSHJ	P,CLRALL
  4281	405642'	201 01 0 00 412037'		MOVEI	T1,[ASCIZ /Saving file: /]
  4282	405643'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  4283	405644'	200 01 0 00 000004 		MOVE	T1,T4		;OUTPUT FILESPECS
  4284	405645'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  4285	405646'	201 01 0 00 412042'		MOVEI	T1,[ASCIZ / (no .BAK)/]
  4286	405647'	336 00 0 00 000361'		SKIPN	BAKFLG		;IS A BACKUP WANTED?
  4287	405650'	260 17 0 00 410365'		PUSHJ	P,PUTSTG	;YES - SAY SO
  4288
  4289	405651'	201 01 0 00 000015 	SAVMG1:	MOVEI	T1,15		;END WITH A CARRIAGE RETURN
  4290	405652'	136 01 0 00 000010 		IDPB	T1,TY
  4291	405653'	201 01 0 00 000012 		MOVEI	T1,12
  4292	405654'	136 01 0 00 000010 		IDPB	T1,TY
  4293	405655'	254 00 0 00 410451'		JRST	PUTTYP
  4294
  4295					;************************************************************************
  4296					;SUBROUTINE TO LOOK UP THE FILE POINTED TO BY T2, FOR OUTPUT
  4297					;TOPS10 CALL: MOVEI T2,FILFIL;	       PUSHJ P,SETOUT
  4298					;TOPS20 CALL: HRROI T2,[ASCIZ /FILE/]; PUSHJ P,SETOUT
  4299
  4300					TOPS10^IFE TOPS-10,^<
  4301	405656'	200 01 0 00 000217'	SETOUT:	MOVE	T1,USRPPN	;SET UP USER'S PPN
  4302	405657'	202 01 0 02 000003 		MOVEM	T1,3(T2)
  4303	405660'	050 05 0 00 000220'		OPEN	5,GENBLK	;OPEN A DUMP MODE OUTPUT FILE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-4
SED	MAC	21-May-74 00:04		Utility subroutines

  4304	405661'	254 04 0 00 405661'		  HALT	.		;ON CHANNEL 5
  4305	405662'	077 05 0 02 000000 		ENTER	5,(T2)
  4306	405663'	254 04 0 00 405663'		  HALT	.
  4307	405664'	513 00 0 02 000001 		HLLZS	1(T2)
  4308	405665'	402 00 0 02 000002 		SETZM	2(T2)
  4309	405666'	474 01 0 00 000000 		SETO	T1,
  4310	405667'	263 17 0 00 000000 		POPJ	P,
  4311					>
  4312					TOPS20^IFE TOPS-20,^<
  4313					SETOUT:	MOVE	T1,[GJ%SHT]	;IT COULDN'T BE MORE STRAIGHTFORWARD
  4314						GTJFN
  4315						  HALTF
  4316						MOVE	T2,[7B5+OF%WR]
  4317						OPENF
  4318						  HALTF
  4319						POPJ	P,
  4320					>
  4321					;SUBROUTINE TO LOOK UP THE FILE POINTED TO BY T2, FOR INPUT
  4322					;TOPS10 CALL: MOVEI T2,FILFIL;	       PUSHJ P,SETIN
  4323					;TOPS20 CALL: HRROI T2,[ASCIZ /FILE/]; PUSHJ P,SETIN
  4324					;RETURNS -FILE SIZE OR HANDLE IN T1 IF LOOKUP SUCCESSFUL, ELSE 0
  4325
  4326					TOPS10^IFE TOPS-10,^<
  4327	405670'	200 01 0 00 000217'	SETIN:	MOVE	T1,USRPPN	;SET UP USER'S PPN
  4328	405671'	202 01 0 02 000003 	SETIN1:	MOVEM	T1,3(T2)
  4329	405672'	050 05 0 00 000220'		OPEN	5,GENBLK	;OPEN A DUMP MODE INPUT FILE
  4330	405673'	263 17 0 00 000000 		  POPJ	P,		;ON CHANNEL 5
  4331	405674'	400 01 0 00 000000 		SETZ	T1,		;ASSUME FILE'S NOT THERE
  4332	405675'	076 05 0 02 000000 		LOOKUP	5,(T2)
  4333	405676'	263 17 0 00 000000 		  POPJ  P,		;NO SUCH FILE - RETURN ZERO
  4334	405677'	513 00 0 02 000001 		HLLZS	1(T2)
  4335	405700'	402 00 0 02 000002 		SETZM	2(T2)
  4336	405701'	200 01 0 00 000217'		MOVE	T1,USRPPN	;GET USER'S PPN
  4337	405702'	250 01 0 02 000003 		EXCH	T1,3(T2)	;SWAP FOR NEGATIVE FILE SIZE
  4338	405703'	263 17 0 00 000000 		POPJ	P,
  4339					>
  4340					TOPS20^IFE TOPS-20,^<
  4341					SETIN:	MOVE	T1,[GJ%OLD+GJ%SHT]
  4342						GTJFN
  4343						JRST	SETIN0
  4344						MOVE	T2,[7B5+OF%RD]
  4345						OPENF
  4346					SETIN0:	  SETZ	T1,
  4347						POPJ	P,
  4348					>
  4349					TOPS10^IFE TOPS-10,^<	;SUBROUTINE TO DELETE A FILE. SPECS IN T2
  4350
  4351	405704'	200 01 0 00 000217'	SETDEL:	MOVE	T1,USRPPN	;SET UP USER'S PPN
  4352	405705'	202 01 0 02 000003 		MOVEM	T1,3(T2)
  4353	405706'	050 05 0 00 000220'		OPEN	5,GENBLK	;OPEN A DUMP MODE INPUT FILE
  4354	405707'	254 04 0 00 405707'		  HALT	.		;ON CHANNEL 5
  4355	405710'	076 05 0 02 000000 		LOOKUP	5,(T2)
  4356	405711'	304 00 0 00 000000 		  CAIA			;NO FILE - DON'T DELETE IT
  4357	405712'	055 05 0 00 000250'		RENAME	5,DELFIL	;DELETE IT
  4358	405713'	255 00 0 00 000000 		  JFCL
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-5
SED	MAC	21-May-74 00:04		Utility subroutines

  4359	405714'	071 05 0 00 000000 		RELEAS	5,		;GET RID OF IT
  4360	405715'	263 17 0 00 000000 		POPJ	P,
  4361					>
  4362					;************************************************************************
  4363					;ROUTINES TO UN-DO THE DAMAGE CAUSED BY ENTER MODE, WHICH CAN BE:
  4364					;  1. REVERSED-SPACE AT CURSOR POSITION (COVER WITH CHARACTER FROM BUFFER)
  4365					;  2. ENTER LINE AT BOTTOM OF SCREEN (RE-WRITE WITH LINE FROM BUFFER)
  4366					;  3. ENTER FLAG (RESET IT)
  4367					;  4. CURSOR IS ILL-POSITIONED (RE-POSITION IT)
  4368
  4369					;THE ENTER FLAG MUST ALWAYS BE CLEARED. THE OTHER THINGS MAY NOT NEED TO
  4370					;BE UNDONE, DEPENDING ON HOW MUCH OF THE SCREEN HAS BEEN OVERWRITTEN.
  4371					;THUS THE ABOVE ARE HANDLED BY DIFFERENT SUBROUTINES, SO NO MORE WORK NEEDS
  4372					;TO BE DONE THAN NECESSARY.
  4373
  4374					;THE LINE AT THE BOTTOM MUST BE RE-DONE QUICKLY IF IT NEEDS TO BE DONE AT ALL
  4375					;THE TEXT MARK SHOULD ALSO BE DONE QUICKLY, SO CHRPTR MAY NOT NEED RE-MAKING
  4376					;CURSOR POSITIONING SHOULD BE THE LAST THING DONE BY THE COMMAND ROUTINE
  4377
  4378					;SUBROUTINE TO RESET ENTER MODE (NOTE: CAN'T FRAG T4)
  4379
  4380	405716'	627 05 0 00 000002 	RESTPM:	TLZN	F,ENT		;WAS ENTER TYPED?
  4381	405717'	263 17 0 00 000000 		POPJ	P,		;NO - NOTHING TO DO
  4382	405720'	261 17 0 00 000004 		PUSH	P,T4		;SAVE T4 SO IT CAN BE RESTORED
  4383	405721'	254 00 0 00 405742'		JRST	ERSPM1
  4384
  4385					;SUBROUTINE TO WRITE LAST LINE OF SCREEN OVER ENTERED PARAMETER
  4386
  4387	405722'	627 05 0 00 000002 	ERASPM:	TLZN	F,ENT		;WAS ENTER TYPED?
  4388	405723'	263 17 0 00 000000 		POPJ	P,		;NO - NOTHING TO DO
  4389	405724'	261 17 0 00 000004 		PUSH	P,T4		;SAVE OLD T4
  4390	405725'	603 07 0 00 004000 		TLNE	TM,NEL		;IS BOTTOM LINE SCRATCH?
  4391	405726'	254 00 0 00 405731'		JRST	ERSPM0		;[CSM] Yes, don't update INSERT message
  4392	405727'	602 05 0 00 000200 		TRNE	F,IMD		;IN INSERT MODE?
  4393						JRST	[PUSHJ P,INSMSG ;YES - RESTORE INSERT MESSAGE
  4394	405730'	254 00 0 00 412045'			 JRST  ERSPM1]
  4395	405731'	621 05 0 00 200000 	ERSPM0:	TLZ	F,FBL		;BOTTOM LINE IS NOW O.K.
  4396	405732'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;MOVE TO BOTTOM OF SCREEN
  4397	405733'	603 07 0 00 004000 		TLNE	TM,NEL		;[CSM] No bottom line?
  4398	405734'	254 00 0 00 405742'		 JRST	ERSPM1		;[CSM] Just keep it blank
  4399	405735'	623 05 0 00 000020 		TLZE	F,XPB		;IS POINTER TO LAST LINE VALID?
  4400	405736'	260 17 0 00 406234'		PUSHJ	P,MAKBPT	;NO - MAKE IT
  4401	405737'	336 13 0 00 002255'		SKIPN	PT,BOTPTR	;IS THERE REALLY A BOTTOM LINE?
  4402	405740'	254 00 0 00 405762'		JRST	ERASFN		;NO - PUT UP THE FENCE
  4403	405741'	260 17 0 00 405173'		PUSHJ	P,DISONE	;ELSE RE-DO THE BOTTOM LINE
  4404	405742'	200 01 0 00 000327'	ERSPM1:	MOVE	T1,CHRCUR	;DE-BLIP THE BLIP
  4405	405743'	305 01 0 00 000040 		CAIGE	T1," "		;IS CHARACTER A CONTROL CHARACTER?
  4406						JRST	[TLNN  TM,MRK	;YES - GOT A MARK THERE?
  4407							 JRST  .+4	;NO - DON'T DE-BLIP IT
  4408							 ADDI  T1,100	;YES - MAKE CHARACTER A REAL CHARACTER
  4409							 MOVEM T1,CHRCUR
  4410	405744'	254 00 0 00 412047'			 JRST  .+1]	;AND DRIVE ON
  4411	405745'	260 17 0 00 405766'		PUSHJ	P,POSCUR	;ELSE POSITION THE CURSOR
  4412	405746'	200 01 0 00 000327'		MOVE	T1,CHRCUR
  4413	405747'	136 01 0 00 000010 		IDPB	T1,TY		;AND PUT THE PROPER CHARACTER BACK THERE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-6
SED	MAC	21-May-74 00:04		Utility subroutines

  4414	405750'	262 17 0 00 000004 		POP	P,T4		;RESTORE THE T4 THAT WAS ENTERED WITH
  4415	405751'	626 05 0 00 000010 		TRZN	F,CMV		;CLEAR CURSOR MOVEMENT FLAG - ON?
  4416	405752'	263 17 0 00 000000 		POPJ	P,		;NO - RETURN
  4417	405753'	312 15 0 00 000330'		CAME	RW,SAVPOS	;YES - WAS ROW CHANGED?
  4418	405754'	661 05 0 00 000014 		TLO	F,XPL!XPC	;YES - POINTERS ARE NO GOOD
  4419	405755'	200 15 0 00 000330'		MOVE	RW,SAVPOS	;RESTORE SAVED POSITION
  4420	405756'	312 16 0 00 000332'		CAME	CM,SAVPOS+2	;WAS COLUMN CHANGED?
  4421	405757'	661 05 0 00 000010 		TLO	F,XPC		;YES - CURSOR POINTER IS NO GOOD
  4422	405760'	200 16 0 00 000331'		MOVE	CM,SAVPOS+1
  4423	405761'	263 17 0 00 000000 		POPJ	P,		;THEN RETURN
  4424
  4425	405762'	260 17 0 00 410477'	ERASFN:	PUSHJ	P,FNCPUT	;OUTPUT THE FENCE
  4426	405763'	254 00 0 00 405742'		JRST	ERSPM1		;FINISH OFF
  4427
  4428					;**********************************************************************
  4429					;SUBROUTINES TO POSITION THE CURSOR
  4430					;THESE JUST CALL THE ACTUAL POSITIONING ROUTINES IN THE TERMINAL-DEPENDENT
  4431					;CODE, OUTPUT IDLES AS DESIRED, AND TYPE OUT THE TYPE BUFFER
  4432
  4433	405764'	260 17 1 07 000022 	POSLIN:	PUSHJ	P,@PSL(TM)	;ELSE POSITION TO THE RIGHT LINE
  4434	405765'	254 00 0 00 405767'		JRST    POSEND          ;GO FINISH OFF
  4435
  4436	405766'	260 17 1 07 000021 	POSCUR:	PUSHJ	P,@PSC(TM)	;ELSE POSITION TO THE RIGHT CHARACTER
  4437	405767'	607 07 0 00 002000 	POSEND:	TLNN	TM,NLP		;FOLLOW WITH SOME NULLS?
  4438	405770'	254 00 0 00 410451'		JRST	PUTTYP		;NO - OUTPUT THE POSITIONING AND QUIT
  4439	405771'	200 01 0 07 000030 		MOVE	T1,NUL(TM)	;YES - GET NULL CHARACTER
  4440	405772'	554 02 0 00 000001 		HLRZ	T2,T1		;AND NUMBER OF NULLS TO OUTPUT
  4441	405773'	136 01 0 00 000010 		IDPB	T1,TY		;OUTPUT A NULL
  4442	405774'	367 02 0 00 405773'		SOJG	T2,.-1		;OUTPUT ALL THE NULLS, IN FACT
  4443	405775'	254 00 0 00 410451'		JRST	PUTTYP		;THEN SEND IT ALL AND RETURN
  4444
  4445					;************************************************************************
  4446					;SUBROUTINES TO MANIPULATE POINTERS
  4447
  4448					;SUBROUTINE TO BACK UP THE DISPLAY POINTER BY (T4) LINES
  4449					;STOPS, NATURALLY, IF IT HITS THE START OF BUFFER. IN THAT CASE, T4 HAS
  4450					;NUMBER OF LINES NOT BACKED UP, SO SUBTRACT T4 FROM THE DISTANCE YOU
  4451					;THINK YOU WENT TO GET THE ACTUAL DISTANCE
  4452
  4453	405776'	200 13 0 00 002254'	BAKDPT:	MOVE	PT,DISPTR	;GET POINTER TO START OF SCREEN
  4454	405777'	316 13 0 00 411073'		CAMN	PT,[010700,,BUFFER-1] ;AT START OF BUFFER?
  4455	406000'	263 17 0 00 000000 		POPJ	P,		      ;YES - NOTHING TO DO AT ALL
  4456	406001'	270 13 0 00 411204'	BAKDP1:	ADD	PT,[70000,,0]	;FUDGE A DECREMENT OF THE BUFFER POINTER
  4457	406002'	325 13 0 00 406004'		JUMPGE	PT,.+2
  4458	406003'	274 13 0 00 411175'		SUB	PT,[430000,,1]
  4459	406004'	135 02 0 00 000013 		LDB	T2,PT		;GET A CHARACTER
  4460	406005'	302 02 0 00 000012 	BAKDP2:	CAIE	T2,12		;LINEFEED?
  4461	406006'	254 00 0 00 406001'		JRST	BAKDP1		;NO - IGNORE IT
  4462
  4463	406007'	316 13 0 00 411073'		CAMN	PT,[010700,,BUFFER-1] ;AT START OF BUFFER?
  4464						JRST	[MOVEM PT,DISPTR      ;YES - POINT TO START OF BUFFER
  4465	406010'	254 00 0 00 412054'			 SOJA  T4,CPOPJ]      ;ADJUST COUNT AND RETURN
  4466	406011'	270 13 0 00 411204'		ADD	PT,[70000,,0]	;FUDGE A DECREMENT OF THE BUFFER POINTER
  4467	406012'	325 13 0 00 406014'		JUMPGE	PT,.+2
  4468	406013'	274 13 0 00 411175'		SUB	PT,[430000,,1]
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-7
SED	MAC	21-May-74 00:04		Utility subroutines

  4469	406014'	135 02 0 00 000013 		LDB	T2,PT		;YES - PICK UP THE <CR>
  4470	406015'	302 02 0 00 000015 		CAIE	T2,15		;IS IT REALLY?
  4471	406016'	254 00 0 00 406005'		JRST	BAKDP2		;NO - IT'S NOT THE END OF THE LINE
  4472	406017'	367 04 0 00 406001'		SOJG	T4,BAKDP1	;YES - LOOP THROUGH DESIRED NUMBER OF ROWS
  4473	406020'	133 00 0 00 000013 		IBP	PT		;SKIP OVER THAT LAST LINEFEED
  4474	406021'	202 13 0 00 002254'		MOVEM	PT,DISPTR	;SAVE SET-UP DISPLAY POINTER
  4475	406022'	263 17 0 00 000000 		POPJ	P,		;DONE
  4476
  4477					;SUBROUTINE TO ADVANCE DISPLAY POINTER BY (T4) LINES
  4478					;IF END OF FILE FOUND, SETS DISPTR TO LPR LINES BEFORE END OF FILE
  4479
  4480	406023'	200 13 0 00 002254'	ADVDPT:	MOVE	PT,DISPTR	;GET DISPLAY POINTER
  4481	406024'	260 17 0 00 406247'		PUSHJ	P,ADVLPT	;ADVANCE IT
  4482	406025'	202 13 0 00 002254'		MOVEM	PT,DISPTR	;SAVE IT AGAIN
  4483	406026'	325 04 0 00 400543'		JUMPGE	T4,CPOPJ	;IF NOT HIT END JUST RETURN
  4484	406027'	622 05 0 00 000020 		TRZE	F,XCT		;TURN OFF EXECUTE FLAG - ON?
  4485	406030'	254 00 0 00 403720'		JRST	XCEERR		;YES - SAY FINISHED PREMATURELY
  4486	406031'	270 04 0 00 000027'		ADD	T4,ROLLS	;ELSE FIND DISTANCE OF REAL ROLL
  4487	406032'	274 04 0 00 000326'		SUB	T4,LPR
  4488	406033'	360 04 0 00 000000 		SOJ	T4,
  4489	406034'	202 04 0 00 000027'		MOVEM	T4,ROLLS	;SAVE REAL ROLL
  4490	406035'	200 04 0 00 000326'		MOVE	T4,LPR		;BACK UP LPR LINES
  4491	406036'	661 05 0 00 000001 		TLO	F,FLG		;SET FLAG FOR RE-DISPLAY
  4492	406037'	254 00 0 00 405776'		JRST	BAKDPT		;AND RETURN WITH THAT
  4493
  4494					;SUBROUTINE TO MAKE A POINTER TO THE CHARACTER WHERE THE CURSOR IS
  4495					;CANNOT USE T1, SINCE THERE MAY BE A LIVE CHARACTER THERE
  4496					;RETURNS CHARACTER POINTED TO BY CHRPTR, IN T3
  4497					;IF THAT CHARACTER IS A TAB, RETURNS PTR TO IT IN TABPTR
  4498
  4499	406040'	627 05 0 00 000010 	MAKCPT:	TLZN	F,XPC		;IS CHARACTER POINTER ALREADY GOOD?
  4500	406041'	254 00 0 00 406123'		JRST	MAKCOK		;YES - CHECK FOR TAB (MAY COME BACK TO .+1)
  4501	406042'	623 05 0 00 000004 	MAKCK1:	TLZE	F,XPL		;IS LINE POINTER GOOD?
  4502	406043'	260 17 0 00 406157'		PUSHJ	P,MAKLPT	;NO - MAKE IT FIRST
  4503
  4504	406044'	200 03 0 00 002252'	MAKCP0:	MOVE	T3,LINPTR	;GET LINE POINTER
  4505	406045'	202 03 0 00 002253'		MOVEM	T3,CHRPTR	;SAVE AS STARTING CHARACTER POINTER
  4506	406046'	200 02 0 00 000016 		MOVE	T2,CM		;GET COLUMN TO MOVE TO
  4507	406047'	270 02 0 00 000011 		ADD	T2,SL		;  (INCLUDING SLIDE OFFSET)
  4508	406050'	322 02 0 00 406062'		JUMPE	T2,MAKCP2	;IF ZERO, JUST CHECK FOR A TAB
  4509	406051'	316 14 0 00 002253'	MAKCP1:	CAMN	EN,CHRPTR	;AT END OF USEABLE BUFFER?
  4510	406052'	254 00 0 00 406135'		JRST	MAKCCR		;YES - ADD A FEW SPACES buggy if here
  4511	406053'	134 03 0 00 002253'		ILDB	T3,CHRPTR	;GET A CHARACTER
  4512	406054'	322 03 0 00 406051'		JUMPE	T3,MAKCP1	;IGNORE IF NULL
  4513	406055'	306 03 0 00 000015 		CAIN	T3,15		;CARRIAGE RETURN?
  4514	406056'	254 00 0 00 406135'		JRST	MAKCCR		;YES - NEED TO EXTEND LINE
  4515	406057'	306 03 0 00 000011 		CAIN	T3,11		;TAB?
  4516	406060'	254 00 0 00 406101'		JRST	MAKCTB		;YES - NEED TO USE THE RIGHT NUMBER OF SPACES
  4517	406061'	367 02 0 00 406051'		SOJG	T2,MAKCP1	;LOOP THROUGH DESIRED NUMBER OF COLUMNS
  4518	406062'	200 02 0 00 002253'	MAKCP2:	MOVE	T2,CHRPTR	;DONE - SEE WHAT CHARACTER IS POINTED TO
  4519	406063'	316 02 0 00 000014 		CAMN	T2,EN		;AT END OF BUFFER?
  4520						JRST	[MOVEI T2,15	;YES - NEED A FINAL <CR>
  4521							 IDPB  T2,EN
  4522							 MOVEI T2,12
  4523							 IDPB  T2,EN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-8
SED	MAC	21-May-74 00:04		Utility subroutines

  4524	406064'	254 00 0 00 412056'			 POPJ  P,]
  4525	406065'	134 03 0 00 000002 		ILDB	T3,T2
  4526	406066'	322 03 0 00 406063'		JUMPE	T3,MAKCP2+1	;SKIP, IF NULL
  4527	406067'	302 03 0 00 000011 		CAIE	T3,11		;IF IT'S A TAB, SET UP COUNTS AND RETURN
  4528	406070'	263 17 0 00 000000 		POPJ	P,		;ELSE JUST RETURN
  4529	406071'	202 02 0 00 000346'		MOVEM	T2,TABPTR	;SAVE POINTER TO TAB
  4530	406072'	200 02 0 00 000016 		MOVE	T2,CM		;FIND NEGATIVE HOW LONG THIS TAB SHOULD BE
  4531	406073'	270 02 0 00 000011 		ADD	T2,SL
  4532	406074'	405 02 0 00 000007 		ANDI	T2,7
  4533	406075'	275 02 0 00 000010 		SUBI	T2,10
  4534	406076'	402 00 0 00 000345'		SETZM	TABSPC		;WANT NO SPACES TO LEFT OF TAB
  4535	406077'	212 02 0 00 000344'		MOVNM	T2,TABSIZ	;SAVE LENGTH OF TAB
  4536	406100'	263 17 0 00 000000 		POPJ	P,		;NOW RETURN
  4537
  4538					;HERE WHEN TAB FOUND. JUMP THE CORRECT NUMBER OF SPACES
  4539					;IF DESIRED POSITION IS WITHIN THE TAB, POINT TO START OF TAB
  4540
  4541	406101'	200 03 0 00 000016 	MAKCTB:	MOVE	T3,CM		;FIND NEGATIVE HOW LONG THIS TAB SHOULD BE
  4542	406102'	270 03 0 00 000011 		ADD	T3,SL
  4543	406103'	274 03 0 00 000002 		SUB	T3,T2
  4544	406104'	405 03 0 00 000007 		ANDI	T3,7
  4545	406105'	275 03 0 00 000010 		SUBI	T3,10
  4546	406106'	137 02 0 00 412063'		DPB	T2,[POINT 3,TABSPC,35]
  4547	406107'	212 03 0 00 000344'		MOVNM	T3,TABSIZ
  4548	406110'	270 02 0 00 000003 		ADD	T2,T3		;MOVE OVER THAT MANY POSITIONS
  4549	406111'	201 03 0 00 000011 		MOVEI	T3,11		;GET THE TAB BACK
  4550	406112'	327 02 0 00 406051'		JUMPG	T2,MAKCP1	;O.K. IF STILL MORE TO GO
  4551	406113'	322 02 0 00 406062'		JUMPE	T2,MAKCP2	;OR JUMP IF COUNTED OUT EXACTLY
  4552	406114'	200 02 0 00 002253'		MOVE	T2,CHRPTR	;BACK POINTER UP BEFORE THE TAB
  4553	406115'	202 02 0 00 000346'		MOVEM	T2,TABPTR
  4554	406116'	270 02 0 00 411204'		ADD	T2,[70000,,0]
  4555	406117'	325 02 0 00 406121'		JUMPGE	T2,.+2
  4556	406120'	274 02 0 00 411175'		SUB	T2,[430000,,1]
  4557	406121'	202 02 0 00 002253'		MOVEM	T2,CHRPTR
  4558	406122'	263 17 0 00 000000 		POPJ	P,		;AND THEN DONE
  4559
  4560					;HERE IS CHARACTER POINTER IS O.K. - RECALCULATE IF IT POINTS TO A TAB
  4561
  4562	406123'	200 02 0 00 002253'	MAKCOK:	MOVE	T2,CHRPTR	;DONE - SEE WHAT CHARACTER IS POINTED TO
  4563	406124'	316 02 0 00 000014 		CAMN	T2,EN		;AT END OF BUFFER?
  4564						JRST	[MOVEI T2,15	;YES - NEED A FINAL <CR>
  4565							 IDPB  T2,EN
  4566							 MOVEI T2,12
  4567							 IDPB  T2,EN
  4568	406125'	254 00 0 00 412064'			 JRST  MAKCK1]
  4569	406126'	134 03 0 00 000002 		ILDB	T3,T2
  4570	406127'	322 03 0 00 406124'		JUMPE	T3,MAKCOK+1	;SKIP, IF NULL
  4571	406130'	306 03 0 00 000015 		CAIN	T3,15		;GET A <CR>?
  4572						JRST	[TLNN  F,INS	;YES - WANT TO INSERT IF CURSOR OUT OF RANGE?
  4573							 POPJ  P,	;NO - RETURN FROM MAKCPT
  4574	406131'	254 00 0 00 412071'			 JRST  MAKCK1]	;YES - RE-CALC CURSOR POINTER
  4575	406132'	302 03 0 00 000011 		CAIE	T3,11		;TAB?
  4576	406133'	263 17 0 00 000000 		POPJ	P,		;NO - RETURN FROM MAKCPT
  4577	406134'	254 00 0 00 406042'		JRST	MAKCK1		;ELSE RE-DO CHARACTER POINTER
  4578
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-9
SED	MAC	21-May-74 00:04		Utility subroutines

  4579					;HERE IF END OF LINE FOUND, BUT NOT ENOUGH CHARACTERS
  4580					;IF FLAG INS IS SET, ADD SPACES TO THE LINE, THEN POINT BEYOND THEM
  4581					;ELSE JUST POINT TO THE <CR>
  4582
  4583	406135'	607 05 0 00 040000 	MAKCCR:	TLNN	F,INS		;WANT TO EXTEND THE LINE?
  4584	406136'	254 00 0 00 406151'		JRST	MAKCC1		;NO - JUST RETURN POINTING TO <CR>
  4585	406137'	202 02 0 00 000336'		MOVEM	T2,NUMCHR	;ADD (T3) SPACES (AND SOME NULLS) TO THE FILE
  4586	406140'	261 17 0 00 000001 		PUSH	P,T1		;SAVE CHARACTER TO BE EVENTUALLY ADDED
  4587	406141'	205 01 0 00 070000 		MOVSI	T1,70000	;MOVE POINTER BEHIND THE <CR>
  4588	406142'	270 01 0 00 002253'		ADD	T1,CHRPTR
  4589	406143'	325 01 0 00 406145'		JUMPGE	T1,.+2
  4590	406144'	274 01 0 00 411175'		SUB	T1,[430000,,1]
  4591	406145'	202 01 0 00 002253'		MOVEM	T1,CHRPTR	;SAVE IT AGAIN
  4592	406146'	260 17 0 00 406777'		PUSHJ	P,MAKSPC	;PUNCH A HOLE IN THE FILE
  4593	406147'	262 17 0 00 000001 		POP	P,T1
  4594	406150'	254 00 0 00 406044'		JRST	MAKCP0		;MAKE CURSOR POINTER RIGHT
  4595
  4596	406151'	205 01 0 00 070000 	MAKCC1:	MOVSI	T1,70000	;BACK THE CHARACTER POINTER ONE NOTCH
  4597	406152'	270 01 0 00 002253'		ADD	T1,CHRPTR
  4598	406153'	325 01 0 00 406155'		JUMPGE	T1,.+2
  4599	406154'	274 01 0 00 411175'		SUB	T1,[430000,,1]
  4600	406155'	202 01 0 00 002253'		MOVEM	T1,CHRPTR
  4601	406156'	263 17 0 00 000000 		POPJ	P,
  4602
  4603					;SUBROUTINE TO MAKE A POINTER TO THE START OF THE LINE THE CURSOR IS ON
  4604					;CANNOT USE T1, SINCE THERE MAY BE A LIVE CHARACTER THERE
  4605
  4606	406157'	200 13 0 00 002254'	MAKLPT:	MOVE	PT,DISPTR	;GET POINTER TO START OF SCREEN
  4607	406160'	202 13 0 00 002252'		MOVEM	PT,LINPTR	;SAVE IT AS INITIAL LINE POINTER
  4608	406161'	336 04 0 00 000015 		SKIPN	T4,RW		;GET ROW TO MOVE TO - ZERO?
  4609	406162'	263 17 0 00 000000 		POPJ	P,		;YES - DONE
  4610	406163'	260 17 0 00 406247'		PUSHJ	P,ADVLPT	;NO - ADVANCE THE POINTER
  4611	406164'	321 04 0 00 406174'		JUMPL	T4,MAKLP2	;ADD LINES IF AT END OF FILE
  4612	406165'	202 13 0 00 002252'		MOVEM	PT,LINPTR	;SAVE THE CORRECT LINE POINTER
  4613	406166'	200 03 0 00 000013 		MOVE	T3,PT		;GET FRAGGABLE POINTER
  4614	406167'	316 03 0 00 000014 	MAKLP0:	CAMN	T3,EN		;AT END OF BUFFER?
  4615	406170'	254 00 0 00 406225'		JRST	ADDCR		;YES - NEED TO ADD A <CRLF> AT END
  4616	406171'	134 02 0 00 000003 		ILDB	T2,T3		;NO - FIND A NON-NULL CHARACTER
  4617	406172'	322 02 0 00 406167'		JUMPE	T2,MAKLP0
  4618	406173'	263 17 0 00 000000 		POPJ	P,		;GOT ONE - O.K.
  4619
  4620					;HERE IF END OF BUFFER FOUND, BUT NOT ENOUGH <CR>S
  4621					;IF THE INS FLAG IS SET, ADD THE DESIRED <CR>S TO BUFFER, PLUS SOME NULLS
  4622					;THEN POINT BEYOND THE <CR>S
  4623					;IF INS NOT SET, POINT TO LAST <CR>
  4624
  4625	406174'	607 05 0 00 040000 	MAKLP2:	TLNN	F,INS		;WANT TO INSERT STUFF?
  4626	406175'	254 00 0 00 406211'		JRST	MAKLP3		;NO - JUST POINT TO LAST <CR>
  4627	406176'	201 03 0 00 000015 		MOVEI	T3,15		;NO - SAVE OFF <CRLF>S
  4628	406177'	201 02 0 00 000012 		MOVEI	T2,12
  4629	406200'	136 03 0 00 000014 		IDPB	T3,EN
  4630	406201'	136 02 0 00 000014 		IDPB	T2,EN
  4631	406202'	341 04 0 00 406200'		AOJL	T4,.-2		;UNTIL GOT ENOUGH
  4632	406203'	202 14 0 00 002252'		MOVEM	EN,LINPTR	;SAVE AS POINTER TO DESIRED LINE
  4633	406204'	136 03 0 00 000014 		IDPB	T3,EN		;AND A FINAL <CR>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-10
SED	MAC	21-May-74 00:04		Utility subroutines

  4634	406205'	136 02 0 00 000014 		IDPB	T2,EN
  4635	406206'	400 03 0 00 000000 		SETZ	T3,
  4636	406207'	136 03 0 00 000014 		IDPB	T3,EN
  4637	406210'	263 17 0 00 000000 		POPJ	P,
  4638
  4639	406211'	270 13 0 00 411204'	MAKLP3:	ADD	PT,[70000,,0]	;BACK THE LINE POINTER ONE NOTCH
  4640	406212'	325 13 0 00 406214'		JUMPGE	PT,.+2
  4641	406213'	274 13 0 00 411175'		SUB	PT,[430000,,1]
  4642	406214'	135 01 0 00 000013 		LDB	T1,PT		;LOOK FOR A <CR>
  4643	406215'	302 01 0 00 000015 		CAIE	T1,15		;IS IT?
  4644	406216'	254 00 0 00 406211'		JRST	MAKLP3		;NO - LOOP
  4645	406217'	270 13 0 00 411204'		ADD	PT,[70000,,0]	;BACK UP BEFORE THE <CR>
  4646	406220'	325 13 0 00 406222'		JUMPGE	PT,.+2
  4647	406221'	274 13 0 00 411175'		SUB	PT,[430000,,1]
  4648	406222'	202 13 0 00 002252'		MOVEM	PT,LINPTR	;SAVE LINE POINTER
  4649	406223'	661 05 0 00 000014 		TLO	F,XPL!XPC	;BUT SAY IT'S INVALID
  4650	406224'	263 17 0 00 000000 		POPJ	P,		;AND RETURN
  4651
  4652	406225'	201 02 0 00 000015 	ADDCR:	MOVEI	T2,15		;END BUFFER WITH A <CRLF>
  4653	406226'	136 02 0 00 000014 		IDPB	T2,EN		;  AND A NULL
  4654	406227'	201 02 0 00 000012 		MOVEI	T2,12
  4655	406230'	136 02 0 00 000014 		IDPB	T2,EN
  4656	406231'	400 02 0 00 000000 		SETZ	T2,
  4657	406232'	136 02 0 00 000014 		IDPB	T2,EN
  4658	406233'	263 17 0 00 000000 		POPJ	P,
  4659
  4660					;SUBROUTINE TO SET UP THE POINTER TO THE LAST LINE ON THE SCREEN
  4661					;WORKS WITH LINPTR IF IT'S VALID (BEING CLOSER); ELSE USES DISPTR
  4662					;RETURNS BOTTOM POINTER BOTH IN PT AND BOTPTR
  4663
  4664					;RETURNS 0 IF LAST LINE IS BEYOND END OF BUFFER, HENCE NOTHING TO DISPLAY
  4665					;  (ALSO, IF ZERO, FENCE SHOULD BE ON SCREEN)
  4666
  4667	406234'	200 04 0 00 000323'	MAKBPT:	MOVE	T4,LPP.1	;GET DISTANCE OF BOTTOM LINE FROM TOP LINE
  4668	406235'	603 05 0 00 000004 		TLNE	F,XPL		;IS LINE POINTER VALID?
  4669						JRST	[MOVE  PT,DISPTR ;NO - USE DISPLAY POINTER
  4670	406236'	254 00 0 00 412074'			 JRST  MAKBP1]
  4671	406237'	200 13 0 00 002252'		MOVE	PT,LINPTR	;YES - USE IT
  4672	406240'	274 04 0 00 000015 		SUB	T4,RW		;AND WORK A FEW LINES LESS
  4673	406241'	322 04 0 00 406245'		JUMPE	T4,MAKBP2	;ALREADY AT BOTTOM LINE. WADDYA KNOW
  4674
  4675	406242'	260 17 0 00 406247'	MAKBP1:	PUSHJ	P,ADVLPT	;ADVANCE THE POINTER
  4676	406243'	325 04 0 00 406245'		JUMPGE	T4,.+2		;BEYOND END OF FILE?
  4677	406244'	400 13 0 00 000000 		SETZ	PT,		;YES - NO POINTER, THEN
  4678	406245'	202 13 0 00 002255'	MAKBP2:	MOVEM	PT,BOTPTR	;SAVE POINTER (OR NON-POINTER)
  4679	406246'	263 17 0 00 000000 		POPJ	P,
  4680
  4681					;SUBROUTINE TO ADVANCE THE POINTER IN PT (T4) LINES
  4682					;T4 IS RETURNED WITH NEGATIVE NUMBER OF LINES NOT FOUND (0 IF ALL FOUND)
  4683
  4684	406247'	316 14 0 00 000013 	ADVLPT:	CAMN	EN,PT		;AT END OF USEABLE BUFFER?
  4685						JRST	[MOVN T4,T4	;NO - RETURN NEGATIVE # LINES NOT FOUND
  4686	406250'	254 00 0 00 412076'			 POPJ P,]	;AND RETURN
  4687	406251'	134 02 0 00 000013 		ILDB	T2,PT		;GET A CHARACTER
  4688	406252'	302 02 0 00 000015 	ADVLP1:	CAIE	T2,15		;CARRIAGE RETURN?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-11
SED	MAC	21-May-74 00:04		Utility subroutines

  4689	406253'	254 00 0 00 406247'		JRST	ADVLPT		;NO - IGNORE IT
  4690
  4691	406254'	134 02 0 00 000013 		ILDB	T2,PT		;YES - PICK UP THE <LF>
  4692	406255'	302 02 0 00 000012 		CAIE	T2,12		;IS IT REALLY?
  4693	406256'	254 00 0 00 406252'		JRST	ADVLP1		;NO - IT'S NOT THE END OF THE LINE
  4694	406257'	367 04 0 00 406247'		SOJG	T4,ADVLPT	;YES - LOOP THROUGH DESIRED NUMBER OF ROWS
  4695	406260'	263 17 0 00 000000 		POPJ	P,		;DONE
  4696
  4697					;************************************************************************
  4698					;SUBROUTINE TO OVERWRITE (T4) REAL CHARACTERS (NOT NULLS) WITH NULLS
  4699					;AT (PT), WHICH IS FRAGGED
  4700					;STOPS WHEN COUNTED OUT, OR AT END OF LINE
  4701
  4702	406261'	202 04 0 00 000335'	WRTNUL:	MOVEM	T4,WRTNUM	;SAVE NUMBER OF CHARS TO NULL
  4703	406262'	400 01 0 00 000000 		SETZ	T1,		;GET A NULL
  4704	406263'	134 02 0 00 000013 		ILDB	T2,PT		;GET FIRST CHARACTER
  4705						JUMPE	T2,[CAME PT,EN	;IF NULL, REACHED END OF BUFFER?
  4706							    JRST .-1	;NO - JUST IGNORE THE NULL
  4707	406264'	322 02 0 00 412100'			    POPJ P,]	;YES - RETURN NOW
  4708	406265'	302 02 0 00 000011 		CAIE	T2,11		;IS IT A TAB?
  4709	406266'	254 00 0 00 406300'		JRST	WRTNL2-2	;NO - CONTINUE
  4710	406267'	200 02 0 00 000345'		MOVE	T2,TABSPC	;YES - FIND NUMBER OF SPACES RIGHT OF CURSOR
  4711	406270'	274 02 0 00 000344'		SUB	T2,TABSIZ
  4712	406271'	254 00 0 00 406317'		JRST	WRTNT1		;PROCESS THE TAB
  4713
  4714	406272'	134 02 0 00 000013 	WRTNL1:	ILDB	T2,PT		;GET A CHARACTER
  4715	406273'	316 13 0 00 000014 		CAMN	PT,EN		;AT END OF BUFFER?
  4716	406274'	263 17 0 00 000000 		POPJ	P,		;YES - GO HOME EARLY
  4717	406275'	322 02 0 00 406272'		JUMPE	T2,WRTNL1	;IGNORE IF NULL
  4718	406276'	306 02 0 00 000011 		CAIN	T2,11		;IS IT A TAB?
  4719	406277'	254 00 0 00 406312'		JRST	WRTNTB		;YES - SEE HOW LONG THE TAB IS
  4720	406300'	306 02 0 00 000015 		CAIN	T2,15		;IS IT A <CR>?
  4721	406301'	260 17 0 00 406305'		PUSHJ	P,WRTNL3	;YES - DONE, IF FOLLOWED BY  <LF>
  4722	406302'	137 01 0 00 000013 	WRTNL2:	DPB	T1,PT		;ELSE OVERWRITE WITH A NULL
  4723	406303'	367 04 0 00 406272'		SOJG	T4,WRTNL1	;AND COUNT IT - GOT ENOUGH?
  4724	406304'	263 17 0 00 000000 		POPJ	P,		;YES - RETURN
  4725
  4726	406305'	200 03 0 00 000013 	WRTNL3:	MOVE	T3,PT		;GET SCRATCH BUFFER POINTER
  4727	406306'	134 02 0 00 000003 		ILDB	T2,T3		;GET NEXT CHARACTER
  4728	406307'	306 02 0 00 000012 		CAIN	T2,12		;<LF>?
  4729	406310'	262 17 0 00 000000 		POP	P,		;YES - FINISHED. NOW.
  4730	406311'	263 17 0 00 000000 		POPJ	P,		;NO - NULL OUT THE <CR>, TOO
  4731
  4732	406312'	200 02 0 00 000016 	WRTNTB:	MOVE	T2,CM		;GET STARTING COLUMN POSITION
  4733	406313'	270 02 0 00 000335'		ADD	T2,WRTNUM	;PLUS LENGTH OF DELETE
  4734	406314'	274 02 0 00 000004 		SUB	T2,T4		;LESS NUMBER TO GO, GIVES PRESENT POSITION
  4735	406315'	405 02 0 00 000007 		ANDI	T2,7		;FIND NEGATIVE SIZE OF TAB
  4736	406316'	275 02 0 00 000010 		SUBI	T2,10
  4737	406317'	270 04 0 00 000002 	WRTNT1:	ADD	T4,T2		;COUNT OFF THAT MANY SPACES FROM DELETE
  4738	406320'	137 01 0 00 000013 		DPB	T1,PT		;NULL OUT THE TAB
  4739	406321'	327 04 0 00 406272'		JUMPG	T4,WRTNL1	;CONTINUE, IF STILL MORE TO GO
  4740	406322'	210 04 0 00 000004 		MOVN	T4,T4		;AND ADD SOME SPACES FOR THIS TAB, TOO
  4741	406323'	272 04 0 00 000336'		ADDM	T4,NUMCHR
  4742	406324'	263 17 0 00 000000 		POPJ	P,		;AND GO ADD THEM
  4743
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-12
SED	MAC	21-May-74 00:04		Utility subroutines

  4744					;************************************************************************
  4745					;SUBROUTINE TO CALCULATE RW AND LINPTR, GIVEN CHRPTR AND DISPTR
  4746
  4747	406325'	200 13 0 00 002254'	CALCRW:	MOVE	PT,DISPTR	;START FROM START OF SCREEN
  4748	406326'	202 13 0 00 002252'		MOVEM	PT,LINPTR	;SAVE (TENTATIVE) LINE POINTER
  4749	406327'	400 15 0 00 000000 		SETZ	RW,		;CLEAR ROW NUMBER
  4750	406330'	316 13 0 00 002253'	CALRW1:	CAMN	PT,CHRPTR	;AT DESIRED POSITION?
  4751	406331'	263 17 0 00 000000 		POPJ	P,		;YES - DONE
  4752	406332'	134 01 0 00 000013 		ILDB	T1,PT		;NO - GET CHARACTER
  4753	406333'	302 01 0 00 000015 	CALRW2:	CAIE	T1,15		;<CR>?
  4754	406334'	254 00 0 00 406330'		JRST	CALRW1		;NO - SKIP IT
  4755	406335'	134 01 0 00 000013 		ILDB	T1,PT		;YES - GET NEXT CHARACTER
  4756	406336'	302 01 0 00 000012 		CAIE	T1,12		;<LF>?
  4757	406337'	254 00 0 00 406333'		JRST	CALRW2		;NO - SKIP IT
  4758	406340'	202 13 0 00 002252'		MOVEM	PT,LINPTR	;SAVE (TENTATIVE) LINE POINTER
  4759	406341'	344 15 0 00 406330'		AOJA	RW,CALRW1	;YES - COUNT LINE AND LOOP
  4760
  4761					;SUBROUTINE TO CALCULATE THE NUMBER OF LINES AND PAGES, AND TOTAL LINES
  4762					;SINCE THE START OF THE FILE
  4763
  4764	406342'	403 03 0 00 000310'	FINDRW:	SETZB	T3,SAVEAC	;CLEAR PAGE NUMBER AND TOTAL LINES
  4765	406343'	254 00 0 00 406345'		JRST	.+2		;SKIP SUMMING THE FIRST TIME
  4766	406344'	272 15 0 00 000310'	FNDRW0:	ADDM	RW,SAVEAC	;ADD UP TOTAL LINES PASSED OVER
  4767	406345'	400 15 0 00 000000 		SETZ	RW,		;CLEAR ROW NUMBER
  4768	406346'	316 13 0 00 002253'	FNDRW1:	CAMN	PT,CHRPTR	;AT DESIRED POSITION?
  4769						JRST	[ADDM RW,SAVEAC	;YES - ADD IN LINES FROM LAST PAGE
  4770	406347'	254 00 0 00 412103'			 POPJ P,]	;DONE
  4771	406350'	134 01 0 00 000013 		ILDB	T1,PT		;NO - GET CHARACTER
  4772	406351'	306 01 0 00 000014 	FNDRW2:	CAIN	T1,14		;FORMFEED?
  4773	406352'	344 03 0 00 406344'		AOJA	T3,FNDRW0	;YES - BUMP PAGES AND ZERO LINES
  4774	406353'	302 01 0 00 000015 		CAIE	T1,15		;<CR>?
  4775	406354'	254 00 0 00 406346'		JRST	FNDRW1		;NO - SKIP IT
  4776	406355'	134 01 0 00 000013 		ILDB	T1,PT		;YES - GET NEXT CHARACTER
  4777	406356'	302 01 0 00 000012 		CAIE	T1,12		;<LF>?
  4778	406357'	254 00 0 00 406351'		JRST	FNDRW2		;NO - SKIP IT
  4779	406360'	344 15 0 00 406346'		AOJA	RW,FNDRW1	;YES - COUNT LINE AND LOOP
  4780
  4781					;SUBROUTINE TO CALCULATE CM, GIVEN CHRPTR, AND LINPTR IN PT
  4782					;IF CM IS BEYOND SCREEN LIMITS, DOES A SLIDE TO PUT IT WITHIN LIMITS
  4783					;NORMAL RETURN IF SLIDE, ELSE SKIP RETURN
  4784
  4785	406361'	400 16 0 00 000000 	CALCCM:	SETZ	CM,		;CLEAR COLUMN NUMBER
  4786	406362'	350 00 0 17 000000 		AOS	(P)		;ASSUME THERE WON'T BE A SLIDE
  4787	406363'	316 13 0 00 002253'	CALCM1:	CAMN	PT,CHRPTR	;AT CHARACTER POSITION?
  4788	406364'	254 00 0 00 406374'		JRST	CALCCD		;YES - DONE
  4789	406365'	134 01 0 00 000013 		ILDB	T1,PT		;NO - GET CHARACTER
  4790	406366'	322 01 0 00 406363'		JUMPE	T1,CALCM1	;IGNORE IF NULL
  4791	406367'	302 01 0 00 000011 		CAIE	T1,11		;TAB?
  4792	406370'	344 16 0 00 406363'		AOJA	CM,CALCM1	;NO - COUNT CHARACTER AND LOOP
  4793	406371'	271 16 0 00 000010 		ADDI	CM,10		;YES - COUNT THE RIGHT AMOUNT
  4794	406372'	620 16 0 00 000007 		TRZ	CM,7
  4795	406373'	254 00 0 00 406363'		JRST	CALCM1
  4796
  4797	406374'	274 16 0 00 000011 	CALCCD:	SUB	CM,SL		;ACCOUNT FOR THE SLIDE
  4798	406375'	315 16 0 07 000024 		CAMGE	CM,CPL(TM)	;OFF THE RIGHT SIDE?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-13
SED	MAC	21-May-74 00:04		Utility subroutines

  4799	406376'	254 00 0 00 406410'		JRST	CALCD1		;NO - CHECK LEFT
  4800	406377'	200 01 0 00 000016 		MOVE	T1,CM		;YES - SLIDE A BIT TO SHOW THE MATCH
  4801	406400'	200 02 0 07 000024 		MOVE	T2,CPL(TM)
  4802	406401'	231 02 0 00 000003 		IDIVI	T2,3
  4803	406402'	242 02 0 00 000001 		LSH	T2,1
  4804	406403'	274 01 0 00 000002 		SUB	T1,T2
  4805	406404'	270 11 0 00 000001 		ADD	SL,T1
  4806	406405'	274 16 0 00 000001 		SUB	CM,T1
  4807	406406'	370 00 0 17 000000 		SOS	(P)		;GIVE A NORMAL RETURN
  4808	406407'	263 17 0 00 000000 		POPJ	P,		;RETURN
  4809
  4810	406410'	325 16 0 00 400543'	CALCD1:	JUMPGE	CM,CPOPJ	;OFF THE LEFT SIDE?
  4811	406411'	270 11 0 00 000016 		ADD	SL,CM		;YES - MOVE LEFT SO KEY IS ON SCREEN
  4812	406412'	400 16 0 00 000000 		SETZ	CM,
  4813	406413'	370 00 0 17 000000 		SOS	(P)		;GIVE A NORMAL RETURN
  4814	406414'	263 17 0 00 000000 		POPJ	P,		;RETURN
  4815
  4816					;************************************************************************
  4817					;SWITCH HANDLING SUBROUTINES. THERE BE:
  4818					;SWHMNY - HANDLES A STRING OF SWITCHES. T2 POINTS TO START OF FIRST ONE
  4819					;SWHONE - HANDLES A SINGLE SWITCH IN PARBUF
  4820
  4821					;MANY SWITCHES: TRANSFER EACH TO PARBUF; CALL SWHONE; LOOP
  4822					;SWITCHES END WITH A RETURN OR A NULL
  4823					;SWITCHES ARE NULLED OUT OF (T2) AS THEY ARE TRANFERRED
  4824					;CALL WITH T2 POINTING AFTER THE "/" OF THE FIRST SWITCH
  4825
  4826	406415'	200 03 0 00 411207'	SWHMNY:	MOVE	T3,[POINT 7,PARBUF]
  4827	406416'	202 03 0 00 002227'		MOVEM	T3,PARPTR
  4828	406417'	400 00 0 00 000000 		SETZ	T0,		;GET A NULL FOR NULLING
  4829	406420'	134 01 0 00 000002 	SWHMN0:	ILDB	T1,T2		;TRANSFER SWITCH TO PARAMETER BUFFER
  4830	406421'	322 01 0 00 406434'		JUMPE	T1,SWHMN1	;IF NULL, HANDLE LAST SWITCH
  4831	406422'	137 00 0 00 000002 		DPB	T0,T2		;NULL OUT THE SOURCE CHARACTER
  4832	406423'	306 01 0 00 000040 		CAIN	T1," "		;IGNORE SPACES
  4833	406424'	254 00 0 00 406420'		JRST	SWHMN0
  4834	406425'	306 01 0 00 000130 		CAIN	T1,"X"		;EXECUTE SWITCH?
  4835	406426'	254 00 0 00 406451'		JRST	SWHMNX		;YES - SPECIAL CASE
  4836	406427'	302 01 0 00 000057 		CAIE	T1,"/"		;START OF ANOTHER SWITCH?
  4837	406430'	306 01 0 00 000015 		CAIN	T1,15		;OR END OF LINE?
  4838	406431'	254 00 0 00 406434'		JRST	SWHMN1		;YES - PROCESS THE SWITCH
  4839	406432'	136 01 0 00 000003 		IDPB	T1,T3		;ELSE SAVE CHARACTER
  4840	406433'	254 00 0 00 406420'		JRST	SWHMN0		;AND GET ANOTHER
  4841
  4842	406434'	124 01 0 00 000314'	SWHMN1:	DMOVEM	T1,SAVEAC+4	;SAVE LATEST CHARACTER AND SWITCH POINTER
  4843	406435'	136 00 0 00 000003 		IDPB	T0,T3		;END WITH A NULL
  4844	406436'	260 17 0 00 406503'		PUSHJ	P,SWHONE	;PROCESS THE SWITCH
  4845	406437'	120 01 0 00 000314'	SWHMN2:	DMOVE	T1,SAVEAC+4	;GET CHARACTER AND POINTER BACK
  4846	406440'	322 01 0 00 400543'	SWHMN3:	JUMPE	T1,CPOPJ	;RETURN, IF DONE
  4847	406441'	302 01 0 00 000015 		CAIE	T1,15		;AT END OF LINE?
  4848	406442'	254 00 0 00 406415'		JRST	SWHMNY		;NO - LOOK FOR ANOTHER SWITCH
  4849	406443'	400 00 0 00 000000 		SETZ	T0,		;YES - GET THE NULL AGAIN
  4850	406444'	134 01 0 00 000002 	SWHMNS:	ILDB	T1,T2		;SKIP REST OF LINE
  4851	406445'	137 00 0 00 000002 		DPB	T0,T2		;NULLING ALONG THE WAY
  4852	406446'	302 01 0 00 000012 		CAIE	T1,12		;UNTIL LINEFEED
  4853	406447'	254 00 0 00 406444'		JRST	SWHMNS
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-14
SED	MAC	21-May-74 00:04		Utility subroutines

  4854	406450'	263 17 0 00 000000 		POPJ	P,		;DONE
  4855
  4856					;HERE TO HANDLE THE EXECUTE SWITCH SEPARATELY
  4857
  4858	406451'	136 01 0 00 000003 	SWHMNX:	IDPB	T1,T3
  4859	406452'	134 01 0 00 000002 		ILDB	T1,T2		;SAVE BUFFER NAME IN PARM BUFFER
  4860	406453'	302 01 0 00 000057 		CAIE	T1,"/"		;START OF ANOTHER SWITCH?
  4861	406454'	302 01 0 00 000015 		CAIE	T1,15
  4862	406455'	254 00 0 00 406440'		JRST	SWHMN3		;YES - IGNORE THIS BAD FORMAT
  4863	406456'	302 01 0 00 000072 		CAIE	T1,":"		;START OF CONTENTS?
  4864	406457'	254 00 0 00 406452'		JRST	SWHMNX+1	;NO - KEEP GOING
  4865
  4866	406460'	661 05 0 00 000001 		TLO	F,FLG		;SET TO GET A RETURN FROM XCT ROUTINES
  4867	406461'	400 01 0 00 000000 		SETZ	T1,		;END WITH A NULL
  4868	406462'	136 01 0 00 000003 		IDPB	T1,T3
  4869	406463'	202 02 0 00 000314'		MOVEM	T2,SAVEAC+4	;SAVE POINTER
  4870	406464'	260 17 0 00 403316'		PUSHJ	P,XCTSET	;SET UP THAT BUFFER
  4871	406465'	200 02 0 00 000314'		MOVE	T2,SAVEAC+4	;RESTORE POINTER
  4872	406466'	200 03 0 00 411430'		MOVE	T3,[POINT 7,PARBUF,6]
  4873
  4874	406467'	134 01 0 00 000002 	SWHMX1:	ILDB	T1,T2		;MOVE CONTENTS TO PARM BUFFER
  4875	406470'	302 01 0 00 000057 		CAIE	T1,"/"		;START OF A NEW SWITCH
  4876	406471'	306 01 0 00 000015 		CAIN	T1,15		;  OR END OF LINE?
  4877	406472'	254 00 0 00 406475'		JRST	SWHMX2		;YES - SET UP CONTENTS
  4878	406473'	136 01 0 00 000003 		IDPB	T1,T3		;NO - SAVE CHARACTER
  4879	406474'	254 00 0 00 406467'		JRST	SWHMX1		;AND LOOP
  4880
  4881	406475'	124 01 0 00 000314'	SWHMX2:	DMOVEM	T1,SAVEAC+4	;SAVE CHARACTER AND POINTER
  4882	406476'	400 01 0 00 000000 		SETZ	T1,		;END WITH A NULL
  4883	406477'	136 01 0 00 000003 		IDPB	T1,T3
  4884	406500'	260 17 0 00 403344'		PUSHJ	P,XCTWRT	;WRITE THE BUFFER
  4885	406501'	621 05 0 00 000001 		TLZ	F,FLG		;CLEAR RETURN FLAG
  4886	406502'	254 00 0 00 406437'		JRST	SWHMN2		;RESTORE ACS AND CONTINUE
  4887
  4888					;SUBROUTINE TO PARSE AND HANDLE A SINGLE SWITCH, WHICH IS IN PARAMETER BUFFER
  4889
  4890	406503'	200 13 0 00 411207'	SWHONE:	MOVE	PT,[POINT 7,PARBUF]
  4891	406504'	474 04 0 00 000000 		SETO	T4,		;SET TO SET SWITCH
  4892	406505'	201 03 0 00 000020 		MOVEI	T3,SWHNUM	;SET UP INDEX TO SWITCHES
  4893	406506'	260 17 0 00 406523'		PUSHJ	P,SWHLUR	;GET NEXT CHARACTER
  4894	406507'	302 01 0 00 000116 		CAIE	T1,"N"		;IS IT A NO-SWITCH?
  4895	406510'	254 00 0 00 406516'		JRST	SWHLUK		;NO - CONTINUE
  4896	406511'	400 04 0 00 000000 		SETZ	T4,		;YES - WANT TO CLEAR SWITCH
  4897	406512'	260 17 0 00 406523'		PUSHJ	P,SWHLUR	;GET NEXT CHARACTER
  4898	406513'	302 01 0 00 000117 		CAIE	T1,"O"		;IS IT AN "O"?
  4899	406514'	254 00 0 00 406516'		JRST	SWHLUK		;NO - CONTINUE
  4900	406515'	260 17 0 00 406523'		PUSHJ	P,SWHLUR	;GET NEXT CHARACTER
  4901	406516'	135 02 0 00 412105'	SWHLUK:	LDB	T2,[POINT 7,SWCHES-1(T3),6]
  4902	406517'	312 01 0 00 000002 		CAME	T1,T2		;IS THIS THE SWITCH?
  4903	406520'	367 03 0 00 406516'		SOJG	T3,SWHLUK	;NO - LOOK AT THE NEXT ONE
  4904	406521'	323 03 0 00 406767'		JUMPLE	T3,SWHERR	;ERROR IF NOT FOUND
  4905	406522'	254 00 1 03 410672'		JRST	@SWHADR-1(T3)	;HANDLE THE SWITCH AND RETURN
  4906
  4907	406523'	134 01 0 00 000013 	SWHLUR:	ILDB	T1,PT		;GET NEXT CHARACTER
  4908	406524'	306 01 0 00 000040 		CAIN	T1," "		;SPACE?
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-15
SED	MAC	21-May-74 00:04		Utility subroutines

  4909	406525'	254 00 0 00 406523'		JRST	SWHLUR		;YES - IGNORE IT
  4910	406526'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  4911	406527'	275 01 0 00 000040 		SUBI	T1,40		;YES - CONVERT TO UPPER
  4912	406530'	263 17 0 00 000000 		POPJ	P,		;RETURN
  4913
  4914					;ROUTINES TO HANDLE EACH SWITCH (POPJ WHEN DONE)
  4915
  4916	406531'	202 04 0 00 000357'	SWHSLD:	MOVEM	T4,SLDFLG	;SAVE SLIDE FLAG
  4917	406532'	263 17 0 00 000000 		POPJ	P,
  4918	406533'	202 04 0 00 000360'	SWHUPP:	MOVEM	T4,UPPFLG	;SAVE UPPER-LOWER CASE FLAG
  4919	406534'	263 17 0 00 000000 		POPJ	P,
  4920
  4921	406535'	325 04 0 00 406537'	SWHCAS:	JUMPGE	T4,.+2		;MAKE SEARCHES CASE-DEPENDENT?
  4922	406536'	624 05 0 00 002000 		TRZA	F,NLC		;YES
  4923	406537'	660 05 0 00 002000 		TRO	F,NLC		;NO
  4924	406540'	263 17 0 00 000000 		POPJ	P,
  4925
  4926	406541'	260 17 0 00 406523'	SWHBBB:	PUSHJ	P,SWHLUR	;HERE FOR BA OR BE - READ CHARACTER
  4927	406542'	306 01 0 00 000105 		CAIN	T1,"E"		;BEEP SWITCH?
  4928	406543'	254 00 0 00 406552'		JRST	SWHBEP		;YES - HANDLE IT
  4929	406544'	306 01 0 00 000114 		CAIN	T1,"L"		;BLOCK SWITCH?
  4930	406545'	254 00 0 00 406556'		JRST	SWHSBK		;YES - HANDLE IT
  4931	406546'	302 01 0 00 000101 		CAIE	T1,"A"		;BACKUP SWITCH?
  4932	406547'	254 00 0 00 406775'		JRST	SWAERR		;NO - IT'S AMBIGUOUS
  4933	406550'	202 04 0 00 000361'		MOVEM	T4,BAKFLG	;YES - SAVE BACKUP FILE FLAG
  4934	406551'	263 17 0 00 000000 		POPJ	P,
  4935
  4936	406552'	322 04 0 00 406554'	SWHBEP:	JUMPE	T4,.+2		;SET BEEP-ON-INSERT-MODE FLAG?
  4937	406553'	665 07 0 00 000200 		TLOA	TM,BEP		;YES
  4938	406554'	621 07 0 00 000200 		TLZ	TM,BEP		;NO
  4939	406555'	263 17 0 00 000000 		POPJ	P,
  4940
  4941	406556'	260 17 0 00 406726'	SWHSBK:	PUSHJ	P,SWHARG	;GET AMOUNT OF FILE TO READ IN, IN BLOCKS
  4942	406557'	634 03 0 00 000003 		  TDZA	T3,T3		;IF NO ARG USE ZERO (READ ENTIRE FILE)
  4943	406560'	242 03 0 00 000007 		LSH	T3,7		;CONVERT BLOCKS INTO WORDS
  4944	406561'	202 03 0 00 000364'		MOVEM	T3,FILSBK	;SAVE AMOUNT
  4945	406562'	263 17 0 00 000000 		POPJ	P,
  4946
  4947	406563'	260 17 0 00 406523'	SWHRRR:	PUSHJ	P,SWHLUR	;HERE FOR RO OR RE - READ CHARACTER
  4948	406564'	306 01 0 00 000105 		CAIN	T1,"E"		;RESET SWITCH?
  4949	406565'	254 00 0 00 406574'		JRST	SWHNOM		;YES - HANDLE IT
  4950	406566'	302 01 0 00 000117 		CAIE	T1,"O"		;ROLL SWITCH?
  4951	406567'	254 00 0 00 406775'		JRST	SWAERR		;NO - IT'S AMBIGUOUS
  4952	406570'	325 04 0 00 406572'		JUMPGE	T4,.+2		;ROLL IF USER TYPES RETURN ON BOTTOM LINE?
  4953	406571'	624 05 0 00 001000 		TRZA	F,NRC		;NO
  4954	406572'	660 05 0 00 001000 		TRO	F,NRC		;YES
  4955	406573'	263 17 0 00 000000 		POPJ	P,
  4956
  4957	406574'	322 04 0 00 406576'	SWHNOM:	JUMPE	T4,.+2		;SET RESET NOMINALS FLAG?
  4958	406575'	664 05 0 00 100000 		TROA	F,RST		;YES
  4959	406576'	620 05 0 00 100000 		TRZ	F,RST		;NO
  4960	406577'	263 17 0 00 000000 		POPJ	P,
  4961
  4962	406600'	325 04 0 00 406602'	SWHLSD:	JUMPGE	T4,.+2		;SET LINEFEED-CURSOR DOWN FLAG?
  4963	406601'	625 07 0 00 400000 		TLZA	TM,LSD		;NO
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-16
SED	MAC	21-May-74 00:04		Utility subroutines

  4964	406602'	661 07 0 00 400000 		TLO	TM,LSD		;YES
  4965	406603'	263 17 0 00 000000 		POPJ	P,
  4966
  4967	406604'	326 04 0 00 406606'	SWHRDO:	JUMPN	T4,.+2		;[CSM] Set READONLY flag?
  4968	406605'	625 05 0 00 000400 		TLZA	F,RDO		;[CSM] No
  4969	406606'	661 05 0 00 000400 		TLO	F,RDO		;[CSM] Yes
  4970	406607'	263 17 0 00 000000 		POPJ	P,
  4971
  4972	406610'	322 04 0 00 406612'	SWHWRT:	JUMPE	T4,.+2		;SET READ-ONLY FLAG?
  4973	406611'	625 05 0 00 000400 		TLZA	F,RDO		;NO
  4974	406612'	661 05 0 00 000400 		TLO	F,RDO		;YES
  4975	406613'	263 17 0 00 000000 		POPJ	P,
  4976
  4977	406614'	322 04 0 00 406616'	SWHTBB:	JUMPE	T4,.+2		;SET DISPLAY TABS FLAG?
  4978	406615'	664 05 0 00 010000 		TROA	F,DTB		;YES
  4979	406616'	620 05 0 00 010000 		TRZ	F,DTB		;NO
  4980	406617'	263 17 0 00 000000 		POPJ	P,
  4981
  4982	406620'	322 04 0 00 406622'	SWHHLP:	JUMPE	T4,.+2		;SET NO-HELP-WANTED FLAG?
  4983	406621'	624 05 0 00 020000 		TRZA	F,NHP		;NO
  4984	406622'	660 05 0 00 020000 		TRO	F,NHP		;YES
  4985	406623'	263 17 0 00 000000 		POPJ	P,
  4986
  4987	406624'	322 04 0 00 406626'	SWHICR:	JUMPE	T4,.+2		;SET NO CR IN INSERT MODE FLAG?
  4988	406625'	624 05 0 00 040000 		TRZA	F,NCR		;NO
  4989	406626'	660 05 0 00 040000 		TRO	F,NCR		;YES
  4990	406627'	263 17 0 00 000000 		POPJ	P,
  4991
  4992	406630'	322 04 0 00 406635'	SWHTAB:	JUMPE	T4,SWHTBW	;IF NOTABS, SET UP WORDWISE TABS
  4993	406631'	260 17 0 00 406726'		PUSHJ	P,SWHARG	;ELSE READ ARGUMENT
  4994	406632'	254 00 0 00 406634'		  JRST	SWHTNW		;NO ARG - SET UP NORMAL TABS
  4995	406633'	202 03 0 00 000343'		MOVEM	T3,TABLEN	;SAVE ARG AS LENGTH OF A TAB
  4996	406634'	624 05 0 00 000400 	SWHTNW:	TRZA	F,WTB		;CLEAR WORDWISE TAB FLAG
  4997	406635'	660 05 0 00 000400 	SWHTBW:	TRO	F,WTB		;SET WORDWISE TAB FLAG
  4998	406636'	263 17 0 00 000000 		POPJ	P,		;DONE
  4999
  5000	406637'	260 17 0 00 406726'	SWHPRC:	PUSHJ	P,SWHARG	;GET PERCENTAGE TO GO TO
  5001	406640'	334 03 0 00 000030'		  SKIPA	T3,GOPERC	;IF NO ARG USE CURRENT PERCENT
  5002	406641'	321 03 0 00 406767'		JUMPL	T3,SWHERR	;PERCENT MUST BE WITHIN [0,100]
  5003	406642'	303 03 0 00 000144 		CAILE	T3,^D100
  5004	406643'	254 00 0 00 406767'		JRST	SWHERR		;IT'S NOT - ERROR
  5005	406644'	202 03 0 00 000031'		MOVEM	T3,GOPRCT	;O.K. - SAVE STARTING PERCENT VALUE
  5006	406645'	263 17 0 00 000000 		POPJ	P,
  5007
  5008	406646'	260 17 0 00 406523'	SWHPPP:	PUSHJ	P,SWHLUR	;HERE FOR PA OR PR - READ CHARACTER
  5009	406647'	306 01 0 00 000101 		CAIN	T1,"A"		;PAGE-AND-LINE STATUS SWITCH?
  5010	406650'	254 00 0 00 406657'		JRST	SWHPAG		;YES - HANDLE IT
  5011	406651'	302 01 0 00 000122 		CAIE	T1,"R"		;PROG TO RUN ON EXIT SWITCH?
  5012	406652'	254 00 0 00 406775'		JRST	SWAERR		;NO - IT'S AMBIGUOUS
  5013	406653'	260 17 0 00 406745'		PUSHJ	P,SWHAGS	;READ NAME OF SYSTEM CUSP TO RUN
  5014	406654'	254 00 0 00 406767'		  JRST	SWHERR		;NO ARG - ERROR
  5015	406655'	202 03 0 00 000201'		MOVEM	T3,GOBLK+1	;SAVE IN RUN BLOCK
  5016	406656'	263 17 0 00 000000 		POPJ	P,		;THAT'S ALL
  5017
  5018	406657'	202 04 0 00 000362'	SWHPAG:	MOVEM	T4,PAGFLG	;SAVE PAGE/LINES FLAG
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-17
SED	MAC	21-May-74 00:04		Utility subroutines

  5019	406660'	263 17 0 00 000000 		POPJ	P,
  5020
  5021	406661'	260 17 0 00 406745'	SWHTRM:	PUSHJ	P,SWHAGS	;READ NAME OF TERMINAL TO USE
  5022	406662'	254 00 0 00 406767'		  JRST	SWHERR		;NO ARG - ERROR
  5023	406663'	202 03 0 00 000363'		MOVEM	T3,TRMNAM	;SAVE TERMINAL NAME
  5024	406664'	263 17 0 00 000000 		POPJ	P,		;THAT'S ALL
  5025
  5026					;HERE FOR VARIOUS FILE STATUS SWITCHES: FC, FR, FS, FD, FO
  5027					;IF THESE ARE USED, /FD MUST APPEAR AND BE FIRST
  5028
  5029	406665'	260 17 0 00 406523'	SWHSTT:	PUSHJ	P,SWHLUR	;GET FLAVOR OF F SWITCH
  5030	406666'	200 02 0 00 000001 		MOVE	T2,T1		;SAVE FLAVOR
  5031	406667'	260 17 0 00 406726'		PUSHJ	P,SWHARG	;READ ARGUMENT OF SWITCH
  5032	406670'	254 00 0 00 406767'		  JRST	SWHERR		;NO ARG - ERROR
  5033	406671'	306 02 0 00 000103 		CAIN	T2,"C"		;FC (COLUMN POSITION) SWITCH?
  5034	406672'	254 00 0 00 406704'		JRST	SWHSTC		;YES - GO DO IT
  5035	406673'	306 02 0 00 000122 		CAIN	T2,"R"		;FR (ROW POSITION) SWITCH?
  5036	406674'	254 00 0 00 406706'		JRST	SWHSTR		;YES - GO DO IT
  5037	406675'	306 02 0 00 000123 		CAIN	T2,"S"		;FS (SLIDE OFFSET) SWITCH?
  5038	406676'	254 00 0 00 406710'		JRST	SWHSTL		;YES - GO DO IT
  5039	406677'	306 02 0 00 000104 		CAIN	T2,"D"		;FD (DISPLAY POINTER) SWITCH?
  5040	406700'	254 00 0 00 406714'		JRST	SWHSTD		;YES - GO DO IT
  5041	406701'	306 02 0 00 000117 		CAIN	T2,"O"		;FO (ONE-SHOT) SWITCH?
  5042	406702'	254 00 0 00 406712'		JRST	SWHOSH		;YES - GO DO IT
  5043	406703'	254 00 0 00 406767'		JRST	SWHERR		;ANYTHING ELSE IS AN ERROR
  5044
  5045	406704'	506 03 0 00 000062'	SWHSTC:	HRLM	T3,PRERW	;SET UP COLUMN POSITION
  5046	406705'	263 17 0 00 000000 		POPJ	P,
  5047	406706'	542 03 0 00 000062'	SWHSTR:	HRRM	T3,PRERW	;SET UP ROW POSITION
  5048	406707'	263 17 0 00 000000 		POPJ	P,
  5049	406710'	202 03 0 00 000063'	SWHSTL:	MOVEM	T3,PRESL	;SET UP SLIDE OFFSET
  5050	406711'	263 17 0 00 000000 		POPJ	P,
  5051	406712'	202 03 0 00 000065'	SWHOSH:	MOVEM	T3,PREONE	;SET UP ONE-SHOT POINTER
  5052	406713'	263 17 0 00 000000 		POPJ	P,
  5053
  5054	406714'	402 00 0 00 000062'	SWHSTD:	SETZM	PRERW		;CLEAR THE OTHER POINTERS
  5055	406715'	402 00 0 00 000063'		SETZM	PRESL
  5056	406716'	231 03 0 00 000005 		IDIVI	T3,5		;SEPARATE INTO WORD, POSITION IN WORD
  5057	406717'	271 03 0 00 002257'		ADDI	T3,BUFFER	;MAKE POINTER RELATIVE TO START OF BUFFER
  5058	406720'	322 04 0 00 406724'		JUMPE	T4,SWHSD1	;HANDLE POINTING TO START OF WORD SPECIALLY
  5059	406721'	504 03 0 04 410645'		HRL	T3,PTRTBL(T4)	;MAKE IT POINT AT THE RIGHT BIGHT
  5060	406722'	202 03 0 00 000064'	SWHSD0:	MOVEM	T3,PREDP	;SAVE POINTER IN THE RYTE PLACE
  5061	406723'	263 17 0 00 000000 		POPJ	P,		;DONE
  5062	406724'	505 03 0 00 010700 	SWHSD1:	HRLI	T3,010700
  5063	406725'	364 03 0 00 406722'		SOJA	T3,SWHSD0
  5064
  5065					;THE ONE-SHOT ARGUMENT IS THE CHARACTER IN THE FILE WHICH THE CURSOR SHOULD
  5066					;POINT TO. IT WILL BE SET UP 1/3 DOWN THE SCREEN. SO  NEED TO CALCULATE
  5067					;CHRPTR, LINPTR, DISPTR, RW, CM, AND SL
  5068
  5069					;SWHOSH:	IDIVI	T3,5		;SEPARATE INTO WORD, POSITION IN WORD
  5070					;	ADDI	T3,BUFFER	;MAKE POINTER RELATIVE TO START OF BUFFER
  5071					;	HRL	T3,PTRTBL(T4)	;MAKE IT POINT AT THE RIGHT BYTE
  5072					;	MOVE	PT,T3		;SAVE POINTER IN THE RIGHT PLACE
  5073					;	JRST	SRCSET		;SET EVERYTHING UP AND RETURN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-18
SED	MAC	21-May-74 00:04		Utility subroutines

  5074
  5075					;SUBROUTINE TO READ COLON (MAYBE) AND NUMERIC ARGUMENT OF A SWITCH
  5076					;RETURNS VALUE IN T3; USES T1
  5077					;GIVES SKIP RETURN IF VALUE FOUND, NON-SKIP IF NO COLON FOUND
  5078
  5079	406726'	134 01 0 00 000013 	SWHARG:	ILDB	T1,PT		;GET THE COLON
  5080	406727'	302 01 0 00 000072 		CAIE	T1,":"		;IS IT REALLY?
  5081	406730'	326 01 0 00 406726'		JUMPN	T1,SWHARG	;NO - TRY NEXT ONE, IF ANY
  5082	406731'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;NO COLON - NON-SKIP RETURN
  5083	406732'	350 00 0 17 000000 		AOS	(P)		;GOT THE COLON - GIVE SKIP RETURN
  5084	406733'	400 03 0 00 000000 		SETZ	T3,		;YES - CLEAR TARGET
  5085	406734'	134 01 0 00 000013 	SWHAG1:	ILDB	T1,PT		;GET A DIGIT
  5086	406735'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;RETURN, IF NULL
  5087	406736'	275 01 0 00 000060 		SUBI	T1,"0"		;CONVERT TO NUMERIC
  5088	406737'	321 01 0 00 406766'		JUMPL	T1,SWHER0	;ERROR IF NOT A NUMBER
  5089	406740'	303 01 0 00 000011 		CAILE	T1,9
  5090	406741'	254 00 0 00 406766'		JRST	SWHER0		;DITTO
  5091	406742'	221 03 0 00 000012 		IMULI	T3,^D10		;ELSE MULTIPLY BY TEN
  5092	406743'	270 03 0 00 000001 		ADD	T3,T1		;ADD IN NEW DIGIT
  5093	406744'	254 00 0 00 406734'		JRST	SWHAG1		;AND GET ANOTHER ONE
  5094
  5095					;SUBROUTINE TO READ COLON (MAYBE) AND ASCII ARGUMENT OF A SWITCH
  5096					;RETURNS VALUE, IN SIXBIT, IN T3
  5097					;GIVES SKIP RETURN IF VALUE FOUND, NON-SKIP IF NO COLON FOUND
  5098
  5099	406745'	134 01 0 00 000013 	SWHAGS:	ILDB	T1,PT		;GET THE COLON
  5100	406746'	302 01 0 00 000072 		CAIE	T1,":"		;IS IT REALLY?
  5101	406747'	326 01 0 00 406745'		JUMPN	T1,SWHAGS	;NO - TRY NEXT ONE, IF ANY
  5102	406750'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;NO COLON - NON-SKIP RETURN
  5103	406751'	350 00 0 17 000000 		AOS	(P)		;GOT THE COLON - GIVE SKIP RETURN
  5104	406752'	400 03 0 00 000000 		SETZ	T3,		;YES - CLEAR TARGET
  5105	406753'	200 04 0 00 412106'		MOVE	T4,[POINT 6,T3] ;AND POINT TO IT
  5106	406754'	201 00 0 00 000006 		MOVEI	T0,6		;EXPECT A MAXIMUM OF SIX
  5107	406755'	134 01 0 00 000013 	SWHGS1:	ILDB	T1,PT		;GET A CHARACTER
  5108	406756'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;RETURN, IF NULL
  5109	406757'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  5110	406760'	624 01 0 00 000100 		TRZA	T1,100		;YES - MAKE IT LOWER
  5111	406761'	275 01 0 00 000040 		SUBI	T1," "		;CONVERT TO SIXBIT
  5112	406762'	321 01 0 00 406766'		JUMPL	T1,SWHER0	;ERROR IF NOT LEGALLY SIXBIT
  5113	406763'	136 01 0 00 000004 		IDPB	T1,T4		;ELSE SAVE IT WITH THE REST
  5114	406764'	367 00 0 00 406755'		SOJG	T0,SWHGS1	;GET MORE - COUNTED OUT?
  5115	406765'	263 17 0 00 000000 		POPJ	P,		;YES - USE ONLY 6 CHARACTERS
  5116
  5117					;IF SWITCH ERROR OUTPUT MESSAGE, RETURN TO CALLER OF SWHONE
  5118
  5119	406766'	262 17 0 00 000000 	SWHER0:	POP	P,		;RETURN TO CALLER OF SWHONE
  5120	406767'	201 01 0 00 412107'	SWHERR:	MOVEI	T1,[ASCIZ /##########Bad switch name/]
  5121	406770'	606 07 0 00 777777 		TRNN	TM,-1		;IN RESCAN OR SWITCH.INI?
  5122	406771'	263 17 0 00 000000 		POPJ	P,		;YES -  NO MESSAGE
  5123	406772'	306 12 0 00 000002 		CAIN	DO,"B"-100	;DOING A SET-FILE?
  5124	406773'	254 00 0 00 410535'		JRST	STFERR		;YES - GIVE SET-FILE-FLAVORED ERROR
  5125	406774'	254 00 0 00 410520'		JRST	ERROR		;ELSE DISPLAY THE ERROR AND RETURN
  5126
  5127	406775'	201 01 0 00 412115'	SWAERR:	MOVEI	T1,[ASCIZ /#########Ambiguous switch/]
  5128	406776'	254 00 0 00 406770'		JRST	SWHERR+1	;DISPLAY THE ERROR AND RETURN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-19
SED	MAC	21-May-74 00:04		Utility subroutines

  5129
  5130					;************************************************************************
  5131					;SUBROUTINES TO FILL WITH SPACES OR NULLS (OR CONTENTS OF CHARAC)
  5132					;ENTER WITH NUMCHR/ NUMBER OF CHARACTERS TO INSERT
  5133					;	    CHRPTR/ PLACE TO START INSERTING THEM (PRESERVED)
  5134					;IF ENTER AT MAKCHR, SET UP CHARACTER IN CHARAC
  5135					;ON RETURN, CHRPTR WILL POINT TO THE START OF THE STUFF ADDED,
  5136					;	    T4 POINTS TO THE FIRST CHARACTER AFTER THE NEW STUFF
  5137					;	    MAKPTR POINTS TO LAST REAL CHARACTER ADDED
  5138
  5139					;NOTE: THIS IS THE only PLACE WHERE THINGS ARE INSERTED INTO THE BUFFER
  5140
  5141	406777'	201 01 0 00 000040 	MAKSPC:	MOVEI	T1," "		;GET A SPACE
  5142	407000'	202 01 0 00 000341'		MOVEM	T1,CHARAC	;SAVE AS THE FILL CHARACTER
  5143	407001'	254 00 0 00 407003'		JRST	MAKCHR		;GO PUT THEM IN
  5144	407002'	402 00 0 00 000341'	MAKNUL:	SETZM	CHARAC		;SET TO FILL WITH NULLS
  5145
  5146	407003'	336 03 0 00 000336'	MAKCHR:	SKIPN	T3,NUMCHR	;GET COUNT OF CHARACTERS TO PUT IN - ANY?
  5147	407004'	263 17 0 00 000000 		POPJ	P,		;NO - JUST RETURN
  5148	407005'	231 03 0 00 000005 		IDIVI	T3,5		;CONVERT IT TO COUNT OF WORDS
  5149	407006'	322 04 0 00 407010'		JUMPE	T4,.+2		;ANY EXCESS?
  5150	407007'	340 03 0 00 000000 		AOJ	T3,		;YES - ROUND UP TO NEXT FULL WORD
  5151	407010'	202 03 0 00 000337'		MOVEM	T3,NUMWDS	;SAVE NUMBER OF WORDS TO ADD
  5152	407011'	550 04 0 00 002253'		HRRZ	T4,CHRPTR	;GET ADDRESS OF START OF INSERT
  5153
  5154					;FIRST SEE IF THERE ARE ENOUGH NULL WORDS RIGHT WHERE THE CURSOR IS
  5155					;IF SO, JUST GO AND WRITE THEM
  5156
  5157	407012'	332 00 0 04 000000 		SKIPE	(T4)		;COUNT CONSECUTIVE NULLS AT START: GOT ONE?
  5158	407013'	254 00 0 00 407024'		JRST	MAKCH0		;NO - GO LOOK AND SQUEEZE
  5159	407014'	363 03 0 00 407016'		SOJLE	T3,.+2		;YES - JUMP IF FOUND ENOUGH
  5160	407015'	344 04 0 00 407012'		AOJA	T4,.-3		;ELSE LOOK FOR MORE
  5161	407016'	301 04 0 14 000000 		CAIL	T4,(EN)		;MOVED BEYOND END OF BUFFER?
  5162	407017'	541 14 0 04 000001 		HRRI	EN,1(T4)	;YES - EXTEND END BY THAT PLUS ONE WORD
  5163	407020'	505 04 0 00 010700 		HRLI	T4,010700	;POINT TO END OF LAST NULL WORD
  5164	407021'	502 04 0 00 002253'		HLLM	T4,CHRPTR	;AND POINT CHRPTR BEFORE START OF 1ST WORD
  5165	407022'	370 00 0 00 002253'		SOS	CHRPTR
  5166	407023'	254 00 0 00 407057'		JRST	MAKCH4		;GO PUT DATA IN
  5167
  5168					;HERE IF NOT ENOUGH NULLS WORDS AT CURSOR. LOOK (NOBYTE) WORDS AHEAD AND
  5169					;SHUFFLE THOSE UP TO THE TOP
  5170
  5171	407024'	202 04 0 00 000310'	MAKCH0:	MOVEM	T4,SAVEAC	;SAVE ADDRESS OF FIRST NON-NULL WORD
  5172	407025'	201 02 0 00 000140 		MOVEI	T2,NOBYTE	;GET # OF WORDS TO LOOK AHEAD FOR NULLS
  5173	407026'	306 04 0 14 000000 	MAKCH1:	CAIN	T4,(EN)		;AT END OF BUFFER?
  5174	407027'	340 14 0 00 000000 		AOJ	EN,		;YES - EXTEND BUFFER A WORD
  5175	407030'	336 00 0 04 000000 		SKIPN	(T4)		;IS THIS WORD NULL?
  5176	407031'	363 03 0 00 407046'		SOJLE	T3,MAKCH2	;YES - COUNT IT - COUNTED OUT?
  5177	407032'	340 04 0 00 000000 		AOJ	T4,		;NO - POINT TO NEXT WORD
  5178	407033'	365 02 0 00 407026'		SOJGE	T2,MAKCH1	;AND LOOP, IF NOT LOOKED FAR ENOUGH
  5179
  5180					;HERE IF NOT ENOUGH NULLS FOUND IN RANGE - SHUFFLE REST OF FILE DOWN
  5181					;IF ANY NULLS HAVE BEEN FOUND, LEAVE THEM ALONE
  5182
  5183	407034'	550 03 0 00 000014 		HRRZ	T3,EN		;GET ADDRESS OF END OF FILE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-20
SED	MAC	21-May-74 00:04		Utility subroutines

  5184	407035'	270 14 0 00 000337'		ADD	EN,NUMWDS	;EXTEND FILE BY THAT AMOUNT
  5185	407036'	550 04 0 00 000014 		HRRZ	T4,EN		;GET ADDRESS OF NEW END OF FILE
  5186	407037'	200 02 0 00 000310'		MOVE	T2,SAVEAC	;GET ADDRESS OF LAST WORD TO MOVE
  5187
  5188	407040'	200 01 0 03 000000 	MAKADD:	MOVE	T1,(T3)		;GET A WORD
  5189	407041'	202 01 0 04 000000 		MOVEM	T1,(T4)		;SAVE IT
  5190	407042'	360 04 0 00 000000 		SOJ	T4,
  5191	407043'	312 03 0 00 000002 		CAME	T3,T2		;BACK TO START?
  5192	407044'	364 03 0 00 407040'		SOJA	T3,MAKADD	;NO - KEEP GOING
  5193	407045'	344 04 0 00 407057'		AOJA	T4,MAKCH4	;YES - PUT STUFF IN THAT NEW GAP
  5194
  5195					;NOW SQUEEZE ALL THE NULL WORDS UP TO THE LOCATION OF THE FILE POINTER
  5196
  5197	407046'	200 02 0 00 000310'	MAKCH2:	MOVE	T2,SAVEAC	;GET ADDRESS OF LAST WORD TO SHUFFLE
  5198	407047'	200 03 0 00 000004 		MOVE	T3,T4		;POINT TO END OF SHUFFLE
  5199	407050'	315 03 0 00 000002 	MAKCH3:	CAMGE	T3,T2		;AT STARTING WORD?
  5200	407051'	344 04 0 00 407057'		AOJA	T4,MAKCH4	;YES - DONE SHUFFLING BYTES
  5201	407052'	336 01 0 03 000000 		SKIPN	T1,(T3)		;GET A WORD - NULL
  5202	407053'	364 03 0 00 407050'		SOJA	T3,MAKCH3	;YES - DON'T SHUFFLE
  5203	407054'	202 01 0 04 000000 		MOVEM	T1,(T4)		;NO - SAVE FARTHER DOWN
  5204	407055'	360 04 0 00 000000 		SOJ	T4,
  5205	407056'	364 03 0 00 407050'		SOJA	T3,MAKCH3	;DE-BUMP BOTH POINTERS AND LOOP
  5206
  5207					;NOW WRITE THE DESIRED STUFF INTO THE OPENED-UP AREA
  5208
  5209	407057'	500 04 0 00 002253'	MAKCH4:	HLL	T4,CHRPTR	;GET POINTER TO FIRST CHAR AFTER INSERT
  5210	407060'	202 04 0 00 000340'		MOVEM	T4,NUMNUL	;SAVE IT FOR LATER
  5211	407061'	200 04 0 00 002253'		MOVE	T4,CHRPTR	;POINT TO START OF INSERTED STUFF
  5212	407062'	200 03 0 00 000336'		MOVE	T3,NUMCHR	;GET THE NUMBER OF CHARACTERS TO WRITE
  5213	407063'	623 05 0 00 004000 		TLZE	F,WRH		;WANT TO READ FROM THE PICK OR CLOSE BUFFER?
  5214	407064'	254 00 0 00 407076'		JRST	MAKPTP		;YES - HANDLE SEPARATELY
  5215	407065'	200 01 0 00 000341'		MOVE	T1,CHARAC	;NO - GET THE CHARACTER TO PUT IN
  5216	407066'	136 01 0 00 000004 		IDPB	T1,T4		;PUT THE CHARACTER IN
  5217	407067'	367 03 0 00 407066'		SOJG	T3,.-1		;LOOP <NOCH> TIMES
  5218
  5219					;PAD OUT THE REMAINDER OF THE LAST WORD WITH NULLS; THEN RETURN
  5220
  5221	407070'	202 04 0 00 000342'	MAKPT1:	MOVEM	T4,MAKPTR	;SAVE POINTER TO LAST REAL THING ADDED
  5222	407071'	400 01 0 00 000000 		SETZ	T1,		;GET A NULL
  5223	407072'	316 04 0 00 000340'		CAMN	T4,NUMNUL	;REACHED GOOD STUFF?
  5224	407073'	263 17 0 00 000000 		POPJ	P,		;YES - DONE
  5225	407074'	136 01 0 00 000004 		IDPB	T1,T4		;NO - PUT THE NULL IN
  5226	407075'	254 00 0 00 407072'		JRST	MAKPT1+2	;AND LOOP THROUGH THE DESIRED NUMBER
  5227
  5228					;HERE TO WRITE FROM THE PICK OR CLOSE BUFFER INTO THE OPENED-UP SPACE
  5229
  5230	407076'	336 00 0 00 000370'	MAKPTP:	SKIPN	PUTJFN		;WANT TO READ FROM DISK?
  5231	407077'	254 00 0 00 407102'		JRST	MAKPT0+1	;NO - DON'T INITIALIZE
  5232	407100'	260 17 0 00 407133'		PUSHJ	P,MAKPB0	;YES - INITIALIZE
  5233	407101'	260 17 0 00 407141'	MAKPT0:	PUSHJ	P,MAKPTB	;SET UP A PIECE IN THE BUFFER
  5234	407102'	200 13 0 00 000365'		MOVE	PT,PUTPTR
  5235	407103'	134 01 0 00 000013 	MAKPPT:	ILDB	T1,PT		;GET CHARACTER FROM THE PICK BUFFER
  5236	407104'	306 01 0 00 000177 		CAIN	T1,177		;WANT TO GET THE COUNTER?
  5237	407105'	254 00 0 00 407121'		JRST	MAKPCT		;YES - GET IT
  5238	407106'	136 01 0 00 000004 	MAKPP0:	IDPB	T1,T4		;SAVE IT IN THE FILE BUFFER
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-21
SED	MAC	21-May-74 00:04		Utility subroutines

  5239	407107'	306 01 0 00 000015 		CAIN	T1,15		;<CR>?
  5240	407110'	367 03 0 00 407115'		SOJG	T3,MAKPP1	;YES - SEE IF END OF LINE
  5241	407111'	367 03 0 00 407103'		SOJG	T3,MAKPPT	;LOOP <NOCH> TIMES
  5242	407112'	337 00 0 00 000367'		SKIPG	MAKCNT		;GOT MORE TO READ FROM BUFFER?
  5243	407113'	254 00 0 00 407070'		JRST	MAKPT1		;NO - PUT ENDING NULLS IN, IF ANY
  5244	407114'	254 00 0 00 407101'		JRST	MAKPT0		;YES - GET AND PUT IT
  5245
  5246	407115'	134 01 0 00 000013 	MAKPP1:	ILDB	T1,PT		;PICK UP LINEFEED
  5247	407116'	306 01 0 00 000012 		CAIN	T1,12		;IS IT REALLY?
  5248	407117'	350 00 0 00 000352'		AOS	MAKLNS		;YES - BUMP COUNT OF LINES FOUND
  5249	407120'	254 00 0 00 407106'		JRST	MAKPP0		;CONTINUE
  5250
  5251					;SUBROUTINE TO WORK WITH THE INCREMENTING COUNTER
  5252
  5253	407121'	134 01 0 00 000013 	MAKPCT:	ILDB	T1,PT		;GET SECOND FLAG
  5254	407122'	350 01 0 00 000066'		AOS	T1,COUNTS	;BUMP AND GET COUNTER
  5255	407123'	301 01 0 00 000143 		CAIL	T1,^D99		;IS IT GOING TO OVEFLOW?
  5256	407124'	476 00 0 00 000066'		SETOM	COUNTS		;YES - MAKE IT BE 0 NEXT TIME
  5257	407125'	231 01 0 00 000012 		IDIVI	T1,^D10		;CONVERT TO DIGITS
  5258	407126'	322 01 0 00 407130'		JUMPE	T1,.+2		;GET ASCII 10'S DIGIT ONLY IF NON-ZERO
  5259	407127'	271 01 0 00 000060 		ADDI	T1,"0"
  5260	407130'	136 01 0 00 000004 		IDPB	T1,T4		;OUTPUT 10'S (OR A NULL)
  5261	407131'	201 01 0 02 000060 		MOVEI	T1,"0"(T2)	;GET ONE'S PLACE IN ASCII
  5262	407132'	364 03 0 00 407106'		SOJA	T3,MAKPP0	;GO OUTPUT IT
  5263
  5264					;SUBROUTINE FOR WHEN READING FROM DISK: READ NEXT BUFFERFUL OF TEXT
  5265					;AND SET UP COUNTS. WHEN LAST BUFFERFUL HAS BEEN READ, CLOSE DISK FILE
  5266
  5267	407133'	200 13 0 00 000365'	MAKPB0:	MOVE	PT,PUTPTR	;SAVE POINTER TO THE PROPER BUFFER
  5268	407134'	202 13 0 00 000366'		MOVEM	PT,PTMPTR
  5269	407135'	202 03 0 00 000367'		MOVEM	T3,MAKCNT	;SAVE COUNT OF CHARACTERS TO ADD
  5270	407136'	505 13 0 00 777200 	TOPS10^IFE TOPS-10,^<	HRLI	PT,-PCBSIZ	;MAKE IOWD PCBSIZ,(PICK/CLOSE BUFFER)
  5271	407137'	202 13 0 00 000262'		MOVEM	PT,PUTCCL
  5272					>
  5273	407140'	263 17 0 00 000000 		POPJ	P,
  5274
  5275	407141'				MAKPTB:
  5276					TOPS20^IFE TOPS-20,^<	MOVE	T1,PUTJFN	;GET BUFFER JFN
  5277					>
  5278	407141'	200 02 0 00 000366'		MOVE	T2,PTMPTR	;GET POINTER TO THE RIGHT BUFFER
  5279	407142'	202 02 0 00 000365'		MOVEM	T2,PUTPTR	;SAVE IT
  5280	407143'	211 03 0 00 003600 		MOVNI	T3,PCBSIZ*5	;DECREASE CHAR COUNT BY ONE BUFFERFUL
  5281	407144'	272 03 0 00 000367'		ADDM	T3,MAKCNT	;UNLESS THERE'S NOT THAT MUCH OUT THERE
  5282	407145'	335 00 0 00 000367'		SKIPGE	MAKCNT		;GOT SOMETHING LEFT FOR NEXT TIME?
  5283						JRST	[SUB   T3,MAKCNT ;NO - READ ONLY A PARTIAL BUFFER
  5284					TOPS10^IFE TOPS-10,^<		 MOVE  T1,T3	;SET UP I/O WORDCOUNT FOR FINAL READ
  5285							 IDIVI T1,5
  5286							 SOJ   T1,
  5287							 HRLM  T1,PUTCCL
  5288					>
  5289							 SETZM MAKCNT	;CLEAR COUNT TO INDICATE FINISHED-NESS
  5290							 SETZM PUTJFN	;CLEAR BUFFER JFN
  5291	407146'	254 00 0 00 412123'			 JRST  .+1]
  5292	407147'	066 05 0 00 000262'	TOPS10^IFE TOPS-10,^<	INPUT	5,PUTCCL	;READ THE BUFFERFUL
  5293					>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-22
SED	MAC	21-May-74 00:04		Utility subroutines

  5294					TOPS20^IFE TOPS-20,^<	PUSH	P,T3
  5295						SIN			;READ THE BUFFERFUL
  5296						POP	P,T3
  5297					>
  5298	407150'	210 03 0 00 000003 		MOVN	T3,T3		;MAKE COUNT POSITIVE
  5299	407151'	332 00 0 00 000370'		SKIPE	PUTJFN		;TIME TO CLOSE THE BUFFER FILE?
  5300	407152'	263 17 0 00 000000 		POPJ	P,		;NO - JUST PROCESS THE BUFFER
  5301	407153'	071 05 0 00 000000 	TOPS10^IFE TOPS-10,^<	RELEAS	5,		;YES
  5302					>
  5303					TOPS20^IFE TOPS-20,^<	CLOSF			;YES
  5304						  HALTF
  5305					>
  5306	407154'	263 17 0 00 000000 		POPJ	P,
  5307
  5308					;************************************************************************
  5309					;SUBROUTINES FOR WHEN THE USER WANTS TO DO SOMETHING IN THE MIDDLE OF A TAB
  5310					;CHANGE THE TAB TO SPACES,  RE-ADJUST CURSOR POSITION, AND DRIVE ON
  5311					;CALL WITH T1/POINTER TO THE TAB
  5312
  5313	407155'	336 00 0 00 000345'	RPLTAB:	SKIPN	TABSPC		;SITTING AT START OF TAB?
  5314	407156'	263 17 0 00 000000 		POPJ	P,		;YES - DON'T BUST THE TAB THIS TIME
  5315	407157'	200 01 0 00 000344'		MOVE	T1,TABSIZ	;ELSE GET SIZE OF TAB
  5316	407160'	202 01 0 00 000336'		MOVEM	T1,NUMCHR	;SAVE AS NUMBER OF CHARACTERS TO MAKE
  5317	407161'	400 01 0 00 000000 		SETZ	T1,		;NULL OUT THE TAB
  5318	407162'	136 01 0 00 000002 		IDPB	T1,T2
  5319	407163'	260 17 0 00 406777'		PUSHJ	P,MAKSPC	;ADD THOSE SPACES
  5320	407164'	661 05 0 00 000010 		TLO	F,XPC
  5321	407165'	254 00 0 00 406040'		JRST	MAKCPT		;RE-MAKE CURSOR POINTER AND RETURN
  5322
  5323					;************************************************************************
  5324					;PEEL ROUTINES - THESE CONVERT A PART OF THE PARAMETER BUFFER TO
  5325					;A NUMBER (PEEL.1), OR MOVE A FILE SPEC TO ITS OWN SPEC-IAL AREA (PELS.1)
  5326
  5327					;CAN ENTER IN ONE OF THREE SITUATIONS:
  5328					;ENTER, PARAMETER
  5329					;ENTER, NO PARAMETER		PARPTR UNCHANGED; GET TOKEN (OR SPECIAL)
  5330					;ENTER, CURSOR MOVE		CMV SET; TWO ARGS SET UP
  5331
  5332					;CAN RETURN IN ONE OF THREE SITUATIONS:
  5333					;NO ENTER TYPED			ENT FLAG IS NOT SET
  5334					;ENTER, BUT NO PARAMETER TYPED	ENT SET; T1/0
  5335					;ENTER AND PARAMETER TYPED	ENT SET; T1/NON-0
  5336
  5337					;SUBROUTINE TO READ A DECIMAL NUMBER FROM BUFFER. RETURN IS IN PARG1
  5338					;RETURNS T1/0 IF ARG NULL; ELSE -1
  5339
  5340	407166'	403 01 0 00 002251'	PEEL.1:	SETZB	T1,PARG2	;CLEAR ARG SET BY CURSOR MOVE
  5341	407167'	602 05 0 00 000010 		TRNE	F,CMV		;WAS ARG DEFINED USING CURSOR MOVEMENT?
  5342	407170'	254 00 0 00 407215'		JRST	PEEL.M		;YES - THAT'S A WHOLE NUTHER STORY
  5343	407171'	200 04 0 00 411207'		MOVE	T4,[POINT 7,PARBUF]
  5344	407172'	316 04 0 00 002227'		CAMN	T4,PARPTR	;ENTER-NO ARG TYPED?
  5345	407173'	254 00 0 00 407243'		JRST	PEEL.C		;YES - MAY WANT TO COUNT UP A TOKEN
  5346	407174'	136 01 0 00 002227'		IDPB	T1,PARPTR	;MAKE SURE PARAMETER ENDS WITH A NULL
  5347	407175'	403 01 0 00 000003 		SETZB	T1,T3		;CLEAR FLAG AND RETURN VALUE
  5348
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-23
SED	MAC	21-May-74 00:04		Utility subroutines

  5349	407176'	134 02 0 00 000004 	PEEL1:	ILDB	T2,T4		;GET A CHARACTER
  5350	407177'	322 02 0 00 407210'		JUMPE	T2,PEEL3	;DONE IF NULL
  5351	407200'	474 01 0 00 000000 		SETO	T1,		;ELSE INDICATE A NON-NULL PARAMETER
  5352	407201'	275 02 0 00 000060 		SUBI	T2,60		;CONVERT TO OCTAL
  5353	407202'	301 02 0 00 000012 		CAIL	T2,12		;IS IT REALLY A NUMBER?
  5354	407203'	254 00 0 00 407213'		JRST	PGTERR		;NO - GIVE ERROR MESSAGE
  5355	407204'	321 02 0 00 407213'		JUMPL	T2,PGTERR
  5356	407205'	221 03 0 00 000012 		IMULI	T3,12		;YES - SHIFT TARGET
  5357	407206'	270 03 0 00 000002 		ADD	T3,T2		;ADD IN NEW DIGIT
  5358	407207'	254 00 0 00 407176'		JRST	PEEL1		;GET SOME MORE
  5359
  5360	407210'	322 01 0 00 400543'	PEEL3:	JUMPE	T1,CPOPJ	;IF NULL ARG FOUND, JUST RETURN
  5361	407211'	202 03 0 00 002250'		MOVEM	T3,PARG1	;SAVE ARG
  5362	407212'	263 17 0 00 000000 		POPJ	P,		;DONE
  5363
  5364	407213'	201 01 0 00 412133'	PGTERR:	MOVEI	T1,[ASCIZ /#####Argument must be numeric/]
  5365	407214'	254 00 0 00 410520'		JRST	ERROR
  5366
  5367					;HERE IF ARGUMENT WAS MADE USING CURSOR MOVEMENT
  5368					;SET PARG1 TO ROWS MOVED AND PARG2 TO COLUMNS
  5369					;CALLER SHOULD RESTORE MARK AT (RW,CM), THEN GET (RW,CM) FROM (SAVPOS,+1)
  5370
  5371	407215'	124 15 0 00 000310'	PEEL.M:	DMOVEM	RW,SAVEAC	;SAVE ENDING POSITION
  5372	407216'	274 15 0 00 000330'		SUB	RW,SAVPOS	;FIND DIFFERENCE IN ROW
  5373	407217'	216 15 0 00 002250'		MOVMM	RW,PARG1	;SAVE MAGNITUDE OF DIFFERENCE
  5374						JUMPGE	RW,[MOVE  RW,SAVPOS ;IF POSITIVE GO FROM STARTING POSITION
  5375	407220'	325 15 0 00 412141'			    JRST  PEL.M1]   ;NOW CHECK COLUMN
  5376	407221'	200 15 0 00 000310'		MOVE	RW,SAVEAC	;IF NEGATIVE GO FROM ENDING POSITION
  5377	407222'	250 15 0 00 000330'		EXCH	RW,SAVPOS
  5378	407223'	661 05 0 00 000014 		TLO	F,XPL!XPC	;RE-DO ROW AND COLUMN POINTERS
  5379	407224'	274 16 0 00 000331'	PEL.M1:	SUB	CM,SAVPOS+1	;FIND DIFFERENCE IN COLUMN
  5380	407225'	302 12 0 00 000004 		CAIE	DO,"D"-100	;OPEN-
  5381	407226'	306 12 0 00 000006 		CAIN	DO,"F"-100	;  OR CLOSE-LINES COMMAND?
  5382	407227'	254 00 0 00 407241'		JRST	PEL.M3		;YES - HANDLE SPECIALLY
  5383					IFN NEWTAB,<
  5384	407230'	306 12 0 00 000026 		CAIN	DO,"V"-100	;SAME WITH A PICK COMMAND
  5385					>
  5386					IFE NEWTAB,<
  5387						CAIN	DO,"K"-100	;SAME WITH A PICK COMMAND
  5388					>
  5389	407231'	254 00 0 00 407241'		JRST	PEL.M3		;YES - DON'T ADJUST COLUMN
  5390	407232'	216 16 0 00 002251'		MOVMM	CM,PARG2	;SAVE MAGNITUDE OF DIFFERENCE
  5391						JUMPL	CM,[MOVE CM,SAVEAC+1 ;IF NEGATIVE GO FROM ENDING POSITION
  5392							    EXCH CM,SAVPOS+1
  5393							    TLO	 F,XPC	     ;RE-DO COLUMN POINTER
  5394	407233'	321 16 0 00 412143'			    JRST PEL.M2]     ;NOW FINISH OFF
  5395	407234'	200 16 0 00 000331'		MOVE	CM,SAVPOS+1	;IF POSITIVE GO FROM STARTING POSITION
  5396	407235'	200 01 0 00 000354'	PEL.M2:	MOVE	T1,SAVCPT	;RE-SET ORIGINAL CHARACTER POINTER
  5397	407236'	312 01 0 00 002253'		CAME	T1,CHRPTR	;HAS IT CHANGED ANY (W-WISE TABS)?
  5398	407237'	661 05 0 00 000014 		TLO	F,XPL!XPC	;YES - RE-DO IT
  5399	407240'	263 17 0 00 000000 		POPJ	P,		;AND LET CALLER WORRY ABOUT IT
  5400
  5401	407241'	202 16 0 00 002251'	PEL.M3:	MOVEM	CM,PARG2	;USE ACTUAL COLUMN DIFFERENCE
  5402	407242'	254 00 0 00 407234'		JRST	PEL.M2-1	;CONTINUE
  5403
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-24
SED	MAC	21-May-74 00:04		Utility subroutines

  5404					;SUBROUTINE TO COUNT THE SIZE OF THE CURRENT FILE TOKEN
  5405
  5406	407243'	302 12 0 00 000024 	PEEL.C:	CAIE	DO,"T"-100	;IS IT A ROLL LINES COMMAND?
  5407	407244'	306 12 0 00 000027 		CAIN	DO,"W"-100
  5408	407245'	263 17 0 00 000000 		POPJ	P,		;YES - SPECIAL NON-TOKEN CASE
  5409	407246'	302 12 0 00 000020 		CAIE	DO,"P"-100	;IS IT A PERCENT COMMAND
  5410	407247'	306 12 0 00 000030 		CAIN	DO,"X"-100	;  OR AN EXECUTE COMMAND?
  5411	407250'	263 17 0 00 000000 		POPJ	P,		;YES - ANOTHER NON-TOKEN CASE
  5412	407251'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;MAKE POINTER TO CURSOR LOCATION
  5413	407252'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET CURSOR POINTER
  5414	407253'	400 02 0 00 000000 		SETZ	T2,		;CLEAR COUNT
  5415
  5416	407254'	134 01 0 00 000013 	PEL.C1:	ILDB	T1,PT		;GET CHARACTER FROM THE BUFFER
  5417	407255'	322 01 0 00 407254'		JUMPE	T1,.-1		;IGNORE IF NULL
  5418	407256'	305 01 0 00 000060 		CAIGE	T1,"0"		;TOO SMALL FOR A NUMBER?
  5419	407257'	344 02 0 00 407272'		AOJA	T2,PEL.C3	;YES - END OF TOKEN
  5420	407260'	307 01 0 00 000071 		CAIG	T1,"9"		;IS IT A NUMBER?
  5421	407261'	344 02 0 00 407254'		AOJA	T2,PEL.C1	;YES - GOOD
  5422	407262'	305 01 0 00 000101 		CAIGE	T1,"A"		;TOO SMALL FOR A UC LETTER?
  5423	407263'	344 02 0 00 407272'		AOJA	T2,PEL.C3	;YES - END OF TOKEN
  5424	407264'	307 01 0 00 000132 		CAIG	T1,"Z"		;IS IT A UC LETTER?
  5425	407265'	344 02 0 00 407254'		AOJA	T2,PEL.C1	;YES - GOOD
  5426	407266'	301 01 0 00 000141 		CAIL	T1,"a"		;TOO SMALL FOR A lc LETTER?
  5427	407267'	303 01 0 00 000172 		CAILE	T1,"z"		;IS IT A lc LETTER?
  5428	407270'	344 02 0 00 407272'		AOJA	T2,PEL.C3	;NOT LC - END OF TOKEN
  5429	407271'	344 02 0 00 407254'		AOJA	T2,PEL.C1	;AND GET ANOTHER ONE
  5430
  5431	407272'	202 02 0 00 002250'	PEL.C3:	MOVEM	T2,PARG1	;SAVE SIZE OF TOKEN
  5432	407273'	306 12 0 00 000013 		CAIN	DO,"K"-100	;DOING A PICK?
  5433	407274'	400 01 0 00 000000 		SETZ	T1,		;YES - CLEAR GOT-AN-ARG FLAG
  5434	407275'	263 17 0 00 000000 		POPJ	P,		;DONE
  5435
  5436					;SUBROUTINE TO PEEL OFF A STRING (FOR SEARCHES, SET-FILE, PUT)
  5437					;CALL WITH T3/ ASCII POINTER TO STRING SAVE AREA
  5438					;RETURNS T1/LENGTH OF STRING
  5439
  5440	407276'	622 05 0 00 000010 	PELS.1:	TRZE	F,CMV		;GOT A CURSOR MOVEMENT PARAMETER?
  5441	407277'	254 00 0 00 407314'		JRST	PELS.M		;YES - HANDLE IT
  5442	407300'	400 01 0 00 000000 		SETZ	T1,		;CLEAR GOT-AN-ARG FLAG
  5443	407301'	200 04 0 00 411207'		MOVE	T4,[POINT 7,PARBUF]
  5444	407302'	316 04 0 00 002227'		CAMN	T4,PARPTR	;ENTER-NO ARG TYPED?
  5445	407303'	254 00 0 00 407337'		JRST	PEEL.T		;YES - MAY WANT TO PICK UP A TOKEN
  5446	407304'	136 01 0 00 002227'		IDPB	T1,PARPTR	;MAKE SURE PARAMETER ENDS WITH A NULL
  5447	407305'	134 02 0 00 000004 		ILDB	T2,T4		;GET THE FIRST CHARACTER
  5448	407306'	326 02 0 00 407311'		JUMPN	T2,.+3		;IF NULL, JUST ENTER WAS TYPED
  5449	407307'	263 17 0 00 000000 		POPJ	P,		;SO JUST RETURN
  5450
  5451	407310'	134 02 0 00 000004 		ILDB	T2,T4		;GET A CHARACTER
  5452	407311'	136 02 0 00 000003 		IDPB	T2,T3		;SAVE IT WHEREVER USER WANTS
  5453	407312'	322 02 0 00 400543'		JUMPE	T2,CPOPJ	;DONE, IF NULL
  5454	407313'	344 01 0 00 407310'		AOJA	T1,.-3		;ELSE COUNT CHARACTER AND LOOP
  5455
  5456					;HERE TO PEEL A CURSOR MOVEMENT STRING
  5457					;CALLER SHOULD RESTORE MARK AT (RW,CM), THEN GET (RW,CM) FROM (SAVPOS,+1)
  5458
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-25
SED	MAC	21-May-74 00:04		Utility subroutines

  5459	407314'	312 16 0 00 000331'	PELS.M:	CAME	CM,SAVPOS+1	;ONLY LEGAL IF NOT ON THE SAME COLUMN,
  5460	407315'	312 15 0 00 000330'		CAME	RW,SAVPOS	;  BUT ON THE SAME LINE - O.K.
  5461	407316'	254 00 0 00 407463'		JRST	CMVERR		;NO - ILLEGAL
  5462	407317'	261 17 0 00 000003 		PUSH	P,T3		;SAVE POINTER TO PLACE TO SAVE STRING
  5463	407320'	200 01 0 00 000016 		MOVE	T1,CM		;YES - GET LENGTH OF STRING TO PICK UP
  5464	407321'	274 01 0 00 000331'		SUB	T1,SAVPOS+1	;(MAKCPT PRESERVES ONLY T1)
  5465	407322'	321 01 0 00 407324'		JUMPL	T1,.+2		;IS COUNT NEGATIVE?
  5466	407323'	200 16 0 00 000331'		MOVE	CM,SAVPOS+1	;NO - GET ORIGINAL POSITION BACK
  5467	407324'	661 05 0 00 000010 		TLO	F,XPC		;ALWAYS RE-DO CHARACTER POINTER
  5468	407325'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;RE-DO IT, ALREADY
  5469	407326'	262 17 0 00 000003 		POP	P,T3
  5470						JUMPL	T1,[TLO  F,XPC	;YES - MAKE CHARACTER POINTER BE RE-DONE
  5471							    MOVE CM,SAVPOS+1
  5472	407327'	321 01 0 00 412147'			    JRST .+1]
  5473	407330'	214 04 0 00 000001 		MOVM	T4,T1		;SET UP SIZE OF PICK
  5474	407331'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET THAT POINTER
  5475	407332'	260 17 0 00 402324'		PUSHJ	P,SPCBUF	;PICK UP THE STRING FROM THE BUFFER
  5476	407333'	200 01 0 00 000347'		MOVE	T1,SPCCNT	;GET COUNT OF CHARACTERS PICKED
  5477	407334'	400 02 0 00 000000 		SETZ	T2,		;END ARGUMENT WITH A NULL
  5478	407335'	136 02 0 00 000003 		IDPB	T2,T3
  5479	407336'	263 17 0 00 000000 		POPJ	P,		;DONE
  5480
  5481					;SUBROUTINE TO PEEL OFF A TOKEN FROM THE FILE.
  5482					;THE TOKEN IS DEFINED AS EXTENDING FROM THE CURSOR LOCATION TO THE
  5483					;NEXT NON-ALPHANUMERIC CHARACTER
  5484					;TOKEN IS STORED AT AREA POINTED TO BY T3
  5485
  5486	407337'	306 12 0 00 000007 	PEEL.T:	CAIN	DO,"G"-100	;GOT A PUT COMMAND?
  5487	407340'	263 17 0 00 000000 		POPJ	P,		;YES - DON'T READ TOKEN
  5488	407341'	202 03 0 00 002227'		MOVEM	T3,PARPTR	;SAVE SAVE POINTER
  5489	407342'	260 17 0 00 406040'		PUSHJ	P,MAKCPT	;MAKE POINTER TO CURSOR LOCATION
  5490	407343'	200 03 0 00 411207'		MOVE	T3,[POINT 7,PARBUF]
  5491	407344'	250 03 0 00 002227'		EXCH	T3,PARPTR	;RESTORE SAVE POINTER
  5492	407345'	306 12 0 00 000002 		CAIN	DO,"B"-100	;IS COMMAND A SETFIL?
  5493	407346'	254 00 0 00 407414'		JRST	PEEL.F		;YES - GET A FILESPEC-FLAVORED TOKEN
  5494	407347'	200 13 0 00 002253'		MOVE	PT,CHRPTR	;GET CURSOR POINTER
  5495	407350'	254 00 0 00 407353'		JRST	.+3
  5496
  5497	407351'	136 01 0 00 000003 	PEL.T1:	IDPB	T1,T3		;SAVE CHARACTER IN CALLER'S BUFFER
  5498	407352'	136 01 0 00 002227'		IDPB	T1,PARPTR	;SAVE CHARACTER IN PARAMETER BUFFER
  5499	407353'	134 01 0 00 000013 		ILDB	T1,PT		;GET CHARACTER FROM THE BUFFER
  5500	407354'	322 01 0 00 407353'		JUMPE	T1,.-1		;IGNORE IF NULL
  5501	407355'	305 01 0 00 000060 		CAIGE	T1,"0"		;TOO SMALL FOR A NUMBER?
  5502	407356'	254 00 0 00 407442'		JRST	PEL.T3		;YES - END OF TOKEN
  5503	407357'	307 01 0 00 000071 		CAIG	T1,"9"		;IS IT A NUMBER?
  5504	407360'	254 00 0 00 407351'		JRST	PEL.T1		;YES - GOOD
  5505	407361'	305 01 0 00 000101 		CAIGE	T1,"A"		;TOO SMALL FOR A UC LETTER?
  5506	407362'	254 00 0 00 407442'		JRST	PEL.T3		;YES - END OF TOKEN
  5507	407363'	307 01 0 00 000132 		CAIG	T1,"Z"		;IS IT A UC LETTER?
  5508	407364'	254 00 0 00 407351'		JRST	PEL.T1		;YES - GOOD
  5509	407365'	301 01 0 00 000141 		CAIL	T1,"a"		;TOO SMALL FOR A lc LETTER?
  5510	407366'	303 01 0 00 000172 		CAILE	T1,"z"		;IS IT A lc LETTER?
  5511	407367'	254 00 0 00 407442'		JRST	PEL.T3		;NOT LC - END OF TOKEN
  5512	407370'	254 00 0 00 407351'		JRST	PEL.T1		;AND GET ANOTHER ONE
  5513
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-26
SED	MAC	21-May-74 00:04		Utility subroutines

  5514					;SUBROUTINE TO PEEL OFF A FILESPEC STRING.
  5515					;CALL WITH T3/ ASCII POINTER TO STRING SAVE AREA
  5516					;RETURNS T1/LENGTH OF STRING
  5517
  5518	407371'	622 05 0 00 000010 	PELS.F:	TRZE	F,CMV		;GOT A CURSOR MOVEMENT PARAMETER?
  5519	407372'	254 00 0 00 407314'		JRST	PELS.M		;YES - HANDLE IT
  5520	407373'	620 05 0 00 000100 		TRZ	F,CRE		;ASSUME FILE IS NOT TO BE CREATED
  5521	407374'	403 01 0 00 000072'		SETZB	T1,FILSPC	;CLEAR GOT-AN-ARG FLAG
  5522	407375'	200 02 0 00 412152'	TOPS10^IFE TOPS-10,^<	MOVE	T2,[FILSPC,,FILSPC+1]
  5523	407376'	251 02 0 00 000100'		BLT	T2,FILSPC+6	;CLEAR OUT PREVIOUS FILE SPECS
  5524					>
  5525	407377'	200 04 0 00 411207'		MOVE	T4,[POINT 7,PARBUF]
  5526	407400'	316 04 0 00 002227'		CAMN	T4,PARPTR	;ENTER-NO ARG TYPED?
  5527	407401'	254 00 0 00 407337'		JRST	PEEL.T		;YES - MAY WANT TO PICK UP A TOKEN
  5528	407402'	136 01 0 00 002227'		IDPB	T1,PARPTR
  5529	407403'	134 02 0 00 000004 		ILDB	T2,T4		;GET THE FIRST CHARACTER
  5530	407404'	326 02 0 00 407407'		JUMPN	T2,PELSF1	;IF NULL, JUST ENTER WAS TYPED
  5531	407405'	263 17 0 00 000000 		POPJ	P,		;SO JUST RETURN
  5532
  5533	407406'	134 02 0 00 000004 	PELSF0:	ILDB	T2,T4		;GET A CHARACTER
  5534	407407'	306 02 0 00 000075 	PELSF1:	CAIN	T2,"="		;WANT TO CREATE A FILE?
  5535						JRST	[TRO  F,CRE	;YES - FLAG AS SUCH
  5536	407410'	254 00 0 00 412153'			 JRST PELSF0]	;AND GET ANOTHER CHARACTER
  5537	407411'	136 02 0 00 000003 		IDPB	T2,T3		;SAVE IT WHEREVER USER WANTS
  5538	407412'	322 02 0 00 400543'		JUMPE	T2,CPOPJ	;DONE, IF NULL
  5539	407413'	344 01 0 00 407406'		AOJA	T1,PELSF0	;ELSE COUNT CHARACTER AND LOOP
  5540
  5541					;SUBROUTINE TO PEEL OFF A FILESPEC TOKEN FROM THE FILE.
  5542					;TOKEN INCLUDES ALL LETTERS AND NUMBERS, PLUS ":.["
  5543					;IF "[" IS FOUND ONLY OCTAL NUMBERS AND ",]" ARE LEGAL
  5544					;OTHER CHARACTERS, OR MORE THAN 32 OF THESE, END THE TOKEN
  5545
  5546	407414'	200 13 0 00 002253'	PEEL.F:	MOVE	PT,CHRPTR	;GET CURSOR POINTER
  5547	407415'	201 00 0 00 000040 		MOVEI	T0,40		;SAVE AT MOST 32 CHARACTERS
  5548	407416'	254 00 0 00 407421'		JRST	.+3
  5549	407417'	136 01 0 00 000003 	PEL.F1:	IDPB	T1,T3		;SAVE CHARACTER IN CALLER'S BUFFER
  5550	407420'	136 01 0 00 002227'		IDPB	T1,PARPTR	;SAVE CHARACTER IN PARAMETER BUFFER
  5551	407421'	134 01 0 00 000013 		ILDB	T1,PT		;GET CHARACTER FROM THE BUFFER
  5552	407422'	322 01 0 00 407421'		JUMPE	T1,.-1		;IGNORE IF NULL
  5553	407423'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  5554	407424'	275 01 0 00 000040 		SUBI	T1,40		;YES - CONVERT TO UPPER
  5555	407425'	302 01 0 00 000056 		CAIE	T1,"."		;DOT,
  5556	407426'	306 01 0 00 000072 		CAIN	T1,":"		;  OR COLON?
  5557	407427'	254 00 0 00 407441'		JRST	PEL.F3		;YES - CONTINUE
  5558	407430'	306 01 0 00 000133 		CAIN	T1,"["		;OPEN BRACKET?
  5559	407431'	254 00 0 00 407446'		JRST	PEL.F2		;YES - CONTINUE IN PPN MODE
  5560	407432'	305 01 0 00 000060 		CAIGE	T1,"0"		;NUMERIC?
  5561	407433'	254 00 0 00 407442'		JRST	PEL.T3		;NO - END OF TOKEN
  5562	407434'	307 01 0 00 000071 		CAIG	T1,"9"		;NUMERIC?
  5563	407435'	254 00 0 00 407441'		JRST	PEL.F3		;YES - CONTINUE
  5564	407436'	305 01 0 00 000101 		CAIGE	T1,"A"		;ALPHABETIC?
  5565	407437'	254 00 0 00 407442'		JRST	PEL.T3		;NO - END OF TOKEN
  5566	407440'	307 01 0 00 000132 		CAIG	T1,"Z"		;ALPHABETIC?
  5567	407441'	367 00 0 00 407417'	PEL.F3:	SOJG	T0,PEL.F1	;YES - CONTINUE
  5568
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-27
SED	MAC	21-May-74 00:04		Utility subroutines

  5569	407442'	400 01 0 00 000000 	PEL.T3:	SETZ	T1,		;END BUFFER WITH A NULL
  5570	407443'	136 01 0 00 000003 		IDPB	T1,T3
  5571	407444'	136 01 0 00 002227'		IDPB	T1,PARPTR
  5572	407445'	263 17 0 00 000000 		POPJ	P,		;DONE
  5573
  5574	407446'	136 01 0 00 000003 	PEL.F2:	IDPB	T1,T3		;SAVE CHARACTER IN CALLER'S BUFFER
  5575	407447'	136 01 0 00 002227'		IDPB	T1,PARPTR	;SAVE CHARACTER IN PARAMETER BUFFER
  5576	407450'	134 01 0 00 000013 		ILDB	T1,PT		;GET CHARACTER FROM THE BUFFER
  5577	407451'	322 01 0 00 407450'		JUMPE	T1,.-1		;IGNORE IF NULL
  5578	407452'	306 01 0 00 000054 		CAIN	T1,","		;COMMA?
  5579	407453'	254 00 0 00 407461'		JRST	PEL.F4		;YES - CONTINUE
  5580	407454'	306 01 0 00 000135 		CAIN	T1,"]"		;CLOSE BRACKET?
  5581	407455'	254 00 0 00 407441'		JRST	PEL.F3		;YES - CONTINUE IN NON-PPN MODE
  5582	407456'	305 01 0 00 000060 		CAIGE	T1,"0"		;NUMERIC?
  5583	407457'	254 00 0 00 407442'		JRST	PEL.T3		;NO - END OF TOKEN
  5584	407460'	307 01 0 00 000067 		CAIG	T1,"7"		;OCTAL NUMERIC?
  5585	407461'	367 00 0 00 407446'	PEL.F4:	SOJG	T0,PEL.F2	;YES - GO STORE CHARACTER
  5586	407462'	254 00 0 00 407442'		JRST	PEL.T3		;BUT END IF COUNTED OUT
  5587
  5588	407463'	334 01 0 00 412163'	CMVERR:	SKIPA	T1,[[ASCIZ /######Stay on the same line/]]
  5589	407464'	201 01 0 00 412164'	CMXERR:	MOVEI	T1,[ASCIZ /###Can't mix characters and moves/]
  5590	407465'	200 15 0 00 000330'		MOVE	RW,SAVPOS	;RESTORE SAVED POSITION
  5591	407466'	200 16 0 00 000331'		MOVE	CM,SAVPOS+1
  5592	407467'	254 00 0 00 410520'		JRST	ERROR
  5593
  5594					;SUBROUTINE TO PARSE THE FILE SPECS IN FILSPC INTO THE OPEN AND LOOKUP BLOCKS
  5595					;ALSO HANDLES SWITCHES. IF TOPS20, PARSEF HANDLES ONLY SWITCHES
  5596
  5597	407470'	201 01 0 00 407721'	PARSEF:	MOVEI	T1,UNPARS	;RETURN FROM HERE TO UNPARS
  5598	407471'	261 17 0 00 000001 		PUSH	P,T1		;  AND FROM UNPARS TO CALLER
  5599	407472'	200 13 0 00 411551'		MOVE	PT,[POINT 7,FILSPC]
  5600	407473'	201 01 0 00 000016 	TOPS10^IFE TOPS-10,^<	MOVEI	T1,16		;SET UP OPEN BLOCK
  5601	407474'	205 02 0 00 446353 		MOVSI	T2,'DSK'	;  (MODE AND DEVICE)
  5602	407475'	124 01 0 00 000106'		DMOVEM	T1,FILBLK
  5603	407476'	402 00 0 00 000112'		SETZM	FILFIL+.RBPPN	;(NOTE: PATH STAYS THE SAME AS LAST TIME
  5604	407477'	402 00 0 00 000113'		SETZM	FILFIL+.RBNAM	; UNTIL USER GIVES A PPN)
  5605	407500'	402 00 0 00 000114'		SETZM	FILFIL+.RBEXT
  5606	407501'	402 00 0 00 000115'		SETZM	FILFIL+.RBPRV
  5607	407502'	402 00 0 00 000364'		SETZM	FILSBK		;TRY TO READ IN THE WHOLE FILE
  5608	407503'	402 00 0 00 000123'		SETZM	FILPPN
  5609	407504'	402 00 0 00 000124'		SETZM	FILSFD		;[JMS]
  5610	407505'	402 00 0 00 000127'		SETZM	FILUNM+0	;[JMS]
  5611	407506'	402 00 0 00 000130'		SETZM	FILUNM+1	;[JMS]
  5612
  5613	407507'	200 04 0 00 412173'	PARSF0:	MOVE	T4,[POINT 6,FILFIL+.RBNAM]
  5614	407510'	201 00 0 00 000011 		MOVEI	T0,^D9		;SAVE AT MOST 9 CHARACTERS
  5615	407511'	134 01 0 00 000013 	PARSF1:	ILDB	T1,PT		;GET A CHARACTER
  5616	407512'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;DONE, IF NULL
  5617	407513'	302 01 0 00 000011 		CAIE	T1,11		;IGNORE TABS
  5618	407514'	306 01 0 00 000040 		CAIN	T1," "		;  AND SPACES
  5619	407515'	254 00 0 00 407511'		JRST	PARSF1
  5620	407516'	306 01 0 00 000072 		CAIN	T1,":"		;END OF DEVICE?
  5621	407517'	254 00 0 00 407546'		JRST	PARSED		;YES - GO SET DEVICE UP
  5622	407520'	306 01 0 00 000056 		CAIN	T1,"."		;START OF EXTENSION?
  5623	407521'	254 00 0 00 407552'		JRST	PARSEE		;YES - GO PARSE IT
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-28
SED	MAC	21-May-74 00:04		Utility subroutines

  5624	407522'	306 01 0 00 000133 		CAIN	T1,"["		;START OF PPN?
  5625	407523'	254 00 0 00 407603'		JRST	PARSEP		;YES - GO PARSE IT
  5626	407524'	306 01 0 00 000050 		CAIN	T1,"("		;[JMS] START OF TYMCOM-X directory?
  5627	407525'	254 00 0 00 407676'		JRST	PARSEX		;[JMS] YES - GO PARSE IT
  5628	407526'	306 01 0 00 000057 		CAIN	T1,"/"		;START OF SWITCHES?
  5629	407527'	254 00 0 00 407672'		JRST	PARSES		;YES - GO HANDLE THEM
  5630	407530'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  5631	407531'	624 01 0 00 000100 		TRZA	T1,100		;YES - CONVERT TO SIXBIT
  5632	407532'	275 01 0 00 000040 		SUBI	T1,40		;NO - CONVERT TO SIXBIT
  5633	407533'	321 01 0 00 407717'		JUMPL	T1,PRSERR	;ERROR IF CHARACTER IS NOT ALPHANUMERIC
  5634	407534'	305 01 0 00 000020 		CAIGE	T1,'0'
  5635	407535'	254 00 0 00 407717'		JRST	PRSERR
  5636	407536'	307 01 0 00 000031 		CAIG	T1,'9'
  5637	407537'	254 00 0 00 407543'		JRST	PARSF2
  5638	407540'	301 01 0 00 000041 		CAIL	T1,'A'
  5639	407541'	303 01 0 00 000072 		CAILE	T1,'Z'
  5640	407542'	254 00 0 00 407717'		JRST	PRSERR
  5641
  5642	407543'	361 00 0 00 407511'	PARSF2:	SOJL	T0,PARSF1	;IGNORE, IF GOT TOO MANY CHARACTERS
  5643	407544'	136 01 0 00 000004 		IDPB	T1,T4		;ELSE SAVE IT
  5644	407545'	254 00 0 00 407511'		JRST	PARSF1		;AND GET ANOTHER
  5645
  5646	407546'	200 01 0 00 000113'	PARSED:	MOVE	T1,FILFIL+.RBNAM;GET DEVICE NAME
  5647	407547'	202 01 0 00 000107'		MOVEM	T1,FILBLK+1	;SAVE AS DEVICE
  5648	407550'	402 00 0 00 000113'		SETZM	FILFIL+.RBNAM	;CLEAR FILE NAME
  5649					IFDEC^IFE FT$TYM,^<
  5650						MOVEM	T1,FILPTH	;[CSM] Put device name in PATH. block
  5651						MOVE	T1,[SFDS+4,,FILPTH]
  5652						PATH.	T1,		;[CSM] Get the impled path for this device
  5653						  SETZM	FILPPN		;[CSM] Cannot fail for disk devices
  5654					>  ;End IFDEC
  5655	407551'	254 00 0 00 407507'		JRST	PARSF0		;GO GET FILE NAME AGAIN
  5656
  5657	407552'	200 04 0 00 412174'	PARSEE:	MOVE	T4,[POINT 6,FILFIL+.RBEXT]
  5658	407553'	201 00 0 00 000003 		MOVEI	T0,3		;SAVE AT MOST 3 CHARACTERS
  5659	407554'	134 01 0 00 000013 		ILDB	T1,PT		;GET A CHARACTER
  5660	407555'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;DONE, IF NULL
  5661	407556'	302 01 0 00 000011 		CAIE	T1,11		;IGNORE TABS
  5662	407557'	306 01 0 00 000040 		CAIN	T1," "		;  AND SPACES
  5663	407560'	254 00 0 00 407554'		JRST	PARSEE+2
  5664	407561'	306 01 0 00 000133 		CAIN	T1,"["		;START OF PPN?
  5665	407562'	254 00 0 00 407603'		JRST	PARSEP		;YES - GO PARSE IT
  5666	407563'	306 01 0 00 000057 		CAIN	T1,"/"		;START OF SWITCHES?
  5667	407564'	254 00 0 00 407672'		JRST	PARSES		;YES - GO HANDLE THEM
  5668	407565'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  5669	407566'	624 01 0 00 000100 		TRZA	T1,100		;YES - CONVERT TO SIXBIT
  5670	407567'	275 01 0 00 000040 		SUBI	T1,40		;NO - CONVERT TO SIXBIT
  5671	407570'	321 01 0 00 407717'		JUMPL	T1,PRSERR	;ERROR IF CHARACTER IS NOT ALPHANUMERIC
  5672	407571'	305 01 0 00 000020 		CAIGE	T1,'0'
  5673	407572'	254 00 0 00 407717'		JRST	PRSERR
  5674	407573'	307 01 0 00 000031 		CAIG	T1,'9'
  5675	407574'	254 00 0 00 407600'		JRST	PARSE2
  5676	407575'	301 01 0 00 000041 		CAIL	T1,'A'
  5677	407576'	303 01 0 00 000072 		CAILE	T1,'Z'
  5678	407577'	254 00 0 00 407717'		JRST	PRSERR
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-29
SED	MAC	21-May-74 00:04		Utility subroutines

  5679
  5680	407600'	361 00 0 00 407554'	PARSE2:	SOJL	T0,PARSEE+2	;IGNORE, IF GOT TOO MANY CHARACTERS
  5681	407601'	136 01 0 00 000004 		IDPB	T1,T4		;SAVE CHARACTER
  5682	407602'	254 00 0 00 407554'		JRST	PARSEE+2	;AND GET ANOTHER
  5683
  5684	407603'	400 01 0 00 000000 	PARSEP:	SETZ	T1,		;CLEAR TARGET
  5685	407604'	134 02 0 00 000013 	PARSP1:	ILDB	T2,PT		;GET CHARACTER OF PPN
  5686	407605'	322 02 0 00 407661'		JUMPE	T2,PARSP3	;DONE IF NULL
  5687	407606'	306 02 0 00 000054 		CAIN	T2,","		;END OF PROJECT NUMBER?
  5688	407607'	254 00 0 00 407620'		JRST	PARSP2		;YES - SAVE IT AND GET PROG NUMBER
  5689	407610'	306 02 0 00 000135 		CAIN	T2,"]"		;END OF PROGRAMMER NUMBER?
  5690	407611'	254 00 0 00 407661'		JRST	PARSP3		;YES - SAVE IT AND QUIT
  5691	407612'	301 02 0 00 000060 		CAIL	T2,"0"		;ERROR IF NOT OCTAL
  5692	407613'	303 02 0 00 000067 		CAILE	T2,"7"
  5693	407614'	254 00 0 00 407717'		JRST	PRSERR
  5694	407615'	241 02 0 00 777775 		ROT	T2,-3		;ELSE SHIFT IT INTO TARGET
  5695	407616'	246 01 0 00 000003 		LSHC	T1,3
  5696	407617'	254 00 0 00 407604'		JRST	PARSP1		;AND GET SOME MORE
  5697
  5698	407620'	663 05 0 00 000001 	PARSP2:	TLOE	F,FLG		;IT THIS PROGRAMMER NUMBER?
  5699	407621'	254 00 0 00 407625'		JRST	PARSSF		;YES - THERE'S AN SFD COMING
  5700	407622'	322 01 0 00 407603'		JUMPE	T1,PARSEP	;NO - IF NOTHING THERE, DON'T SAVE
  5701	407623'	506 01 0 00 000123'		HRLM	T1,FILPPN	;ELSE SAVE PROJECT NUMBER
  5702	407624'	254 00 0 00 407603'		JRST	PARSEP		;AND GET PROGRAMMER NUMBER
  5703
  5704	407625'	400 02 0 00 000000 	PARSSF:	SETZ	T2,		;FINISH OFF PPN
  5705	407626'	260 17 0 00 407662'		PUSHJ	P,PARSP3+1
  5706	407627'	621 05 0 00 000001 		TLZ	F,FLG		;CLEAR PROJECT NUMBER FLAG
  5707	407630'	400 01 0 00 000000 		SETZ	T1,		;CLEAR SFD LEVEL COUNTER
  5708	407631'	200 04 0 00 412106'	PARSS0:	MOVE	T4,[POINT 6,T3]
  5709	407632'	201 00 0 00 000006 		MOVEI	T0,^D6		;SAVE AT MOST 6 CHARACTERS
  5710	407633'	400 03 0 00 000000 		SETZ	T3,		;CLEAR TARGET OF SFD NAME
  5711	407634'	134 02 0 00 000013 	PARSS1:	ILDB	T2,PT		;GET CHARACTER OF SFD
  5712	407635'	322 02 0 00 407666'		JUMPE	T2,PARSS3	;DONE IF NULL
  5713	407636'	306 02 0 00 000054 		CAIN	T2,","		;START OF ANOTHER SFD LEVEL?
  5714	407637'	344 01 0 00 407653'		AOJA	T1,PARSS2	;YES - SET UP FOR IT
  5715	407640'	306 02 0 00 000135 		CAIN	T2,"]"		;END OF SFDS?
  5716	407641'	254 00 0 00 407666'		JRST	PARSS3		;YES - SAVE IT AND QUIT
  5717	407642'	301 02 0 00 000141 		CAIL	T2,"a"		;LOWER CASE?
  5718	407643'	624 02 0 00 000100 		TRZA	T2,100		;YES - CONVERT TO SIXBIT
  5719	407644'	275 02 0 00 000040 		SUBI	T2,40		;NO - CONVERT TO SIXBIT
  5720	407645'	321 02 0 00 407717'		JUMPL	T2,PRSERR	;ERROR IF ILLEGAL SIXBIT
  5721	407646'	303 02 0 00 000077 		CAILE	T2,77
  5722	407647'	254 00 0 00 407717'		JRST	PRSERR
  5723	407650'	136 02 0 00 000004 		IDPB	T2,T4		;O.K. - ADD TO SFD NAME
  5724	407651'	365 00 0 00 407634'		SOJGE	T0,PARSS1	;AND GET SOME MORE
  5725	407652'	254 00 0 00 407717'		JRST	PRSERR		;UNLESS COUNTED OUT
  5726
  5727	407653'	322 03 0 00 407655'	PARSS2:	JUMPE	T3,.+2		;USE OLD SFD NAME IF NONE GIVEN
  5728	407654'	202 03 0 01 000123'		MOVEM	T3,FILSFD-1(T1)	;ELSE SAVE SFD NAME
  5729	407655'	305 01 0 00 000005 		CAIGE	T1,SFDS	;DOWN TOO MANY SFD LEVELS?
  5730	407656'	254 00 0 00 407631'		JRST	PARSS0		;NO - GO PARSE THE NEXT LEVEL
  5731	407657'	201 01 0 00 412175'		MOVEI	T1,[ASCIZ /#########SFD level too deep/]
  5732	407660'	254 00 0 00 410535'		JRST	STFERR		;YES - NO GOOD
  5733
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-30
SED	MAC	21-May-74 00:04		Utility subroutines

  5734	407661'	402 00 0 00 000124'	PARSP3:	SETZM	FILSFD		;PATH ENDS WITH PPN
  5735	407662'	322 01 0 00 407664'		JUMPE	T1,.+2		;IS PROGRAMMER NUMBER NON-0?
  5736	407663'	542 01 0 00 000123'		HRRM	T1,FILPPN	;YES - SAVE IT
  5737	407664'	326 02 0 00 407507'		JUMPN	T2,PARSF0	;IF NOT END, SEE WHAT ELSE AWAITS
  5738	407665'	263 17 0 00 000000 		POPJ	P,		;ELSE DONE
  5739
  5740	407666'	202 03 0 01 000124'	PARSS3:	MOVEM	T3,FILSFD(T1)	;SAVE LATEST SFD NAME
  5741	407667'	402 00 0 01 000125'		SETZM	FILSFD+1(T1)	;CLEAR WORD AFTER LAST SFD NAME
  5742	407670'	326 02 0 00 407507'		JUMPN	T2,PARSF0	;IF NOT END, SEE WHAT ELSE AWAITS
  5743	407671'	263 17 0 00 000000 		POPJ	P,		;ELSE DONE
  5744	407672'	200 02 0 00 000013 	PARSES:	MOVE	T2,PT		;PUT INPUT POINTER IN THE RIGHT AC
  5745	407673'	400 01 0 00 000000 		SETZ	T1,		;NULL OUT THE FIRST SLASH
  5746	407674'	137 01 0 00 000013 		DPB	T1,PT
  5747	407675'	254 00 0 00 406415'		JRST	SWHMNY		;HANDLE THE SWITCHES AND RETURN
  5748
  5749	407676'	200 04 0 00 412203'	PARSEX:	MOVE	T4,[POINT 6,FILUNM]	;[JMS] Place to store user name
  5750	407677'	201 00 0 00 000014 		MOVEI	T0,^D12		;SAVE AT MOST 6 CHARACTERS
  5751	407700'	134 02 0 00 000013 	PARSX1:	ILDB	T2,PT		;GET CHARACTER OF DIRECTORY
  5752	407701'	302 02 0 00 000000 		CAIE	T2,0		;DONE IF NULL
  5753	407702'	306 02 0 00 000051 		CAIN	T2,")"		;END OF DIRECTORY?
  5754	407703'	254 00 0 00 407715'		 JRST	PARSX2		;YES - SAVE IT AND QUIT
  5755	407704'	301 02 0 00 000141 		CAIL	T2,"a"		;LOWER CASE?
  5756	407705'	624 02 0 00 000100 		TRZA	T2,100		;YES - CONVERT TO SIXBIT
  5757	407706'	275 02 0 00 000040 		SUBI	T2,40		;NO - CONVERT TO SIXBIT
  5758	407707'	321 02 0 00 407717'		JUMPL	T2,PRSERR	;ERROR IF ILLEGAL SIXBIT
  5759	407710'	303 02 0 00 000077 		CAILE	T2,77
  5760	407711'	254 00 0 00 407717'		JRST	PRSERR
  5761	407712'	136 02 0 00 000004 		IDPB	T2,T4		;O.K. - ADD TO SFD NAME
  5762	407713'	365 00 0 00 407700'		SOJGE	T0,PARSX1	;AND GET SOME MORE
  5763	407714'	254 00 0 00 407717'		JRST	PRSERR		;UNLESS COUNTED OUT
  5764	407715'	326 02 0 00 407507'	PARSX2:	JUMPN	T2,PARSF0	;IF NOT END, SEE WHAT ELSE AWAITS
  5765	407716'	263 17 0 00 000000 		POPJ	P,              ;[JMS]
  5766
  5767	407717'	201 01 0 00 412204'	PRSERR:	MOVEI	T1,[ASCIZ /###########Bad file specs/]
  5768	407720'	254 00 0 00 410535'		JRST	STFERR		;OUTPUT THE ERROR AND CONTINUE
  5769					>  ;End TOPS10
  5770					TOPS20^IFE TOPS-20,^<
  5771					PARSF0:	ILDB	T1,PT		;GET A CHARACTER
  5772						JUMPE	T1,CPOPJ	;DONE IF NULL
  5773						CAIE	T1,"/"		;START OF SWITCHES?
  5774						JRST	PARSF0		;NO - KEEP LOOKING
  5775						MOVE	T2,PT		;YES - PUT INPUT POINTER IN THE RIGHT AC
  5776						SETZ	T1,		;NULL OUT THE FIRST SLASH
  5777						DPB	T1,PT
  5778						JRST	SWHMNY		;HANDLE THE SWITCHES AND RETURN
  5779					>
  5780					;SUBROUTINE TO UNPARSE THE FILE SPEC BLOCKS INTO FILSPC
  5781					;POPJ'D TO FROM PARSEF
  5782
  5783					TOPS10^IFE TOPS-10,^<
  5784	407721'	200 13 0 00 411551'	UNPARS:	MOVE	PT,[POINT 7,FILSPC]
  5785	407722'	200 02 0 00 000107'		MOVE	T2,FILBLK+1	;GET DEVICE
  5786	407723'	316 02 0 00 412212'		CAMN	T2,[SIXBIT /DSK/] ;IS IT JUST DISK?
  5787	407724'	254 00 0 00 407730'		 JRST	UNPRSF		;YES - SKIP IT
  5788	407725'	260 17 0 00 410037'		PUSHJ	P,PUTSIX
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-31
SED	MAC	21-May-74 00:04		Utility subroutines

  5789	407726'	201 01 0 00 000072 		MOVEI	T1,":"
  5790	407727'	136 01 0 00 000013 		IDPB	T1,PT
  5791
  5792	407730'				UNPRSF:	IFN FT$TYM,<	;Decode default directory name
  5793	407730'	336 00 0 00 000127'		SKIPN	FILUNM		;Username specified?
  5794	407731'	336 00 0 00 000174'		SKIPN	TYMCOM		;No, TYMCOM-X?
  5795	407732'	254 00 0 00 407752'		 JRST	UNPRS1		;Don't bother
  5796	407733'	336 01 0 00 000123'		SKIPN	T1,FILPPN	;Get PPN
  5797	407734'	200 01 0 00 000112'		 MOVE	T1,FILFIL+.RBPPN
  5798	407735'	561 02 0 00 000002 		HRROI	T2,.GTPPN	;Get connected PPN
  5799	407736'	047 02 0 00 000041 		GETTAB	T2,
  5800	407737'	200 01 0 00 000002 		  MOVE	T1,T2
  5801	407740'	312 01 0 00 000002 		CAME	T1,T2		;Match?
  5802	407741'	254 00 0 00 407752'		 JRST	UNPRS1		;No, give up
  5803	407742'	561 02 0 00 000031 		HRROI	T2,.GTNM1	;Yes, get name belonging to this PPN
  5804	407743'	047 02 0 00 000041 		GETTAB	T2,
  5805	407744'	201 02 0 00 000000 		  MOVEI	T2,0
  5806	407745'	202 02 0 00 000127'		MOVEM	T2,FILUNM
  5807	407746'	561 02 0 00 000032 		HRROI	T2,.GTNM2	;Get 2nd half of user name
  5808	407747'	047 02 0 00 000041 		GETTAB	T2,
  5809	407750'	201 02 0 00 000000 		  MOVEI	T2,0
  5810	407751'	202 02 0 00 000130'		MOVEM	T2,FILUNM+1
  5811	407752'	332 00 0 00 000127'	UNPRS1:	SKIPE	FILUNM		;[JMS] Username specified?
  5812						 JRST	[SKIPE	FILSFD	  ;[JMS] Yes, output it if no SFDs
  5813							  PUSHJ	P,UNPRSY  ;[JMS] Output username in parenthesis
  5814	407753'	254 00 0 00 412213'			 JRST	.+1]	  ;[JMS]
  5815					>  ;End of IFN FT$TYM
  5816	407754'	200 02 0 00 000113'		MOVE	T2,FILFIL+.RBNAM;SET UP FILE NAME
  5817	407755'	260 17 0 00 410037'		PUSHJ	P,PUTSIX
  5818	407756'	201 01 0 00 000056 		MOVEI	T1,"."
  5819	407757'	136 01 0 00 000013 		IDPB	T1,PT
  5820	407760'	510 02 0 00 000114'		HLLZ	T2,FILFIL+.RBEXT;SET UP EXTENSION
  5821	407761'	260 17 0 00 410037'		PUSHJ	P,PUTSIX
  5822	407762'	336 01 0 00 000123'		SKIPN	T1,FILPPN	;[JMS] GOT A PPN?
  5823	407763'	200 01 0 00 000112'		 MOVE	T1,FILFIL+.RBPPN;[JMS] No, use LOOKUP block
  5824	407764'	202 01 0 00 000123'		MOVEM	T1,FILPPN	;[JMS]
  5825	407765'	322 01 0 00 410034'		JUMPE	T1,UNPRSX	;[JMS] NO - DON'T OUTPUT IT
  5826	407766'	201 01 0 00 000133 		MOVEI	T1,"["		;START THE PPN
  5827	407767'	136 01 0 00 000013 		IDPB	T1,PT
  5828
  5829	407770'	474 03 0 00 000000 		SETO	T3,
  5830	407771'	554 01 0 00 000123'		HLRZ	T1,FILPPN	;GET THE PROJECT
  5831	407772'	334 04 0 00 412216'		SKIPA	T4,[","]	;GET SEPARATOR CHARACTER
  5832	407773'	550 01 0 00 000123'	UNPRSP:	HRRZ	T1,FILPPN	;GET THE PROGRAMMER
  5833	407774'	205 02 0 00 700000 		MOVSI	T2,700000
  5834	407775'	246 01 0 00 777775 		LSHC	T1,-3
  5835	407776'	326 01 0 00 407775'		JUMPN	T1,.-1		;PUT NUMBER ALL IN T2
  5836	407777'	400 01 0 00 000000 	UNPSP1:	SETZ	T1,
  5837	410000'	246 01 0 00 000003 		LSHC	T1,3		;GET A DIGIT IN T1
  5838	410001'	322 02 0 00 410005'		JUMPE	T2,UNPSP2	;DONE IF NOTHING LEFT
  5839	410002'	271 01 0 00 000060 		ADDI	T1,"0"
  5840	410003'	136 01 0 00 000013 		IDPB	T1,PT
  5841	410004'	254 00 0 00 407777'		JRST	UNPSP1
  5842
  5843	410005'	136 04 0 00 000013 	UNPSP2:	IDPB	T4,PT		;SAVE SEPARATOR OR END BRACKET
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-32
SED	MAC	21-May-74 00:04		Utility subroutines

  5844	410006'	201 04 0 00 000135 		MOVEI	T4,"]"		;GET THE END BRACKET
  5845	410007'	342 03 0 00 407773'		AOJE	T3,UNPRSP	;IF DID PROJ, GO DO PROG
  5846	410010'	400 03 0 00 000000 		SETZ	T3,		;CLEAR SFD INDEX
  5847	410011'	336 02 0 03 000124'	UNPSSF:	SKIPN	T2,FILSFD(T3)	;GOT AN(OTHER) SFD NAME?
  5848	410012'	254 00 0 00 410034'		JRST	UNPRSX		;NO - FINISH OFF
  5849	410013'	201 01 0 00 000054 		MOVEI	T1,","		;YES - CHANGE BRACKET TO A COMMA
  5850	410014'	137 01 0 00 000013 		DPB	T1,PT
  5851	410015'	260 17 0 00 410037'		PUSHJ	P,PUTSIX	;OUTPUT SIXBIT SFD NAME
  5852	410016'	136 04 0 00 000013 		IDPB	T4,PT		;END WITH A RIGHT BRACKET
  5853	410017'	344 03 0 00 410011'		AOJA	T3,UNPSSF	;GET NEXT LEVEL, IF ANY
  5854
  5855	410020'	201 02 0 00 000050 	UNPRSY:	MOVEI	T2,"("		;Output user name
  5856	410021'	136 02 0 00 000013 		IDPB	T2,PT
  5857	410022'	201 03 0 00 000014 		MOVEI	T3,^D12		;[JMS] Up to 12 characters
  5858	410023'	200 04 0 00 412203'		MOVE	T4,[POINT 6,FILUNM]
  5859	410024'	134 02 0 00 000004 	UNPRY1:	ILDB	T2,T4		;Get a character
  5860	410025'	322 02 0 00 410031'		JUMPE	T2,UNPRY2	;Stop at first blank
  5861	410026'	271 02 0 00 000040 		ADDI	T2,40		;To ASCII
  5862	410027'	136 02 0 00 000013 		IDPB	T2,PT
  5863	410030'	367 03 0 00 410024'		SOJG	T3,UNPRY1	;Do 12
  5864	410031'	201 02 0 00 000051 	UNPRY2:	MOVEI	T2,")"
  5865	410032'	136 02 0 00 000013 		IDPB	T2,PT
  5866	410033'	263 17 0 00 000000 		POPJ	P,		;[JMS] End of UNPRSY
  5867
  5868	410034'	400 02 0 00 000000 	UNPRSX:	SETZ	T2,
  5869	410035'	136 02 0 00 000013 		IDPB	T2,PT		;END WITH A NULL
  5870	410036'	263 17 0 00 000000 		POPJ	P,		;AND RETURN
  5871
  5872	410037'	400 01 0 00 000000 	PUTSIX:	SETZ	T1,		;GET A SIXBIT CHARACTER
  5873	410040'	246 01 0 00 000006 		LSHC	T1,6
  5874	410041'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;DONE, IF NULL
  5875	410042'	271 01 0 00 000040 		ADDI	T1,40		;ELSE CONVERT TO ASCII
  5876	410043'	136 01 0 00 000013 		IDPB	T1,PT		;STORE CHARACTER
  5877	410044'	254 00 0 00 410037'		JRST	PUTSIX		;AND LOOP
  5878					>
  5879					TOPS20^IFE TOPS-20,^<
  5880					UNPARS:	POPJ	P,
  5881					>
  5882					;************************************************************************
  5883					;INITIALIZING SUBROUTINES
  5884
  5885					;SUBROUTINE TO RESCAN USER'S RUN LINE TO SEE IF HE TYPED "R EDIT;FILESPECS"
  5886					;LOOKS FOR AN "E", SKIPS TO NEXT SPACE OR ";", ASSUMES THE REST IS SPECS
  5887					;MOVE SPACES TO PARM BUFFER AND SET FLAG SO THEY WILL BE PARSED
  5888
  5889					TOPS10^IFE TOPS-10,^<
  5890	410045'	051 10 0 00 000000 	RSCANL:	RESCAN			;GO TO START OF RUN LINE
  5891	410046'	402 00 0 00 000353'		SETZM	RSCANF
  5892	410047'	051 02 0 00 000001 	RSCAN0:	INCHRS	T1		;IS THERE A CHARACTER WAITING?
  5893	410050'	263 17 0 00 000000 		  POPJ	P,		;NO - DONE
  5894	410051'	306 01 0 00 000105 		CAIN	T1,"E"		;BEGINNING OF EDITOR NAME?
  5895	410052'	254 00 0 00 410055'		JRST	RSCAN1		;NO - KEEP LOOKING
  5896	410053'	302 01 0 00 000145 		CAIE	T1,"e"		;BEGINNING OF EDITOR NAME?
  5897	410054'	254 00 0 00 410047'		JRST	RSCAN0		;NO - KEEP LOOKING
  5898
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-33
SED	MAC	21-May-74 00:04		Utility subroutines

  5899	410055'	051 02 0 00 000001 	RSCAN1:	INCHRS	T1		;YES - SKIP CHARACTERS
  5900	410056'	263 17 0 00 000000 		  POPJ	P,		;UNTIL END OF LINE,
  5901	410057'	302 01 0 00 000040 		CAIE	T1," "		;OR SPACE
  5902	410060'	306 01 0 00 000073 		CAIN	T1,";"		;OR SEMICOLON IS FOUND
  5903	410061'	254 00 0 00 410063'		JRST	RSCA1A
  5904	410062'	254 00 0 00 410055'		JRST	RSCAN1		;ELSE KEEP SKIPPING
  5905
  5906	410063'	200 01 0 00 411361'	RSCA1A:	MOVE	T1,[POINT 7,CLSBUF] ;POINT TO START OF CLOSE BUFFER
  5907	410064'	202 01 0 00 002227'		MOVEM	T1,PARPTR
  5908	410065'	051 02 0 00 000001 		INCHRS	T1		;GET FIRST FILE CHARACTER
  5909	410066'	254 00 0 00 410103'		  JRST	RSCAN3		;DONE IF NOTHING WAITING
  5910	410067'	306 01 0 00 000040 		CAIN	T1," "		;SKIP ANY LEADING SPACES
  5911	410070'	254 00 0 00 410065'		JRST	.-3
  5912	410071'	306 01 0 00 000015 		CAIN	T1,15		;END OF LINE?
  5913	410072'	254 00 0 00 410103'		JRST	RSCAN3		;YES - SET UP NO FILE
  5914	410073'	476 00 0 00 000353'		SETOM	RSCANF		;NO - SET ENTER-PARAMETER FLAG
  5915					;	TLZ	F,SMF		;FILES AIN'T THE SAME, CAUSE THEY AIN'T NONE
  5916	410074'	254 00 0 00 410077'		JRST	.+3		;GO SAVE THE FILE NAME
  5917
  5918	410075'	051 02 0 00 000001 	RSCAN2:	INCHRS	T1		;YES - SAVE FROM HERE ON AS A PARAMETER
  5919	410076'	254 00 0 00 410103'		  JRST	RSCAN3		;DONE IF NOTHING LEFT
  5920	410077'	306 01 0 00 000015 		CAIN	T1,15		;END OF LINE?
  5921	410100'	254 00 0 00 410103'		JRST	RSCAN3		;YES - CLEAN BUFFER OUT AND RETURN
  5922	410101'	136 01 0 00 002227'		IDPB	T1,PARPTR	;ELSE SAVE THE CHARACTER
  5923	410102'	254 00 0 00 410075'		JRST	RSCAN2		;AND GET ANOTHER ONE
  5924
  5925	410103'	051 11 0 00 000000 	RSCAN3:	CLRBFI
  5926	410104'	400 00 0 00 000000 		SETZ	T0,		;END BUFFER WITH A NULL
  5927	410105'	136 00 0 00 002227'		IDPB	T0,PARPTR
  5928					>
  5929
  5930					TOPS20^IFE TOPS-20,^<
  5931					RSCANL:	SETZB	T1,RSCANF	;SET TO RE-READ RUN LINE
  5932						RSCAN
  5933						  POPJ	P,		;IF THERE'S A PROBLEM, FORGET IT
  5934					RSCAN0:	PBIN			;GET A CHARACTER
  5935						CAIN	T1,12		;END OF LINE?
  5936						POPJ	P,		;YES - RETURN
  5937						CAIN	T1,"E"		;BEGINNING OF EDITOR NAME?
  5938						JRST	RSCAN1		;YES - SKIP TO A SPACE
  5939						CAIN	T1,"e"		;BEGINNING?
  5940						JRST	RSCAN0		;NO - KEEP LOOKING
  5941					
  5942					RSCAN1:	PBIN			;GET A CHARACTER
  5943						CAIN	T1,12		;END OF LINE?
  5944						POPJ	P,		;YES - RETURN
  5945						CAIE	T1," "		;GOT A SPACE YET?
  5946						JRST	RSCAN1		;NO - KEEP SKIPPING
  5947					
  5948						MOVE	T1,[POINT 7,CLSBUF]
  5949						MOVEM	T1,PARPTR	;POINT TO START OF CLOSE BUFFER
  5950					RSCN1A:	PBIN			;GET A FILESPEC CHARACTER
  5951						CAIN	T1,12		;END OF LINE?
  5952						POPJ	P,		;YES - FINISH OFF
  5953						CAIN	T1," "		;SKIP ANY LEADING SPACES
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-34
SED	MAC	21-May-74 00:04		Utility subroutines

  5954						JRST	RSCN1A
  5955						SETOM	RSCANF		;SAY FILESPECS HAVE BEEN FOUND
  5956						JRST	RSCN2A		;AND GO SET UP THE SPECS
  5957					
  5958					RSCAN2:	PBIN			;GET A FILESPEC CHARACTER
  5959						CAIN	T1,12		;END OF LINE?
  5960						JRST	RSCAN3		;YES - FINISH OFF
  5961					RSCN2A:	IDPB	T1,PARPTR	;ELSE SAVE THE CHARACTER
  5962						JRST	RSCAN2		;AND GET ANOTHER ONE
  5963					
  5964					RSCAN3:	SETZ	T0,		;END BUFFER WITH A NULL
  5965						IDPB	T0,PARPTR
  5966					>
  5967	410106'	200 02 0 00 411361'		MOVE	T2,[POINT 7,CLSBUF] ;NOW LOOK OVER SPECS AGAIN
  5968	410107'	134 01 0 00 000002 	RSCAN4:	ILDB	T1,T2		;SEE IF THERE ARE ANY SWITCHES
  5969	410110'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;IF END OF BUFFER, DONE
  5970	410111'	302 01 0 00 000057 		CAIE	T1,"/"		;ELSE GOT START OF SWITCHES?
  5971	410112'	254 00 0 00 410107'		JRST	RSCAN4		;NO - KEEP LOOKING
  5972	410113'	137 00 0 00 000002 		DPB	T0,T2		;YES - NULL OUT THE FIRST SLASH
  5973	410114'	254 00 0 00 406415'		JRST	SWHMNY		;GO HANDLE THE SWITCHES AND RETURN
  5974
  5975					;HERE ON ENTRY TO TRANSFER RESCANNED SPECS TO PARM BUFFER
  5976
  5977	410115'	200 01 0 00 411207'	SETSCN:	MOVE	T1,[POINT 7,PARBUF]
  5978	410116'	200 02 0 00 411361'		MOVE	T2,[POINT 7,CLSBUF]
  5979	410117'	134 00 0 00 000002 		ILDB	T0,T2		;GET A CHARACTER FROM THE CLOSE BUFFER
  5980	410120'	322 00 0 00 410123'		JUMPE	T0,.+3		;STOP, IF NULL
  5981	410121'	136 00 0 00 000001 		IDPB	T0,T1		;SAVE IT IN THE PARAMETER BUFFER
  5982	410122'	254 00 0 00 410117'		JRST	.-3		;GET ANOTHER CHARACTER
  5983	410123'	202 01 0 00 002227'		MOVEM	T1,PARPTR	;SAVE PARAMETER POINTER
  5984	410124'	136 00 0 00 000001 		IDPB	T0,T1		;SAVE THE NULL IN THE PARAMETER BUFFER
  5985	410125'	201 12 0 00 000002 		MOVEI	DO,2		;PRETEND A SET-FILE COMMAND WAS TYPED
  5986	410126'	200 01 0 00 411550'		MOVE	T1,[FILSPC,,OLDSPC] ;COPY CURRENT SPECS INTO OLD SPECS
  5987	410127'	251 01 0 00 000171'		BLT	T1,OLDSPC+13+11+4+SFDS
  5988	410130'	254 00 0 00 403726'		JRST	SETFLC		;GO DO THAT SET-FILE
  5989
  5990					;HERE TO READ nnnSTT.TMP, IF ANY, AND SET UP THE FILE STATUS THERE
  5991					;IF NONE, SETS UP FOR THE DEFAULT "WELCOME TO E" MESSAGE
  5992
  5993	410131'				REDTMP:
  5994					TOPS10^IFE TOPS-10,^<		;[CSM] Try TMP:SED before DSK:000STT.TMP
  5995	410131'	201 01 0 00 777400 		MOVEI	T1,-400		;[CSM] Set to MAX size
  5996	410132'	506 01 0 00 000246'		HRLM	T1,STTCCL	;[CSM]  in IOWD
  5997	410133'	200 01 0 00 411627'		MOVE	T1,[1,,STTCCL-1];[CSM] Code to read
  5998	410134'	047 01 0 00 000044 		TMPCOR	T1,		;[CSM] Read TMP:SED
  5999	410135'	334 00 0 00 000000 		  SKIPA			;[CSM] Not there, try disk
  6000	410136'	254 00 0 00 410150'		 JRST   RDTMP1		;[CSM] Got it
  6001					>
  6002	410137'	561 02 0 00 000241'		HRROI	T2,STTFIL
  6003	410140'	260 17 0 00 405670'		PUSHJ	P,SETIN		;GO FIND THE TEMPORARY FILE
  6004	410141'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;IF NONE, JUST RETURN
  6005					TOPS10^IFE TOPS-10,^<	HLRZS	T1		;READ ONLY FIRST TWO BLOCKS, IF FILE IS LARG
  6006	410142'	557 00 0 00 000001 	E
  6007	410143'	303 01 0 00 777400 		CAILE	T1,-400
  6008	410144'	201 01 0 00 777400 		MOVEI	T1,-400
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 28-35
SED	MAC	21-May-74 00:04		Utility subroutines

  6009	410145'	506 01 0 00 000246'		HRLM	T1,STTCCL	;SET UP SIZE OF FILE
  6010	410146'	066 05 0 00 000246'		INPUT	5,STTCCL	;READ STATUS INTO PICK BUFFER
  6011	410147'	071 05 0 00 000000 		RELEAS	5,
  6012	410150'				RDTMP1:	>
  6013					TOPS20^IFE TOPS-20,^<	MOVE	T2,[POINT 7,PIKBUF+PCBSIZ-400]
  6014						SETZ	T3,		;READ THE FILE INTO THE PICK BUFFER
  6015						SIN
  6016						CLOSF			;CLOSE THE FILE
  6017						  HALTF
  6018					>
  6019	410150'	400 02 0 00 000000 		SETZ	T2,
  6020	410151'	200 13 0 00 411325'		MOVE	PT,[POINT 7,PIKBUF+PCBSIZ-400]
  6021	410152'	200 04 0 00 411551'		MOVE	T4,[POINT 7,FILSPC]
  6022	410153'	260 17 0 00 410202'		PUSHJ	P,TMPGET	;READ ACTIVE SPECS INTO ACTIVE AREA
  6023	410154'	322 01 0 00 410161'		JUMPE	T1,REDTM1	;IS THERE ANOTHER LINE (WITH ALTERNATE SPECS)?
  6024	410155'	200 04 0 00 411626'		MOVE	T4,[POINT 7,OLDSPC] ;YES - READ IT
  6025	410156'	260 17 0 00 410203'		PUSHJ	P,TMPGT1	;READ ALTERNATE SPECS INTO OLD AREA
  6026	410157'	305 01 0 00 000060 		CAIGE	T1,"0"		;IS THERE AN ALPHANUMERIC ON THE NEXT LINE?
  6027	410160'	402 00 0 00 000356'		SETZM	MFLPTR		;NO - FORGET THE POINTER
  6028
  6029	410161'	402 00 0 00 002254'	REDTM1:	SETZM	DISPTR		;CLEAR POINTERS
  6030	410162'	402 00 0 00 000176'		SETZM	SAVEDP		;  TO NOTE THAT PARSING MUST BE DONE
  6031	410163'	661 05 0 00 000034 		TLO	F,XPL!XPC!XPB	;SAY NO POINTERS ARE VALID; FALL INTO:
  6032
  6033					;SUBROUTINE TO SEE IF FILE AND ALTERNATE ARE THE SAME
  6034					;SETS FLAG SMF IF FILES ARE THE SAME, ELSE CLEARS SMF
  6035
  6036	410164'	621 05 0 00 100000 	SAMFIL:	TLZ	F,SMF		;ASSUME FILES AREN'T THE SAME
  6037	410165'	200 03 0 00 411551'		MOVE	T3,[POINT 7,FILSPC]
  6038	410166'	200 04 0 00 411626'		MOVE	T4,[POINT 7,OLDSPC]
  6039	410167'	134 01 0 00 000003 	SAMFL1:	ILDB	T1,T3		;SEE IF BOTH FILE SPECS ARE THE SAME
  6040	410170'	134 02 0 00 000004 		ILDB	T2,T4
  6041	410171'	306 01 0 00 000057 		CAIN	T1,"/"		;TREAT START OF SWITCHES
  6042	410172'	400 01 0 00 000000 		SETZ	T1,		;  LIKE END OF SPECS
  6043	410173'	306 02 0 00 000057 		CAIN	T2,"/"
  6044	410174'	400 02 0 00 000000 		SETZ	T2,
  6045	410175'	312 01 0 00 000002 		CAME	T1,T2		;ARE THEY SO FAR?
  6046	410176'	263 17 0 00 000000 		POPJ	P,		;NO - DONE
  6047	410177'	326 01 0 00 410167'		JUMPN	T1,SAMFL1	;ELSE LOOP THROUGH ENTIRE STRING
  6048	410200'	661 05 0 00 100000 		TLO	F,SMF		;FILES ARE THE SAME IF CONTROL GETS HERE
  6049	410201'	263 17 0 00 000000 		POPJ	P,		;DONE
  6050
  6051					;SUBROUTINE TO READ FROM (PT) AND SAVE IN (T4). EXPECTS T2/0
  6052					;RETURNS FIRST CHARACTER OF NEXT LINE IN T1
  6053
  6054	410202'	134 01 0 00 000013 	TMPGET:	ILDB	T1,PT		;READ SPECS INTO ACTIVE OR ALTERNATE AREA
  6055	410203'	136 01 0 00 000004 	TMPGT1:	IDPB	T1,T4
  6056	410204'	302 01 0 00 000015 		CAIE	T1,15
  6057	410205'	326 01 0 00 410202'		 JUMPN	T1,TMPGET	;[CSM] Loop unless null
  6058	410206'	137 02 0 00 000004 		DPB	T2,T4		;NULL OUT THE CARRIAGE RETURN
  6059	410207'	134 01 0 00 000013 		ILDB	T1,PT		;SKIP OVER THE LINEFEED
  6060	410210'	202 13 0 00 000356'		MOVEM	PT,MFLPTR	;SAVE POINTER TO (MAYBE) NEW SPECS
  6061	410211'	134 01 0 00 000013 		ILDB	T1,PT		;PICK UP FIRST CHARACTER OF NEXT LINE
  6062	410212'	263 17 0 00 000000 		POPJ	P,		;GIVE IT BACK TO CALLER
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 29
SED	MAC	21-May-74 00:04		TOPS-10 TTY I/O routines

  6063					SUBTTL	TOPS-10 TTY I/O routines
  6064					TOPS10^IFE TOPS-10,^<	
  6065					;TTYINI - Initialize terminal to accept all control-characters on input
  6066
  6067	410213'	050 01 0 00 412217'	TTYINI:	OPEN	1,[EXP .IOPIM,'TTY   ',0]	;INIT terminal
  6068	410214'	254 04 0 00 410214'		  HALT	.		;Must be able to use mode 2
  6069
  6070	410215'	474 02 0 00 000000 		SETO	T2,		;Find terminal number
  6071	410216'	047 02 0 00 000115 		TRMNO.	T2,
  6072	410217'	474 02 0 00 000000 		  SETO	T2,		;-1 if TRMNO./TRMOP. not implemented
  6073	410220'	202 02 0 00 000307'		MOVEM	T2,TTYNUM
  6074
  6075	410221'	201 01 0 00 002037 		MOVEI	T1,.TOPBS+.TOSET;Change the PIM Break Set
  6076	410222'	400 03 0 00 000000 		SETZ	T3,		;To break on all characters
  6077	410223'	200 04 0 00 411330'		MOVE	T4,[XWD 3,T1]
  6078	410224'	047 04 0 00 000116 		TRMOP.	T4,
  6079	410225'	254 00 0 00 410235'		  JRST	TTXINI		;Error - TRMOP. does not work
  6080
  6081	410226'	201 01 0 00 002021 		MOVEI	T1,.TOPAG+.TOSET;Change TTY PAGE bit
  6082	410227'	201 03 0 00 000000 		MOVEI	T3,0		; to pass ^S and ^Q
  6083	410230'	200 04 0 00 411330'		MOVE	T4,[XWD 3,T1]
  6084	410231'	607 07 0 00 000400 		TLNN	TM,NPG		;Leave XON and XOFF alone?
  6085	410232'	047 04 0 00 000116 		TRMOP.	T4,		;No, tell monitor to pass them to us
  6086	410233'	255 00 0 00 000000 		  JFCL	
  6087	410234'	263 17 0 00 000000 		POPJ	P,		;End of TOPS-10 TTYINI
  6088
  6089					IFDEC^IFE FT$TYM,^<	;Give up if .TOPBS fails
  6090					TTXINI:	OUTSTR	[ASCIZ	/?TRMOP. failed, cannot proceed/]
  6091						HALT	TTXINI
  6092					>  ;End IFDEC
  6093
  6094					IFTYM^IFN FT$TYM,^<	;Use TYMCOM-X AUXCAL to set image mode, break on all
  6095	410235'	561 01 0 00 000064 	TTXINI:	HRROI	T1,.AXCFS	;Change port file sataus
  6096	410236'	042 01 0 00 000214 		AUXCAL	T1,IO.NEC+.IOBIN;Set image-mode input (without timout)
  6097	410237'	263 17 0 00 000000 		POPJ	P,		;End of TYMCOM-X TTYINI
  6098					>  ;End IFTYM
  6099
  6100					>  ;End of TOPS10
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 30
SED	MAC	21-May-74 00:04		TOPS-20 TTY I/O routines

  6101					SUBTTL	TOPS-20 TTY I/O routines
  6102					TOPS20^IFE TOPS-20,^<	
  6103					;TTYINI - Initialize terminal to accept all control-characters on input
  6104					
  6105					TTYINI:	MOVEI	T1,-1		;MAKE ALL CONTROL CHARACTERS GIVE THEIR CODE
  6106						MOVE	T2,[525252,,525252]
  6107						MOVE	T3,T2
  6108						SFCOC
  6109					
  6110						MOVEI	T1,.PRIIN
  6111						RFMOD			;READ MODE WORD
  6112						MOVEM	T2,FMDSAV	;SAVE IT FOR EXIT
  6113						TLZ	T2,37777	;SET PAGE LENGTH, WIDTH ZERO (NO FREE CRLFS)
  6114						TRO	T2,300		;TURN ON NO-TRANSLATE-OUTPUT BITS
  6115						TRZ	T2,4000		;MAKE NOTHING ECHO
  6116						SFMOD
  6117						STPAR
  6118					
  6119					;SET UP SOFTWARE INTERRUPT SYSTEM
  6120					;SO MONITOR WON'T MESS AROUND WITH CERTAIN CHARACTERS
  6121					
  6122						MOVEI	T1,.FHSLF
  6123						MOVE	T2,[LEVTAB,,CHNTAB]
  6124						SIR
  6125						EIR
  6126						MOVE	T2,[370000,,5]
  6127						AIC
  6128						MOVE	T1,[.TICCM,,1]
  6129						ATI
  6130						MOVE	T1,[.TICCO,,2]
  6131						ATI
  6132						MOVE	T1,[.TICCQ,,3]
  6133						ATI
  6134						MOVE	T1,[.TICCS,,4]
  6135						ATI
  6136						MOVE	T1,[.TICCT,,5]
  6137						ATI
  6138					;	MOVE	T1,[.TICCC,,40]
  6139					;	ATI
  6140						MOVE	T1,[.TICRB,,41]
  6141						ATI
  6142						MOVE	T1,[.TICCI,,43]
  6143						ATI
  6144						POPJ	P,		;End of TTYINI
  6145					>  ;End of IFE TOPS10
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 31
SED	MAC	21-May-74 00:04		TOPS-20 TTY I/O routines

  6146
  6147					;SUBROUTINE TO MOVE PRE-SET FILE STATUS INFORMATION INTO THE ACTIVE PLACES
  6148					;PNTSTT CAN BE CALLED TO SET UP POINTERS TO START OF FILE (PERCEN, NEWFIL)
  6149
  6150	410240'	550 02 0 00 000064'	PRESET:	HRRZ	T2,PREDP	;GET ADDRESS OF DISPLAY POINTER
  6151	410241'	301 02 0 14 000000 		CAIL	T2,(EN)		;DOES IT POINT BEYOND END OF FILE?
  6152	410242'	254 00 0 00 410253'		JRST	PNTSTT		;YES - POINT TO START OF FILE
  6153	410243'	661 05 0 00 000034 		TLO	F,XPL!XPC!XPB	;NO - NO POINTERS ARE GOOD
  6154	410244'	550 15 0 00 000062'		HRRZ	RW,PRERW	;GET PRE-SET ROW
  6155	410245'	554 16 0 00 000062'		HLRZ	CM,PRERW	;AND COLUMN
  6156	410246'	200 11 0 00 000063'		MOVE	SL,PRESL	;AND SLIDE
  6157	410247'	400 02 0 00 000000 		SETZ	T2,		;GET AND ZERO DISPLAY POINTER
  6158	410250'	250 02 0 00 000064'		EXCH	T2,PREDP
  6159	410251'	202 02 0 00 002254'		MOVEM	T2,DISPTR
  6160	410252'	263 17 0 00 000000 		POPJ	P,
  6161
  6162	410253'	200 02 0 00 411073'	PNTSTT:	MOVE	T2,[010700,,BUFFER-1]
  6163	410254'	202 02 0 00 002254'		MOVEM	T2,DISPTR	;POINT TO START OF FILE
  6164	410255'	202 02 0 00 002252'		MOVEM	T2,LINPTR
  6165	410256'	202 02 0 00 002253'		MOVEM	T2,CHRPTR
  6166	410257'	403 15 0 00 000016 		SETZB	RW,CM
  6167	410260'	400 11 0 00 000000 		SETZ	SL,
  6168	410261'	621 05 0 00 000014 		TLZ	F,XPC!XPL	;LINE AND CHARACTER POINTERS ARE O.K.
  6169	410262'	661 05 0 00 000020 		TLO	F,XPB		;BUT BOTTOM POINTER IS BAD
  6170	410263'	263 17 0 00 000000 		POPJ	P,
  6171
  6172					;****************************************************************
  6173					;SUBROUTINE TO READ SWITCH.INI AND SET UP THE SWITCHES THEREIN
  6174
  6175	410264'	561 02 0 00 000264'	REDSWH:	HRROI	T2,SWHFIL
  6176	410265'	260 17 0 00 405670'		PUSHJ	P,SETIN		;SET FILE UP
  6177	410266'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;JUST RETURN, IF NO SWITCH.INI
  6178	410267'	541 01 0 00 000372'	TOPS10^IFE TOPS-10,^<	HRRI	T1,PIKBUF-1
  6179	410270'	202 01 0 00 000231'		MOVEM	T1,PIKCCL
  6180	410271'	066 05 0 00 000231'		INPUT	5,PIKCCL	;O.K. - READ IT INTO PICK BUFFER
  6181	410272'	071 05 0 00 000000 		RELEAS	5,
  6182	410273'	201 01 0 00 777200 		MOVEI	T1,-PCBSIZ	;SET PROPER PICK SIZE BACK UP
  6183	410274'	506 01 0 00 000231'		HRLM	T1,PIKCCL
  6184					>
  6185					TOPS20^IFE TOPS-20,^<	MOVE	T2,[POINT 7,PIKBUF]
  6186						SETZ	T3,
  6187						SIN			;READ THE FILE INTO THE PICK BUFFER
  6188						CLOSF			;CLOSE THE FILE
  6189						  HALTF
  6190					>
  6191	410275'	200 02 0 00 411402'		MOVE	T2,[POINT 7,PIKBUF]
  6192	410276'	260 17 0 00 410325'	REDSW1:	PUSHJ	P,REDCHR	;GET 1ST CHARACTER OF A LINE
  6193	410277'	322 01 0 00 400543'		JUMPE	T1,CPOPJ	;DONE IF NULL
  6194	410300'	306 01 0 00 000040 		CAIN	T1," "		;IGNORE SPACES
  6195	410301'	254 00 0 00 410276'		JRST	REDSW1
  6196	410302'	302 01 0 00 000123 		CAIE	T1,"S"		;START OF "SED"?
  6197	410303'	254 00 0 00 410321'		JRST	REDSWS		;NO - SKIP THE LINE
  6198	410304'	260 17 0 00 410325'		PUSHJ	P,REDCHR	;YES - GET THE "E"
  6199	410305'	302 01 0 00 000105 		CAIE	T1,"E"		;IS IT?
  6200	410306'	254 00 0 00 410321'		JRST	REDSWS		;NO - SKIP THE LINE
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 31-1
SED	MAC	21-May-74 00:04		TOPS-20 TTY I/O routines

  6201	410307'	260 17 0 00 410325'		PUSHJ	P,REDCHR	;YES - GET THE "D"
  6202	410310'	302 01 0 00 000104 		CAIE	T1,"D"		;IS IT?
  6203	410311'	254 00 0 00 410321'		JRST	REDSWS		;NO - SKIP THE LINE
  6204
  6205	410312'	134 01 0 00 000002 	REDSW2:	ILDB	T1,T2		;YES - LOOK FOR THE "/"
  6206	410313'	306 01 0 00 000012 		CAIN	T1,12		;AT END OF LINE?
  6207	410314'	254 00 0 00 410276'		JRST	REDSW1		;YES - TRY OUT THE NEXT LINE
  6208	410315'	302 01 0 00 000057 		CAIE	T1,"/"		;GOT A SLASH?
  6209	410316'	254 00 0 00 410312'		JRST	REDSW2		;NO - KEEP LOOKING
  6210	410317'	260 17 0 00 406415'		PUSHJ	P,SWHMNY	;YES - HANDLE ALL THE SWITCHES
  6211	410320'	254 00 0 00 410276'		JRST	REDSW1		;SEE IS THERE'S ANOTHER LINE
  6212
  6213	410321'	134 01 0 00 000002 	REDSWS:	ILDB	T1,T2		;SKIP REST OF LINE
  6214	410322'	302 01 0 00 000012 		CAIE	T1,12		;UNTIL LINEFEED
  6215	410323'	254 00 0 00 410321'		JRST	REDSWS
  6216	410324'	254 00 0 00 410276'		JRST	REDSW1		;THEN CHECK NEXT LINE
  6217
  6218	410325'	134 01 0 00 000002 	REDCHR:	ILDB	T1,T2		;GET NEXT CHARACTER
  6219	410326'	301 01 0 00 000141 		CAIL	T1,"a"		;LOWER CASE?
  6220	410327'	275 01 0 00 000040 		SUBI	T1,40		;YES - CONVERT TO UPPER
  6221	410330'	263 17 0 00 000000 		POPJ	P,		;RETURN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 32
SED	MAC	21-May-74 00:04		Terminal output routines

  6222					SUBTTL	Terminal output routines
  6223
  6224					;TERMINAL DEPENDENT OUTPUT SECTION
  6225					;STORE VARIOUS CHARACTER SEQUENCES IN THE TYPE BUFFER
  6226
  6227					;NOTE: THE TWO CLEAR LINE ROUTINES ARE DISTINCT ONLY FOR THOSE
  6228					;TERMINALS WHICH MUST SIMULATE THE CLEAR BY OUTPUTTING SPACES.
  6229					;THEY SHOULD OUTPUT (T0) SPACES. T0 IS FRAGGED BY ALL OTHER ROUTINES
  6230
  6231	410331'	260 17 0 00 410356'	CBOTOM:	PUSHJ	P,CMVBTM	;MOVE TO BOTTOM LINE
  6232									;AND FALL INTO CLEAR-IT CODE
  6233	410332'	674 00 0 00 411267'	CLRLNA:	TDOA	T0,[-1]		;SET TO CLEAR ENTIRE LINE
  6234	410333'	200 00 0 00 000016 	CLRLNR:	MOVE	T0,CM		;SET TO CLEAR TO END OF LINE
  6235	410334'	334 01 0 07 000006 		SKIPA	T1,CLN(TM)	;CLEAR TO END OF LINE
  6236	410335'	200 01 0 07 000005 	CLEARP:	MOVE	T1,CPG(TM)	;CLEAR TO END OF PAGE
  6237	410336'	254 00 0 00 410357'		JRST	PUTSEQ
  6238	410337'	334 01 0 07 000011 	PROTON:	SKIPA	T1,PON(TM)	;PROTECT ON
  6239	410340'	200 01 0 07 000012 	PROTOF:	MOVE	T1,POF(TM)	;PROTECT OFF
  6240	410341'	254 00 0 00 410357'		JRST	PUTSEQ
  6241	410342'	334 01 0 07 000002 	CRIGHT:	SKIPA	T1,CRG(TM)	;CURSOR RIGHT
  6242	410343'	200 01 0 07 000003 	CLEFT:	MOVE	T1,CLF(TM)	;CURSOR LEFT
  6243	410344'	254 00 0 00 410357'		JRST	PUTSEQ
  6244	410345'	334 01 0 07 000000 	CURUP:	SKIPA	T1,CUP(TM)	;CURSOR UP
  6245	410346'	200 01 0 07 000001 	CDOWN:	MOVE	T1,CDN(TM)	;CURSOR DOWN
  6246	410347'	254 00 0 00 410357'		JRST	PUTSEQ
  6247	410350'	334 01 0 07 000007 	ROLLUP:	SKIPA	T1,RUP(TM)	;ROLL UP AND CLEAR LINE
  6248	410351'	200 01 0 07 000010 	ROLLDN:	MOVE	T1,RLD(TM)	;ROLL DOWN AND CLEAR LINE
  6249	410352'	254 00 0 00 410357'		JRST	PUTSEQ
  6250	410353'	200 01 0 07 000020 	CLRALL:	MOVE	T1,HCP(TM)	;HOME AND CLEAR PAGE
  6251	410354'	254 00 0 00 410357'		JRST	PUTSEQ
  6252	410355'	334 01 0 07 000004 	CHOME:	SKIPA	T1,CHM(TM)	;CURSOR HOME
  6253	410356'	200 01 0 07 000017 	CMVBTM:	MOVE	T1,MVB(TM)	;CURSOR TO BOTTOM
  6254
  6255					;SUBROUTINE TO DEAL WITH SEQUENCE/ROUTINE IN TERMINAL OUTPUT TABLE
  6256
  6257	410357'	607 01 0 00 774037 	PUTSEQ:	TLNN	T1,774000+37	;[CSM] Nothing but flag bits? (003740)
  6258	410360'	254 00 1 00 000001 		JRST	@T1		;YES - DISPATCH TO THAT ROUTINE
  6259	410361'	246 00 0 00 000007 	PUTSQ1:	LSHC	T0,7		;SHIFT IN A CHARACTER
  6260	410362'	136 00 0 00 000010 		IDPB	T0,TY		;SAVE IT IN TYPE BUFFER
  6261	410363'	326 01 0 00 410361'		JUMPN	T1,PUTSQ1	;LOOP THROUGH ALL CHARACTERS
  6262	410364'	263 17 0 00 000000 		POPJ	P,		;THEN DOWN
  6263
  6264					;SUBROUTINE TO OUTPUT A STRING. ADDRESS IN T1 (FRAGGED)
  6265
  6266	410365'	505 01 0 00 440700 	PUTSTG:	HRLI	T1,440700	;MAKE ADDRESS A BYTE POINTER
  6267	410366'	134 00 0 00 000001 	PUTSG1:	ILDB	T0,T1		;GET A CHARACTER
  6268	410367'	322 00 0 00 400543'		JUMPE	T0,CPOPJ	;DONE IF NULL
  6269	410370'	136 00 0 00 000010 		IDPB	T0,TY		;ELSE SAVE IN TYPE BUFFER
  6270	410371'	254 00 0 00 410366'		JRST	PUTSG1		;AND LOOP
  6271
  6272					;SUBROUTINE TO OUTPUT A STRING. ADDRESS IN T1 (FRAGGED). USES T0, T2
  6273					;SAME AS PUTSTG, BUT CONTROL CHARACTERS ARE SIMULATED BY BEING PROTECTED
  6274					;IF STRING BEING OUTPUT IS ALREADY PROTECTED ENTER PUTSTC; ELSE PUTSTS
  6275
  6276	410372'	634 02 0 00 000002 	PUTSTS:	TDZA	T2,T2		;CLEAR FLAG TO GET SIMULATION
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 32-1
SED	MAC	21-May-74 00:04		Terminal output routines

  6277	410373'	474 02 0 00 000000 	PUTSTC:	SETO	T2,		;SET FLAG SO NO SIMULATION
  6278	410374'	505 01 0 00 440700 		HRLI	T1,440700	;MAKE ADDRESS A BYTE POINTER
  6279	410375'	134 00 0 00 000001 	PUTSC1:	ILDB	T0,T1		;GET A CHARACTER
  6280	410376'	305 00 0 00 000040 		CAIGE	T0,40		;GOT A PRINTING CHARACTER?
  6281	410377'	254 00 0 00 410417'		JRST	PUTSC2		;NO - SIMULATE IT
  6282	410400'	306 00 0 00 000177 		CAIN	T0,177		;GOT THE COUNTER?
  6283	410401'	254 00 0 00 410404'		JRST	PUTSCC		;YES - OUTPUT IT
  6284	410402'	136 00 0 00 000010 		IDPB	T0,TY		;SAVE CHARACTER IN TYPE BUFFER
  6285	410403'	254 00 0 00 410375'		JRST	PUTSC1		;AND LOOP
  6286
  6287	410404'	202 01 0 00 000310'	PUTSCC:	MOVEM	T1,SAVEAC	;SAVE BYTE POINTER
  6288	410405'	200 00 0 00 000066'		MOVE	T0,COUNTS	;GET CURRENT COUNTER
  6289	410406'	231 00 0 00 000012 		IDIVI	T0,^D10		;CONVERT TO DIGITS
  6290	410407'	322 00 0 00 410412'		JUMPE	T0,.+3		;OUTPUT 10'S ONLY IF NON-ZERO
  6291	410410'	271 00 0 00 000060 		ADDI	T0,"0"
  6292	410411'	136 00 0 00 000010 		IDPB	T0,TY
  6293	410412'	271 01 0 00 000060 		ADDI	T1,"0"		;1'S PLACE ALWAYS PRINTS
  6294	410413'	136 01 0 00 000010 		IDPB	T1,TY
  6295	410414'	200 01 0 00 000310'		MOVE	T1,SAVEAC	;GET BYTE POINTER BACK
  6296	410415'	134 00 0 00 000001 		ILDB	T0,T1		;GET SECOND FLAG
  6297	410416'	254 00 0 00 410375'		JRST	PUTSC1		;CONTINUE
  6298
  6299	410417'	322 00 0 00 400543'	PUTSC2:	JUMPE	T0,CPOPJ	;DONE, IF NULL
  6300	410420'	261 17 0 00 000001 		PUSH	P,T1		;ELSE SAVE CHARACTER
  6301	410421'	261 17 0 00 000000 		PUSH	P,T0
  6302	410422'	326 02 0 00 410424'		JUMPN	T2,.+2		;WANT TO PROTECT?
  6303	410423'	260 17 0 00 410337'		PUSHJ	P,PROTON	;YES - DO SO
  6304	410424'	262 17 0 00 000000 		POP	P,T0
  6305	410425'	271 00 0 00 000100 		ADDI	T0,100		;OUTPUT PRINTING CHARACTER
  6306	410426'	136 00 0 00 000010 		IDPB	T0,TY
  6307	410427'	326 02 0 00 410431'		JUMPN	T2,.+2		;WANT TO PROTECT
  6308	410430'	260 17 0 00 410340'		PUSHJ	P,PROTOF	;YES - DO SO
  6309	410431'	262 17 0 00 000001 		POP	P,T1
  6310	410432'	254 00 0 00 410375'		JRST	PUTSC1		;CONTINUE
  6311
  6312					;SUBROUTINE TO OUTPUT AN ERROR MESSAGE (ADDRESS IN T1, FRAGGED)
  6313					;SAME AS PUTSTG, BUT #'S ARE CONVERTED TO SPACES
  6314
  6315	410433'	505 01 0 00 440700 	PUTSTX:	HRLI	T1,440700	;MAKE ADDRESS A BYTE POINTER
  6316	410434'	134 00 0 00 000001 		ILDB	T0,T1		;GET A CHARACTER
  6317	410435'	322 00 0 00 400543'		JUMPE	T0,CPOPJ	;DONE IF NULL
  6318	410436'	306 00 0 00 000043 		CAIN	T0,"#"		;ELSE GOT AN ARTIFICIAL SPACE?
  6319	410437'	201 00 0 00 000040 		MOVEI	T0," "		;YES - MAKE IT A REAL ONE
  6320	410440'	136 00 0 00 000010 		IDPB	T0,TY		;SAVE IN TYPE BUFFER
  6321	410441'	254 00 0 00 410434'		JRST	PUTSTX+1	;AND LOOP
  6322
  6323					;SUBROUTINE TO OUTPUT FILESPECS (FOR THE SWITCH COMMAND)
  6324					;SAME AS PUTSTG, BUT OUTPUTS ONLY UNTIL FIRST "/"
  6325
  6326	410442'	505 01 0 00 440700 	PUTSTF:	HRLI	T1,440700	;MAKE ADDRESS A BYTE POINTER
  6327	410443'	134 00 0 00 000001 		ILDB	T0,T1		;GET A CHARACTER
  6328	410444'	322 00 0 00 400543'		JUMPE	T0,CPOPJ	;DONE IF NULL
  6329	410445'	306 00 0 00 000057 		CAIN	T0,"/"		;ELSE GOT START OF SWITCHES?
  6330	410446'	263 17 0 00 000000 		POPJ	P,		;YES - DONE
  6331	410447'	136 00 0 00 000010 		IDPB	T0,TY		;SAVE IN TYPE BUFFER
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 32-2
SED	MAC	21-May-74 00:04		Terminal output routines

  6332	410450'	254 00 0 00 410443'		JRST	PUTSTF+1	;AND LOOP
  6333
  6334					;SUBROUTINE TO OUTPUT THE TYPE BUFFER
  6335
  6336	410451'	602 05 0 00 000020 	PUTTYP:	TRNE	F,XCT		;EXECUTING?
  6337	410452'	254 00 0 00 410464'		JRST	PUTTY1		;YES - THROW BUFFER AWAY
  6338	410453'	316 10 0 00 411066'		CAMN	TY,[010700,,TYPBUF-1]
  6339	410454'	263 17 0 00 000000 		POPJ	P,		;DO NOTHING IF NOTHING TO OUTPUT
  6340	410455'	400 01 0 00 000000 		SETZ	T1,		;ELSE OUTPUT TYPE BUFFER:
  6341	410456'	136 01 0 00 000010 		IDPB	T1,TY		;  END IT WITH A NULL
  6342					TOPS10^IFE TOPS-10,^<
  6343					IFDEC^IFE FT$TYM,^<	OUTSTR	TYPBUF	>	;OUTPUT THE BUFFER
  6344	410457'	200 10 0 00 411327'	IFTYM^IFN FT$TYM,^<  MOVE	TY,[POINT 7,TYPBUF]
  6345	410460'	134 01 0 00 000010 	PUTTY0:	ILDB	T1,TY
  6346	410461'	322 01 0 00 410464'		JUMPE	T1,PUTTY1
  6347	410462'	051 15 0 00 000001 		IONEOU	T1
  6348	410463'	254 00 0 00 410460'		JRST	PUTTY0	>
  6349					>
  6350					TOPS20^IFE TOPS-20,^<	MOVEI	T1,TYPBUF
  6351						PSOUT			;OUTPUT THE BUFFER
  6352					>
  6353	410464'	200 10 0 00 411066'	PUTTY1:	MOVE	TY,[010700,,TYPBUF-1]
  6354	410465'	263 17 0 00 000000 		POPJ	P,		;RESTORE TYPE POINTER AND RETURN
  6355
  6356					;SUBROUTINE TO OUTPUT A DECIMAL NUMBER
  6357					;ENTER WITH NUMBER IN T1; USES T1, T2
  6358
  6359	410466'	231 01 0 00 000012 	PUTNUM:	IDIVI	T1,^D10		;GET A DIGIT IN T2
  6360	410467'	506 02 0 17 000000 		HRLM	T2,(P)		;SAVE IT ON THE STACK
  6361	410470'	322 01 0 00 410472'		JUMPE	T1,.+2		;IF ZERO, START POPPING
  6362	410471'	260 17 0 00 410466'		PUSHJ	P,PUTNUM	;ELSE CALL RECURSIVELY
  6363	410472'	554 01 0 17 000000 		HLRZ	T1,(P)		;GET A DIGIT OFF THE STACK
  6364	410473'	271 01 0 00 000060 		ADDI	T1,"0"		;CONVERT TO ASCII
  6365	410474'	136 01 0 00 000010 		IDPB	T1,TY		;PUT IT IN THE TYPE BUFFER
  6366	410475'	263 17 0 00 000000 		POPJ	P,		;RETURN RECURSIVELY AND FINALLY
  6367
  6368					;************************************************************************
  6369					;SUBROUTINE TO OUTPUT THE FENCE (FNCCLR CLEARS TO END OF SCREEN)
  6370
  6371	410476'	260 17 0 00 410335'	FNCCLR:	PUSHJ	P,CLEARP	;CLEAR TO END OF SCREEN
  6372	410477'	201 01 0 15 000003 	FNCPUT:	MOVEI	T1,3(RW)	;GET ROW+3
  6373	410500'	311 01 0 00 000323'		CAML	T1,LPP.1	;CLOSE TO THE BOTTOM OF THE SCREEN?
  6374	410501'	254 00 0 00 410451'		JRST	PUTTYP		;YES - NO FENCE
  6375	410502'	260 17 0 00 410331'		PUSHJ	P,CBOTOM	;MOVE TO BOTTOM OF SCREEN
  6376	410503'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN ON PROTECTION
  6377	410504'	201 01 0 00 411027'		MOVEI	T1,FENCE	;OUTPUT THE FENCE
  6378	410505'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  6379	410506'	260 17 0 00 410340'		PUSHJ	P,PROTOF
  6380	410507'	661 05 0 00 000040 		TLO	F,FNC		;SET FLAG TO SAY FENCE IS UP
  6381	410510'	254 00 0 00 410451'		JRST	PUTTYP
  6382
  6383					;************************************************************************
  6384					;HERE TO REENTER EDITOR AFTER EXIT. RESTORES SAVED ACS AND FLIES
  6385
  6386					TOPS10^IFE TOPS-10,^<
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 32-3
SED	MAC	21-May-74 00:04		Terminal output routines

  6387	410511'	204 01 0 00 411331'	REEERR:	MOVS	T1,[5,,SAVEAC]	;RESTORE ACS
  6388	410512'	251 01 0 00 000017 		BLT	T1,P
  6389	410513'	260 17 0 00 410213'		PUSHJ	P,TTYINI	;[JMS] Re-INIT terminal
  6390	410514'	260 17 1 07 000026 		PUSHJ	P,@RTE(TM)	;[CSM] Set up terminal (enable keypad)
  6391	410515'	201 01 0 00 412222'		MOVEI	T1,[ASCIZ /#########Re-entering editor/]
  6392	410516'	254 00 0 00 410520'		JRST	ERROR		;(THIS IS IF USER TYPES ^C, REE)
  6393					>
  6394					;HERE TO CLEAR SCREEN, OUTPUT AN ERROR MESSAGE, REWRITE SCREEN, AND
  6395					;GO GET ANOTHER COMMAND. THE COMMAND THAT CAUSED THE ERROR IS IGNORED
  6396
  6397					;THIS ROUTINE CAN BE CALLED FROM ANY LEVEL SINCE IT RESETS THE P-D STACK
  6398
  6399	410517'	201 01 0 00 411565'	RDOERR:	MOVEI	T1,[ASCIZ /######File cannot be modified/]
  6400
  6401	410520'	663 05 0 00 020000 	ERROR:	TLOE	F,ERF		;JUST HAD AN ERROR?
  6402	410521'	254 00 0 00 410531'		JRST	ERRORX		;YES - DON'T OUTPUT THIS ONE, THEN
  6403	410522'	626 05 0 00 000020 		TRZN	F,XCT		;EXECUTING?
  6404	410523'	625 05 0 00 000001 		TLZA	F,FLG		;NO - CLEAR XCT AND FLG
  6405	410524'	661 05 0 00 000001 		TLO	F,FLG		;YES - CLEAR XCT AND SET FLG
  6406	410525'	260 17 0 00 410566'		PUSHJ	P,ERRDSP	;ELSE DISPLAY THE ERROR MESSAGE
  6407	410526'	607 07 0 00 001000 		TLNN	TM,SLW		;SLOW TERMINAL?
  6408	410527'	260 17 0 00 405131'		PUSHJ	P,DISPLL	;NO - REWRITE THE SCREEN
  6409	410530'	260 17 0 00 405716'		PUSHJ	P,RESTPM
  6410	410531'	260 17 0 00 405766'	ERRORX:	PUSHJ	P,POSCUR
  6411	410532'	200 17 0 00 411065'		MOVE	P,[IOWD 20,STACK] ;CLEAN UP THE STACK
  6412	410533'	630 05 0 00 412230'		TDZ	F,[FLG,,ENT]	;STOP DOING COMMANDS; CLEAR ENTER MODE
  6413	410534'	254 00 0 00 400145'		JRST	INTEND		;AND GET ANOTHER COMMAND
  6414
  6415					;HERE TO HANDLE ERRORS FROM SETTING FILES. THEY ARE SPECIAL SINCE SED CAN'T
  6416					;JUST REDISPLAY THE SCREEN - THERE MIGHT NOT BE A FILE TO REDISPLAY
  6417					;ACTION: MOVE OLD SPECS BACK TO CURRENT; CLEAR OLD SPECS
  6418					;IF GTF DO A NORMAL ERROR, ELSE GET CURRENT FILE OR CHEERY MESSAGE
  6419
  6420	410535'				STFERR:
  6421	410535'	201 03 0 00 000037 	TOPS10^IFE TOPS-10,^<	MOVEI	T3,13+11+4+SFDS+2 >	;[CSM] Include .RBVER and .RBSPL
  6422					TOPS20^IFE TOPS-20,^<	MOVEI	T3,13 >		;GET OLD SPECS BACK AND CLEAR OLD SPECS
  6423	410536'	200 02 0 03 000134'		MOVE	T2,OLDSPC(T3)
  6424	410537'	402 00 0 03 000134'		SETZM	OLDSPC(T3)
  6425	410540'	202 02 0 03 000072'		MOVEM	T2,FILSPC(T3)
  6426	410541'	365 03 0 00 410536'		SOJGE	T3,.-3
  6427					TOPS10^IFE TOPS-10,^<	MOVEI	T2,7		;[CSM] Restore the length of the LOOKUP bloc
  6428	410542'	201 02 0 00 000007 	k
  6429	410543'	202 02 0 00 000153'		MOVEM	T2,OLDFIL
  6430	410544'	201 02 0 00 000002 		MOVEI	T2,2		;RESTORE THE PATH ACTION CODE
  6431	410545'	212 02 0 00 000163'		MOVNM	T2,OLDPTH
  6432	410546'	554 16 0 00 000175'		HLRZ	CM,SAVERW	;GET ROW AND COLUMN BACK
  6433	410547'	550 15 0 00 000175'		HRRZ	RW,SAVERW
  6434	410550'	200 02 0 00 000176'		MOVE	T2,SAVEDP	;GET DISPLAY POINTER
  6435	410551'	202 02 0 00 002254'		MOVEM	T2,DISPTR
  6436	410552'	200 11 0 00 000177'		MOVE	SL,SAVESL	;SET UP SLIDE
  6437	410553'	661 05 0 00 000034 		TLO	F,XPC!XPL!XPB	;NO POINTERS ARE VALID
  6438	410554'	332 13 0 00 000356'		SKIPE	PT,MFLPTR	;GOT ANOTHER SPEC IN STAT.TMP FILE?
  6439						JRST	[PUSH  P,T1	;YES - SAVE ERROR MESSAGE
  6440							 PUSHJ P,SETMFE	;READ NEW SPECS INTO OLDSPC
  6441							 POP   P,T1	;GET ERROR MESSAGE BACK
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 32-4
SED	MAC	21-May-74 00:04		Terminal output routines

  6442	410555'	254 00 0 00 412231'			 JRST  .+1]	;AND CONTINUE
  6443	410556'	602 05 0 00 004000 		TRNE	F,GFL		;GOT A FILE TO REDISPLAY?
  6444	410557'	254 00 0 00 410520'		JRST	ERROR		;YES - OUTPUT THE ERROR NORMALLY
  6445	410560'	260 17 0 00 410566'		PUSHJ	P,ERRDSP	;NO - OUTPUT THE MESSAGE
  6446	410561'	336 00 0 00 000072'		SKIPN	FILSPC		;ARE THERE ANY OTHER FILESPECS?
  6447	410562'	254 00 0 00 400131'		JRST	REDNO		;NO - GO SET UP CHEERY MESSAGE
  6448	410563'	336 00 0 00 002254'		SKIPN	DISPTR		;YES - NEED TO PARSE SPECS?
  6449	410564'	260 17 0 00 407470'		PUSHJ	P,PARSEF	;YES - DO SO
  6450	410565'	254 00 0 00 403763'		JRST	SETFL1		;GO TRY THE OTHER FILE
  6451
  6452					;SUBROUTINE TO OUTPUT THE ERROR MESSAGE IN (T1)
  6453
  6454	410566'	261 17 0 00 000001 	ERRDSP:	PUSH	P,T1		;SAVE MESSAGE ADDRESS
  6455	410567'	603 07 0 00 001000 		TLNE	TM,SLW		;GOT A SLOW TERMINAL?
  6456	410570'	254 00 0 00 410607'		JRST	ERRDSW		;YES - OUTPUT ONLY ON FIRST LINE
  6457	410571'	260 17 0 00 410353'		PUSHJ	P,CLRALL	;HOME AND CLEAR THE SCREEN
  6458	410572'	201 01 0 00 411047'		MOVEI	T1,STARS	;PUT UP UPPER STARS
  6459	410573'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  6460	410574'	262 17 0 00 000001 		POP	P,T1
  6461	410575'	260 17 0 00 410433'		PUSHJ	P,PUTSTX
  6462	410576'	201 01 0 00 411047'		MOVEI	T1,STARS	;PUT UP LOWER STARS
  6463	410577'	260 17 0 00 410365'		PUSHJ	P,PUTSTG
  6464	410600'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;OUTPUT THE MESSAGE
  6465	410601'	201 01 0 00 002734 		MOVEI	T1,^D1500	;WAIT A WHILE
  6466	410602'	505 01 0 00 000020 	TOPS10^IFE TOPS-10,^<	HRLI	T1,(HB.RTL)	;Wake on line of input (Control-C)
  6467	410603'	047 01 0 00 000072 		HIBER	T1,
  6468	410604'	255 00 0 00 000000 		  JFCL
  6469					>
  6470					TOPS20^IFE TOPS-20,^<	DISMS
  6471					>
  6472	410605'	260 17 0 00 405335'		PUSHJ	P,DISTST	;[CSM] Process ^C at this time
  6473	410606'	263 17 0 00 000000 		POPJ	P,		;DONE
  6474
  6475					;IF TERMINAL IS SLOW (SLW FLAG) PUT ERROR MESSAGE ON BOTTOM LINE
  6476
  6477	410607'	260 17 0 00 410331'	ERRDSW:	PUSHJ	P,CBOTOM	;GO TO BOTTOM LINE
  6478	410610'	201 01 0 00 000007 		MOVEI	T1,7		;BEEP ONCE
  6479	410611'	136 01 0 00 000010 		IDPB	T1,TY
  6480	410612'	260 17 0 00 410337'		PUSHJ	P,PROTON	;TURN PROTECTION ON
  6481	410613'	262 17 0 00 000001 		POP	P,T1		;RESTORE MESSAGE ADDRESS
  6482	410614'	260 17 0 00 410433'		PUSHJ	P,PUTSTX	;OUTPUT MESSAGE
  6483	410615'	260 17 0 00 410340'		PUSHJ	P,PROTOF	;TURN PROTECTION OFF AGAIN
  6484	410616'	260 17 0 00 410451'		PUSHJ	P,PUTTYP	;OUTPUT THE MESSAGE
  6485	410617'	621 05 0 00 200000 		TLZ	F,FBL		;BOTTOM LINE HAS BEEN FRAGGED
  6486	410620'	661 05 0 00 000002 		TLO	F,ENT		;MAKE SURE MESSAGE IS ERASED
  6487	410621'	201 01 0 00 001750 		MOVEI	T1,^D1000	;WAIT A WHILE
  6488	410622'	047 01 0 00 000072 	TOPS10^IFE TOPS-10,^<	HIBER	T1,
  6489	410623'	255 00 0 00 000000 		  JFCL
  6490					>
  6491					TOPS20^IFE TOPS-20,^<	DISMS
  6492					>
  6493	410624'	607 05 0 00 000001 		TLNN	F,FLG		;EXECUTING?
  6494	410625'	263 17 0 00 000000 		POPJ	P,		;NO - DONE
  6495	410626'	254 00 0 00 405131'		JRST	DISPLL		;YES - RE-DISPLAY THE SCEEEN
  6496
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 32-5
SED	MAC	21-May-74 00:04		Terminal output routines

  6497					;************************************************************************
  6498					;TOPS10 INTERRUPT ROUTINE TO EXPAND CORE BY 1K
  6499
  6500	410627'	261 17 0 00 000001 	TOPS10^IFE TOPS-10,^<	GETAK:	PUSH	P,T1		;SAVE AN AC
  6501	410630'	550 01 0 00 405551*		HRRZ	T1,.JBREL	;FIND CURRENT LIMIT
  6502	410631'	271 01 0 00 001000 		ADDI	T1,1000		;PLUS ONE K
  6503	410632'	047 01 0 00 000011 		CORE	T1,		;EXPAND
  6504	410633'	254 00 0 00 410636'		  JRST	GAKERR		;OOPS (PROBABLY RAN OUT)
  6505	410634'	262 17 0 00 000001 		POP	P,T1		;RESTORE AC
  6506	410635'	254 02 1 00 000000*		JRST	2,@.JBTPC	;RETURN FROM THE INTERRUPT
  6507
  6508					;HERE ON A FATAL CORE GRAB, PROBABLY A ILL MEM REF
  6509					;IF THIS HAPPENS, IT'S A BUG, BUT JUST TRY TO ISOLATE IT
  6510
  6511	410636'	201 01 0 00 412235'	GAKERR:	MOVEI	T1,[ASCIZ /####Fatal error - save and exit/]
  6512	410637'	260 17 0 00 410566'		PUSHJ	P,ERRDSP	;DISPLAY THE ERROR
  6513	410640'	254 00 0 00 401574'		JRST	EEXIT		;SAVE FILE AND EXIT
  6514					>
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 33
SED	MAC	21-May-74 00:04		HISEG data

  6515					SUBTTL	HISEG data
  6516
  6517	410641'	000000	410346'		CMVTBL:	CDOWN		;CURSOR MOVE TABLE -
  6518	410642'	000000	410342'			CRIGHT		;  USED BY AJDONE TO MOVE CURSOR
  6519	410643'	000000	410345'			CURUP
  6520	410644'	000000	405766'			POSCUR
  6521
  6522	410645'	000000	440700		PTRTBL:	440700		;TABLE OF ASCII POINTER LH'S
  6523	410646'	000000	350700			350700
  6524	410647'	000000	260700			260700
  6525	410650'	000000	170700			170700
  6526	410651'	000000	100700			100700
  6527	410652'	000000	010700			010700
  6528
  6529					;SWITCH DEFINITIONS AND DISPATCH ADDRESSES
  6530
  6531	410653'				SWCHES:
  6532	410653'	124 101 102 123 000 	ASCII /TABS/		;TABS (ELSE WORD-TABS)		(ON   AT START)
  6533	410654'	103 101 123 105 000 	ASCII /CASE/		;CASE-DEPENDENT SEARCHES	(ON)
  6534	410655'	123 114 111 104 105 	ASCII /SLIDE/		;ENABLE SLIDING			(ON)
  6535	410656'	114 111 116 105 106 	ASCII /LINEF/		;ENABLE LINEFEED COMMAND	(ON)
  6536	410657'	125 120 120 105 122 	ASCII /UPPER/		;CONVERT TO UPPER CASE		(OFF)
  6537	410660'	127 122 111 124 105 	ASCII /WRITE/		;FILE CAN BE WRITTEN		(ON)
  6538	410661'	102 000 000 000 000 	ASCII /B/		;BACKUP, BEEP AND BLOCK		(ON, OFF)
  6539	410662'	122 000 000 000 000 	ASCII /R/		;ROLL AND RESET			(ON, OFF)
  6540	410663'	120 000 000 000 000 	ASCII /P/		;PAGES AND PROG              	(ON, COMPIL)
  6541	410664'	106 123 124 101 124 	ASCII /FSTAT/		;FILE STATUS INFORMATION	(NONE)
  6542	410665'	107 117 124 117 000 	ASCII /GOTO/		;PERCENT GOTO ON ENTRY, SETFIL	(NONE)
  6543	410666'	104 111 123 124 102 	ASCII /DISTB/		;DISPLAY TABS AS PROTECTED I'S	(OFF)
  6544	410667'	110 105 114 120 000 	ASCII /HELP/		;HELP IS DESIRED ON ENTER ENTER	(ON)
  6545	410670'	111 103 122 000 000 	ASCII /ICR/		;CR IN INSERT MODE INSERTS LINE	(ON)
  6546	410671'	132 000 000 000 000 	ASCII /Z/		;NAME OF TERMINAL TO RUN ON	(AS IMPLEMENTED)
  6547	410672'	122 105 101 104 117 	ASCII /READO/		;[CSM] READONLY (=NOWRITE)
  6548			000020		SWHNUM=.-SWCHES
  6549
  6550	410673'	000000	406630'		SWHADR:	SWHTAB		;TAB AND BACKTAB TO START OF WORDS
  6551	410674'	000000	406535'			SWHCAS		;MATCH SEARCHES INDEPENDENTLY OF CASE
  6552	410675'	000000	406531'			SWHSLD		;DISABLE ^L AND ^U
  6553	410676'	000000	406600'			SWHLSD		;LINEFEED SAME AS CURSOR DOWN
  6554	410677'	000000	406533'			SWHUPP		;CONVERT ALPHABETICS TO UPPER CASE
  6555	410700'	000000	406610'			SWHWRT		;MARK FILE AS READ-ONLY
  6556	410701'	000000	406541'			SWHBBB		;BACK AND BEEP
  6557	410702'	000000	406563'			SWHRRR		;ROLL AND RESET
  6558	410703'	000000	406646'			SWHPPP		;PROGRAM TO RUN ON EXIT
  6559	410704'	000000	406665'			SWHSTT		;FILE STATUS INFORMATION SWITCHES
  6560	410705'	000000	406637'			SWHPRC		;PERCENT GOTO ON ENTRY
  6561	410706'	000000	406614'			SWHTBB		;DISPLAY TABS AS PROTECTED I'S AND SPACES
  6562	410707'	000000	406620'			SWHHLP		;HELP IS DESIRED
  6563	410710'	000000	406624'			SWHICR		;CR DURING INSERT MODE
  6564	410711'	000000	406661'			SWHTRM		;NAME OF TERMINAL TO RUN ON
  6565	410712'	000000	406604'			SWHRDO		;[CSM] READONLY
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 34
SED	MAC	21-May-74 00:04		Command dispatch table

  6566					SUBTTL	Command dispatch table
  6567
  6568	410713'	404617'	404634'		CMDTBL:	RESET,,RESNPM	;	RESET (LOOKS LIKE A NULL)
  6569	410714'	402426'	402436'			OPENSP,,OPSNPM	; A	OPEN SPACES
  6570	410715'	403724'	404107'			SETFIL,,SETNPM	; B	SET UP A FILE FOR EDITING
  6571	410716'	401673'	401673'			ABORT,,ABORT	; C NO? ABORT
  6572	410717'	401736'	401736'			OPENLN,,OPENLN	; D	OPEN LINES
  6573	410720'	401213'	401216'			SRCBAK,,SRBNPM	; E	SEARCH BACKWARD
  6574	410721'	402053'	402053'			CLOSLN,,CLOSLN	; F	CLOSE LINES
  6575	410722'	403030'	403030'			PUT,,PUT	; G	PUT
  6576	410723'	400565'	400524'			LFTARG,,LEFT	; H	CURSOR LEFT
  6577	410724'	400666'	400670'			TABARG,,TAB	; I NO	TAB
  6578	410725'	401152'	401156'			LNFPAR,,LNFEED	; J	LINEFEED
  6579					IFN NEWTAB,<
  6580	410726'	403156'	403164'			SLIDEL,,SLLNPM	; K	SLIDE LEFT
  6581	410727'	403177'	403207'			SLIDER,,SLRNPM	; L	SLIDE RIGHT
  6582	410730'	400606'	400611'			RETARG,,RETURN	; M NO	CARRIAGE RETURN
  6583	410731'	404644'	404662'			SWITCH,,SWHNPM	; N	SET SWITCHES
  6584					>
  6585					IFE NEWTAB,<
  6586						PICK,,PIKNPM	; K	PICK
  6587						SLIDEL,,SLLNPM	; L	SLIDE LEFT
  6588						RETARG,,RETURN	; M NO	CARRIAGE RETURN
  6589						BTBARG,,BAKTAB	; N	BACK-TAB
  6590					>
  6591	410732'	401426'	401426'			ENTCCH,,ENTCCH	; O NO	ENTER CONTROL CHARACTER
  6592	410733'	401502'	401515'			PERCEN,,PERNPM	; P	PERCENT GOTO
  6593	410734'	404405'	404413'			ROLBKP,,RBKNPM	; Q NO	ROLL BACK PAGES
  6594	410735'	401271'	401274'			SRCFWD,,SRFNPM	; R	SEARCH FORWARD
  6595	410736'	402552'	402552'			CLOSSP,,CLOSSP	; S NO	CLOSE SPACES
  6596	410737'	404420'	404427'			ROLFWL,,RFLNPM	; T NO	ROLL FORWARD LINES
  6597					IFN NEWTAB,<
  6598	410740'	401001'	401003'			BTBARG,,BAKTAB	; U	BACK-TAB
  6599	410741'	402630'	402642'			PICK,,PIKNPM	; V	PICK
  6600					>
  6601					IFE NEWTAB,<
  6602						SLIDER,,SLRNPM	; U	SLIDE RIGHT
  6603						SWITCH,,SWHNPM	; V	SET SWITCHES
  6604					>
  6605	410742'	404516'	404516'			ROLBKL,,ROLBKL	; W	ROLL BACK LINES
  6606	410743'	403220'	403603'			EXECUT,,EXCNPM	; X	DO COMMAND SEQUENCE
  6607	410744'	404372'	404400'			ROLFWP,,RFPNPM	; Y	ROLL FORWARD PAGES
  6608	410745'	401573'	401574'			EXIPAR,,EEXIT	; Z	NORMAL EXIT
  6609	410746'	404233'	404233'			ENTERA,,ENTERA	; $	ENTER PARAMS
  6610	410747'	400557'	400514'			DWNARG,,DOWN	; \	CURSOR DOWN
  6611	410750'	400562'	400503'			RGTARG,,RIGHT	; ]	CURSOR RIGHT
  6612	410751'	400554'	400530'			UPARG,,UP	; ^	CURSOR UP
  6613	410752'	400545'	400547'			HOMARG,,HOME	; _	HOME
  6614	410753'	000000	405040'			0,,RECALL	;40	RECALL (MUST BE TERMINAL-DEFINED)
  6615	410754'	000000	401430'			0,,INSMOD	;41	INSERT MODE (MUST BE TERMINAL-DEFINED)
  6616	410755'	400565'	402526'			LFTARG,,DELCHR	;42	DELETE CHAR (MUST BE TERMINAL-DEFINED)
  6617	410756'	405062'	405062'			REALTB,,REALTB	;43	TYPE A REAL TAB (SAME AS E-C-C I)
  6618	410757'	000000	405070'			0,,MARK		;44	MARK POSITION FOR PICK AND CLOSE
  6619	410760'	405102'	405100'			COUNTR,,CNTNPM	;45	USE OR SET INCREMENTING COUNTER
  6620			000046		CMDLEN=.-CMDTBL
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 34-1
SED	MAC	21-May-74 00:04		Command dispatch table

  6621
  6622					;COMMAND NAMES (FOR EXECUTE, MAINLY)
  6623
  6624					DEFINE	X(ARG),<IFIDN <ARG>,<$>,<ASCII /ARG/;>	ASCII	/^ARG/>
  6625
  6626	410761'				CMDNAM:	CMDS^	
  6627	410761'	136 122 123 000 000 		X	(RS)^IFIDN <RS>,<$>,<ASCII /RS/;>	ASCII	/^RS/^ 	; @ RESET
  6628	410762'	136 111 123 000 000 		X	(IS)^IFIDN <IS>,<$>,<ASCII /IS/;>	ASCII	/^IS/^ 	; A INSERT SPACES
  6629	410763'	136 106 114 000 000 	R EDITING
  6630	410764'	136 101 102 000 000 		X	(AB)^IFIDN <AB>,<$>,<ASCII /AB/;>	ASCII	/^AB/^ 	; C ABORT
  6631	410765'	136 111 114 000 000 		X	(IL)^IFIDN <IL>,<$>,<ASCII /IL/;>	ASCII	/^IL/^ 	; D INSERT LINES
  6632	410766'	136 123 102 000 000 		X	(SB)^IFIDN <SB>,<$>,<ASCII /SB/;>	ASCII	/^SB/^ 	; E SEARCH BACKWARD
  6633	410767'	136 104 114 000 000 		X	(DL)^IFIDN <DL>,<$>,<ASCII /DL/;>	ASCII	/^DL/^ 	; F DELETE LINES
  6634	410770'	136 120 124 000 000 		X	(PT)^IFIDN <PT>,<$>,<ASCII /PT/;>	ASCII	/^PT/^ 	; G PUT
  6635	410771'	136 103 114 000 000 		X	(CL)^IFIDN <CL>,<$>,<ASCII /CL/;>	ASCII	/^CL/^ 	; H CURSOR LEFT
  6636	410772'	136 124 102 000 000 		X	(TB)^IFIDN <TB>,<$>,<ASCII /TB/;>	ASCII	/^TB/^ 	; I TAB
  6637	410773'	136 114 106 000 000 		X	(LF)^IFIDN <LF>,<$>,<ASCII /LF/;>	ASCII	/^LF/^ 	; J LINEFEED
  6638	410774'	136 123 114 000 000 	IFN NEWTAB,< X	(SL)^IFIDN <SL>,<$>,<ASCII /SL/;>	ASCII	/^SL/^ 	; K SLIDE LEFT
  6639	410775'	136 123 122 000 000 		X	(SR)^IFIDN <SR>,<$>,<ASCII /SR/;>	ASCII	/^SR/^ 	; L SLIDE RIGHT
  6640	410776'	136 122 124 000 000 		X	(RT)^IFIDN <RT>,<$>,<ASCII /RT/;>	ASCII	/^RT/^ 	; M CARRIAGE RETURN
  6641	410777'	136 123 127 000 000 	End of IFN NEWTAB
  6642	411000'	136 105 103 000 000 	ARACTER
  6643	411001'	136 107 117 000 000 		X	(GO)^IFIDN <GO>,<$>,<ASCII /GO/;>	ASCII	/^GO/^ 	; P PERCENT GOTO
  6644	411002'	136 122 102 120 000 	K PAGES
  6645	411003'	136 123 106 000 000 		X	(SF)^IFIDN <SF>,<$>,<ASCII /SF/;>	ASCII	/^SF/^ 	; R SEARCH FORWARD
  6646	411004'	136 104 123 000 000 		X	(DS)^IFIDN <DS>,<$>,<ASCII /DS/;>	ASCII	/^DS/^ 	; S DELETE SPACES
  6647	411005'	136 122 106 114 000 	WARD LINES
  6648	411006'	136 102 124 000 000 	IFN NEWTAB,< X	(BT)^IFIDN <BT>,<$>,<ASCII /BT/;>	ASCII	/^BT/^ 	; U BACK-TAB
  6649	411007'	136 120 113 000 000 	End of IFN NEWTAB
  6650	411010'	136 122 102 114 000 	K LINES
  6651	411011'	136 105 130 000 000 	NCE
  6652	411012'	136 122 106 120 000 	WARD PAGES
  6653	411013'	136 130 124 000 000 		X	(XT)^IFIDN <XT>,<$>,<ASCII /XT/;>	ASCII	/^XT/^ 	; Z NORMAL EXIT
  6654	411014'	044 000 000 000 000 		X	($)^IFIDN <$>,<$>,<ASCII /$/;>	ASCII	/^$/^  	; $ ENTER PARAMS
  6655	411015'	136 103 104 000 000 		X	(CD)^IFIDN <CD>,<$>,<ASCII /CD/;>	ASCII	/^CD/^ 	; \ CURSOR DOWN
  6656	411016'	136 103 122 000 000 		X	(CR)^IFIDN <CR>,<$>,<ASCII /CR/;>	ASCII	/^CR/^ 	; ] CURSOR RIGHT
  6657	411017'	136 103 125 000 000 		X	(CU)^IFIDN <CU>,<$>,<ASCII /CU/;>	ASCII	/^CU/^ 	; ^ CURSOR UP
  6658	411020'	136 103 110 000 000 		X	(CH)^IFIDN <CH>,<$>,<ASCII /CH/;>	ASCII	/^CH/^ 	; _ HOME
  6659	411021'	136 122 103 000 000 		X	(RC)^IFIDN <RC>,<$>,<ASCII /RC/;>	ASCII	/^RC/^ 	;   RECALL
  6660	411022'	136 111 116 000 000 		X	(IN)^IFIDN <IN>,<$>,<ASCII /IN/;>	ASCII	/^IN/^ 	;   INSERT MODE
  6661	411023'	136 104 103 000 000 		X	(DC)^IFIDN <DC>,<$>,<ASCII /DC/;>	ASCII	/^DC/^ 	;   DELETE CHAR
  6662	411024'	136 124 101 000 000 		X	(TA)^IFIDN <TA>,<$>,<ASCII /TA/;>	ASCII	/^TA/^ 	;   REAL TAB
  6663	411025'	136 115 113 000 000 	R PICK OR CLOSE
  6664	411026'	136 103 124 000 000 	 COUNTER
  6665
  6666	411027'	040 040 040 052 052 	FENCE:	ASCII	/   *** This FENCE marks the last page of the file /
  6667	411041'	142 165 164 040 151 		ASCIZ	/but is NOT a part of it ***  /
  6668	411047'				STARS:	ASCIZ /
  6669
  6670	411047'	015 012 015 012 040 	            ************************************
  6671
  6672					            /
  6673	411065'				LITS:	XLIST           ;LIT
  6674						LIST		;DUMP THE LITERALS IN THE HISEG
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 35
SED	MAC	21-May-74 00:04		LOWSEG data

  6675					SUBTTL	LOWSEG data
  6676	000000'					RELOC	0	;*** LOWSEG STARTS HERE ***
  6677
  6678					;SOFTWARE INTERRUPT TABLES
  6679
  6680					TOPS20<
  6681					LEVTAB:	0		;LEVEL TABLE
  6682						PC2
  6683						0
  6684					PC2:	Z
  6685					
  6686					CHNTAB:	0
  6687						2,,CTRLM	;CHANNEL 1 HAS CTRL-M
  6688						2,,CTRLO	;CHANNEL 2 HAS CTRL-O
  6689						2,,CTRLQ	;CHANNEL 3 HAS CTRL-Q
  6690						2,,CTRLS	;CHANNEL 4 HAS CTRL-S
  6691						2,,CTRLT	;CHANNEL 5 HAS CTRL-T
  6692						BLOCK	33
  6693						2,,RUBOUT	;CHANNEL 33 HAS RUBOUT
  6694						0
  6695						2,,CTRLI	;CHANNEL 35 HAS CTRL-I
  6696					>
  6697
  6698					;NOMINAL ARGUMENTS TO COMMANDS
  6699
  6700	000000'				STACK:	BLOCK	20
  6701
  6702	000020'				ADDSPC:	BLOCK	1	;SPACES TO ADD OR DELETE (OPENSP, CLOSSP)
  6703	000021'				ADDSPS:	BLOCK	1	;DITTO, FRAGGABLE	 (OPENSP, CLOSSP)
  6704	000022'				ADDSLN:	BLOCK	1	;NUMBER OF LINES TO DO A RECTANGULAR OPEN/CLOSE TO
  6705	000023'				ADDLNS:	BLOCK	1	;LINES TO ADD OR DELETE (OPENLN, CLOSLN)
  6706	000024'				ADDLSP:	BLOCK	1	;SPACES TO ADD OR DELETE ALONG WITH LINES
  6707	000025'				ROLLIN:	BLOCK	1	;LINES TO ROLL (ROLFWL, ROLBKL)
  6708	000026'				ROLPGS:	BLOCK	1	;PAGES TO ROLL (ROLFWP, ROLBKP)
  6709	000027'				ROLLS:	BLOCK	1	;HOLDS ROLLIN OR LPP*ROLPGS, FOR ROLBK & ROLFW
  6710	000030'				GOPERC:	BLOCK	1	;PERCENT TO GO TO (PERCEN)
  6711	000031'				GOPRCT:	BLOCK	1	;PERCENT GOTO SET UP BY SWITCH
  6712	000032'				SRCPTR:	BLOCK	1	;SAVED BUFFER POINTER FOR SEARCHES
  6713	000033'				SRCKEY:	BLOCK	10	;SEARCH KEY (SRCFWD, SRCBAK)
  6714	000043'				PICKLN:	BLOCK	1	;NUMBER OF LINES TO PICK (PICK)
  6715	000044'				PICKSP:	BLOCK	1	;NUMBER OF SPACES TO PICK (PICK, WITH CURSOR MOVE)
  6716	000045'				SLIDES:	BLOCK	1	;LENGTH OF ONE SLIDE (SLIDEL, SLIDER)
  6717	000046'				XCTNUM:	BLOCK	1	;CURRENT # OF TIMES TO ITERATE EXECUTE BUFFER (EXECUT)
  6718	000047'				XCTITR:	BLOCK	1	;NOMINAL # OF TIMES TO ITERATE EXECUTE BUFFER (EXECUT)
  6719	000050'				XCTPTW:	BLOCK	1	;USED ACTIVE EXECUTE BUFFER POINTER (WRITING)
  6720	000051'				XCTACW:	BLOCK	1	;STARTING ACTIVE EXECUTE BUFFER POINTER (WRITING)
  6721	000052'				XCTPTR:	BLOCK	1	;USED ACTIVE EXECUTE BUFFER POINTER (READING)
  6722	000053'				XCTACR:	BLOCK	1	;STARTING ACTIVE EXECUTE BUFFER POINTER (READING)
  6723	000054'				XCTISV:	BLOCK	1	;SAVED # OF ITERATIONS (EXECUT, STACKED)
  6724	000055'				XCTNSV:	BLOCK	1	;SAVED NOMINAL ITERATIONS (EXECUT, STACKED)
  6725	000056'				XCTPSV:	BLOCK	1	;SAVED EXECUTE BUFFER READ POINTER
  6726	000057'				XCTASV:	BLOCK	1	;SAVED STARTING EXECUTE BUFFER READ POINTER
  6727	000060'				XCTRPT:	BLOCK	1	;NUMBER OF TIMES TO REPEAT THIS EXECUTE COMMAND
  6728	000061'				XCTRPR:	BLOCK	1	;POINTER TO COMMAND TO REPEAT
  6729	000062'				PRERW:	BLOCK	1	;PRE-SET ROW AND COLUMN
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 35-1
SED	MAC	21-May-74 00:04		LOWSEG data

  6730	000063'				PRESL:	BLOCK	1	;PRE-SET SLIDE
  6731	000064'				PREDP:	BLOCK	1	;PRE-SET DISPLAY POINTER
  6732	000065'				PREONE:	BLOCK	1	;PRE-SET ONE-SHOT POINTER
  6733	000066'				COUNTS:	BLOCK	1	;INCREMENTING COUNTER
  6734
  6735	000067'	073 040 124 150 151 	NEWMSG:	ASCII	/; This file is /	;THIS IS 3 WORDS LONG
  6736					TOPS20<
  6737					FILSPC:	BLOCK	14	;FILE SPECS (SETFIL)
  6738					>
  6739					TOPS10<
  6740	000072'				FILSPC:	BLOCK	13	;FILE SPECS (SETFIL)
  6741	000105'	015 012 00000000 		BYTE (7) 15,12
  6742	000106'				FILBLK:	BLOCK	3
  6743	000111'	000000	000007		FILFIL:	7		;[CSM] Extended LOOKUP block for current file
  6744	000112'					BLOCK	7	;[CSM] Preserve version number and spooling name
  6745			000005		  SFDS==5
  6746	000121'	777777	777776		FILPTH:	-2		;PATH OF CURRENT FILE
  6747	000122'	000000	000000			0
  6748	000123'				FILPPN:	BLOCK	1	;FILE'S PPN
  6749	000124'				FILSFD:	BLOCK	SFDS
  6750			000127'		FILUNM=.-2		;[JMS] TYMCOM-X user name specification
  6751					>  ;End of TOPS10
  6752	000131'				FILSIZ:	BLOCK	1	;SIZE OF FILE, IN BYTES
  6753	000132'				FILBSZ:	BLOCK	1	;SIZE OF FILE, IN BLOCKS
  6754	000133'				INJFN:	BLOCK	1	;JFN FOR THE FILE
  6755	000134'				OLDSPC:	BLOCK	14	;OLD FILE SPECS, FROM LAST SETFIL
  6756					TOPS10<
  6757	000150'				OLDBLK:	BLOCK	3	;OPEN BLOCK FOR ALTERNATE FILE
  6758	000153'	000000	000007		OLDFIL:	7		;[CSM] Extended LOOKUP block for ditto
  6759	000154'					BLOCK	7	;[CSM] Include .RBVER and .RBSPL
  6760	000163'	777777	777776		OLDPTH:	-2		;PATH OF DITTO
  6761	000164'					BLOCK	SFDS+3
  6762					>
  6763	000174'				TYMCOM:	BLOCK	1	;Zero for TOPS-10, nonzero for TYMCOM-X
  6764	000175'				SAVERW:	BLOCK	1	;OLD ROW AND COLUMN ACS
  6765	000176'				SAVEDP:	BLOCK	1	;OLD DISPLAY POINTER
  6766	000177'				SAVESL:	BLOCK	1	;OLD SLIDE OFFSET
  6767
  6768	000200'	63 71 63 00 00 00 	GOBLK:	SIXBIT	/SYS/	;RUN BLOCK FOR EXIT AND GO
  6769	000201'	43 57 55 60 51 54 		SIXBIT	/COMPIL/
  6770	000202'	000000	000000			EXP	0,0,0,0
  6771					TOPS10<
  6772	000206'	777777	777777		DEFPTH:	-1		;RUNNER'S STARTING PATH
  6773	000207'					BLOCK	SFDS+3
  6774	000217'				USRPPN:	BLOCK	1	;PPN OF RUNNER OF EDITOR
  6775	000220'	000000	000016		GENBLK:	16		;GENERAL OPEN BLOCK
  6776	000221'	44 63 53 00 00 00 		SIXBIT	/DSK/
  6777	000222'	000000	000000			0
  6778	000223'	000000	002256'		FILCCL:	IOWD	0,BUFFER	;CHANNEL COMMAND FOR INPUTTING EDITABLE FILE
  6779	000224'	000000	000000			0
  6780	000225'	20 20 20 60 51 53 	PIKFIL:	SIXBIT	/000PIK/	;FILE BLOCK FOR PICK FILE
  6781	000226'	64 55 60 00 00 00 		SIXBIT	/TMP/
  6782	000227'	000000	000000			EXP	0,0
  6783	000231'	777200	000372'		PIKCCL:	IOWD	PCBSIZ,PIKBUF	;CHANNEL COMMAND FOR PICK BUFFER
  6784	000232'	000000	000000			0
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 35-2
SED	MAC	21-May-74 00:04		LOWSEG data

  6785	000233'	20 20 20 43 54 63 	CLSFIL:	SIXBIT	/000CLS/	;FILE BLOCK FOR CLOSE FILE
  6786	000234'	64 55 60 00 00 00 		SIXBIT	/TMP/
  6787	000235'	000000	000000			EXP	0,0
  6788	000237'	777200	001175'		CLSCCL:	IOWD	PCBSIZ,CLSBUF	;CHANNEL COMMAND FOR CLOSE BUFFER
  6789	000240'	000000	000000			0
  6790	000241'	20 20 20 63 64 64 	STTFIL:	SIXBIT	/000STT/	;FILE BLOCK FOR STATISTICS FILE
  6791	000242'	64 55 60 00 00 00 		SIXBIT	/TMP/
  6792	000243'	000000	000000			EXP	0,0
  6793	000245'	63 45 44 00 00 00 		SIXBIT	/SED/		;[CSM] Name of TMPCOR file, at STTCCL-1
  6794	000246'	777777	000572'		STTCCL:	IOWD	1,PIKBUF+PCBSIZ-400
  6795	000247'	000000	000000			0			;CHANNEL COMMAND FOR STATISTICS FILE
  6796	000250'				DELFIL:	BLOCK	4		;FILE BLOCK FOR DELETING
  6797	000254'				BAKFIL:	BLOCK	4		;FILE BLOCK FOR RENAMING BACKUP FILE
  6798	000260'	777765	000066'		NEWCCL:	IOWD	13,NEWMSG	;CHANNEL COMMAND FOR NEW FILE
  6799	000261'	000000	000000			0
  6800	000262'				PUTCCL:	BLOCK	2		;CHANNEL COMMAND FOR PICK OR CLOSE BUFFER
  6801	000264'	63 67 51 64 43 50 	SWHFIL:	SIXBIT	/SWITCH/	;FILE BLOCK FOR SWITCH.INI
  6802	000265'	51 56 51 00 00 00 		SIXBIT	/INI/
  6803	000266'	000000	000000			EXP	0,0
  6804	000270'	55 41 43 64 70 64 	EXTTBL:	SIXBIT	/MACTXT/	;EXTENSIONS TO BE TRIED IN SETFIL
  6805	000271'	62 56 57 46 57 62 		SIXBIT	/RNOFOR/
  6806	000272'	44 41 64 20 20 20 		SIXBIT	/DAT000/
  6807	000273'				REDACC:	BLOCK	3		;CHKACC BLOCKS FOR READING
  6808	000276'				WRTACC:	BLOCK	3		;  AND WRITING
  6809	000301'	63 45 44 57 56 54 	HLPFIL:	SIXBIT	/SEDONL/	;FILE BLOCK FOR SWITCH.INI
  6810	000302'	50 54 60 00 00 00 		SIXBIT	/HLP/
  6811	000303'	000000	000000			EXP	0,0
  6812	000305'	777600	000772'		HLPCCL:	IOWD	200,PIKBUF+PCBSIZ-200 ;CHANNEL COMMAND FOR HELP FILE
  6813	000306'	000000	000000			0
  6814	000307'				TTYNUM:	BLOCK	1		;TRMNO.
  6815					>  ;End of TOPS10
  6816					TOPS20<
  6817					PIKFIL:	ASCIZ	/000PIK.TMP/
  6818					CLSFIL:	ASCIZ	/000CLS.TMP/
  6819					STTFIL:	ASCIZ	/000STT.TMP/
  6820					SWHFIL:	ASCIZ	/SWITCH.INI/
  6821					HLPFIL:	ASCIZ	/HLP:SEDONL.HLP/
  6822					>
  6823					;GENERAL DATA
  6824
  6825	000310'				SAVEAC:	BLOCK	13	;PLACE TO SAVE ACS ON EXIT, IN CASE OF REE
  6826	000323'				LPP.1:	BLOCK	1	;LINES PER PAGE - 1
  6827	000324'				LPP.2:	BLOCK	1	;NUMBER OF BOTTOM LINE (NEXT TO BOTTOM IF NEL SET)
  6828	000325'				CPL.1:	BLOCK	1	;CHARACTERS PER LINE - 1
  6829	000326'				LPR:	BLOCK	1	;LINES PER ROLL
  6830	000327'				CHRCUR:	BLOCK	1	;CHARACTER AT THE CURSOR POSITION, BLIPPED
  6831	000330'				SAVPOS:	BLOCK	2	;CURSOR POSITION SAVED ON ENTER
  6832	000332'				SVPMRK:	BLOCK	2	;CURSOR POSITION SAVED WHEN MARK COMMAND IS TYPED
  6833	000334'				TYPCHR:	BLOCK	1	;CHARACTER TYPED USER DURING A DISPLAY
  6834	000335'				WRTNUM:	BLOCK	1	;NUMBER OF CHARACTERS TO NULL OUT (WRTNUL)
  6835	000336'				NUMCHR:	BLOCK	1	;NUMBER OF CHARACTERS TO DEAL WITH (MAKSPC, &C)
  6836	000337'				NUMWDS:	BLOCK	1	;NUMBER OF WORDS TO DEAL WITH (MAKSPC, &C)
  6837	000340'				NUMNUL:	BLOCK	1	;NUMBER OF EXTRA NULLS PUT IN
  6838	000341'				CHARAC:	BLOCK	1	;CHARACTER TO DEAL WITH (IN MAKSPC, &C)
  6839	000342'				MAKPTR:	BLOCK	1	;POINTER TO LAST REAL CHAR ADDED BY MAKSPC &C.
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 35-3
SED	MAC	21-May-74 00:04		LOWSEG data

  6840	000343'	000000	000010		TABLEN:	10		;LENGTH OF AN ENTIRE TAB
  6841	000344'				TABSIZ:	BLOCK	1	;LENGTH OF TAB THAT CURSOR POINTS TO
  6842	000345'				TABSPC:	BLOCK	1	;NUMBER OF SPACES TO LEFT OF CURSOR, IF IT'S IN A TAB
  6843	000346'				TABPTR:	BLOCK	1	;POINTER TO TAB, IN FILE BUFFER
  6844	000347'				SPCCNT:	BLOCK	1	;COUNT OF CHARACTERS MOVED BY SPCBUF
  6845	000350'				SQZCNT:	BLOCK	1	;COUNT OF COMMANDS REMAINING UNTIL NEXT SQUEZW
  6846	000351'				DISPPT:	BLOCK	1	;POINTER TO LAST LINE; SET BY DISPLL
  6847	000352'				MAKLNS:	BLOCK	1	;NUMBER OF <CRLF>S IN PICK OF CLOSE BUFFER
  6848	000353'				RSCANF:	BLOCK	1	;FLAG - SET IF USER GAVE A FILE IN THE RUN COMMAND
  6849	000354'				SAVCPT:	BLOCK	1	;CHRPTR SAVED WHEN ENTER IS TYPED
  6850	000355'				MRKPTR:	BLOCK	1	;MARK POINTER, FOR PICK AND CLOSE-LINES
  6851	000356'				MFLPTR:	BLOCK	1	;POINTER TO START OF NEXT FILE IN nnnSTT.TMP
  6852					;MFLBLK:	BLOCK	1	;BLOCK OF nnnSTT.TMP WHICH POINTER IS IN
  6853					TOPS20<
  6854					FMDSAV:	BLOCK	1	;SAVED FMOD BITS (TOPS20)
  6855					>
  6856					;SWITCH FLAG WORDS
  6857
  6858	000357'				SLDFLG:	BLOCK	1	;0 == DISABLE ^L AND ^U
  6859	000360'				UPPFLG:	BLOCK	1	;0 == CONVERT ALPHABETICS TO UPPER CASE
  6860	000361'				BAKFLG:	BLOCK	1	;0 == NO BACKUP FILE WILL BE WRITTEN
  6861	000362'				PAGFLG:	BLOCK	1	;0 == SWITCH OUTPUTS PAGES-LINES; ELSE LINES
  6862	000363'				TRMNAM:	BLOCK	1	;NAME OF TERMINAL GIVEN BY USER
  6863	000364'				FILSBK:	BLOCK	1	;AMOUNT OF FILE TO READ IN (IN BLOCKS)
  6864
  6865					;VARIOUS BUFFERS
  6866
  6867	000365'				PUTPTR:	BLOCK	1	;POINTER, FOR MAKSPC, TO CLOSE OR PICK BUFFER
  6868	000366'				PTMPTR:	BLOCK	1	;COPY OF ABOVE SET UP BY MAKSPC
  6869	000367'				MAKCNT:	BLOCK	1	;COUNT OF CHARACTERS TO INSERT, FOR MAKSPC
  6870	000370'				PUTJFN:	BLOCK	1	;JFN OF PICK OR CLOSE BUFFER, FROM PUT TO MAKSPC
  6871	000371'				PIKCNT:	BLOCK	1	;COUNT OF CHARACTERS IN THE PICK BUFFER
  6872	000372'				PIKJFN:	BLOCK	1	;JFN FOR PICK FILE ON DISK (GENERATED ON OVERFLOW)
  6873	000373'				PIKBUF:	BLOCK	PCBSIZ	;PICK BUFFER (PICK, PUT)
  6874	001173'					BLOCK	1	;ZERO AT THE END OF PICK BUFFER
  6875	001174'				CLSCNT:	BLOCK	1	;COUNT OF CHARACTERS IN THE CLOSE BUFFER
  6876	001175'				CLSJFN:	BLOCK	1	;JFN FOR CLOSE FILE ON DISK (GENERATED ON OVERFLOW)
  6877	001176'				CLSBUF:	BLOCK	PCBSIZ	;CLOSE BUFFER (CLOSELN, PUT)
  6878	001776'					BLOCK	1	;ZERO AT THE END OF CLOSE BUFFER
  6879
  6880	001777'				TYPBUF:	BLOCK	TYPSIZ	;BUFFER FOR OUTPUTTING TO TERMINAL
  6881	002037'					BLOCK	10	;OVERFLOW FOR TYPE BUFFER
  6882
  6883					DEFINE XBFADR(X..X),<
  6884						010700,,XCTBF'X..X-1
  6885					>
  6886					DEFINE XBFBUF(X..X),<
  6887					XCTBF'X..X:  BLOCK XBFSIZ
  6888					>
  6889					DEFINE XCTDEF,<		;(SAVE SOME CREF OUTPUT)
  6890					XCTNAM:	<ASCII /SUB/>+1	;PRE-SET SUBSTITUTE SEQUENCE
  6891						BLOCK	XBFNUM-2
  6892						1		;NO-NAME BUFFER
  6893					XCTADR:			;POINTERS TO EXECUTE BUFFERS
  6894						X.X=-1
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 35-4
SED	MAC	21-May-74 00:04		LOWSEG data

  6895					REPEAT XBFNUM,<
  6896						X.X=X.X+1
  6897						XBFADR(\X.X)
  6898					>
  6899					
  6900					XCTBF0:	BYTE (7) 22,23,7 ;PUT [SEARCH, CLOSE, PUT] IN 1ST BUFFER
  6901						BLOCK	XBFSIZ-1
  6902						X.X=0		;SET UP ALL BUT ONE BUFFER
  6903					REPEAT XBFNUM-1,<
  6904						X.X=X.X+1
  6905						XBFBUF(\X.X)
  6906					>>
  6907						XLIST
  6908						LIST
  6909
  6910	002227'				PARPTR:	BLOCK	1	;POINTER INTO PARAMETER BUFFER
  6911	002230'				PARBUF:	BLOCK	20	;PARAMETER BUFFER
  6912	002250'				PARG1:	BLOCK	1	;STORAGE AREAS FOR CONVERTED PARAMETERS
  6913	002251'				PARG2:	BLOCK	1
  6914
  6915	002252'				LINPTR:	BLOCK	1	;POINTER TO START OF LINE
  6916	002253'				CHRPTR:	BLOCK	1	;POINTER TO CHARACTER AT CURSOR
  6917	002254'				DISPTR:	BLOCK	1	;POINTER TO FIRST CHARACTER DISPLAYED
  6918	002255'				BOTPTR:	BLOCK	1	;POINTER TO START OF LAST LINE OF SCREEN
  6919
  6920					IFN SAVETY,<	;Put text in DSK:EDEBUG.TMP for debugging
  6921					DEBPTR:	POINT	7,DEBBUF
  6922					DEBBLK:	16
  6923						SIXBIT	/DSK/
  6924						0
  6925					DEBFIL:	SIXBIT	/EDEBUG/
  6926						SIXBIT	/TMP/
  6927						EXP	0,0
  6928					DEBCCL:	IOWD	400,DEBBUF
  6929						0
  6930					DEBBUF:	BLOCK	400
  6931					>  ;End of IFN SAVETY
  6932	002256'	000000	006424		TOPS10<	6424		;NONZERO, NON-ODD WORD TO PRECEDE BUFFER
  6933	002257'				BUFFER:
  6934					>
  6935					TOPS20<	BUFFER==BUFSTT		;START OF BUFFER
  6936					LOC	BUFSTT-1
  6937						6424		;NONZERO, NON-ODD WORD TO PRECEDE BUFFER
  6938					>
  6939
  6940	002257'	052 052 052 052 052 	ASCIZ	/**************************************************************************
  6941
  6942					     Hi!  This is SED, the full screen editor.  It is easier and  more
  6943					natural to use than line or character editors, and is generally faster
  6944					too.  To  use  it, just  type.  You can move the cursor (which is that
  6945					blinking mark in the upper left corner) to other parts of the  screen.
  6946					To change existing text, just type over it.
  6947
  6948					     There  are  also  commands  to the editor.  They move the viewing
  6949					window around, insert or delete lines or spaces,  move text  from  one
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 35-5
SED	MAC	21-May-74 00:04		LOWSEG data

  6950					place to another, search, and other useful things.
  6951
  6952					     For a summary of the editor commands see the file HLP:SED.HLP.
  6953					     For a tutorial manual see the file                MAN:SED.MAN.
  6954					     For complete editor documentation see the file    DOC:SED.DOC.
  6955
  6956					You  can  also get on-line help. Type ENTER ENTER and then any command
  6957					to get a description of that command.
  6958
  6959					To exit from SED type CTRL-Z.
  6960
  6961
  6962
  6963
  6964
  6965					/
  6966	002562'	000000	000000			0
  6967			002563'		BUFFEN==.
  6968					IFN FTDDT,<
  6969					TOPS10<	.TEXT ?/SYMSEG:HIGH? >
  6970					TOPS20<	LOC	401000
  6971							0 ;Allocate this page >
  6972					>  ;End of IFN FTDDT
  6973
  6974
  6975					SUBTTL	End of LOWSEG, start of text buffer
  6976
  6977			400000'		SEDEND:	END	START	;EXPENDABLE STUFF AT THE END

NO ERRORS DETECTED

HI-SEG. BREAK IS 412350
PROGRAM BREAK IS 002563
CPU TIME USED 08:43.864

42P CORE USED
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page S-1
SED	MAC	21-May-74 00:04		SYMBOL TABLE

ABORT		401673'		CCH		000100	spd	CMVBTM		410356'		DISTBA		405260'		
ABORT1		401652'		CDN		000001	spd	CMVERR		407463'		DISTBB		405274'		
ADDCR		406225'		CDOWN		410346'	int	CMVTBL		410641'		DISTBX		405265'		
ADDLNS		000023'		CHARAC		000341'		CMXERR		407464'		DISTST		405335'		
ADDLSP		000024'		CHG		001000	spd	CNTNPM		405100'		DISTX1		405267'		
ADDSLN		000022'		CHM		000004	spd	CORE	047000	000011		DLN		000015	spd	
ADDSPC		000020'		CHOME		410355'	int	COUNTR		405102'		DO		000012		
ADDSPS		000021'		CHRCUR		000327'		COUNTS		000066'		DOWN		400514'		
ADVDPT		406023'		CHRPTR		002253'		COV		000002	spd	DSP		000016	spd	
ADVLP1		406252'		CLEARP		410335'		CPG		000005	spd	DTB		010000	spd	
ADVLPT		406247'		CLEFT		410343'		CPL		000024	spd	DWNARG		400557'		
AJDON1		400541'		CLF		000003	spd	CPL.1		000325'		EEXIT		401574'		
AJDONE		400534'		CLLNPM		402070'		CPOPJ		400543'	int	EEXIT0		401627'		
ALPCCH		400303'		CLLSPS		402256'		CR		000015	spd	EEXIT1		401651'		
ALPDIS		400272'		CLN		000006	spd	CRE		000100	spd	EN		000014		
ALPDTB		400320'		CLOSE	070000	000000		CRG		000002	spd	ENT		000002	spd	
ALPENC		400474'		CLOSEN		402217'		CRIGHT		410342'	int	ENTCCH		401426'		
ALPENT		400463'		CLOSLN		402053'		CUP		000000	spd	ENTER	077000	000000		
ALPERR		400344'		CLOSP1		402620'		CURUP		410345'		ENTER0		404237'		
ALPEX1		400420'		CLOSSP		402552'		CWT		000004	spd	ENTERA		404233'		
ALPEXT		400376'		CLRALL		410353'		DEFPTH		000206'		ENTERM		404245'		
ALPIBP		400454'		CLRBFI	051440	000000		DELCHR		402526'		ENTHL0		404304'		
ALPIM1		400437'		CLRLNA		410332'		DELFIL		000250'		ENTHL1		404321'		
ALPIM4		400457'		CLRLNR		410333'		DISCHR		405337'		ENTHL2		404333'		
ALPIM5		400460'		CLSBUF		001176'		DISCTL		405240'		ENTHL3		404337'		
ALPIMD		400422'		CLSCCL		000237'		DISCUR		405127'		ENTHLE		404362'		
ALPNM2		400261'		CLSCNT		001174'		DISDWN		405112'		ENTHLP		404276'		
ALPNM3		400267'		CLSFIL		000233'		DISKP1		405224'		ERASFN		405762'		
ALPNUL		400335'		CLSJFN		001175'		DISLFP		405400'		ERASPM		405722'		
ALPNUM		400236'		CLSLN1		402110'		DISLIN		405150'		ERF		020000	spd	
ALPPOS		400330'		CLSLN2		402115'		DISONE		405173'		ERRDSP		410566'		
ALPTAB		400346'		CLSLN3		402133'		DISONL		405166'		ERRDSW		410607'		
APRENB	047000	000016		CLSLN4		402135'		DISPCR		405330'		ERROR		410520'		
AUXCAL	042000	000000		CLSLN5		402175'		DISPEN		405312'		ERRORX		410531'		
BAKDP1		406001'		CLSLN6		402200'		DISPF1		405320'		ERSPM0		405731'		
BAKDP2		406005'		CLSLNL		402213'		DISPF2		405324'		ERSPM1		405742'		
BAKDPT		405776'		CLSLST		402234'		DISPL0		405202'		EXCNP1		403610'		
BAKFIL		000254'		CLSMK1		402271'		DISPL1		405203'		EXCNPM		403603'		
BAKFLG		000361'		CLSMKE		402302'		DISPL2		405212'		EXCOP1		403311'		
BAKTAB		401003'		CLSMRK		402265'		DISPL3		405215'		EXCOPN		403306'		
BAKTB0		401014'		CLSNP1		402573'		DISPL4		405216'		EXCSVX		403275'		
BAKTB1		401021'		CLSNP2		402601'		DISPLF		405316'		EXCUT1		403250'		
BEP		000200	spd	CLSNPM		402566'		DISPLL		405131'		EXCUT2		403264'		
BOTPTR		002255'		CLSOV0		402415'		DISPLY		405175'		EXECUT		403220'		
BTBARG		401001'		CLSOV1		402416'		DISPPT		000351'		EXICOL		401732'		
BUFFEN		002563'	spd	CLSOV2		402417'		DISPS0		405200'		EXIFIL		401701'		
BUFFER		002257'		CLSOVE		402424'		DISPTR		002254'		EXIFL1		401724'		
CALCCD		406374'		CLSOVF		402402'		DISREV		405301'		EXINUM		401733'		
CALCCM		406361'		CLSSI1		402475'		DISSKP		405221'		EXIPAR		401573'		
CALCD1		406410'		CLSSPI		402471'		DISSL1		405355'		EXISLI		401731'		
CALCM1		406363'		CM		000016		DISSLD		405352'		EXIT	047000	000012		
CALCRW		406325'		CMDLEN		000046		DISSLE		405366'		EXITGO		401670'		
CALRW1		406330'		CMDNAM		410761'		DISSLT		405372'		EXTTBL		000270'		
CALRW2		406333'		CMDTBL		410713'		DISTAB		405250'		F		000005		
CBOTOM		410331'		CMV		000010	spd	DISTB0		405255'		FBL		200000	spd	
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page S-2
SED	MAC	21-May-74 00:04		SYMBOL TABLE

FENCE		411027'		INTEND		400145'		MAKPP0		407106'		OPNSP1		402457'		
FILBLK		000106'		IO.NEC		000200	spd	MAKPP1		407115'		OPNSPI		402505'		
FILBSZ		000132'		IONEOU	051640	000000		MAKPPT		407103'		OPSNP1		402443'		
FILCCL		000223'		ISP		000014	spd	MAKPT0		407101'		OPSNPM		402436'		
FILFIL		000111'		ITB		000031	spd	MAKPT1		407070'		OUTPUT	067000	000000		
FILPPN		000123'		LEFT		400524'		MAKPTB		407141'		OUTSTR	051140	000000		
FILPTH		000121'		LEFT0		400522'		MAKPTP		407076'		P		000017		
FILSBK		000364'		LFF		010000	spd	MAKPTR		000342'		PAGFLG		000362'		
FILSFD		000124'		LFTARG		400565'		MAKSPC		406777'		PARBUF		002230'		
FILSIZ		000131'		LINPTR		002252'		MAR		000032	spd	PARG1		002250'		
FILSPC		000072'		LITS		411065'		MARK		405070'		PARG2		002251'		
FILUNM		000127'		LK		403775'		MARKUP		405412'		PARPTR		002227'		
FINDRW		406342'		LNFED1		401176'		MAXSIZ		372000	spd	PARSE2		407600'		
FLG		000001	spd	LNFED2		401201'		MFLPTR		000356'		PARSED		407546'		
FNC		000040	spd	LNFED3		401203'		MRK		040000	spd	PARSEE		407552'		
FNCCLR		410476'		LNFEED		401156'		MRKCUR		404257'		PARSEF		407470'		
FNCPUT		410477'		LNFERR		401211'		MRKPTR		000355'		PARSEP		407603'		
FNDRW0		406344'		LNFPAR		401152'		MRKSET		402304'		PARSES		407672'		
FNDRW1		406346'		LOOKUP	076000	000000		MVB		000017	spd	PARSEX		407676'		
FNDRW2		406351'		LOOP		400145'		NCR		040000	spd	PARSF0		407507'		
FT$TYM	777777	777777	spd	LOOP1		400155'		NEL		004000	spd	PARSF1		407511'		
FTDDT		000000	spd	LOOP2		400165'		NEWCCL		000260'		PARSF2		407543'		
GAKERR		410636'		LPP		000023	spd	NEWFIL		400133'		PARSP1		407604'		
GENBLK		000220'		LPP.1		000323'		NEWMSG		000067'		PARSP2		407620'		
GETAK		410627'		LPP.2		000324'		NEWTAB		000001	spd	PARSP3		407661'		
GETPPN	047000	000024		LPR		000326'		NHP		020000	spd	PARSS0		407631'		
GETTAB	047000	000041		LSD		400000	spd	NHPERR		404370'		PARSS1		407634'		
GFL		004000	spd	MAKADD		407040'		NLC		002000	spd	PARSS2		407653'		
GOBLK		000200'		MAKBP1		406242'		NLP		002000	spd	PARSS3		407666'		
GOPERC		000030'		MAKBP2		406245'		NOBYTE		000140	spd	PARSSF		407625'		
GOPRCT		000031'		MAKBPT		406234'		NPG		000400	spd	PARSX1		407700'		
HALT	254200	000000		MAKCC1		406151'		NRC		001000	spd	PARSX2		407715'		
HB.RTL	000020	000000	spd	MAKCCR		406135'		NRD		010000	spd	PCBSIZ		000600	spd	
HCP		000020	spd	MAKCH0		407024'		NRU		020000	spd	PCM		400000	spd	
HIBER	047000	000072		MAKCH1		407026'		NUL		000030	spd	PEEL.1		407166'		
HLPCCL		000305'		MAKCH2		407046'		NUMCHR		000336'		PEEL.C		407243'		
HLPERR		404364'		MAKCH3		407050'		NUMNUL		000340'		PEEL.F		407414'		
HLPFIL		000301'		MAKCH4		407057'		NUMWDS		000337'		PEEL.M		407215'		
HOMARG		400545'		MAKCHR		407003'		OLDBLK		000150'		PEEL.T		407337'		
HOME		400547'		MAKCK1		406042'		OLDFIL		000153'		PEEL1		407176'		
IDARGS		002000	spd	MAKCNT		000367'		OLDPTH		000163'		PEEL3		407210'		
ILCERR		400174'		MAKCOK		406123'		OLDSPC		000134'		PEL.C1		407254'		
ILN		000013	spd	MAKCP0		406044'		OPEN	050000	000000		PEL.C3		407272'		
IMD		000200	spd	MAKCP1		406051'		OPENLD		402017'		PEL.F1		407417'		
INCHRS	051100	000000		MAKCP2		406062'		OPENLN		401736'		PEL.F2		407446'		
INCHRW	051000	000000		MAKCPT		406040'		OPENSP		402426'		PEL.F3		407441'		
INJFN		000133'		MAKCTB		406101'		OPLNPM		401753'		PEL.F4		407461'		
INPUT	066000	000000		MAKLNS		000352'		OPNDLA		402042'		PEL.M1		407224'		
INS		040000	spd	MAKLP0		406167'		OPNDLB		402041'		PEL.M2		407235'		
INSBEP		401457'		MAKLP2		406174'		OPNLD0		402005'		PEL.M3		407241'		
INSBP1		401466'		MAKLP3		406211'		OPNLD1		402046'		PEL.T1		407351'		
INSMDF		401452'		MAKLPT		406157'		OPNLDX		402013'		PEL.T3		407442'		
INSMDO		401455'		MAKNUL		407002'		OPNSI1		402506'		PELS.1		407276'		
INSMOD		401430'		MAKPB0		407133'		OPNSI2		402513'		PELS.F		407371'		
INSMSG		401471'		MAKPCT		407121'		OPNSI3		402522'		PELS.M		407314'		
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page S-3
SED	MAC	21-May-74 00:04		SYMBOL TABLE

PELSF0		407406'		PUCERR		403152'		RESTPM		405716'		SAVFNO		405626'		
PELSF1		407407'		PUT		403030'		RETARG		400606'		SAVMG1		405651'		
PERCD1		401542'		PUT0		403057'		RETIMD		400622'		SAVMGN		405633'		
PERCD2		401563'		PUT0D		403076'		RETROL		400656'		SAVMGS		405641'		
PERCEN		401502'		PUTCCL		000262'		RETUR0		400613'		SAVPOS		000330'		
PERCND		401536'		PUTCLS		403136'		RETUR1		400620'		SCN		002000	spd	
PERCST		401566'		PUTCNT		405107'		RETURN		400611'		SEDEND		002563'		
PERERR		401571'		PUTCS1		403146'		RFLNPM		404427'		SETCR		404045'		
PERNPM		401515'		PUTERR		403154'		RFPNPM		404400'		SETCR0		404050'		
PGTERR		407213'		PUTJFN		000370'		RGTARG		400562'		SETCR2		404062'		
PICK		402630'		PUTNP2		403113'		RIGHT		400503'		SETCRE		404147'		
PICK0		402641'		PUTNPM		403102'		RLD		000010	spd	SETDEL		405704'		
PICK1		402676'		PUTNUM		410466'	int	ROLBK		404551'		SETER0		404164'		
PICK3		402717'		PUTPTR		000365'		ROLBK1		404561'		SETER1		404175'		
PICK4		402722'		PUTSC1		410375'		ROLBK2		404613'		SETER2		404202'		
PICKLN		000043'		PUTSC2		410417'		ROLBKL		404516'		SETERR		404160'		
PICKSP		000044'		PUTSCC		410404'		ROLBKP		404405'		SETERX		404205'		
PIKBUF		000373'		PUTSEQ		410357'		ROLFW		404445'		SETFIL		403724'		
PIKCCL		000231'		PUTSG1		410366'		ROLFW1		404470'		SETFL1		403763'		
PIKCNT		000371'		PUTSIX		410037'		ROLFW2		404514'		SETFLC		403726'		
PIKFIL		000225'		PUTSQ1		410361'	int	ROLFWL		404420'		SETIN		405670'		
PIKJFN		000372'		PUTSTC		410373'		ROLFWP		404372'		SETIN1		405671'		
PIKMK1		402775'		PUTSTF		410442'		ROLLDN		410351'		SETLN1		404072'		
PIKMKE		403005'		PUTSTG		410365'	int	ROLLIN		000025'		SETLNL		404101'		
PIKMRK		402772'		PUTSTS		410372'		ROLLS		000027'		SETLNO		404065'		
PIKNPM		402642'		PUTSTX		410433'		ROLLUP		410350'		SETMF0		404214'		
PIKOV1		403021'		PUTTY0		410460'		ROLPGS		000026'		SETMF1		404226'		
PIKOV2		403022'		PUTTY1		410464'		RPLTAB		407155'		SETMFE		404207'		
PIKOVE		403026'		PUTTYP		410451'	int	RSCA1A		410063'		SETMFL		404212'		
PIKOVF		403007'		RBKNPM		404413'		RSCAN0		410047'		SETNP1		404122'		
PIKPAD		402752'		RBLFNC		404544'		RSCAN1		410055'		SETNPM		404107'		
PIKPD1		402754'		RBLNPM		404527'		RSCAN2		410075'		SETOUT		405656'		
PIKSPS		402765'		RDO		000400	spd	RSCAN3		410103'		SETR1A		404177'		
PJOB	047000	000030		RDOERR		410517'		RSCAN4		410107'		SETSCN		410115'		
PJRST	324740	000000		RDTMP1		410150'		RSCANF		000353'		SFDS		000005	spd	
PNTSTT		410253'		REALTB		405062'		RSCANL		410045'		SKPINC	051540	000000		
POF		000012	spd	RECAL1		405056'		RST		100000	spd	SKPINL	051600	000000		
PON		000011	spd	RECALL		405040'		RSTNOM		400215'		SL		000011		
POSCUR		405766'		REDACC		000273'		RTE		000026	spd	SLDFLG		000357'		
POSEND		405767'		REDCHR		410325'		RTX		000027	spd	SLIDEL		403156'		
POSLIN		405764'		REDNO		400131'		RUBEXC		400234'		SLIDER		403177'		
POV		000001	spd	REDSW1		410276'		RUBSRC		400232'		SLIDES		000045'		
PREDP		000064'		REDSW2		410312'		RUN	047000	000035		SLLNPM		403164'		
PREONE		000065'		REDSWH		410264'		RUP		000007	spd	SLRNPM		403207'		
PRERW		000062'		REDSWS		410321'		RW		000015		SLW		001000	spd	
PRESET		410240'		REDTM1		410161'		SAMFIL		410164'		SMF		100000	spd	
PRESL		000063'		REDTMP		410131'		SAMFL1		410167'		SPCBEN		402344'		
PROTOF		410340'		REEERR		410511'		SAVCPT		000354'		SPCBF1		402327'		
PROTON		410337'		RELEAS	071000	000000		SAVEAC		000310'		SPCBF3		402350'		
PRSERR		407717'		RENAME	055000	000000		SAVEDP		000176'		SPCBTB		402362'		
PSC		000021	spd	RESCAN	051400	000000		SAVERW		000175'		SPCBUF		402324'		
PSL		000022	spd	RESET		404617'		SAVESL		000177'		SPCCNT		000347'		
PT		000013		RESET1		404636'		SAVETY		000000	spd	SPSCUR		402624'		
PTMPTR		000366'		RESET2		404633'		SAVFIL		405534'		SQUEW1		405451'		
PTRTBL		410645'		RESNPM		404634'		SAVFLB		405611'		SQUEW2		405460'		
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page S-4
SED	MAC	21-May-74 00:04		SYMBOL TABLE

SQUEZW		405431'		SWHLUK		406516'		TABPTR		000346'		WBTBE0		401126'		
SQZCNT		000350'		SWHLUR		406523'		TABSIZ		000344'		WBTBE1		401137'		
SQZVAL		000100	spd	SWHMN0		406420'		TABSPC		000345'		WBTBE2		401144'		
SRBNPM		401216'		SWHMN1		406434'		TBS		200000	spd	WBTBL1		401072'		
SRCB2A		401245'		SWHMN2		406437'		TCH		000025	spd	WRH		004000	spd	
SRCBAK		401213'		SWHMN3		406440'		TERMNL		400052'	ext	WRP		100000	spd	
SRCBK1		401227'		SWHMNS		406444'		TM		000007		WRTACC		000276'		
SRCBK2		401247'		SWHMNX		406451'		TMPCOR	047000	000044		WRTNL1		406272'		
SRCBK3		401232'		SWHMNY		406415'		TMPGET		410202'		WRTNL2		406302'		
SRCDK1		401354'		SWHMX1		406467'		TMPGT1		410203'		WRTNL3		406305'		
SRCDKY		401343'		SWHMX2		406475'		TOPS		000010	spd	WRTNT1		406317'		
SRCERR		401424'		SWHNOM		406574'		TRAIL1		405506'		WRTNTB		406312'		
SRCF2A		401325'		SWHNP1		404712'		TRAIL2		405513'		WRTNUL		406261'		
SRCFW1		401312'		SWHNP2		404716'		TRAIL3		405516'		WRTNUM		000335'		
SRCFW2		401327'		SWHNPE		404742'		TRAILC		405526'		WTAB		400712'		
SRCFW3		401331'		SWHNPM		404662'		TRAILL		405475'		WTABC		400727'		
SRCFWD		401271'		SWHNUM		000020		TRAILX		405520'		WTABCS		400746'		
SRCIPT		401263'		SWHONE		406503'		TRMNAM		000363'	int	WTABCT		400744'		
SRCKEY		000033'		SWHOSH		406712'		TRMNO.	047000	000115		WTABS		400763'		
SRCMAT		401356'		SWHPAG		406657'		TRMOP.	047000	000116		WTABS1		400774'		
SRCMT0		401377'		SWHPPP		406646'		TTXINI		410235'		WTABT		400777'		
SRCPTR		000032'		SWHPRC		406637'		TTYINI		410213'		WTABX		400741'		
SRCSET		401402'		SWHRDO		406604'		TTYNUM		000307'		WTABX0		400742'		
SRFNP1		401302'		SWHRRR		406563'		TY		000010		WTB		000400	spd	
SRFNPM		401274'		SWHSBK		406556'		TYMCOM		000174'		X.X		000007		
SRXERR		401422'		SWHSD0		406722'		TYPBUF		001777'	int	XBFNUM		000010	spd	
SSZERR		404105'		SWHSD1		406724'		TYPCHR		000334'		XBFSIZ		000014	spd	
STACK		000000'		SWHSLD		406531'		TYPSIZ		000040	spd	XCEERR		403720'		
STARS		411047'		SWHST1		405005'		UNPARS		407721'		XCKERR		403716'		
START		400000'		SWHST2		405023'		UNPRS1		407752'		XCNAM1		403552'		
STFERR		410535'		SWHST3		405031'		UNPRSF		407730'		XCNEND		403564'		
STTCCL		000246'		SWHSTC		406704'		UNPRSP		407773'		XCOERR		403712'		
STTFIL		000241'		SWHSTD		406714'		UNPRSX		410034'		XCRCTL		403523'		
SUBTAB		400176'		SWHSTL		406710'		UNPRSY		410020'		XCRDL0		403502'		
SUBTB1		400177'		SWHSTR		406706'		UNPRY1		410024'		XCRDL1		403512'		
SUBTB2		400200'		SWHSTS		404750'		UNPRY2		410031'		XCREND		403541'		
SUBTB3		400207'		SWHSTT		406665'		UNPSP1		407777'		XCRRPE		403536'		
SUBTBS		400212'		SWHTAB		406630'		UNPSP2		410005'		XCRRPT		403526'		
SVPMRK		000332'		SWHTBB		406614'		UNPSSF		410011'		XCRSPC		403514'		
SWAERR		406775'		SWHTBW		406635'		UP		400530'		XCSERR		403714'		
SWCHES		410653'		SWHTNW		406634'		UPARG		400554'		XCT		000020	spd	
SWHADR		410673'		SWHTRM		406661'		UPPFLG		000360'		XCTACR		000053'		
SWHAG1		406734'		SWHUPP		406533'		USETI	074000	000000		XCTACW		000051'		
SWHAGS		406745'		SWHWRT		406610'		USRPPN		000217'		XCTADR		002057'		
SWHARG		406726'		SWITCH		404644'		WBTAB		401026'		XCTASV		000057'		
SWHBBB		406541'		T0		000000		WBTABB		401075'		XCTBF0		002067'		
SWHBEP		406552'		T1		000001		WBTABC		401047'		XCTBF1		002103'		
SWHCAS		406535'		T2		000002		WBTABE		401125'		XCTBF2		002117'		
SWHER0		406766'		T3		000003		WBTABL		401064'		XCTBF3		002133'		
SWHERR		406767'		T4		000004		WBTABO		401147'		XCTBF4		002147'		
SWHFIL		000264'		TAB		400670'		WBTABS		401035'		XCTBF5		002163'		
SWHGS1		406755'		TAB0		400700'		WBTABX		401061'		XCTBF6		002177'		
SWHHLP		406620'		TAB1		400706'		WBTBB1		401106'		XCTBF7		002213'		
SWHICR		406624'		TABARG		400666'		WBTBB2		401111'		XCTDN1		403675'		
SWHLSD		406600'		TABLEN		000343'		WBTBC1		401053'		XCTDN2		403701'		
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page S-5
SED	MAC	21-May-74 00:04		SYMBOL TABLE

XCTDUN		403661'		.IOBIN		000014	spd	
XCTEND		403314'		.IOPIM		000002	spd	
XCTERR		403722'		.JBAPR		400071'	ext	
XCTGET		403615'		.JBREL		411560'	ext	
XCTGRP		403646'		.JBREN		400067'	ext	
XCTGRX		403655'		.JBTPC		410635'	ext	
XCTGT1		403640'		.RBEXT		000003	spd	
XCTGTE		403635'		.RBNAM		000002	spd	
XCTISV		000054'		.RBPPN		000001	spd	
XCTITR		000047'		.RBPRV		000004	spd	
XCTKIL		403335'		.RBSIZ		000005	spd	
XCTNAM		002047'		.TOPAG		001021	spd	
XCTNML		403546'		.TOPBS		001037	spd	
XCTNSV		000055'		.TOSET		001000	spd	
XCTNUM		000046'		
XCTPSV		000056'		
XCTPTR		000052'		
XCTPTW		000050'		
XCTRD1		403573'		
XCTRD2		403577'		
XCTRDL		403465'		
XCTRED		403567'		
XCTRPR		000061'		
XCTRPT		000060'		
XCTSET		403316'		
XCTST1		403330'		
XCTWRT		403344'		
XCWCM1		403371'		
XCWCMD		403361'		
XCWEND		403453'		
XCWERP		403463'		
XCWERR		403461'		
XCWGET		403414'		
XCWRP1		403431'		
XCWRP2		403441'		
XCWRPE		403445'		
XCWRPT		403422'		
XCWRT1		403347'		
XCWRT2		403357'		
XCWRT3		403411'		
XCWRT4		403400'		
XCXERR		403710'		
XPB		000020	spd	
XPC		000010	spd	
XPL		000004	spd	
XSV		000040	spd	
XSXERR		403705'		
%CNMNT	000112	000011	spd	
.AXCFS		000064	spd	
.CNT10		000001	spd	
.GTAUN	777777	777755	spd	
.GTFPN	777777	777753	spd	
.GTNM1		000031	spd	
.GTNM2		000032	spd	
.GTPPN		000002	spd	

SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

ABORT	  1390	  1459#	  6571
ABORT1	  1426#	  1466
ADDCR	  1726	  4615	  4652#
ADDLNS	   176	   293	  1508	  1514	  1530	  1539	  1551	  1604	  1610	  1636	  1673	  1679	  1686	  1707
	  3623	  6705#
ADDLSP	    90	   294	  1519	  1521	  1543	  1554	  1617	  1619	  1626	  1659	  1702	  3625	  3629	  6706#
ADDSLN	  1943	  2049	  2061	  6704#
ADDSPC	   175	   295	  1912	  1918	  1922	  1939	  1946	  1956	  2017	  2023	  2026	  2063	  3633	  6702#
ADDSPS	  1994	  2029	  2039	  2044	  6703#
ADVDPT	  1320	  3362	  4480#
ADVLP1	  4688#	  4693
ADVLPT	  3388	  4481	  4610	  4675	  4684#	  4689	  4694
AJDON1	   656	   658	   660#
AJDONE	   626	   631	   637	   639	   645	   650	   654#
ALPCCH	   440	   455#	   582
ALPDIS	   436#	   527
ALPDTB	   458	   469#	   574	   578
ALPENC	   607	   612#
ALPENT	   411	   601#
ALPERR	   490	   493#
ALPEX1	   532	   553#
ALPEXT	   429	   532#
ALPIBP	   559	   586#
ALPIM1	   572#	   597
ALPIM4	   563	   594#
ALPIM5	   565	   595#
ALPIMD	   419	   558#
ALPNM2	   424#	   488
ALPNM3	   430#	   491
ALPNUL	   425	   485#
ALPNUM	   235	   237	   387#	  2728	  2735	  3693
ALPPOS	   438	   477#
ALPTAB	   427	   499#
BAKDP1	  4456#	  4461	  4472
BAKDP2	  4460#	  4471
BAKDPT	   945	  1209	  1326	  3450	  4453#	  4492
BAKFIL	  4158	  4159	  4162	  4167	  4168	  4171	  6797#
BAKFLG	    94	  4155	  4286	  4933	  6860#
BAKTAB	   867#	  6598
BAKTB0	   872	   877#
BAKTB1	   875	   878	   883#
BEP	  1238	  1280	  4937	  4938
BOTPTR	  1109	  1247	  3760	  4401	  4678	  6918#
BTBARG	   864#	  6598
BUFFEN	    97	  6967#
BUFFER	   198	  1054	  1313	  1316	  1319	  1475	  2825	  2880	  2882	  2889	  2893	  2895	  2896	  2946
	  2975	  2976	  3550	  3575	  3578	  4053	  4056	  4086	  4184	  4454	  4463	  5057	  6162	  6778
	  6933#
CALCCD	  4788	  4797#
CALCCM	  1190	  1213	  1344	  2007	  4785#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

CALCD1	  4799	  4810#
CALCM1	  4787#	  4790	  4792	  4795
CALCRW	   961	   965	  1188	  1342	  4747#
CALRW1	  4750#	  4754	  4759
CALRW2	  4753#	  4757
CBOTOM	   445	  1162	  1242	  1253	  1282	  1683	  2654	  3139	  3286	  3540	  3603	  4026	  4396	  6231#
	  6375	  6477
CCH	   231	   238	   408	  1229	  3689
CDN	  6245
CDOWN	    33	  1010	  1556	  1585	  1593	  3927	  6245#	  6517
CHARAC	   436	   476	   561	   572	   580	   595	   734	  1534	  5142	  5144	  5215	  6838#
CHG	   194	   415	   729	  1004	  1529	  1628	  1773	  1924	  1997	  2030	  2255	  2299	  4132
CHM	  6252
CHOME	    33	   669	  3472	  6252#
CHRCUR	  3164	  4404	  4409	  4412	  6830#
CHRPTR	   424	   430	   431	   470	   473	   475	   486	   487	   489	   501	   504	   519	   533	   540
	   543	   549	   553	   560	   564	   570	   594	   596	   737	   741	   801	   825	   841	   899
	   924	   943	   949	   963	   969	   989	  1041	  1110	  1187	  1207	  1341	  1538	  1546	  1550
	  1633	  1721	  1789	  1795	  1954	  1967	  1999	  2038	  2094	  2323	  3155	  3776	  4505	  4509
	  4511	  4518	  4552	  4557	  4562	  4588	  4591	  4597	  4600	  4750	  4768	  4787	  5152	  5164
	  5165	  5209	  5211	  5397	  5413	  5474	  5494	  5546	  6165	  6916#
CLEARP	  1570	  3739	  6236#	  6371
CLEFT	   655	   699	   702	  6242#
CLF	  6242
CLLNPM	  1606	  1622#
CLLSPS	  1660	  1761#
CLN	  6235
CLOSEN	  1640	  1721#
CLOSLN	  1602#	  6574
CLOSP1	  2027	  2050	  2054#
CLOSSP	  2013#	  6595
CLRALL	  1372	  3252	  3755	  4273	  4280	  6250#	  6457
CLRLNA	  1011	  2286	  3377	  3796	  6233#
CLRLNR	   728	  1582	  1590	  3775	  6234#
CLSBUF	  1635	  1644	  1656	  1775	  1778	  1895	  2329	  5906	  5967	  5978	  6788	  6877#
CLSCCL	  1750	  1754	  1888	  6788#
CLSCNT	  1634	  1647	  1664	  1716	  1743	  1765	  1766	  1786	  2337	  6875#
CLSFIL	   115	  1879	  2334	  6785#
CLSJFN	  1883	  6876#
CLSLN1	  1639#	  1642	  1649
CLSLN2	  1644#	  1654	  1655
CLSLN3	  1637	  1659#
CLSLN4	  1662#	  1787
CLSLN5	  1692	  1698#	  1700
CLSLN6	  1696	  1702#
CLSLNL	  1674	  1714#
CLSLST	  1666	  1732	  1737#
CLSMK1	  1776#	  1781	  1784
CLSMKE	  1777	  1786#
CLSMRK	  1624	  1772#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

CLSNP1	  2002	  2031#	  2052
CLSNP2	  2034	  2038#
CLSNPM	  2016	  2026#
CLSOV0	  1751	  1886#
CLSOV1	  1877	  1887#
CLSOV2	  1884	  1888#
CLSOVE	  1756	  1900#
CLSOVF	  1645	  1657	  1779	  1873#
CLSSI1	  1958#	  1959	  1963
CLSSPI	  1954#	  2047
CM	    35	   259	   479	   480	   558	   584	   605	   610	   618	   625	   626	   627	   645	   646
	   667	   714	   743	   778	   779	   782	   786	   789	   802	   808	   812	   813	   818	   822
	   824	   828	   829	   830	   837	   840	   850	   855	   856	   859	   873	   874	   877	   881
	   883	   884	   898	   934	   968	   974	   975	   976	   979	   980	   981	   983	   984	  1306
	  1338	  1346	  1347	  1401	  1487	  1553	  1569	  1581	  1589	  1703	  1725	  1728	  1793	  1803
	  1854	  1957	  1992	  2313	  2359	  2360	  2363	  2365	  2383	  2384	  2385	  2799	  2806	  3017
	  3019	  3135	  3355	  3367	  3454	  3465	  3496	  3584	  3703	  3780	  3785	  3958	  4420	  4422
	  4506	  4530	  4541	  4732	  4785	  4792	  4793	  4794	  4797	  4798	  4800	  4806	  4810	  4811
	  4812	  5379	  5390	  5391	  5392	  5395	  5401	  5459	  5463	  5466	  5471	  5591	  6155	  6166
	  6234	  6432
CMDLEN	  2529	  6620#
CMDNAM	  2530	  2628	  6626#
CMDTBL	   255	   261	  6568#	  6620
CMV	   256	   601	   641	   665	   673	   677	   681	   688	   708	   770	   864	  1515	  1611	  1916
	  2021	  2077	  2376	  2394	  3179	  3513	  4023	  4415	  5341	  5440	  5518
CMVBTM	  3375	  6231	  6253#
CMVERR	  5461	  5588#
CMVTBL	   659	  6517#
CMXERR	   602	  5589#
CNTNPM	  3712#	  6619
COUNTR	  3715#	  6619
COUNTS	  3712	  5254	  5256	  6288	  6733#
COV	  1622	  1665	  1731	  1876	  2332
CPG	  6236
CPL	   168	  1955	  3779	  3989	  4007	  4798	  4801
CPL.1	   170	   558	   625	   646	   789	   884	   981	   983	  2363	  2365	  6828#
CPOPJ	    32	   662#	  3114	  3441	  4465	  4483	  4810	  4846	  5082	  5086	  5102	  5108	  5360	  5453
	  5538	  5616	  5660	  5874	  5969	  6004	  6177	  6193	  6268	  6299	  6317	  6328
CR	  1583
CRE	  3065	  5520	  5535
CRG	  6241
CRIGHT	    33	  6241#	  6518
CUP	  6244
CURUP	  6244#	  6519
CWT	   221	  3950	  3956
DEFPTH	  6772#
DELCHR	  1990#	  6616
DELFIL	  4164	  4357	  6796#
DISCHR	  3950#
DISCTL	  3821	  3852#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

DISCUR	   481	   584	   883	   885	   887	   936	   982	   986	  1193	  1199	  1322	  1351	  1355	  1523
	  1560	  1627	  1672	  1717	  1923	  1944	  2008	  2009	  2284	  2287	  2292	  2325	  2357	  2368
	  2381	  2388	  2465	  2670	  3290	  3536	  3598	  3735	  3747#
DISDWN	   749	  1574	  1676	  1680	  3734#
DISKP1	  3833#	  3835	  3838
DISLFP	  3997	  4001#
DISLIN	   474	  1714	  1942	  2048	  2289	  3772#
DISONE	   751	  1557	  1705	  3796#	  4403
DISONL	  2005	  3517	  3791#
DISPCR	  3920	  3936#
DISPEN	  3813	  3912#	  3976
DISPF1	  3840	  3921#
DISPF2	  3841	  3929#
DISPL0	  3786	  3808#
DISPL1	  3812#	  3815	  3826
DISPL2	  3819#	  3940
DISPL3	  3822#	  3873
DISPL4	  3824#	  3854	  3860	  3878	  3890	  3895	  3932
DISPLF	  3818	  3831	  3919#	  3985
DISPLL	   204	  1191	  1198	  1321	  1350	  1354	  1671	  2147	  2367	  2387	  2769	  3289	  3406	  3487
	  3507	  3753#	  6408	  6495
DISPLY	  1251	  2324	  3400	  3478	  3744	  3803#
DISPPT	  3759	  3931	  6846#
DISPS0	  3758	  3806#
DISPTR	   940	   946	  1040	  1203	  1317	  1324	  1336	  1394	  1791	  1801	  2800	  2823	  2826	  2879
	  2883	  2950	  3021	  3023	  3025	  3033	  3102	  3384	  3476	  3699	  3756	  4055	  4068	  4088
	  4097	  4453	  4464	  4474	  4480	  4482	  4606	  4669	  4747	  6029	  6159	  6163	  6435	  6448
	  6917#
DISREV	  3859	  3876	  3893	  3900#	  3938
DISSKP	  3816	  3829#
DISSL1	  3973#	  3977	  3988	  3999
DISSLD	  3807	  3930	  3970#
DISSLE	  3970	  3989#	  4001
DISSLT	  3987	  3994#
DISTAB	  3856	  3865#
DISTB0	  3871#	  3880
DISTBA	  3869	  3876#
DISTBB	  3884	  3893#
DISTBX	  3867	  3883#
DISTST	  3925	  3929	  3945#	  6472
DISTX1	  3886#	  3896	  3897
DLN	  1675	  1695
DO	   216	   262	   391	   468	   628	   638	   648	   652	   654	   657	   659	   996	  1000	  3182
	  4089	  4090	  4101	  4103	  4112	  4117	  4124	  5123	  5380	  5381	  5384	  5406	  5407	  5409
	  5410	  5432	  5486	  5492	  5985
DOWN	   634#	   679	  1001	  6610
DSP	  2046
DTB	  3868	  3883	  4978	  4979
DWNARG	   677#	   997	  6610
EEXIT	  1362#	  6513	  6608
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

EEXIT0	  1397	  1404#
EEXIT1	  1418	  1424#
EN	    97	   198	   431	   432	   487	  1121	  1312	  1324	  1328	  1639	  1723	  1825	  2118	  2946
	  2947	  2969	  2970	  2977	  2978	  3577	  3812	  3974	  4046	  4047	  4048	  4049	  4051	  4057
	  4067	  4069	  4071	  4073	  4074	  4077	  4092	  4094	  4107	  4109	  4110	  4111	  4141	  4144
	  4145	  4146	  4183	  4509	  4519	  4521	  4523	  4563	  4565	  4567	  4614	  4629	  4630	  4632
	  4633	  4634	  4636	  4653	  4655	  4657	  4684	  4705	  4715	  5161	  5162	  5173	  5174	  5183
	  5184	  5185	  6151
ENT	   194	   254	   410	   763	  1509	  1605	  2015	  2258	  2810	  3128	  3200	  3412	  3665	  4380
	  4387	  6412	  6486
ENTCCH	  1229#	  6591
ENTER0	  3132#	  3669
ENTERA	  3128#	  6609
ENTERM	  3139#
ENTHL0	  3184#	  3287
ENTHL1	  3194	  3199#
ENTHL2	  3213#	  3294
ENTHL3	  3219#
ENTHLE	  3209	  3289#
ENTHLP	  3129	  3178#
ERASFN	  4402	  4425#
ERASPM	  1037	  1101	  1522	  1620	  1919	  2024	  2086	  2265	  2331	  2355	  2379	  2464	  2653	  3339
	  3509	  3527	  4387#
ERF	   238	  6401
ERRDSP	  2989	  6406	  6445	  6454#	  6512
ERRDSW	  6456	  6477#
ERROR	   265	   373	   378	   494	  1030	  1220	  1222	  1358	  2343	  2345	  2586	  2588	  2701	  2777
	  2779	  2781	  2783	  2785	  2789	  3091	  3296	  3299	  5125	  5365	  5592	  6392	  6401#	  6444
ERRORX	  6402	  6410#
ERSPM0	  4391	  4395#
ERSPM1	  4383	  4394	  4398	  4404#	  4426
EXCNP1	  2692	  2697#
EXCNPM	  2691#	  6606
EXCOP1	  2432	  2461#
EXCOPN	  2418	  2458#
EXCSVX	  2427	  2446#
EXCUT1	  2422#	  2699
EXCUT2	  2434#	  2439
EXECUT	  2393#	  6606
EXICOL	  1488	  1498#
EXIFIL	  1395	  1403	  1472#
EXIFL1	  1473	  1491#
EXINUM	  1483	  1486	  1499#
EXIPAR	  1361#	  6608
EXISLI	  1490	  1497#
EXITGO	  1437	  1441#
EXTTBL	  3075	  6804#
F	    89	   149	   192	   194	   195	   217	   219	   221	   231	   238	   243	   252	   254	   256
	   398	   406	   408	   410	   413	   415	   417	   418	   437	   442	   516	   550	   571	   601
	   604	   624	   629	   634	   641	   644	   649	   661	   665	   668	   673	   677	   681	   688
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

	   708	   712	   716	   724	   726	   729	   758	   763	   770	   773	   788	   799	   864	   867	   869
	   894	   896	   935	   960	   964	   985	   988	  1002	  1004	  1013	  1026	  1044	  1059	  1075
	  1107	  1116	  1126	  1142	  1160	  1192	  1214	  1215	  1216	  1229	  1240	  1244	  1245	  1264
	  1287	  1308	  1339	  1348	  1349	  1361	  1436	  1506	  1509	  1515	  1524	  1529	  1558	  1576
	  1602	  1605	  1611	  1622	  1623	  1628	  1630	  1665	  1670	  1682	  1688	  1708	  1731	  1761
	  1763	  1773	  1830	  1838	  1876	  1916	  1920	  1924	  1925	  1927	  1936	  1945	  1990	  1995
	  1997	  1998	  2013	  2015	  2021	  2028	  2030	  2051	  2077	  2088	  2090	  2146	  2149	  2184
	  2193	  2212	  2247	  2250	  2252	  2255	  2258	  2262	  2273	  2275	  2285	  2291	  2299	  2300
	  2309	  2332	  2366	  2376	  2386	  2393	  2394	  2426	  2431	  2458	  2470	  2482	  2581	  2669
	  2691	  2764	  2810	  2814	  2829	  2948	  2949	  2984	  2990	  3005	  3027	  3028	  3031	  3065
	  3070	  3074	  3085	  3119	  3128	  3136	  3140	  3146	  3157	  3179	  3193	  3199	  3200	  3335
	  3343	  3351	  3353	  3361	  3365	  3369	  3376	  3385	  3392	  3397	  3399	  3401	  3412	  3416
	  3423	  3428	  3440	  3449	  3452	  3456	  3466	  3467	  3479	  3482	  3483	  3489	  3513	  3515
	  3597	  3647	  3665	  3689	  3691	  3701	  3734	  3743	  3745	  3753	  3761	  3762	  3763	  3764
	  3765	  3772	  3791	  3803	  3805	  3806	  3817	  3830	  3853	  3868	  3883	  3924	  3950	  3955
	  3956	  4016	  4023	  4042	  4080	  4132	  4380	  4387	  4392	  4395	  4399	  4415	  4418	  4421
	  4484	  4491	  4499	  4501	  4572	  4583	  4625	  4649	  4668	  4866	  4885	  4922	  4923	  4953
	  4954	  4958	  4959	  4968	  4969	  4973	  4974	  4978	  4979	  4983	  4984	  4988	  4989	  4996
	  4997	  5213	  5320	  5341	  5378	  5393	  5398	  5440	  5467	  5470	  5518	  5520	  5535	  5698
	  5706	  6031	  6036	  6048	  6153	  6168	  6169	  6336	  6380	  6401	  6403	  6404	  6405	  6412
	  6437	  6443	  6485	  6486	  6493
FBL	  1214	  1215	  1244	  1287	  1576	  1682	  1688	  1708	  2669	  3140	  3199	  3376	  3385	  3392
	  3397	  3399	  3466	  3597	  3743	  3764	  4395	  6485
FENCE	  6377	  6666#
FILBLK	  1382	  2830	  3002	  3076	  5602	  5647	  5785	  6742#
FILBSZ	  2886	  6753#
FILCCL	  2906	  2907	  4186	  4187	  6778#
FILFIL	  2832	  2838	  2839	  2871	  2887	  2888	  3043	  3045	  3046	  3072	  3082	  5603	  5604	  5605
	  5606	  5613	  5646	  5648	  5657	  5797	  5816	  5820	  5823	  6743#
FILPPN	  2833	  5608	  5701	  5736	  5796	  5822	  5824	  5830	  5832	  6748#
FILPTH	  2837	  6746#
FILSBK	  4944	  5607	  6863#
FILSFD	  2836	  5609	  5728	  5734	  5740	  5741	  5812	  5847	  6749#
FILSIZ	  2878	  2892	  2903	  2909	  6752#
FILSPC	   183	  1384	  1387	  1393	  1464	  2794	  2803	  3004	  3007	  3013	  3015	  3101	  3545	  5521
	  5522	  5523	  5599	  5784	  5986	  6021	  6037	  6425	  6446	  6740#
FILUNM	  2834	  2835	  5610	  5611	  5749	  5793	  5806	  5810	  5811	  5858	  6750#
FINDRW	  3551	  4764#
FLG	   661	   960	   964	   988	  1361	  1436	  1761	  1763	  1830	  1838	  2184	  2482	  2581	  2810
	  2829	  2949	  3028	  3070	  3074	  3085	  3146	  3369	  3665	  4491	  4866	  4885	  5698	  5706
	  6404	  6405	  6412	  6493
FNC	   442	  1682	  2285	  2291	  3351	  3376	  3399	  3426	  3482	  3489	  3743	  3761	  3806	  6380
FNCCLR	  1729	  3915	  6371#
FNCPUT	  1257	  3389	  3442	  4425	  6372#
FNDRW0	  4766#	  4773
FNDRW1	  4768#	  4775	  4779
FNDRW2	  4772#	  4778
FT$TYM	     8	    99	  2841	  2855	  3236	  3238	  5649	  5792	  6089	  6094	  6343	  6344
FTDDT	  6968
GAKERR	  6504	  6511#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

GENBLK	  3041	  3243	  3247	  4303	  4329	  4353	  6775#
GETAK	   155	  6500#
GFL	  2948	  3119	  6443
GOBLK	  1441	  5015	  6768#
GOPERC	    89	   201	   292	  1294	  1304	  1305	  3615	  5001	  6710#
GOPRCT	   200	   202	  5005	  6711#
HB.RTL	  6466
HCP	  6250
HLPCCL	  3250	  6812#
HLPERR	  3211	  3292#
HLPFIL	  3244	  6809#
HOMARG	   665#	  6613
HOME	   667#	   938	  6613
IDARGS	  1578	  1691	  1977
ILCERR	   264#	   275	   280	   995
ILN	   748	  1572	  1587
IMD	   418	   712	  1240	  1264	  1558	  3401	  3483	  3745	  3765	  4392
INJFN	  1385	  2870	  6754#
INS	   415	   417	  1628	  1630	  1925	  1927	  2250	  2252	  4572	  4583	  4625
INSBEP	  1239	  1264#
INSBP1	  1265	  1273#
INSMDF	  1248	  1257#
INSMDO	  1241	  1261#
INSMOD	  1238#	  6615
INSMSG	  1261	  1280#	  1559	  3402	  3484	  3746	  3766	  4393
INTEND	   214#	   671	   720	   752	   764	   792	  1230	  2057	  3328	  3344	  3511	  3748	  3966	  4024
	  6413
IO.NEC	  6096
ISP	   576	  1940	  2277
ITB	   239	   388	  3212
LEFT	   644#	   689	  6576
LEFT0	   641#	   692
LFF	  3805	  3806	  3817	  3830	  3853
LFTARG	   688#	  6576	  6616
LINPTR	   742	   925	   939	   942	   947	   966	  1189	  1343	  1704	  2006	  3574	  3740	  3795	  4504
	  4607	  4612	  4632	  4648	  4671	  4748	  4758	  6164	  6915#
LITS	  6673#
LK	  2839#
LNFED1	  1016#	  1020
LNFED2	  1019#	  1025
LNFED3	  1018	  1022#
LNFEED	   999#	  6578
LNFERR	  1006	  1029#
LNFPAR	   994#	  6578
LOOP	   199	   216#	   589	   605	   610	   618	   663	   694	   704	  1027	  1255	  1259	  1262	  1276
	  1712	  1733	  1992	  2150	  2165	  2695	  2771	  3137	  3149	  3181	  3314	  3429	  3678	  3706
	  3713	  3719
LOOP1	   223	   227#
LOOP2	   243#	   390	  2729	  2736
LPP	   160	   745	  1565	  1677	  1706	  2318	  3311	  3325	  3372	  3381	  3463	  3469	  3741	  3757
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

LPP.1	   164	   441	  1005	  1104	  2283	  2290	  3134	  4667	  6373	  6826#
LPP.2	   165	   167	   630	   635	   651	   717	   886	  6827#
LPR	   163	   179	   299	  1201	  1210	  1325	  4487	  4490	  6829#
LSD	   994	   999	  3215	  4963	  4964
MAKADD	  5188#	  5192
MAKBP1	  4670	  4675#
MAKBP2	  4673	  4678#
MAKBPT	  1108	  1246	  3439	  3480	  4400	  4667#
MAKCC1	  4584	  4596#
MAKCCR	  4510	  4514	  4583#
MAKCH0	  5158	  5171#
MAKCH1	  5173#	  5178
MAKCH2	  5176	  5197#
MAKCH3	  5199#	  5202	  5205
MAKCH4	  5166	  5193	  5200	  5209#
MAKCHR	   569	   735	  1535	  2269	  2306	  5143	  5146#
MAKCK1	  4501#	  4568	  4574	  4577
MAKCNT	  5242	  5269	  5281	  5282	  5283	  5289	  6869#
MAKCOK	  4500	  4562#	  4570
MAKCP0	  4504#	  4594
MAKCP1	  4509#	  4512	  4517	  4550
MAKCP2	  4508	  4518#	  4526	  4551
MAKCPT	   416	   730	   800	   895	  1039	  1103	  1525	  1629	  1772	  1794	  1926	  1996	  2031	  2089
	  2251	  2266	  3154	  3548	  4499#	  5321	  5412	  5468	  5489
MAKCTB	  4516	  4541#
MAKLNS	  2305	  2307	  2312	  5248	  6847#
MAKLP0	  4614#	  4617
MAKLP2	  4611	  4625#
MAKLP3	  4626	  4639#	  4644
MAKLPT	  1014	  1212	  1243	  2274	  3516	  4502	  4606#
MAKNUL	  5144#
MAKPB0	  5232	  5267#
MAKPCT	  5237	  5253#
MAKPP0	  5238#	  5249	  5262
MAKPP1	  5240	  5246#
MAKPPT	  5235#	  5241
MAKPT0	  5231	  5233#	  5244
MAKPT1	  5221#	  5226	  5243
MAKPTB	  5233	  5275#
MAKPTP	  5214	  5230#
MAKPTR	   517	  2314	  5221	  6839#
MAKSPC	   507	   547	  1548	  1840	  1938	  2043	  4592	  5141#	  5319
MAR	  3166
MARK	  3699#	  6618
MARKUP	   642	   666	   674	   678	   682	   709	   771	   865	  4016#
MAXSIZ	  2876
MFLPTR	  2797	  3009	  3122	  6027	  6060	  6438	  6851#
MRK	  3165	  4406
MRKCUR	  3133	  3154#	  3704
MRKPTR	   761	  1776	  1790	  1797	  1800	  2196	  3700	  6850#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

MRKSET	  1774	  1789#	  2194
MVB	  6253
NCR	   724	  4988	  4989
NEL	   166	  1250	  1252	  3386	  3393	  4390	  4397
NEWCCL	  3047	  6798#
NEWFIL	   194#	  2815	  2985	  2991	  3035
NEWMSG	  6735#	  6798
NEWTAB	  3220	  5383	  5386	  6579	  6585	  6597	  6601	  6638	  6642	  6648	  6650
NHP	  3179	  4983	  4984
NHPERR	  3248	  3298#
NLC	  1044	  1059	  1075	  1116	  1126	  1142	  4922	  4923
NLP	  4437
NOBYTE	  5172
NPG	  6084
NRC	   149	   758	  4953	  4954
NRD	  3468
NRU	   148	  3371
NUL	  4439
NUMCHR	   506	   546	   568	   732	  1532	  1545	  1822	  1837	  1863	  1928	  1932	  2032	  2036	  2042
	  2264	  2276	  2298	  2339	  4585	  4741	  5146	  5212	  5316	  6835#
NUMNUL	  5210	  5223	  6837#
NUMWDS	  5151	  5184	  6836#
OLDBLK	  2818	  6757#
OLDFIL	  6429	  6758#
OLDPTH	  6431	  6760#
OLDSPC	  1389	  1396	  1398	  2794	  2795	  2817	  2820	  3000	  3014	  3097	  3587	  3591	  5986	  5987
	  6024	  6038	  6423	  6424	  6755#
OPENLD	   750	  1552	  1565#	  2310
OPENLN	  1506#	  6572
OPENSP	  1912#	  6569
OPLNPM	  1510	  1520	  1523#
OPNDLA	  1579	  1589#
OPNDLB	  1581	  1587#
OPNLD0	  1544	  1551#
OPNLD1	  1589	  1593#	  1596
OPNLDX	  1553	  1555	  1557#
OPNSI1	  1968#	  1972
OPNSI2	  1964	  1974#
OPNSI3	  1978	  1982#
OPNSP1	  1930	  1938#
OPNSPI	   577	  1941	  1967#	  2278
OPSNP1	  1925#	  1947
OPSNPM	  1920#	  6569
P	    77	   133	   134	   135	   136	   140	   141	   185	   187	   188	   191	   204	   205	   218
	   241	   283	   303	   416	   429	   444	   445	   446	   447	   459	   460	   463	   464	   465
	   474	   499	   507	   515	   536	   537	   547	   548	   551	   554	   569	   577	   579	   613
	   616	   617	   642	   655	   659	   660	   662	   666	   669	   670	   674	   678	   682	   699
	   702	   703	   709	   719	   728	   730	   735	   750	   751	   771	   791	   800	   865	   895
	   945	   961	   965	  1010	  1011	  1012	  1014	  1036	  1037	  1039	  1058	  1069	  1091	  1095
	  1100	  1101	  1103	  1105	  1108	  1125	  1136	  1162	  1163	  1165	  1167	  1168	  1188	  1190
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

	  1191	  1197	  1198	  1209	  1212	  1213	  1217	  1242	  1243	  1246	  1251	  1253	  1254	  1257	  1258
	  1261	  1281	  1282	  1283	  1285	  1286	  1296	  1300	  1320	  1321	  1326	  1342	  1344	  1350
	  1353	  1354	  1372	  1373	  1386	  1395	  1403	  1421	  1434	  1465	  1472	  1483	  1486	  1488
	  1490	  1495	  1499	  1512	  1522	  1525	  1527	  1535	  1547	  1548	  1549	  1552	  1556	  1557
	  1559	  1568	  1570	  1573	  1575	  1582	  1585	  1590	  1593	  1595	  1597	  1608	  1620	  1629
	  1632	  1645	  1657	  1660	  1666	  1669	  1671	  1683	  1685	  1695	  1699	  1705	  1711	  1714
	  1726	  1727	  1729	  1730	  1732	  1751	  1762	  1767	  1772	  1774	  1779	  1794	  1799	  1804
	  1826	  1829	  1839	  1845	  1846	  1851	  1873	  1878	  1880	  1882	  1886	  1887	  1896	  1897
	  1898	  1907	  1914	  1917	  1919	  1926	  1938	  1941	  1942	  1961	  1965	  1970	  1974	  1975
	  1979	  1983	  1996	  2005	  2007	  2019	  2022	  2024	  2031	  2040	  2043	  2047	  2048	  2054
	  2056	  2064	  2071	  2086	  2089	  2110	  2114	  2121	  2129	  2138	  2147	  2148	  2160	  2164
	  2173	  2176	  2185	  2188	  2194	  2199	  2214	  2216	  2218	  2222	  2231	  2232	  2241	  2251
	  2254	  2260	  2265	  2266	  2269	  2274	  2278	  2280	  2282	  2286	  2289	  2303	  2306	  2310
	  2311	  2324	  2331	  2335	  2352	  2355	  2367	  2374	  2379	  2387	  2396	  2417	  2427	  2454
	  2464	  2471	  2484	  2488	  2523	  2524	  2539	  2548	  2583	  2601	  2629	  2637	  2653	  2654
	  2655	  2663	  2665	  2668	  2679	  2686	  2769	  2770	  2804	  2807	  2808	  2809	  2824	  2853
	  2951	  2989	  3008	  3010	  3026	  3034	  3049	  3067	  3083	  3113	  3120	  3123	  3133	  3139
	  3141	  3145	  3147	  3148	  3154	  3158	  3168	  3170	  3171	  3184	  3186	  3188	  3189	  3190
	  3214	  3245	  3252	  3253	  3286	  3289	  3306	  3309	  3313	  3320	  3323	  3327	  3334	  3339
	  3342	  3362	  3375	  3377	  3378	  3388	  3389	  3395	  3400	  3402	  3406	  3415	  3421	  3423
	  3424	  3425	  3427	  3439	  3442	  3450	  3472	  3473	  3478	  3480	  3484	  3487	  3488	  3506
	  3507	  3509	  3510	  3516	  3517	  3527	  3535	  3540	  3541	  3542	  3544	  3546	  3548	  3551
	  3558	  3560	  3564	  3568	  3570	  3580	  3583	  3586	  3590	  3592	  3596	  3602	  3603	  3604
	  3606	  3608	  3610	  3612	  3614	  3616	  3618	  3620	  3622	  3624	  3630	  3632	  3634	  3636
	  3638	  3644	  3646	  3652	  3656	  3658	  3668	  3669	  3676	  3677	  3683	  3704	  3705	  3718
	  3737	  3739	  3744	  3746	  3747	  3754	  3755	  3758	  3767	  3773	  3774	  3775	  3792	  3794
	  3796	  3804	  3807	  3825	  3859	  3876	  3893	  3900	  3901	  3902	  3905	  3908	  3913	  3923
	  3926	  3927	  3929	  3930	  3936	  3938	  3939	  3947	  3951	  3952	  3959	  3960	  3963	  3964
	  3965	  3975	  3984	  3992	  4010	  4017	  4018	  4021	  4022	  4026	  4027	  4030	  4031	  4032
	  4033	  4034	  4043	  4044	  4081	  4082	  4089	  4112	  4113	  4134	  4136	  4248	  4261	  4268
	  4273	  4275	  4277	  4280	  4282	  4284	  4287	  4310	  4330	  4333	  4338	  4360	  4381	  4382
	  4388	  4389	  4393	  4396	  4400	  4403	  4411	  4414	  4416	  4423	  4425	  4433	  4436	  4455
	  4475	  4481	  4502	  4524	  4528	  4536	  4558	  4573	  4576	  4586	  4592	  4593	  4601	  4609
	  4610	  4618	  4637	  4650	  4658	  4675	  4679	  4686	  4695	  4707	  4716	  4721	  4724	  4729
	  4730	  4742	  4751	  4770	  4786	  4807	  4808	  4813	  4814	  4844	  4854	  4870	  4884	  4893
	  4897	  4900	  4912	  4917	  4919	  4924	  4926	  4934	  4939	  4941	  4945	  4947	  4955	  4960
	  4965	  4970	  4975	  4980	  4985	  4990	  4993	  4998	  5000	  5006	  5008	  5013	  5016	  5019
	  5021	  5024	  5029	  5031	  5046	  5048	  5050	  5052	  5061	  5083	  5103	  5115	  5119	  5122
	  5147	  5224	  5232	  5233	  5273	  5300	  5306	  5314	  5319	  5362	  5399	  5408	  5411	  5412
	  5434	  5449	  5462	  5468	  5469	  5475	  5479	  5487	  5489	  5531	  5572	  5598	  5705	  5738
	  5743	  5765	  5788	  5813	  5817	  5821	  5851	  5866	  5870	  5893	  5900	  6003	  6022	  6025
	  6046	  6049	  6062	  6087	  6097	  6160	  6170	  6176	  6192	  6198	  6201	  6210	  6221	  6231
	  6262	  6300	  6301	  6303	  6304	  6308	  6309	  6330	  6339	  6354	  6360	  6362	  6363	  6366
	  6371	  6375	  6376	  6378	  6379	  6388	  6389	  6390	  6406	  6408	  6409	  6410	  6411	  6439
	  6440	  6441	  6445	  6449	  6454	  6457	  6459	  6460	  6461	  6463	  6464	  6472	  6473	  6477
	  6480	  6481	  6482	  6483	  6484	  6494	  6500	  6505	  6512
PAGFLG	  3555	  5018	  6861#
PARBUF	   691	   693	  2395	  2400	  2498	  2592	  2676	  3130	  3178	  3498	  3499	  3503	  3524	  3525
	  3530	  3667	  3675	  4019	  4826	  4872	  4890	  5343	  5443	  5490	  5525	  5977	  6911#
PARG1	  1295	  1298	  1511	  1513	  1607	  1609	  1913	  1915	  2018	  2020	  2070	  2072	  2351	  2353
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

	  2373	  2375	  2419	  3305	  3307	  3319	  3321	  3333	  3337	  3414	  3419	  5361	  5373	  5431	  6912#
PARG2	  1516	  1612	  1616	  2062	  2078	  2377	  5340	  5390	  5401	  6913#
PARPTR	   603	   690	   698	  2399	  2647	  3131	  3180	  3497	  3523	  3529	  3666	  3670	  3674	  3682
	  3716	  3717	  4020	  4827	  5344	  5346	  5444	  5446	  5488	  5491	  5498	  5526	  5528	  5550
	  5571	  5575	  5907	  5922	  5927	  5983	  6910#
PARSE2	  5675	  5680#
PARSED	  5621	  5646#
PARSEE	  5623	  5657#	  5663	  5680	  5682
PARSEF	   187	  2808	  3026	  5597#	  6449
PARSEP	  5625	  5665	  5684#	  5700	  5702
PARSES	  5629	  5667	  5744#
PARSEX	  5627	  5749#
PARSF0	  5613#	  5655	  5737	  5742	  5764
PARSF1	  5615#	  5619	  5642	  5644
PARSF2	  5637	  5642#
PARSP1	  5685#	  5696
PARSP2	  5688	  5698#
PARSP3	  5686	  5690	  5705	  5734#
PARSS0	  5708#	  5730
PARSS1	  5711#	  5724
PARSS2	  5714	  5727#
PARSS3	  5712	  5716	  5740#
PARSSF	  5699	  5704#
PARSX1	  5751#	  5762
PARSX2	  5754	  5764#
PCBSIZ	  1392	  1411	  1644	  1656	  1746	  1747	  1753	  1778	  2120	  2128	  2154	  2155	  2161	  2172
	  2175	  2198	  3196	  3254	  5270	  5280	  6020	  6182	  6783	  6788	  6794	  6812	  6873	  6877
PCM	   194	   417	  1013	  1524	  1623	  1670	  1927	  1998	  2028	  2090	  2146	  2252	  2393	  2810
	  3701
PEEL.1	  1296	  1512	  1608	  1914	  2019	  2071	  2352	  2374	  2417	  3306	  3320	  3334	  3415	  5340#
PEEL.C	  5345	  5406#
PEEL.F	  5493	  5546#
PEEL.M	  5342	  5371#
PEEL.T	  5445	  5486#	  5527
PEEL1	  5349#	  5358
PEEL3	  5350	  5360#
PEL.C1	  5416#	  5421	  5425	  5429
PEL.C3	  5419	  5423	  5428	  5431#
PEL.F1	  5549#	  5567
PEL.F2	  5559	  5574#	  5585
PEL.F3	  5557	  5563	  5567#	  5581
PEL.F4	  5579	  5585#
PEL.M1	  5375	  5379#
PEL.M2	  5394	  5396#	  5402
PEL.M3	  5382	  5389	  5401#
PEL.T1	  5497#	  5504	  5508	  5512
PEL.T3	  5502	  5506	  5511	  5561	  5565	  5569#	  5583	  5586
PELS.1	  1036	  1100	  2260	  5440#
PELS.F	  2804	  5518#
PELS.M	  2396	  5441	  5459#	  5519
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

PELSF0	  5533#	  5536	  5539
PELSF1	  5530	  5534#
PERCD1	  1329#	  1334
PERCD2	  1340	  1346	  1349#
PERCEN	  1294#	  6592
PERCND	  1310	  1324#
PERCST	  1307	  1353#
PERERR	  1301	  1303	  1357#
PERNPM	   203	  1305#	  6592
PGTERR	  5354	  5355	  5364#
PICK	  2069#	  6599
PICK0	  2075	  2080	  2084	  2086#
PICK1	  2100	  2106	  2115	  2118#	  2123	  2126	  2134	  2135
PICK3	  2097	  2136#	  2180
PICK4	  2139#	  2206
PICKLN	   174	   296	  2069	  2073	  2076	  2096	  3637	  6714#
PICKSP	    91	   297	  2074	  2079	  2083	  2085	  2137	  3639	  3643	  6715#
PIKBUF	  1392	  1411	  2095	  2120	  2128	  2172	  2175	  2195	  2198	  2230	  2256	  3254	  6020	  6178
	  6191	  6783	  6794	  6812	  6873#
PIKCCL	  2158	  2162	  2223	  6179	  6180	  6183	  6783#
PIKCNT	  2136	  2151	  2187	  2205	  2263	  2267	  2296	  3192	  3197	  6871#
PIKFIL	   114	  2215	  2302	  6780#
PIKJFN	  2219	  2249	  6872#
PIKMK1	  2196#	  2201	  2203
PIKMKE	  2197	  2205#
PIKMRK	  2091	  2193#
PIKNPM	  2088#	  6599
PIKOV1	  2160	  2213	  2222#
PIKOV2	  2220	  2223#
PIKOVE	  2164	  2234#
PIKOVF	  2121	  2129	  2173	  2176	  2199	  2210#
PIKPAD	  2119	  2170#
PIKPD1	  2172#	  2179
PIKSPS	  2138	  2184#
PNTSTT	   191	  1353	  2807	  6152	  6162#
POF	  6239
PON	  6238
POSCUR	   205	   446	   579	   791	  1012	  1254	  1258	  1288	  1568	  1575	  1727	  1730	  1975	  2054
	  2148	  2280	  2311	  2770	  3360	  3390	  3403	  3407	  3443	  3448	  3461	  3481	  3485	  3490
	  3510	  3705	  3747	  3774	  4032	  4411	  4436#	  6410	  6520
POSEND	  4434	  4437#
POSLIN	   719	  1685	  3395	  3737	  3794	  4433#
POV	  2088	  2149	  2212	  2262	  2300	  3193
PREDP	    96	  5060	  6150	  6158	  6731#
PREONE	  5051	  6732#
PRERW	  5045	  5047	  5054	  6154	  6155	  6729#
PRESET	  2951	  3034	  6150#
PRESL	  5049	  5055	  6156	  6730#
PROTOF	   463	   616	  1168	  1286	  2668	  3145	  3173	  3189	  3596	  3905	  4031	  6239#	  6308	  6379
	  6483
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

PROTON	   460	   613	  1163	  1283	  2655	  3141	  3171	  3184	  3542	  3604	  3901	  4027	  6238#	  6303
	  6376	  6480
PRSERR	  5633	  5635	  5640	  5671	  5673	  5678	  5693	  5720	  5722	  5725	  5758	  5760	  5763	  5767#
PSC	  4436
PSL	  4433
PT	   107	   110	   111	   112	   560	   562	   737	   739	   740	   741	   742	   801	   803	   814
	   815	   831	   832	   846	   847	   899	   902	   903	   904	   905	   913	   914	   915	   916
	   924	   925	   928	   929	   930	   931	   947	   966	   969	   971	  1016	  1019	  1022	  1041
	  1051	  1052	  1053	  1054	  1056	  1057	  1068	  1073	  1085	  1110	  1111	  1121	  1123	  1124
	  1135	  1140	  1152	  1174	  1175	  1177	  1178	  1184	  1185	  1186	  1187	  1189	  1203	  1204
	  1205	  1206	  1207	  1247	  1343	  1382	  1538	  1540	  1541	  1546	  1547	  1549	  1550	  1633
	  1639	  1641	  1643	  1651	  1652	  1704	  1721	  1722	  1723	  1776	  1780	  1783	  1795	  1798
	  1800	  1824	  1825	  1831	  1842	  1999	  2000	  2004	  2006	  2038	  2094	  2101	  2107	  2118
	  2122	  2130	  2171	  2177	  2196	  2200	  2323	  2433	  2434	  2435	  2436	  2437	  2441	  2498
	  2502	  2513	  2543	  2557	  2593	  2595	  2606	  2620	  2636	  2675	  2681	  2818	  3002	  3009
	  3075	  3080	  3234	  3249	  3384	  3441	  3476	  3481	  3550	  3740	  3756	  3776	  3795	  3812
	  3814	  3833	  3836	  3931	  3973	  3974	  3979	  3983	  4087	  4097	  4102	  4104	  4109	  4135
	  4137	  4150	  4152	  4154	  4160	  4169	  4174	  4175	  4177	  4178	  4179	  4181	  4190	  4191
	  4401	  4453	  4454	  4456	  4457	  4458	  4459	  4463	  4464	  4466	  4467	  4468	  4469	  4473
	  4474	  4480	  4482	  4606	  4607	  4612	  4613	  4639	  4640	  4641	  4642	  4645	  4646	  4647
	  4648	  4669	  4671	  4677	  4678	  4684	  4687	  4691	  4704	  4705	  4714	  4715	  4722	  4726
	  4738	  4747	  4748	  4750	  4752	  4755	  4758	  4768	  4771	  4776	  4787	  4789	  4890	  4907
	  5079	  5085	  5099	  5107	  5234	  5235	  5246	  5253	  5267	  5268	  5270	  5271	  5413	  5416
	  5474	  5494	  5499	  5546	  5551	  5576	  5599	  5615	  5659	  5685	  5711	  5744	  5746	  5751
	  5784	  5790	  5819	  5827	  5840	  5843	  5850	  5852	  5856	  5862	  5865	  5869	  5876	  6020
	  6054	  6059	  6060	  6061	  6438
PTMPTR	  5268	  5278	  6868#
PTRTBL	  1479	  5059	  6522#
PUCERR	  2338	  2342#
PUT	  2247#	  6575
PUT0	  2273#	  2308
PUT0D	  2279	  2289#
PUTCCL	  5271	  5287	  5292	  6800#
PUTCLS	  2261	  2329#
PUTCNT	  3718	  3721#
PUTCS1	  2333	  2337#
PUTERR	  2268	  2297	  2344#
PUTJFN	  2304	  2336	  5230	  5290	  5299	  6870#
PUTNP2	  2301	  2305#	  2340
PUTNPM	  2259	  2296#
PUTNUM	    32	  1501	  2637	  3560	  3564	  3570	  3580	  3586	  3608	  3612	  3616	  3620	  3624	  3630
	  3634	  3638	  3644	  3652	  6359#	  6362
PUTPTR	  2257	  2281	  2330	  5234	  5267	  5279	  6867#
PUTSC1	  6279#	  6285	  6297	  6310
PUTSC2	  6281	  6299#
PUTSCC	  6283	  6287#
PUTSEQ	  1595	  1699	  1983	  2601	  2663	  2665	  6237	  6240	  6243	  6246	  6249	  6251	  6257#
PUTSG1	  6267#	  6270
PUTSIX	  5788	  5817	  5821	  5851	  5872#	  5877
PUTSQ1	    32	  1499	  2629	  6259#	  6261
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

PUTSTC	  1167	  3658	  6277#
PUTSTF	  3546	  3592	  6326#	  6332
PUTSTG	    32	  1165	  1285	  1472	  3186	  3188	  3544	  3558	  3568	  3583	  3590	  3606	  3610	  3614
	  3618	  3622	  3632	  3636	  3646	  3656	  4030	  4275	  4277	  4282	  4284	  4287	  6266#	  6378
	  6459	  6463
PUTSTS	  2282	  3676	  6276#
PUTSTX	  6315#	  6321	  6461	  6482
PUTTY0	  6345#	  6348
PUTTY1	  6337	  6346	  6353#
PUTTYP	    32	   464	   617	   660	   670	   703	  1170	  1373	  1571	  1980	  1985	  3148	  3190	  3253
	  3541	  3677	  3723	  3825	  3847	  3907	  3913	  3923	  4293	  4438	  4443	  6336#	  6374	  6381
	  6464	  6484
RBKNPM	  3324#	  6593
RBLFNC	  3427	  3439#
RBLNPM	  3413	  3418	  3422#	  3437
RDO	   192	   413	   726	  1002	  1506	  1602	  1920	  1990	  2013	  2247	  2984	  2990	  4042	  4968
	  4969	  4973	  4974
RDOERR	   414	   727	  1003	  1507	  1603	  1921	  1991	  2014	  2248	  6399#
RDTMP1	  6000	  6012#
REALTB	  3688#	  6617
RECAL1	  3668	  3680#
RECALL	  2649	  3665#	  6614
REDACC	  6807#
REDCHR	  2679	  6192	  6198	  6201	  6218#
REDNO	   184	   191#	  6447
REDSW1	  6192#	  6195	  6207	  6211	  6216
REDSW2	  6205#	  6209
REDSWH	   133	  6175#
REDSWS	  6197	  6200	  6203	  6213#	  6215
REDTM1	  6023	  6029#
REDTMP	   134	  5993#
REEERR	   153	  1439	  6387#
RESET	  3495#	  6568
RESET1	  3500	  3513#
RESET2	  3509#	  3514	  3518
RESNPM	  3508	  3510#	  6568
RESTPM	  1300	  3309	  3323	  3421	  3488	  3506	  3602	  4380#	  6409
RETARG	   708#	  6582
RETIMD	   713	   724#
RETROL	   632	   718	   746	   758#
RETUR0	   710	   714#	   725
RETUR1	   719#	   760
RETURN	   712#	   790	  6582
RFLNPM	   766	  3336	  3340#	  3352	  3356	  6596
RFPNPM	  3310#	  6607
RGTARG	   681#	  6611
RIGHT	   451	   466	   478	   624#	   683	  6611
RLD	  6248
ROLBK	  3327	  3424	  3448#
ROLBK1	  3451	  3458#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

ROLBK2	  3470	  3487#
ROLBKL	  3411#	  6605
ROLBKP	  3318#	  6593
ROLFW	  3313	  3342	  3360#
ROLFW1	  1711	  3384#
ROLFW2	  3370	  3373	  3406#
ROLFWL	  3332#	  6596
ROLFWP	  3304#	  6607
ROLLDN	  3473	  6248#
ROLLIN	   180	   300	  3332	  3338	  3340	  3411	  3417	  3420	  3436	  3607	  6707#
ROLLS	  1687	  1689	  3312	  3326	  3341	  3363	  3382	  3396	  3422	  3459	  3477	  4486	  4489	  6709#
ROLLUP	  3378	  6247#
ROLPGS	   173	   298	  3304	  3308	  3310	  3318	  3322	  3324	  3611	  6708#
RPLTAB	  1527	  1632	  2254	  5313#
RSCA1A	  5903	  5906#
RSCAN0	  5892#	  5897
RSCAN1	  5895	  5899#	  5904
RSCAN2	  5918#	  5923
RSCAN3	  5909	  5913	  5919	  5921	  5925#
RSCAN4	  5968#	  5971
RSCANF	   181	  2812	  5891	  5914	  6848#
RSCANL	   135	  5890#
RST	   217	  4958	  4959
RSTNOM	   218	   291#
RTE	   141	  6390
RTX	  1434
RUBEXC	   377#	  2719
RUBSRC	   367#	  1094
RUP	  6247
RW	    35	   258	   441	   630	   631	   632	   635	   636	   637	   650	   651	   667	   715	   717
	   744	   745	   759	   764	   885	   886	   938	  1005	  1007	  1104	  1210	  1211	  1306	  1338
	  1345	  1400	  1485	  1566	  1580	  1586	  1678	  1684	  1693	  1792	  1802	  1947	  2052	  2283
	  2290	  2319	  2798	  2805	  3017	  3018	  3019	  3020	  3132	  3134	  3183	  3354	  3364	  3365
	  3366	  3367	  3405	  3453	  3462	  3463	  3465	  3495	  3549	  3552	  3702	  3736	  3742	  3793
	  3957	  4025	  4417	  4419	  4608	  4672	  4749	  4759	  4766	  4767	  4769	  4779	  5371	  5372
	  5373	  5374	  5376	  5377	  5460	  5590	  6154	  6166	  6372	  6433
SAMFIL	  2809	  6036#
SAMFL1	  6039#	  6047
SAVCPT	  3156	  5396	  6849#
SAVEAC	   830	   840	  1432	  1433	  1710	  3383	  3391	  3553	  3563	  4135	  4137	  4764	  4766	  4769
	  4842	  4845	  4869	  4871	  4881	  5171	  5186	  5197	  5371	  5376	  5391	  6287	  6295	  6387
	  6825#
SAVEDP	  1399	  2801	  2822	  2827	  3022	  3098	  6030	  6434	  6765#
SAVERW	  1400	  1401	  2798	  2799	  2805	  2806	  3018	  6432	  6433	  6764#
SAVESL	  1402	  2802	  3024	  6436	  6766#
SAVETY	    79	   228	  1374	  6920
SAVFIL	  1386	  2824	  3008	  4132#
SAVFLB	  4156	  4181#
SAVFNO	  4133	  4250#
SAVMG1	  4278	  4289#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

SAVMGN	  1465	  4261	  4273#
SAVMGS	  4134	  4280#
SAVPOS	   258	   259	  1517	  1613	  2081	  3132	  3183	  3495	  3496	  4025	  4417	  4419	  4420	  4422
	  5372	  5374	  5377	  5379	  5392	  5395	  5459	  5460	  5464	  5466	  5471	  5590	  5591	  6831#
SCN	  3335	  3343	  3353	  3416	  3428	  3452	  3924	  3955
SEDEND	  6977#
SETCR	  2954#	  2958
SETCR0	  2952	  2957#
SETCR2	  2960	  2968#
SETCRE	  3041#	  3067
SETDEL	  1880	  2216	  4351#
SETER0	  3066	  3069#
SETER1	  3071	  3080#
SETER2	  3073	  3081	  3085#
SETERR	  2831	  2840	  3065#
SETERX	  3001	  3090#
SETFIL	  2794#	  6570
SETFL1	   189	  2813	  2821	  2829#	  3032	  3068	  3084	  6450
SETFLC	  2797#	  5988
SETIN	  2303	  2335	  3113	  4327#	  6003	  6176
SETIN1	  3245	  4328#
SETLN1	  2980#	  2983
SETLNL	  2981	  2988#
SETLNO	  2966	  2970	  2975#
SETMF0	  3099	  3103#
SETMF1	  3110	  3118#
SETMFE	  3097#	  6440
SETMFL	  3010	  3101#
SETNP1	  3013#	  3016
SETNPM	  3000#	  6570
SETOUT	  1421	  1882	  2218	  4301#
SETR1A	  3078	  3082#
SETSCN	   182	  5977#
SFDS	  2795	  3011	  5729	  5987	  6421	  6745#	  6749	  6761	  6773
SL	    98	   942	   979	  1347	  1402	  1489	  1518	  1614	  1724	  2082	  2358	  2360	  2361	  2382
	  2802	  3024	  3585	  3784	  3865	  3970	  3971	  3991	  4507	  4531	  4542	  4797	  4805	  4811
	  6156	  6167	  6436
SLDFLG	    93	  2356	  2380	  4916	  6858#
SLIDEL	  2350#	  6580
SLIDER	  2372#	  6581
SLIDES	   178	   302	  2350	  2354	  2358	  2359	  2372	  2378	  2382	  2383	  3619	  6716#
SLLNPM	  2356#	  6580
SLRNPM	  2380#	  6581
SLW	  6407	  6455
SMF	  2814	  3005	  3031	  6036	  6048
SPCBEN	  1837#	  1869
SPCBF1	  1824#	  1827	  1836	  1860
SPCBF3	  1829	  1842#
SPCBTB	  1834	  1853#
SPCBUF	  1762	  1820#	  2185	  5475
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

SPCCNT	  1764	  1821	  1832	  1847	  1861	  1867	  2186	  5476	  6844#
SPSCUR	  1917	  2022	  2061#
SQUEW1	  4059#	  4062	  4065	  4070
SQUEW2	  4060	  4067#
SQUEZW	  1669	  2056	  4040#
SQZCNT	   197	  1668	  2055	  4041	  6845#
SQZVAL	   196	  4040
SRBNPM	  1039#	  6573
SRCB2A	  1064	  1068#
SRCBAK	  1035#	  6573
SRCBK1	  1051#	  1066	  1087
SRCBK2	  1071#	  1083
SRCBK3	  1048	  1054#
SRCDK1	  1161	  1169#
SRCDKY	  1058	  1105	  1125	  1160#
SRCERR	  1055	  1122	  1221#
SRCF2A	  1131	  1135#
SRCFW1	  1121#	  1133	  1154
SRCFW2	  1138#	  1150
SRCFW3	  1140#	  1141
SRCFWD	  1099#	  6594
SRCIPT	  1069	  1090#	  1136
SRCKEY	  1035	  1042	  1086	  1099	  1113	  1153	  1166	  3653	  3657	  6713#
SRCMAT	  1072	  1139	  1174#
SRCMT0	  1180	  1197#
SRCPTR	  1068	  1085	  1135	  1152	  1174	  1178	  6712#
SRCSET	  1197	  1201#
SRFNP1	  1106	  1110#
SRFNPM	  1103#	  6594
SRXERR	  1049	  1115	  1219#
SSZERR	  2877	  2994#
STACK	    77	  3965	  6411	  6700#
STARS	  6458	  6462	  6668#
START	    76#	  1443	  6977
STFERR	  2995	  3088	  5124	  5732	  5768	  6420#
STTCCL	  1414	  1415	  1422	  3107	  3116	  5996	  5997	  6009	  6010	  6794#
STTFIL	   116	  1420	  3112	  6002	  6790#
SUBTAB	   241	   270#	  3214
SUBTB1	   271#	   287
SUBTB2	   274#	   279
SUBTB3	   277	   281#
SUBTBS	   281	   285#
SVPMRK	  1792	  1793	  1802	  1803	  3702	  3703	  6832#
SWAERR	  4932	  4951	  5012	  5127#
SWCHES	  4901	  6531#	  6548
SWHADR	  4905	  6550#
SWHAG1	  5085#	  5093
SWHAGS	  5013	  5021	  5099#	  5101
SWHARG	  4941	  4993	  5000	  5031	  5079#	  5081
SWHBBB	  4926#	  6556
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

SWHBEP	  4928	  4936#
SWHCAS	  4921#	  6551
SWHER0	  5088	  5090	  5112	  5119#
SWHERR	  4904	  5002	  5004	  5014	  5022	  5032	  5043	  5120#	  5128
SWHFIL	  6175	  6801#
SWHGS1	  5107#	  5114
SWHHLP	  4982#	  6562
SWHICR	  4987#	  6563
SWHLSD	  4962#	  6553
SWHLUK	  4895	  4899	  4901#	  4903
SWHLUR	  4893	  4897	  4900	  4907#	  4909	  4926	  4947	  5008	  5029
SWHMN0	  4829#	  4833	  4840
SWHMN1	  4830	  4838	  4842#
SWHMN2	  4845#	  4886
SWHMN3	  4846#	  4862
SWHMNS	  4850#	  4853
SWHMNX	  4835	  4858#	  4864
SWHMNY	  3535	  4826#	  4848	  5747	  5973	  6210
SWHMX1	  4874#	  4879
SWHMX2	  4877	  4881#
SWHNOM	  4949	  4957#
SWHNP1	  3556	  3567#
SWHNP2	  3565	  3572#
SWHNPE	  3588	  3593#	  3654	  3659
SWHNPM	  3540#	  6583
SWHNUM	  4892	  6548#
SWHONE	  4844	  4890#
SWHOSH	  5042	  5051#
SWHPAG	  5010	  5018#
SWHPPP	  5008#	  6558
SWHPRC	  5000#	  6560
SWHRDO	  4967#	  6565
SWHRRR	  4947#	  6557
SWHSBK	  4930	  4941#
SWHSD0	  5060#	  5063
SWHSD1	  5058	  5062#
SWHSLD	  4916#	  6552
SWHST1	  3626	  3631#
SWHST2	  3640	  3645#
SWHST3	  3650	  3653#
SWHSTC	  5034	  5045#
SWHSTD	  5040	  5054#
SWHSTL	  5038	  5049#
SWHSTR	  5036	  5047#
SWHSTS	  3526	  3602#
SWHSTT	  5029#	  6559
SWHTAB	  4992#	  6550
SWHTBB	  4977#	  6561
SWHTBW	  4992	  4997#
SWHTNW	  4994	  4996#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

SWHTRM	  5021#	  6564
SWHUPP	  4918#	  6554
SWHWRT	  4972#	  6555
SWITCH	  3523#	  6583
T0	   831	   841	  1040	  1057	  1109	  1124	  1169	  1179	  1477	  1479	  1569	  1728	  1797	  1798
	  1842	  1843	  1844	  1853	  1854	  1855	  1856	  1857	  1858	  1864	  1955	  1956	  1957	  1963
	  1964	  2500	  2509	  2552	  2575	  2580	  3738	  3914	  4007	  4008	  4009	  4040	  4041	  4120
	  4121	  4122	  4152	  4158	  4167	  4177	  4828	  4831	  4843	  4849	  4851	  5106	  5114	  5547
	  5567	  5585	  5614	  5642	  5658	  5680	  5709	  5724	  5750	  5762	  5926	  5927	  5972	  5979
	  5980	  5981	  5984	  6233	  6234	  6259	  6260	  6267	  6268	  6269	  6279	  6280	  6282	  6284
	  6288	  6289	  6290	  6291	  6292	  6296	  6299	  6301	  6304	  6305	  6306	  6316	  6317	  6318
	  6319	  6320	  6327	  6328	  6329	  6331
T1	    83	    84	    85	    86	    87	    88	   100	   101	   103	   105	   106	   108	   110	   138
	   139	   142	   143	   146	   147	   150	   151	   152	   153	   154	   155	   156	   157	   158
	   160	   161	   162	   163	   168	   169	   170	   172	   173	   174	   175	   176	   177	   178
	   179	   180	   196	   197	   200	   201	   222	   224	   232	   234	   236	   239	   240	   245
	   247	   255	   261	   262	   264	   270	   272	   278	   282	   291	   293	   295	   296	   298
	   299	   300	   301	   302	   367	   377	   387	   388	   389	   393	   395	   396	   399	   400
	   401	   409	   430	   436	   439	   444	   447	   449	   455	   457	   459	   461	   462	   465
	   469	   470	   471	   472	   473	   476	   477	   493	   499	   513	   514	   515	   518	   537
	   539	   540	   541	   542	   543	   545	   546	   548	   561	   567	   568	   572	   573	   580
	   581	   583	   586	   587	   595	   596	   603	   606	   608	   612	   614	   615	   700	   701
	   733	   734	   738	   739	   782	   783	   784	   785	   786	   803	   804	   805	   807	   809
	   815	   816	   817	   819	   821	   832	   833	   834	   836	   838	   847	   848	   849	   851
	   853	   877	   879	   880	   881	   905	   906	   907	   908	   910	   916	   917	   918	   920
	   931	   932	   942	   943	   953	   954	   956	   957	   959	   971	   972	   973	  1008	  1009
	  1016	  1017	  1023	  1024	  1029	  1056	  1060	  1061	  1063	  1073	  1074	  1078	  1079	  1081
	  1090	  1092	  1093	  1111	  1112	  1123	  1127	  1128	  1130	  1140	  1141	  1143	  1144	  1148
	  1164	  1166	  1175	  1176	  1219	  1221	  1266	  1267	  1269	  1270	  1273	  1274	  1284	  1297
	  1312	  1313	  1314	  1315	  1316	  1317	  1319	  1332	  1333	  1336	  1337	  1357	  1393	  1398
	  1404	  1405	  1406	  1407	  1408	  1409	  1413	  1414	  1415	  1416	  1426	  1429	  1432	  1433
	  1441	  1442	  1478	  1479	  1480	  1481	  1482	  1484	  1491	  1492	  1493	  1494	  1497	  1498
	  1500	  1516	  1517	  1518	  1519	  1533	  1534	  1537	  1540	  1565	  1566	  1567	  1583	  1584
	  1591	  1592	  1594	  1612	  1613	  1614	  1616	  1617	  1641	  1642	  1646	  1648	  1651	  1653
	  1658	  1662	  1663	  1698	  1715	  1716	  1737	  1738	  1739	  1740	  1741	  1742	  1743	  1744
	  1745	  1746	  1747	  1749	  1750	  1753	  1754	  1764	  1765	  1780	  1781	  1782	  1789	  1790
	  1791	  1801	  1822	  1831	  1848	  1849	  1862	  1863	  1865	  1866	  1873	  1874	  1875	  1883
	  1886	  1897	  1922	  1928	  1931	  1932	  1933	  1934	  1946	  1958	  1959	  1960	  1962	  1968
	  1969	  1971	  1982	  1993	  1994	  2000	  2001	  2003	  2004	  2026	  2029	  2035	  2036	  2073
	  2078	  2079	  2081	  2082	  2083	  2093	  2099	  2102	  2103	  2111	  2112	  2122	  2123	  2124
	  2125	  2130	  2131	  2133	  2139	  2140	  2141	  2142	  2143	  2144	  2151	  2152	  2153	  2154
	  2155	  2157	  2158	  2161	  2162	  2170	  2174	  2186	  2187	  2200	  2201	  2202	  2210	  2211
	  2219	  2261	  2263	  2264	  2267	  2281	  2296	  2298	  2304	  2314	  2315	  2318	  2319	  2320
	  2321	  2329	  2330	  2336	  2337	  2339	  2342	  2344	  2398	  2399	  2400	  2401	  2402	  2403
	  2404	  2406	  2408	  2410	  2412	  2418	  2423	  2424	  2425	  2428	  2429	  2430	  2437	  2438
	  2440	  2441	  2448	  2449	  2450	  2451	  2461	  2463	  2472	  2473	  2474	  2475	  2476	  2477
	  2478	  2480	  2489	  2490	  2491	  2502	  2503	  2504	  2506	  2507	  2508	  2510	  2513	  2514
	  2515	  2517	  2518	  2520	  2529	  2530	  2531	  2532	  2533	  2543	  2544	  2545	  2547	  2550
	  2553	  2554	  2555	  2556	  2557	  2558	  2559	  2561	  2563	  2567	  2571	  2572	  2573	  2574
	  2578	  2579	  2585	  2587	  2597	  2598	  2599	  2600	  2602	  2603	  2606	  2607	  2608	  2610
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

	  2612	  2613	  2614	  2615	  2617	  2620	  2621	  2623	  2625	  2628	  2634	  2635	  2636	  2638	  2641
	  2645	  2646	  2657	  2660	  2661	  2662	  2664	  2680	  2681	  2683	  2684	  2685	  2693	  2694
	  2700	  2705	  2706	  2708	  2709	  2710	  2715	  2717	  2718	  2727	  2731	  2732	  2734	  2738
	  2740	  2741	  2742	  2743	  2746	  2747	  2748	  2751	  2754	  2755	  2756	  2757	  2758	  2759
	  2760	  2761	  2765	  2766	  2767	  2775	  2778	  2780	  2782	  2784	  2786	  2788	  2794	  2795
	  2800	  2801	  2811	  2812	  2813	  2822	  2823	  2825	  2826	  2827	  2833	  2835	  2837	  2838
	  2871	  2876	  2878	  2881	  2885	  2886	  2889	  2890	  2892	  2893	  2894	  2900	  2901	  2903
	  2904	  2905	  2906	  2909	  2947	  2954	  2955	  2956	  2957	  2961	  2962	  2963	  2964	  2968
	  2969	  2986	  2988	  2994	  3011	  3013	  3014	  3015	  3016	  3021	  3022	  3023	  3076	  3077
	  3080	  3081	  3082	  3087	  3090	  3107	  3108	  3114	  3121	  3130	  3131	  3143	  3144	  3166
	  3167	  3178	  3180	  3185	  3187	  3192	  3195	  3196	  3201	  3206	  3207	  3208	  3210	  3212
	  3213	  3216	  3217	  3234	  3238	  3239	  3240	  3248	  3292	  3293	  3295	  3298	  3335	  3345
	  3346	  3416	  3425	  3426	  3430	  3431	  3460	  3501	  3502	  3504	  3505	  3523	  3524	  3525
	  3528	  3529	  3532	  3533	  3543	  3545	  3557	  3559	  3561	  3562	  3563	  3567	  3569	  3572
	  3573	  3574	  3575	  3576	  3579	  3582	  3584	  3585	  3589	  3591	  3593	  3594	  3595	  3605
	  3607	  3609	  3611	  3613	  3615	  3617	  3619	  3621	  3623	  3625	  3627	  3628	  3629	  3631
	  3633	  3635	  3637	  3639	  3641	  3642	  3643	  3645	  3648	  3649	  3651	  3655	  3657	  3666
	  3667	  3670	  3671	  3672	  3673	  3674	  3675	  3680	  3682	  3688	  3699	  3700	  3715	  3716
	  3717	  3721	  3722	  3759	  3760	  3814	  3815	  3819	  3820	  3822	  3829	  3832	  3833	  3834
	  3836	  3837	  3845	  3846	  3852	  3855	  3857	  3858	  3879	  3886	  3887	  3900	  3902	  3903
	  3904	  3912	  3919	  3921	  3922	  3936	  3937	  3939	  3952	  3953	  3959	  3961	  3962	  3963
	  3973	  3977	  3978	  3979	  3980	  3981	  3986	  3994	  3995	  3996	  3998	  4001	  4002	  4005
	  4006	  4018	  4019	  4020	  4021	  4028	  4033	  4044	  4049	  4050	  4061	  4064	  4071	  4072
	  4074	  4075	  4078	  4081	  4092	  4093	  4098	  4099	  4104	  4107	  4110	  4111	  4114	  4116
	  4139	  4141	  4145	  4146	  4148	  4157	  4174	  4183	  4184	  4185	  4186	  4189	  4190	  4262
	  4263	  4274	  4276	  4281	  4283	  4285	  4289	  4290	  4291	  4292	  4301	  4302	  4309	  4327
	  4328	  4331	  4336	  4337	  4351	  4352	  4404	  4405	  4408	  4409	  4412	  4413	  4439	  4440
	  4441	  4586	  4587	  4588	  4589	  4590	  4591	  4593	  4596	  4597	  4598	  4599	  4600	  4642
	  4643	  4703	  4722	  4738	  4752	  4753	  4755	  4756	  4771	  4772	  4774	  4776	  4777	  4789
	  4790	  4791	  4800	  4804	  4805	  4806	  4829	  4830	  4832	  4834	  4836	  4837	  4839	  4842
	  4845	  4846	  4847	  4850	  4852	  4858	  4859	  4860	  4861	  4863	  4867	  4868	  4874	  4875
	  4876	  4878	  4881	  4882	  4883	  4894	  4898	  4902	  4907	  4908	  4910	  4911	  4927	  4929
	  4931	  4948	  4950	  5009	  5011	  5030	  5079	  5080	  5081	  5082	  5085	  5086	  5087	  5088
	  5089	  5092	  5099	  5100	  5101	  5102	  5107	  5108	  5109	  5110	  5111	  5112	  5113	  5120
	  5127	  5141	  5142	  5188	  5189	  5201	  5203	  5215	  5216	  5222	  5225	  5235	  5236	  5238
	  5239	  5246	  5247	  5253	  5254	  5255	  5257	  5258	  5259	  5260	  5261	  5284	  5285	  5286
	  5287	  5315	  5316	  5317	  5318	  5340	  5346	  5347	  5351	  5360	  5364	  5396	  5397	  5416
	  5417	  5418	  5420	  5422	  5424	  5426	  5427	  5433	  5442	  5446	  5454	  5463	  5464	  5465
	  5470	  5473	  5476	  5497	  5498	  5499	  5500	  5501	  5503	  5505	  5507	  5509	  5510	  5521
	  5528	  5539	  5549	  5550	  5551	  5552	  5553	  5554	  5555	  5556	  5558	  5560	  5562	  5564
	  5566	  5569	  5570	  5571	  5574	  5575	  5576	  5577	  5578	  5580	  5582	  5584	  5588	  5589
	  5597	  5598	  5600	  5602	  5615	  5616	  5617	  5618	  5620	  5622	  5624	  5626	  5628	  5630
	  5631	  5632	  5633	  5634	  5636	  5638	  5639	  5643	  5646	  5647	  5659	  5660	  5661	  5662
	  5664	  5666	  5668	  5669	  5670	  5671	  5672	  5674	  5676	  5677	  5681	  5684	  5695	  5700
	  5701	  5707	  5714	  5728	  5729	  5731	  5735	  5736	  5740	  5741	  5745	  5746	  5767	  5789
	  5790	  5796	  5797	  5800	  5801	  5818	  5819	  5822	  5823	  5824	  5825	  5826	  5827	  5830
	  5832	  5834	  5835	  5836	  5837	  5839	  5840	  5849	  5850	  5872	  5873	  5874	  5875	  5876
	  5892	  5894	  5896	  5899	  5901	  5902	  5906	  5907	  5908	  5910	  5912	  5918	  5920	  5922
	  5968	  5969	  5970	  5977	  5981	  5983	  5984	  5986	  5987	  5995	  5996	  5997	  5998	  6004
	  6005	  6007	  6008	  6009	  6023	  6026	  6039	  6041	  6042	  6045	  6047	  6054	  6055	  6056
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

	  6057	  6059	  6061	  6075	  6077	  6081	  6083	  6095	  6096	  6177	  6178	  6179	  6182	  6183	  6193
	  6194	  6196	  6199	  6202	  6205	  6206	  6208	  6213	  6214	  6218	  6219	  6220	  6235	  6236
	  6238	  6239	  6241	  6242	  6244	  6245	  6247	  6248	  6250	  6252	  6253	  6257	  6258	  6261
	  6266	  6267	  6278	  6279	  6287	  6293	  6294	  6295	  6296	  6300	  6309	  6315	  6316	  6326
	  6327	  6340	  6341	  6345	  6346	  6347	  6359	  6361	  6363	  6364	  6365	  6372	  6373	  6377
	  6387	  6388	  6391	  6399	  6439	  6441	  6454	  6458	  6460	  6462	  6465	  6466	  6467	  6478
	  6479	  6481	  6487	  6488	  6500	  6501	  6502	  6503	  6505	  6511
T2	   109	   111	   244	   246	   248	   249	   250	   255	   261	   263	   402	   403	   404	   424
	   425	   426	   428	   455	   456	   461	   500	   501	   502	   503	   504	   505	   506	   520
	   521	   523	   524	   525	   526	   534	   535	   562	   563	   564	   565	   690	   691	   693
	   695	   696	   697	   698	   814	   825	   846	  1015	  1019	  1071	  1072	  1076	  1077	  1081
	  1082	  1138	  1139	  1145	  1146	  1148	  1149	  1328	  1329	  1330	  1331	  1332	  1337	  1341
	  1420	  1427	  1474	  1475	  1476	  1481	  1485	  1487	  1489	  1500	  1634	  1643	  1652	  1686
	  1687	  1694	  1700	  1784	  1786	  1796	  1824	  1827	  1828	  1833	  1835	  1859	  1878	  1879
	  1887	  1896	  1954	  1958	  1967	  1968	  2092	  2101	  2102	  2107	  2108	  2109	  2110	  2113
	  2114	  2117	  2126	  2132	  2136	  2178	  2203	  2205	  2214	  2215	  2222	  2231	  2302	  2334
	  2478	  2479	  2480	  2481	  2491	  2492	  2522	  2525	  2526	  2528	  2530	  2535	  2536	  2540
	  2546	  2547	  2550	  2551	  2562	  2563	  2566	  2594	  2595	  2596	  2597	  2656	  2657	  2658
	  2659	  2666	  2676	  2711	  2713	  2879	  2880	  2881	  2882	  2883	  2896	  2898	  2957	  2958
	  2959	  2964	  2965	  2979	  2980	  3013	  3014	  3015	  3112	  3115	  3155	  3156	  3241	  3243
	  3244	  3246	  3247	  3497	  3498	  3499	  3502	  3503	  3504	  3530	  3531	  3534	  3549	  3552
	  3553	  3569	  3577	  3578	  3579	  3680	  3681	  3690	  3692	  3779	  3780	  3782	  3783	  3784
	  3785	  3816	  3871	  3872	  3877	  3888	  3889	  3894	  3896	  3914	  3971	  3972	  3988	  3989
	  3990	  3991	  3994	  3997	  4003	  4004	  4006	  4009	  4055	  4056	  4057	  4059	  4067	  4069
	  4076	  4078	  4091	  4094	  4102	  4140	  4142	  4147	  4148	  4153	  4168	  4175	  4176	  4178
	  4302	  4305	  4307	  4308	  4328	  4332	  4334	  4335	  4337	  4352	  4355	  4440	  4442	  4459
	  4460	  4469	  4470	  4506	  4507	  4508	  4517	  4518	  4519	  4520	  4521	  4522	  4523	  4525
	  4529	  4530	  4531	  4532	  4533	  4535	  4543	  4546	  4548	  4550	  4551	  4552	  4553	  4554
	  4555	  4556	  4557	  4562	  4563	  4564	  4565	  4566	  4567	  4569	  4585	  4616	  4617	  4628
	  4630	  4634	  4652	  4653	  4654	  4655	  4656	  4657	  4687	  4688	  4691	  4692	  4704	  4705
	  4708	  4710	  4711	  4714	  4717	  4718	  4720	  4727	  4728	  4732	  4733	  4734	  4735	  4736
	  4737	  4801	  4802	  4803	  4804	  4829	  4831	  4850	  4851	  4859	  4869	  4871	  4874	  4901
	  4902	  5030	  5033	  5035	  5037	  5039	  5041	  5172	  5178	  5186	  5191	  5197	  5199	  5261
	  5278	  5279	  5318	  5349	  5350	  5352	  5353	  5355	  5357	  5414	  5419	  5421	  5423	  5425
	  5428	  5429	  5431	  5447	  5448	  5451	  5452	  5453	  5477	  5478	  5522	  5523	  5529	  5530
	  5533	  5534	  5537	  5538	  5601	  5685	  5686	  5687	  5689	  5691	  5692	  5694	  5704	  5711
	  5712	  5713	  5715	  5717	  5718	  5719	  5720	  5721	  5723	  5737	  5742	  5744	  5751	  5752
	  5753	  5755	  5756	  5757	  5758	  5759	  5761	  5764	  5785	  5786	  5798	  5799	  5800	  5801
	  5803	  5804	  5805	  5806	  5807	  5808	  5809	  5810	  5816	  5820	  5833	  5838	  5847	  5855
	  5856	  5859	  5860	  5861	  5862	  5864	  5865	  5868	  5869	  5967	  5968	  5972	  5978	  5979
	  6002	  6019	  6040	  6043	  6044	  6045	  6058	  6070	  6071	  6072	  6073	  6150	  6151	  6157
	  6158	  6159	  6162	  6163	  6164	  6165	  6175	  6191	  6205	  6213	  6218	  6276	  6277	  6302
	  6307	  6360	  6423	  6425	  6427	  6429	  6430	  6431	  6434	  6435
T3	   112	   161	   164	   165	   274	   276	   278	   281	   282	   285	   533	   534	   576	   748
	   775	   776	   783	   784	   785	   802	   812	   813	   824	   859	   870	   871	   879	   880
	   939	   940	   946	  1035	  1043	  1045	  1046	  1048	  1063	  1065	  1099	  1114	  1115	  1117
	  1118	  1130	  1132	  1428	  1526	  1572	  1577	  1578	  1580	  1586	  1594	  1631	  1635	  1644
	  1646	  1656	  1658	  1663	  1675	  1690	  1691	  1693	  1698	  1738	  1739	  1740	  1741	  1742
	  1775	  1778	  1782	  1835	  1849	  1859	  1866	  1875	  1895	  1929	  1940	  1976	  1977	  1979
	  1982	  2033	  2046	  2093	  2095	  2112	  2120	  2124	  2128	  2131	  2140	  2141	  2142	  2143
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

	  2144	  2172	  2174	  2175	  2177	  2195	  2198	  2202	  2211	  2230	  2253	  2256	  2257	  2277	  2395
	  2420	  2422	  2452	  2678	  2682	  2697	  2698	  2803	  2897	  2898	  2975	  2980	  2982	  2983
	  3159	  3160	  3161	  3162	  3164	  3169	  3172	  3531	  3532	  3534	  3559	  3808	  3824	  3906
	  4053	  4054	  4059	  4061	  4062	  4063	  4088	  4096	  4154	  4159	  4179	  4504	  4505	  4511
	  4512	  4513	  4515	  4525	  4526	  4527	  4541	  4542	  4543	  4544	  4545	  4547	  4548	  4549
	  4569	  4570	  4571	  4575	  4613	  4614	  4616	  4627	  4629	  4633	  4635	  4636	  4726	  4727
	  4764	  4773	  4826	  4827	  4839	  4843	  4858	  4868	  4872	  4878	  4883	  4892	  4901	  4903
	  4904	  4905	  4942	  4943	  4944	  4995	  5001	  5002	  5003	  5005	  5015	  5023	  5045	  5047
	  5049	  5051	  5056	  5057	  5059	  5060	  5062	  5063	  5084	  5091	  5092	  5104	  5105	  5146
	  5148	  5150	  5151	  5159	  5176	  5183	  5188	  5191	  5192	  5198	  5199	  5201	  5202	  5205
	  5212	  5217	  5240	  5241	  5262	  5269	  5280	  5281	  5283	  5284	  5298	  5347	  5356	  5357
	  5361	  5452	  5462	  5469	  5478	  5488	  5490	  5491	  5497	  5537	  5549	  5570	  5574	  5708
	  5710	  5727	  5728	  5740	  5829	  5845	  5846	  5847	  5853	  5857	  5863	  6037	  6039	  6076
	  6082	  6421	  6423	  6424	  6425	  6426
T4	   107	   113	   114	   115	   116	   270	   274	   279	   280	   285	   286	   423	   485	   486
	   489	   490	   514	   517	   518	   519	   526	   532	   553	   575	   612	   614	   715	   731
	   732	   747	   759	   765	   941	   949	   950	   951	   952	   953	   963	   989	  1022	  1023
	  1042	  1043	  1071	  1086	  1113	  1114	  1138	  1153	  1201	  1202	  1211	  1249	  1294	  1295
	  1298	  1299	  1301	  1302	  1304	  1305	  1307	  1309	  1314	  1318	  1325	  1384	  1394	  1399
	  1429	  1430	  1464	  1473	  1474	  1477	  1508	  1511	  1513	  1514	  1523	  1530	  1531	  1532
	  1539	  1542	  1543	  1545	  1551	  1567	  1596	  1604	  1607	  1609	  1610	  1615	  1625	  1636
	  1655	  1659	  1677	  1678	  1679	  1680	  1684	  1694	  1706	  1707	  1709	  1710	  1783	  1796
	  1820	  1836	  1847	  1850	  1855	  1858	  1859	  1862	  1864	  1868	  1912	  1913	  1915	  1918
	  1939	  1984	  2017	  2018	  2020	  2023	  2039	  2041	  2044	  2045	  2061	  2062	  2063	  2069
	  2070	  2072	  2074	  2076	  2080	  2096	  2135	  2137	  2179	  2276	  2307	  2312	  2316	  2320
	  2321	  2350	  2351	  2353	  2354	  2372	  2373	  2375	  2377	  2378	  2419	  2420	  2421	  2453
	  2477	  2499	  2510	  2518	  2536	  2554	  2556	  2566	  2572	  2574	  2579	  2604	  2632	  2633
	  2642	  2675	  2677	  2684	  2698	  2817	  2976	  2977	  2978	  2982	  3004	  3097	  3101	  3304
	  3305	  3307	  3308	  3310	  3311	  3312	  3318	  3319	  3321	  3322	  3324	  3325	  3326	  3332
	  3333	  3337	  3338	  3340	  3341	  3360	  3363	  3364	  3372	  3379	  3381	  3382	  3383	  3387
	  3389	  3391	  3394	  3396	  3398	  3405	  3411	  3414	  3417	  3419	  3420	  3422	  3436	  3448
	  3451	  3458	  3459	  3460	  3461	  3462	  3469	  3474	  3477	  3736	  3741	  3742	  3757	  3777
	  3793	  3797	  3841	  3923	  4054	  4064	  4065	  4068	  4072	  4073	  4086	  4087	  4096	  4098
	  4107	  4120	  4276	  4283	  4382	  4389	  4414	  4465	  4472	  4483	  4486	  4487	  4488	  4489
	  4490	  4608	  4611	  4631	  4667	  4672	  4673	  4676	  4685	  4694	  4702	  4723	  4734	  4737
	  4739	  4740	  4741	  4891	  4896	  4916	  4918	  4921	  4933	  4936	  4952	  4957	  4962	  4967
	  4972	  4977	  4982	  4987	  4992	  5018	  5058	  5059	  5105	  5113	  5149	  5152	  5157	  5160
	  5161	  5162	  5163	  5164	  5171	  5173	  5175	  5177	  5185	  5189	  5190	  5193	  5198	  5200
	  5203	  5204	  5209	  5210	  5211	  5216	  5221	  5223	  5225	  5238	  5260	  5343	  5344	  5349
	  5443	  5444	  5447	  5451	  5473	  5525	  5526	  5529	  5533	  5613	  5643	  5657	  5681	  5708
	  5723	  5749	  5761	  5831	  5843	  5844	  5852	  5858	  5859	  6021	  6024	  6038	  6040	  6055
	  6058	  6077	  6078	  6083	  6085
TAB	   773#	   860	  6577
TAB0	   777	   782#
TAB1	   780	   789#	   826	   842
TABARG	   770#	  6577
TABLEN	   775	   870	  3651	  4995	  6840#
TABPTR	  1934	  4529	  4553	  6843#
TABSIZ	   521	  1931	  2108	  4535	  4547	  4711	  5315	  6841#
TABSPC	   505	   520	   522	  1935	  2035	  2105	  2109	  4534	  4546	  4710	  5313	  6842#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

TBS	  3866
TCH	   146
TERMNL	    31#	   137	   138	   140
TM	    90	   137	   141	   146	   147	   148	   160	   166	   168	   185	   186	   188	   239	   388
	   576	   745	   748	   994	   999	  1238	  1250	  1252	  1280	  1434	  1565	  1572	  1587	  1675
	  1677	  1695	  1706	  1940	  1955	  2046	  2277	  2318	  3165	  3166	  3212	  3215	  3311	  3325
	  3371	  3372	  3381	  3386	  3393	  3463	  3468	  3469	  3741	  3757	  3779	  3781	  3839	  3866
	  3989	  4007	  4390	  4397	  4406	  4433	  4436	  4437	  4439	  4798	  4801	  4937	  4938	  4963
	  4964	  5121	  6084	  6235	  6236	  6238	  6239	  6241	  6242	  6244	  6245	  6247	  6248	  6250
	  6252	  6253	  6390	  6407	  6455
TMPGET	  3120	  6022	  6054#	  6057
TMPGT1	  6025	  6055#
TOPS	     5	     6	     7	    99	   118	   143	   145	   153	   213	   224	   225	   272	   273	   311
	   368	   378	   380	   449	   450	   587	   588	   608	   609	  1069	  1089	  1136	  1267	  1268
	  1270	  1272	  1274	  1275	  1363	  1382	  1412	  1422	  1445	  1460	  1749	  1753	  1880	  1888
	  1890	  1901	  1903	  2141	  2157	  2161	  2216	  2223	  2225	  2235	  2237	  2713	  2721	  2795
	  2796	  2818	  2829	  2911	  2993	  3002	  3011	  3012	  3040	  3051	  3070	  3104	  3106	  3115
	  3201	  3202	  3235	  3256	  3346	  3349	  3431	  3434	  3946	  3948	  3953	  3954	  4074	  4147
	  4195	  4251	  4263	  4266	  4300	  4312	  4326	  4340	  4349	  5270	  5276	  5284	  5292	  5294
	  5301	  5303	  5522	  5600	  5770	  5783	  5879	  5889	  5930	  5994	  6005	  6013	  6064	  6102
	  6178	  6185	  6342	  6350	  6386	  6421	  6422	  6427	  6466	  6470	  6488	  6491	  6500	  6680
	  6736	  6739	  6756	  6771	  6816	  6853	  6932	  6935
TRAIL1	  4093	  4096#	  4105	  4108	  4117
TRAIL2	  4101#	  4118	  4123
TRAIL3	  4101	  4104#	  4125
TRAILC	  4115	  4120#
TRAILL	  4086#	  4136
TRAILX	  4100	  4107#
TRMNAM	    32	  5023	  6862#
TTXINI	  6079	  6095#
TTYINI	   136	  6067#	  6389
TTYNUM	  1427	  6073	  6814#
TY	    78	   462	   583	   615	   701	  1009	  1392	  1405	  1406	  1407	  1408	  1409	  1410	  1411
	  1413	  1424	  1492	  1494	  1584	  1592	  2592	  2603	  2614	  2617	  2625	  2635	  2646	  2647
	  2648	  2768	  2787	  3144	  3167	  3172	  3562	  3573	  3594	  3595	  3628	  3642	  3649	  3722
	  3822	  3824	  3846	  3887	  3904	  3906	  3912	  3922	  4004	  4290	  4292	  4413	  4441	  6260
	  6269	  6284	  6292	  6294	  6306	  6320	  6331	  6338	  6341	  6344	  6345	  6353	  6365	  6479
TYMCOM	    88	  5794	  6763#
TYPBUF	    32	    78	  1424	  2648	  2768	  2787	  3808	  6338	  6344	  6353	  6880#
TYPCHR	   222	  3961	  6833#
TYPSIZ	  3808	  6880
UNPARS	  2853	  3083	  5597	  5784#
UNPRS1	  5795	  5802	  5811#
UNPRSF	  5787	  5792#
UNPRSP	  5832#	  5845
UNPRSX	  5825	  5848	  5868#
UNPRSY	  5813	  5855#
UNPRY1	  5859#	  5863
UNPRY2	  5860	  5864#
UNPSP1	  5836#	  5841
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

UNPSP2	  5838	  5843#
UNPSSF	  5847#	  5853
UP	   649#	   675	  6612
UPARG	   673#	  6612
UPPFLG	    95	   392	  4918	  6859#
USRPPN	   105	  4301	  4327	  4336	  4351	  6774#
WBTAB	   868	   894#
WBTABB	   898	   938#
WBTABC	   913#	   922
WBTABE	   926	   968#
WBTABL	   911	   921	   928#
WBTABO	   897	   988#
WBTABS	   902#	   906	   909
WBTABX	   919	   924#
WBTBB1	   950#	   955	   958
WBTBB2	   953#	   990
WBTBC1	   917#	   933
WBTBE0	   969#	   972	   974	   977
WBTBE1	   970	   979#
WBTBE2	   980	   984#
WBTBL1	   934#	   962
WRH	  2255	  2299	  5213
WRP	  3781	  3839
WRTACC	  6808#
WRTNL1	  4714#	  4717	  4723	  4739
WRTNL2	  4709	  4722#
WRTNL3	  4721	  4726#
WRTNT1	  4712	  4737#
WRTNTB	  4719	  4732#
WRTNUL	  2040	  4702#
WRTNUM	  1820	  1853	  2041	  2045	  4702	  4733	  6834#
WTAB	   774	   799#
WTABC	   813#	   822
WTABCS	   818	   830#	   837
WTABCT	   820	   828#	   839
WTABS	   808	   846#	   850	   857
WTABS1	   810	   855#
WTABT	   806	   852	   859#
WTABX	   824#	   835
WTABX0	   825#	   854
WTB	   773	   867	  3647	  4996	  4997
X.X	  6908#	  6908
XBFNUM	   150	  2473	  2594	  2656	  2683	  6908
XBFSIZ	   249	   403	  6908
XCEERR	  2786#	  3457	  4485
XCKERR	  2489	  2784#
XCNAM1	  2657#	  2666
XCNEND	  2659	  2668#
XCOERR	  2462	  2780#
XCRCTL	  2611	  2624	  2628#
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

XCRDL0	  2606#	  2618	  2630
XCRDL1	  2617#	  2626	  2639	  2643
XCREND	  2607	  2645#
XCRRPE	  2632	  2641#
XCRRPT	  2622	  2632#
XCRSPC	  2609	  2620#
XCSERR	  2476	  2782#
XCT	   219	   437	   604	  1160	  2426	  2764	  3136	  3157	  3456	  3734	  3753	  3772	  3791	  3803
	  4016	  4484	  6336	  6403
XCTACR	  2429	  2450	  2709	  2757	  6722#
XCTACW	   152	   248	   402	  2423	  2428	  2461	  2481	  2492	  2493	  2499	  2593	  2767	  6720#
XCTADR	   151	  2478	  2480	  2491	  2595	  6908#
XCTASV	  2451	  2756	  2765	  6726#
XCTBF0	  6908	  6908#
XCTBF1	  6908	  6908#
XCTBF2	  6908	  6908#
XCTBF3	  6908	  6908#
XCTBF4	  6908	  6908#
XCTBF5	  6908	  6908#
XCTBF6	  6908	  6908#
XCTBF7	  6908	  6908#
XCTDN1	  2753	  2764#
XCTDN2	  2766	  2768#
XCTDUN	  2712	  2751#
XCTEND	  2442	  2464#	  2483	  2494	  2582
XCTERR	   253	   407	  2788#
XCTGET	   220	  2705#	  2716	  2725	  2744	  2746	  2749	  2762
XCTGRP	  2733	  2738#
XCTGRX	  2739	  2746#
XCTGT1	  2707	  2731#
XCTGTE	  2708	  2727#
XCTISV	  2453	  2758	  6723#
XCTITR	    92	  2421	  2459	  2697	  2759	  6718#
XCTKIL	  2407	  2488#
XCTNAM	  2474	  2477	  2490	  2597	  2657	  2684	  6908#
XCTNML	  2413	  2653#
XCTNSV	  2452	  2760	  6724#
XCTNUM	  2422	  2460	  2711	  2761	  6717#
XCTPSV	  2446	  2449	  2752	  2754	  2776	  6725#
XCTPTR	  2430	  2448	  2705	  2710	  2731	  2740	  2742	  2748	  2755	  6721#
XCTPTW	   246	   247	   250	   399	   401	   404	  2433	  2463	  2694	  3692	  6719#
XCTRD1	  2679#	  2682
XCTRD2	  2680	  2683#
XCTRDL	  2411	  2592#
XCTRED	  2471	  2488	  2675#
XCTRPR	  2743	  2747	  6728#
XCTRPT	  2738	  2741	  6727#
XCTSET	  2405	  2470#	  4870
XCTST1	  2472	  2480#
XCTWRT	  2409	  2498#	  4884
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Symbol cross reference

XCWCM1	  2522#
XCWCMD	  2505	  2513#
XCWEND	  2503	  2578#
XCWERP	  2580	  2587#
XCWERR	  2532	  2551	  2585#
XCWGET	  2523	  2524	  2539	  2543#
XCWRP1	  2557#	  2564
XCWRP2	  2560	  2566#
XCWRPE	  2509	  2571#
XCWRPT	  2521	  2550#
XCWRT1	  2502#	  2511	  2568	  2569	  2576
XCWRT2	  2510#	  2516	  2519	  2534	  2537
XCWRT3	  2527	  2539#
XCWRT4	  2529#	  2541
XCXERR	  2425	  2778#
XPB	   195	   516	   550	   571	   729	  1107	  1216	  1245	  1308	  1348	  1349	  1529	  1628	  1773
	  1924	  1997	  2030	  2193	  2275	  2309	  3027	  3361	  3440	  3449	  3479	  3762	  3763	  4080
	  4399	  6031	  6153	  6169	  6437
XPC	   624	   629	   634	   644	   649	   668	   716	   788	   799	   869	   894	   935	   985	  1026
	  1192	  1214	  1215	  1308	  1339	  1348	  1349	  1773	  1936	  1945	  1995	  1997	  2051	  2193
	  2366	  2386	  3027	  3365	  3467	  4080	  4418	  4421	  4499	  4649	  5320	  5378	  5393	  5398
	  5467	  5470	  6031	  6153	  6168	  6437
XPL	   629	   634	   649	   668	   716	   896	  1013	  1192	  1214	  1215	  1308	  1348	  1773	  1945
	  2051	  2193	  2273	  3027	  3365	  3467	  3515	  4080	  4418	  4501	  4649	  4668	  5378	  5398
	  6031	  6153	  6168	  6437
XSV	   243	   252	   398	   406	  2431	  2458	  2470	  2691	  3691
XSXERR	  2447	  2775#
%CNMNT	    83
.AXCFS	  6095
.CNT10	    87
.GTAUN	   100
.GTFPN	  3238
.GTNM1	  5803
.GTNM2	  5807
.GTPPN	  5798
.IOBIN	  6096
.IOPIM	  6067
.JBAPR	    34#	   156
.JBREL	    34#	  2894	  2897	  4076	  4147	  6501
.JBREN	    34#	   154
.JBTPC	    34#	  6506
.RBEXT	  2887	  3045	  3072	  3082	  5605	  5657	  5820
.RBNAM	  5604	  5613	  5646	  5648	  5816
.RBPPN	  2832	  2838	  5603	  5797	  5823
.RBPRV	  2888	  3046	  5606
.RBSIZ	  2871
.TOPAG	  1426	  6081
.TOPBS	  6075
.TOSET	  1426	  6075	  6081
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Macro/Opdef cross reference

APRENB	   158
AUXCAL	  6096
CLOSE	  1363	  1460	  4173
CLRBFI	  5925
CMDS	  6626
CORE	  2890	  2901	  6503
ENTER	  3043	  4181	  4305
EXIT	  1438
GETPPN	   103
GETTAB	    84	   101	  3239	  5799	  5804	  5808
HALT	  1443	  2891	  2902	  3042	  3044	  4151	  4161	  4182	  4304	  4306	  4354	  6068
HIBER	   143	  1270	  3346	  3431	  4263	  6467	  6488
IFDEC	  2841	  2855	  3236	  5649	  6089	  6343
IFTYM	     8	  3238	  6094	  6344
INCHRS	  1090	  2715	  5892	  5899	  5908	  5918
INCHRW	   224	   272	  3201	  3953
INPUT	  2907	  3116	  3250	  5292	  6010	  6180
IONEOU	   449	   587	   608	  1267	  1274	  2714	  6347
LOOKUP	  2839	  4162	  4169	  4332	  4355
OPEN	  1364	  1461	  2830	  3041	  4150	  4160	  4303	  4329	  4353	  6067
OUTPUT	  1422	  1888	  2223	  3047	  4187
OUTSTR	  3254
PJOB	   106
PJRST	  1587	  1980
RELEAS	  1423	  1435	  1901	  2235	  2908	  3048	  3117	  3251	  4166	  4193	  4359	  5301	  6011	  6181
RENAME	  4164	  4171	  4191	  4357
RESCAN	  5890
RUN	  1442
SKPINC	  3946
SKPINL	  1369
TMPCOR	  1416	  3108	  5998
TOPS10	     5	    99	   143	   153	   213	   224	   272	   378	   449	   587	   608	  1069	  1089	  1136
	  1267	  1270	  1274	  1363	  1382	  1412	  1422	  1460	  1749	  1753	  1880	  1888	  1901	  2141
	  2157	  2161	  2216	  2223	  2235	  2713	  2795	  2818	  2829	  2993	  3002	  3011	  3040	  3070
	  3106	  3115	  3201	  3235	  3346	  3431	  3946	  3953	  4074	  4147	  4263	  4300	  4326	  4349
	  5270	  5284	  5292	  5301	  5522	  5600	  5783	  5889	  5994	  6005	  6064	  6178	  6342	  6386
	  6421	  6427	  6466	  6488	  6500	  6739	  6756	  6771	  6932
TOPS20	     6	   118	   145	   225	   273	   311	   368	   380	   450	   588	   609	  1268	  1272	  1275
	  1445	  1890	  1903	  2225	  2237	  2721	  2796	  2911	  3012	  3051	  3104	  3202	  3256	  3349
	  3434	  3948	  3954	  4195	  4251	  4266	  4312	  4340	  5276	  5294	  5303	  5770	  5879	  5930
	  6013	  6102	  6185	  6350	  6422	  6470	  6491	  6680	  6736	  6816	  6853	  6935
TOPS30	     7
TRMNO.	  6071
TRMOP.	  1430	  6078	  6085
USETI	  3249
X	  6624#	  6627	  6628	  6629	  6630	  6631	  6632	  6633	  6634	  6635	  6636	  6637	  6638	  6639
	  6640	  6641	  6642	  6643	  6644	  6645	  6646	  6647	  6648	  6649	  6650	  6651	  6652	  6653
	  6654	  6655	  6656	  6657	  6658	  6659	  6660	  6661	  6662	  6663	  6664
XBFADR	  6883#	  6908
XBFBUF	  6886#	  6908
SED - Screen Editor	MACRO %53B(1155)-2 17:06 16-Oct-85 Page 1
SED	MAC	21-May-74 00:04		A CHRISTOPHER HALL FECIT


Macro/Opdef cross reference

XCTDEF	  6889#	  6908   i P