comment
!
! Program name:		GENSAT
!
! Abstract:		This program creates the files needed to
!			generate the node image for a MicroSat:
!				CGxxxx.MAC (configuration file)
!				RUxxxx.MAC (routing file)
!				MCxxxx.CMD (MACN11 command file)
!				LKxxxx.CMD (LINK11 command file)
!
! Author:		
!
! Editing history:	02/25/82  GMT
!			  Add options for DZ ports, WS8 for Link H,
!			  support for PVC's, block mode terminals.;

begin	"GENSAT"
define	!	=	"comment",	CRLF	=	"('15&'12)",
	BEL	=	"('7)",         PVERS   =	"""1.1""";
boolean flag,
	blkmode,
	pvc,
	tiflag,
	crflag;
string	instr,
	cg,
	base,
	ru,
	mc,
	lk,
	v,
        wm,
        dbrk,
	soc,
	sat,
        bd,
	str,
	str1,
	tid,
	lino,
	login,
        bdfil;
integer	i,
	j,
	k,
	kk,
	csr,
	vect;
external
boolean	!SKIP!;

BOOLEAN PROCEDURE yes(STRING prompt);
BEGIN "yes"
  BOOLEAN notcompleteyet;
  STRING tmpstring;
  notcompleteyet := TRUE;
  WHILE notcompleteyet DO
    BEGIN
      PRINT(prompt);
      tmpstring := INCHWL;
      IF tmpstring[1 TO 1]="Y"
        THEN
          BEGIN
            RETURN(TRUE);
            DONE
          END
        ELSE
          IF tmpstring[1 TO 1]="N"
            THEN
              BEGIN
                RETURN(FALSE);
                DONE
              END
    END
END "yes";

PROCEDURE erasefiles(INTEGER i,j;STRING ru,lk,cg,mc);
BEGIN "erasefiles"
  BOOLEAN notcompleteyet;
  STRING tmp;
  notcompleteyet := TRUE;
  WHILE notcompleteyet DO
  BEGIN
    PRINT("Okay to rewrite files <Y,N> ? ");
    tmp := INCHWL;
    IF ((tmp[1 TO 1]="N")OR(tmp[1 TO 1]="n"))
      THEN
        CALL(1,"EXIT")
      ELSE
        BEGIN
          LOOKUP(i,ru,j);
          RENAME(i,NULL,0,j);
          CLOSE(i);
          LOOKUP(i,cg,j);
          RENAME(i,NULL,0,j);
          CLOSE(i);
          LOOKUP(i,lk,j);
          RENAME(i,NULL,0,j);
          CLOSE(i);
          LOOKUP(i,mc,j);
          RENAME(i,NULL,0,j);
          CLOSE(i);
          DONE
        END
    END
END "erasefiles";

PROCEDURE purgefiles(INTEGER i,j;STRING ru,lk,cg,mc);
BEGIN "purgefiles"
  BOOLEAN notcompleteyet;
  notcompleteyet := TRUE;
  WHILE notcompleteyet DO
    BEGIN
      LOOKUP(i,ru,j);
      IF NOT j
        THEN
          BEGIN
            CLOSE(i);
            erasefiles(i,j,ru,lk,cg,mc);
            DONE
          END;
      CLOSE(i);
      LOOKUP(i,cg,j);
      IF NOT j
        THEN
          BEGIN
            CLOSE(i);
            erasefiles(i,j,ru,lk,cg,mc);
            DONE
          END;
      CLOSE(i);
      LOOKUP(i,lk,j);
      IF NOT j
        THEN
          BEGIN
            CLOSE(i);
            erasefiles(i,j,ru,lk,cg,mc);
            DONE
          END;
      CLOSE(i);
      LOOKUP(i,mc,j);
      IF NOT j
        THEN
          BEGIN
            CLOSE(i);
            erasefiles(i,j,ru,lk,cg,mc);
            DONE
          END;
    DONE
    END
END "purgefiles";

! GENSAT - MICROSAT node generation program;
flag := TTYUP(TRUE);
outstr("** GENSAT - Tymshare/Version "&PVERS&" **"&CRLF&crlf);
while true do
  begin	outstr("Node (>= 1000) = ");
	if cvd(instr _ inchwl) geq 1000 then done
	else outstr(BEL&"[Wrong, Enter node number > 1000]"&CRLF);
  end;
open(i _ getchan, "DSK", 0, 0, 1, 0, j, j);
if not !SKIP! then
  begin	outstr(CRLF&"[Can't open DSK]"&BEL);
        call(1,"EXIT");
  end;
cg _ "cg"&instr&".mac";
ru _ "ru"&instr&".mac";
mc _ "mc"&instr&".cmd";
lk _ "lk"&instr&".cmd";
purgefiles(i,j,ru,lk,cg,mc);
lookup(i,ru,j);
enter(i,ru,j);
if j then
  BEGIN
    PRINT("Can't write "&ru&"!"&bel);
    CALL(1,"EXIT")
  END;
cprint(i,
  "; Network map file for node "&instr&CRLF&
  ".macro route"&CRLF&
  "       node    "&instr&CRLF&
  "       hpath   TYMNET,*"&CRLF&
  ".endm"&CRLF);
close(i);
lookup(i,mc,j);
enter(i,mc,j);
if j then
  begin	outstr(CRLF&"[Can't write "&mc&"]"&BEL);
	call(1,"EXIT");
  end;
cprint(i,
  "cg"&instr&".OBJ=xp.mac,"&cg&",common.mac"&CRLF&
  "ru"&instr&".OBJ=xp.mac,"&cg&","&ru&",route.mac"&CRLF);
close(i);
lookup(i,cg,j);
enter(i,cg,j);
if j then
  begin	outstr(CRLF&"[Can't write "&cg&"]"&BEL);
	call(1,"EXIT");
  end;
cprint(i,
  "; Configuration file for node "&instr&CRLF&
  ".sbttl "&cg&" - Tymshare"&CRLF&
  ".macro config"&CRLF&
  "	define JIFSEC,60."&CRLF&
  "	define FSCCSR,176504"&CRLF&
  "	define FSCVEC,304"&CRLF&
  "	name   "&instr&CRLF&
  "	tymsat"&CRLF);

while true do
  begin	outstr("Neighbour node = ");
	if not equ(lk _ inchwl,NULL) then done
	else outstr(BEL&"[Wrong, Enter neighbour node number]"&CRLF);
  end;
while true do
  begin	outstr("Sync line speed (2400,4800,9600) = ");
	if equ(ru _ inchwl,"2400") then ru _ "1"
	else if equ(ru,"4800") then	ru _ "2"
	  else if equ(ru,"9600") then	ru _ "4"
	    else 
	      begin outstr(BEL&
               "[Wrong, Enter sync line speed(2400,4800,9600)]"&CRLF);
		continue;
	      end;
	done;
  end;
while true do
  begin	outstr("Number of TYMNET line groups = ");
	if not equ(cg _ inchwl,NULL) then done
	else outstr(BEL&"[Wrong, Enter number of groups]"&CRLF);
  end;
while TRUE do
  begin outstr("Tymnet packet format <N,S> ? ");
  if equ(sat _ inchwl,"N") or equ(sat,"S")
  then done;
  end;
If yes("Are any of the terminals block mode terminals <Y,N> ? ")
  then blkmode := TRUE
  else blkmode := FALSE;
while true do
  begin	outstr("Number of DZV-11 modules < 1 to 4 > = ");
	if equ(mc _ inchwl,"1") or equ(mc,"2") or equ(mc,"3") or
	   equ(mc,"4") then
	  begin	j _ cvd(mc);
		done;
	  end
	else outstr(BEL&"[Wrong, Enter 1 to 4]"&CRLF);
  end;
cg _ cvs(cvd(cg) * 16);
soc _ cvs(j * 4 + 1);
If blkmode then
  cprint (i, "	define TRMPLM	80."&CRLF);
cprint(i,
"	link TYMNET,0.,TF,"&soc&".,S,H,<"&instr&">"&CRLF&
"	 lnkl "&cg&".,"&lk&","&ru&","&sat&",A,<160010,400,5>"&CRLF&
"	hcl A,<TYMNET>"&CRLF&
"	linx A,<177560,60>"&CRLF&
"	 line 1,F,  300,,SAT,CRT,ASC,TYMSHR,N,N,Y,N,Y,HW,A,377"&CRLF);
csr _ 100;
vect _ 440;

For k := 1 step 1 until j do
  begin
    str _ cvs(k);
    Print("For DZV-11 module #"&str&":"&CRLF);
    While TRUE do
    Begin
      outstr("  Dialups or hardwires <DU,HW> ? ");
      wm := INCHWL;
      If equ(wm,"DU") or equ(wm,"HW")
      then DONE;
    End;
    While TRUE do
    Begin
      outstr("  TID or BRK/CR selectable <TI,CR> ? ");
      tid := INCHWL;
      If equ(tid,"TI") or equ(tid,"CR")
      then DONE;
    End;
    If yes("  Disconnect on break key <Y,N> ? ")
      then
        dbrk := "Y"
      else
        dbrk := "N";
    If equ(tid,"TI")
      then
        begin bd := "7";
 	      tiflag := TRUE;
        end
      else
        begin bd :="3";
	      crflag := TRUE;
        end;
    if yes("  Are PVC's supported <Y,N> ? ")
      then pvc := TRUE
      else pvc := FALSE;
    str := cvs(csr);
    str1 := cvs(vect);
    cprint(i,
    "	linx B,<160"&str&","&str1&">"&CRLF);
    For kk := 1 step 1 until 4 do
      Begin
        lino _ cvs((k-1) * 4 + kk + 1);
        cprint (i,
          "	 line "&lino&".,A,"&bd&",,SAT,CRT,ASC,TYMSHR,N"&
          ",N,Y,N,"&dbrk&","&wm&",A,200"&CRLF);
        if pvc then
          begin
            str _ cvs(kk);
            if yes ("    For line #"&str&" <Y,N> ? ")
            then begin outstr("    Login string = ");
                       login _ inchwl;
                       cprint (i,"	  PVC	<"&login&">"&CRLF);
                 end;
          end;
      end;
    csr _ csr + 10;
    vect _ vect + 10;
  end;
cprint(i,".endm"&CRLF);
close(i);
lookup(i,"LK"&instr&".CMD",j);
enter(i,"LK"&instr&".CMD",j);
if j then
  begin	outstr(CRLF&"[Can't write "&lk&"]"&BEL);
	call(1,"EXIT");
  end;
BASE := INSTR;
bdfil _ null;
if tiflag then bdfil _ bdfil&",auto7";
if crflag then bdfil _ bdfil&",auto13";
cprint(i,
"sv"&base&"/img/b:21000,MP"&BASE&"=cg"&base&",ru"&base&","&CRLF&
"exec,error,pkt1,pkt2,pkt3d,"&CRLF&
"cmdsat,cmdsst,trmst,trmfst,trmpst,"&CRLF&
"trmtst,zapbuf"&bdfil&",xltcrs,xltebc,"&crlf&
"lnk1,lnk2,lnkha,lkhst1,lkhst2,lkhst3,"&CRLF&
"tyma,linast,linbst,once,end"&CRLF);
close(i);
release(i);
call(1,"EXIT");
END "GENSAT"

 