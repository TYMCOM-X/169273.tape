
Closed User Group Project			7/8/82		Anna Tu

						Referencens:
						Recomm. X.25	7.1.9 - 7.1.13
								7.4.2.1
						Recomm. X.75	5.3.7, 5.3.8
						Recomm. X.87	1.
								Fig. 1/X.87
								Fig. 2/X.87

I.  Introduction

    Closed user group (CUG) is an optional user facility agreed for a
period of time.  This facility , if subscribed to, enables the DTE to
belong to one or more CUG's.  A CUG permits the DTE's belonging to the
group to communicate with each other, but precludes communication with
all other DTE's.

    The calling DTE specifies the closed user group selected for the
call using the CUG facility parameters in the call request packet.  The
CUG selected for a virtual call will be indicated to a called DTE using
the same facility parameter in the incoming call packet.  When a DTE
only belongs to one closed user group or when the call is associated
with the DTE's preferential closed user group, this indication may not
be present.

    Closed user group with outgoing/incoming accesses are optional user
facilities agreed for a period of time.  These facilities, if subscribed
to, enable the DTE to belong to one or more closed user groups and to
originate/ receive calls in the open part of the network and to DTE's
having the incoming/ outgoing access capabilities.  The CUG facility
parameters may not be present when originating/receiving calls in the
open part of the network or to DTE's having the incoming/ outgoing
access capabilities.

    Incoming/Outgoing calls barred within a closed user group are
optional user facilities agreed for a period of time for a given CUG.
The former facility permits the DTE to originate calls to DTEs in this
CUG, but precludes the reception of incoming calls from other DTEs in
this CUG.  The latter facility permits the DTE to receive calls from
other DTEs in this CUG, but prevents the DTE from originating calls to
other DTEs in this CUG.

In X.25, the coding of this CUG facility is as follows:
	
	code:		00000011
	parameter:	CUG index xx, where xx is a two-digit a binary coded
			decimal less than 99d.

In X.25 the coding of the closed user group indication utility and the
closed user group indication with outgoing access indication are as follows:

	code:		11000011	for CUG indication
			11000111	for CUG with outgoing access indication
	parameter:	four octets of interlock code
			1,2	4-digit DNIC, binary coded decimal
			3,4	16 bits of interlock code


II. Options

1.  Specifying modification of CUG parameters by XOM

Option:	CUGCODE(sw)

	sw	if ON, the XOM may be used to add and modify all the CUG
		related options, even for links which do not have any CUG
		specification in the tymfile.
		if OFF, the XOM may not add or modify any CUG parameters
		DEFAULT	OFF

2.  Specifying maximum CUG index for all links

Option:	MAXCUGINDEX(maxindex)

	maxindex	maximum index value specified in decimal
			must be less than 99d
			DEFAULT	32d

This value may not be modified by XOM.

3.  Specifying CUG subscriptions ... incoming access and/or outgoing access
    and handling of the facility; all can be modified by XOM.

Option:	CUG(+/-subscription, +/- outgoing, +/- incoming)

	+subscription subscribed to CUG facility.  For X.75, subscription means
		that CUG indication from the x-link does not cause clearing of
		the call, and the call is cleared if the destination
		is not another STE or a packet mode DTE.  Also, CUG indication
		from the network is passed to the STE across the x-link.
		(flag: CUS.F)
	-subscription not subscribed to the CUG facility
		For X.75, this means that CUG indication from the x-link
		will result in clearing of the call with cause: xxx, diag:yyy.
		A CUG indication from the network will be removed and 
		not passed to the STE.
	+outgoing	subscribed to CUG with outgoing access (flag: CUO.F)
	-outgoing	not subscribed to CUG with outgoing access
	+incoming	subscribed to CUG with incoming access (flag: CUI.F)
	-incoming	not subscribed to CUG with incoming access

4.  Specifying interlock code mapping for each CUG index, incoming calls barred
    and/or outgoing calls barred options

Option:	CUGROUP(index,icodea,icodeb,+/-ICB, +/-OCB)

	index	CUG index, < maximum
	icodea	DNIC  portion of the interlock code
		(1 for national CUG, 2000-7999 for international CUGs)
	icodeb	the rest of the interlock code, specified in decimal
	+ICB	incoming calls barred
	-ICB	incoming calls not barred
	+OCB	outgoing calls barred
	-OCB	outgoing calls not barred

	Note the switch options ICB and OCB are order dependent, but optional.

5.  Specifying the preferential CUG

Option:	CUGPREF(index)

	index	index of the preferential CUG
		DEFAULT	the CUG specified by index 0

III. Implementation


1.  symbols created from option statements

CUGCODE defines symbol CUGCOD.

MAXCUGINDEX defines symbols MCU.ll, for link ll

CUG  defines for each link:
	CUS.F	for CUG subscription
	CUO.F	for out going access
	CUI.F	for incoming access

The CUGROUP macro provides:
	Cll.Uii	CUG interlock code for link ll, index ii, 0 if no specification
	Ill.Bii	incoming calls barred bit for link ll, index ii
	Oll.Bii outgoing calls barred bit for link ll, index ii


The CUGPREF macro provides CUP.ll, the preferential CUG index for link ll.


2.  table set up

a.  accessing the interlock code from index ii for link ll

    Interlock codes are stored consecutively by index for each link.
CUGBIA has the beginning address of the list for each link.
Interlock code of zero indicates the absence of CUG for that index.
Only when CUGCOD=1 can the XOM modify the values of interlock code, ICB/OCB bit
arrays and preferential CUG's.
When CUGCOD=1, reserve the default value of index space for links which
do not have CUG specification in the tymfile.

Example:	3 links, links 0 and 2 have CUG spec, 1 does not, CUGCOD=0

CUGBIA	HC	CUG.0		:LINK 0 HAS CUG
	HC	0		:link 1 DOES NOT
	HC	CUG.2		:BEGINNING link 2 AREA

CUGTAB	HS	2		:NO INDEX 0
CUG.0	HS	0		:BEGINNING OF link 0 CUG AREA
	WC	C|0|.U|0	:INDEX 0, LINK 0|
	WC	0		:INDEX 1, LINK 0 HAS NO INTERLOCK CODE
	.	(RESERVE MCU.0 ENTRIES)
	.
CUG.2	HS	0		:BEGINNING OF link 3 AREA
	WC	C|0|.U|2|	:INDEX 0, LINK 1
	.
	.	(RESERVE MCU.2 ENTRIES)


b.  accessing ICB/OCB bit arrays

ICB/OCB bit arrays for each link can be accessed through reference to ICB.F,
OCB.F. To get to a particular link, multiply the linK number by CUG.SC for an
offset.  The length of the arrays (CUG.MX bits) are rounded to a power of two.
Links not specifying CUG when CUGCOD=0 will still have space reserved in
this scheme. An alternative way is to have indexes to ICB, OCB array for each
link as well.


3.  Receiving call request from the x-link, facility processing (x.25)

    When the user is not subscribed to any CUG, call request containing
CUG indication will be cleared .
When there is no corresponding interlock code assigned to that index,
the call is cleared with cause: xxx, diag: yyy when there is no outgoing
access.

Detail:	At the beginning of call request processing, set (TEMP)=-1, and reset
	CUGCAL.  This will  be used to store any CUG index appearing in the
	call request packet.  An interlock code conversion will be done later
	and sent to the network in the form of utility escaped message.
	The following discussion applies to X.25 only.
	Call request processing is divided to the following 5 cases:

a.  CUS.F=0
	If no CUG facility present, this is just an ordinary call.
	Else clear the call with cause: invalid facility request, diag: 65.

c.  call request with CUG indication, CUS.F=1, CUO.F=0

	Store the CUG index in (TEMP).

d.  call request with no CUG indication, CUS.F=1, CUO.F=0
	This is the case where we have to use preferential CUG (pcug).

e.  call request with no CUG indication, CUS.F=1, CUO.F=1

	Select preferential CUG (pcug) as in d.
 
f.  call request with CUG indication, CUS.F=1, CUO.F=1

	Same as c.

	By the end of facilities processing, all received facilities are copied
	to facilities buffer, including any CUG facility indication.
	If CUS.F=0, do nothing. Set index= (TEMP). f index <0, ie., have not
	received any CUG facility indication, get index = the preferential CUG
	from PCU.(RL).
	Use CUG index (i) to get the corresponding interLock code (ic) :

	ic = [CUGTAB+CUGBIA(rl*2) +(4*i) ]

	If ic=0, clear the call with cause: local procedure error, diag: 66.
	Else check OCB bit array, obtained from bit position i from
	OCB.F + (RL^CUG.SC); if it is 1, clear the call with cause: invalid
	facility request,diag: 65.  Else write an escaped utilities message
	to the facilities buffer containing a CUG indication utility with or
	without outgoing access depending of value of CUO.F.
	Set CUGCAL=1.

    At connect time, if the destination is not XCOM, or the turkey level
established is less than 1, clear the call with cause: incompatible destination
diag: 189 if CUGCAL=1.

4.  Receiving call request from the x-link, processing of CUG indication for
X.75

	CUG utility is passed on transparently to the network in the form
	of escaped messages if the X.75 subscribes to CUG facility.

	Clear the call if CUG facility is found in the facility field of the
	call request packet.

	Clear the call if the DNIC portion is not in the 2000-7999 range.

	Clear the call if the calling DNIC cannot use the CUG because
	of administrative problems.

	Similarly, clear the call if the destination is not another XCOM
	or turkey level established is not greater than level 1.

5.  Receiving CUG indication from network utility escaped message 

	If an X.75, pass CUG utility depending on whether subscribed to
CUG facility or not.  If we are an X.25, the following processing applies:

a.  CUS.F=0
	If no CUG indication, then it is an ordinary call.
	If CUG indication with no outgoing access, clear the call with
	cause:access barred, diag: 182.
	Else if CUG indication with outgoing access, handle as an ordinary
	call. Note that no checking of interlock code is done here.
	Hence there would be no CUG facility in the incoming call.
b.  CUS.F=1, CUI.F=0
	If CUG indication is not present, clear the call
	with cause: local procedure error, diag: 187.
	Else, search the CUG list for a mathing interlock code.
	  If match not found, clear the call with cause:
		local proc error, diag:187.
	  Else check its ICB bit.
		If=1, clear the call with cause:xxx, diag: yyy,
		Else format a user facility using the found index to be
		     sent in the incoming call.

c.  CUS.F=1, CUI.F=1
	If no CUG indication, handle as an ordinary call.
	If CUG indication with outgoing access, handle as an ordinary call.
	( do we do the interlock code translation?)
	If CUG indication without outgoing access, get the corresponding CUG
	index from the table and send a CUG user facility using that index if
	the corresponding ICB bit=0.  If its ICB bit=1, or if no match was
	found, clear the call with cause: access barred, diag: 183.


6.  Receiving CUG from user facility escaped message
	CUG facility is stripped and not passed to the incoming call.
   