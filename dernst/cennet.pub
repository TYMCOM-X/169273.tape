.JOURNAL;
.EVERY HEADING(,,);
.EVERY FOOTING(,{PAGE!},)
.BLANKLINE;
.SINGLE SPACE;
.INDENT 5;
.TURN ON "";
.TURN OFF "-";
.FOOTSEP _ "______________";
.HALFLINENODE _ TRUE;
.VARIABLE AAAAA
.AT "-" AAAAA " "
. $( IF LENGTH ("AAAAA") > CHARS THEN  "- "  ; ; "AAAAA "  )$ ;
.PLAINNOTENUMBER _ TRUE;

.BEGIN CENTER;
.group SKIP 22;
CENTRALIZED ROUTING IN VIRTUAL CIRCUIT DATA NETWORKS
.skip 3
{date}
.skip 3
Dennis Ernst
.apart; end;
.PAGE FRAME 60 HIGH 80 WIDE;
.AREA TEXT LINES 4 TO 57 IN 2 COLUMNS 6 APART;
.TITLE AREA HEADING LINES 1 TO 3
.TITLE AREA FOOTING LINE 60;
.PLACE TEXT;
.once center;
Abstract

The cost, implement-ation diffi-culty, and operational maintenance of a 
data network are influenced by the underlying structure of the network.
This paper describes the advantages of a virtual circuit with
central routing control over networks with
distributed routing control.
The natural division between routing control functions and data transfer
allows the use of different computers, control programs and design
philosophy at the appropriate parts of the network.
Simpler computers and simpler programs can be used in the
data transfer nodes
of the network to increase reliability.  The routing processors can
be more specialized
machines running a more complicated set of programs to provide
better routing.  An addit-ional advantage of the concen-tration of
routing information in the routing processors is a simpli-fication of
the network management problem.


.skip 3
.IF LINES < 5 THEN SKIP 7
.once center;
Introduction

Much of the computer science research in data networks over the past
fifteen years has been devoted to the ARPAnet style network with distributed
routing control.  Although much has been learned about such networks, the
effect has been to ignore the advantages of virtual circuit data networks
that use centralized routing control.  Virtual circuit networks which have
relatively static routing for the duration of a call
 have several distinct advantages
over both networks with an internal datagram structure and virtual circuit
networks with static ("table driven") routing.

.skip 3
.IF LINES < 5 THEN SKIP 7
.once center;
Some_definitions

A number of very specialized terms have already used in ways that
may be new to those of you who have different backgrounds and views.
The term virtual circuit is used to mean a data connection
between two host computers (DTEs in CCITT terms) which
consists of a call establishment phase, a data transfer phase, and
a call termination phase.  During the call establishment phase, the
destination
is described by a global address. The term global means that
all nodes that know of the destination use the same identifier.
During the 
data transfer and call termination phases the destination is
described in terms of the local connections within the network.
This description of a virtual circuit does not imply a particular
implementation in the data network, as there are many that have the
external characteristics described.

The routing of data through the data network can be done in one of
several ways to implement virtual circuits.
.list (-4,4,0,"a)");
.item;
The path through the network may
be determined ahead of time by analysis of the interconnection of the nodes
in the network and incorporated into the programs running in each node.
This is referred to as static routing.
.item;
The path may be selected at call establishment and remain the same
for the duration of the call.
This is referred to as call dynamic routing.
.IF LINES < 5 THEN SKIP 7
.item;
The path may be selected at call establishment,
but can be changed during the call if line or node failures require it.
This is referred to as call dynamic routing with rebuild.
.IF LINES < 5 THEN SKIP 7
.item;
The path taken by each data packet may travel an independent path
from the source node to the destination node.  This is referred to as
data dynamic routing. It is also know datagram mode,
or sometimes as connectionless transfer mode.
.endlist;
.skip;
The static routing  method is not very interesting because the routing
is changed manually
and not automatically in response to network conditions.
For this reason, it is unsuitable for very large data networks.
The datagram mode is, at
the moment, cannot be efficiently handled with central routing control.
In this talk we will devote our efforts to the second and third methods
of implementing the data network.

.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Central_Routing_Network_Description

The data network with central routing control consists of the data
transfer nodes and routing control nodes.  The function of the
routing control nodes is to constantly gather information about
the state of the nodes in the network, the links connecting them, and
the host computers connected to the nodes.
This information is used to compute an optimal circuit path for
any call routing  requests that are presented to the routing control node.
The information about the selected path is then sent to the nodes
selected to carry the call, and they make appropriate changes in their
internal tables to be able to relay the data correctly.


.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Virtual_Circuit_Building_Process

There are several ways to build the virtual circuit once the path has been
selected.  One possible way  is to have the routing
control node send circuit building messages
 to all the nodes selected as the path for the connection.
The messages would tell the nodes which logical channels on the links
between them have been selected for the circuit path.  This implies
that the routing node has information about the channels in use
between all the links between all nodes.
  That would require a great deal of storage in the routing
node and make the routing node maintain information that is not
relevant to the routing process.  Therefore, this method is unsuitable for 
very large networks. 

An alternative method is to send a message to source (or destination) with
a list of the nodes in the selected path.  The nodes themselves
allocate the logical channels on the links between them and allocate
all other local resources.  The routing nodes are informed by the data  nodes
if the channel capacity of the links is about to be exceeded or if more
capacity has become available.  When the
circuit building message is received by a node,
the appropriate table changes are made
to associate a logical channel on one link with a logical channel on
a link connected to the next node in the list.  The nodes need to
avoid channel selection collisions locally (an
easily solved problem).  

.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Virtual_Circuit_Characteristics

After the circuit is built,
the only information needed at the node for data 
transfer is the association of one link's logical channel to another
link's logical channel.  When data is passed over the link, the only
routing information required  is the
logical channel number on the link.  This results in a considerable
increase in efficiency over sending the entire source and destination global
addresses with every data message.

A virtual circuit's data flows over a single logical path in it's
trip through the network.  Therefore, data arriving out of order cannot
occur as it does in a datagram network.
Flow control is much simpler because it can be done on a link by link basis.
It needs to be propigated back to the source only when the buffering
capacity for all the nodes in the data's path have reached the limit
for the circuit.
The detection of lost data in a datagram network
is usually  done through timeouts, which must be very long to
prevent the generation of duplicate packets.  These long timeouts
can affect data throughput.
Duplicate data packets are possible in a datagram network as a result of
trying to recover from transmission or node failures.
In a virtual circuit network duplicate data can only occur because of
programming errors.

.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Routing_Node_Functions

The routing nodes are very much like other host computers in the network,
except that they are aware of the state of the entire network.
The first step necessary for the control nodes to perform their function is
to become aware of the topology of the network and the resources
available at each node in the network.  While the topology of the network
can be known in advance, the remaining resources in the nodes
cannot be known without interrogating each one.  Since this has to be done
anyway, learning the topology of the network from the nodes is very little
additional work.  This allows the network topology 
to change without the routing nodes
being informed manually of the changes.  Once the network is completely
known to the routing nodes, they only have torecover from changes due
to link outages or node failures.

After a node has been interrogated by the routing node, the it may send
circuit routing requests to the routing node.  These circuit requests are
processed by examining the topology of the network and selecting
the best path.  The path selection is then sent to node requesting the
service.  There are many known methods for implementing the path selection,
as this is a very well researched area of mathematics.

Another function of the routing control node is to accumulate the
information necessary for charging the user of the service.
It is also where information about node and link failures is reported.
By using this central repository of network information, the
people who are charged with maintaining the network can have ready
access to the information that they need to perform their job.


.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Data_Transfer_Node_Functions

The primary function of a data transfer node is the transfer of data through
th network.  By removing the data routing functions from the node, more
of the node's resources can be used for that function.  The other function
of the node is to monitor the local state of the network and report any
significant changes to the routing nodes.  These local conditions
include the state of neighboring nodes, error conditions on the links
connecting them, the state of any host computers connected to the
node, and it must forward circuit building requests for the hosts and
terminals attached to it.
If the network has facilities for recovering from network outages, then
it must also be able to request a new circuit in the event of the
failure of an intermediate node.

.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Routing_Node_Software

The software running in the routing node is forced to have
some degree of modularity by nature of the
physical separation of the routing and data transfer nodes.
Because the routing computers can operate simultaneously, the
removal of one from the network will do no harm.  This
makes upgrading its software an easy chore.  The result of this
feature is that all the network nodes do not have to be reloaded when
a routing algorithm problem is found.
Since there are fewer routing nodes in a network, they can be given
special and/or faster hardware to perform their job better.
Centralizing the routing function in a network to a physically convenient
location allows faster response to hardware and software problems
which require on-site attention.

.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Data_Transfer_Node_Software

The data transfer node software will be more responsive because
the routing function has been removed.



.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
A_Real_Network

Tymnet is a public data network operated by Tymshare, USA, which uses
the central routing principles discussed.  It has 1100 data transfer nodes
and 5 routing control nodes to which 900 host computers are attached.
Tymnet access is available in 400 cities in the USA and 35 foreign countries.
The network supports 5000 simultaneous sessions and about 200,000 sessions
per day.  Tymshare also sells its hardware and software to 5 IRCs and
the PTTs of several other countries.
The network has experienced a 50% growth rate in the past years,
and the technology has been sold as the private networks for
several large customers.

As the requirements of Tymnets customers, development of
advanced network feature continues.
The network has one active routing control node at any one time with
the other 4 used for backup.  Development is underway to allow all
routing nodes to be used simultaneously.  Automatic circuit rebuilding
software has been developed and is in final testing before deployment.


.skip 3;
.IF LINES < 5 THEN SKIP 7
.once Center;
Conclusion

The division of network function has been shown to be a viable
technique for the development of large data networks.
The reasons for this are in most part due to the central routing concept which
can produce a high software 
reliability while at the same time allowing a high degree of flexibility.
This flexibility will allow central routing networks to grow to sizes and
complexities unheard of today.

.standard back
   