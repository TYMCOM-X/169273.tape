module ccl = begin

!Copyright 1979 by Michael L. Kazar

bind extra=100;

global xbuffer[30],tp,xeflag;
external dotmpcor,filblk,defdsk,filescan,hbot,hend,lowend,ppn,open,quit;
external buffers,lookop,dskbuf,dskbfh,close,metalt,munchi;
external ctrlg,p,readch,muline,scrmod,flush,hitsts;
external toprompt,getstr,realup,curbuf,allmod,scrmod,relcore,cucl;
global routine cclstuff = begin

machop calli = #047;

register foo;

if dotmpcor(sixbit 'EDT',2,xbuffer,30) lss 0 then
   dotmpcor(sixbit 'EDS',2,xbuffer,30);

(filblk+4)_0; !default to our ppn.
filblk_.defdsk;
tp_xbuffer<29,7>;
if not (filescan (tp,filblk)) then return ctrlg();
hbot_.hend; !get rid of text.
lowend_1;
ppn_.(filblk+4);
open (2,0,.filblk,dskbfh<0,0>);
buffers (2,1,1,dskbuf); !get a disk buffer formatted.
if lookop() then munchi ((.p+extra/5)<1,7>)
else begin
	ToPrompt(plit asciz'File not found.');
	end;
allmod[.curbuf]_0;	       !not modified.
close (2);
hend_.lowend+5+extra;
hbot_6+extra;
lowend_1;
relcore();
scrmod_1;
muline_1;
end;

global routine cclmultix = begin
machop jrst = #254;
machop calli = #047;

register foo;
local ep;

incp(tp);
ep_.tp; 
while 1 do begin
    if scani(ep) eql "!" then begin
	    replacen(ep,"?M");	!bash ! to ?m
	    exitloop
    end;
    if scann(ep) eql 0 then if .xeflag then cucl() else quit();
end;
filblk_0;
(filblk+1)_0;
(filblk+2)_0;
(filblk+3)_0;
(filblk+4)_0;
(filblk+5)_0;
if not (filescan (tp,filblk)) then return ctrlg();
if .filblk eql 0 then filblk _ sixbit 'dsk';
if .(filblk+2) eql sixbit'low' then (filblk+2)_0;      !bug in get.shr!
foo_filblk<0,0>;
foo_.foo + 1 ^ 18;
calli (foo,#35);
jrst(4,0);
end;		!for the procedure
global routine ctrlxi = begin local glbuffer [100];
	local tp,lfilblk[6];
	allmod[.curbuf]_1;
	muline_1;
	scrmod_1;
	hitsts_1;
	flush_0;
	ToPrompt(plit asciz'Insert File: ');
	(lfilblk+4)_0; !default to our ppn.
	lfilblk_.defdsk;
	tp_(glbuffer-1)<1,7>;
	getstr(.tp);
	if not (filescan (tp,lfilblk)) then return ctrlg();
	if .flush then return ctrlg();
	open (2,0,.lfilblk,dskbfh<0,0>);
	buffers (2,1,1,dskbuf); !get a disk buffer formatted.
	if realup(lfilblk+1) then begin
	    tp_(.p-1)<1,7>;	       !pointer to buffer's first.
	    incr i from 1 to .lowend-1 do incp(tp);
	    munchi (.tp);
	end
	else ToPrompt(plit asciz'File not found.');
	close (2);
	end;

end eludom
