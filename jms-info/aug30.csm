
CSM COMPUTER NETWORK.
   1. DEC-10 SYSTEM #1 'CRUNCH' 1091
   2. DEC-10 SYSTEM #2 'MUNCH'  2020

SELECT SYSTEM: 1PSER: TIMESHARING ENDS IN 30 MINUTES.

[Terminal type is CRT]

CSM DECsystem-1091 702V2 17:00:32 TTY3 system 2437
Connected to Node DIALUP(100) Line # 60
This terminal is a CRT (video terminal)

Timesharing will cease in 30 minutes, at 17:30.
Please LOGIN or ATTACH

.LOG 17400,260360
JOB 17 CSM DECsystem-1091 702V2 TTY3
[LGNTCI Timesharing will cease in 30 minutes at 17:30:00]
Password:
17:00  30-Aug-85  Fri   SMITH JOSEPH    $200.00
No mail

.DIR DOS:


ACCESS  USR     1  <255>    1-Jun-84    DSKA:   [5,76]  DOS:
ASMGEN  COM    20  <555>   23-Aug-84
ASMGEN  DOC    41  <555>   23-Aug-84
CLG     COM     1  <555>   11-Dec-84    TI-PRO
COMTTY  INI     1  <555>   22-Aug-84    TI-PRO
CSMLGO  BAS     4  <555>   10-Nov-84
CSMLGO  DAT    25  <555>   10-Nov-84
CSMLGO  FOR     1  <555>   10-Nov-84
CSMLGO  PLT    10  <555>   10-Nov-84
GENER   BOO    59  <555>    1-Aug-84    KERMIT
KERMIT  DOC   164  <555>    2-Aug-84    KERMIT
KERMIT  HLP    15  <555>    1-Aug-84    KERMIT
KERMIT  MSG    21  <555>    2-Aug-84    KERMIT
LCTERM  MEM    33  <555>    8-Aug-84    RAINBO
LCTERM  NEW     6  <555>    8-Aug-84    RAINBO
MSBOOT  BAS     5  <555>    7-Dec-84      2(27)
MSBOOT  FOR     4  <555>    7-Dec-84      2(27)
RS232C  TXT     9  <555>   23-Oct-84
TITEK   BAS     7  <555>    6-Oct-84    TI-PRO
  Total of 427 blocks (515 allocated) in 19 files on DSKA: [5,76]

.BAK CPM
   DSKA:[5,77]
RS232   TXT     ROBIN4  COM     ROBIN   HLP     ROBIN   HEX     RAINBO  HLP
RAINBO  H86     RAINBO  CMD     QUIKCO  ASM     OSBORN  HLP     OSBORN  HEX
NORTHD  HEX     MORROW  HLP     MORROW  HEX     MORROW  ASM     MDM724  COM
KERWHO  TXT     KERSUM  BBD     KERMIT  WHO     KERMIT  VER     KERMIT  TXT
KERMIT  PRO     KERMIT  INS     KERMIT  HEX     KERMIT  FLY     KERMIT  DOC
KERMIT  CUR     KERMIT  CMR     KERMIT  C64     KERMIT  BWR     KERMIT  BOT
KERM25  HEX     KERBOT  HEX     KERBOT  BAK     KERBOT  ASM     KER412  BBD
KER411  BBD     KER410  BBD     KER409  BBD     KAYPRO  HEX     K11RT4  HEX
K11HEX  FTN     K11HEX  FOR     FOCAL   COM     DECUS   NOT     CPMSUM  BBD
CPM412  BBD     CPM411  BBD     CPM410  BBD     CPM409  BBD     CPM408  BBD
CPM407  BBD     CPM406  BBD     CPM405  BBD     CPM404  BBD     CPM403  BBD
CPM402  BBD     CPM401  BBD     CPM312  BBD     CPM311  BBD     CPM310  BBD
CPM309  BBD     CPM308  BBD     CPM307  BBD     CPM306  BBD     CPM305  BBD
CPM304  BBD     CP4NOR  COM     APPLEZ  SSC     APPLEZ  MSG     APPLEZ  HLP
APPLEZ  HEX     APPLEZ  BWR     APPLE   DOC     AP2KER  TXT     AP2KER  ASM
ACCESS  USR     83TAX   HLP     83SCHG  SYL     83SCHD  SYL     83SCHA  SYL
83MA1   SYL     831040  SYL


.TYPE TK4010.TXT
TK4010.TXT - requirements for Tektronix terminal simulation.

The Tektronix 4010 has coordinates of 1024 by 1024, but only 780 by 1024
are visible.  Resolution is exactly 100 dots per inch, the viewing surface
is 7.80 by 10.24 inches.

The Tektronix 4014 has coordinates of 4096 by 4096, but only 3120 by 4096
are visible (780 by 1024 in 4010 mode).  The number of dots per inch is
difficult to measure due to the curved glass surface.

Tektronix terminals have square pixels, in that a rectangle 200 pixels high
by 200 pixels wide shows up as being square on the screen.  On the IBM PC,
the rectangle would have to be 200 high by 480 wide to look square; the
aspect ratio is 2.4 = 12/5.  On the TI Professional, the rectangle would have
to be 300 high by 540, aspect ratio is 1.8 = 9/5.

To transform the 780 by 1024 coordinates to fit on the PCs, use integer
multiplication and integer division.  Note that in Tektronix coordinates,
the (0,0) origin is the lower left corner.

     4010    Max-X   X-scale Horiz   Max-Y   Y-scale Vert
     IBMPC   1023    12/20   613      779    5/20    194
     TIPRO   1023     9/13   708      779    5/13    299

     4014    Max-X   X-scale Horiz   Max-Y   Y-scale Vert
     IBMPC   4095    12/78   630      779    5/78    199
     TIPRO   4095     9/52   708      779    5/52    299

Note that 4095 * 12 = 41140 which exceeds 32k, the limit on signed 16-bit
numbers.  Therefore ignore 4014 extra resolution and do 4010 emulation.
-------------------------------------------------------------------------
Flowchart for interpreting graphics commands.

1) Start in TEXT mode, where ASCII charcters are displayed on the screen.

2) Formfeed by itself is ignored, but <ESC><FF> erases the screen, in both
   TEXT or GRAPHICS mode.

3) GRAPHICS mode is enabled by ^] (<GS> decimal 29, hex 1D).  The first
   movement is made with the beam off.  All succeeding movements are made
   with the beam on, except the one immediately after any <GS> code.  If
   already in graphics mode, <GS> says to continue in graphics mode, but
   make the next move invisible (pen up).

4) GRAPHICS mode is disabled by ^_ (<US> decimal 31, hex 1F).  Most (but not
   all) Tektronix terminals also return to TEXT mode when a carriage return
   <CR> is received.

5) Once in GRAPHICS mode, the coordinates are specified by 1 to 4 printing
   characters.  (Tektronix considers RUBOUT a printing character, and it is
   used as data.)

6) Coordinates are decoded and stored in 5 variables
   Name  Oct    Hex  Description
   HIY  40-77  20-3F High-order 5 bits of Y position
   LOY 140-177 60-7F Middle 5 bits of Y position
   HIX  40-77  20-3F High-order 5 bits of X position (after LOY)
   LOX 100-137 40-5F Middle 5 bits of X position (moves beam)
   LSB 140-177 60-7F Low-order 2 bits of X + low-order 2 bits of Y (4014 mode)

4010 mode:  X = HIX*32  + LOX             Y = HIY*32  + LOY
4014 mode:  X = HIX*128 + LOX*4 + LSB&3   Y = HIY*128 + LOY*4 + (LSB/4)&3
 (note that if LSB is ignored and always zero, the 4014 acts like a 4010)

In the Tektronix terminals using DVST (Direct View Storage Tubes), the clipping
of Y coordinates exceeding 780 is done at the physical level - the electron
beam is moved to the correct position, even though there is no phosphor there.
The straight-line algorithm (DDA) is done in hardware.

In the raster terminals (4025, 4027), clipping and lines are done in firmware.

-------------------------------------------------------------

State table - change states depending on character received:
   (code numbers are octal, characters not listed are ignored)

A)      Here when expecting HIY after LOX was seen
   CR  15  Exit GRAPHICS mode, alpha cursor to text column 1
   ESC 33  Goto C
   GS  35  Enter GRAPHICs mode, clear pen-down flag
   US  37  Exit GRAPHICS mode, alpha cursor closest to graphics cursor
    40-77  Extract HIY, goto A  (note that this is HIY, not HIX)
   100-137 Extract LOX, set X and Y, move there, set pen-down flag, goto A
   140-177 Extract LOY, zero LSB, goto B  (4010 emulation ignores LSB)

B)      Here when expecting HIX because LOY was seen
   CR  15  Exit GRAPHICS mode, alpha cursor to text column 1
   ESC 33  Goto C
   GS  35  Enter GRAPHICs mode, clear pen-down flag
   US  37  Exit GRAPHICS mode, alpha cursor closest to graphics cursor
    40-77  Extract HIX, goto A  (note that this is HIX, not HIY)
   100-137 Extract LOX, set X and Y, move there, set pen-down flag, goto A
   140-177 Copy LOY to LSB, extract LOY, goto B   (4010 emulation ignores LSB)

C)      Here because an ESCape was seen
   FF  14  Clear graphics and text, alpha cursor top left, graphics lower left
   CR  15  Exit GRAPHICS mode, alpha cursor to text column 1
   SUB 32  Activate cross-hairs, get input, goto A  (GOSUB to dummy subroutine)
   ESC 33  Goto C
   GS  35  Enter GRAPHICs mode, clear pen-down flag
   US  37  Exit GRAPHICS mode, alpha cursor closest to graphics cursor
        The following are VT52 compatible ESCape sequences (text mode only)
   =   75  Set flag for special keypad mode
   >   76  Clear flag for special keypad mode
   A  101  Move text cursor up one row unless already at row 1
   B  102  Move text cursor down one row unless already at row 24
   C  103  Move text cursor right one column unless already at column 80
   D  104  Move text cursor left one column unless already at column 1
   H  110  Move text cursor home to row 1 column 1
   I  111  Reverse linefeed, if at row 1, scroll screen backwards (down)
   J  112  Erase current position to end of screen, inclusive
   K  113  Erase current position to end of line, inclusive
   Y  131  Next char is row+31, then col+31 (decimal) direct cursor movement
           Lower right is <ESC>Y7o (octal 33 131 67 157, hex 1A 59 37 6F)
   Z  132  Send <ESC>/Y for IBMPC, <ESC>/X for TIPRO
        Ignore any other character immediately after an ESCape

[End of TK4010.TXT]


.INFO VERSION
INFO version 3A(315)-4 running on CSM DECsystem-1091 702V2, CPU #2437.
        Monitor version 702(25527)-2, load 26,70200 built on 12-17-84.
        Loaded from DSKA:SYSTEM.EXE[1,4], MCO 11095

.DIR [11,24,KERMIT]

KERMIT  EXE    63  <477>   26-Jun-85    DSKB:   [11,24,KERMIT]
MSCMD   ASM    52  <477>   26-Jun-85
MSCOMM  ASM    31  <477>   26-Jun-85
MSDEFS  H      15  <477>   26-Jun-85
MSFILE  ASM    49  <477>   26-Jun-85
MSKERM  ASM    56  <477>   26-Jun-85
MSRECV  ASM    32  <477>   26-Jun-85
MSSEND  ASM    52  <477>   26-Jun-85
MSSERV  ASM    39  <477>   26-Jun-85
MSSET   ASM    64  <477>   26-Jun-85
MSTERM  ASM    21  <477>   26-Jun-85
MSXDMB  ASM     1  <477>   26-Jun-85
MSXTIP  ASM    56  <477>   26-Jun-85
MSYTIP  ASM    69  <477>   26-Jun-85
RECOMP  BAT     1  <477>   26-Jun-85
TIL     BAT     1  <477>   26-Jun-85
TIMODM  TXT     2  <477>   26-Jun-85
TIREV5  TXT     4  <477>   26-Jun-85
  Total of 608 blocks (685 allocated) in 18 files on DSKB: [11,24,KERMIT]

.TYPE RECOMP.BAT,TIL.BAT
masm MSXTIPRO; >>err.log
masm MSYTIPRO; >>err.log
masm MSCMD; >>err.log
masm MSCOMM; >>err.log
masm MSFILE; >>err.log
masm MSKERM; >>err.log
masm MSRECV; >>err.log
masm MSSEND; >>err.log
masm MSSERV; >>err.log
masm MSSET; >>err.log
masm MSTERM; >>err.log
masm MSXDMB; >>err.log

LINK MSXDMB+MSKERM+MSXTIPRO+MSYTIPRO+MSCOMM+MSSET+MSSEND+MSRECV+MSSERV+MSFILE+MS
TERM+MSCMD,KERMIT;

.TYPE *.TXT

[TYPNAM DSKB:TIMODM.TXT[17400,260360,TIPRO]/Created:26-Jun-85:12:42/Access:26-Ju
n-85]

How to use KERMIT with an TI internal 300-baud modem

Make sure you have KERMIT.EXE and COMMAND.COM on your A: floppy.
Enter "KERMIT" to start the program.  Then tell KERMIT that you want
to use the modem, which is in port 3, at 300 baud.  Use the CONNECT
command to start talking to the modem.

To do auto-dialing, type in the letter capital "T", then the phone number,
and end with a capital "X".  The letters you type in will not be echoed.
Do not hit the RETURN key.  The modem will type "E", the phone number, and
then "F".  It will type "R" when the phone starts ringing at the computer.
Wait a few seconds, then hit the RETURN key 2 or 3 times.

A>KERMIT
KERMIT-MS>SET PORT 3
KERMIT-MS>SET BAUD 300
KERMIT-MS>CONNECT
T279-0550X


[TYPNAM DSKB:TIREV5.TXT[17400,260360,TIPRO]/Created:26-Jun-85:12:42/Access:26-Ju
n-85]

                TI-Professional Kermit Revision 5

   Quite a few people have called about the previous version of Kermit for
   the TI-Pro. Apparently the file MSTEK.ASM is missing from one of the
   Kermit distribution sources. The code for MSTEK.ASM (Tektronix emulation)
   has been placed in MSYTIPRO.ASM together with code that will emulate the
   Heath H19. In keeping with the guidelines described in MSXSYS.DOC, all
   TI-Pro specific code has been placed in MSXTIPRO.ASM, while all terminal
   emulation code has been placed in MSYTIPRO.ASM. All system independent
   modules are unmodified.



The major changes over the last released version (REV 3) are:

1. Addition of Heath 19 emulation

2. The connect command will no longer drop DTR, so that internal modems will
   not hang up when returning from the Kermit-MS> prompt.

3. Interrupt driven I/O to support up to 9600 Baud.



The following problems have been encountered in the system independent code:

1. The STAT command uses the value of flags.comflg to display the current
   port. The allowed values are 1 for port 1, and 0 for port 2. This makes
   it impossible to display the correct port on computers with more than 2
   comm ports. Ideally, a new subroutine should be written in MSSET.ASM that
   will examine the value of flags.comflg and simply convert the byte to an
   ASCII port number. This can be done for ports 1 through 9 by simply adding
   30 hex to the value and printing it.

2. When 2 microcomputers are connected back to back and one is placed in SERVER
   mode, GET and SEND *.* will only send the first file found. The first file
   is renamed to XXXXXXXX.XXX, and the GET or SEND is terminated. This was done
   on 2 TI Pros and 2 IBM PCs with the same results.



If any bugs are found in the system dependent code contact

Dan Smith
Computing Center
Colorado School of Mines
Golden Colorado 80401

(303) 273-3396


.TYPE MSYTIP.ASM

[TYPNAM DSK:MSYTIP.ASM[17400,260360]/Created:26-Jun-85:12:27/Access:26-Jun-85]

REVLVL  equ     5               ;Revision level 6-25-85

;==============================================================================
;
; MSYTIPRO.ASM  This file contains system dependent terminal emulation routines
;               for the H19 and Tektronix 4010 terminals.
;
; Credits:      Dan Smith       Computing Center        (303) 273-3396
;               Joe Smith       Colorado School of Mines
;                               Golden, Colorado 80241
;
;
; The following H19 escape codes are supported:
;
; Esc H    Cursor home                      Esc L    Insert line
; Esc C    Cursor forward                   Esc M    Delete line
; Esc D    Cursor backward                  Esc N    Delete character
; Esc B    Cursor down                      Esc O    Exit insert mode
; Esc A    Cursor up                        Esc @    Enter insert mode
; Esc I    Reverse index                    Esc p    Enter reverse video mode
; Esc Y    Direct cursor addressing         Esc q    Exit reverse video mode
; Esc E    Clear display                    Esc j    Save cursor position
; Esc J    Erase to end of page             Esc k    Restore cursor position
; Esc K    Erase to end of line
; Esc x4   Set block cursor
; Esc y4   Set underscore cursor
;
; The following H19 codes are not supported:
;
; Esc n     Cursor position report          Esc <    Enter ANSI mode
; Esc b     Erase beginning of display      Esc [    Enter hold screen mode
; Esc l     Erase entire line               Esc \    Exit hold screen mode
; Esc o     Erase beginning of line         Esc F    Enter graphics mode
; Esc z     Reset to power up config.       Esc G    Exit graphics mode
; Esc r ?   Modify baud rate                Esc t    Enter keypad shifted mode
; Esc x 1-3 Set modes 1 through 3           Esc u    Exit keypad shifted mode
; Esc x 5-9 Set modes 5 through 9           Esc =    Enter alternate keypad mode
; Esc y 1-3 Reset modes 1 through 3         Esc >    Exit alternate keypad mode
; Esc y 5-9 Reset modes 5 through 9         Esc }    Keyboard disable
; Esc v     Wrap around at end of line      Esc {    Keyboard enable
; Esc w     Discard at end of line          Esc ]    Transmit 25th line
; Esc Z     Identify as VT52                Esc #    transmit page
;
;==============================================================================
^C
.BYE
Computer charges on Friday, August 30, 1985 at 5:23 p.m. - high rates

 0.38 hours connect time        @ $2.00000 =   $0.75
116.22 kilo-core seconds        @ $0.00800 =   $0.93
                        Cost for this run  =   $1.68    Balance = $198.32

Job 17  User SMITH JOSEPH [17400,260360]   Logged-off TTY3
Runtime:00:00:07, Disk Reads:1653, Writes:856, Blocks saved:695

.
     