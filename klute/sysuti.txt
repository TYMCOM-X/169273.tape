-----------------------------------------------------------------------

LAYER:            SYSTEM UTILITIES

-----------------------------------------------------------------------

COMPONENTS:
                  Abort Transfer
                  Get Unexpected Response

-----------------------------------------------------------------------

DESCRIPTION:

   This layer is comprised of procedures which violate the TYMFTP layers
because an abnormal condition was encountered which necessitates program
abort.

-----------------------------------------------------------------------

-----------------------------------------------------------------------

LAYER:            SYSTEM UTILITIES
PROCEDURE NAME:   Abort Transfer
PROCEDURE ID:     SU.abort.transfer
PROCEDURE TYPE:   untyped

-----------------------------------------------------------------------

INPUT:            PARAMETERS: abort.type  (value)

GLOBALS: direction.of.transfer

OUTPUT:           message to user
                  application.record
                  application.params
                  appl.rec.size
                  EOF
                  EOR.seen

-----------------------------------------------------------------------

CALLED BY:        File Transfer Driver
                  Get Micro Response
                  Fill Data Buffer
                  Build Application Command
                  Get Incoming Packet
                  Check For Timeout

CALLS:            Create Packet     ! Valid Packet Layer
                  Activate Timer    ! Binary Layer

-----------------------------------------------------------------------

DESCRIPTION:

   This procedure closes any open files, purging files being written,
sends the micro an abort protocol transfer message, and prints an
approximation of the reason for the abort on the user's CRT.  The
timer is shut.

-----------------------------------------------------------------------


-----------------------------------------------------------------------

PROCEDURE NAME:   Abort Transfer
PROCEDURE ID:     SU.abort.transfer

-----------------------------------------------------------------------

PSEUDOCODE:

if host file is open then
   if direction.of.transfer is TOHOST then   ! writing
      purge temporary file ! RENAME using null file.spec
   else
      close file

set application.parameters:
   record.type = command
   link.type = prim.appl
   who.sent = requestor
   importance = advisory
   cmd.type = explanatory.reply  ! 4
   cmd.data = reason.code[4]
set application.record to 5   ! termate session, end protocol mode
set appl.rec.size to 2
execute VA.create.pkt using application.record, application.parameters,
                    appl.rec.size, true, true   ! force packet to be sent

execute BI.activate.timer using 0   ! shut off timer


-------------------------------------------------------------------------

PROCEDURE NAME:   Abort Transfer
PROCEDURE ID:     SU.abort.transfer

-------------------------------------------------------------------------

PSEUDOCODE (continued)

case abort.type of   ! set termination message
   PTC.error   :  print ("Unrecognized packet type received.  Aborting.")
   max.incoming.timeouts.error   :
      print ("Timed out waiting for data from micro.  Aborting.")
   max.outgoing.timeouts.error   :
      print ("Timed out waiting for response from micro.  Aborting.")
   data.error[num]   :
      print ("Invalid packet format.  Data error ", num, "  Aborting.")
   command.error[num]   :
      print ("Invalid packet format.  Command error ", num, "  Aborting.")
   no.positive.reply.received.error :
    print ("Unable to establish protocol communication with micro.  Aborting.")
   unimplemented.micro.cmd.received.error :
      print ("Unimplemented micro command received.  Aborting.")
   micro.cannot.continue.error   :
      print ("Micro cannot continue.  Aborting.")
   reason.code[0] :
      print ("Micro cannot continue.  Aborting.")
   reason.code[1] :
      print ("Request type not implemented.  Aborting.")
   reason.code[2] :
      print ("Invalid command syntax sent to micro.  Aborting.")
   reason.code[3] :
      print ("Request file not found.  Aborting.")
   reason.code[4] :
      print ("Not enough space (on volume or disk).  Aborting.")
   reason.code[5,6] :
      print ("File or operating system error.  Aborting.")
   reason.code[7] :
      print ("Access error.  Protection failure or type violation.  Aborting.")
   cant.open.host.file :
      print ("Unable to open host file.  Aborting.")
   file.read.error :
      print ("Error reading host file.  Aborting.")
   file.write.error :
      print ("Error writing host file.  Aborting.")
   unknown.cmd.type :
      print ("Unknown command type received from micro.  Aborting.")

-----------------------------------------------------------------------

-------------------------------------------------------------------------------

LAYER:             SYSTEM UTILITIES
PROCEDURE NAME:    Get Unexpected Response
PROCEDURE ID:      SU.get.unexpected.response
PROCEDURE TYPE:    untyped

-------------------------------------------------------------------------------

INPUT:             application.record
                   application.parameters
                   appl.rec.size

OUTPUT:            application.record
                   application.parameters
                   appl.rec.size

-------------------------------------------------------------------------------

CALLED BY:         Respond to Micro Abort Message                 !Binary Layer

CALLS:             Get Micro Response                      !Application Layer

-------------------------------------------------------------------------------

DESCRIPTION:

    Get Unexpected Response is called when the micro wants to abort during
an outgoing transfer.  This procedure calls the Application Layer to accept
the message from the micro.  (This bridges the Binary and Application Layers.)

-------------------------------------------------------------------------------

PSEUDOCODE:

execute VA.get.inc.appl.rec using application.record
                                  application.parameters
                                  appl.rec.size
execute AP.handle.micro.command using application.record
                                  application.parameters
                                  appl.rec.size

-------------------------------------------------------------------------------

