TITLE	NUMKEY FOR TBA SORT
SUBTTL	CONVERT DISPLAY TO BINARY

	TWOSEG
	RELOC 400000

;REGISTERS:
	AC==0
	CNT==4
	CH==5
	IPTR==10
	SW==11
	JAC==12
	PARM==13
	PP==17

	LS==(1B1)	;LEADING SIGN FLAG.
	LM==(1B2)	;LEADING MINUS FLAG.
	IS==(1B3)	;IMBEDDED OR TRAILING SIGN FLAG(NEVER SET)

COMMENT	\

	THIS ROUTINE CONVERTS A DISPLAY ITEM TO A ONE OR TWO WORD BINARY ITEM.

CALL:
	MOVE	16,[Z	AC,PARAMETER ADDRESS]
	PUSHJ	17,GD7.

PARAMETERS:
	THE ACCUMULATOR FIELD OF AC 13 CONTAINS THE AC INTO WHICH THE FIRST
	 WORD OF THE RESULT IS TO BE PLACED.
	THE RIGHT HALF OF AC 13 POINTS TO A WORD IN THE FOLLOWING FORMAT:
		BITS	0-5	BYTE POINTER RESIDUE FOR THE INPUT FIELD.
		BIT	6	1 IF THE FIELD IS SIGNED.
		BITS	7-17	SIZE OF THE INPUT FIELD.
		BITS	18-35	ADDRESS OF THE FIRST CHAR OF THE INPUT FIELD.

RETURNS:
	CALL+1	ALWAYS.

REGISTERS USED:
	AC, CNT, CH, IPTR, SW, JAC, PARM, PP

\

	ENTRY	GD7.		;IF THE INPUT IS ASCII.

GD7.:	MOVEI	CH,7		;FIND OUT WHAT THE INPUT LOOKS LIKE.

	HRRZI	SW,(CH)		;COPIED FROM ROUTINE SET1.
	MOVE	IPTR,(PARM)	;ON FILE (COBOL10)SETRET.MAC
	TLZE	IPTR,4000
	HRLI	SW,(1B0)
	LDB	CNT,[POINT 11,IPTR,17]
	TLZN	IPTR,3777
	POPJ	PP,
	DPB	CH,[POINT 6,IPTR,11]

					; POINTER.
	SETZB	AC,AC+1		;CLEAR A PLACE FOR THE RESULT.
	CAILE	CNT,^D10		;ONE OR TWO WORD RESULT?
	JRST		GDDP		;TWO WORDS - USE DOUBLE PRECISION
					; ROUTINE.
;HERE WE WORK ON A SINGLE PRECISION RESULT.

GDSP:	JSP	JAC,GDSKP.		;GO SKIP OVER LEADING CHARS.
	EXP		GDSP2		;RETURN THROUGH HERE IF THERE
					; ARE NO SIGNIFICANT CHARS.
	EXP		GDSP3		;RETURN THROUGH HERE IF WE FOUND
					; A NON-SPECIAL CHAR.
	EXP		GDSP4		;RETURN THROUGH HERE IF WE FOUND
					; A SPECIAL CHAR.

;RETURN HERE FROM GDSKP IF WE SAW A LEADING SIGN.

	JSP	JAC,GDCSP1		;GO CONVERT THE REMAINING CHARS.
GDSP0:	EXP		GDSP1.		;RETURN THROUGH HERE IF WE SAW
					; A TERMINATING CHAR.


;RETURN HERE FROM GDCSP IF WE HAVE EXHAUSTED THE STRING.

GDSP1.:	JUMPGE	SW,GDSP2		;JUMP IF WE CAN'T HAVE A SIGN.
	TLNN	SW,LS		;LEADING SIGN?
	LSH	SW,1		;NO, PUT THE IMBEDDED NEGATIVE FLAG
					; WHERE THE LEADING NEGATIVE FLAG WAS.
	TLNE	SW,LM		;NEGATE RESULTS?
	MOVNS		AC+1		;YES, DO SO.
GDSP2:	MOVE	AC,AC+1		;GET IT IN THE RIGHT REGISTER
	POPJ	PP,		;RETURN.



;RETURN HERE FROM GDSKP IF WE SAW A NON-SPECIAL CHAR.

GDSP3:	HRRZI	JAC,GDSP0		;WHERE TO GO WHEN WE ARE DONE CONVERTING.
	JRST		GDCSP2		;GO START CONVERTING.

;RETURN HERE FROM GDSKP IF WE SAW A SPECIAL CHAR OTHER THAN A LEADING SIGN.

GDSP4:	POPJ	PP,
;HERE WE WORK ON DOUBLE PRECISION.

GDDP:	JSP	JAC,GDSKP.		;GO SKIP OVER LEADING CHARS.
	EXP		GDDP6		;RETURN THROUGH HERE IF THERE
					; ARE NO SIGNIFICANT CHARS.
	EXP		GDDP8		;RETURN THROUGH HERE IF WE FOUND
					; A NON-SPECIAL CHAR.
	EXP		GDDP9		;RETURN THROUGH HERE IF WE FOUND
					; A SPECIAL CHAR OTHER THAN
					; A SIGN.

;RETURN HERE IF WE SAW A LEADING SIGN.

GDDP0:	JSP	JAC,GDDSET		;GO SET UP TO USE THE SINGLE
					; PRECISION ROUTINE.
	EXP		GDCSP1		;WHERE TO ENTER THE SINGLE
					; PRECISION ROUTINE.
GDDSET:	HRRI	SW,-^D10(CNT)	;HOW MANY CHARS WILL BE LEFT.
	CAILE	CNT,^D10		;ARE THERE MORE THAN TEN CHARS?
	MOVEI	CNT,^D10		;WE WILL CONVERT THE FIRST TEN.
	JSP	JAC,@(JAC)		;GO CONVERT THEM.
	EXP		GDDP5.		;RETURN THROUGH HERE IF WE SAW
					; A TERMINATING CHAR.

;RETURN HERE IF WE HAVE MORE TO CONVERT.

GDDP1:	HRREI	CNT,(SW)		;SEE HOW MANY MORE CHARS THERE ARE.
	JUMPLE	CNT,GDDP5.		;JUMP IF NONE.
GDDP2:	ILDB	CH,IPTR		;GET THE NEXT CHAR.
	CAIGE	CH,"0"
	JRST	GDDP5.
	CAILE	CH,"9"
	JRST	GDDP5.
	SUBI	CH,^D48
	TLZ	SW,IS		;CLEAR THE IMBEDDED SIGN SWITCH.
GDDP3:	IMULI	AC,^D10		;SHIFT THE ACCUMULATION LEFT ONE DIGIT.
	MULI	AC+1,^D10
	ADD	AC,AC+1		;TAKE CARE OF THE CROSS PRODUCT.
	MOVE	AC+1,AC+2		;RESTORE THE LOW ORDER WORD.
	JOV		.+1		;CLEAR THE OVERFLOW FLAG.
	ADDI	AC+1,(CH)		;ADD IN THE DIGIT.
	JOV	[TLZ	AC+1,(1B0)	;IF OVERFLOW OCCURS, CLEAR THE SIGN
					; OF THE LOW ORDER WORD
		AOJA	AC,.+1]	;AND BUMP THE HIGH ORDER WORD.
 GDDP4:	SOJG	CNT,GDDP2		;LOOP IF THERE ARE MORE CHARS.

;COME HERE WHEN WE ARE FINISHED CONVERTING.

GDDP5.:	JUMPGE	SW,GDDP6		;JUMP IF WE CAN'T HAVE A SIGN.
	TLNN	SW,LS		;LEADING SIGN?
	LSH	SW,1		;NO, PUT THE IMBEDDED NEGATIVE SWITCH
					; WHERE THE LEADING NEGATIVE SWITCH WAS.
	TLNN	SW,LM		;NEGATE?
	JRST		GDDP6		;NO, GO STORE THE RESULTS.
	SETCA	AC,		;NEGATE THE HIGH ORDER WORD AND
					; STORE IT.
	MOVNS	AC+1			;NEGATE THE LOW ORDER WORD AND
					; STORE IT.
	CAIN	AC+1,0		;RETURN IF THE LOW ORDER WORD IS
	POPJ	PP,		; NON-ZERO.
	HRLZI	AC+1,(1B0)		;GET A SIGN BIT.
	AOS	AC		;BUMP THE HIGH ORDER WORD AND TURN
					; ON THE SIGN IN THE LOW ORDER WORD.
GDDP6:	POPJ	PP,		;RETURN.

;COME HERE FROM GDSKP IF WE FIND A NON-SPECIAL CHAR.

GDDP8:	JSP	JAC,GDDSET
	EXP	GDCSP2

;COME HERE FROM GDSKP IF WE FIND A SPECIAL CHAR OTHER THAN A LEADING SIGN.

GDDP9:	POPJ	PP,
;SUBROUTINE TO SKIP LEADING CHARACTERS.

COMMENT	\

	THIS ROUTINE SKIPS NON-SIGNIFICANT LEADING CHARACTERS IN A 
DISPLAY FIELD.  THE CONVERSION POINTER (CPTR), IN ADDITION TO PICKING UP THE
NUMBER TO WHICH THE CHARACTER IN CH IS TO BE CONVERTED, PICKS UP
SEVERAL FLAGS.  THE FIRST FLAG IS THE LEADING CHARACTER FLAG.  IF THIS
FLAG IS SET TO 1 THE CHARACTER IS A LEADING CHARACTER AND MAY BE
IGNORED.  ON EXIT FROM THIS ROUTINE, IF WE HAVE SEEN A CHARACTER
WHICH IS NOT A LEADING CHARACTER, CPTR IS MODIFIED SO THAT IT NO
LONGER PICKS UP THE LEADING CHARACTER FLAG.

CALL:
	JSP	JAC,GDSKP

ENTRY CONDITIONS:
	(IPTR) = BYTE POINTER TO THE FIRST INPUT CHAR.
	(CPTR) = CONVERSION POINTER.
	(CNT) = SIZE OF THE INPUT FIELD.

EXIT CONDITIONS:
	(IPTR) = BYTE POINTER TO THE NEXT INPUT CHAR.
	(CPTR) = CONVERSION POINTER (MODIFIED TO NO LONGER PICK UP THE
		LEADING CHARACTER FLAG.)
	(CNT) = NUMBER OF CHARACTERS REMAINING IN THE INPUT FIELD.
	(SW) = LM IS TURNED ON IF WE SAW A LEADING "-".
		 LS IS TURNED ON IF WE SAW A LEADING "+" OR "-".

RETURNS:
	@CALL+1	IF THERE ARE NO SIGNIFICANT CHARACTERS IN THE FIELD.
	@CALL+2 IF WE FOUND A NON-SPECIAL CHAR.
	@CALL+3	IF WE FOUND A SPECIAL CHARACTER OTHER THAN A LEADING SIGN.
	CALL+4	IF WE FOUND A LEADING SIGN.

\

GDSKP.:	ILDB	CH,IPTR		;GET A CHAR.
	CAIN	CH," "
	JRST	SKP.1
	CAIE	CH,11		;TAB
	JRST	GDSKP1
SKP.1:	SOJG	CNT,GDSKP.		;LOOP IF THERE ARE MORE CHARS.
	JRST		@(JAC)		;NO SIGNIFICANT CHARS, RETURN
					; THROUGH CALL+1.

;COME HERE WHEN WE FIND A NON-LEADING CHAR.

GDSKP1:	CAIGE	CH,"0"
	JRST	GDSKP2
	CAILE	CH,"9"
	JRST	GDSKP2
	SUBI	CH,^D48
	JUMPE	CH,GDSKP4
	JRST		@1(JAC)		;MUST BE A DIGIT, RETURN
					; THROUGH CALL+2.

;IT'S A SPECIAL CHAR.

GDSKP2:	CAIN	CH,"-"
	TLOA	SW,LM		;YES, REMEMBER THAT WE SAW IT.
	CAIN	CH,"+"
	TLOA	SW,LS		;YES, REMEMBER THAT WE SAW A SIGN.
	JRST		@2(JAC)		;SPECIAL CHAR, OTHER THAN A SIGN
	SOJLE	CNT,@(JAC)		;IF IT'S ONLY A SIGN, TAKE THE
					; NO SIGNIFICANCE RETURN.

;SKIP OVER LEADING ZEROES.

GDSKP3:	ILDB	CH,IPTR		;PICK UP THE NEXT CHAR.
	CAIE	CH,"0"
	JRST	3(JAC)
GDSKP4:	SOJG	CNT,GDSKP3		;IF THERE ARE MORE CHARS, GO
					; SEE IF THEY ARE ALSO ZEROES.
	JRST		@(JAC)		;OTHERWISE, TAKE THE 
					; NO-SIGNIFICANCE RETURN.

;SUBROUTINE TO CONVERT A STRING TO A SINGLE PRECISION NUMBER.

COMMENT	\

	THIS ROUTINE CONVERTS A STRING TO A SINGLE PRECISION NUMBER.  IT IS
USED BY BOTH THE SINGLE AND DOUBLE PRECISION ROUTINES.

CALL:
	JSP	JAC,GDCSP

ENTRY CONDITIONS:
	(IPTR) = BYTE POINTER TO THE NEXT CHAR.
	(CPTR) = CONVERSION POINTER.
	(CNT) = NUMBER OF CHARACTERS LEFT IN THE INPUT FIELD.
	(AC+1) = 0

EXIT CONDITIONS:
	(IPTR) =BYTE POINTER TO THE NEXT CHAR.
	(CNT) = 0 (UNLESS A TERMINATING CHAR WAS SEEN.)
	(AC+1) = THE CONVERTED NUMBER.

RETURNS:
	@CALL+1	IF THE CONVERSION WAS TERMINATED BECAUSE OF A TERMINATING
		 CHAR.
	CALL+2	IF THE CONVERSION WAS TERMINATED BECAUSE OF NO MORE INPUT.

\
GDCSP:	ILDB	CH,IPTR		;GET THE NEXT CHAR.
GDCSP1:	CAIGE	CH,"0"
	JRST	@(JAC)
	CAILE	CH,"9"
	JRST	@(JAC)
	SUBI	CH,^D48
	TLZ	SW,IS		;CLEAR THE IMBEDDED SIGN SWITCH.
GDCSP2:	IMULI	AC+1,^D10		;SHIFT THE ACCUMULATION LEFT ONE.
	ADDI	AC+1,(CH)		;ADD IN THIS DIGIT.
GDCSP3:	SOJG	CNT,GDCSP		;LOOP IF THERE ARE MORE CHARS
	JRST		1(JAC)		;OTHERWISE RETURN TO CALL+2.
	END
   