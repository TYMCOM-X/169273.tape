1000  !
1010  ! FORMATTER FOR TBA PROGRAMS
1020  !
1030  ! THE RUN PORTION OF THE PROGRAM ACTS AS FOLLOWS
1040  !
1050  ! READS ONE COMPLETE LINE INTO ONE LONG STRING
1060  !
1070  ! FINDS THE FIRST SPACE(FSP) IF THERE ISNT ONE IT PUTS A SPACE
1080  ! AFTER THE LINE NUMBER. IT THEN FINDS THE FIRST NON SPACE(FNS).
1090  ! IT USES FSP AND FNS TO DO THE FORMATING
1100  !
1110  ! LOOKS FOR A 'NEXT','ENDF','ENDIF',OR 'ORIF' AT THE FIRST WORD. IF IT 
1120  ! FINDS ONE THEN IT DECREASES THE DISPLACEMENT(DSP) BY THE
1130  ! INDENTAION CONSTANT(IND)
1140  !
1150  ! ADJUST THE STATEMENT SO THE FIRST WORD STARTS WHERE THE
1160  ! DISPLACEMENT SAYS IT SHOULD
1170  !
1180  ! LOOKS FOR A 'FOR' AT THE FIRST WORD OR A 'THEN' AT THE LAST WORD
1190  ! IF FOUND IT INCREASES THE DSP BY IND
1200  !
1210  ! LOOKS FOR A 'DEF' AT THE FIRST WORD AND UNLESS THERE EXISTS A "=" 
1220  ! OR A "EXTERN" WHICH WOULD INDICATE A ONE LINE DEFINE FUNCTION
1230  ! IT WILL INCREASE THE DSP BY IND
1240  !
1250  ! IT THEN CHOPS THE NOW FORMATED STRING INTO LINE SIZE PIECES
1260  ! IT WILL INDENT EACH PIECE TO DSP UNLESS IT DETERMINES
1270  ! IT WOULD SCREW UP SOMTHING IN QUOTES. IT WILL NOT SPLIT A LINE AT
1280  ! AN ILLEGAL PLACE. IT ALSO DELETES UNEEDED SPACES (THOSE NOT IN QUOTES)
1290  !
1300  ! IT PRINTS THE LINE IN THE FILE AND ON THE TERMINAL IF SO
1310  ! REQUESTED. IT ALSO NOTIFIES THE USER IF A LINE GOES OVER THE
1320  ! STATEMENT LIMIT
1330  !
1340  ! THEN IT GOES BACK AND DOES THE SAME THING FOR THE NEXT LINE
1350  !
1360  ! LINE IS THE STRING THAT HOLDS THE STATEMENT BEING FORMATED
1370  ! STRNG IS A GENERAL PURPOSE TEMPORARY STRING
1380  ! LINEARRAY IS A STRING ARRAY THAT HOLDS LINES OF THE STATEMENT
1390  ! ANSWER IS A STRING THAT HOLDS AN ANSWER TO A QUESTION
1400  !

1410  !
1420  ! ------START OF PROGRAM ----------------
1430  !
1440  ! EQUATE LOWER CASE WITH UPPER CASE
1450  ASCTABLE(ASC("a"):ASC("z"))=ASCTABLE(ASC("A"):ASC("Z"))
1460  !
1470  ! EQUATE A TAB WITH A SPACE
1480  ASCTABLE(11B)=ASCTABLE(ASC(" "))
1490  !
1500  STRING LINE,STRNG,LINEARRAY(15),PARSIT(4),ANSWER
1510  STRING SPCECOND,CHARACTER,TESTCHAR,LINUMBER,KEEPMBROK
1520  INTEGER STATEMENT
1525  REAL VERSION.NUMBER
1530  INTEGER LL,SL,IND,COL,DSP,INTEG,POINT,CLI,FSP,FNS,NS,NL,TSL,I
1540  LOGICAL IN.A.DQ,IN.A.SQ,IN.COM,STKY.NUM.FLAG
1550  !
1560  VERSION.NUMBER=1.1
1570  !
1580  LL=80 ! LINE CHAR LIMIT DEFAULT IS 80
1590  SL=256 ! STATEMENT LENGTH LIMIT DEFAULT VALUE IS 256
1600  IND=2 ! INDENTATION CONSTANT DEFAULT VALUE IS 2
1610  COL=7 ! START COLUMN DEFAULT VALUE IS 7
1620  CLI=1 ! CONTINUATION LINE INDENTATION DEFAULT VALUE IS 1
1630  SPCECOND="NO" ! SPACE CONDENSATION DEFAULT VALUE IS NO
1640  KEEPMBROK="NO"  ! LINE BREAKAGE PRESERVATION DEFAULT IS NO
1650  !
1660  DEF INTEGER EXTERNAL FILE.PARSE(STRING F, STRING A(*)) AKA "FL.PRS"

1670  !
1680  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
1690  ! PRINT A HEADING
1700  PIF " 'TBA FORMATTER, VERSION ' ZZ.QQ":VERSION.NUMBER
1710  ON ESCAPE GOTO 1740
1720  !
1730  ! PRINT ASTRIEK AND WAIT FOR COMMAND
1740  PRINT
1750  PRINT IN FORM "1X":"*"
1760  INPUT IN FORM "R":STRNG
1770  !
1780  IF LEFT(STRNG,1)="C" THEN
1790    !
1800    ! DO THE CHANGE COMMAND
1810    PRINT " default values in parens"
1820    PRINT "LINE CHAR. LIMIT (80)";
1830    LL=GETNUM
1840    IF LL<20 THEN LL=80
1850    !
1860    PRINT "STATEMENT CHAR. LIMIT (256)";
1870    SL=GETNUM
1880    IF SL<63 THEN SL=256
1890    !
1900    PRINT "INDENTATION CONSTANT (2)";
1910    IND=GETNUM
1920    IF IND<0 THEN IND=2
1930    !
1940    PRINT "START COLUMN (7)";
1950    COL=GETNUM
1960    IF COL<2 THEN COL=7
1970    !
1980    PRINT "CONTINUATION LINE INDENTATION (1)";
1990    CLI=GETNUM
2000    IF CLI<1 THEN CLI=1
2010    !
2020    PRINT "SPACES CONDENSED? (no) ";
2030    INPUT IN FORM "R":SPCECOND
2040    IF SPCECOND="" THEN SPCECOND="N"
2050    SPCECOND=LEFT(SPCECOND,1)
2060    !
2070    PRINT "PRESERVE CURRENT LINE BREAKAGE? (NO) ";
2080    INPUT IN FORM "R":KEEPMBROK
2090    IF KEEPMBROK="" THEN KEEPMBROK="N"
2100    KEEPMBROK=LEFT(KEEPMBROK,1)
2110    !
2120  ORIF LEFT(STRNG,1)="R" THEN
2130    ! DO THE RUN COMMAND
2140    CALL RUN.IT
2150    !
2160  ORIF LEFT(STRNG,1)="H" THEN
2170    ! DO THE HELP COMMAND
2180    CALL HELP
2190    !
2200  ORIF LEFT(STRNG,1)="Q" THEN
2210    ! DO THE QUIT COMMAND
2220    STOP "EXIT"
2230    !
2240  ELSE 
2250    PRINT "FOR HELP TYPE HELP"
2260  ENDIF
2270  !
2280  GO TO 1740

2290  !
2300  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
2310  DEF RUN.IT
2320    !
2330    PRINT "FILE NAME ";
2340    INPUT IN FORM "R":STRNG
2350    CALL FILE.PARSE(STRNG,PARSIT)
2360    IF PARSIT(3)=PARSIT(4) AND PARSIT(2)#'TERMIN' THEN STRNG=STRNG+'.TBA'
2370    !
2380    ON FILE (3) GOTO 2950
2390    OPEN STRNG,BINARY INPUT,3
2400    ! CHECK FOR STICKY LINE NUMBERS
2410    INPUT FROM 3:INTEG
2420    CLOSE 3
2430    !
2440    IF (INTEG)MOD 2=1 THEN STKY.NUM.FLAG=T ELSE STKY.NUM.FLAG=F
2450    IF STKY.NUM.FLAG THEN PRINT "STICKY LINE NUMBERS ENCOUNTERED"
2460    !
2470    ! THE FILE IS OPEN FOR RANDOM ACCESS
2480    OPEN STRNG,RANDOM INPUT,1
2490    !
2500    PRINT "OUTPUT TO";
2510    INPUT IN FORM "R":STRNG
2520    CALL FILE.PARSE(STRNG,PARSIT)
2530    IF PARSIT(3)=PARSIT(4) AND PARSIT(2)#'TERMIN' THEN STRNG=STRNG+'.TBA'
2540    ON FILE(2) GOTO 2940
2550    OPEN STRNG,OUTPUT,2
2560    !
2570    IF PARSIT(2)="TERMIN" THEN
2580      ANSWER="NO"
2590    ELSE
2600      PRINT "TO TERMINAL ALSO";
2610      INPUT ANSWER
2620    ENDIF
2630    !
2640    DSP=COL
2650    !
2660    !
2670    PRINT
2680    PRINT " EXECUTION OF FORMATTER"
2690    PRINT
2700    !
2710    ON FILE 1 GOTO 2920
2720    ON ENDFILE 1 GOTO 2870
2730    FOR STATEMENT = 1 BY 1 WHILE 1+1=2
2740      CALL READ.A.LINE
2750      ! form feed kludge
2760      IF INDEX(LINE,CHAR(14B))=0 THEN 2790
2770      LINE=CHAR(14B)+CHAR(15B)
2780      GOTO 2830
2790      IF INDEX(LINE," ")#0 THEN 2820
2800      LINE=CHAR(15B)
2810      GOTO 2830
2820      CALL FORMAT.IT
2830      CALL CHOP.IT
2840      CALL WRITE.IT
2850    NEXT STATEMENT
2860    !
2870    CLOSE 1
2880    CLOSE 2
2890    PRINT "DONE"
2900    EXIT
2910    !
2920    STOP " ERROR IN YOUR SOURCE FILE FOUND"
2930    !
2940    CLOSE 1
2950    PRINT ERRMSG(ERRCD)
2960    EXIT
2970    !
2980  ENDF RUN.IT

2990  !
3000  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
3010  !
3020  ! GETNUM IS A FUNCTION TO INPUT A NUMERIC VALUE
3030  DEFINE GETNUM
3040    INPUT IN FORM "R":STRNG
3050    IF STRNG="" THEN 
3060      EXIT -1
3070    ELSE
3080      EXIT VAL(STRNG)
3090    ENDIF
3100  ENDF GETNUM
3110  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
3120  !
3130  DEF READ.A.LINE
3140    ! ROUTINE TO READ ONE STATEMENT
3150    !
3160    INPUT FROM 1 IN FORM "R":LINE
3170    IF STKY.NUM.FLAG THEN
3180      FSP=INDEX(LINE," ")
3190      LINE=SUBSTR(LINE,FSP+1)
3200    ENDIF
3210    !
3220    IN.A.DQ = FALSE
3230    IN.A.SQ = FALSE
3240    !
3250    ! GET THE REST OF THE FIRST LINE
3260    LEN=LENGTH(LINE)
3270    IF RIGHT(LINE,1)#"&" THEN EXIT
3280    INPUT FROM 1 IN FORM "R":STRNG
3290    IF STKY.NUM.FLAG THEN
3300      FSP=INDEX(STRNG," ")
3310      STRNG=SUBSTR(STRNG,FSP+1)
3320    ENDIF
3330    !
3340    ! UNLESS WE ARE IN A QUOTE, REMOVE TRAILING SPACES ON CONTINUATION
3350    FOR I=1 TO LEN
3360      CHARACTER=SUBSTR(LINE,I,1)
3370      IF CHARACTER='"' THEN
3380        IF NOT IN.A.SQ THEN IN.A.DQ = NOT IN.A.DQ
3390      ORIF CHARACTER="'" THEN
3400        IF NOT IN.A.DQ THEN IN.A.SQ = NOT IN.A.SQ
3410      ENDIF
3420    NEXT I
3430    IF KEEPMBROK='Y' THEN
3440      LINE=LINE + CHAR(13,1) + STRNG
3450    ELSE
3460      IF (NOT IN.A.DQ) AND (NOT IN.A.SQ) THEN
3470        LINE=LEFT(LINE,LEN-1) + ' ' + LJUST(STRNG)
3480      ELSE
3490        LINE=LEFT(LINE,LEN-1)+STRNG
3500      ENDIF
3510    ENDIF
3520    GOTO 3260
3530    !
3540  ENDF READ.A.LINE

3550  !
3560  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
3570  DEF FORMAT.IT
3580    ! ROUTINE TO FORMAT ONE LINE
3590    !
3600    !
3610    FSP=1
3620    FSP=FSP+1 UNTIL SUBSTR(LINE,FSP,1)>"9" OR SUBSTR(LINE,FSP,1)<"0"
3630    LINUMBER=LEFT(LINE,FSP-1)
3640    ! INSERT SPACE AFTER LINE NUMBER IF NONE EXISTS
3650    IF SUBSTR(LINE,FSP,1)#" " THEN LINE=LEFT(LINE,FSP-1)+" "+ RIGHT (LINE  &
         ,LEN-FSP+1)
3660    LEN=LENGTH(LINE)
3670    !
3680    FNS=FSP ! START LOOKING FOR FIRST NON SPACE AT THE FIRST SPACE
3690    FNS=FNS+1 UNTIL INDEX(LINE," ",FNS)#FNS
3700    !
3710    NS=INDEX(LINE," ",FNS)
3720    IF NS=0 THEN NS=LEN+1
3730    STRNG=SUBSTR(LINE,FNS,NS-FNS)
3740    IF STRNG="ENDF" OR STRNG="ENDIF" THEN DSP=DSP-IND
3750    IF STRNG="ORIF" OR STRNG="ELSE" THEN DSP=DSP-IND
3760    IF STRNG="NEXT" THEN
3770      NS=INDEX(LINE,"!")
3780      IF NS=0 THEN
3790        DSP=DSP-(IND*(COUNT(LINE,",")+1))
3800      ELSE
3810        DSP=DSP-(IND*(COUNT(SUBSTR(LINE,LEN-NS),",")+1))
3820      ENDIF
3830    ENDIF
3840    !
3850    DSP=MIN(DSP,3*LL/4) ! DO NOT ALLOW INDENTATION NEAR LINE LIMIT
3860    DSP=MAX(DSP,COL) ! DO NOT ALLOW DSP TO GO BELOW COL
3870    !
3880    ! ADJUST TO CURRENT DISPLACEMENT
3890    IF FNS<DSP THEN
3900      LINE=LEFT(LINE,FSP)+SPACE(DSP-FNS)+RIGHT(LINE,LEN-FSP)
3910    ELSE
3920      LINE=LEFT(LINE,FSP-1)+SPACE(DSP-FSP)+RIGHT(LINE,LEN-FNS+1)
3930    ENDIF
3940    !
3950    NS=INDEX(LINE," ",DSP)
3960    IF NS=0 THEN NS=LENGTH(LINE)+1
3970    STRNG=SUBSTR(LINE,DSP,NS-DSP)
3980    IF STRNG="FOR" OR STRNG="ELSE" THEN DSP=DSP+IND
3990    IF (STRNG="DEF" OR STRNG="DEFINE") AND COUNT(LINE,"=")+COUNT(LINE,"EXTE&
RN")=0 THEN DSP= DSP   +IND
4000    !
4010    IF INDEX(LINE,'!')>0 THEN
4020      IN.A.DQ,IN.A.SQ = FALSE
4030      FOR I=1 TO LENGTH(LINE)
4040        CHARACTER=SUBSTR(LINE,I,1)
4050        IF CHARACTER='"' THEN
4060          IF NOT IN.A.SQ THEN IN.A.DQ = NOT IN.A.DQ
4070        ORIF CHARACTER="'" THEN
4080          IF NOT IN.A.DQ THEN IN.A.SQ = NOT IN.A.SQ
4090        ORIF CHARACTER='!' AND (NOT IN.A.SQ) AND (NOT IN.A.DQ) THEN
4100          IF RIGHT(RJUST(LEFT(LINE,I-1)),4)='THEN' THEN DSP=DSP+IND
4110          GOTO 4160
4120        ENDIF
4130      NEXT I
4140    ENDIF
4150    IF RIGHT(RJUST(LINE),4)='THEN' THEN DSP=DSP+IND
4160  ENDF FORMAT.IT

4170  !
4180  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
4190  DEF CHOP.IT
4200    ! ROUTINE TO CHOP LONG STATEMENT INTO LITTLE LINES
4210    !
4220    !
4230    NL =1 ! NUMBER OF LINES SET TO 1
4240    TSL =0 ! TOTAL STATEMENT LENGTH SET TO 0
4250    IN.A.DQ=FALSE ! IGNORE "'" TRUE MEANS YOUR IN A DOUBLE QUOTE QUOTE
4260    IN.A.SQ=FALSE !SAME FOR IGNORE DOUBLE QUOTE
4270    IN.COM=FALSE ! IN.COM TRUE MEANS YOUR IN A COMMENT
4280    POINT=DSP ! POINT POINTS TO A SINGLE CHARACTER IN LINE
4290    !
4300    IF LENGTH(LINE)>LL OR SPCECOND="Y" OR KEEPMBROK="Y" THEN
4310      !
4320      CHARACTER=SUBSTR(LINE,POINT,1)
4330      !
4340      IF POINT=LL THEN
4350        IF IN.A.DQ OR IN.A.SQ THEN
4360          ! IF IN QUOTES SPLIT AND DONT INDENT
4370          LINEARRAY(NL)=LEFT(LINE,LL-1)+"&"
4380          LINE=SUBSTR(LINE,POINT)
4390        ELSE
4400          ! SEACH FOR SAFE PLACE TO SPLIT LINE
4410          POINT=POINT-1
4420          CHARACTER=SUBSTR(LINE,POINT,1)
4430          FOR ASCII=40B TO 55B,57B,72B TO 76B,133B TO 140B
4440            IF CHARACTER=CHAR(ASCII) THEN 4520
4450          NEXT ASCII
4460          GOTO 4410
4470          ! SPLIT THE LINE AND INDENT
4480          IF POINT < LL/2 THEN
4490            PRINT "DIFFICULTY SPLITTING LINE ";LINUMBER
4500            GOTO 4370
4510          ENDIF
4520          LINEARRAY(NL)=LEFT(LINE,POINT-1)+" &"
4530          LINE=SPACE(DSP+CLI-1)+LJUST(SUBSTR(LINE,POINT))
4540          POINT=DSP+1
4550        ENDIF
4560        TSL=TSL+POINT
4570        NL=NL+1
4580        !
4590      ORIF CHARACTER='"' THEN
4600        IF NOT IN.A.SQ THEN IN.A.DQ=NOT IN.A.DQ
4610        !
4620      ORIF CHARACTER="'" THEN
4630        IF NOT IN.A.DQ THEN IN.A.SQ=NOT IN.A.SQ
4640        !
4650      ORIF CHARACTER="!" THEN
4660        IF (NOT IN.A.DQ) AND (NOT IN.A.SQ) THEN IN.COM=T
4670        !
4680      ORIF CHARACTER=" " THEN
4690        ! DELETE EXTRA SPACES IF NOT IN QUOTE OR COMMENT
4700        IF NOT(IN.A.DQ OR IN.A.SQ OR IN.COM) AND SPCECOND="Y" THEN
4710          LINE=LEFT(LINE,POINT)+LJUST(SUBSTR(LINE,POINT+1))
4720        ENDIF
4725        !
4730      ORIF ASC(CHARACTER) = 13 THEN
4740        IF IN.A.DQ OR IN.A.SQ THEN
4750          LINEARRAY(NL)=LEFT(LINE,POINT-1)
4760          LINE=SUBSTR(LINE,POINT+1)
4770        ELSE
4780          LINEARRAY(NL)=LEFT(LINE,POINT-1)
4790          LINE=SPACE(DSP+CLI-1)+LJUST(SUBSTR(LINE,POINT+1))
4800          POINT=DSP
4810        ENDIF
4820        NL=NL+1
4830        TSL=TSL+POINT
4840      ENDIF
4850      !
4860      POINT=POINT+1
4870      ! CONTINUE LOOKING AT EACH CHARACTER IN LINE
4880      IF POINT<LENGTH(LINE) THEN 4320
4890    ENDIF
4900    LINEARRAY(NL)=LINE
4910    TSL=TSL+LENGTH(LINE)
4920  ENDF CHOP.IT

4930  !
4940  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
4950  DEF WRITE.IT
4960    ! ROUTINE TO WRITE THE STATEMENT
4970    !
4980    !
4990    IF TSL>SL THEN PRINT "STATEMENT";LEFT(LINEARRAY(1),FSP);"IS TOO LONG"
5000    FOR I=1 TO NL
5010      IF LEFT(ANSWER,1)="Y" THEN PRINT LINEARRAY(I)
5020      PRINT ON 2:LINEARRAY(I)
5030    NEXT I
5040  ENDF WRITE.IT

5050  !
5060  ! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
5070  !
5080  DEF HELP
5090    !ROUTINE TO PRINT INSTRUCTIONS
5100    !
5110    PRINT
5120    PRINT "THERE ARE FOUR COMMANDS AVAILABLE :"
5130    PRINT
5140    PRINT "HELP        TYPES THIS LIST"
5150    PRINT
5160    PRINT
5170    PRINT "CHANGE   ALLOWS YOU TO CHANGE ANY OF THE SEVEN  PARAMETERS"
5180    PRINT
5190    PRINT "          LINE CHAR LIMIT  THE NUMBER OF CHARACTERS THE TERMINAL"
5200    PRINT "                            WILL ALLOW PER LINE DEFAULT = 80"
5210    PRINT
5220    PRINT "          STATEMENT CHAR LIMIT  THE NUMBER OF CHARACTERS PER"
5230    PRINT "                         STATEMENT ALLOWED   DEFAULT = 256"
5240    PRINT
5250    PRINT "          INDENTATION CONSTANT  THE NUMBER OF SPACES USED TO"
5260    PRINT "                         INDENT FOR NEXT LOOPS,IF THENS,DEF'S"
5270    PRINT "                            DEFAULT = 2"
5280    PRINT 
5290    PRINT "          START COLUMN   THE COLLUMN IN WHICH THE FORMATING"
5300    PRINT "                         STARTS  DEFAULT = 7"
5310    PRINT
5320    PRINT "          CONTINUATION LINE INDENTATION  THE NUMBER OF"
5330    PRINT "                         SPACES INDENTED WHEN A STATEMENT"
5340    PRINT "                         CONTINUES ON A NEW LINE. DEFAULT=1"
5350    PRINT
5360    PRINT "          SPACES CONTRACTED  WHETHER OR NOT EXTRA SPACES "
5370    PRINT "                         ARE DELETED. DEFAULT=NO"
5380    PRINT
5390    PRINT "          LINE BREAKAGE PRESERVATION  WHETHER OR NOT EXISTING"
5400    PRINT "                        CONTINUATION LINES ARE JOINED BEFORE"
5410    PRINT "                        FORMATTING. DEFAULT=NO"
5420    PRINT
5430    PRINT "            A CARRIAGE RETURN IMPLIES THE DEFAULT VALUE"
5440    PRINT
5450    PRINT
5460    PRINT
5470    PRINT "RUN      FORMATS A BASIC PROGRAM. ASKS FOR THE FOLLOWING : "
5480    PRINT "          FILE NAME      THE NAME OF THE FILE YOU WANT "
5490    PRINT "                         FORMATED"
5500    PRINT
5510    PRINT "          OUTPUT TO      THE NAME OF THE FILE WHERE YOU WANT"
5520    PRINT "                         THE FORMATED PROGRAM"
5530    PRINT "         IT THEN ASKS IF YOU WANT A COPY SENT TO THE TERMINAL"
5540    PRINT "           WHEN ENTERING FILE NAMES, THE DEFAULT EXTENSION '.TBA&
'"
5550    PRINT "           IS USED IF NO EXTENSION OR '.' IS FOUND "
5560    PRINT
5570    PRINT
5580    PRINT "QUIT     RETURNS CONTROL TO THE MONITOR"
5590    PRINT
5600    PRINT "           ANY LEFT SUBSTRING OF THE COMMANDS O.K."
5610    PRINT
5620  ENDF HELP
5630  !
5640  END
     