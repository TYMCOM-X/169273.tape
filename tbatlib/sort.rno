.upper case
.spacing 1
.paper size 54,73
.left margin 8
.right margin 75
.tab stops 5 10 15 20 25 30 35 40 45 50 55 60 65 70
.paragraph 0
.flag capitalize
.flag index
.flag underline
.number 1
.figure 15
.C;TYMBASIC SORT
.S3;.C;1 Sep 1977
.S2;.C;TYMSHARE, INC.
.C;Technical Division
.PAGE
.first title
.nojustify
.FLAG INDEX
.title      TYMBASIC Sort
.i-4;^&Introduction\&
.p
SORT is a TYMBASIC library function capable of sorting any
variable length record symbolic file on numeric and alphanumeric keys.
It is available to any TYMBASIC program as an external procedure.
.p;.i-4;^&Using SORT\&
.p
Before SORT can be called, it must be defined as an external procedure
by the module containing the call to SORT with a statement of the form:
.p;.nf;#####DEF EXTERNAL SORT(IN$,OUT$,COM$)
.f;.p;Before running a program using SORT, this TYMBASIC
command must be executed:
.p;.nf;     LIBRARY (TBATLIB)SRTLIB
.p;.f;All of the modules necessary for using SORT will automatically
be loaded from the SORT library if these steps are done.
.p;.i-4;^&Calling SORT\&
.p;A call to SORT has the form:
.p;.nf;     CALL SORT(_<input file_>,_<output file_>,_<command string_>)
.p;.f;where _<input file_> and _<output file_> are
string expressions containing standard TYMBASIC file nomens.  If no 
confirmation keyword is given for the output file, the user will
be prompted when it is opened.  The output file may be
the same as the input file.
The terminal may be specified as the output file, but not as the
input file.
.p
_<command string_> is a string expression containing the sort keys and the maximum
record length in the form:
.p;.nf;     _</switch_>_</switch_>...
.p;.f;There are two switches which may be used:
.left margin 20
.p;.i-10;/Kabcm.n##The Key switch, /K,
defines the sort key according to the following parameters:
.left margin 31
.p;.i-8;a#=#S#(Signed) The field has an operational sign (+ or -).
If no sign is present in a field, it is assumed to be positive.
.test page 2
.i-8;a#=#U#(Unsigned) The field has no operational sign; any negative
sign is ignored.
.left margin 20
.p;If this parameter is omitted, the default value is S.
If the field type is alphanumeric, this parameter is ignored.
.left margin 31
.p;.i-8;b#=#X#(Alphanumeric) The field is alphanumeric.
.i-8;b#=#N#(Numeric) The field is numeric (see below).
.left margin 20
.p;If this parameter is omitted, the default is X if the sign
parameter (a) is also omitted.  If this parameter is omitted and the
sign parameter is included, the default is N.
.left margin 31
.p;.i-8;c#=#A#(Ascending) The field is to be sorted in ascending
order.
.i-8;c#=#D#(Descending) The field is to be sorted in descending
order.
.left margin 20
.p;If this parameter is omitted, the field is sorted in
ascending order.
.left margin 31
.p;.i-8;m#####is the starting character position of the field,
with the first character on a line being in position 1.
Each control character, incuding a tab (control-I), counts as one
character.
.i-8;n#####is the size of the field in characters.
.left margin 20
.p;More than one key may be entered with the /K switch if the keys
are separated from one another by commas (e.g., /Kabcm.n,abcm.n...).
Equivalently, the /K switch may be used more than once (e.g.,
/Kabcm.n/Kabcm.n...).
Up to twenty keys may be specified, and the fields may overlap.
The file is sorted according to the order of the keys, with the key
entered first being most important.
.p;.i-10;/Rm#######The Record size switch, /R, indicates the maximum
record size, where
m is the maximum length in characters.
(not including the carriage return - linefeed). The default value is 80
characters, and the maximum is 4095.
If a line is encountered during the sort with a
length greater than m, it will be truncated on the right.
The number of records which will fit in core increases as the
record size gets smaller, so a small record size may
result in faster execution time. If more than one
/R switch is specified, an error will occur unless the values are equal.
.left margin 8
.p;Any combination of one or more of these switches may be put
in the command string.  If the command string is empty, SORT will
return without doing anything.  If the command string is not empty but
there are no /K switches, an error condition will occur, with its
associated message (see below).
.p;Any of the arguments to the SORT call may be any combination
of upper and lower case.
.p;.i-4;^&Numeric Fields\&
.p;A numeric field is a set of numeric characters ("0" through "9")
which form an integer. A numeric field may have a + or - sign
preceding the first digit. An unsigned field is assumed to be positive.
The number in a field is terminated either by a non-numeric
character or by the end-of-field, whichever comes first. Any leading
spaces or tabs are ignored, but an imbedded space or tab will terminate
the number.
.p;.i-4;^&Order of Sorting\&
.p;Numeric fields are sorted in ascending or descending order according
to the numeric value of the field. Alphanumeric fields are sorted
character by character using the order currently in the ASCTABLE array.
(See the TYMBASIC Reference Manual for details.) This allows the user to
specify a nonstandard collating sequence for the sort. If ASCTABLE is not
changed by the user program, the standard ASCII collating sequence
will be used.
.p;.i-4;^&Value of SORT\&
.p;If the user desires, SORT can be used as a function,
returning as its value the number of lines which were sorted.
To do this, SORT must be declared as an integer function with
this statement:
.p;.nf;.i5;DEF INTEGER EXTERNAL SORT(IN$,OUT$,COM$)
.f;.p;If this statement is used to define it, SORT may be
used like a TYMBASIC function.
.p;.i-4;^&Examples\&
.p;The statement below will cause the sorting of the file SORT.IN
on two alphanumeric keys, an 8 character field starting in
position 5 and a 2 character field starting in position 3.
.p;.nf;     CALL SORT("SORT.IN","SORTED.OUT","/KXA5.8/KXA3.2")
.f;.p;Since no maximum record length is specified, it will be assumed to be
80.  The sorted output will go the the file SORTED.OUT, and the
user will be prompted when it is opened.
.p;The following statements will cause the file DATA.A
to be sorted onto itself. SORT must have been declared as an integer
function as shown above.
No prompting will take place.
.p;.nf;     COMSTR$="/KXA2.9,ND7.5/R55"
     RECORDS=SORT("DATA.A","DATA.A-E",COMSTR$)
.f;.p;This will sort on an alphanumeric key in positions 2-10 and a
numeric key in positions 7-11. The numeric key will be sorted in
descending order. Note that the keys may overlap.  The maximum
record length is specified to be 55 characters.
The number of lines which were sorted will be placed in the variable
RECORDS.
.p;.i-4;^&Errors\&
.p;One new error message has been defined in TYMBASIC to handle
errors in SORT. It has been given number 163 and is
"Error encountered during SORT".
Before this message is printed, a more explicit message will be printed
by SORT itself. This allows errors in SORT to be trapped in the same
manner as other TYMBASIC errors.
Error messages which may be received are:
.p;.lm 12;.nf
Improper SORT command string
'x' is not a valid switch
Only one /R allowed
Record size must be greater than zero
Record size must be less than 4095
Too many keys
Improper /K
No keys specified
Key m.n is outside record
Key m.n has zero length
.f;.lm 8;.p;Errors in opening the input or output file will
be trapped as file error conditions on file unit number -9,
and a file error message will be printed.
.p;If any other error message is received, it may be due
to a problem within SORT and should be reported to Tech Division.
.p;.i-4;^&Escapes\&
.p;Escapes are not currently supported within SORT. If one is
received, temporary files may be left
open and temporary storage may not be disposed of properly. If a restart
is attempted after an escape, SORT is likely not to work, and the
program will have to be loaded again.
