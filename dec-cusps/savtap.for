	PROGRAM SAVTAP			! Keeps track of tapes used for saves
C
C  .LOAD SAVTAP.FOR,REL:TOPLIB.REL	;RESCAN, INCHWL, and JBINFO in TOPLIB
C
	PARAMETER IN=1, IO=2		! I/O unit numbers
	PARAMETER MAX=7			! Number of VOLIDs to be used
	DOUBLE PRECISION CTLNAM		! File names
	DOUBLE PRECISION TODAY, DATE1	! Today and date from file
	DOUBLE PRECISION SINCE, TEMP2	! Since date, general DP variable
	DOUBLE PRECISION FULPAR		! 'FULL SAVE' or 'PARTIAL'
	DIMENSION TAPFIL(15)		! Up to 75 chars for tape file name
	DIMENSION LINE1(16)		! First line of tape file
	DIMENSION LINE(16)		! Remaining lines
	DIMENSION LINES(14,MAX)		! Lines used in part 2
	DIMENSION VOLID(MAX), USED(MAX)	! Volume-IDs in A4 format
	DIMENSION NUMS(MAX), SSDSK(MAX)	! Number of saveset, disk saved
	DIMENSION SAVDSK(3)		! List of disks to save
	DIMENSION SSNAME(4),SS4(4)	! 16th through 30th chars in SSNAME

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Get name of input file
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	TYPE 100
100	FORMAT (' Name of tape file (blank line to input from TTY) ',$)
	ACCEPT 110, TAPFIL
110	FORMAT (15A5)
	IF (TAPFIL(1).NE.' ') GOTO 200		! Will read from file
	TYPE 120
120	FORMAT (' Type in the six VOLIDs, one per line')
	DO 150 I = 1, MAX
	TYPE 130, I
130	FORMAT (' Tape #', I1, ' ', $)
	ACCEPT 140, VOLID(I)
140	FORMAT (A4)
150	CONTINUE			! End of DO I=1,MAX

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Get the type of save (FULL or PARTIAL)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

200	TYPE 210
210	FORMAT (' Type of save (FULL, PARTIAL, or VAULT) ',$)
	ACCEPT 220, SAVTYP, TEMP2
220	FORMAT (A4, A6)

	IF (SAVTYP.EQ.'TAPE' .OR. SAVTYP.EQ.'tape') GOTO 1000
	IF (SAVTYP.EQ.'part') SAVTYP = 'PART'	!'PART' must be upper case
	IF (SAVTYP.EQ.'gugg') SAVTYP = 'GUGG'	!'GUGG' must be upper case
	IF (TEMP2.EQ.'      ') TEMP2 = ' SAVE '	! 'FULL' => 'FULL SAVE'
	ENCODE (10,230,FULPAR) SAVTYP, TEMP2	! Put in 'SAVE' if needed
230	FORMAT (A4, A6)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  For partial saves, get the date of the previous save
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
	IF (SAVTYP.NE.'PART') GOTO 260
	TYPE 240				! Get date for partial save
240	FORMAT (' Since what date (01-JAN or MONDAY) ',$)
	ACCEPT 250, SINCE
250	FORMAT (A6)
	IF (SINCE.EQ.'      ') SINCE = 'YESTERDAY'

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Get a list of disks to save (up to 3 at a time)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

260	TYPE 270
270	FORMAT (' Which disks (AB, C, or X) ',$)
	ACCEPT 280, SAVDSK, LSTDEV
280	FORMAT (3A1, A5)
	IF (LSTDEV.EQ.' ') LSTDEV=' DSK:'	! Default listing device

	SPACE = '     '				! 1 to 5 blanks
	CALL DATE(TODAY)			! dd-Mmm-yy format
	IF (TAPFIL(1).EQ.' ') GOTO 400		! If already have VOLIDs

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Open the disk file, get the first 7 tape numbers, and update file
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	OPEN (UNIT=IN, ERR=600, DIALOG=TAPFIL, ACCESS='SEQIN')
	OPEN (UNIT=IO, ERR=600, DIALOG=TAPFIL, ACCESS='SEQOUT')
	LINE1(1) = ' '				! Assume OK

CC  Lines are of the format '0056 01 10-Jun-81 Wedne DSKB PARTIAL'

	READ (IN, 300) VOLID(1), NUMSS, TEMP2, WEEK, DSK, TYPE1, SSNAME
300	FORMAT (A4, 1X, I2, 1X, A10, A5, 1X, A5, A4, 4A5)

	IF (DSK.EQ.'*') TYPE 305, TYPE1, SSNAME	! Should be 'DSKB' or such
305	FORMAT (' "Previous run did not complete; ', A4, 4A5)
	IF (TYPE1.NE.'PART') GOTO 320		! Use it if not old partial
	IF (SAVTYP.EQ.'PART') GOTO 330		! Append if this is also partial

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Here if first tape in file has a partial save, and we are doing a full save
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	REREAD 310, LINE1			! Remember first line
310	FORMAT (16A5)
	READ (IN, 140) VOLID(1)			! Get new 1st volume

320	NUMSS = 0				! Start at beginnining of tape

330     X = '*'					! Mark 1st VOLID as in use
	WRITE (IO, 300) VOLID(1), NUMSS, TODAY, X, X, SAVTYP, SP, SAVDSK
	DO 340 I = 2, MAX			! Get 5 more VOLIDs
	READ (IN, 300) VOLID(I), I1, TEMP2, X1, X2, X3, SS4
340	WRITE (IO, 300) VOLID(I), I1, TEMP2, X1, X2, X3, SS4

350	READ (IN, 310, END=360) LINE		! Read in a line
	IF (LINE(1) .EQ. ' ') GOTO 350		! SED sometimes makes blank line
	WRITE (IO, 310) LINE			! Write it back out
	GOTO 350				! Copy rest of file

360	IF (LINE(1).NE.' ') WRITE (IO, 310) LINE1 ! First line at bottom of file
	CLOSE (UNIT=IN)
	CLOSE (UNIT=IO)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Display VOLIDs to be used, open .CTL file for output
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

400	TYPE 410, VOLID				! Display them
410	FORMAT (' Using tapes  ', 7(A4, 2X))

	ENCODE (10,420,CTLNAM) SAVTYP, SAVDSK(1), SAVDSK(2)
420	FORMAT (A4, A1, A1, '.CTL')		! Assume 2 or more disks
	IF (SAVDSK(2).EQ.' ') ENCODE (10,430,CTLNAM) SAVTYP, SAVDSK(1)
430	FORMAT (A4, A1, '.CTL')			! Make 5 character file name

	TYPE 440, CTLNAM
440	FORMAT ('0Creating ', A10, /)
	OPEN (UNIT=IO, FILE=CTLNAM, ACCESS='SEQOUT')

CC  The MOUNT request will look like:
CC .MOUNT BACKUP-PART-B(0001,0002,0003,0004,0005,0006)/WRITE/LABEL:ANSI/NOTIFY

	NODE = 1				! Node 1=KL1091, 2=KS2020
	IF(SAVDSK(1).EQ.'X' .OR. SAVDSK(1).EQ.'x') NODE = 2  !2020's DSKX:
	IF(SAVDSK(1).EQ.'C' .OR. SAVDSK(1).EQ.'c') NODE = 2  !2020's DSKC:

	IDENS = 6250				! Density for 1091
	IF (NODE.EQ.2) IDENS = 1600		! Density for 2020 saves

	WRITE (IO,500) SAVTYP, SAVDSK, VOLID, IDENS, SAVDSK(1)
500	FORMAT ('$STEP ONE'/'$MOUNT BACKUP-',A4,'-',3A1,'(',6(A4,','),
	1 A4,')/WRITE/LABEL:ANSI/NOTIFY/DENS:',I4/
	2 '$MOUNT DSK',A1,':'/
	3 '$ENDHDR'/'START::.CHKPNT START')	! Format for 7 tapes "6(A4"

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Create SAVE commands for each of the disks
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	DO 580 I = 1, 3				! Up to 3 disks on a save
	IF (SAVDSK(I).EQ.' ') GOTO 580		! Skip if this one is blank
	DSK = SAVDSK(I)				! Put in nicer variable

	ENCODE (5,505,TYPDSK) SAVTYP, DSK
505	FORMAT (A4, A1)				! FULLA or PARTB

	IF ((I.EQ.1).AND.(NUMSS.GT.0)) WRITE (IO,510) NUMSS
510	FORMAT ('.SKIP BACKUP:', I2, ' FILES')

	WRITE (IO,520) DSK, DSK, DSK, DSK, LSTDEV, TYPDSK
520	FORMAT ('.MOUNT DSK', A1/'.IF (ERROR) .GOTO END', A1/
	1 'SAVE', A1, '::.PATH /CREATE:(DSK',A1,',*)'/
	2 '.R BACKUP'/'*SORT DIRECTORIES ALPHA'/
	3 '*SORT FILES ALPHA'/
	4 '*NOEXEMPT'/'*DIRECTORIES'/
	5 '*NLIST ', A5, A5, '.LST')
	IF (SAVTYP.EQ.'PART') WRITE (IO,530) SINCE
530	FORMAT ('*SINCE ', A6, ':17:00')

	SSNAME(1) = ' '				! Set to all blanks
	SSNAME(2) = ' '
	SSNAME(3) = ' '
	SSNAME(4) = ' '
	IPPN = JBINFO(2).AND."777777		! Get programmer number
	IF (IPPN.NE.2) ENCODE (20,535,SSNAME) IPPN
535	FORMAT ('[*,', O6, ',*,*,*,*,*]')	! If not [1,2]

	IF (IPPN.EQ.2) WRITE (IO,540) DSK, FULPAR ! Without 20 trailing spaces
540	FORMAT ('*SSNAME "DSK', A1, 1X, A10)
	IF (IPPN.NE.2) WRITE (IO,542) DSK, SAVTYP, SSNAME ! PPN if not [1,2]
542	FORMAT ('*SSNAME "DSK', A1, 1X, A4, 1X, 4A5)
	WRITE (IO,544) DSK, SSNAME
544	FORMAT ('*SAVE DSK',A1,':',4A5/'.IF(ERROR).GOTO ABORT'/'*EXIT')

	WRITE (IO,560) LSTDEV, TYPDSK, DSK, NODE
560	FORMAT ('.NOERROR'/
	1 '.TYPE TMP:TAP	;Show VOLIDs used'/
	2 '.DO SAVTAP ', A5, A5, ',', A1, ',', I1, ',;File, DSK, Node'/
	3 '.ERROR ?')

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Create a CHKPNT, to be used if system crashes after 1st disk is saved
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	NUMSS = NUMSS + 1			! Increment number to skip
	IF (I.LT.3 .AND. SAVDSK(I+1).NE.' ')
	1 WRITE (IO,570) DSK, DSK, DSK, NUMSS
570	FORMAT ('.CHKPNT SKIP', A1, '	;In case of crash'/
	1 '.GOTO END', A1, '	;Continue at current tape position'/
	2 'SKIP', A1, '::.SKIP BACKUP:', I2, ' FILES')
	WRITE (IO,575) DSK
575	FORMAT ('END', A1, '::')		! Label for .IF (ERROR)
580	CONTINUE			! End of DO I=1,3

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Finish the CTL file
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	WRITE (IO,585)
585	FORMAT('.SET WATCH MTA'/'.DISMOUNT BACKUP:')
	IF (TAPFIL(1).NE.' ') WRITE (IO,590) SAVTYP, SAVDSK(1), TAPFIL
590	FORMAT ('.COPY ',A4,A1,'.TMP=TMP:TAP'/'.R SAVTAP'/
	1 '*', 15A5/ '*TAPES')			! Finish up with tape file
	WRITE (IO,595)
595	FORMAT('.KJOB'/'ABORT::'/
	1 '.PLEASE Problems with BACKUP, will try again in 5 minutes^['/
	2 '.REQUEUE')
	CLOSE (UNIT=IO)
	STOP	'SUBMIT the .CTL file with /TIME'

600	TYPE 610, TAPFIL
610	FORMAT (' ?Cannot access ', 15A5)
	STOP

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C  Here to finish updating the tape file.  The TAP file in TMPCOR looks like
C	SSNAME:DSKA PARTIAL
C	DATE:  10-Jun-81 Wednesday
C	VOLUME:AU02   FILE:03
C	EOV:
C	VOLUME:AU03   FILE:01
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

1000	OPEN (UNIT=IN, ERR=600, DIALOG=TAPFIL, ACCESS='SEQIN')
	READ (IN,1005) (VOLID(I),K,(LINES(J,I),J=1,14),I=1,MAX) ! Get 7 volids
1005	FORMAT (A4,1X,I2,14A5)			! From 7 separate lines
	NAM3='TAP'

	CALL RESCAN (NAM3,LINE,KOUNT,16,LASTC) ! Set up to read TMP:TAP
	IF (KOUNT.GE.0) STOP '%Nothing in TMP:TAP'
	N = 0					! No tapes used yet
	TYPE 1006				! Type Formfeed, asterisks
D	PRINT 1006				! Send same to printer
1006	FORMAT (/' ***********************************************'/)

1010	CALL INCHWL (NAM3,LINE,KOUNT,16,LASTC)	! Get a line from file
	IF (KOUNT.LE.0) GOTO 1100		! Stop at end of TMP file
	IWORD = (KOUNT+4)/5			! Number of nonblank words
	TYPE 1015, (LINE(I),I=1,IWORD)		! Put line in BATCH log file
D	PRINT 1015, (LINE(I),I=1,IWORD)		! Send same to printer
1015	FORMAT (5X, 16A5)

	IF (LINE(1).EQ.'SSNAM') DECODE (80,1020,LINE) DSK, TYPE, SSNAME
1020	FORMAT (7X, A5, A4, 4A5)		! SSNAME:DSKA PARTIAL
	IF (LINE(1).EQ.'DATE:') DECODE (80,1030,LINE) TODAY, WEEK
1030	FORMAT (7X, A10, A5)			! DATE:  10-Jun-81 Wednesday
	IF (LINE(1).NE.'VOLUM') GOTO 1010	! Need VOLUME to proceed

	IF (N.LT.MAX) N = N + 1			! Count number of tapes used
	SSDSK(N) = DSK				! Remember current disk
	DECODE (80,1040,LINE) USED(N), NUMS(N)
1040	FORMAT (7X, A4, 8X, I2)			! VOLUME:123456 FILE:01
	IF (N.EQ.1) GOTO 1045			! Skip next test on 1st tape
	IF (USED(N).NE.USED(N-1)) GOTO 1045	! DSKU save starts after DSKA
	NUMS(N-1) = NUMS(N)			! Use proper file number
	N = N - 1				! Still on previous tape
	GOTO 1055				! VOLID(N) has been invalidated
1045	IF (USED(N).NE.VOLID(N)) TYPE 1050, USED(N), VOLID(N)
1050	FORMAT (' "Volume ', A4, ' used when ', A4, ' was in file')

CC  Invalidate VOLIDs used

1055	DO 1060 I = 1, MAX			! Loop through all 7 VOLIDs
1060	IF (VOLID(I).EQ.USED(N)) VOLID(I) = ' '	! Blank VOLID if in USED
	GOTO 1010				! Read all of TMP file


1100	TYPE 1102, TAPFIL			! Put file name in message
D	PRINT 1102, TAPFIL			! Send same to printer
1102	FORMAT (' Tape list is in ', 15A5)
	TYPE 1006				! Type blank line, asterisks
D	PRINT 1006				! Send same to printer
	IF (N.EQ.0) STOP '? TMP:TAP had no VOLUME records'
	OPEN (UNIT=IO, DIALOG=TAPFIL, ACCESS='SEQOUT')

CC  Lines are of the format '0056 01 10-Jun-81 Wedne DSKB PARTIAL'

	IF (TYPE.NE.'PART') GOTO 1105
	WRITE (IO,300) USED(N),NUMS(N),TODAY,WEEK,SSDSK(N),TYPE,SSNAME
	N = N - 1				! Last tape is at top of file

1105	K = 0					! Start at beginning next time
	DO 1110 I = 1, MAX			! Write out ones not used
1110	IF (VOLID(I).NE.' ')WRITE(IO,1005)VOLID(I),K,(LINES(J,I),J=1,14)

CC  Copy rest of file

	IF (N.NE.MAX) GOTO 1120			! Check if all 7 were used
	READ (IN, 300) VOL			! Get 8th volid if all 7 used
	WRITE (IO, 300) VOL, ZERO		! Make sure TYPE is not PARTIAL

1120	READ (IN, 310, END=1130) LINE		! Read in a line
	IF (LINE(1) .EQ. ' ') GOTO 1120		! SED sometimes makes blank line
	WRITE (IO, 310) LINE			! Write it back out
	GOTO 1120				! Copy rest of file

CC  Put used tapes at the bottom

1130	IF (N.EQ.0) GOTO 1150			! Skip this if 0 tapes left
	DO 1140 I = 1, N
1140	WRITE (IO,300) USED(I),NUMS(I),TODAY,WEEK,SSDSK(I),TYPE,SSNAME

1150	CLOSE (UNIT=IO)

	END
    