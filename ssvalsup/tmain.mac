SUBTTL STARTUP - Initializing section
STPT:	RESET
	MOVE	P,PDLP			; GET STACK POINTER
	SETZB	FLG,FLG2		; RESET ALL FLAGS
	MOVEI	AP,LUDARG
        PUSHJ   P,LUDINF ; LUDINF(LUDFLG,SIXUNM,MY.GAN,MY.UUN,MY.DIS,INITFL)
        SKIPE   LUDFLG
        JRST    [TLO    FLG,U.IFL
                 BOMB   (ERR.LF)]
	PUSHJ	P,UNSA			; Translate SIXBIT Username to ASCII
	SKIPN	INITFL
	JRST	STPT0
        MOVE    AC,INITFL
        CAME    AC,[SIXBIT/TYMVAL/]
        JRST    STPT0
        MOVE    AC,INITFL+1
        CAME    AC,[SIXBIT/SYS/]
        CAMN    AC,[SIXBIT/FTSYS/]
        TLO     FLG,U.IFL		; SET INITIAL FILE FLAG
STPT0:	HRROI	AC,.GTLOG		; SET TO GET PORT INFO WORD
	GETTAB	AC,
	SETZ	AC,
	TLNN	AC,(LG.TID)		; SKIP IF THIS IS NOT AN AUX CIRCUIT
	BOMB	(ERR.NX)
	SETO	AC,
	GETLCH	AC			; GET OUR LINE CHARACTERISTICS WORD
	TLNE	AC,(LC.HDX)		; SKIP IF NOT HALF DUPLEX
	TLO	FLG2,V.HDX		; SET OUR HDX FLAG
	TLNE	FLG2,V.HDX
	JRST	STPT1
	MOVEI	AC,1			; SET UP TO ENTER DEFERRED ECHO MODE
	MOVEM	AC,OLDDEF
	HRROI	AC,.AXEDE		; PREPARE FOR DEF ECHO MODE AUXCAL
	AUXCAL	AC,OLDDEF		; DO IT.
STPT1:	MOVE	AC,[.CNSYS,,.GTCNF]
	GETTAB	AC,			; GET THIS SYSTEM NUMBER
	SETZ	AC,
	IFNDEF	TEST,<
	CAIE	AC,RUNHOS		; SKIP IF IT'S THE RIGHT SYSTEM
	BOMB	(ERR.HO)>
	HRROI	AC,.GTPRV		; READY TO GET FRAME PRIV WORD
	GETTAB	AC,
	SETZ	AC,
	LDB	AC1,[POINT 6,AC,7]	; TIME ZONE
	MOVEM	AC1,MY.TZ		; SAVE TIME ZONE
	LDB	AC,[POINT 2,AC,28]	; ISOLATE MONITOR MODE BITS
	MOVEI	AC1,ESC			; MOVE ESC CHAR CODE TO AC1
	CAIN	AC,.JPMPD		; SKIP IF WE'RE NOT IN PDP MODE
	MOVEI	AC1,CTRLC		; MOVE CONTROL C CHAR CODE TO AC1
	CAIN	AC,.JPMSU		; SKIP IF WE'RE NOT IN SUDS MODE
	MOVEI	AC1,CTRLC
	MOVEM	AC1,ESCCHR		; SET ESCAPE CHARACTER
	HRROI	AC,.GTLIC		; SET TO GET LICENSE WORD
	GETTAB	AC,
	SETZ	AC,
	MOVEM	AC,SAVLIC		; SAVE FOR LATER
	TRNE	AC,(LC.WC)		; SKIP IF NO WC FRAME LICENSE
	TLO	FLG,U.WC		; SET WRITE CORE FLAG
	TLNN	AC,(LC.AC)		; SKIP IF AC PROCESS LICENSE OK
	BOMB	(ERR.AC)		; FATAL - TELL HIM SO AND EXIT
	TLNN	AC,(LC.WF)		; SKIP IF WF PROCESS LICENSE OK
	BOMB	(ERR.WF)
	PUSHJ	P,TVACES		; CHECK FOR PERMISSION TO USE THIS PROG
	TLNE	FLG,U.PRV
	JRST	STPT3
	MOVE	AC,MY.GAN
	CAMN	AC,[TR.GAN]		; SKIP IF NOT TYMRES GAN
	JRST	[TLO	FLG,U.CUST	; SET TYMNET CUST. FLAG
		 JRST	STPT2]
	CAMN	AC,[HQ1.GN]		; SKIP IF NOT HQTECH1 GAN
	JRST	[TLO	FLG,U.CUST
		 JRST	STPT2]
	CAME	AC,[TR6.GN]		; SKIP IF TYMRES6 GAN
	BOMB	(ERR.LI)
	TLO	FLG,U.CUS1
STPT2:	MOVE	AC,[MY.UNM,,MAINAM]
	BLT	AC,MAINAM+2
	MOVE	AC,MY.UUN
	MOVEM	AC,MAIUUN
	MOVE	AC,MY.GAN
	MOVEM	AC,MAIGAN
	PUSHJ	P,VALMAI
	BOMB	(ERR.ML)
	JRST	STPT4
STPT3:	TLO	FLG,U.IMM		; PRIV USERS DEFAULT TO IMMEDIATE MODE
STPT4:	PUSHJ	P,GETPJ			; CHECK (PJ)JOBS.DAT
	BOMB	(ERR.PJ)
	PUSHJ	P,MKDIST		; MAKE DISTRICT TABLE
	BOMB	(ERR.D1)
	DATE	AC,			; GET DEC FORMAT DATE
	IDIVI	AC,^D372		; ISOLATE YEAR
	ADDI	AC,^D64			; CORRECT
	IDIVI	AC,^D10			; SEPARATE DIGITS
	IMULI	AC,^D10			; FORM THE DECADE PORTION
	MOVEM	AC,DECADE		; INT (YEAR/10) * 10
	MOVEM	AC1,LYDIG		; YEAR MOD 10
	SETZB	LPOST,LPOSF		; INITIALIZE POSITION COUNTERS
	SETZ	IF.P,			; INITIALIZE INPUT FILE INDEX
	IFDEF	DEBUG, <
	MOVE	AC,[.CHOPN,,TOUCHN]	; SET TO START A TOUT FILE
	CHANIO	AC,TOUBLK		; OPEN THE CHANNEL
	BOMB	(ERR.FI)
	MOVE	AC,[.CHENT,,TOUCHN]	; SET TO DO ENTER
	CHANIO	AC,TOULK
	BOMB	(ERR.FI)
	TLO	FLG,U.TOUT		; SET TOUT FLAG 
	PUSHJ	P,STOURB
	>
	HRLI	AC,.CHOPN		; SET TO OPEN TERMINAL INPUT
	HRR	AC,INCHN(IF.P)		; GET THE CHANNEL NUMBER
	CHANIO	AC,INDBL1		; OPEN IT
	BOMB	(ERR.FI)
	PUSHJ	P,SINDRB
	PUSHJ	P,FMTVER
	TCR	(1)
	TYPSTR	([ASCIZ "Welcome to TYMVALIDATE - Version"],777,0,0,N)
	TYPSTR	(C.VER,777,1,0,Y)
	IFDEF	DEBUG, <
	TYPSTR	([ASCIZ/* Debug Version. */],777,7) >
	IFDEF	TEST, <
	TYPSTR	([ASCIZ/* Test Version. */],777,7) >
	TCR	(1)
	PUSHJ	P,CKSHUT		; MSGS AND POSIBLE SHUT
	HRLI	AC4,IA.REE
	HRRI	AC4,TRPVEC
	INTADR	AC4,
	HALT
	HRLZI	AC4,.IAESC
	LSH	AC4,^D9
	TLO	AC4,2
	HLLOS	AC4
	TINASS	AC4,
	HALT
	HRLZI	AC4,(1B0!1B2)
	INTENB	AC4,
	HALT
	TLO	FLG,U.EOL
	GETT	(/RUN/)
	JRST	GETCM1
	PUSHJ	P,STDHDR
	PUSHJ	P,RELTTF
	PUSHJ	P,MKLGID
	JRST	GETCM1			; TRANSFER TO COMMAND DISPATCHER
SUBTTL CMDPAR - Command Dispatcher

DEFINE	CMS1	<
IFDEF	DEBUG,	<
	X [ASCIZ"NREQF"],5,CMDNRF,U.PROG,-1	; NEW REQUEST FILE 
	X [ASCIZ"EXIT"],3,CMDEXI,U.PROG,-1	; EXIT COMMAND
>
	X [ASCIZ"NETWK"],5,CNETWK,U.PROG,-1	; SET NET WORK LICENSE
	X [ASCIZ"CUSTOMER"],5,CCUSTO,U.PROG,-1	; SET CUSTOMER LICENSE
	X [ASCIZ"ADD"],2,CMDADD,U.PRV,-1	; ADD COMMAND
	X [ASCIZ"ANSWER"],2,CMDANS,U.PRV,-1	; ANSWER REQUEST
	X [ASCIZ"ASK"],1,CMDASK,U.CST,-1	; ASK FOR CUSTOMER LICENSE
	X [ASCIZ"ASK"],2,CMDASK,U.PRV,-1	; ASK FOR PRIVILEGE LICENSE
	X [ASCIZ"CANCEL"],2,CMDCNC,-1,-1	; CANCEL COMMAND
	X [ASCIZ"CHANGE"],3,CMDCHG,-1,-1	; CHANGE COMMAND
	X [ASCIZ"CHECK"],3,CMDCHK,-1,-1		; CHECK COMMAND
	X [ASCIZ"CLEAR"],2,CMDCLR,U.PRV,-1	; CLEAR COMMAND
	X [ASCIZ"COMMANDS"],2,CMDCOM,U.PROG,-1	; COMMANDS COMMAND
	X [ASCIZ"EXAMINE"],1,CMDEXM,U.PRV,-1	; EXAMINE
	X [ASCIZ"HELP"],1,CMDHLP,U.CST,-1	; HELP FOR CUSTOMER LICENSE
	X [ASCIZ"HELP"],2,CMDHLP,U.PRV,-1	; HELP FOR PRIVILEGE LICENSE
	X [ASCIZ"HOLD"],2,CMDHOL,U.PRV,-1	; HOLD
	X [ASCIZ"IMMEDIATE"],2,CMDIMM,U.PROG,-1	; IMMEDIATE MODE EXECUTION
	X [ASCIZ"INSTRUCTIONS"],1,CMDINS,U.ALL,-1
	X [ASCIZ"INSTRUCTIONS"],2,CMDINS,U.PROG,-1
	X [ASCIZ"LIST"],1,CMDLIS,-1,-1		; LIST COMMAND
	X [ASCIZ"NEED"],3,CMDNEE,U.PRV,-1	; NEED COMMAND
	X [ASCIZ"NEW"],1,CMDNEW,U.CST,-1	; NEW FOR CUSTOMER LICENSE
	X [ASCIZ"NEW"],3,CMDNEW,U.PRV,-1	; NEW FOR PRIVILEGE LICENSE
	X [ASCIZ"PROCESS"],1,CMDPRO,U.PRV,-1	; PROCESS
	X [ASCIZ"QUIT"],1,CMDQUI,-1,-1		; QUIT
	X [ASCIZ"REMOVE"],1,CMDRMV,U.PRV,-1	; REMOVE COMMAND
	X [ASCIZ"SET"],1,CMDSET,U.PRV,-1-1	; SET COMMAND
	X [ASCIZ"TOUT"],2,CMDTOU,U.PROG,-1	; TOUT COMMAND
	X [ASCIZ"TYPE"],2,CMDTYP,U.IMM,U.PROG	; TYPE COMMAND
	X [ASCIZ"UNHOLD"],3,CMDUNH,U.PRV,-1	; UNHOLD
	X [ASCIZ"UNLOCK"],3,CMDUNL,U.PRV,U.IMM	; UNLOCK COMMAND
	X [ASCIZ"VERSION"],1,CMDVER,-1,-1	; VERSION COMMAND
>
DEFINE	X (A,B,C,D,E) <
	EXP	A
>
CM1TAB: CMS1				; LEVEL 1 COMMANDS
CM1LEN==.-CM1TAB			; SEZE OF LEVEL 1 COMMANDS TABLE
DEFINE	X (A,B,C,D,E) <
	EXP	B
>
CM1MIN: CMS1
DEFINE	X (A,B,C,D,E) <
	EXP	C
>
CM1ADR: CMS1
DEFINE	X (A,B,C,D,E) <
	XWD	D,E
>
CM1FLG: CMS1
GETCMD:	; COMMAND DISPATCHER ROUTINE
	SETZM	NUMLEN
	SETZM	REQNUM
	SETZM	REQCOM
	TRZE	FLG,U.OKAY		; SKIP IF LAST COMMAND NOT COMPLETE OK
	JRST	GETCM1			; CONTINUE
	TLNN	FLG,U.IND		; SKIP IF DOING INPUT FRO INDIRECT FILE
	JRST	GETCM1			; IF NO IND FILE, IT DOSN'T MATTER
	TLZ	FLG,U.IND!U.NOTY	; RESET INDFILE BIT
	SETZ	IF.P,			; BACK TO BASE DEVICE
	TLZ	FLG,U.EOL
	MOVE	AC,SAVFLG
	TLNE	AC,U.EOL
	TLO	FLG,U.EOL
	TYPSTR	([ASCIZ/Input from indirect or command file terminated./])
	TCR	(1)
GETCM1:	TRZ	FLG,U.RFI		; RESET REQUEST INPUT
;	TLZ	FLG2,V.QUO!V.EXC!V.LSQ!V.EXQ!V.PRQ
	TLZ	FLG2,V.EXC!V.LSQ!V.EXQ!V.PRQ!V.FUSR!V.NWAC
	TLZ	FLG,U.TOF
	HLLZS	FLG2
	PUSHJ	P,CLRREQ
	MOVE	P,PDLP			; RESET STACK POINTER
	PUSHJ	P,WASLIN		; EAT UP ANY REMAINING CHARS IN LINE
	INSTR	([ASCIZ/*/],STRSP,5,T)
	MOVEI	AC,STRSP
	MOVEI	AC1,5
	PUSHJ	P,CNTCHR
	JUMPE	AC1,GETCM1		; NO INPUT
	MOVE	AC4,MSK(AC1)		; GET CORRECT MASK
	SETZ	AC2,			; PREPARE INDEX
CM1LP:	HLLZ	AC,CM1FLG(AC2)
	TDNN	FLG,AC
	JRST	CM1LP1
	HRLZ	AC,CM1FLG(AC2)
	TDNN	FLG,AC
	JRST	CM1LP1
	MOVE	AC,CM1MIN(AC2)		; GET MINIMUM CHAR
	CAMGE	AC1,AC			; SKIP IF ENOUGH CHARS INPUT
	JRST	CM1LP1			; PREPARE FOR NEXT CHECK
	MOVE	AC,@CM1TAB(AC2)		; GET STRING TO COMPARE TO
	AND	AC,MSK(AC1)
	OR	AC,NMSK(AC1)
	CAMN	AC,STRSP		; SKIP IF NOT EQUAL
	JRST	CM1LPD
CM1LP1:	AOJ	AC2,			; INCREMENT INDEX
CM1LP2:	CAIG	AC2,CM1LEN		; CHECK IF TABLE EXHAUSTED
	JRST	CM1LP
	JRST	CM1LPE
CM1LPD:	; HERE WHEN WE HAVE A MATCH
	PUSHJ	P,@CM1ADR(AC2)		; DO THE COMMAND
	SKIPA
	JRST	GETCM2
	TCR	(1)
GETCM2:	JRST	GETCMD			; AND GO AGAIN
CM1LPE:	; HERE WHEN NO MATCH IS FOUND
	PUSHJ	P,WASLIN
	MOVNI	ACX,CM1LEN		; FOR AOBJN
	HRLZS	ACX
	TYPSTR	([ASCIZ/Options are: /])
CM1LE2:	HLLZ	AC,CM1FLG(ACX)
	TDNN	FLG,AC
	JRST	CM1LE5
	HRLZ	AC,CM1FLG(ACX)
	TDNN	FLG,AC
	JRST	CM1LE5
	TYPSTR	(@CM1TAB(ACX),777)	; TYPE FROM MATCH TABLE
CM1LE5:	AOBJN	ACX,CM1LE2		; DO THE REST
	TCR	(1)
	JRST	GETCMD

	EXIT
SUBTTL TIOCOM - TOUT, COMMANDS, QUIT

; TOUT COMMAND
; TOUT opens a new TOUT file, closes any existing TOUT file.

CMDTOU:	INSTR	([ASCIZ/TOUT file:/],FILIN,25,S)
	MOVE	AC,[ASCII/OFF  /]	; CHECK IF WE WANT TO DISABLE TOUT
	CAMN	AC,FILIN		; SKIP IF FILENAME IS NOT OFF
	JRST	CMDTO2
	MOVEI	AP,TOUARG		; SET TO PARSE FILENAME
	PUSHJ	P,FNPAR			; PARSE THE FILENAME
	JUMPGE	AC,TOUER3		; ERROR FROM FNPAR
	SETZM	TOUBLK			; PREPARE OPEN BLOCK
	HRLZI	AC,TOUBUF		; OUTPUT RING BUFFER HEADER
	MOVEM	AC,TOUBLK+2
	MOVE	AC,TOUDEV		; DEVICE FROM FNPAR
	MOVEM	AC,TOUBLK+1
	MOVE	AC,[.CHOPN,,TOUCHN]	; PREPARE TO OPEN DEVICE
	CHANIO	AC,TOUBLK		; DO IT
	JRST	TOUER1
	MOVE	AC,SAVLIC		; GET SAVED LICENSE WORD
	HRLS	AC			; MAKE PROC LIC = FRAME LIC
	SETLIC	AC,			; TO DISABLE WF PROC LICENSE
	MOVE	AC,[.CHENT,,TOUCHN]	; PREPARE TO ENTER
	CHANIO	AC,TOULK		; DO IT
	JRST	TOUER2
	MOVE	AC,SAVLIC		; GET SAVED LICENSE WORD
	SETLIC	AC,			; RESTORE PROC LICENSE
	PUSHJ	P,CHKLIC
	TLO	FLG,U.TOUT
	TRO	FLG,U.OKAY		; SET COMPLETION FLAG
	PUSHJ	P,STOURB
	POPJ	P,
CMDTO2:	; TURN OFF ANY EXISTING TOUT FILE
	TLNN	FLG,U.TOUT		; SKIP IF WE HAVE A TOUT FILE
	JRST	CMDTO3
	MOVE	AC,[.CHREL,,TOUCHN]
	CHANIO	AC,			; RELEASE TOUT CHANNEL
CMDTO3:	TLZ	FLG,U.TOUT		; TURN OFF TOUT FLAG
	POPJ	P,
TOUER1:	TYPSTR	([ASCIZ/Channel open failed./])
	TLZ	FLG,U.TOUT
	POPJ	P,
TOUER2:	TYPSTR	([ASCIZ/Enter failed./])
	TLZ	FLG,U.TOUT
	MOVE	AC,SAVLIC
	SETLIC	AC,
	PUSHJ	P,CHKLIC
	POPJ	P,
TOUER3:	TYPSTR	([ASCIZ/Error parsing filename./])
	PUSHJ	P,INORNO
	JRST	CMDTOU
CMDCOM:	; OPEN A NEW COM FILE, NEST OFF EXISTING FILE
	CAIL	IF.P,MAXINR-1		; SEE IF ANY CHANNELS LEFT
	JRST	COMER1			; NO, REJECT REQUEST
	INSTR	([ASCIZ/Com File:/],FILIN,25,T,AC,N,N,N)
	MOVEI	AP,COMARG
	PUSHJ	P,FNPAR
	JUMPGE	AC,COMER2
	AOJ	IF.P,			; INCREMENT IND FILE INDEX
	SETZM	COMBLK			; PREPARE TO OPEN CHANNEL
	MOVE	AC,INRTAB(IF.P)
	MOVEM	COMBLK+2
	MOVE	AC,COMDEV
	MOVEM	AC,COMBLK+1
	MOVE	AC,SAVLIC
	HRLS	AC
	SETLIC	AC,			; REDUCE PROC LIC TO FRAME LIC
	HRR	AC,INCHN(IF.P)		; GET THE CHANNEL
	HRLI	AC,.CHOPN
	CHANIO	AC,COMBLK		; OPEN THE CHANNEL
	JRST	COMER3
	HRLI	AC,.CHLK		; PREPARE FOR LOOKUP
	CHANIO	AC,COMLKB		; LOOKUP
	JRST	COMER4
	MOVE	AC,SAVLIC		; RESTORE LICENSE
	SETLIC	AC,
	PUSHJ	P,CHKLIC		; MAKE SURE WE STILL HAVE MINIMUM
	TLO	FLG,U.IND		; SET IND FLAG
	TRO	FLG,U.OKAY		; SET COMPLETION FLAG
	MOVEM	FLG,SAVFLG-1(IF.P)
	MOVE	AC,LASCHR
	MOVEM	AC,SAVLCH-1(IF.P)
	TRZ	FLG,U.PEK
	PUSHJ	P,SINDRB
	POPJ	P,
COMER1:	TYPSTR	([ASCIZ/Cannot open more Com files./])
	JRST	GETCMD
COMER2:	TYPSTR	([ASCIZ/Error parsing filename./])
	PUSHJ	P,INORNO
	JRST	CMDCOM
COMER3:	TYPSTR	([ASCIZ/Channel open failed./])
	JRST	COMERR
COMER4:	TYPSTR	([ASCIZ/Lookup failed./])
	JRST	COMERR
COMERR:	MOVE	AC,SAVLIC		; RESTORE LIC
	SETLIC	AC,
	PUSHJ	P,CHKLIC
	SOJ	IF.P,			; REDUCE INDEX
	JUMPE	IF.P,COMRR2		; JUMP IF THIS IS BASE DEVICE
	TLO	FLG,U.IND
	SKIPA
COMRR2:	TLZ	FLG,U.IND
	JRST	GETCMD
CMDIMM:	; IMMEDIATE MODE COMMAND
	INSTR	([ASCIZ/Immediate mode ON or OFF:/],NUM,5,S)
	MOVE	AC,NUM
	CAME	AC,[ASCII/ON   /]
	JRST	CMDIM2
	TLO	FLG,U.IMM		; RESET THE FLAG
	JRST	CMDIMD
CMDIM2: CAME	AC,[ASCII/OFF  /]
	JRST	CMDIME
	TLZ	FLG,U.IMM
	JRST	CMDIMD
CMDIMD: TRO	FLG,U.OKAY
	POPJ	P,
CMDIME: PUSHJ	P,INORNO
	JRST	CMDIMM
CMDQUI: ; EXIT THE PROGRAM
IFDEF	DEBUG, < 
	HRRZ	AC,.JBDDT		; STARTING ADDRESS OF DDT (IF LOADED)
	JUMPE	AC,CMDQU2		; JUMP TO CMFQU2 IF NO DDT
	MOVEM	AC,NUM			; SAVE IT
	TYPSTR	([ASCIZ /DDT/])
	JRST	@NUM			; TRANSFER TO DDT
>
CMDQU2: ; HERE IF NO DDT
	MOVE	AC,ACTPRT
	ZAPCIR	AC,
	MOVE	AC,CUDPRT
	ZAPCIR	AC,
	HRROI	AC,.AXEDE		; SET TO RESTORE ORIGINAL ECHO MODE
	TLNN	FLG2,V.HDX		; SKIP ID NOT FULL DUPLEX
	AUXCAL	AC,OLDDEF
	TLNE	FLG,U.IFL
	JRST	CMDQU4
CMDQU3:	EXIT	1,			; EXIT THE PROGRAM
CMDQU4: MOVSI	AC,1
	HRRI	AC,[SIXBIT/SYS/
		 SIXBIT/LOGOUT/
		 0
		 0
		 0
		 0]
	RUN	AC,
	JRST	CMDQU4

CMDEXI: TLZN	FLG,U.TOUT
	JRST	CMDQU2
	MOVE	AC,[.CHREL,,TOUCHN]
	CHANIO	AC,
	JRST	CMDQU2

CKSHUT:	; CHECK FOR UNAVAILABLE MESSAGE (TYMVAL.OFF)
	OPEN	JOBCHN,RO.OPN
	BOMB	(ERR.FI)
	PUSHJ	P,STRORB
	LOOKUP	JOBCHN,INLK2
	JRST	CKSHTD
CKSHT1:	IN	JOBCHN,
	JRST	CKSHT2
CKSHTD: MOVE	AC,[.CHREL,,JOBCHN]
	CHANIO	AC,
	POPJ	P,
CKSHT2:	SOSGE	RO.CNT
	JRST	CKSHT1
	ILDB	AC,RO.PTR
	CAIN	AC,44
	JRST	CKSHT3
	PUSHJ	P,CHROUT
	JRST	CKSHT2
CKSHT3:	CLOSE	JOBCHN,
	JRST	CMDQUI

STOURB: ; Set a Ring of Buffers for TOUT file
	PUSH	P,AC
	MOVEI	AC,TOUBUF
	HRRZM	AC,CA.BRH
	MOVEI	AC,TOUTRB
	HRRZM	AC,CA.BRG
	PUSHJ	P,INITBR
	POP	P,AC
	POPJ	P,

SINDRB: ; Set a ring of buffers for Indirect files
	PUSH	P,AC
	HRRZ	AC,INDRBT(IF.P)
	MOVEM	AC,CA.BRG
	HRRZ	AC,INRTAB(IF.P)
	MOVEM	AC,CA.BRH
	PUSHJ	P,INITBR
	POP	P,AC
	POPJ	P,

STRORB: ; Make a ring of buffers for RO.OPN block
	PUSH	P,AC
	MOVEI	AC,RO.RBH
	HRRZM	AC,CA.BRH
	MOVEI	AC,RO.ROB
	HRRZM	AC,CA.BRG
	PUSHJ	P,INITBR
	POP	P,AC
	POPJ	P,

CMDVER: TCR     (1)
	TYPSTR	(C.VER)
        TRO     FLG,U.OKAY
        POPJ    P,

FMTVER: ; Format version number
	MOVE    AC,P
	SETZ	AC2,
	PUSH	P,AC2
        MOVEI   AC1,VER
        IDIVI   AC1,^D10
        ADDI    AC2,60
        PUSH    P,AC2
        SKIPLE  AC1
        JRST    .-4
        MOVEI   AC1,VER
        MOVEI   AC2,"0"
        CAIG    AC1,^D9
        PUSH    P,AC2
        MOVEI   AC2,"."
        PUSH    P,AC2
        MOVEI   AC1,REL
        IDIVI   AC1,^D10
        ADDI    AC2,60
        PUSH    P,AC2
        SKIPLE  AC1
        JRST    .-4
        MOVE    AC2,[POINT 7,C.VER]
        CAMN    P,AC
        POPJ    P,
        POP     P,AC1
        IDPB    AC1,AC2
        JRST    .-4

CNETWK:	; SET NETWORK LIC.
	PUSHJ	P,BLDCUD
	JRST	GETCMD
	PUSHJ	P,GETUNM
	JRST	CHGDON
	PUSHJ	P,GCREC
	JRST	GETCMD
	MOVE	AC,NMUUN
	CAIN	AC,160405		; TYMRES UUN
	JRST	NETWK1
	CAIN	AC,113323		; HQTECH1 UUN
	JRST	NETWK1
	CAIE	AC,30605		; TYMRES6 UUN
	JRST	CHGDON
	TLO	FLG,U.TR6
	JRST	NETWK2
NETWK1:	TLO	FLG,U.NET
NETWK2:	TLZ	FLG,U.PROG
	MOVE	AC,NMUUN
	MOVEM	AC,MY.UUN
	MOVE	AC,NMGAN
	MOVEM	AC,MY.GAN
	MOVE	AC,NMDIST
	MOVEM	AC,MY.DIS
	MOVE	AC,[UNMSPC,,MY.UNM]
	BLT	AC,MY.UNM+2
	JRST	CHGDON

CCUSTO:	; SET CUSTOMER LIC.
	PUSHJ	P,BLDCUD
	JRST	GETCMD
	PUSHJ	P,GTMNAM
	JRST	CHGDON
	MOVE	MAIGAN
	CAIN	AC,TR.GAN
	JRST	SCSTO1
	CAIN	AC,HQ1.GN
	JRST	SCSTO1
	CAIE	AC,TR6.GN
	JRST	CHGDON
	TLO	FLG,U.CUS1
	JRST	SCSTO2
SCSTO1:	TLO	FLG,U.CUST
SCSTO2:	TLZ	FLG,U.PROG!U.IMM
	MOVE	AC,MAIUUN
	MOVEM	AC,MY.UUN
	MOVE	AC,MAIGAN
	MOVEM	AC,MY.GAN
	MOVE	AC,NMDIST
	MOVEM	AC,MY.DIS
	MOVE	AC,[MAINAM,,MY.UNM]
	BLT	AC,MY.UNM+2
	JRST	CHGDON
