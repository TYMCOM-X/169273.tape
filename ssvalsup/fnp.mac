TITLE FNPAR - PARSE A TYMSHARE STYLE FILE NAME
SUBTTLE E.G. (TYM/SRA) APR 1980
        TWOSEG  400000

COMMENT `

This routine parses a standard format file name.  Although probably more
useful from macro, the calling sequence is that of fortran and is callble
from both f40 and f10.

calling sequence:

        movei   16,arg
        pushj   17,fnpar##
        (only return)

arg:    string
        blk

string: asciz /dsk:(gauci)fnpar.mac/    ; just an example.

blk:
file:   z
ext:    z
        z       ; will always be set to zero.
ppn:    z
dev:    z
ind:    z

        end

The first argument is the asciz format standard filename as in the 
example above.  Note that a terminating null is required.  The only
assumed default is device DSK.  Usernames should be enclosed in
parenthesis, ppn's should be in the format '[proj,prog]'.  All spaces
are ignored.

The contents of ac1 may be destroyed.  On return, ac0 is -1 on a successful
return, 0 for an error return.

File, extention, and device are in sixbit.  If the ppn was given, then
the ppn is returned.  If a username was given, then ppn is actually the
address of a two word block containing the sixbit username.  Note that
if this happens then the left half of ppn is zero.  Ind is set to -1 if
the first nonspace character found was the '@' character.


* NOTES FOR FORTRAN USE *

The sixbit data may be converted to ascii by using a commonly available
subroutine (such as the one in xlib).

If a username was supplied, this is not directly accessible to you.
It first has to be copied to a two word fortran array (or a double
precision variable).  This may be accomplished as follows:

        double precision usn
        integer blk(5)
        logical okret
        okret = fnpar('(user)file.ext',blk)
        if (.not. okret) stop ! error return.
        if (blk(3) .gt. 2**18) go to 1000 ! ppn supplied
        call copar (blk(3),usn,2) ! copy sixbit username to usn (2 wrds)

The subroutine copar is in (gauci)flib.rel.

* GENERAL NOTES*

If any part of the input string is too long (ie filename > 6chrs), it will
be truncated, no error will result.  If the project number or the programmer
number in a ppn specification is greater then 6 digits, only the least
significant 6 will be counted (this could have disasterous effect on the
sign bit).  An error indication is returned only if the ppn word becomes
negative.

There are no character restrictions except for those necessary for 
parsing and the space character.  If, for instance, a '.' is included
in a username, it will not be rejected.
Lowercase chars will be converted to uppercase before being converted to
sixbit.

The argument string may contain any combination of the basic specification
types (file name, file extention, username, ppn, and device) in any
reasonable order and the indirect file specification (which must be the
first non space character).  The following are some examples:

        (sys)macro
        macro[1,4]
        dsk:(sys)macro
        @sys:macro.cmd
        dsk:macro.*[1,4]

If more then one entry is made for any of the spec types, the results
are undefined, but in general, the last entry wins.

`

;DEFS

P==17
SP==16
AC=0
AC1=1
CTR1=3
CTR2=4
OUTPTR=5
PTR=10
PTR2=11
CHAR=12
IND=13
TERMN=14

SALL
DEFINE INPARY <@0(SP)>
DEFINE OUTARY <@1(SP)>

        ENTRY   FNPAR

FNPAR:  SKIPA           ; Macro and f10 entry point.
        PUSH    P,SP    ; F40 entry point.

; save the ac's we're going to use.
        PUSH    P,PTR
        PUSH    P,PTR2
        PUSH    P,CHAR
        PUSH    P,IND
        PUSH    P,TERMN
        PUSH    P,CTR1
        PUSH    P,CTR2
        PUSH    P,OUTPTR

; make a byte pointer to first arg and get the address of 2nd arg.
; zero out return array.
; make sixbit /DSK/ the default device.
        MOVEI   PTR,INPARY
        HRLI    PTR,(POINT 7)
        MOVEI   IND,OUTARY
        SETZM   0(IND)
        SETZM   1(IND)
        SETZM   2(IND)
        SETZM   3(IND)
        SETZM   5(IND)
        HRLZI   AC,(SIXBIT/DSK/)
        MOVEM   AC,4(IND)

; now to check if the first nonblank character is a '@'.
INDLP:  ILDB    CHAR,PTR
        JUMPE   CHAR,GOBAK
        CAIG    CHAR,'@'
         JRST   INDLP
        CAIE    CHAR,"@"
         JRST   TSTLPB
        SETOM   5(IND)

; here we check for real obvious stuff, the beginning of username, ppn, and
; file extention specifications.
TSTLP:
TSTLP1: ILDB    CHAR,PTR       ; here if we want a new char.
TSTLPB: JUMPE   CHAR,GOBAK     ; here if we want to reuse last char.
        CAIG    CHAR,'@'
         JRST   TSTLP1
        CAIN    CHAR,"("
         JRST   GUNAME
        CAIN    CHAR,"["
         JRST   GPPN
        CAIN    CHAR,"."
         JRST   GEXT
        MOVE    PTR2,PTR
; failing the obvious, we'll assume we're at the beginning of a filename
; or device and scan for a telltale character.
TSTLP2:
        ILDB    CHAR,PTR2
        JUMPE   CHAR,GFILE
        CAIG    CHAR,'@'
         JRST   TSTLP2
        CAIN    CHAR,"("        ; usernames should comes first, but we'll 
         JRST   GFILE           ;  allow this anyway.
        CAIN    CHAR,"["
         JRST   GFILE
        CAIN    CHAR,"."
         JRST   GFILE
        CAIN    CHAR,":"
         JRST   GDEV            ; it was a device.
        JRST    TSTLP2          ; scan next char.

GUNAME: ; GET THE USERNAME.
        MOVEI   CTR1,14
        MOVE    OUTPTR,[POINT 6,USNB]
        SETZM   USNB
        SETZM   USNB+1
GU1:    ILDB    CHAR,PTR
        JUMPE   CHAR,ERRBAK     ; can't terminate in the middle of a usrname.
        CAIG    CHAR,'@'
         JRST   GU1
        CAIN    CHAR,")"
         JRST   GU2
        CAILE   CHAR,140
         SUBI   CHAR,40         ; make uppercase.
        SUBI    CHAR,40         ; make sixbit.
        SKIPLE  CTR1            ; skip if too may chars.
         IDPB   CHAR,OUTPTR     ; or deposit in username block.
        SOJA    CTR1,GU1        ; and get next char.
; now put the address of the username block in the return argument.
GU2:    MOVEI   AC,USNB
        MOVEM   AC,3(IND)
        JRST    TSTLP1

GPPN:   ; GET THE PPN.
; the routine octin will return a binary value from the octal project
; or programmer numbers in ac, and the terminator in char.
        PUSHJ   P,OCTIN
        CAIE    CHAR,","
         JRST   ERRBAK
;       JUMPL   CTR1,ERRBAK
        HRLZM   AC,3(IND)       ; return project number.
        SKIPGE  3(IND)
         JRST   ERRBAK          ; a negative ppn word is an error.
        PUSHJ   P,OCTIN
        CAIE    CHAR,"]"
         JRST   ERRBAK
;       JUMPL   CTR1,ERRBAK
        HRRM    AC,3(IND)       ; return programmer number.
        JRST    TSTLP1

GFILE:  ; GET THE FILENAME.
        MOVE    TERMN,CHAR      ; save the terminating character.
        MOVEI   CTR1,6
        MOVE    OUTPTR,[POINT 6,(IND)]
        SETZM   0(IND)          ; start clean
        SKIPA                   ; we don't want a new char.
GF1:    IBP     PTR
        LDB     CHAR,PTR
        JUMPE   CHAR,GOBAK
        CAIG    CHAR,'@'
         JRST   GF1
        CAMN    CHAR,TERMN
         JRST   TSTLPB          ; all done with the filename.
        CAILE   CHAR,140
         SUBI   CHAR,40
        SUBI    CHAR,40
        SKIPLE  CTR1
         IDPB   CHAR,OUTPTR
        SOJA    CTR1,GF1

GEXT:   ; GET THE FILE EXTENTION.
        MOVEI   CTR1,3
        MOVE    OUTPTR,[POINT 6,1(IND)]
        SETZM   1(IND)
GE1:    ILDB    CHAR,PTR
        JUMPE   CHAR,GOBAK
        CAIG    CHAR,'@'
        JRST    GE1
        CAIN    CHAR,"("
         JRST   TSTLPB
        CAIN    CHAR,"["
         JRST   TSTLPB
        CAILE   CHAR,140
         SUBI   CHAR,40
        SUBI    CHAR,40
        SKIPLE  CTR1
         IDPB   CHAR,OUTPTR
        SOJA    CTR1,GE1

GDEV:   ; GET THE DEVICE.
        MOVEI   CTR1,6
        MOVE    OUTPTR,[POINT 6,4(IND)]
        SETZM   4(IND)
        SKIPA
GD1:    IBP     PTR
        LDB     CHAR,PTR
        JUMPE   CHAR,ERRBAK
        CAIG    CHAR,'@'
         JRST   GD1
        CAIN    CHAR,":"
         JRST   TSTLP1
        CAILE   CHAR,140
         SUBI   CHAR,40
        SUBI    CHAR,40
        SKIPLE  CTR1
         IDPB   CHAR,OUTPTR
        SOJA    CTR1,GD1

ERRBAK: SETZ    AC,             ; set false return.
        JRST    GOBAK+1
GOBAK:
        SETO    AC,
; restore all the saved ac's.
        POP     P,OUTPTR
        POP     P,CTR2
        POP     P,CTR1
        POP     P,TERMN
        POP     P,IND
        POP     P,CHAR
        POP     P,PTR2
        POP     P,PTR
        POPJ    P,              ; and return to calling program.

OCTIN:  
        SETZ    AC,
        MOVEI   CTR1,6
OCTIN2: ILDB    CHAR,PTR
        CAIN    CHAR,","
         POPJ   P,
        CAIN    CHAR,"]"
         POPJ   P,
        CAIG    CHAR,'@'
         JRST   OCTIN2
        CAIGE   CHAR,"0"
         POPJ   P,
        CAILE   CHAR,"7"
         POPJ   P,
        SUBI    CHAR,"0"
        LSH     AC,3
        ADD     AC,CHAR
        SOJA    CTR1,OCTIN2

        RELOC           ; to lowseg
USNB:   BLOCK   2       ; space for usename.

        RELOC
        END
    