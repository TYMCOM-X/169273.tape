On Tymnet bases, there is a maximum number of ports that can be in block
i/o wait at one time - the monitor makes it appear as if there is no
limit by making jobs wait if there are no block i/o buffer limit by
making jobs go into wait if there are no block i/o ports left in the
base.  Also, I think the overhead for small numbers of characters would
be high per character.  So, for output, where you just send a bunch of
characters, you would win if you are sending roughly 80 characters or
more at a time as long as there weren't so many outputs going at a time
that you contended for block i/o buffers in the base (currently there
are 16, I believe).  So using it on output all the time would depend on
what the average size of your output was (larger numbers of characters
would mean better to use block i/o) as long as there weren't so many
pending outputs that you contended for the buffers.  For input, I would
not recommend it at all, since the buffers have to be held until the
end of the input request, and there are a few number of them, and
unless some device or auxillary circuit is providing the input, there
are only a few characters coming in.  Block I/O is of course very bad
for interactive kinds of things, since there are no break conditions.
So don't use block input unless you expect large volumes of input data
on the average and the input is non-interactive (no break characters
needed to gain attention of program).