begin "pager"
  require "(sailib)sail.def" source!file;

  ! This is a hack to "page" through a file, on screen at a time.
  ! Control characters are filtered to a printable form.
  !
  ! Dave W. Smith   January 18-19, 1982.  Caveat User. ;


  label Prompt;
  integer LineBreak, BreakChar, FileChan, FileEOF;
  integer LineCount, PageSize, LineSize, Rescan;
  string Line, RescanLine, FileName;
! Routine to convert a user name to a PPN by looking up the user's
!  UFD and extracting the PPN.  In the special case where the user
!  name is null, return our GFD'd PPN as found via gettab. ;

internal simple integer procedure CVPPN( string UserName );
  begin
    own integer array lookupblock[ 0 : 5 ];
    own integer chan, flag1, flag2;

    arrclr( lookupblock );

    if ( UserName = NULL ) then
      return( call( '777777000002, "GETTAB" ) );

    open( chan := getchan, "DSK", '17,0,0,flag1,flag1,flag1:=0 );
    if ( flag1 ) then
      begin
	release( chan );
	return( 0 );
      end;
    lookup( chan, "(" & UserName & ")******.***", flag2 );
    fileinfo( lookupblock );
    close( chan );  release( chan );
    return( lookupblock[ 3 ] );
  end;
! routine to "filter" a line of text ;

simple string procedure Filter( string S );
  begin
    own String F;
    F := NULL;
    while ( length( S )) do
      begin
	if ( S < " " ) then
	  begin
	    if ( S = '11 ) then
	      F := F & '11
	    else if ( S = '33 ) then
	      F := F & "$"
	    else
	      F := F & "^" & (S + '100);
	    lop( S );
	  end
	else if ( S = '177 ) then
	  begin
	    F := F & "^#";
	    lop( S );
	  end
	else
	  F := F & lop( S );
      end;
    return( F );
  end;
! Main - find a file ;

  setbreak( LineBreak := getbreak, '14&'12, '15, "INS" );

  start!code
    ttcall '10,;
    ttcall '14,;
      tdca 1,1;
    seto 1,;
    movem 1,Rescan;
  end;

  if ( Rescan ) then
    begin
      Line := inchwl;
      if (( Line = "R" ) or ( Line = "r" )) then goto Prompt;
      while ( length( Line ) and ( Line neq " " )) do lop( Line );
      lop( Line );
      if ( length( Line ) = 0 ) then goto Prompt;
    end;
  if ( not Rescan ) then
    begin
      Prompt:  print( "*" );  Line := inchwl;
    end;

  if ( Line = "?" ) then
    begin
      print( crlf );
      print( "This is a hack to page through a file one screen", crlf );
      print( "at a time.  Use is "".ct6 <filename>"". Lines will", crlf );
      print( "be printed until the screen fills or a form-feed is", crlf );
      print( "seen.  The prompt ""-more?-"" is then printed.  Reply", crlf );
      print( """N"" to stop, a digit to advance that many lines, or", crlf );
      print( "any other character (like a space) to see the next", crlf );
      print( "screen.  Control characters are filtered.", crlf );
      call( '1, "EXIT" );
    end;
! strip off the username, if any ;

  if ( Line = "(" ) then
    begin
      integer ppn;
      FileName := Line;
      Lop( FileName );
      Line := NULL;
      while ( length( FileName ) and ( FileName neq ")" )) do
	Line := Line & lop( FileName );
      lop( FileName );
      if ( length( FileName ) = 0 ) then
	begin
	  print( "? No filename given", crlf );
	  call( '1, "EXIT" );
	end;
      ppn := cvppn( Line );
      if ( !lh( ppn ) = 0 ) then
	begin
	  print( "? No such user", crlf );
	  call( '1, "EXIT" );
	end;
      FileName := FileName & "[" & cvos( !lh( ppn )) & "," &
				cvos( !rh( ppn )) & "]";
    end
  else
    FileName := Line;
! look for switches ;

  Line := FileName;  FileName := Null;
  while ( length( Line )) do
    begin
      if ( Line = "/" ) then
        done
      else
        FileName := FileName & lop( Line );
    end;

  if ( length( Line )) then
    begin "switches"
      print( "% No switches are yet supported", crlf );
      call( '1, "EXIT" );
    end "switches";

  if ( length( FileName ) = 0 ) then
    begin
      print( "% no filename given", crlf );
      call( '1, "EXIT" );
    end;
! open the channel, lookup the file, and go to it. ;

  open( FileChan := getchan, "DSK", 0,2,0,200,BreakChar,FileEOF );
  lookup( FileChan, FileName, FileEOF );
  if ( FileEOF ) then
    begin
      integer array LKB[ 0 : 6 ]; integer LookupError;
      fileinfo( LKB );
      LookupError := LKB[ 1 ] land '777777;
      if ( LookupError = 0 ) then
        print( "? No such file - ",FileName, crlf )
      else if ( LookupError = 1 ) then
	print( "? No such directory - ",FileName, crlf )
      else if ( LookupError = 2 ) then
	print( "? Protection failure - ", Filename, crlf )
      else
	print( "? Can't access ",Filename,
		", LOOKUP error ", cvos( LookupError ), crlf );
      release( FileChan );
      call( '1, "EXIT" );
    end;
! Page through the file ;

  PageSize := 20;  LineCount := 0;

  while ( true ) do
    begin
      integer reply;
      if ( FileEOF ) then done;
      Line := Filter( input( FileChan, LineBreak ));
      print( Line );
      if ( BreakChar = '14 ) then print( "^L" );
      print( crlf );
      LineCount  := LineCount + 1;
      if (( BreakChar = '14 ) or ( LineCount = PageSize )) then
	begin
	  print( "-more?-" );  reply := inchrw;  clrbuf;
	  print( '15&"        "&'15 );
	  if (( reply = "N" ) or ( reply = "n" )) then done;
	  if (( reply >= "1" ) and ( reply <= "9" )) then
	    LineCount := PageSize - (reply - "0")
	  else
	    LineCount := 0;
	end;
    end;

  release( FileChan );
  relbreak( LineBreak );
  call( '1, "EXIT" );

end "pager";
