preset!with
  "Wednesday","Thursday","Friday","Saturday","Sunday","Monday","Tuesday";
string array Weekdays[ 1:7 ];

preset!with
  "Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec";
string array ShortMonths[ 1:12 ];

preset!with
  "January","February","March","April","May","June",
  "July","August","September","October","November","December";
string array LongMonths[ 1:12 ];

string procedure trailer( integer N );	! assumes positive N ;
  begin
    if ( ( N div 10 ) = 1 ) then return( "th" )
    else if (( N mod 10 ) = 1 ) then return( "st" )
    else if (( N mod 10 ) = 2 ) then return( "nd" )
    else if (( N mod 10 ) = 3 ) then return( "rd" )
    else return( "th" );
  end;
string procedure DateTime;
  begin
    integer JDate, UDT, Hours, Minutes, Zone, RollOver;
    integer TodaysDate, Day, Month, Year, DayOfWeek;
    string Time, Header;

    start!code
      calli 0,'14;	! get UDT ;
      movem UDT;	! save it ;
      hrri 0,'11;	! 0,,11 ;
      hrli 0,'11;	! 11,,11 ;
      calli 0,'41;	! gettab julian date ;
       movei 0,47;	! assume error ;
      movem 0,JDate;	! save the julian date ;
      calli 0,'22;	! get jiffies past midnite ;
      idivi 0,3600;	! convert to minutes ;
      idivi 0,60;	! convert to hours ;
      movem Hours;	! save hours ;
      movem 1,Minutes;	! save minutes;
      hrroi 6;		! make gettab pointer to priv word ;
      calli 0,'41;	! gettab our priv word ;
       setzm 0;		! assume no privs on error ;
      rot '10;		! right justify bits 3-7 ;
      andi '37;		! mask to 5 bits ;
      movem Zone;	! save as our time zone code ;
    end;

    if (( Hours + ( 16 - Zone)) >= 24 ) then RollOver _ -1
    else Rollover _ 0;

    TodaysDate _ UDT;
    Day	_ ( UDT mod 31 ) + 1;
    UDT _ UDT div 31;
    Month _ ( UDT mod 12 ) + 1;
    Year _ ( UDT div 12 ) + 64;

    DayOfWeek	_ (( JDate + Rollover ) mod 7 ) + 1;

    Time := cvs( Minutes );
    if ( Minutes < 10 ) then Time := "0" & Time;
    Time := cvs( Hours ) & ":" & Time;

    Header := ('15&'12) & "Printed on " &
	     Weekdays[ DayOfWeek ] & ", " &
	     LongMonths[ Month ] & " " &
	     cvs( Day ) & Trailer( Day ) & ", " &
	     "19" & cvs( Year ) & " at " & Time & ('15&'12);

    return( Header );
  end;
