$num off
$tabs 5, 20
$ver
   To:     Programming Languages

       From:   S. Medlin

   Subject:        PVM Linker Specification, Draft

     Date:   March 5, 1981



$jus
$tab
Please comment on the attached specification and return to me by March 13.
$page
$title right 'Pascal Virtual Machine Linker Spec.' right 'March 5, 1981' right 'Page \'
$skip 5
&Introduction&
$skip
This document specifies the functions of the linker for the Pascal Virtual
Machine.
The linker merges one or more object files in the format specified
by [1] and produces an image file as specified by [2].
The linker, like the object modules it accepts and the image file
it creates, is totally independent of the choice of target machine.
$skip
&Clusters&
$skip
A &cluster& is a partition of the virtual address space, containing one
or more linked modules.
Unless otherwise directed the linker places all modules in a &default&
cluster at virtual address 200H (which may be changed
with the /BASE switch).
With /CLUSTER  a user may define a named cluster of modules,
optionally at a particular base virtual address.
Some advantages of clusters might be
(1) to insure locality of commonly used or highly interrelated routines,
(2) to enforce common base addresses in separately linked overlays, or
(3) to take advantage of some aspects of the virtual address space
on the target machine (e.\g., some pages may be designated
as always resident).
$skip
Within a cluster the linker concatenates program sections with common
attributes, generally in the order loaded.
 Note, however, that uninitialized,
writeable program sections will be allocated to maximize the number
of demand-zero image sections.  
This reduces the size of the image file and hence transmission
costs to the target machine.
$skip
$section 1
$level 1
&^#. Linker invocation and interaction&
$skip
The PVM linker is normally run explicitly from a terminal or batch job
and interactively prompts for, reads, and executes command lines.
If run with an offset of 1, however, the linker will attempt to open
the command file DSK:###LNK.TMP, where ### is the user's three-digit octal
job number.
If this file cannot be opened a warning message is printed and
commands accepted from the terminal.
$skip
Any command string read by the linker which begins with an at-sign (@)
is an invocation of an indirect command file specified by the remainder
of the string.
All command strings in the indirect file are read and executed before
the user is again prompted for input.
The contents of indirect files are not echoed on the terminal or log file
unless the indirect file specification is prefaced by two at-signs (@@).
$page
$section
&^#. Command format&
$skip
The command language for the PVM linker is patterned after that
of LINK-10 as described in [3].
The linker prompts for input with an asterisk (*).  A command string is
read and processed one line at a time, though commands terminating with
a hyphen (-) are continued to the next line, the prompt for which
is a number sign (#):
$skip
$tab 5
$ver
  .run link
     *image/save
   *file1,file2,file4,-
  #file5,file6
  *

$jus
All text following a semi-colon (;) in a command string is considered
commentary and ignored by the linker.
$skip
$section
&^#. Default file specifications&
$skip
The default device for input and output files is DSK:, and the 
default account or directory is the user's default path.
$skip
The default extensions for input files are:
$tabs 5, 12
$skip
$ver
   .OBJ    object files
  .CMD    indirect command files
$skip
$jus
The default extensions for output files are:
$skip
$ver
        .PVM    image save file
       .MAP    map file
      .LOG    log file
      .XRF    cross-reference file

$jus
$section
&^#. Command switches&
$skip
All switches are prefaced by a slash (/) and with the exception
of /SEARCH and /NOSEARCH
any switch associated with a file specification must follow that
file-spec.
Numeric values are interpreted in the current radix, initially hex,
which may be changed with the /RADIX switch.
Explicit octal, decimal and hex values are terminated
with 'B', 'D' or 'H', respectively.
$skip
Any switch may be abbreviated to its first unique characters, though
some may be abbreviated to a single character:
$skip
$tabs 5 10
$ver
   /C      /CLUSTER
      /G      /GO
   /H      /HELP
 /M      /MAP
  /S      /SEARCH
       /U      /UNDEFINED
$jus
$page
$level +1
$section
&^#. Output-related switches&
$skip
/SAVE is required in every link and &must& follow a file specification.
All others are optional and may specify a file; the default if omitted is
the filename given for /SAVE, with the appropriate extension.
Each switch may be given more than once in a link, though only the
first occurrence has significance.  Subsequent occurrences generate
a non-fatal warning message and are otherwise ignored.
This enables a user to override an output specification in an
indirect command file prior to invoking it.
$skip
$level +1
$section
&^#. /LOG&
$skip
creates a logging file on which all input to and output from the linker
is echoed, with the exception that &every& filename is expanded to
its full pathname.
$skip
$section
&^#. /MAP&
$skip
specifies a file for a map of the image.  The format of the map file
is not currently defined.
$skip
$section
&^#. /SAVE&
$skip
$tab 5
specifies the name of the image file.
$skip
$section
&^#. /XREF&
$skip
indicates a file for a cross-reference of the image.
The format of the cross-reference is not yet defined.
$skip
$level -1
$section
&^#. Library switches&
$skip
These allow a user to explicitly or implicitly
extract modules from library files.  
These switches are similar in function and format to those of
LINK-10 (described in appendix D of [3]).
$skip
$level +1
$section
&^#. /SEARCH&
$skip
indicates that modules from the specified files are to be linked
only if required to resolve undefined symbols.
As in LINK-10, /SEARCH may apply to a single file:
$skip
$ver
        *file/search

$jus
or to a sequence of files:
$skip
$ver
 */search file1,file2,...

$jus
$section
&^#. /NOSEARCH&
$skip
indicates that all modules from the specified files are to be linked.
It may follow a file-spec to override a global /SEARCH; e.\g.,
$ver

     */search file1,file2/nosearch,file3

$jus
is equivalent to
$ver

 *file1/search,file2,file3/search

$jus
It may also precede a file-list to disable library searching:
$ver

       */search file1,file2,/nosearch file3,file4

$jus
is equivalent to
$ver

  *file1/search,file2/search,file3,file4

$jus
/NOSEARCH is the default for every command string and must be explicitly
overridden by /SEARCH.
$skip
$section
&^#. /INCLUDE:(module,...,module)&
$skip
requests that the specified modules be linked even if not required
to resolve global symbols.
If associated with a file specification &only& the specified modules
(and those required if library searching is in effect) are linked.
A warning message is generated if /INCLUDE is associated with a file
which does not contain the specified modules, and the request
persists until resolved.
If only one module is specified the parentheses may be omitted.
$skip
$section
&^#. /EXCLUDE:(module,...,module)&
$skip
must follow a file specification and prohibits loading the specified
modules even if they would normally be linked in a library search.
The parentheses may be omitted if only one module is given.
$skip
$section
&^#. /REQUIRE:(symbol,...,symbol)&
$skip
adds the specified symbols to those unresolved.  If only one symbol is
given the parentheses may be omitted.
$skip
$level -1
$section
&^#. Definition switches&
$skip
These permit the user to supply explicit information to the linker.
$skip
$level +1
$section
&^#. /BASE:address&
$skip
specifies the base virtual address for the default cluster.
$skip
$section
&^#. /CLUSTER:cluster-name:base-address&
$skip
defines a cluster of modules.
The base-address is optional and, if used, should only be given once.
If given without a cluster-name, subsequent file specifications in
the command string are linked to the default cluster.
The effect of the /CLUSTER switch is terminated at the end of the
command string or another /CLUSTER.
The link session:
$skip
$ind +5
$ver
.run linker
*test/save/map
*/cluster:scanner:400000 scan,decode,reader,/search util
*driver,/cluster:scanner writer
*lib/search/go
$just
$ind
$skip
defines a cluster named SCANNER at virtual base address 400000, containing
modules loaded from object files SCAN, DECODE, READER, and the library
UTIL. 
DRIVER and all modules loaded from LIB are placed in the default cluster.
The image file is TEST.PVM and the map file TEST.MAP.
$skip
$section
&^#. /DEFINE:(symbol:value,...,symbol:value)&
$skip
defines new symbols and assigns them the specified numeric values. If only one
symbol is given the parentheses may be omitted.
$skip
$section
&^#. /LENGTH:value&
$skip
sets the maximum page length of the map, log and cross-reference files.
$skip
$section
&^#. /OVERLAY:area-id:base-address:number-pages:flags&
$skip
adds an overlay area descriptor (OAD, as described in [2]) to the image file.
All parameters are numeric and the "flags" field is optional,
defaulting to zero.
$skip
$section
&^#. /RADIX:value&
$skip
sets the default radix.  "Value" may be (decimal) 8, 10, or 16, or
one of OCTAL, DECIMAL, or HEX.
Values on map and xref files are in the radix in effect at the end
of the link.
$skip
$section
&^#. /WIDTH:value&
$skip
sets the maximum width of lines output to map, log and cross-reference files.
$skip
$level -1
$section
&^#. Informational switches&
$skip
These extract information from the linker.
$skip
$level +1
$section
&^#. /ENTRY:(module,...,module)&
$skip
lists the values of all global symbols in the specified modules.
If no modules are specified the global symbols for all currently linked
modules are listed.
If only one module is specified the parentheses may be omitted.
$skip
$section
&^#. /HELP&
$skip
prints a short description of linker commands and switches.
$skip
$section
&^#. /MISSING&
$skip
lists modules requested by /INCLUDE and not yet resolved.
$skip
$section
&^#. /SIZE&
$skip
prints the current size of all defined clusters.
$skip
$section
&^#. /UNDEFINED&
$skip
lists all unresolved global symbols.
$skip
$section
&^#. /VALUE:(symbol,...,symbol)&
$skip
prints the values of the specified symbols, if defined, as offsets within
their containing program sections.
If only one symbol is given the parentheses may be omitted.
$skip
Since the linker may relocate program sections to utilize demand-zero
image sections, the actual virtual address of a symbol may not be 
known till the end of the link session.
$skip
$level -1
&^#. Link termination&
$skip
/GO indicates the end of a link session.
Any undefined symbols or missing modules are listed,
the image file generated,
map and cross-reference files created, if requested,
and the image file size and
linker runtime statistics printed to the terminal.
$page
&References&
$skip 2
$ind 6
1.\\Gorgen, D. P., "Specification of Object Language for Pascal \\\\Virtual
Machine, Version 1.0", 5/12/80.
$par
2.\\Gorgen, D. P., "Specification of Image File Format for \\\\Pascal Virtual
Machine, Version 1.0", 5/12/80.
$par
3.\\Digital Equipment Corporation, "Decsystem10 Link Reference \\\\Manual", 1978.
    