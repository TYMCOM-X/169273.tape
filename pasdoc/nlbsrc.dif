

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:IOCHAR.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:IOCHAR.MAC	created: 1257 12-JUN-81

1)1		extern	INT.C,INT.C1
1)		$TEMP	TDESC,2		; target descriptor
****
2)1		extern	INT.C,INT.C1,ins.sm
2)		$TEMP	TDESC,2		; target descriptor
**************
1)1		ADJBP	R1,NAME		; advance pointer to skip them
****
2)1		jsr  	ins.sm
2)		ADJBP	R1,NAME		; advance pointer to skip them
**************
1)1		entry	REAL.R,SRL.R
1)		extern	REA.C1,REA.C2,REA.C3,TENE.,TENF.,TENP.,ENDRN.
1)		$TEMP	TDESC,2		; target descriptor
****
2)1	  
2)		entry	REAL.R,SRL.R
2)		extern	REA.C1,REA.C2,REA.C3,TENE.,TENF.,TENP.,ENDRN.,F.DPRS
2)		$TEMP	TDESC,2		; target descriptor
**************
1)1		DMUL	DWD1,DWTEN	; multiply by double word ten
****
2)1		jsr  	F.DPRS
2)		DMUL	DWD1,DWTEN	; multiply by double word ten
**************
1)1		DADD	DWD1,DWD1+2	; slap it in
****
2)1		jsr  	F.DPRS
2)		DADD	DWD1,DWD1+2	; slap it in
**************
1)1		DADD	DWD1,DW377	; round up the number (we lose 8 bits)
****
2)1		jsr  	F.DPRS
2)		DADD	DWD1,DW377	; round up the number (we lose 8 bits)
**************
1)1		extern	REA.C1,REA.C2,REA.C3,TENE.,TENF.,TENP.,ENDRN.
1)		$TEMP	TDESC,2		; target descriptor
****
2)1		extern	REA.C1,REA.C2,REA.C3,TENE.,TENF.,TENP.,ENDRN.,F.DPRS
2)		$TEMP	TDESC,2		; target descriptor
**************
1)1		DADD	DWD1,R0		;   to get rid of binary exponent -- round up
****
2)1		jsr  	F.DPRS
2)		DADD	DWD1,R0		;   to get rid of binary exponent -- round up
**************
1)1		DADD	DWD1,ROUND(R1)	;     then round up by factor
****
2)1		jsr  	F.DPRS
2)		DADD	DWD1,ROUND(R1)	;     then round up by factor
**************
1)1		DADD	DWD1,ROUND(PR2)	; round
****
2)1		jsr  	F.DPRS
File 1)	DSK:IOCHAR.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:IOCHAR.MAC	created: 1257 12-JUN-81

2)		DADD	DWD1,ROUND(PR2)	; round
**************
1)1		DMUL	DWD1,DWTEN	; ready for next time
****
2)1		jsr  	F.DPRS
2)		DMUL	DWD1,DWTEN	; ready for next time
**************
1)1		$TEMP	TDESC,2		; target descriptor
****
2)1		extern	F.DPRS
2)		$TEMP	TDESC,2		; target descriptor
**************
1)1	DIV10G:	DDIV	DWD1,TENF.(PR2)	; do it
1)		LSHC	DWD1+2,1	; double the doubleword remainder
****
2)1	DIV10G: jsr  	F.DPRS
2)	       	DDIV	DWD1,TENF.(PR2)	; do it
2)		LSHC	DWD1+2,1	; double the doubleword remainder
**************
1)1	D10RND:	DADD	DWD1,DWONE	; add a double length "1"
1)	D10OUT:	DMOVE	DWD1+2,2+JUNK	; restore saved registers
****
2)1	D10RND: jsr  	F.DPRS
2)	       	DADD	DWD1,DWONE	; add a double length "1"
2)	D10OUT:	DMOVE	DWD1+2,2+JUNK	; restore saved registers
**************
1)1		DMUL	DWD1,TENF.(PR2)	; do it
****
2)1		jsr  	F.DPRS
2)		DMUL	DWD1,TENF.(PR2)	; do it
**************
1)1		extern	STRV.R,STRV.W,BOOL.W,.JBFF
1)	;
****
2)1		extern	STRV.R,STRV.W,BOOL.W,.JBFF,ins.sm
2)	;
**************
1)1		ADJBP	CO1,R1		; load up correct byte pointer
****
2)1		jsr  	ins.sm
2)		ADJBP	CO1,R1		; load up correct byte pointer
**************
1)1		ADJBP	R1,PR1		;   so next ILDB will get current char
****
2)1		jsr  	ins.sm
2)		ADJBP	R1,PR1		;   so next ILDB will get current char
**************
1)1		extern	BREAK.,FMTCH.
1)		$LOCAL	REGSAV,^o14
****
2)1		extern	BREAK.,FMTCH.,ins.sm
2)		$LOCAL	REGSAV,^o14
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:TENIO.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:TENIO.MAC	created: 1458 12-JUN-81

1)1		ENTRY	IOUUO.,TENIO.,RET14.,RET16.; Yutzy Kortezojan entry grab
****
2)1		extern	box.rg,blt.sm
2)		ENTRY	IOUUO.,TENIO.,RET14.,RET16.; Yutzy Kortezojan entry grab
**************
1)1		BLT	3,-1(7)		; Copy just up to it
1)	;
****
2)1		dmovem	10,box.rg
2)		movei	10,-1(7)
2)		movei	11,3
2)		jsr	blt.sm		; Copy just up to it
2)		dmove	10,box.rg
2)	;
**************
1)1		BLT	3,0(7)		; and move in the tail
1)		JMP	0(14)
****
2)1		dmovem	10,box.rg
2)		movei	10,(7)
2)		movei	11,3
2)		jsr	blt.sm		; and move in the tail
2)		dmove	10,box.rg
2)		JMP	0(14)
**************
1)1		BLT	7,177(5)	; Zzzzzzzzzap!
1)		JMP	TRUNCO		; (This is now the last block)
****
2)1		dmovem	10,box.rg
2)		movei	10,177(5)
2)		movei	11,7
2)		jsr	blt.sm		; Zzzzzzzzzap!
2)		dmove	10,box.rg
2)		JMP	TRUNCO		; (This is now the last block)
**************
1)1		BLT	3,-1(7)		; and copy required block
1)		TLO	5,DIRTY		; Buffer is now dirty
****
2)1		dmovem	10,box.rg
2)		movei	10,-1(7)
2)		movei	11,3
2)		jsr	blt.sm		; and copy required block
2)		dmove	10,box.rg
2)		TLO	5,DIRTY		; Buffer is now dirty
**************
1)1		BLT	3,0(7)		; and smash the buffer
1)		TLO	5,DIRTY		; which is now dirty
****
2)1		dmovem	10,box.rg
2)		movei	10,(7)
2)		movei	11,3
2)		jsr	blt.sm		; and smash the buffer
2)		dmove	10,box.rg
2)		TLO	5,DIRTY		; which is now dirty
File 1)	DSK:TENIO.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:TENIO.MAC	created: 1458 12-JUN-81

**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:RTMON.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:RTMON.MAC	created: 1756 02-JUL-81

1)1		INTERN	EXIT.
****
2)1		extern	ins.sm
2)		INTERN	EXIT.
**************
1)1		ADJSP	TOP,PROTECT	;PROTECT RUNTIME TEMPS
1)		$SAVE	RSAVE,R0,PDA	;SAVE ALL REGS
1)		ADJSP	TOP,16		;PROTECT SAVED REGISTERS
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,PROTECT	;PROTECT RUNTIME TEMPS
2)		$SAVE	RSAVE,R0,PDA	;SAVE ALL REGS
2)		jsr  	ins.sm
2)		ADJSP	TOP,16		;PROTECT SAVED REGISTERS
**************
1)1		ADJSP	TOP,-16		;UNFRAME SAVED REGISTERS
1)		$RESTORE RSAVE,R0,PSA
1)		ADJSP	TOP,-PROTECTION
1)		EXIT	1,
1)	;
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-16		;UNFRAME SAVED REGISTERS
2)		$RESTORE RSAVE,R0,PSA
2)		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION
2)	    	EXIT	1,
2)	;
**************
1)1		ADJSP	TOP,PROTECTION	;SAVE RUNTIME TEMPS
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,PROTECTION	;SAVE RUNTIME TEMPS
**************
1)1		ADJSP	TOP,-PROTECTION
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION
**************
1)1		ADJSP	TOP,-PROTECTION
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION
**************
1)1	; SAVE REGISTERS EXP1 TO PSA-1 PLUS BASIS BEFORE CALLING DEBUG$
1)	;
****
2)1	; SAVE REGISTERS{EXP1 TO PSA-1 PLUS BASIS BEFORE CALLING DEBUG$
2)	;
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:IOFILE.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:IOFILE.MAC	created: 1335 12-JUN-81

1)1		search	RTSYM
1)		search	IOSYM
****
2)1	  	search	RTSYM
2)		search	IOSYM
**************
1)1		extern	OPEN.,GETCH.
1)	; RESET. -- reset for a text file.  To make RESET an indivisible operation
****
2)1		extern	OPEN.,GETCH.,ins.sm
2)	; RESET. -- reset for a text file.  To make RESET an indivisible operation
**************
1)1		extern	FNAME.,IOERR.,TENIO.,PASUO.,BUF.0
1)	; EMPTY. -- empty non-text file.  Close the file via TENIO, and then
****
2)1		extern	FNAME.,IOERR.,TENIO.,PASUO.,BUF.0,ins.sm
2)	; EMPTY. -- empty non-text file.  Close the file via TENIO, and then
**************
1)1		extern	FNAME.,GTIFN.,IOERR.,DODEC.
1)	; EMPTX. -- empty text file.  Get the full file name, manually close the
****
2)1		extern	FNAME.,GTIFN.,IOERR.,DODEC.,ins.sm
2)	; EMPTX. -- empty text file.  Get the full file name, manually close the
**************
1)1		extern	FARGX.,GTIFN.,DOTXT.,.JBFF,DODEC.
1)	; OPEN. -- initialize text file for input.  We explode the args, parse
****
2)1		extern	FARGX.,GTIFN.,DOTXT.,.JBFF,DODEC.,ins.sm
2)	; OPEN. -- initialize text file for input.  We explode the args, parse
**************
1)1		$TEMP	BREEZE,1	; for pushj
1)		$TEMP	LARGS,4		; where to explode args
****
2)1	  	$TEMP	BREEZE,1	; for pushj
2)		$TEMP	LARGS,4		; where to explode args
**************
1)1		extern	FARGX.,GTIFN.,DOTXT.,.JBFF,DODEC.
1)	; REWRT. -- initialize text file for output.  Explode args, parse the
****
2)1		extern	FARGX.,GTIFN.,DOTXT.,.JBFF,DODEC.,ins.sm
2)	; REWRT. -- initialize text file for output.  Explode args, parse the
**************
1)1		extern	DB.FBL
1)	; OPNTP. -- open typed file.  The setup for the TENIO open mostly involves
****
2)1		extern	DB.FBL,ins.sm
2)	; OPNTP. -- open typed file.  The setup for the TENIO open mostly involves
**************
1)1		ADJSP	TOP,$MAXTEMP	; save our stack
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,$MAXTEMP	; save our stack
**************
1)1		ADJSP	TOP,-$MAXTEMP	; ok
File 1)	DSK:IOFILE.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:IOFILE.MAC	created: 1335 12-JUN-81

****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-$MAXTEMP	; ok
**************
1)1		ADJSP	TOP,$MAXTEMP	; call filsz. while saving temps
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,$MAXTEMP	; call filsz. while saving temps
**************
1)1		ADJSP	TOP,-$MAXTEMP
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-$MAXTEMP
**************
1)1		ADJSP	TOP,$MAXTEMP	; protect our temps from TENIO
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,$MAXTEMP	; protect our temps from TENIO
**************
1)1		ADJSP	TOP,-$MAXTEMP	;   it worked -- fix local stack
1)		MOVE	R1,3+FBLOCK	; get actual ppn
1)		MOVEM	R1,FILPPN(FBL)	; and save it
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-$MAXTEMP	;   it worked -- fix local stack
2)	  	MOVE	R1,3+FBLOCK	; get actual ppn
2)		MOVEM	R1,FILPPN(FBL)	; and save it
**************
1)1		ADJSP	TOP,$MAXTEMP
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,$MAXTEMP
**************
1)1		ADJSP	TOP,-$MAXTEMP
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-$MAXTEMP
**************
1)1	IONFG1:	ADJSP	TOP,-$MAXTEMP	; fix the stack again
1)	IOBNFG:	MOVEM	R0,$EXTST(PDA)	; store TENIO error return
****
2)1	IONFG1:	jsr  	ins.sm
2)	       	ADJSP	TOP,-$MAXTEMP	; fix the stack again
2)	IOBNFG:	MOVEM	R0,$EXTST(PDA)	; store TENIO error return
**************
1)1		extern	FFRBF.,FLUCH.,CLSTB.,BREAK.,FRECN.,IOERR.
1)	; CLOSE., CLOSD., and CLOSA. -- the file closing routines.  Set up R1
****
2)1		extern	FFRBF.,FLUCH.,CLSTB.,BREAK.,FRECN.,IOERR.,ins.sm
2)	; CLOSE., CLOSD., and CLOSA. -- the file closing routines.  Set up R1
**************
1)1		extern	PPGRG.,DECOD.
1)		$STATIC	FBLIST,1
****
File 1)	DSK:IOFILE.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:IOFILE.MAC	created: 1335 12-JUN-81

2)1		extern	PPGRG.,DECOD.,ins.sm
2)		$STATIC	FBLIST,1
**************
1)1		ADJSP	TOP,$MAXTEMP	; pad our temps
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,$MAXTEMP	; pad our temps
**************
1)1		ADJSP	TOP,-$MAXTEMP	; fix stack
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-$MAXTEMP	; fix stack
**************
1)1		ADJSP	TOP,$MAXTEMP
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,$MAXTEMP
**************
1)1		ADJSP	TOP,-$MAXTEMP
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-$MAXTEMP
**************
1)1		$LOCAL	REGSAV,INDEX1-EXP3+1
****
2)1		extern	ins.sm
2)		$LOCAL	REGSAV,INDEX1-EXP3+1
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:ONESCA.MAC[3,325601]	created: 1538 01-OCT-80
File 2)	DSK:ONESCA.MAC	created: 1351 12-JUN-81

1)1	ap.flag=000000 402000	;APR reenable and ESCape bits (AP.REN + AP.ESC)
****
2)1		extern	ins.sm
2)	ap.flag=000000 402000	;APR reenable and ESCape bits (AP.REN + AP.ESC)
**************
1)1	INT.AC:	ADJSP	TOP,PROTECTION	; DON'T KILL RUNTIME TEMPS
1)		MOVEM	PDA,1(TOP)
****
2)1	INT.AC:	jsr  	ins.sm
2)	       	ADJSP	TOP,PROTECTION	; DON'T KILL RUNTIME TEMPS
2)		MOVEM	PDA,1(TOP)
**************
1)1		ADJSP	TOP,-PROTECTION	; NO NEED TO PROTECT RUNTIME STORAGE
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION	; NO NEED TO PROTECT RUNTIME STORAGE
**************
1)1		ADJSP	TOP,-PROTECTION
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION
**************
1)1		ADJSP	TOP,PROTECTION	;PROTECT RUNTIME TEMPS, ETC.
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,PROTECTION	;PROTECT RUNTIME TEMPS, ETC.
**************
1)1	        adjsp   top,-protection
****
2)1		jsr  	ins.sm
2)	        adjsp   top,-protection
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:DMON.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:DMON.MAC	created: 1755 02-JUL-81

1)1		INTERN	EXIT.
****
2)1		extern	ins.sm
2)		INTERN	EXIT.
**************
1)1		ADJSP	TOP,PROTECT	;PROTECT RUNTIME TEMPS
1)		$SAVE	RSAVE,R0,PDA	;SAVE ALL REGS
1)		ADJSP	TOP,16		;PROTECT SAVED REGISTERS
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,PROTECT	;PROTECT RUNTIME TEMPS
2)		$SAVE	RSAVE,R0,PDA	;SAVE ALL REGS
2)		jsr  	ins.sm
2)		ADJSP	TOP,16		;PROTECT SAVED REGISTERS
**************
1)1		ADJSP	TOP,-16		;UNFRAME SAVED REGISTERS
1)		$RESTORE RSAVE,R0,PSA
1)		ADJSP	TOP,-PROTECTION
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-16		;UNFRAME SAVED REGISTERS
2)		$RESTORE RSAVE,R0,PSA
2)		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION
**************
1)1		ADJSP	TOP,PROTECTION	;SAVE RUNTIME TEMPS
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,PROTECTION	;SAVE RUNTIME TEMPS
**************
1)1		ADJSP	TOP,-PROTECTION
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION
**************
1)1		ADJSP	TOP,-PROTECTION
****
2)1		jsr  	ins.sm
2)		ADJSP	TOP,-PROTECTION
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:MMQFIT.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:MMQFIT.MAC	created: 1455 12-JUN-81

1)1		INTERN	OHP.AC
****
2)1		extern	box.rg,blt.sm
2)		INTERN	OHP.AC
**************
1)1		BLT	EXP1,0(EXP2)
1)	NEWRET:	MOVEI	R1,1(RES)	; ADVANCE TO POINT TO DATA AREA
****
2)1		dmovem	10,box.rg
2)		movei	10,(exp2)
2)		movei	11,exp1
2)		jsr	blt.sm
2)		dmove	10,box.rg
2)	NEWRET:	MOVEI	R1,1(RES)	; ADVANCE TO POINT TO DATA AREA
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:RTMATH.MAC[3,325601]	created: 1447 01-OCT-80
File 2)	DSK:RTMATH.MAC	created: 1555 11-MAR-81

1)1		extern	forer.,fsave.	;required
1)		intern	sfor.2
****
2)1		extern	forer.,fsave.,ins.sm	;required
2)		intern	sfor.2
**************
1)1		extern	forer.,dsave.	;required
1)		$static	parms,7
****
2)1		extern	forer.,dsave.,ins.sm	;required
2)		$static	parms,7
**************
1)1		$single
****
2)1		extern	ins.sm
2)		$single
**************
1)1	dsave.:
****
2)1		extern	ins.sm
2)	dsave.:
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:IONTXT.MAC[3,325601]	created: 1448 01-OCT-80
File 2)	DSK:IONTXT.MAC	created: 1345 12-JUN-81

1)1		extern	NTXER.,NTXDI.
1)		$TEMP	TRDSIZ,1
****
2)1		extern	NTXER.,NTXDI.,ins.sm
2)		$TEMP	TRDSIZ,1
**************
1)2		extern	NTXER.,NTXDI.,CKEOF.
1)		$TEMP	TWRSIZ,1
****
2)2		extern	NTXER.,NTXDI.,CKEOF.,ins.sm
2)		$TEMP	TWRSIZ,1
**************
1)4		extern	NTXER.,NTXDI.,FILLC.
1)		$LOCAL	REGSAV,3
****
2)4		extern	NTXER.,NTXDI.,FILLC.,ins.sm
2)		$LOCAL	REGSAV,3
**************
1)5		extern	NTXDI.,CKEOF.,NTXER.
1)		$LOCAL	REGSAV,3
****
2)5		extern	NTXDI.,CKEOF.,NTXER.,ins.sm
2)		$LOCAL	REGSAV,3
**************
1)6		extern	NTXER.,NTXDI.,CKEOF.,FILLC.,IOERR.
1)		$LOCAL	REGSAV,3
****
2)6		extern	NTXER.,NTXDI.,CKEOF.,FILLC.,IOERR.,ins.sm
2)		$LOCAL	REGSAV,3
**************
1)7		extern	CKEOF.
1)		$LOCAL	REGSAV,3
****
2)7		extern	CKEOF.,ins.sm
2)		$LOCAL	REGSAV,3
**************
1)10		extern	IOERR.
1)		$LOCAL	REGSAV,3
****
2)10		extern	IOERR.,ins.sm
2)		$LOCAL	REGSAV,3
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:RTSETS.MAC[3,325601]	created: 1448 01-OCT-80
File 2)	DSK:RTSETS.MAC	created: 1400 12-JUN-81

1)1		extern	save.6,rest.6
1)	;
****
2)1		extern	save.6,rest.6,ins.sm
2)	;
**************
1)1		ibp	exp5,addr2	;advance addr2 bptr
1)		move	addr2,exp5
****
2)1		jsr  	ins.sm
2)		adjbp	exp5,addr2	;advance addr2 bptr
2)		move	addr2,exp5
**************
1)1		ibp	exp5,addr1
1)		move	addr1,exp5
****
2)1		jsr  	ins.sm
2)		adjbp	exp5,addr1
2)		move	addr1,exp5
**************
1)1		$temp	bptemp,1
****
2)1		extern	ins.sm
2)		$temp	bptemp,1
**************
1)1		adjbp	r1,bptemp	;now indicates appropriate bit
****
2)1		jsr  	ins.sm
2)		adjbp	r1,bptemp	;now indicates appropriate bit
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*

File 1)	DSK:RTCNV.MAC[3,325601]	created: 1448 01-OCT-80
File 2)	DSK:RTCNV.MAC	created: 1356 12-JUN-81

1)1		extern	d.rnd2,dr.rnd
1)	;
****
2)1		extern	d.rnd2,dr.rnd,ins.sm
2)	;
**************
1)1		adjsp	top,$maxtemp
****
2)1		jsr  	ins.sm
2)		adjsp	top,$maxtemp
**************
1)1		adjsp	top,-$maxtemp
****
2)1		jsr  	ins.sm
2)		adjsp	top,-$maxtemp
**************

*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*


  INSTRS.MAC - a new set of routines to simulate double precision
	       fixed point instructions, ADJSP, ADJBP, and BLT.

 