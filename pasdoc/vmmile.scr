$skip $indent +10
$paragraph -10
To:\\\\\\ A.\Kortesoja
$skip $paragraph -10
From:\\\\ D.\Gorgen
$skip $paragraph -10
Date:\\\\ April 21, 1980
$skip $paragraph -10
Subject:\ Early ANC Portability Milestones
$skip 3 $indent -10
The work that remains to be done to have a Pascal Virtual Machine
implementation on Series-II hardware for ANC's use can be divided
into the following tasks:
$ski $ind +10
$par -10
Specify:
$par -5
\1.\\Runtime interface.
$par -5
\2.\\Pascal Virtual Machine assembly language.
$par -5
\3.\\Object and image file formats.
$par -5
\4.\\Overlay facility.
$par -5
\5.\\Linker program.
$ski $par -10
Implement:
$par -5
\6.\\Simple instruction simulator for RSX-11M,
to give us an idea of the level of efficiency we can expect.
$par -5
\7.\\File transfer for images from host to PDP-11
[modified TALK10]
(including object files from host to VAX,
image file from VAX to host while we use the VAX linker
[modified VAXFER]).
$par -5
\8.\\First-cut code generator (generates legal virtual machine
code for most of the MDSI Pascal language).
$par -5
\9.\\Code generator for release (this task includes determination of
ANC's requirements for language features not implemented for VAX
Pascal).
$par -5
10.\\Full RSX-11M interpreter/runtime, including overlay handler,
virtual memory and possible preprocessor program to prepare images
for interpretation.
$par -5
11.\\Linker program, to run on host machine.
$par -5
12.\\ODMS program, to run on host machine.
$ski $ind 0
This program does not include construction of a
testbed virtual machine
interpreter on the host machine.
Given that we can collect useful timing data from
the result of task 6, and since our architecture is
a fairly modest extrapolation of an established one,
the work necessary to produce such an interpreter seems
not to be worthwhile.
In turn, this means that the milestone of having all
tools on the host machine completed becomes less significant,
since they are of no use in themselves, without an interpreter.
$ski
It's worth noting that all of the software which is to
run on the "host machine" (i.e., file transfer, code generator,
linker, ODMS) will probably have to run on both Tymshare and ADP
DEC-10's.
$ski
Completion of tasks 1-4 is required before beginning all other tasks.
Task 9 requires task 8, task 10 requires task 6 and task 11
requires task 5.
Tasks 11 and 12 should be done more or less concurrently,
as there will be interfacing details to be worked out
between the linker and the ODMS.
$ski
I am assuming manpower to be available as follows:
$ski
D.\Gorgen -- now through project completion
$par
S.\Roush -- now through late June, part time; full time thereafter
$par
S.\Medlin -- June through project completion
$par
J.\Rosen -- late June through project completion
$par
summer employee -- mid-May through August
$ski
I am also assuming that two weeks in May will be devoted
to Tymshare conversion and that no useful work on the ANC Portability project
will be possible while this happens.
$ski
With all this in mind, I anticipate the following schedule
for task personnel and completion:
$ski $ver
1,2:  D. Gorgen, S. Roush         May 5
3,4:  D. Gorgen, S. Roush         May 12
5:    S. Medlin                   June 23
6:    D. Gorgen, summer employee  June 16
7:    D. Gorgen, J. Rosen         July 14
8:    S. Roush                    June 23
9:    S. Roush
10:   D. Gorgen, summer employee
11:   S. Medlin
12:   J. Rosen
$ski $jus
It is too early to specify completion dates for the
longer-term tasks, 9-12, because they are fairly sensitive
to the completion of other tasks, as mentioned above.
Also, it is not clear how soon after Tymshare conversion
we will have a programming environment (tools, network service)
which allows us to be as productive as on ADP.
If this takes long, it could have an impact on the large programming
tasks 9, 11 and 12.
However, with about 18 man-months available for tasks 9-12,
the target date of November 1 for Series-II implementation
is achievable.
