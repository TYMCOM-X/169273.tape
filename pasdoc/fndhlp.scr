$margin 5 $width 70
$length 0 $top 0 $bottom 0 $number off
$just
[HELP]
$para 0
HELP is a program which will search text files for lines matching a
specified pattern.
Line matching patterns may be specified using a very general notation,
which is based on regular expressions.
Matched lines may be counted, and they or their line numbers may be
printed.
$skip
Further information can be obtained by using the switch "/HELP:code",
with one of the codes listed below.
(You can shorten the codes to any unique abbreviations.)
$skip $verb $ind +5
$tab 13
Code	Information
----	-----------
ALL	Types all the available /HELP information.
COMMANDS	Describes the command line syntax.
HELP	Types this message.
PATTERNS	Describes the syntax you use to specify patterns
	for selecting lines from the input file.
PREDEFINED	Lists the predefined pattern names.
SWITCHES	Lists the command line switches and their uses.
$ind -5
$just
[COMMANDS]
$para 0
Commands to FIND have one of the following formats:
$skip $verb
(1)  [ <output spec> ] <input file> [ <switches> ]
(2)  [ <output spec> ] [ <switches> ]
(3)  "@" <indirect file>

     <output spec> ::= [ <output file> ] "="
     <switches> ::= "/" <switch> [ ("/" | ",") <switch> ]*
$skip $just
Format (1) causes FIND to process the specified input file, find all lines
matching the current pattern, and write output information to the specified
output file.
If the <output spec> is omitted, then output is written to the terminal.
If just an "=" is given for the <output spec>,
the output file name is taken from the default output file name and the input
file name.
$skip
Format (2) does not cause any input file to be processed.
Instead, the default switches and default output file are set according to the
<switches> and <output spec>.
(If no <output spec> is given, the default output file is unaffected.)
$skip
Format (3) causes FIND to read command lines from the specified indirect command
file.
If no extension is specified, FIND tries an extension of .CMD first, and .CCL
second.
$para 0
[SWITCHES]
$para 0
FIND recognizes two kinds of switches in a command line.
Control switches modify the effect of a processing command.
They may be given on a command line with an input file, to override the
default control options for the processing of that file;
or they may be given on a command line without an input file, to change
the default control options.
$skip
Immediate action switches cause some special action to be performed immediately.
When an immediate action switch is specified, that is the only action which
will be performed by that command line -- neither file processing nor the
changing of default options will take place.
Only one immediate action may be performed.
If more than one is specified, /HELP takes first precedence, then /RUN,
then /EXIT, then /RESET.
$skip
Switch names may be abbreviated.
In the following descriptions, the part of a switch name that may be left off
is parenthesized.
Some switches may be on or off;
these are preceded with [NO].
Optional switch values are enclosed in square brackets.
$skip $ind +5 $para -5
AL(PHA):pattern sets the current alphanumeric pattern, which is used in
recognizing word patterns such as <<"WORD">>.
$skip $para -5
APP(END) causes FIND output to be appended to the output file, rather than
replacing it.
CAT(ENATE) causes an output file to be created the first time it is written
to.
However, subsequent output to the same file is appended to it.
CATENATE is the default output file mode.
$skip $para -5
[NO]CON(TROL) causes the entire Ascii character set to be read from input files.
Normally, control characters are ignored, except for tabs, which are expanded
into spaces.
$skip $para -5
[NO]COU(NT) writes a line to the output file when the processing of an input
file is complete.
This line contains six asterisks, two spaces, and the number of lines from the
input file which were matched.
