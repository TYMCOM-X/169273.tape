#system (SCANNR Lexical Scanner Builder)
#module (SCNPAT,27 September 1979)
The scanner pattern list is an ordered list of (regular expression, action)
pairs.
A pattern indicates that when the regular expression is recognized, the
action is to be performed.
If the regular expressions of two patterns match the same input, the action
of the pattern which occurs earlier in the list is executed.
#entry (initpatterns)&
initializes the pattern module.
#entry (clearpatterns)&
clears and reinitializes the pattern list.
#entry (new_pattern ( re, act, prm ))&
adds a pattern to the list.
Re is the regular expression which characterizes the pattern.
Act and Prm are string lists.
For a pattern "IGNORE <reg\exp>", Act and Prm will both be nil, and this
regular expression will be entered with an ignore action.
For a pattern "<reg\exp> {action}", Act will be non-nil and Prm will be nil,
and this regular expression will be entered with a simple action.
For a pattern "SYMBOLS {action} <parm\list> = <reg\exp>", both Act and Prm will
be non-nil, and the regular expression will be entered with a parameterized
action.
#entry (add_pattern ( re, prm ))&
also adds a pattern to the list.
Re is the regular expression, and Prm is a string list.
A call to AddPattern provides a regular expression and a parameter list for
an additional entry under the current SYMBOLS list, which must have been
defined by the last NewPattern call (with non-nil Act and Prm).
#entry (endpatterns)&
is called to indicate that all patterns have been specified.
#entry (npatterns)&
is the number of patterns that have been defined.
#entry (pat_re ( n ))&
is a function which may only be called after a call to EndPattern.
N must be between 1 and Npatterns.
PatRe returns the regular expression component of the N-th pattern.
#entry (pat_action ( n ))&
is a function which may only be called after a call to EndPattern.
N must be between 1 and Npatterns.
PatAction returns a string list which is the action for the N-th pattern, with
all parameter substitutions performed.
When the calling routine is finished with the action string list, it should
call PatFree with it.
#entry (pat_free ( act ))&
should be called to release an action string list which was returned by PatAct.
#end
