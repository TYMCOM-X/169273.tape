#system (PASCAL Compiler)
#module (PASSET,9/11/78)
This is the bit-set manipulation module.
Vectors of bit sets are used for a number of functions throughout the optimizer.
Since these vectors and sets must be dynamically created, and their manipulation
is repetitive, the creation and manipulation of bit set vectors has been
centralized in this module.
$skip
Each bit set vector is referred to with a descriptor, which must be declared
with type "svector".
Such a descriptor is initialized by NewSvector, and must be passed as a
parameter to all the other routines in this module.
#entry (new_svector (n_sets, n_elems))&
will return a vector of bit sets (actually a descriptor for such a vector),
containing sets numbered 0 through n_sets, each containing elements numbered
0 through n_elems.
#entry (clr_set (v, i))&
will set the i-th set of vector v to the empty set.
#entry (unv_set (v, i))&
will set the i-th set of vector v to the universal set.
#entry (add_elem (v, i, e))&
will add the specified element to the i-th set of vector v.
#entry (del_elem (v, i, e))&
will delete the specified element from the i-th set of vector v.
#entry (cpy_set (v, i, j))&
will copy the i-th set of vector v into the j-th set.
#entry (mov_set (v, i, w, j))&
will copy the i-th set of vector v into the j-th set of vector w.
It is assumed that v and w are vectors of sets over the same range.
#entry (union (v, i, j))&
will set the j-th set of vector v to the union of the i-th and
j-th sets.
#entry (intersect (v, i, j))&
will set the j-th set of vector v to the intersection of the i-th
and j-th sets.
#entry (subtract (v, i, j))&
will set the j-th set of vector v to the set of all the elements which are in
the j-th set and are not in the i-th set.
#entry (set_eq (v, i, j))&
will return true if the i-th and j-th sets of vector v are
identical.
#entry (in_set (v, i, e))&
will return true if the specified element occurs in the i-th set of
vector v.
#entry (is_empty (v, i))&
will return true if the i-th set of vector v is the empty set.
#entry (del_svector (v))&
will dispose of all the heap storage which has been allocated for vector v.
#end
