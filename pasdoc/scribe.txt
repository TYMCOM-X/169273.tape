



                                SCRIBE


                               ABSTRACT

SCRIBE is a program providing interactive development of a document in
rough  draft form, which can be immediately printed in a finished form
suitable for publication.  The document is prepared and modified  with
any  standard text editor (for instance, QED or PEAK may be used).  In
addition to text, the rough document file contains special  characters
and  commands  which  are not printed, but which control the format of
the finished copy.  A few other formatting options are also  specified
from the terminal when the program is run.

SCRIBE  provides  the  following  formatting functions, all under user
control:

     1)  Pagination of the document,  including  such  things  as
         page  size,  margins (at the top and bottom of pages, in
         addition to left and right), numbering, titles, etc.
     2)  Margin Justification, producing  right-justified  output
         with  a  minimum  left margin.  Indentation of justified
         text from  both  the  right  and  left  margins  may  be
         controlled by the user.
     3)  Decapitalization of input text, facilitating preparation
         of documents on terminals without lower case.
     4)  Underlining of output text, on line printers as well  as
         terminals.
     5)  Access   to   special   terminal   functions,   such  as
         superscripting and subscripting on the Diablo terminal.

The first section of the manual describes the concepts and defines the
terminology   required   to   use   SCRIBE,   and  to  understand  the
documentation in the rest of the manual.  The remaining  sections  are
essentially  a  reference  manual detailing how to utilize the various
capabilities offered by SCRIBE.  The discussion is parsimonious in the
use  of  examples,  since  the  intention  is  to present all relevent
information in a very terse and thus readily referenced format.



























SCRIBE Manual
Version 4.0  1-March-84


                            BASIC CONCEPTS

Page Width

SCRIBE segments the document into pages, defined by a  line  width  in
characters   and  a  page  length  in  lines.  The  width  is  further
subdivided into a left margin and  left  indentation,  which  together
specify  the number of spaces to the left of printed text, and a right
indentation, specifying the number of spaces to the right  of  printed
text.  Thus,

  spaces available for text=width-(margin+right indent+left indent)

Normally,  the  indentations are zero, and the margin and width define
the maximum extent of printed text.  For  example,  on  a  Silent  700
terminal,  which  has an intrinsic margin of 2 (the print head after a
carriage return is two positions to  the  left  of  the  edge  of  the
paper),  to define a 70 space line centered on the page, one would set
the width=75 and the margin=5.  Since the paper is 84 positions  wide,
this  would  leave 7 spaces to the left (margin+2) and 7 spaces to the
right (84-(width+2)).

To further shorten lines, the right and/or left indentations would  be
increased.  For  example,  before  the list of SCRIBE functions in the
previous section, the right indentation was set to 5.  While one might
argue  that  this  could  be accomplished by resetting width=70, it is
simpler to change the indentation, since it is relative to the  width,
and  thus,  one  need  not  know what the current width is to increase
indentation by 5.  In general, the best practice is to set margin  and
width  once,  corresponding  to the paper size, and then to change the
right and/or left indentations in the remainder of  the  document.  If
this  is  done, the document can readily be printed on different paper
sizes since the margin and width can  be  entered  from  the  teletype
(refer to the following section describing commands).

Page Length

Pages  are  subdivided  lengthwise  into  header lines at the top, and
trailer lines at the  bottom,  with  lines  of  text  in  between.  In
addition to blank lines, the header may contain title line(s) and/or a
page number.  The trailer may contain a page  number  (if  it  is  not
printed  at  the  top),  and/or footnote line(s).  Page numbers may be
printed on the left, centered, or on the right of pages.

If both a title and a page number are printed  at  the  top,  and  the
number  is  not  centered  (justification  has been specified for it),
their relative position is determined by the position of  the  number,
as  shown  in the following diagram.  If the number is to be centered,
it will always be printed centered before the first title line.






                                - 1 -






SCRIBE Manual
Version 4.0  1-March-84


-----------------WIDTH---------------->
-MARGIN->                             |
        |                             |
if NUMBER LEFT and TITLE RIGHT or centered:
 <spaces><number><    spaces   ><title>
        |                             |
if NUMBER LEFT and TITLE LEFT:
 <spaces><number><space><title>
        |                             |
if NUMBER RIGHT and TITLE LEFT or centered:
 <spaces><title><    spaces   ><number>
        |                             |
if NUMBER RIGHT and TITLE RIGHT:
 <spaces><spaces><title><space><number>

The preceding discussion also applies to the last  footnote  line,  if
numbers  are  being  printed  at the bottom of pages and are not to be
centered.

Page numbers, if not printed on the same line as a title/footnote, are
printed before titles, and after footnotes.

If  page  numbers  are  printed  at  the  top/bottom,  a  minimum of 3
header/trailer  lines  must  be  specified.  If  a  title/footnote  is
printed,  a  minimum of 2 more header/trailer lines than the number of
title/footnote lines are  necessary.  If  both  a  title/footnote  and
centered  number are printed, 3 more than the number of title/footnote
lines  are  required.  An  insufficient  number  of  lines  causes   a
diagnostic  to  be  printed  on  the  terminal and the printing of the
title/footnote and/or number to be suppressed.

Processing Modes

SCRIBE is capable of processing input text  and  producing  output  in
four   different   ways,  referred  to  a  verbatim,  centered,  right
justified, and  justified.  In  verbatim  mode,  lines  are  read  and
written  exactly  as  they  appear on the file, except that spaces are
inserted before as defined by the current margin and left indentation.
SCRIBE  allows  the right indentation to be violated in this mode, but
width violations will cause a diagnostic.  This mode is typically used
when printing figures, tables, and so on.

Right  justified  and  centered modes are similar to verbatim, in that
the text of lines is output in the  same  form  as  it  is  input.  In
centered  mode,  the  text  is  centered  in  the available text space
(width-indentations-margin), while in right justified mode,  the  text
is  right  justified  in  the  available space.  As in verbatim, right
indentation  violations  are  allowed  (input  line  is  longer   than
available  space) but width violations are diagnosed.  These modes are
useful for section headers, and other such things.

In justified mode,  the  input  is  segmented  into  words  (non-blank
strings  delimited  by  blank(s)  and/or  line  boundaries),  and then
reassembled into output lines of length equal to  the  available  text
space.  If  necessary,  extra blanks are inserted between words to pad
lines out to the desired length.  This mode  produces  even  left  and

                                - 2 -




SCRIBE Manual
Version 4.0  1-March-84


right margins, and thus is the normal processing mode.

If  $JUSTIFY LEFT is specified, SCRIBE will not insert extra blanks to
pad lines.  This produces lines of nearly  equal  length,  giving  the
appearance of a manually typed document.

Since  line boundaries and extraneous spaces are ignored in the input,
preparation and especially modification of document  text  is  greatly
simplified.  For  example,  words can be inserted in, or deleted from,
the middle of input lines without worrying about  the  length  of  the
edited line.

Justification  of  contiguous word blocks, corresponding to paragraphs
or outline entries in  the  finished  document,  is  usually  desired.
Thus,  it  is necessary to have a way to tell SCRIBE where a justified
block ends (and perhaps where a new  one  begins).  Such  a  point  is
called  a  justification  break.  In  SCRIBE,  any  and  all  commands
(described in the next section) cause  a  justification  break,  if  a
block  of  justified text is currently being processed, in addition to
whatever other effects they may have.  There are  two  commands  which
are  typically  used  to  break justification, namely:  $SKIP (causing
blank line(s) to be  printed),  and  $PARAGRAPH  (modifying  the  left
indentation of the first line in the next block of text).

Commands

Formatting parameters are set by commands in the input file, which are
read and processed by  SCRIBE,  but  not  output.  Command  lines  are
identified by a dollar sign ($) in the first column, and, as described
earlier, cause an immediate justification break.  An imperative, which
identifies   the   command,   immediately  follows  the  dollar  sign.
Typically, the imperative identifies a parameter to  be  changed,  and
the  following  items  in the command line give the new value it is to
assume.  Items  may  be  keywords  (alphabetic  strings  delimited  by
blank(s)),  integers  (which  occasionally  may be signed), or strings
(arbitrary characters enclosed in primes).  Any imperative or  keyword
may  be  abbreviated to a minimum of its first 3 characters.  Multiple
commands on the same line are allowed ('$ski $par 5'), but  the  first
column of the line must contain a dollar sign.

Commands  are  divided  into  two groups:  those specifying pagination
parameters, and those specifying line parameters (for want of a better
name).  Commands  in the first group set such things as line width and
page length, and do not take effect until the beginning  of  the  next
printed  page.  Commands  in the second group take effect immediately.
It is important to note that pagination commands at the  beginning  of
the  input  file or immediately following a PAGE command (see the next
section), take effect immediately, since SCRIBE is positioned  at  the
beginning of printed page.

Erroneous  command  lines are printed on the user's terminal, followed
by an up-arrow (^), indicating the approximate point in the line where
the error was detected, and a diagnostic.



                                - 3 -





SCRIBE Manual
Version 4.0  1-March-84


                           SCRIBE COMMANDS

The following conventions are used in this section to describe command
syntax:

     1)  Optional item(s) are enclosed in brackets.
     2)  When one of several items may appear at a certain  point
         in  a  command,  items  are separated by commas.  If the
         items are optional, they are enclosed  in  brackets,  if
         they are required, they are enclosed in parenthesis (but
         individual required items are not).
     3)  Abbreviations are not shown.  However, any imperative or
         keyword  may  be abbreviated to as little as its first 3
         characters.
     4)  The initial dollar sign on commands is not shown.  It is
         important  to  remember  that  it  must be included when
         entering command lines.

Imperatives and keywords may be entered in upper or  lower  case,  and
are implicitly converted to upper case.  Characters within strings are
not converted, thus allowing titles containing both  upper  and  lower
case.

Pagination Commands  (Take effect at top of next page)

  BOTTOM (integer,TERMINAL)

    Sets  the page trailer length in lines.  If TERMINAL is specified,
    the user is prompted at the terminal to enter the  length.  BOTTOM
    must be set to at least three if page numbers are to be printed at
    the bottom, and to at least two more than the number  of  footnote
    lines (three more if centered page numbers are also printed at the
    bottom).

    The default value is 6 lines (generally = 1").

  FOOTNOTES ( [LEFT,RIGHT] string ) ...

    Defines a footnote (effectively a title printed at the  bottom  of
    pages)  to  be  printed  on  subsequent  pages.  Characters within
    footnote string(s) are decapitalized and/or underlined  if  either
    of  these  options is in effect (see later sections).  A string is
    any number of characters enclosed in primes ('), i.e. 'Report'.  A
    prime  may  be  included  in a string by doubling it; for example,
    '''' produces a single prime on output.  Multiple  line  footnotes
    are  specified  by  multiple strings following the imperative; the
    command "$footnotes 'Here' 'Now' will cause a  two  line  footnote
    with  "Here"  centered on the first line and "Now" centered on the
    second.  Footnote strings may be justified to either the  left  or
    right  margin  by  preceding  the  string  with  LEFT  or RIGHT as
    indicated  above.  If  neither  is  specified,  strings  will   be
    centered  (unless  it  is  the  last  footnote  line and justified
    numbers are being printed at the bottom.  See the previous section


                                - 4 -






SCRIBE Manual
Version 4.0  1-March-84


    Page  Length  for  a discussion of this case.) As indicated in the
    syntax  above,  multiple  footnote   lines   may   be   specified.
    Justification must be specified for each line, thus if you wish to
    have a three line footnote justified left, you must  precede  each
    of  strings with LEFT.  The current page number may be included in
    a footnote line by typing a backslash.  When the line is  printed,
    the  backslash  will be replaced by the current page number.  This
    allows you to format your own page numbers, rather than using  the
    default numbering formats.  In this case, generally $NUMBER OFF is
    specified to suppress default number printing (note that this does
    not suppress incrementing of page numbers).  To cancel printing of
    footnotes, type either $FOOTNOTES OFF or $FOOTNOTES ''.

    In the default case, SCRIBE does not print any footnotes, e.g., it
    defaults to $FOOTNOTES OFF.

  LENGTH (integer,TERMINAL)

    Sets  the  page  length.  TERMINAL causes the user to be prompted.
    If LENGTH is set to a value  greater  than  zero,  it  must  at  a
    minimum  be  equal  to TOP+BOTTOM+2.  However, if LENGTH is set to
    zero, SCRIBE will not automatically paginate the  document,  i.e.,
    only  explicit  page  skips  forced by the $PAGE command described
    below will cause a header/trailer  to  be  printed  and  the  page
    number  to be incremented.  This option is typically useful in the
    initial stages of document preparation.

    The default value is 66 lines (generally = 11").

  MARGIN (integer,TERMINAL)

    Sets the left  margin  in  character  positions.  If  TERMINAL  is
    specified, the user is prompted.

    The default value is 5.

  NUMBER OFF                                (Turns off page numbering)
  NUMBER [TOP,BOTTOM] [ALTERNATE] [RIGHT,LEFT] [integer]

    Specifies  what  page  numbering  is to take place.  TOP specifies
    that numbers are to be printed in the page header (at the  top  of
    the page), and BOTTOM, that they are to be printed in the trailer.
    If  neither  is  specified,  BOTTOM  is  assumed.  RIGHT  or  LEFT
    specifies  the justification of the numbers.  If neither is given,
    the numbers will be centered.  If an integer is given, it will  be
    the  number  of  the  next  page  (and  will be incremented by one
    subsequently).  If no integer is given,  numbering  will  continue
    with  the  current page number.  It is important to note that even
    when numbering is turned OFF, SCRIBE continues to count pages, but
    does  not  number  them.  Thus,  if  numbering  is resumed without
    specifying an integer, the next number printed  will  equal  (last
    number printed+number of unnumbered pages since+1).



                                - 5 -






SCRIBE Manual
Version 4.0  1-March-84


    ALTERNATE  causes  the  page  number  to be printed on alternating
    sides of the page.  ALTERNATE or ALTERNATE RIGHT prints  the  page
    number  on  the right on odd pages, and on the left on even pages;
    ALTERNATE LEFT the reverse.  Note that the  page  number  used  to
    determine  the position of the printed page number is the physical
    page number, and not the number specified in  the  NUMBER  command
    (if any).

    Default  page  numbering  starts at 1, and numbers are centered at
    the bottom of pages.  The previous section  entitled  Page  Length
    should be consulted for details on the format in which numbers are
    printed.

  TITLE ( [LEFT,RIGHT] string ) ...

    Specifies the title to be printed on subsequent pages.  The syntax
    and behavior of this command are the same as the FOOTNOTES command
    (except that titles are printed at the top of pages), and thus the
    documentation  of  the FOOTNOTES command should be consulted.  The
    previous section Page Length should be consulted  for  details  on
    title/page number interaction.

    SCRIBE defaults to no title.

  TOP (integer,TERMINAL)

    Sets  the  page trailer length in lines.  TERMINAL causes the user
    to be prompted.  TOP must be set to at least three if page numbers
    are  to  be  printed,  or  to at least two more than the number of
    title lines (three more if centered numbers are also printed).

    The default value is 6 lines.

  WIDTH (integer,TERMINAL)

    Sets the page width.  TERMINAL causes the user to be prompted.

    The default value is 75, which, with the defmargin of  5,  is
    typically  the  best  combination  for  a  70  space  line on most
    terminals.

Line Commands  (Take immediate effect)

  CENTER

    SCRIBE will center subsequent lines ("centering mode").

  CONTROL (ON,OFF)

    Controls processing of character commands, described  in  a  later
    section.  There  are  various  character  commands, all having the
    forms "^[<number>] <letter>" and "|<letter>" anywhere in the text.
    When  CONTROL  is  ON,  character  commands  are processed, and an


                                - 6 -






SCRIBE Manual
Version 4.0  1-March-84


    up-arrow must be entered as ^^ and a vertical bar as  ||.  CONTROL
    OFF  causes  up-arrows  and  vertical bars to be treated as normal
    characters.

    SCRIBE defaults to CONTROL ON.

  DECAP (ON,OFF)

    Turns decapitalization of alphabetic characters either ON or  OFF.
    The  effect  of  decapitalization being on is described in a later
    section.

    SCRIBE defaults to DECAP OFF.

  INDENT (RIGHT,LEFT) [ [+,-]integer ]

    Sets the RIGHT or LEFT indentation.  If no integer is  given,  the
    indentation  will  be  set to zero.  If the integer is signed, the
    current indentation is incremented by its value, e.g., if  current
    left  indent is 5, then $INDENT LEFT -2 sets new indentation to 3.
    If the integer is not signed, its value becomes the  new  left  or
    right indentation.  If no direction is specified, LEFT is assumed.

    SCRIBE defaults to zero left and right indentations.

  JUSTIFY [LEFT]

    Causes  SCRIBE  to  justify  subsequent  output.  This is SCRIBE's
    default mode.  If LEFT is specified, SCRIBE will not insert  extra
    spaces to produce an even right margin, thus giving the appearance
    of a manually typed document.

  NEED integer

    If the number of print lines remaining on the page  is  less  than
    the  specified  integer,  SCRIBE  will skip to the top of the next
    output page before continuing.  This command may be used to insure
    that sections and/or paragraphs are not split across pages.

  PAGE

    Causes  an  immediate  skip  to  the  top of the next output page,
    unless SCRIBE is currently at the top of a page, in which case, no
    skip is performed.  To create a blank page, enter the following:
      $PAGE
      $SKIP       (See skip command)
      $PAGE

  PARAGRAPH [ [+,-]integer ]

    Causes  the  left indentation of the next (and only the next) line
    of  text  printed  to  be  incremented  by  the  specified  amount
    (negative  integers  move  the  line to the left, positive, to the


                                - 7 -






SCRIBE Manual
Version 4.0  1-March-84


    right).  If no integer is given, PARAGRAPH has  no  effect,  other
    than to cause a break if a block is currently being justified.

  RIGHT

    Causes SCRIBE to print subsequent lines right justified.

  SKIP [integer]

    Causes SCRIBE to output the number of blank lines specified by the
    integer.  If no integer is given, one blank line will  be  output.
    If an integer greater than 1 is given, SCRIBE will not skip beyond
    the top of the next page.  Also, a  SKIP  encountered  immediately
    after  a  page break not forced by a PAGE command will be ignored,
    to avoid the printing of spurious lines at the top of pages.

  SPACING [integer]

    Specifies the  inter-line  spacing  (the  number  of  blank  lines
    between   printed   text   lines).   $SPACING   1  corresponds  to
    single-spacing (no blank lines),  $SPACING  2  to  double-spacing,
    etc.

    SCRIBE defaults to single-spacing.

  TABS [integer [[,] integer]...  ]

    Specifies  successive  column  positions  for  tabs (control-I) in
    verbatim mode.  In all other modes, tabs are  completely  ignored,
    i.e.,  they  are  discarded.  As one might expect, tabs are useful
    for preparing tables to be printed  verbatim.  Tab  positions  are
    relative to the left margin as defined by $MARGIN, $INDENT, and/or
    $PARAGRAPH.  Thus, if the first defined tab stop is  5,  the  left
    indentation  is 2, and the margin 5, the first tab stop will be at
    absolute column 12.  The fact that tabs are relative allows tables
    to  be shifted left or right without affecting the relative column
    positions.  Unfortunately, tab positions are not settable  on  the
    PDP/10, and are always printed at intervals of 8 characters.  This
    makes table preparation with tabs more of a chore, as  you  cannot
    see what the tables will actually look like when editing, but must
    run the document through SCRIBE.  When beyond the last  tab  stop,
    or if no tabs are specified, a tab is printed as a single space in
    verbatim mode.

    SCRIBE defaults to no defined tab stops.  To return to the default
    state, type $TABS by itself.

  TRANSLATE [ <string1> <string2> ]

    Causes  SCRIBE  to translate characters occuring in <string1> into
    the  corresponding  characters  in  <string2>.  $TRA   '|+'   '\&'
    translates  all vertical bars into backslashes, and all plus signs
    to ampersands.


                                - 8 -






SCRIBE Manual
Version 4.0  1-March-84


    <string1> must be longer than or the  same  length  as  <string2>;
    characters   at   the  end  of  <string1>  with  no  corresponding
    characters in <string2> are left alone.  A TRANSLATE command  with
    no  strings  specified  restores the default setting.  Translation
    occurs after all other character processing, i.e. underlining, has
    been  performed,  and  does not affect backslashes in titles.  The
    effect of TRANSLATE commands are  cumulative;  the  above  example
    could  be  obtained by the two commands "$TRA '|' '\' $TRA '+' '&'
    ".

    SCRIBE defaults to $TRA '\' ' ' (backslash to space).

  UNDERLINE (ON,OFF)

    Turns underline processing ON or OFF.  The effect  of  underlining
    being ON is described in a later section.

    SCRIBE defaults to UNDERLINE ON.

  VERBATIM

    Causes  SCRIBE  to print subsequent text lines exactly as entered,
    applying only the margin and left indentation.
































                                - 9 -






SCRIBE Manual
Version 4.0  1-March-84


                          TEXT JUSTIFICATION

This section discusses a few other details on text justification which
have  not  been  covered  previously.  Recall  that when text is being
justified, SCRIBE segments the input into words, which are strings  of
non-blank  characters  delimited  by blank(s) and/or carriage returns.
It then reassembles words into  lines  of  uniform  length,  inserting
space(s) between words to pad the lines out to the desired length.

Specifying Fixed Word Spacing

Occasionally in justified text, it is necessary to have a fixed number
of space(s) between words.  This  can  be  accomplished  by  typing  a
backslash  at  points  where  the printing of a space is desired.  The
backslash will be converted  to  a  space  when  it  is  printed.  For
example, in outline format, one typically wants two spaces between the
number, e.g., "2)", and the first word of the  entry.  Separating  the
number and the last word with two backslashes will do this.

Spacing After Punctuation

SCRIBE  insures  that  there  are at least 2 spaces after words ending
with the following characters:  period (.), colon (:),  question  mark
(?),  and  exclamation  point (!).  If only one space is desired after
such a word, for instance, between someone's initial and last name, it
should be separated from the next word by a single backslash.

                             UNDERLINING

If  underlining  is  on  (SCRIBE's default mode, or if an UNDERLINE ON
command is in  effect),  text  enclosed  in  ampersands  (&)  will  be
underlined,  and  the  ampersands will be removed.  Spaces within text
enclosed in ampersands are not underlined.  Thus, "&underlined  text&"
will be printed as underlined text.

Underlining Spaces

If  spaces  are  to  be underlined, type backslashes instead of spaces
within ampersands.  The backslashes will be converted  to  spaces  and
underlined on output.

Printing Ampersands

When  underlining  is on, a double ampersand (&&) in the input will be
converted to a single ampersand on output, even within  text  enclosed
in single ampersands.  Thus, "&R&&D&" will be printed as "R&D".

Method of Underlining

SCRIBE  normally  underlines  by  printing  the line of text, and then
overprints a line of underscores (_) and spaces.  This method produces
correct output on line printers, and almost all terminals.



                                - 10 -






SCRIBE Manual
Version 4.0  1-March-84


SCRIBE  can  also  underline  by backspacing within the line, and then
printing underscores.  This is the only method which works on  an  IBM
2741  (Selectric)  terminal.  It  also  works on most other terminals,
although not on line printers.

The method used can be selected by a switch, which is input  from  the
terminal  when  SCRIBE  is  run.  Switches  are described in the final
section of this manual.

                           DECAPITALIZATION

If the terminal you are using for document preparation has both  upper
and  lower case, you can skip this section, since it is much easier to
use the shift key on your terminal than it is  to  enter  the  special
characters  indicating  character case to SCRIBE.  However, if all you
have is an ASR33, or somehow you get stuck  on  one  to  prepare  your
document, turn decapitalization on with the DECAP ON command, and read
on.

When decapitalization is on, output character case  is  determined  by
special  characters  in  the  input (asterisks and atsigns), which are
removed before the text is output.  In actuality, SCRIBE decapitalizes
all  alphabetic  characters  in  this  mode,  except those modified by
special characters, which are left alone.  Thus,  SCRIBE,  in  effect,
assumes that all text entered in this mode in upper case, and that the
special  characters  indicate  which  characters   are   not   to   be
decapitalized.

Capitalizing Single Characters

Any  character preceeded by an asterisk (*) will not be decapitalized,
and the asterisk will be removed from  the  text.  This  is  typically
used  to capitalize the first character of a word, for example, at the
beginning of sentences, or in names.  To print a single asterisk, type
a double asterisk in the input.

Capitalizing Strings

All  characters enclosed in atsigns (@) will not be decapitalized, and
the enclosing atsigns will be removed.  Strings  enclosed  in  atsigns
may  contain  any  character  (including blank), and may extend across
multiple input lines.

Within such strings, an asterisk is treated as a normal character, and
is  printed.  Thus,  you  must  indicate that characters are not to be
decapitalized by either enclosing them in atsigns,  or  by  preceeding
them with an asterisk, not by doing both.

Anytime  that  decapitalization  is on, to print a single atsign, type
two atsigns in the input (even within strings enclosed in atsigns).

A good practice is to minimize  the  length  of  strings  enclosed  in
atsigns,  perhaps  to  single  words,  but certainly to strings on one


                                - 11 -






SCRIBE Manual
Version 4.0  1-March-84


input line.  This avoids errors,  such  as  omitting  the  terminating
atsign  of  a  string  when  entering  the  document, or inadvertantly
inserting a string enclosed in  atsigns  within  another  string  when
modifying the document.

Decapitalization and Underlining

It  is  important  to  note  that decapitalization is performed before
underlining.    Thus,    asterisks    and/or     atsigns     effecting
decapitalization    should    occur   within   ampersands   indicating
underlining.  For example, type "&*SMITH&", not "*&SMITH&",  and  type
"&@GOD@&" rather than "@&GOD&@".

Special non-alphabetic translation

When   decapitalization   is   on,   the  following  equivalences  are
established:

#[ --- {    #\ --- |     #] --- }    #^ --- ~

since most terminals  without  lower  case  do  not  have  these  four
characters.  A  pound  sign  (#)  preceding any other character has no
effect.  An asterisk (*) before the  pound  sign  defeats  pound  sign
processing; i.e.  "*#[" appears literally.

                          CHARACTER COMMANDS

Character  commands  invoke  immediate  special processing, similar to
underlining with "&" and capitalizing with "@" and  "*".  The  general
format is:

^x <chars to be processed> |x    (that's a vertical bar)    OR
^nx <chars to be processed>

where x is the character command, and n is the number of characters to
process.

Four  character  commands   are   currently   implemented:   "a"   for
superscripting  ("above");  "b"  for  subscripting  ("below"); "o" for
overlining; "u" for underlining.  $CONTROL ON is specified  to  enable
character  command  processing.  For  example, to produce "Vinit", the
following  sequences  will  work:   "^1oV^binit|b";   "^oV|o^binit|b";
"^oV|o^4binit"; "^1oV^4binit".

When   using  the  "^nx"  form  of  character  commands,  the  special
processing is terminated after n characters have been processed, or by
the  end  of  the  line, whichever comes first.  The "^x ..  |x" form,
however, may extend over multiple lines.

As with ampersand underlining, decapitalization  is  performed  first.
For   example,   to   produce   "Vinit"   above   with   $DECAP,   use
"^1O@V@^BINIT|B".



                                - 12 -






SCRIBE Manual
Version 4.0  1-March-84


If  $CONTROL  OFF  has  been  specified,  no  character  commands  are
processed,  and up-arrows and vertical bars are output normally.  With
$CONTROL ON, double up-arrows and double vertical bars  are  converted
to a single arrow or bar.  In addition, if the character following the
up-arrow or bar does not  designate  a  character  command,  the  text
appears normally; for example, "^Q" appears as "^Q" in the output.

Superscripting,  subscripting,  underlining,  and  overlining  may  be
specified in any combination for a given  character.  A  superscripted
subscript,  or  a  subscripted  superscript,  will  appear as a normal
character.  Nesting of a single character function, however, does  not
work;  a  subscripted  subscript  is  subscripted  only  once, and the
subscripting interval ends at the first "|b", or at the exhaustion  of
the innermost count, whichever occurs first.

Underlining  using  the  "^u"  command  works  exactly  like ampersand
underlining -- embedded spaces are not underscored, while  backslashes
are  normally  converted  to  spaces  and  underlined  (see  TRANSLATE
command).  Overlining, however, overlines all spaces within the  field
to  be  overlined.  To  prevent  overlining  of  spaces,  you must use
separate intervals of overlining; for example, to write "two vectors",
use "^otwo|o ^ovectors|o".

A few more examples may make this feature clearer:

" ^ovector^bsub1|b|o"      becomes      vectorsub1

" ^o&double^asuper|a&|o"   becomes      doublesuper

" FOO^bsub^aboth|bsuper|a" becomes      FOOsubbothsuper


                           EXECUTING SCRIBE

When the document has been entered into a file, type:

          RUN RND:SCRIBE

to the monitor prompt (".") to run SCRIBE.

SCRIBE  will  then  print  its  version information and prompt with an
asterisk, to which you type:

    [<printed document file>=]<input document file>[/<switch(es)>]

The <input document file> is the name of the file you  have  prepared,
containing  text,  commands,  special  characters,  etc.  The <printed
document file>, if specified, is written by SCRIBE, and  will  contain
the  finished  document.  If  the  <printed document file> is omitted,
output will be written to the terminal.  All diagnostics generated  by
SCRIBE are printed on the terminal.

You can also generate output directly on the terminal by typing "TTY:"


                                - 13 -






SCRIBE Manual
Version 4.0  1-March-84


as the <printed document file>.  However, it is  generally  preferable
to  send  output  to a permanent file, except when producing the final
copy, since you may wait for most of the document to print before  you
discover that SCRIBE has detected an error (and ruined the copy with a
diagnostic).

SCRIBE assumes an extension of "TXT" for the output file and "SCR" for
the  input file, so be sure you include the extension if either of the
files has a different one.

Switch(es) (separated from the input file by a  slash  or  comma)  may
also  be  specified.  These  are  global  formatting  options, and are
described in the next section.  Multiple  switches  are  separated  by
commas.

After  processing  a  file,  SCRIBE will prompt with another asterisk,
allowing another file to  be  processed.  To  return  to  the  monitor
prompt, type either a carriage return or break.





































                                - 14 -






SCRIBE Manual
Version 4.0  1-March-84


                           SCRIBE SWITCHES

Switches are single alphabetic characters, which in some instances are
followed by one or more items, separated from the switch character  by
a  colon.  Switches  are  separated  by commas, and are preceeded by a
slash, separating them from the input file.  If no switches are to  be
entered, a carriage return should be typed immediately after the input
file.

B    Backspace

     SCRIBE normally underlines by overprinting a line of  spaces  and
     underscores.  If  this switch is specified, SCRIBE will underline
     by backspacing  within  the  line  of  text,  and  then  printing
     underscores.

C    Carriage Control

     SCRIBE  normally  fills  out  pages  with  blank  lines.  On line
     printers  and  terminals   with   carriage   control,   this   is
     time-consuming  and  unnecessary.  This  switch  causes SCRIBE to
     fill out pages by printing a form feed.

D    Dashes

     This switch causes SCRIBE to  print  a  line  of  dashes  between
     pages,  which  aids  in  bursting  pages  when  the  paper is not
     pre-folded.

F    Form-feed Before

     This switch causes SCRIBE to print a form-feed before  the  first
     page, which is an alternate way to line the paper up on terminals
     with carriage control.  Normally, you should line the paper up by
     positioning  the paper after entering information to the teletype
     prompt, and before hitting the carriage return.

L    Print line numbers in margin

     This switch causes SCRIBE to print the approximate line number in
     the  input  file  of every output line in the document.  The line
     number is printed left justified in the left margin, and thus  if
     the  margin is too small to accomodate the number, it will not be
     printed even though the L switch is specified.  SCRIBE's  default
     margin  of  5  is sufficient.  This switch is particularly useful
     when printing rough drafts as it allows points where  corrections
     are required to be rapidly located when editing.  The line number
     printed is generally the input line containing the last  word  of
     an  output line, or the line after.  Thus, if the point requiring
     correction is not in the line indicated in the margin, you should
     check the lines immediately preceding it.




                                - 15 -






SCRIBE Manual
Version 4.0  1-March-84


N    No Underline

     If  this  switch  is  specified,  SCRIBE  will  perform underline
     processing (removing ampersands, etc.) normally (as specified  by
     UNDERLINE  commands in the input), but will not print underscores
     in the output.  This option is useful on  weird  terminals  which
     cannot  handle  underlining,  or  do it poorly (say by printing a
     back-arrow through the middle of characters as does  the  ASR33),
     or if you just aren't interested in seeing the underlining.

O:range [,range] ...   Output only

     Specifies  that  only  certain  physical  pages are to be output.
     Note that the numbers specified do not necessarily refer  to  the
     numbers  printed  in  the  document, but to physical pages in the
     output, starting with 1.  A range may take one of three forms:
       integer-integer prints all pages in the range, inclusive.
       integer-*       prints pages from "integer" to the last one.
       integer         prints only the specified page.
     Ranges should be  non-overlapping,  and  specified  in  ascending
     order.  For example, O:2,4-6,9-* would print physical pages 2, 4,
     5, 6, 9 and 10 of a ten page document.

P    Pause

     If this switch is specified, SCRIBE  will  pause  between  output
     pages  and  wait  for  a carriage return from the terminal before
     printing the next page.  This option is useful when  printing  on
     non-continuous  form  paper  (such  as  letter-head paper), as it
     allows new pieces to be inserted in the terminal between pages.

S:integer   Start At

     SCRIBE will not begin generating output until the  physical  page
     specified  by  the integer after "S".  Thus, S:n is equivalent to
     O:n-*.  This option  is  useful  when  initial  pages  have  been
     printed correctly, and then an input or format error is detected.
     Output can be aborted, the error fixed, and then SCRIBE run again
     with the "S" switch to avoid re-printing pages.

T:string   Terminal Type

     Specifies a set of special operations for the specified terminal.
     At the moment, 'diablo' is the only terminal type supported;  the
     '/t:diablo'  switch  enables special control character output for
     superscripting, subscripting, and  overlining.  On  ADP,  "$$CRT;
     LEN 0" should be specified for proper operation.








                                - 16 -




  R@s4