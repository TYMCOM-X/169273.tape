!! title DA Date ;
! :::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
::::::::::::::::::::::::::::::::::::+::::::::::::::::::::::::::::::::::::::
:                                                                         :
:                                                                         :
:                                  Date                                   :
:                                                                         :
:                                                                         :
::::::::::::::::::::::::::::::::::::+::::::::::::::::::::::::::::::::::::::


	Perform a myriad of date- and time-related functions

	! <<  Should we require module EXTEND here, or internalize the
	      functions we borrow from it?


::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;


  define
    $$Date$$Defined = true;

    ! This symbol is used throughout the world to avoid multiple
      requirements of this file;


! ------------------------------------------------------------------------;


  !get!module(Extend);

    ! To get Cnvdtim();


  preload!with
    "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep",
    "Oct", "Nov", "Dec";

  safe string array Months[1:12];


! ------------------------------------------------------------------------;


    define
      Date.Sep = <"-">,
      Time.Sep = <":">;


! -------------------------------------------------------------------------


       The following definitions are for Format-1 dates in the form

			DF1.Curr.Date = "31-Dec-82"
			DF1.Curr.Time = "13:54"


	<<  We might consider changing

		TF1 to be "HH:MM:SS"
		TF2 to be "HH:MM:SS am" or "HH:MM:SS pm"

	    allowing the ommission of the ":SS" portion according to
	    some other parameter of expression.


! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ;


  string DF1.Curr.Date;				! Current Date;
  string DF1.Curr.Time;				! Current Time;

  define
    DF1               = 1,
    !DF1.Today        = <DF1.Curr.Date>,
    !DF1.This.Day     = <DF1.Curr.Date[1 for 2]>,
    !DF1.This.Month   = <DF1.Curr.Date[4 for 3]>,
    !DF1.This.Year    = <DF1.Curr.Date[8 for 2]>,

    !DF1.Now          = <DF1.Curr.Time>,
    !DF1.This.Hour    = <DF1.Curr.Time[1 for 2]>,
    !DF1.This.Minute  = <DF1.Curr.Time[4 for 2]>;


! -------------------------------------------------------------------------


       The following definitions are for Format-2 dates in the form

			DF2.Curr.Date = "12-31-82"
			DF2.Curr.Time = "13:54:42"


! - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - ;


  string DF2.Curr.Date;				! Current Date;
  string DF2.Curr.Time;				! Current Time;

  define
    DF2               = 2,
    !DF2.Today        = <DF2.Curr.Date>,
    !DF2.This.Day     = <DF2.Curr.Date[4 for 2]>,
    !DF2.This.Month   = <DF2.Curr.Date[1 for 2]>,
    !DF2.This.Year    = <DF2.Curr.Date[7 for 2]>,

    !DF2.Now          = <DF2.Curr.Time>,
    !DF2.This.Hour    = <DF2.Curr.Time[1 for 2]>,
    !DF2.This.Minute  = <DF2.Curr.Time[4 for 2]>,
    !DF2.This.Second  = <DF2.Curr.Time[7 for 2]>;


! ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
!! title Rtn Parse.Date ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			      Rtn Parse.Date				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


==========================================================================;


  simple procedure Parse.Date
      (reference string M.Out, D.Out, Y.Out;
      integer Date.In, Format(DF1));

  begin "Parse.Date"
    integer Width;
    integer Digits;


    getformat(Width, Digits);
    setformat(-2, 0);

    D.Out   _ cvs(Date.In mod 31 + 1);
    Date.In _ Date.In div 31;

    if (Format = DF1) then
      M.Out _ Months[Date.In mod 12 + 1]
    else if (Format = DF2) then
      M.Out _ cvs(Date.In mod 12 + 1);

    Date.In _ Date.In div 12;
    Y.Out   _ cvs(Date.In + 64);

    setformat(Width,Digits);
  end "Parse.Date";


! ===================================+=====================================
==========================================================================;
!! title Rtn Parse.Time ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			      Rtn Parse.Time				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


	Time.In is in milliseconds since midnight.


==========================================================================;


  simple procedure Parse.Time
      (reference string H.Out, M.Out, S.Out; integer Time.In);

  begin "Parse.Time"
    integer Width;
    integer Digits;


    getformat(Width, Digits);
    setformat(-2, 0);

    Time.In _ Time.In div 1000;
    H.Out   _ cvs(Time.In div 3600);
    M.Out   _ cvs(Time.In div 60 mod 60);
    S.Out   _ cvs(Time.In mod 60);

    setformat(Width, Digits);
  end "Parse.Time";


! ===================================+=====================================
==========================================================================;
!! title Rtn Get.Date ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			       Rtn Get.Date				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


==========================================================================;


  simple integer procedure Get.Date;
  begin "Get.Date"
    return(calli('0, '14));
  end "Get.Date";


! ===================================+=====================================
==========================================================================;
!! title Rtn Get.Time ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			       Rtn Get.Time				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


==========================================================================;


  simple integer procedure Get.Time;
  begin "Get.Time"
    return(calli('0, '23));
  end "Get.Time";


! ===================================+=====================================
==========================================================================;
!! title Rtn CVDECTime ;
! =========================================================================
=====================================+=====================================
=                                                                         =
=                                                                         =
=			       Rtn CVDECTime				  =
=                                                                         =
=                                                                         =
=====================================+=====================================


==========================================================================;


  simple string procedure CVDECTime (integer Time.In, Time.Fmt(DF1));
  begin "CVDECTime"
    string Hour;
    string Min;
    string Sec;
    string Str;


    Parse.Time(Hour, Min, Sec, Time.In);
    Str _ Hour & Time.Sep & Min;

    if (Time.Fmt = DF2) then
      Str _ Str & Time.Sep & Sec;

    return(Str);
  end "CVDECTime";


! ===================================+=====================================
==========================================================================;
!! title Rtn CVDECDate ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                             Rtn CVDECDate                               =
=                                                                         =
=                                                                         =
====================================+======================================


==========================================================================;


  simple string procedure CVDECDate
      (integer DECDate, Date.Fmt(DF1), Time.In(-1), Time.Fmt(DF1));

  begin "CVDECDate"
    string Mon;
    string Day;
    string Yr;
    string Hour;
    string Min;
    string Sec;
    string Str;


    Parse.Date(Mon, Day, Yr, DECDate, Date.Fmt);

    if (Date.Fmt = DF1) then
      Str _ Day & Date.Sep & Mon & Date.Sep & Yr
    else if (Date.Fmt = DF2) then
      Str _ Mon & Date.Sep & Day & Date.Sep & Yr;

    if (Time.In neq -1) then
      Str _ Str & "  " & CVDECTime(Time.In, Time.Fmt);

    return(Str);
  end "CVDECDate";


! ==================================+======================================
==========================================================================;
!! title Rtn DateTimeString ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                           Rtn DateTimeString                            =
=                                                                         =
=                                                                         =
====================================+======================================


==========================================================================;


  simple string procedure DateTimeString;
  begin "DateTimeString"
    return(CVDECDate(Get.Date, DF1, Get.Time));
  end "DateTimeString";


! ==================================+======================================
==========================================================================;
!! title Rtn DayTime ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                              Rtn DayTime                                =
=                                                                         =
=                                                                         =
====================================+======================================


==========================================================================;


  string procedure DayTime (integer Date, Time);
  begin "DayTime"
    Time _ Time * 60;

      ! Seconds since midnight GMT;

    cnvdtim(Date, Time, '400020, '000000);
    return(CVDECDate(Date, DF1, Time * 1000));

      ! Time is in milliseconds since midnight;
  end "DayTime";


! ==================================+======================================
==========================================================================;
!! title Rtn Initialize.Date ;
! =========================================================================
====================================+======================================
=                                                                         =
=                                                                         =
=                           Rtn Initialize.Date                           =
=                                                                         =
=                                                                         =
====================================+======================================


==========================================================================;


  simple procedure Initialize.Date;
  begin "Initialize.Date"
    DF1.Curr.Date _ CVDECDate(Get.Date);
    DF2.Curr.Date _ CVDECDate(Get.Date, DF2);

    DF1.Curr.Time _ CVDECTime(Get.Time);
    DF2.Curr.Time _ CVDECTime(Get.Time, DF2);
  end "Initialize.Date";
  require Initialize.Date initialization[0];


! ==================================+======================================
==========================================================================;


! ::::::::::::::::::::::::::::::::::+::::::::::::::::::::::::::::::::::::::
				 DA Date
::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::;
