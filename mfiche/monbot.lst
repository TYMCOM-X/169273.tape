MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 1
S.MAC	13-JAN-88 11:55		S.MAC - with system parameter file for P035/D, January 1988

     1				SUBTTL	S.MAC - with system parameter file for P035/D, January 1988
     2
     3				IF2,<IFNDEF LISTSN,<TAPE>>	;Skip to PASS2 in all but COMMON.LST
     4				;THIS MODULE ASSEMBLED WITH KL-10 PARAMETER FILE - KLSYM.MAC
     5
     6					IF2,<IFNDEF LISTSN,<		;LIST KLSYM.MAC IN COMMON ONLY
     7								TAPE>>
     8				TITLE	MONBTS - Monitor resident BOOTStrap
     9
    10					STOPCD(,ENTRY,MONBTS)^
    11					ENTRY	MONBTS		;For library searches
    12	000000'	260040	000000*	MONBTS::PUSHJ	P,DIE		;**** Default stopcode for "MONBTS" ****
    13	000001'	555756	426463		SIXBIT	/MONBTS/  	;Title of module
    14	000002'	000000	000000		S$NONAME,,0		;?NONAME stopcode "MONBTS+nnn(nnnnnn)"
    15			000000'	S$NAME==MONBTS			;For STOPCDs with no arguments
    16					SALL>
    17				^
    18
    19				PRINTF(<[Need to implement BUGDMP for CRASH.EXE]>)
    20	000003'	260040	000000*	BUGDMP::PUSHJ	P,INLMES##	;Dump core into SYS:CRASH.EXE
    21					 ASCIZ /
    22	000004'	064250	252616	BUGDMP - No crash dump for this stopcode
	000005'	422332	020132
	000006'	202355	720306
	000007'	713036	364100
	000010'	623535	570100
	000011'	633376	220350
	000012'	643236	320346
	000013'	723376	061736
    23	000014'	623121	505000	/
    24	000015'	263040	000000		POPJ	P,		;Return to DIE in ERRCON
    25
    26	000016'	260040	000003'	REBOOT:	PUSHJ	P,BUGDMP	;Dump core into SYS:CRASH.EXE
    27	000017'	254000	000020'		JRST	NEWMON		;Reload the monitor
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 2
MONBTS.MAC	20-SEP-87 13:43		Load BOOTS from the disk

    28				SUBTTL	Load BOOTS from the disk
    29
    30				IFCPU(<KS,F3>),<EXTERN UPT.PN,EPT.PN	;Here from a 146 restart
    31				BOTLOD::SYSPIF			;Turn off PI system
    32					WRUBR	[LG.LAB+LG.LUB+0B8+0B11+400000+UPT.PN];Select AC block 0
    33					WREBR	EPT.PN		;Turn off paging (bit 22 is off)
    34					SETZM	BTSTR##		;Flag to not do /D
    35				IFCPU (F3),<TNCONO 0>		;Reset interface to node
    36				IFCPU (F3),<DATAO PI,[-1]>	;Turn on all the lights
    37				IFNCPU(KS),<WRADB [0]>		;Clear address break
    38					MOVE	P,.CPEPD##	;Reset stack
    39					PFALL	NEWMON
    40				> ;END IFCPU(<KS,F3>)
    41
    42			775000		BOOTS=:1000000-3000	;BOOTS resides in the top 3 pages of core
    43
    44	000020'	201200	775000	NEWMON::MOVEI	F,BOOTS		;Load BOOTS into pages 775,776,777
    45	000021'	542200	000050'		HRRM	F,BOOTCL	; ...
    46
    47				IFCPU(<KI,KL>),<;LOOK FOR BOOTS ON 3330 DRIVES.
    48	000022'	205100	777771		MOVSI	J,-7		;INIT CHANNEL COUNTER
    49	000023'	400500	000000	BPBR0:	SETZ	W,		;INITIAL DEVICE
    50	000024'	200140	000047'	BPBR2:	MOVE	PG,BTADR	;<# OF WORDS,,DISK PAGE ADDR> FOR BOOTS
    51	000025'	550200	000050'		HRRZ	F,BOOTCL	;BOOTS CORE ADDRESS (as set up by CRSDEV)
    52	000026'	260040	000126'		PUSHJ	P,SAXPRD	;PROCURE BOOTS
    53	000027'	254000	000031'		 JRST	BPBR		;COULD NOT GET IT
    54	000030'	265440	000036'		JSP	T4,ISBOOT	;HAS BOOTS BEEN LOADED?
    55	000031'	201513	000001	BPBR:	MOVEI	W,1(M)		;NO: INCREMENT DEVICE COUNTER
    56	000032'	307500	000077		CAIG	W,77		;HAS MAXIMUM BEEN REACHED?
    57	000033'	254000	000024'		 JRST	BPBR2		;NO: TRY NEXT UNIT
    58	000034'	253100	000023'		AOBJN	J,BPBR0		;CONTINUE IF MORE CHANNELS TO TRY
    59	000035'	254000	000000*		JRST	BOTLOD##	;Try the paper-tape/DECtape routine, BOTLOD.MAC
    60				> ;END IFCPU(<KI,KL>)
    61
    62				IFCPU (<KS,F3>),<;READ BOOTS FROM KS OR F3 UNITS
    63					MOVSI	W,-8		;INIT UNIT COUNTER
    64				RMXPBT:	MOVE	PG,BTADR	;<# OF WORDS,,DISK PAGE ADDR> FOR BOOTS
    65					HRRZ	F,BOOTCL	;BOOTS CORE ADDRESS (as set up by BTPREP)
    66				IFCPU(F3),<PUSHJ P,APXPRD>
    67				IFCPU(KS),<PUSHJ P,RMXPRD>
    68					  SKIPA			;FAILED
    69					JSP	T4,ISBOOT	;GOT SOMETHING, SEE IF BOOTS
    70					AOBJN	W,RMXPBT	;NOT BOOTS, TRY NEXT UNIT IF ONE
    71				IFCPU (KS),<
    72					MOVSI	W,-8		;Try alternate location
    73				RMXBT1:	MOVE	PG,[1600,,11]	;Location of KS boots prior to P034/P20
    74					HRRZ	F,BOOTCL	;Core address
    75					PUSHJ	P,RMXPRD
    76					  SKIPA			;Not there either
    77					JSP	T4,ISBOOT	;Double check
    78					AOBJN	W,RMXBT1
    79				> ;END IFCPU(KS)
    80				NOBOOT:	MOVEI	P1,[ASCIZ / ?Can't read BOOTS!! /]
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 2-2
MONBTS.MAC	20-SEP-87 13:43		Load BOOTS from the disk

    81					JSP	T1,CTYTYP##	;Type out message
    82					HALT	BOTLOD		;Can't find BOOTS anywhere
    83				> ;END IFCPU(<KS,F3>)
    84
    85	000036'	550340	000050'	ISBOOT:	HRRZ	T2,BOOTCL	;GET BOOTS STARTING ADDR
    86	000037'	200407	000000		MOVE	T3,(T2)		;GET FIRST WORD OF BOOTS
    87	000040'	312400	000052'		CAME	T3,BOOTFI	;IS IT CORRECT?
    88	000041'	254011	000000		 JRST	(T4)		;NO: RETURN
    89					MOVEI	P1,[ASCIZ /
    90				"BOOTS loaded"
    91	000042'	201600	000323'	  /]
    92	000043'	265300	000000*		JSP	T1,CTYTYP##	;TYPE OUT MESSAGE
    93	000044'	201040	000000*		MOVEI	1,BTSTR##	;GET ADDR OF BOOTS COMMAND STRING
    94	000045'	550100	000050'		HRRZ	2,BOOTCL	;GET BOOTS STARTING ADDR
    95	000046'	254002	000005		JRST	5(2)		;PASS CONTROL TO BOOTS
    96
    97			002600	BCDSZ==3000-200			;SIZE OF BOOTS CODE (was 7 blocks)
    98			003000	BCDSSZ==BCDSZ+200		;SIZE OF BOOTS + SAX SAVE AREA
    99	000047'	002600	000003	BTADR:	BCDSZ,,3		;SIZE OF BOOTS, DISK ADDR
   100	000050'	775200	775000	BOOTCL:	XWD -BCDSZ,BOOTS
   101	000051'	000000	000000		0
   102
   103	000052'	700200	200000	BOOTFI:	WRAPR	200000		;First word of BOOTS is CONO APR,200000
   104
   105
   106				;PRIMITIVE DISK READ SET UP AND DISPATCH
   107	000053'	260040	000061'	PMDRD::	PUSHJ	P,PMDSET	;SET UP TO READ
   108	000054'	550306	000110'		HRRZ	T1,PMDDSP(T1)	;GET READ ADDRESS
   109	000055'	324746	000000		PJRST	(T1)		;READ FROM SELECTED UNIT
   110
   111				;PRIMITIVE DISK WRITE SET UP AND DISPATCH
   112	000056'	260040	000061'	PMDWT::	PUSHJ	P,PMDSET	;SET UP TO WRITE
   113	000057'	554306	000110'		HLRZ	T1,PMDDSP(T1)	;GET WRITE ADDRESS
   114	000060'	324746	000000		PJRST	(T1)		;WRITE TO SELECTED UNIT
   115
   116				;SET UP FOR PRIMITIVE DISK ROUTINES
   117	000061'	135100	000000*	PMDSET:	LDB	J,UNYSCN##	;GET CHANNEL NUMBER
   118	000062'	135500	000000*		LDB	W,UNYPUN##	;GET UNIT NUMBER OFFSET
   119	000063'	135300	000000*		LDB	T1,UNYKTP##	;GET DEVICE TYPE
   120	000064'	607140	777777		TLNN	PG,-1		;IS # OF WORDS SPECIFIED?
   121	000065'	661140	001000		 TLO	PG,1000		;NO: DEFAULT TO ONE PAGE
   122				IFCPU(<KI,KL>),<
   123	000066'	135340	000000*		LDB	T2,UNYBPR##	;Get blocks per record
   124	000067'	302340	000004		CAIE	T2,4		;Record size set to 4 blocks to a page
   125	000070'	335005	000000*		SKIPGE	UNICHR##(U)	;Formatted in pages? (sign bit set)
   126	000071'	254000	000101'		 JRST	PMDST1		;Yes, formatted in pages
   127	000072'	201340	000200		MOVEI	T2,200		;Formatted in blocks if UNICHR is positive
   128	000073'	202340	000320'		MOVEM	T2,SAWPR	;Words per record
   129	000074'	135340	000000*		LDB	T2,UNYBPT##	;Blocks per track
   130	000075'	202340	000321'		MOVEM	T2,SARPT	;Records per track
   131	000076'	135340	000000*		LDB	T2,UNYBPY##	;Blocks per track
   132	000077'	202340	000322'		MOVEM	T2,SARPC	;Records per cylinder
   133	000100'	263040	000000		POPJ	P,
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 2-3
MONBTS.MAC	20-SEP-87 13:43		Load BOOTS from the disk

   134	000101'	201340	001000	PMDST1:	MOVEI	T2,1000		;Formatted in pages if UNICHR is negative
   135	000102'	202340	000320'		MOVEM	T2,SAWPR	;Words per record
   136	000103'	135340	000000*		LDB	T2,UNYPPT##	;Pages per track
   137	000104'	202340	000321'		MOVEM	T2,SARPT	;Records per track
   138	000105'	135340	000000*		LDB	T2,UNYPPY##	;Pages per cylinder
   139	000106'	202340	000322'		MOVEM	T2,SARPC	;Records per cylinder
   140				>  ;End IFCPU(KI,KL)
   141	000107'	263040	000000		POPJ	P,
   142
   143				;PRIMITIVE DRIVER DISPATCH TABLE
   144	000110'			PMDDSP:	;WRITER,,READER
   145	000110'	000117'	000117'		XWD BADPWT,BADPRD	;0  DR
   146	000111'	000117'	000117'		XWD BADPWT,BADPRD	;1  FH
   147	000112'	000117'	000117'		XWD BADPWT,BADPRD	;2  DP
   148	000113'	000117'	000117'		XWD BADPWT,BADPRD	;3  MD
   149	000114'	000124'	000126'		XWD SAXPWT,SAXPRD	;4  SAX
   150	000115'	000117'	000117'		XWD RMXPWT,RMXPRD	;5  RM/RP
   151	000116'	000117'	000117'		XWD APXPWT,APXPRD	;6  F3 CDC/AMPEX DRIVES
   152
   153	000117'			IFNCPU(KS),<RMXPWT: RMXPRD:>
   154	000117'			IFNCPU(F3),<APXPWT: APXPRD:>
   155				IFNCPU(<KI,KL>),<SAXPWT: SAXPRD:>
   156	000117'			BADPWT:
   157				BADPRD:	MOVEI	P1,[ASCIZ /?Unit data block messed up
   158	000117'	201600	000330'	/]
   159	000120'	265300	000043*		JSP	T1,CTYTYP##
   160	000121'	263040	000000		POPJ	P,
   161	000122'	350001	000000	CPOPJ1:	AOS	(P)		;SKIP RETURN
   162	000123'	263040	000000	CPOPJ:	POPJ	P,		;NO SKIP RETURN
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 3
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   163				IFCPU(<KI,KL>),<SUBTTL	Primitive READ/WRITE routines for SA-10
   164
   165				COMMENT !PRIMITIVE ROUTINES TO READ OR WRITE A SPECIFIED NUMBER OF
   166					 WORDS STARTING AT AN ARBITRARY DISK PAGE FROM/TO ANY 3330
   167					 TYPE DRIVE CONNECTED TO AN SA-10.
   168					 PARAMETERS:	PG/ # OF WORDS,,DISK PAGE
   169							F/ CORE ADDR (NOT NECESSARILY ON PG BOUNDARY)
   170							J/ 1B33  SA-10
   171							   3B35  SUB-CHANNEL
   172							W/ UNIT
   173					 CALL:	PUSHJ P,SAXPRD  TO READ
   174						PUSHJ P,SAXPWT  TO WRITE
   175					 RETURN:	SUCCESS: M=W, SKIP RETURN
   176							ERROR: NON-SKIP RETURN
   177							       M=W OR 77  IF CHANNEL NOT AVAILABLE
   178								=W OR 7  IF NO MORE UNITS ON THIS
   179									 KONTROLLER
   180								=W  IF UNIT NUMBER GOOD BUT OTHER ERROR
   181					 ACS ALTERED:	T1-T4,M,P1-P3
   182				!
   183
   184	000124'	201600	000005	SAXPWT:	MOVEI	P1,SAXWCD
   185	000125'	334000	000000		SKIPA
   186	000126'	201600	000006	SAXPRD:	MOVEI	P1,SAXRCD
   187	000127'	137600	000313'		DPB	P1,SAYBB	;STORE READ OR WRITE CODE
   188				    ;STORE DEVICE ADDRESS IN COMMANDS.
   189	000130'	201312	000300		MOVEI	T1,SAUN0(W)	;COMPUTE DEVICE ADDRESS
   190	000131'	200540	000336'		MOVE	M,[POINT 8,SACLST,23] ;B HOLDS PNTR.
   191	000132'	137300	000013		DPB	T1,M		;DEV ADDR TO SEEK
   192	000133'	541553	000002		HRRI	M,2(M)		;
   193	000134'	137300	000013		DPB	T1,M		;DEV ADDR TO SEARCH ID EQUAL.
   194	000135'	541553	000003		HRRI	M,3(M)		;
   195	000136'	137300	000013		DPB	T1,M		;DEV ADDR TO READ/WRITE CMD.
   196
   197	000137'	210300	000320'		MOVN	T1,SAWPR	;Negative of words per record
   198	000140'	242300	000030		LSH	T1,^D24		;Put in bits 0-11, zero bits 12-17
   199	000141'	540300	000004		HRR	T1,F		;Physical address (24 bits)
   200	000142'	202300	000307'		MOVEM	T1,SACADR	;SET INIT DESTINATION ADDR
   201
   202				;PG has # of words in LH, disk page address in RH
   203
   204	000143'	400700	000000		SETZ	P3,		;INIT RECORD INDEX
   205	000144'	550300	000003	NEXREC:	HRRZ	T1,PG		;COPY PAGE NUM
   206	000145'	242300	000011		LSH	T1,P2WLSH	;PAGES TO WORDS
   207	000146'	230300	000320'		IDIV	T1,SAWPR	;CONVERT TO RECORD NUM
   208	000147'	270300	000016		ADD	T1,P3		;COMPUTE CURRENT RECORD NUM
   209	000150'	230300	000322'		IDIV	T1,SARPC	;COMPUTE CYLINDER,
   210	000151'	230340	000321'		IDIV	T2,SARPT	; HEAD,
   211	000152'	271400	000001		ADDI	T3,1		; AND RECORD NUMBERS
   212	000153'	137300	000314'		DPB	T1,SAYCC	;STORE CYLINDER NUMBER
   213	000154'	137340	000315'		DPB	T2,SAYCC+1	;STORE HEAD NUMBER
   214	000155'	137400	000316'		DPB	T3,SAYCC+2	;STORE RECORD NUMBER
   215
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 3-2
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   216	000156'	201600	000057		MOVEI	P1,SAX1AD	;GET ADDR OF SA-10 1
   217	000157'	602100	000004		TRNE	J,4		;SKIP IF SELECTED SA-10
   218	000160'	201600	000100		 MOVEI	P1,SAX2AD	;GET ADDR OF SA-10 2
   219	000161'	550540	000002		HRRZ	M,J		;WHICH SA-10?
   220	000162'	242540	000002		LSH	M,2
   221	000163'	271540	000300		ADDI	M,SAXREG	;NOW HAVE BASE FOR THIS CHANNEL
   222	000164'	201300	000301'		MOVEI	T1,SACLST
   223	000165'	505300	200000		HRLI	T1,200000	;TIC COMMAND
   224	000166'	202313	000000		MOVEM	T1,(M)		;STORE IN BASE AREA
   225	000167'	201640	000001		MOVEI	P2,1		;SET A UNIQUE BIT IN P2 THAT CORR. TO
   226	000170'	242642	000000		LSH	P2,(J)		; THE SA-10, SUB-CHAN BEING REFERENCED
   227	000171'	612640	000317'		TDNE	P2,CHNFLG	;DO WE KNOW ITS NOT THERE
   228	000172'	254000	000243'		 JRST	STRT4A		;YES, GIVE UP ON IT
   229	000173'	201300	000021		MOVEI	T1,21
   230	000174'	461342	000000		SETCMI	T2,(J)
   231	000175'	435340	777774		ORI	T2,-4		;ZERO EXTRANEOUS BIT IF SET
   232	000176'	242307	000007		LSH	T1,7(T2)	;SET UP BIT FOR STAT FLAG FOR THIS CHAN
   233	000177'	450340	000000		SETCA	T2,		;RECOVER CHANNEL NUMBER
   234	000200'	242340	000003		LSH	T2,3		;CONVERT TO CORRECT POSITION FOR CONO
   235	000201'	504340	000006		HRL	T2,T1		;SAVE STATUS BIT IN LEFT HALF
   236	000202'	260040	000276'	RESTAR:	PUSHJ	P,IOCNI		;READ STATUS
   237	000203'	322440	000240'		JUMPE	T4,STRT4	;JUMP IF SA-10 IS MISSING
   238	000204'	201307	000640		MOVEI	T1,640(T2)
   239	000205'	260040	000277'		PUSHJ	P,IOCNO		;SET STATUS BIT
   240	000206'	201307	000440		MOVEI	T1,440(T2)
   241	000207'	260040	000277'		PUSHJ	P,IOCNO		;AND GO FLAG
   242	000210'	201307	000600		MOVEI	T1,600(T2)
   243	000211'	260040	000277'		PUSHJ	P,IOCNO		;AND THEN CLEAR STATUS
   244	000212'	201440	303240		MOVEI	T4,^D100000
   245	000213'	554300	000007		HLRZ	T1,T2		;GET STATUS BIT
   246	000214'	260040	000271'		PUSHJ	P,IOCNSO	;AND DO THE CONSO
   247	000215'	367440	000214'		 SOJG	T4,.-1
   248	000216'	322440	000240'		JUMPE	T4,STRT4	;JUMP ON TIMEOUT
   249	000217'	200453	000001		MOVE	T4,1(M)		;GET STATUS
   250	000220'	603440	100000		TLNE	T4,(1B2)
   251	000221'	254000	000243'		 JRST	STRT4A		;SELECT ERROR
   252	000222'	201300	400000		MOVEI	T1,400000	;IN CASE WE HAVE TO RESET
   253	000223'	607440	000100		TLNN	T4,BSY
   254	000224'	254000	000231'		 JRST	STRT3		;NOT BUSY
   255	000225'	603440	000400		TLNE	T4,SM		;BUSY+STATUS MODIFIER?
   256	000226'	254000	000247'		 JRST	STRT2		;YES
   257	000227'	603440	000200		TLNE	T4,CUE
   258	000230'	254000	000202'		 JRST	RESTAR		;JUMP ON BUSY+CU END
   259	000231'	607440	000060	STRT3:	TLNN	T4,CE+DE	;CHANNEL END AND DEVICE END?
   260	000232'	254000	000235'		 JRST	STRT5		;NO. ERROR
   261	000233'	607440	175114		TLNN	T4,175114	;OTHER ERRORS?
   262	000234'	254000	000260'		 JRST	NEXRC1		;THIS RECORD PROC. OK, CONTINUE
   263	000235'	260040	000277'	STRT5:	PUSHJ	P,IOCNO		;T1 IS LOADED WITH BIT 18
   264	000236'	550540	000012		HRRZ	M,W		;UNIT NUM SUPPLIED WAS GOOD
   265	000237'	263040	000000		POPJ	P,
   266
   267	000240'	436640	000317'	STRT4:	IORM	P2,CHNFLG	;MARK CHANNEL NOT THERE
   268	000241'	201300	000077		MOVEI	T1,77		;AND WORD FOR BAD CHANNEL
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 3-3
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   269	000242'	334000	000000		SKIPA
   270	000243'	201300	000007	STRT4A:	MOVEI	T1,7		;AND WORD FOR NO MORE DEV ON KONT
   271	000244'	200540	000012		MOVE	M,W		;COPY UNIT NUMBER
   272	000245'	670540	000006		TDO	M,T1		;SET TO TOP OF MULT OF 10
   273	000246'	263040	000000		POPJ	P,
   274
   275	000247'	201307	000600	STRT2:	MOVEI	T1,600(T2)
   276	000250'	260040	000277'		PUSHJ	P,IOCNO		;CLEAR STATUS
   277	000251'	544300	000007		HLR	T1,T2		;NO WAIT FOR STATUS BIT
   278	000252'	260040	000271'		PUSHJ	P,IOCNSO
   279	000253'	254000	000252'		 JRST	.-1
   280	000254'	200453	000001		MOVE	T4,1(M)
   281	000255'	603440	000200		TLNE	T4,CUE
   282	000256'	254000	000202'		 JRST	RESTAR
   283	000257'	254000	000247'		JRST	STRT2
   284
   285	000260'	200300	000320'	NEXRC1:	MOVE	T1,SAWPR	;LOAD RECORD SIZE
   286	000261'	272300	000307'		ADDM	T1,SACADR	;POINT TO NEXT RECORD LOCATION IN CORE
   287	000262'	271700	000001		ADDI	P3,1		;INCREMENT RECORD COUNTER
   288	000263'	554300	000003		HLRZ	T1,PG		;Get requested number of words
   289	000264'	230300	000320'		IDIV	T1,SAWPR	;Convert to number of records
   290	000265'	315700	000006		CAMGE	P3,T1		;Done all of them?
   291	000266'	254000	000144'		 JRST	NEXREC		;NO: DO NEXT RECORD
   292	000267'	200540	000012		MOVE	M,W		;UNIT NUM SUPPLIED WAS GOOD
   293	000270'	254000	000122'		JRST	CPOPJ1		;SUCCESS RETURN
   294
   295	000271'	205400	700346	IOCNSO:	MOVSI	T3,(CONSO (T1))	;SETUP IO INSTR.
   296	000272'	137600	000337'	IOXCT:	DPB	P1,[POINT 7,T3,9];PUT IN I/O DEVICE FIELD
   297	000273'	256000	000010		XCT	T3		;DO THE IO
   298	000274'	263040	000000		 POPJ	P,		;NO SKIP RETURN
   299	000275'	254000	000122'		JRST	CPOPJ1
   300
   301	000276'	334400	000340'	IOCNI:	SKIPA	T3,[CONI T4]	;FOR SA-10
   302	000277'	205400	700206	IOCNO:	MOVSI	T3,(CONO (T1))
   303	000300'	254000	000272'		JRST	IOXCT
   304
   305				; SA-10 COMMAND LIST AND DEFINITIONS
   306
   307	000301'			CMDLST:
   308	000301'	164034	000000	SACLST:	BYTE	(8)72,7		;SEEK
   309	000302'	000000	000000*		BYTE	(12)-6(24)SACARG
   310	000303'	166304	000000	SACIDE:	BYTE	(8)73,61	;SEARCH ID EQUAL
   311	000304'	000000	000000*		BYTE	(12)-5(24)SACARG
   312	000305'	200000	000303'	SACTIC:	XWD	200000,SACIDE	;TIC
   313	000306'	340000	000000	SACCMD:	BYTE	(8)160		;READ OR WRITE
   314	000307'	777700	000000	SACADR:	BYTE	(12)-1(24)0	;-WORD COUNT(SAWPR), START ADDRESS
   315	000310'	000000	000000		0			;Zero terminates command list
   316
   317	000311'			SACARG:	BLOCK	2		;SEEK/SEARCH BLOCK
   318
   319	000313'	241000	000306'	SAYBB:	POINT	8,SACCMD,15
   320	000314'	044000	000311'	SAYCC:	POINT	32,SACARG,31
   321	000315'	242000	000312'		POINT	16,SACARG+1,15
MONBTS - Monitor resident BOOTStrapO 12.5-46.0 14:25 13-JAN-88 PAGE 3-4
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   322	000316'	141000	000312'		POINT	8,SACARG+1,23
   323
   324	000317'	000000	000000	CHNFLG:	Z			;DEFECTIVE CHANNEL FLAG WORD
   325
   326				;These 3 locations will be updated by PMDSET to the correct values
   327				; The values here are defaults for loading BOOTS from 3330 formatted in blocks.
   328				; Note that if the disk does not match these values, control will eventually
   329				; go to BOTLOD, which is capable of reading all four formats.
   330	000320'	000000	000200	SAWPR:	DEC 128		;Words per record       ( 512, 512, 128)
   331	000321'	000000	000022	SARPT:	DEC  18		;Records per track      (   5,   7,  25)
   332	000322'	000000	000524	SARPC:	DEC 18*19-2	;Records per cylinder   (5*19,7*30,25*30-2)
   333
   334			000005	SAXWCD==5	;Disk write code
   335			000006	SAXRCD==6	;Disk read code
   336			000300	SAUN0==300	;Unit 0 at X'C0'
   337			000300	SAXREG==300
   338			000057	SAX1AD==274_-2		;SA-10 1
   339			000100	SAX2AD==400_-2		;SA-10 2
   340			000100	BSY==(BYTE (8)0,20)
   341			000200	CUE==(BYTE (8)0,40)
   342			000400	SM==(BYTE (8)0,100)
   343			000040	CE==(BYTE (8)0,10)
   344			000020	DE==(BYTE (8)0,4)
   345				> ;END IFCPU(<KI,KL>)
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 4
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   346				IFCPU (KS),<SUBTTL	Primitive READ/WRITE routines for RM03/RP06
   347				
   348				COMMENT	!PRIMITIVE ROUTINES TO READ OR WRITE A SPECIFIED NUMBER OF
   349					 WORDS STARTING AT AN ARBITRARY DISK PAGE FROM/TO AN
   350					 RM03/RP06 DISK DRIVE INTERFACED TO A KS THRU A UBA.
   351					 PARAMETERS:	PG/ # OF WORDS,,DISK PAGE
   352							F/ CORE ADDR (NOT NECESSARILY ON PAGE BOUNDARY)
   353							W/ UNIT
   354					 CALL:	PUSHJ P,RMXPRD	TO READ
   355						PUSHJ P,RMXPWT	TO WRITE
   356					 RETURN:	SUCCESS: SKIP
   357							FAILURE: NON-SKIP
   358					 ACS ALTERED:	T1-T4,P1-P2
   359				!
   360				
   361				DEFINE	RDREG(DEST,REG)	;EXPECTS THE UBA NUMBER IN T2
   362				<	RDIO	DEST,REG'ADR(T2)>
   363				
   364				DEFINE	WRREG(SRC,REG)	;EXPECTS THE UBA NUMBER IN T2
   365				<	WRIO	SRC,REG'ADR(T2)>
   366				
   367				
   368				RMXPRD:	SKIPA	P1,[F.RD]	;DO DISK READ
   369				RMXPWT:	MOVEI	P1,F.WD		;DO DISK WRITE
   370					HRLZI	T2,UA1	;SET THE ADDRESS TO UBA1
   371					MOVEI T3,CS2CLR
   372					WRREG T3,CS2;			CLEAR RH11
   373					WRREG W,CS2;			SELECT UNIT
   374					RDREG T4,DS;			DRIVE EXISTS?
   375					RDREG T3,CS2
   376					TRNN T3,CS2NED
   377					  TRNN T4,DSMOL
   378					   POPJ	P,
   379					MOVEI T4,F.RIP			;READ IN PRESET
   380					WRREG T4,CS1
   381					MOVEI T4,^D100000
   382					MOVEI T3,DSDRY		;WAIT UNTIL INITIALIZATION DONE
   383					TION  T3,DSADR(T2)
   384					  SOJG T4,.-1
   385					JUMPLE	T4,RMPOPJ
   386					RDREG T4,DS
   387					TRNE T4,DSERR
   388					  POPJ	P,
   389					MOVEI T4,F.RECA
   390					WRREG T4,CS1;			ISSUE RECALIBRATE
   391					MOVEI T3,^D100000
   392					RDREG T4,DS
   393					TRNN T4,DSDRY
   394					 SOJG T3,.-2
   395					JUMPLE T3,RMPOPJ
   396					TRNE T4,DSERR
   397					 POPJ	P,
   398				;TRY UNIT
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 4-2
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   399					RDREG	P2,DT
   400					ANDI	P2,2		;Adr is function of unit type.
   401					LSH	P2,-1		;0:RM03, 1:RP06
   402					MOVEI	T1,^D148	;CALCULATE
   403					CAIE	P2,0		; ABSOLUTE
   404					 MOVEI	T1,^D380	; DISK
   405					HRRZ	T3,PG		; SECTOR
   406					LSH	T3,2		; ADDR
   407					IDIV	T3,T1		; FROM
   408					WRREG	(T3,DC)		; UNIT
   409					MOVE	T3,T4		; RELATIVE
   410					MOVEI	T1,^D30		; PAGE
   411					CAIE	P2,0		; NUMBER
   412					MOVEI	T1,^D20		; AND
   413					IDIV	T3,T1		; PASS
   414					DPB	T3,[POINT 5,T4,27]	; TO
   415					WRREG	(T4,DA)		; DRIVE
   416					HLRZ	T3,PG		;SET WORD COUNT
   417					LSH	T3,1		;(2 UNIBUS words per KS10 word)
   418					MOVNS	T3
   419					WRREG T3,WC
   420					MOVE T4,F		;SET VIRTUAL CORE ADDRESS
   421					SETZ T3,		;SET VIRTUAL CORE ADR
   422					ROTC T3,-9
   423					ROT T3,13
   424					WRREG T3,BA
   425					MOVE T3,[UA1,,PGRADR]
   426					TRO T4,PGRFST+PGRVAL		;SET PHYSICAL CORE ADR
   427					WRIO T4,@T3
   428					AOJ T4,
   429					AOJ T3,
   430					WRIO T4,@T3
   431					WRREG P1,CS1
   432					movei	t3,^D100	;busy wait loop index
   433				rmp1:	movei	t4,^D2000	;bus saturation avoidance loop index
   434					sojg	t4,.		;only do read every few ms to avoid
   435								; saturating the bus
   436					RDREG T4,CS1
   437					TRNN T4,CS1RDY		;done?
   438					 sojg	t3,rmp1		;no, try again if haven't timed out
   439					JUMPLE	T3,RMPOPJ
   440					TRNN	T4,CS1TRE	;ANY ERRORS?
   441					AOS	(P)		;NO: READ/WRITE SUCCEEDED
   442				RMPOPJ:	POPJ	P,
   443				>;END IFCPU KS
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 5
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   444				IFCPU(F3),<	SUBTTL	Primitive READ/WRITE routines for FOONLY
   445				
   446				RTYCNT==20000
   447				
   448				DRVTYP==CDC
   449				CDC==1
   450				AMPEX==0
   451				
   452				IFE DRVTYP-CDC,<
   453				SPT==^D8		;SECTORS PER TRACK (DEPENDS ON HOW FORMATTED)
   454				TPC==^D10		;TRACKS PER CYLINDER (NUMBER OF HEADS)
   455				CPU==^D823-^D10		;CYLINDERS PER UNIT (TAKE AWAY SOME FOR MAINTAINENCE)
   456				>
   457				IFE DRVTYP-AMPEX,<
   458				SPT==^D8		;SECTORS PER TRACK
   459				TPC==^D5		;TRACKS PER CYL (NUMBER OF HEADS)
   460				CPU==^D815-^D5		;CYLINDERS PER UNIT (TAKE AWAY SOME FOR MAINTAINENCE)
   461				>;END IFN AMPEX
   462				PPC==SPT*TPC		;PAGES PER CYLINDER
   463				BPC==PPC*4		;BLOCKS PER CYLINDER
   464				PPU==PPC*CPU		;PAGES PER UNIT
   465				SPT==^D8		;SECTORS PER TRACK
   466				BPT==SPT*^D4		;BLOCKS PER TRACK
   467				USPR==^D17300		;MICROSECONDS PER REVOLUTION.
   468				
   469				;DISK IOTS AND REGISTER BIT NAMES.
   470				PRINTF(<[F3 disk definitions are duplicated in MONBTS and APXKON]>)
   471				
   472				OPDEF RCMD	[715000000000]	;READ COMMAND REGISTER
   473					SUNT==1B0		;SELECTED UNIT NOT THERE (SELECT ERROR)
   474					SUWP==1B1		;SELECTED UNIT WRITE PROTECT
   475					SUNR==1B2		;SELECTED UNIT NOT READY
   476				;---
   477					SUOC==1B3		;SELECTED UNIT ON CYLINDER
   478								; SHOULD ALWAYS BE SET EXCEPT AFTER RECAL UNTIL HEADS ALIGN
   479					SUSE==1B4		;SELECTED UNIT SEEK ERROR (DETECTED BY DRIVE)
   480								; RECAL MANDATORY AFTER THIS ERROR, FAULT CLEAR WILL NOT TURN T
   481				HIS OFF.
   482					SUF==1B5		;SELECTED UNIT FAULT (DETECTED BY DRIVE)
   483				;---
   484					SUA==1B6		;SELECTED UNIT ATTENTION
   485								; SET BY LEADING EDGE OF ON CYLINDER (BIT 3)
   486					HDECC==1B7		;ECC ERROR ON HEADER
   487					CI==1B8			;CONTROL IDLE (ONLY IF NO DATA XFER AND NO SEEKS OR RECALS GOIN
   488				G)
   489				;---
   490					SECC==1B9		;SOFT ECC ERROR (NOT YET IMPLEMENTED IN F3 MICROCODE)
   491					HECC==1B10		;ECC UNRECOVERABLE ERROR
   492				
   493				;FOLLOWING BITS ARE DETECTED BY CONTROLLER:
   494					ROE==1B11		;READ OVERRUN ERROR
   495				;---
   496					WOE==1B12		;WRITE OVERRUN ERROR
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 5-2
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   497					SOE==1B13		;SECTOR OVERRUN ERROR
   498					IPE==1B14		;INTERNAL PARITY ERROR (ONLY VALID IF AE, BIT 28, IS ZERO)
   499				;---
   500				
   501				;FOLLOWING ARE FROM LAST LCMD
   502				
   503					USC==1B15		;USE SECTOR COUNTER (FOR RPS, TELLS
   504								; CONTROLLER TO LISTEN TO DRIVE POSITION)
   505					REL==1B16		;RELEASE (FOR MULTI-PROCESSOR INTERLOCKING)
   506					RECAL==1B17		;RECALIBRATE (RESETS SEEK ERROR) (USE WITH COMMAND 4)
   507				;---
   508					FC==1B18		;FAULT CLEAR (RESETS SEL UNIT FAULT - USE COMMAND 4)
   509				;	19 UNUSED
   510				;	20 UNUSED
   511				;---
   512					SOM==1B21		;SERVO OFFSET MINUS
   513					SOP==1B22		;SERVO OFFSET PLUS (OFFSET ONLY ON AMPEX DRIVES, NOT CDC)
   514					CFM==1B23		;COMMAND FROM MEMORY
   515								; SENDS DATA FROM MEMORY TO DISK (USE WITH WRITE COMMANDS)
   516				;---
   517					CMD0==1B24		;COMMAND BITS
   518					CMD1==1B25
   519					CMD2==1B26
   520				;---
   521					CMD32==1B27		;32 BIT MODE PACKING
   522						READ==0B26		;READ PAGE
   523						WRITE==CFM+1B26	;WRITE PAGE (WITH CFM FOR CONVENIENCE)
   524						WRITEA==3B26	;WRITE ALL (SECTOR AND FORMAT DATA)
   525						CF==4B26		;CONTROL FUNCTION
   526				;		SEEK==5B26		;SEEK. (NOT IMPLEMENTED YET . . .)
   527				
   528				;END OF FROM RCMD BITS
   529					AE==1B28		;ANY  ERROR (EXCEPT IPE, BIT 14)
   530					AA==1B29		;ANY UNIT ATTENTION
   531				;---
   532				
   533				;FROM LCMD
   534					AAIE==1B30		;ANY ATTENTION INTERRUPT ENABLE
   535				
   536					NA==1B31		;NOT ACTIVE
   537					DIE==1B32		;DONE INTERRUPT ENABLE (SET BY DCONO WITH NOZERO PI ASSIGNMENT)
   538				
   539				;---
   540				;BITS 33, 34 NOT IMPLEMENTED.
   541				
   542					MPE==1B35		;MEMORY PARITY ERROR
   543				;---
   544				OPDEF RMA	[716000000000]	;READ MEMORY ADDRESS
   545				OPDEF RDA	[717000000000]	;READ DISK ADDRESS (IN PAGES)
   546					AMSUNI==^D3		;SIZE OF UNIT BYTE
   547					AMPUNI==^D6		;RIGHTMOST BIT
   548					ROTUNI==-<AMPUNI+1>	;NUMBER OF PLACES TO ROTATE TO GET UNIT FIELD IN
   549					AMSCYL==^D12
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 5-3
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   550					AMPCYL==^D19
   551					AMSTRK==^D8
   552					AMPTRK==^D27
   553					AMSSEC==^D8
   554					AMPSEC==^D35
   555					LDAMSK==034000,,177400	;MASK FOR $0% AND $0O IN DDT
   556				OPDEF RECC	[720000000000]	;READ CONTROL REGISTER
   557				OPDEF LCMD	[721000000000]	;LOAD COMMAND REGISTER
   558					USC==1B15		;USE SECTOR COUNTER (FOR RPS, TELLS
   559								; CONTROLLER TO LISTEN TO DRIVE POSITION)
   560					REL==1B16		;RELEASE (FOR MULTI-PROCESSOR INTERLOCKING)
   561					RECAL==1B17		;RECALIBRATE (RESETS SEEK ERROR) (USE WITH COMMAND 4)
   562					FC==1B18		;FAULT CLEAR (RESETS SEL UNIT FAULT - USE COMMAND 4)
   563					SOM==1B21		;SERVO OFFSET MINUS
   564					SOP==1B22		;SERVO OFFSET PLUS (OFFSET ONLY ON AMPEX DRIVES, NOT CDC)
   565					CFM==1B23		;COMMAND FROM MEMORY
   566								; SENDS DATA FROM MEMORY TO DISK (USE WITH WRITE COMMANDS)
   567					CMD0==1B24		;COMMAND BITS
   568					CMD1==1B25
   569					CMD2==1B26
   570					CMD32==1B27		;32 BIT MODE PACKING
   571						READ==0B26		;READ PAGE
   572						WRITE==CFM+1B26	;WRITE PAGE (WITH CFM FOR CONVENIENCE)
   573						WRITEA==3B26	;WRITE ALL (SECTOR AND FORMAT DATA)
   574						CF==4B26		;CONTROL FUNCTION
   575				;		SEEK==5B26		;SEEK. (NOT IMPLEMENTED YET . . .)
   576					AAIE==1B30		;ANY ATTENTION INTERRUPT ENABLE
   577					DIE==1B32		;DONE INTERRUPT ENABLE (SET BY DCONO WITH NOZERO PI ASSIGNMENT)
   578				
   579				OPDEF LMA	[722000000000]	;LOAD MEMORY ADDRESS
   580				OPDEF LDA	[723000000000]	;LOAD DISK ADDRESS
   581					SU==1B7			;SELECT UNIT
   582								;MUST BE CLEARED AND SET TO SELECT A UNIT.
   583				OPDEF LECC	[724000000000]	;CLEARS ECC LOGIC, STARTS AND INITS CONTROL.
   584					SC==1			;START CONTROL
   585					IC==2			;INIT CONTROL (SEND BEFORE STARTING CMD)
   586				OPDEF DCONO	[740000000000]	;CONO TO DISK CONTROL TO SET PI ASSIGNMENT
   587				OPDEF DCONI	[741000000000]	;CONI FROM DISK CONTROL OPCODE
   588					DIDLE==10		;SET IF CONTROL IS IDLE
   589					DPIA==7B35		;PI ASSIGNMENT.
   590								;NOTE THAT NONZERO PI ASSIGNMENT SETS DIE (SEE LCMD)
   591				OPDEF DCONSO	[742000000000]
   592				OPDEF DCONSZ	[743000000000]
   593				
   594				;ROUTINE TO START A FUNCTION UP ON CONTROL
   595				
   596				DOKON:	LECC	[IC]		;INIT CONTROL
   597					LCMD	T1		;DO THE COMMAND
   598					LECC	[SC]		;START CONTROLLER
   599					POPJ	P,		;AND RETURN.
   600				
   601				CLRKON:	MOVE	T1,[CF+FC]	;COMMAND FUNCTION FAULT CLEAR
   602				DOWKON:	PUSHJ	P,DOKON		;DO THE COMMAND AND THEN
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 5-4
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   603				WATKON:	MOVEI	T2,RTYCNT	;NUMBER OF TIMES TO WAIT
   604					RCMD	T1
   605					TLNN	T1,(CI)		;CONTLOL IDLE YET?
   606					SOJG	T2,.-2		;NO
   607					JUMPG	T2,CPOPJ1	;JUMP IF IT WENT IDLE
   608					POPJ	P,		;DIDN'T.
   609				
   610				APINI:	HRRZ	T1,W	;GET UNIT SELECTED
   611					ROT	T1,ROTUNI
   612					LDA	T1
   613					TLO	T1,(<SU>)
   614					LDA	T1
   615					PUSHJ	P,CLRKON	;CLEAR CONTROL
   616					  JFCL			;IGNORE ERRORS FOR NOW
   617					RCMD	T1		;GET STATUS
   618					TLNE	T1,(<SUNT!SUNR>) ;NON-SKIP IF NOT THERE OR NOT READY
   619					POPJ	P,
   620					PUSHJ	P,CLRKON	;CLEAR OUT CONTROL AGAIN
   621					  POPJ	P,		;TIMEOUT
   622					MOVE	T1,[CF+FC+RECAL]
   623					PUSHJ	P,DOWKON	;DO A RECAL IN CASE IT HAD SEEK ERROR
   624					  POPJ	P,		;NO GOOD.
   625					MOVSI	T1,^D10		;WAIT A LONG TIME
   626					RCMD	T2
   627					TRNN	T2,NA		;SKIP IF NOT ACTIVE ANYMORE.
   628					SOJG	T1,.-2
   629					JUMPE	T1,CPOPJ	;GO IF TIMED OUT
   630					RCMD	T1		;GET STATUS BITS AGAIN
   631					TRNN	T1,AE		;ERROR RETURN IF ANY ERRORS
   632					AOS	(P)		;NO ERRORS
   633					POPJ	P,
   634				
   635				COMMENT ! PRIMITIVE ROUTINES TO READ OR WRITE A SPECIFIED NUMBER OF
   636					 WORDS STARTING AT AN ARBITRARY DISK PAGE FROM/TO AN
   637					 AMPEX OR CDC DISK DRIVE ON A FOONLY-F3.
   638					 PARAMETERS:	PG/ # OF WORDS,,DISK PAGE
   639							F/ CORE ADDR (NOT NECESSARILY ON PAGE BOUNDARY)
   640							W/ UNIT
   641					 CALL:	PUSHJ P,APXPRD	TO READ
   642						PUSHJ P,APXPWT	TO WRITE
   643					 RETURN:	SUCCESS: SKIP
   644							FAILURE: NON-SKIP
   645					 ACS ALTERED:	T1-T4,P1-P2
   646				!
   647				
   648				APXPRD:	SKIPA	P2,[APREAD]
   649				APXPWT:	MOVEI	P2,APWRIT	;APPROPRIATE ROUTINE TO CALL.
   650					PUSHJ	P,APINI		;INIT THE UNIT
   651					  POPJ	P,		;COULDN'T INIT THE DRIVE.
   652					PUSH	P,PG		;NEED TO SAVE THIS
   653					PUSH	P,F		;SO CAN DO MORE THAN ONE REC AND PRESERVE ARGS.
   654					HLRZ	T1,PG		;GET COUNT OF WORDS WANTED.
   655					TRZE	T1,777		;If not a multiple of 1000
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 5-5
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   656					 ADDI	T1,1000		; round up
   657					LSH	T1,-9		;TURN INTO PAGES.
   658					MOVNS	T1		;- COUNT
   659					HRL	PG,T1		;MAKE INTO AN AOBJN POINTER
   660				APXPX1:	PUSHJ	P,(P2)		;CALL THE ROUTINE TO DO ONE PAGE
   661					  JRST	APXPER		;NO GOOD.
   662					ADDI	F,1000		;ADVANCE MEMORY ADDRESS
   663					AOBJN	PG,APXPX1
   664					AOS	-2(P)		;OK, GIVE SUCCESS RETURN.
   665				
   666				APXPER:	POP	P,F
   667					POP	P,PG
   668					POPJ	P,
   669				
   670				;HERE TO READ OR WRITE ONE PAGE WITH RH(PG) CONTAINING THE BLOCK NUMBER
   671				; W CONTAINING THE UNIT NUMBER AND F CONTANING THE MEMORY ADDRESS.
   672				
   673				APWRIT:	SKIPA	P1,[WRITE]
   674				APREAD:	 MOVEI	P1,READ
   675					HRRZ	T1,PG		;GET PAGE NUMBER
   676					IDIVI	T1,PPC		;GET T1/CYL, T2/PAGES INTO CYL
   677					IDIVI	T2,SPT		;GET T2/TRACK, T3/SECTOR IN TRACK
   678					DPB	T2,[POINT AMSTRK,T3,AMPTRK]
   679					DPB	T1,[POINT AMSCYL,T3,AMPCYL]
   680					HRRZ	T1,W
   681					ROT	T1,ROTUNI	;GET UNIT NUMBER INTO POSITION
   682					TDO	T3,T1
   683					LDA	T3
   684					TLO	T3,(<SU>)
   685					LDA	T3
   686					PUSHJ	P,CLRKON	;CLEAR OUT CONTROL
   687					  JFCL			;IGNORE, WILL CATCH LATER.
   688					LMA	F		;LOAD MEMORY ADDRESS
   689								;NUMBER OF WORDS IS ALWAYS 1000
   690					MOVE	T1,P1		;GET COMMAND INTO T1 FOR DOKON
   691					PUSHJ	P,DOKON	;START THE TRANSFER
   692					MOVSI	T1,^D10		;TIMEOUT IS ABOUT 10 SECONDS.
   693					RCMD	T2
   694					TRNN	T2,NA
   695					 SOJG	T1,.-2
   696					JUMPE	T1,CPOPJ	;TIMED OUT, ERROR
   697					RCMD	T1		;OK, GET COMMAND
   698					TRNE	T1,AE		;MAKE SURE NO ERROR BITS ON
   699					 POPJ	P,		;SORRY.
   700					TLNE	T1,(<IPE>)	;THIS IS ONLY VALID IF AE OFF
   701					POPJ	P,		;NO GOOD.
   702					RMA	T1
   703					TLZ	T1,777774	;CLEAR UNUSED BITS
   704					SUB	T1,F		;GET NUMBER OF WORDS XFERRED
   705					CAIE	T1,1000
   706					 POPJ	P,		;WRONG COUNT
   707					JRST	CPOPJ1		;OK, SUCCESSFUL XFER.
   708				>;END IFCPU (F3)
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 5-6
MONBTS.MAC	20-SEP-87 13:43		Primitive READ/WRITE routines for SA-10

   709
   710	000323'	064244	241236		$END	(BTS)

   711	000324'	476512	320330

   712	000325'	677034	462710

   713	000326'	210321	220100

   714	000327'	000000	000000

   715	000330'	376535	664750

   716	000331'	203114	172302

   717	000332'	203055	467706

   718	000333'	655015	562746

   719	000334'	717134	420352

   720	000335'	700321	200000

   721	000336'	141000	000301'

   722	000337'	320700	000010

   723	000340'	700240	000011

   724						;End of MONBTS (BTSLIT: BTSEND:)
   725
NO ERRORS DETECTED
PROGRAM BREAK IS 000341
6K CORE USED
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88 PAGE 6
MONBTS.MAC	20-SEP-87 13:43		SYMBOL TABLE

APXPRD		000117'		PG		000003	INT	UNYPPY		000105'	EXT	
APXPWT		000117'		PJRST	324740	000000		UNYPUN		000062'	EXT	
BADPRD		000117'		PMDDSP		000110'		UNYSCN		000061'	EXT	
BADPWT		000117'		PMDRD		000053'	INT	W		000012	INT	
BCDSSZ		003000	SPD	PMDSET		000061'		WRAPR	700200	000000		
BCDSZ		002600	SPD	PMDST1		000101'		
BOOTCL		000050'		PMDWT		000056'	INT	
BOOTFI		000052'		REBOOT		000016'		
BOOTS		775000	INT	RESTAR		000202'		
BOTLOD		000035'	EXT	RMXPRD		000117'		
BPBR		000031'		RMXPWT		000117'		
BPBR0		000023'		S$ENTR	777777	777775	SIN	
BPBR2		000024'		S$HALT	777777	777777	SIN	
BSY		000100	SPD	S$NAME		000000'	SPD	
BTADR		000047'		S$NONA		000000	SIN	
BTSEND		000340'	INT	S$TEMP	777775	000000	SPD	
BTSLIT		000323'	INT	S$XCT	777777	777776	SIN	
BTSTR		000044'	EXT	SACADR		000307'		
BUGDMP		000003'	INT	SACARG		000311'		
CE		000040	SPD	SACCMD		000306'		
CHNFLG		000317'		SACIDE		000303'		
CMDLST		000301'		SACLST		000301'		
CPOPJ		000123'		SACTIC		000305'		
CPOPJ1		000122'		SARPC		000322'		
CPUF3		000004	SPD	SARPT		000321'		
CPUKI		000001	SPD	SAUN0		000300	SPD	
CPUKL		000002	SPD	SAWPR		000320'		
CPUKS		000003	SPD	SAX1AD		000057	SPD	
CPUTYP		000002	SPD	SAX2AD		000100	SPD	
CPZZ		000000	SPD	SAXPRD		000126'		
CTYTYP		000120'	EXT	SAXPWT		000124'		
CUE		000200	SPD	SAXRCD		000006	SPD	
DE		000020	SPD	SAXREG		000300	SPD	
DIE		000000'	EXT	SAXWCD		000005	SPD	
F		000004	INT	SAYBB		000313'		
INLMES		000003'	EXT	SAYCC		000314'		
IOCNI		000276'		SM		000400	SPD	
IOCNO		000277'		STRT2		000247'		
IOCNSO		000271'		STRT3		000231'		
IOXCT		000272'		STRT4		000240'		
ISBOOT		000036'		STRT4A		000243'		
J		000002	INT	STRT5		000235'		
M		000013	INT	T1		000006	INT	
MONBTS		000000'	ENT	T2		000007	INT	
NEWMON		000020'	INT	T3		000010	INT	
NEXRC1		000260'		T4		000011	INT	
NEXREC		000144'		U		000005	INT	
NODIE		000000	EXT	UNICHR		000070'	EXT	
P		000001	INT	UNYBPR		000066'	EXT	
P1		000014	INT	UNYBPT		000074'	EXT	
P2		000015	INT	UNYBPY		000076'	EXT	
P2WLSH		000011	SPD	UNYKTP		000063'	EXT	
P3		000016	INT	UNYPPT		000103'	EXT	

MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88
MONBTS.MAC	20-SEP-87 13:43		Symbol cross reference

APXPRD	   151	   154#
APXPWT	   151	   154#
BADPRD	   145	   146	   147	   148	   157#
BADPWT	   145	   146	   147	   148	   156#
BCDSSZ	    98#
BCDSZ	    97#	    98	    99	   100
BOOTCL	    45	    51	    85	    94	   100#
BOOTFI	    87	   103#
BOOTS	    42#	    44	   100
BOTLOD	    59%	    59
BPBR	    53	    55#
BPBR0	    49#	    58
BPBR2	    50#	    57
BSY	   253	   340#
BTADR	    50	    99#
BTSEND	   724#
BTSLIT	   710#
BTSTR	    93%	    93
BUGDMP	    20#	    26
CE	   259	   343#
CHNFLG	   227	   267	   324#
CMDLST	   307#
CPOPJ	   162#
CPOPJ1	   161#	   293	   299
CPUF3	    30	    62	   154	   444
CPUKI	    47	   122	   155	   163
CPUKL	    47	   122	   155	   163
CPUKS	    30	    62	   153	   346
CPUTYP	    30	    47	    62	   122	   153	   154	   155	   163	   346	   444
CPZZ	    30#	    30	    47#	    47	    62#	    62	   122#	   122	   153#	   153	   154#	   154	   155#	   155
	   163#	   163	   346#	   346	   444#	   444
CTYTYP	    92%	    92	   159%	   159
CUE	   257	   281	   341#
DE	   259	   344#
DIE	    11	    11%	    12
F	    44	    45	    51	   199
INLMES	    20%	    20
IOCNI	   236	   301#
IOCNO	   239	   241	   243	   263	   276	   302#
IOCNSO	   246	   278	   295#
IOXCT	   296#	   303
ISBOOT	    54	    85#
J	    48	    58	   117	   217	   219	   226	   230
LISTSN	     3	     6
M	    55	   190	   191	   192	   193	   194	   195	   219	   220	   221	   224	   249	   264	   271
	   272	   280	   292
MONBTS	    11	    12#	    15
NEWMON	    27	    44#
NEXRC1	   262	   285#
NEXREC	   205#	   291
NODIE	    11%
P	    12	    20	    24	    26	    52	   107	   112	   133	   141	   160	   161	   162	   236	   239
	   241	   243	   246	   263	   265	   273	   276	   278	   298
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88
MONBTS.MAC	20-SEP-87 13:43		Symbol cross reference

P1	    89	   157	   184	   186	   187	   216	   218	   296
P2	   225	   226	   227	   267
P2WLSH	   206
P3	   204	   208	   287	   290
PG	    50	   120	   121	   205	   288
PMDDSP	   108	   113	   144#
PMDRD	   107#
PMDSET	   107	   112	   117#
PMDST1	   126	   134#
PMDWT	   112#
REBOOT	    26#
RESTAR	   236#	   258	   282
RMXPRD	   150	   153#
RMXPWT	   150	   153#
S$ENTR	    11	    17
S$HALT	    11
S$NAME	    15#
S$NONA	    14	    17
S$TEMP	    11#	    11
S$XCT	    17
SACADR	   200	   286	   314#
SACARG	   309	   311	   317#	   320	   321	   322
SACCMD	   313#	   319
SACIDE	   310#	   312
SACLST	   190	   222	   308#
SACTIC	   312#
SARPC	   132	   139	   209	   332#
SARPT	   130	   137	   210	   331#
SAUN0	   189	   336#
SAWPR	   128	   135	   197	   207	   285	   289	   330#
SAX1AD	   216	   338#
SAX2AD	   218	   339#
SAXPRD	    52	   149	   186#
SAXPWT	   149	   184#
SAXRCD	   186	   335#
SAXREG	   221	   337#
SAXWCD	   184	   334#
SAYBB	   187	   319#
SAYCC	   212	   213	   214	   320#
SM	   255	   342#
STRT2	   256	   275#	   283
STRT3	   254	   259#
STRT4	   237	   248	   267#
STRT4A	   228	   251	   270#
STRT5	   260	   263#
T1	    92	   108	   109	   113	   114	   119	   159	   189	   191	   193	   195	   197	   198	   199
	   200	   205	   206	   207	   208	   209	   212	   222	   223	   224	   229	   232	   235	   238
	   240	   242	   245	   252	   268	   270	   272	   275	   277	   285	   286	   288	   289	   290
	   295	   302
T2	    85	    86	   123	   124	   127	   128	   129	   130	   131	   132	   134	   135	   136	   137
	   138	   139	   210	   213	   230	   231	   232	   233	   234	   235	   238	   240	   242	   245
	   275	   277
T3	    86	    87	   211	   214	   295	   296	   297	   301	   302
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88
MONBTS.MAC	20-SEP-87 13:43		Symbol cross reference

T4	    54	    88	   237	   244	   247	   248	   249	   250	   253	   255	   257	   259	   261	   280
	   281	   301
U	   125
UNICHR	   125%	   125
UNYBPR	   123%	   123
UNYBPT	   129%	   129
UNYBPY	   131%	   131
UNYKTP	   119%	   119
UNYPPT	   136%	   136
UNYPPY	   138%	   138
UNYPUN	   118%	   118
UNYSCN	   117%	   117
W	    49	    55	    56	   118	   189	   264	   271	   292
MONBTS - Monitor resident BOOTStrap	MACRO 12.5-46.0 14:25 13-JAN-88
MONBTS.MAC	20-SEP-87 13:43		Macro/Opdef cross reference

IFCPU	    30	    47	    62	   122	   163	   346	   444
IFNCPU	   153	   154	   155
PJRST	   109	   114
PRINTF	    19
STOPCD	    10
WRAPR	   103
$END	   710  SWZs