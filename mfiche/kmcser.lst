KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 1
S.MAC	13-JAN-88 11:55		S.MAC - with system parameter file for P035/D, January 1988

     1				SUBTTL	S.MAC - with system parameter file for P035/D, January 1988
     2
     3				IF2,<IFNDEF LISTSN,<TAPE>>	;Skip to PASS2 in all but COMMON.LST
     4				;THIS MODULE ASSEMBLED WITH KS-10 PARAMETER FILE - KSSYM.MAC
     5
     6					IF2,<IFNDEF LISTSN,<		;LIST KSSYM.MAC IN COMMON ONLY
     7					.CREF
     8									TAPE>>
     9				; This file is PRINTF.MAC
    10				DEFINE PRINTF(A,B,C,D),<IF2,<;;Output message on MONKS build only
    11				PRINTX A B C D>>
    12
    13				SUBTTL KS-10 PARAMETER DEFINTIONS FOR PDP-10 MONITOR
    14				.XCREF
    15
    16				;THIS MODULE ASSEMBLED WITH KS-10 PARAMETER FILE - KSIORG.MAC
    17
    18					IF2,<IFNDEF LISTSN,<		;LIST KSIORG.MAC IN COMMON ONLY
    19					.CREF
    20									TAPE>>
    21				TITLE KMCSER - module to support the KMC communication interface
    22
    23					STOPCD(,ENTRY,KMCSER)^
    24					ENTRY	KMCSER		;For library searches
    25	000000'	260040	000000*	KMCSER::PUSHJ	P,DIE		;**** Default stopcode for "KMCSER" ****
    26	000001'	535543	634562		SIXBIT	/KMCSER/  	;Title of module
    27	000002'	000000	000000		S$NONAME,,0		;?NONAME stopcode "KMCSER+nnn(nnnnnn)"
    28			000000'	S$NAME==KMCSER			;For STOPCDs with no arguments
    29					SALL>
    30				^
    31
    32				IFKMC<	ENTRY	KMCINI
    33				;This module does the required setup and fiddling required to
    34				;support the KMC microprocessor, which is driving the DR devices
    35				;and managing the input and output rings and processing the block io
    36				;requests.
    37
    38				EXTERNAL KMCPDP,KMCFLG,DRMTIM
    39				EXTERNAL DRPROT
    40				external iring,oring,irp620,irppdp,orp620,orppdp
    41				external keyset
    42				external sizirg,sizorg,IRINGA,ORINGA,IRINGS,ORINGS
    43				external ubacm0,ubanxt,ubirbg,ubaend
    44
    45				opdef call [pushj p,]
    46				opdef ret [popj p,]
    47				opdef stack [push p,]
    48				opdef unstack [pop p,]
    49
    50				;First paging RAM location for the KMC is ubacm0. KMC can use from
    51				;ubacm0 to last RAM locations
    52
    53				;calculate the pdp11 address for the start of the oring
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 1
KMCSER.MAC	30-OCT-87 16:59		KS-10 PARAMETER DEFINTIONS FOR PDP-10 MONITOR

    54			010255	orng11==<oring&777>_2+<<<iring+<1_sizirg>-iring&777000>_-9>+ubirbg>_^D11
    55
    56				;define the KMC CSR names
    57				define name(xx),<csr'xx==xx>
    58			000000	xx==0
    59				repeat 8,<
    60				  name(\xx)
    61				xx==xx+1>
    62			000010
    63
    64				;defne the flag positions in CSRs 3 and 4
    65			000001	dr0flg==1
    66			000002	dr1flg==2
    67			000020	dr2flg==20
    68			000200	dr3flg==200
    69			000223	drflgs==dr0flg+dr1flg+dr2flg+dr3flg
    70				;set up flag table
    71	000003'	000000	000001	flgtab: dr0flg
    72	000004'	000000	000002		dr1flg
    73	000005'	000000	000020		dr2flg
    74	000006'	000000	000200		dr3flg
    75
    76				;define the KMC CSR1 bit names
    77				define ioreg(dev,regadr,bitlst,bitmsk)
    78				<zz==100000
    79				ifnb <bitmsk>,<zz==bitmsk>
    80				dev'adr:3,,regadr
    81				irp bitlst,<dev'bitlst==zz
    82				zz==zz/2
    83				>>
    84
    85			760540	kmcadr==760540
    86	000007'	000003	760540	ioreg(csr,kmcadr,<run,mcl,cr,,,rmo,rmi,stp,,,,,,,>)
    87
    88	000010'	000000	000000	pg3adr: 0		;Address of paging Ram Location on UBA 3
    89	000011'	000000	000000	nxtpag: 0		;hold the address of the next page
    90	000012'	000003	760544	avlflg: 3,,kmcadr+csr4	;address of the available node flag word
    91	000013'	000003	760543	actflg: 3,,kmcadr+csr3	;address of the active node flag word
    92	000014'	000000	000000	upflg:  0		;the node up flag word
    93	000015'	000000	000000	manflg: 0		;the node has been set down manually flag
    94	000016'	000000	000000	notavl: 0		;node port numbers gt max. no. of port flag
    95
    96				;parameters defining maximum possible number of nodes and line per
    97				;node and the maximum ports configured
    98			000004	maxdr==4		;maximun number of nodes
    99			000100	lperdr==100		;lines per node
   100				external portn		;maximum number of ports configured
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 2
KMCSER.MAC	30-OCT-87 16:59		KS-10 PARAMETER DEFINTIONS FOR PDP-10 MONITOR

   101				;kmcini- initializes the paging ram to map the addresses of the
   102				;  input and output rings to pdp 11 addresses and sets up the
   103				;  low core communication area for the KMC. The communication area is
   104				;  IRINGA - loc of input ring in pdp11 address,in the format
   105				;	    xx,,yy where xx=bits 17,16 of addr. and yy=bits 0-15 of addr.
   106				;  IRINGS - size of input ring, in the xx,,yy format in pdp11 bytes
   107				;  IRPPDP - unchanged
   108				;  IRP620 - 620 pointer to input ring,unchanged
   109				;  ORINGA - loc of output ring in pdp11 address,in the xx,,yy format
   110				;  ORINGS - size of output ring in the xx,,yy format in pdp11 bytes
   111
   112	000017'	336000	000000*	kmcini:: skipn kmcdo##		;skip if the KMC is to be activated
   113	000020'	263040	000000		 ret
   114	000021'	200300	000007'		MOVE	T1,CSRADR	;Address of KMC's CSR
   115	000022'	260040	000000*		PUSHJ	P,UBGOOD##	;See if it's there
   116					  JRST	[SETZM KMCDO##	  ;Non existant
   117	000023'	254000	000306'			 RET]
   118	000024'	261040	000007		stack t2		;preserve t2,t3
   119	000025'	261040	000010		stack t3
   120	000026'	205300	255000		movsi t1,(<jfcl>)	;deactivate the 620 keyset
   121	000027'	202300	000000*		movem t1,keyset
   122				;Set up the the paging RAM to map CM 0 to pdp11 addr. 4000
   123	000030'	551300	763000*		hrrzi t1,pgradr+ubacm0	;LPT uses 1st RAM loc,KMC expects this 2nd
   124	000031'	505300	000003		hrli t1,ua3
   125	000032'	202300	000010'		movem t1,pg3adr		;set up address of 1st paging ram loc. to be used
   126	000033'	400300	000000		setz t1,
   127	000034'	660300	040000		tro t1,pgrval		;set the valid bit
   128	000035'	201340	001000		movei t2,1000		;Set as next cm page
   129	000036'	202340	000011'		movem t2,nxtpag		;save
   130	000037'	713320	000010'		wrio t1,@pg3adr		;write to paging RAM
   131				;Now set up the pointers to the rings in KMC address format
   132	000040'	201400	000000*		movei t3,IRINGA  	;address to store the IRING addr
   133	000041'	201300	000000*		movei t1,<iring&777>_2+<ubirbg_^D11> ;pdp11 address of iring
   134	000042'	260040	000237'		call stor11		;Store the 11 address
   135	000043'	201400	000000*		MOVEI T3,IRINGS		;point to iring size word (IRINGS)
   136	000044'	201300	000000*		movei t1,1_<sizirg+2>   ;lenght of iring in pdp11 bytes
   137	000045'	260040	000237'		call stor11		;store iring length
   138	000046'	201400	000000*		movei t3,ORINGA  	;address of pointer to oring
   139	000047'	201300	000000*		movei t1,orng11		;construct addr. of end of iring in pdp11 adr
   140	000050'	260040	000237'		call stor11		;Store the pdp11 addr. of oring
   141	000051'	201400	000000*		MOVEI T3,ORINGS		;point to oring size word (ORINGS)
   142	000052'	201300	000000*		movei t1,1_<sizorg+2>  	;length of oring in pdp11 bytes
   143	000053'	260040	000237'		call stor11		;store the length of the oring
   144				;Now set up paging ram locations for iring and oring
   145	000054'	201340	000000*		movei t2,ubanxt-1-ubacm0;see if all fit in page 0
   146	000055'	336000	000007		skipn t2		;skip if not
   147	000056'	254000	000075'		 jrst kmcout		;all done
   148	000057'	201300	000000*		movei t1,ubirbg-ubacm0	;see if iring started in cm0
   149	000060'	336000	000006		skipn t1		;skip if not
   150	000061'	254000	000065'		 jrst setram		;set up rest of ram for rings
   151	000062'	201340	000000*		movei t2,ubanxt-ubirbg	;get count of pages
   152	000063'	201300	000000*		movei t1,iring&777000	;set nxtpag to iring address
   153	000064'	202300	000011'		movem t1,nxtpag
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 2-2
KMCSER.MAC	30-OCT-87 16:59		KS-10 PARAMETER DEFINTIONS FOR PDP-10 MONITOR

   154				;setram - sets up the paging ram for the number of slots specified in t2
   155				;  starting at the address in nxtpag
   156	000065'	200300	000011'	setram:	move t1,nxtpag		;Get address of next page
   157	000066'	242300	777767		lsh t1,-9		;get pdp10 page address
   158	000067'	350000	000010'	setrm1:	aos pg3adr		;increment address of paging RAM entry
   159	000070'	660300	040000		tro t1,pgrval		;set the valid address bit
   160	000071'	713320	000010'		wrio t1,@pg3adr		;set up the RAM entry
   161	000072'	620300	040000		trz t1,pgrval		;clear the flag
   162	000073'	340300	000000		aoj t1,			;get page address of next page
   163	000074'	366340	000067'		sojn t2,setrm1		;loop til all pages set
   164				;Paging ram set up, exit
   165	000075'	402000	000014'	kmcout: setzm upflg		;clear all up flags
   166	000076'	201300	000223		movei t1,drflgs
   167	000077'	260040	000264'		CALL	KRING0
   168	000100'	723320	000013'		wriob t1,@actflg
   169	000101'	260040	000243'		CALL	KRING
   170				;Clear out paging RAM area for KMC block io
   171	000102'	201400	000000*		movei t3,ubaend-ubanxt 	;Get count of entries to clear
   172	000103'	200340	000310'		move t2,[ua3,,pgradr+ubanxt]  ;Get 1st RAM addr. to clear
   173	000104'	400300	000000		setz t1,
   174	000105'	713320	000007	clrram:	wrio t1,@t2		;clear
   175	000106'	350000	000007		aos t2
   176	000107'	366400	000105'		sojn t3,clrram		;till done
   177				;set the flags to disable any nodes whose port numbers exceed the maximum
   178				;number of ports configured in the system
   179	000110'	402000	000007		setzm t2
   180	000111'	402000	000006		setzm t1
   181	000112'	271300	000100	setnav:	addi t1,lperdr		;skip until port number gt portn
   182	000113'	350000	000007		aos t2			;count the nodes passed by
   183	000114'	307300	000000*		caig t1,portn
   184	000115'	254000	000112'		 jrst setnav
   185	000116'	301340	000004	setna1: cail t2,maxdr		;checked all nodes?
   186	000117'	254000	000123'		 jrst setna2		;yes,done
   187	000120'	200307	000003'		move t1,flgtab(t2)	;get appropriate flag
   188	000121'	436300	000016'		iorm t1,notavl		;set as not available to recieve messages
   189	000122'	344340	000116'		aoja t2,setna1
   190	000123'	200300	000016'	setna2:	move t1,notavl		;set as manual down to prevent messages
   191	000124'	202300	000015'		movem t1,manflg
   192	000125'	260040	000000*		CALL DRPROT		;SET UP DR INTERRUPT PROTECTION (CIOPR)
   193	000126'	262040	000007		unstack t2
   194	000127'	262040	000010		unstack t3
   195	000130'	263040	000000		ret
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 3
KMCSER.MAC	30-OCT-87 16:59		routines to process the active,available manual and up flags

   196				subttl routines to process the active,available manual and up flags
   197				;Routines to handle the flags controlling the KMC and Node
   198				;  communication
   199				;There are three sets of flags used to communicate between the KMC
   200				;and the pdp10. They are:
   201				;	Available - 0 flags that the DR for the node is physically there
   202				;		    1 flags that the KMC got a NXM for that DR
   203				;	Active    - 0 flags that the KMC is to process messages for the DR
   204				;		    1 flags that the KMC is throw away messages to the DR
   205				;		      and not take input from it
   206				;	Up        - 0 flags that no answered message has been received
   207				;		      from the node
   208				;		    1 flags that an answered message has been received
   209				;		      from the node
   210				;The active flags are maintained by the pdp10 in the KMC CSR#3.
   211				;The available flags are maintained by the KMC in the KMC CSR#4
   212				;The up flags are maintained by the pdp10 in pdp10 memory
   213				;The KMC will support up to 4 nodes connected directly to the 2020
   214				;  using DR11C's.
   215
   216				;kmcgav - get the available node flag word
   217	000131'	722320	000012'	kmcgav:: rdiob t1,@avlflg	;read the KMC node available register
   218	000132'	263040	000000		ret
   219
   220				;kmcgac - get the active node flag word
   221	000133'	722320	000013'	kmcgac:: rdiob t1,@actflg	;read the KMC node active register
   222	000134'	263040	000000		ret
   223
   224				;kmccac - marks inactive the node whose
   225				;	 number is in register T1
   226	000135'	261040	000007	kmccac:: stack t2
   227	000136'	261040	000006		stack t1
   228	000137'	722360	000012'		rdiob t2,@avlflg	;always set as not active the unavail. nodes
   229	000140'	670340	000015'		tdo t2,manflg		;set manual down flags
   230	000141'	200306	000003'		move t1,flgtab(t1)	;get the appropriate bit
   231	000142'	670340	000006		tdo t2,t1		;set the flag + the avail flags
   232	000143'	260040	000264'		CALL	KRING0
   233	000144'	724360	000013'		bsiob t2,@actflg	;set the flags
   234	000145'	260040	000243'		CALL	KRING
   235	000146'	262040	000006		unstack t1		;get the DR number back
   236	000147'	260040	000171'		call kmccup		;clear the up flag also
   237	000150'	262040	000007		unstack t2
   238	000151'	263040	000000		ret
   239
   240				;kmcsac- mark as active the node specified in T1
   241	000152'	261040	000007	kmcsac:: stack t2
   242	000153'	722360	000012'		rdiob t2,@avlflg	;dont turn off flag if node not avail
   243	000154'	670340	000015'		tdo t2,manflg		;set manual down flag
   244	000155'	200306	000003'		move t1,flgtab(t1)	;get the appropriate flag
   245	000156'	260040	000264'		CALL	KRING0
   246	000157'	616340	000006		tdnn t2,t1		;see if avail
   247	000160'	725320	000013'		 bciob t1,@actflg	;clear if available
   248	000161'	260040	000243'		CALL	KRING
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 3-2
KMCSER.MAC	30-OCT-87 16:59		routines to process the active,available manual and up flags

   249	000162'	262040	000007		unstack t2
   250	000163'	263040	000000		ret
   251
   252				;kmcgup - get the node up flag word
   253	000164'	200300	000014'	kmcgup:: move t1,upflg		;fetch the word
   254	000165'	263040	000000		ret
   255
   256				;kmcsup - set the host up for DR specified in T1
   257	000166'	200306	000003'	kmcsup:: move t1,flgtab(t1)	;get appropriate flag
   258	000167'	436300	000014'		iorm t1,upflg		;set flag
   259	000170'	263040	000000		ret			
   260
   261				;kmccup - clear the host up for DR specified in T1
   262	000171'	200306	000003'	kmccup:: move t1,flgtab(t1)
   263	000172'	412300	000014'		andcam t1,upflg
   264	000173'	263040	000000		ret
   265
   266				;kmcrst - return in t1 the bits set for the nodes which are active
   267				;  and unanswered
   268	000174'	261040	000007	kmcrst:: stack t2
   269	000175'	722320	000012'		rdiob t1,@avlflg	;get the active flags
   270	000176'	200340	000015'		move t2,manflg		;get the manual down flags
   271	000177'	436340	000006		iorm t2,t1		;or in with avail and act
   272	000200'	200340	000014'		move t2,upflg		;get the up and answered nodes
   273	000201'	436340	000006		iorm t2,t1		;or in
   274	000202'	431300	000223		xori t1,drflgs		;complement
   275	000203'	260040	000264'		CALL KRING0
   276	000204'	722360	000013'		rdiob t2,@actflg	;temp see below
   277	000205'	630340	000006		tdz t2,t1		;bciob t1,@actflg didn't work?
   278	000206'	723360	000013'		wriob t2,@actflg	;see above
   279	000207'	250300	000007		EXCH	T1,T2
   280	000210'	260040	000243'		CALL KRING
   281	000211'	200300	000007		MOVE	T1,T2		;RESTORE T1
   282	000212'	262040	000007		unstack t2
   283	000213'	263040	000000		ret
   284
   285				;kmcsmn - set the manually down flag for node specified in T1
   286	000214'	200306	000003'	kmcsmn:: move t1,flgtab(t1)		;get appropriate flag
   287	000215'	260040	000264'		CALL	KRING0
   288	000216'	724320	000013'		bsiob t1,@actflg	;set in active word
   289	000217'	260040	000243'		CALL	KRING
   290	000220'	436300	000015'		iorm t1,manflg		;set in manual down flag
   291	000221'	412300	000014'		andcam t1,upflg		;clear in up flag
   292	000222'	263040	000000		ret
   293
   294				;kmccmn - clear the manual down flag for node spcified in T1
   295	000223'	261040	000007	kmccmn:: stack t2
   296	000224'	200306	000003'		move t1,flgtab(t1)	;get appropriate flag
   297	000225'	200340	000016'		move t2,notavl		;check if nodes ports within max. of config
   298	000226'	616340	000006		tdnn t2,t1		;dont clear if not
   299	000227'	412300	000015'		 andcam t1,manflg	;clear if in range
   300	000230'	722360	000012'		rdiob t2,@avlflg	;get the available node flags
   301	000231'	260040	000264'		CALL	KRING0
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 3-3
KMCSER.MAC	30-OCT-87 16:59		routines to process the active,available manual and up flags

   302	000232'	616340	000006		tdnn t2,t1		;make sure the node is available
   303	000233'	725320	000013'		 bciob t1,@actflg	;set node active if available
   304	000234'	260040	000243'		CALL	KRING
   305	000235'	262040	000007		unstack t2
   306	000236'	263040	000000		ret
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 4
KMCSER.MAC	30-OCT-87 16:59		routines to process the active,available manual and up flags

   307				;stor11 - stores the value in t1 into the location in t3 in the
   308				;  format xx,yy, where xx=bits 17,16 of t1 and yy=0-15
   309
   310	000237'	552310	000000	stor11:	hrrzm t1,(t3)		;store 0-15
   311	000240'	242300	000002		lsh t1,2		;move over 16,17
   312	000241'	502310	000000		hllm t1,(t3)		;store high order bits
   313	000242'	263040	000000		ret
   314
   315
   316	000243'	261040	000006	KRING:	STACK T1
   317	000244'	261040	000007		STACK T2
   318	000245'	722360	000013'	B	T2,@ACTFLG
   319	000246'	405340	000377		ANDI	T2,377
   320	000247'	405300	000377		ANDI	T1,377
   321	000250'	242300	000010		LSH	T1,8
   322	000251'	434300	000007		IOR	T1,T2
   323	000252'	504300	000000*		HRL	T1,DRMTIM	;GET SECONDS UP
   324	000253'	430300	000311'		XOR	T1,[1B3]	;FLIP THE 3RD HIGHEST BIT (IT SHOWS)
   325	000254'	200340	000000*		MOVE	T2,KMCPDP
   326	000255'	202307	000000*		MOVEM	T1,KMCFLG(T2)
   327	000256'	271340	000001		ADDI	T2,1		;INC KMCPDP
   328	000257'	405340	000077		ANDI	T2,77
   329	000260'	202340	000254*		MOVEM	T2,KMCPDP
   330	000261'	262040	000007		UNSTACK	T2
   331	000262'	262040	000006		UNSTACK	T1
   332	000263'	263040	000000		RET
   333
   334	000264'	261040	000006	KRING0:	STACK T1
   335	000265'	261040	000007		STACK T2
   336	000266'	722320	000012'		RDIOB	T1,@AVLFLG
   337	000267'	722360	000013'		RDIOB	T2,@ACTFLG
   338	000270'	405340	000377		ANDI	T2,377
   339	000271'	405300	000377		ANDI	T1,377
   340	000272'	242300	000010		LSH	T1,8
   341	000273'	434300	000007		IOR	T1,T2
   342	000274'	504300	000252*		HRL	T1,DRMTIM	;GET SECONDS UP
   343	000275'	430300	000311'		XOR	T1,[1B3]	;FLIP THE 3RD HIGHEST BIT (IT SHOWS)
   344	000276'	200340	000260*		MOVE	T2,KMCPDP
   345	000277'	202307	000255*		MOVEM	T1,KMCFLG(T2)
   346	000300'	271340	000001		ADDI	T2,1		;INC KMCPDP
   347	000301'	405340	000077		ANDI	T2,77
   348	000302'	202340	000276*		MOVEM	T2,KMCPDP
   349	000303'	262040	000007		UNSTACK	T2
   350	000304'	262040	000006		UNSTACK	T1
   351	000305'	263040	000000		RET
   352				>;END IFKMC
   353
   354	000306'	402000	000017*		$END	(KMC)

   355	000307'	263040	000000

   356	000310'	000003	763000*

KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 4-2
KMCSER.MAC	30-OCT-87 16:59		routines to process the active,available manual and up flags

   357	000311'	040000	000000

   358						;End of KMCSER (KMCLIT: KMCEND:)
   359
NO ERRORS DETECTED
PROGRAM BREAK IS 000312
7K CORE USED
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88 PAGE 5
KMCSER.MAC	30-OCT-87 16:59		SYMBOL TABLE

ACTFLG		000013'		KMCSER		000000'	ENT	XX		000010	SPD	
AVLFLG		000012'		KMCSMN		000214'	INT	ZZ		000001	SPD	
BCIOB	725000	000000		KMCSUP		000166'	INT	
BSIOB	724000	000000		KRING		000243'		
CALL	260040	000000		KRING0		000264'		
CLRRAM		000105'		LPERDR		000100	SPD	
CSR		000002	SPD	MANFLG		000015'		
CSR0		000000	SPD	MAXDR		000004	SPD	
CSR1		000001	SPD	NODIE		000000	EXT	
CSR2		000002	SPD	NOTAVL		000016'		
CSR3		000003	SPD	NXTPAG		000011'		
CSR4		000004	SPD	ORING		000000	EXT	
CSR5		000005	SPD	ORINGA		000046'	EXT	
CSR6		000006	SPD	ORINGS		000051'	EXT	
CSR7		000007	SPD	ORNG11		010255	SPD	
CSRADR		000007'		ORP620		000000	EXT	
CSRCR		020000	SPD	ORPPDP		000000	EXT	
CSRMCL		040000	SPD	P		000001	INT	
CSRRMI		001000	SPD	PG3ADR		000010'		
CSRRMO		002000	SPD	PGRADR		763000	SPD	
CSRRUN		100000	SPD	PGRVAL		040000	SPD	
CSRSTP		000400	SPD	PORTN		000114'	EXT	
DIE		000000'	EXT	RDIOB	722000	000000		
DR0FLG		000001	SPD	RET	263040	000000		
DR1FLG		000002	SPD	S$ENTR	777777	777775	SIN	
DR2FLG		000020	SPD	S$HALT	777777	777777	SIN	
DR3FLG		000200	SPD	S$NAME		000000'	SPD	
DRFLGS		000223	SPD	S$NONA		000000	SIN	
DRMTIM		000274'	EXT	S$TEMP	777775	000000	SPD	
DRPROT		000125'	EXT	S$XCT	777777	777776	SIN	
FLGTAB		000003'		SETNA1		000116'		
IRING		000000	EXT	SETNA2		000123'		
IRINGA		000040'	EXT	SETNAV		000112'		
IRINGS		000043'	EXT	SETRAM		000065'		
IRP620		000000	EXT	SETRM1		000067'		
IRPPDP		000000	EXT	SIZIRG		000000	EXT	
KEYSET		000027'	EXT	SIZORG		000000	EXT	
KMCADR		760540	SPD	STACK	261040	000000		
KMCCAC		000135'	INT	STOR11		000237'		
KMCCMN		000223'	INT	T1		000006	INT	
KMCCUP		000171'	INT	T2		000007	INT	
KMCDO		000306'	EXT	T3		000010	INT	
KMCEND		000311'	INT	UA3		000003	SPD	
KMCFLG		000277'	EXT	UBACM0		000000	EXT	
KMCGAC		000133'	INT	UBAEND		000000	EXT	
KMCGAV		000131'	INT	UBANXT		000000	EXT	
KMCGUP		000164'	INT	UBGOOD		000022'	EXT	
KMCINI		000017'	ENT	UBIRBG		000000	EXT	
KMCLIT		000306'	INT	UNSTAC	262040	000000		
KMCOUT		000075'		UPFLG		000014'		
KMCPDP		000302'	EXT	WRIO	713000	000000		
KMCRST		000174'	INT	WRIOB	723000	000000		
KMCSAC		000152'	INT	

KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88
KMCSER.MAC	30-OCT-87 16:59		Symbol cross reference

ACTFLG	    91#	   168	   221	   233	   247	   276	   278	   288	   303	   318	   337
AVLFLG	    90#	   217	   228	   242	   269	   300	   336
CLRRAM	   174#	   176
CSR	    87#
CSR0	    62#
CSR1	    62#
CSR2	    62#
CSR3	    62#	    91
CSR4	    62#	    90
CSR5	    62#
CSR6	    62#
CSR7	    62#
CSRADR	    86#	   114
CSRCR	    87#
CSRMCL	    87#
CSRRMI	    87#
CSRRMO	    87#
CSRRUN	    87#
CSRSTP	    87#
DIE	    24	    24%	    25
DR0FLG	    65#	    69	    71
DR1FLG	    66#	    69	    72
DR2FLG	    67#	    69	    73
DR3FLG	    68#	    69	    74
DRFLGS	    69#	   166	   274
DRMTIM	    38%	   323	   342
DRPROT	    39%	   192
FLGTAB	    71#	   187	   230	   244	   257	   262	   286	   296
IRING	    40%	    54	   133	   152
IRINGA	    42%	   132
IRINGS	    42%	   135
IRP620	    40%
IRPPDP	    40%
KEYSET	    41%	   121
KMCADR	    85#	    86	    90	    91
KMCCAC	   226#
KMCCMN	   295#
KMCCUP	   236	   262#
KMCDO	   112%	   112	   116%	   116
KMCEND	   358#
KMCFLG	    38%	   326	   345
KMCGAC	   221#
KMCGAV	   217#
KMCGUP	   253#
KMCINI	    32	   112#
KMCLIT	   354#
KMCOUT	   147	   165#
KMCPDP	    38%	   325	   329	   344	   348
KMCRST	   268#
KMCSAC	   241#
KMCSER	    24	    25#	    28
KMCSMN	   286#
KMCSUP	   257#
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88
KMCSER.MAC	30-OCT-87 16:59		Symbol cross reference

KRING	   169	   234	   248	   280	   289	   304	   316#
KRING0	   167	   232	   245	   275	   287	   301	   334#
LISTSN	     3	     6
LPERDR	    99#	   181
MANFLG	    93#	   191	   229	   243	   270	   290	   299
MAXDR	    98#	   185
NODIE	    24%
NOTAVL	    94#	   188	   190	   297
NXTPAG	    89#	   129	   153	   156
ORING	    40%	    54
ORINGA	    42%	   138
ORINGS	    42%	   141
ORNG11	    54#	   139
ORP620	    40%
ORPPDP	    40%
P	    25	    45	    46	    47	    48	   115
PG3ADR	    88#	   125	   130	   158	   160
PGRADR	   123	   172
PGRVAL	   127	   159	   161
PORTN	   100%	   183
S$ENTR	    24	    30
S$HALT	    24
S$NAME	    28#
S$NONA	    27	    30
S$TEMP	    24#	    24
S$XCT	    30
SETNA1	   185#	   189
SETNA2	   186	   190#
SETNAV	   181#	   184
SETRAM	   150	   156#
SETRM1	   158#	   163
SIZIRG	    42%	    54	   136
SIZORG	    42%	   142
STOR11	   134	   137	   140	   143	   310#
T1	   114	   120	   121	   123	   124	   125	   126	   127	   130	   133	   136	   139	   142	   148
	   149	   152	   153	   156	   157	   159	   160	   161	   162	   166	   168	   173	   174	   180
	   181	   183	   187	   188	   190	   191	   217	   221	   227	   230	   231	   235	   244	   246
	   247	   253	   257	   258	   262	   263	   269	   271	   273	   274	   277	   279	   281	   286
	   288	   290	   291	   296	   298	   299	   302	   303	   310	   311	   312	   316	   320	   321
	   322	   323	   324	   326	   331	   334	   336	   339	   340	   341	   342	   343	   345	   350
T2	   118	   128	   129	   145	   146	   151	   163	   172	   174	   175	   179	   182	   185	   187
	   189	   193	   226	   228	   229	   231	   233	   237	   241	   242	   243	   246	   249	   268
	   270	   271	   272	   273	   276	   277	   278	   279	   281	   282	   295	   297	   298	   300
	   302	   305	   317	   318	   319	   322	   325	   326	   327	   328	   329	   330	   335	   337
	   338	   341	   344	   345	   346	   347	   348	   349
T3	   119	   132	   135	   138	   141	   171	   176	   194	   310	   312
UA3	   124	   172
UBACM0	    43%	   123	   145	   148
UBAEND	    43%	   171
UBANXT	    43%	   145	   151	   171	   172
UBGOOD	   115%	   115
UBIRBG	    43%	    54	   133	   148	   151
UPFLG	    92#	   165	   253	   258	   263	   272	   291
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88
KMCSER.MAC	30-OCT-87 16:59		Symbol cross reference

XX	    58#	    62	    62#
ZZ	    86#	    87	    87#
KMCSER - module to support the KMC communication interface	MACRO 12.5-46.0 14:19 13-JAN-88
KMCSER.MAC	30-OCT-87 16:59		Macro/Opdef cross reference

BCIOB	   247	   303
BSIOB	   233	   288
CALL	    45#	   134	   137	   140	   143	   167	   169	   192	   232	   234	   236	   245	   248	   275
	   280	   287	   289	   301	   304
IFKMC	    32
IOREG	    78#	    86
NAME	    57#	    62
PRINTF	    10#
RDIOB	   217	   221	   228	   242	   269	   276	   300	   318	   336	   337
RET	    46#	   113	   117	   195	   218	   222	   238	   250	   254	   259	   264	   283	   292	   306
	   313	   332	   351
STACK	    47#	   118	   119	   226	   227	   241	   268	   295	   316	   317	   334	   335
STOPCD	    23
UNSTAC	    48#	   193	   194	   235	   237	   249	   282	   305	   330	   331	   349	   350
WRIO	   130	   160	   174
WRIOB	   168	   278
$END	   354    ]VOq