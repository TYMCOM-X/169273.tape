SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 1
S.MAC	13-JAN-88 11:55		S.MAC - with system parameter file for P035/D, January 1988

     1				SUBTTL	S.MAC - with system parameter file for P035/D, January 1988
     2
     3				IF2,<IFNDEF LISTSN,<TAPE>>	;Skip to PASS2 in all but COMMON.LST
     4				;THIS MODULE ASSEMBLED WITH KL-10 PARAMETER FILE - KLSYM.MAC
     5
     6					IF2,<IFNDEF LISTSN,<		;LIST KLSYM.MAC IN COMMON ONLY
     7								TAPE>>
     8				TITLE	SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM
     9
    10					STOPCD(,ENTRY,SCHED1)^
    11					ENTRY	SCHED1		;For library searches
    12	000000'	260040	000000*	SCHED1::PUSHJ	P,DIE		;**** Default stopcode for "SCHED1" ****
    13	000001'	634350	454421		SIXBIT	/SCHED1/  	;Title of module
    14	000002'	000000	000000		S$NONAME,,0		;?NONAME stopcode "SCHED1+nnn(nnnnnn)"
    15			000000'	S$NAME==SCHED1			;For STOPCDs with no arguments
    16					SALL>
    17				^
    18					ENTRY	SCHED
    19
    20				EXTERNAL JOB,JBTSTS,JBTQ,PJBSTS,PJBST2,TIMEF,TPOPJ
    21				EXTERNAL CPOPJ1,TTYFND,TSETBI,HIGHJB,PGYSIO,PGYDIO,JBTICT
    22				EXTERNAL %UPT, UPTNTV, AGENTV
    23
    24				INTERN NXTJOB
    25
    26
    27				;INITIALIZE SCHEDULER  (CALLED FROM SYSINI BEFORE ALL OTHER
    28				;	DEVICES ARE INITIALIZED)
    29
    30				INTERN NXTINI
    31
    32	000003'	402000	000602'	NXTINI:	SETZM	QJOB		;CLEAR NUMBER OF JOBS NEEDING REQUEING
    33	000004'	402000	000601'		SETZM	JOBQUE		;CLEAR JOB NUMBER TO BE REQUEUED
    34								;BE SWAPPED RIGHT NOW.
    35	000005'	263040	000000		POPJ	P,
    36
    37				DEFINE CALTAL
    38				<>
    39
    40				DEFINE DSKOFF <WRPI DSKPIF>
    41				DEFINE DSKON <WRPI DSKPIN>
    42
    43				SALL
    44				IFNDEF SCDTRC,<SCDTRC==0>
    45				IFE SCDTRC,<DEFINE TRACE(TYPE,INST,DATA1,DATA2,COND)<INST>>
    46
    47				IFN SCDTRC,<
    48				
    49				DEFINE TRACE(TYPE,INST,DATA1,DATA2,COND)<
    50					JRST	[IFNB <COND><'COND
    51						   JRST ['INST
    52							  JRST .+1
    53							  JRST .+2]>
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 1
SCHED1.MAC	 4-DEC-87 16:14		S.MAC - with system parameter file for P035/D, January 1988

    54						 PUSH P,T1
    55						 MOVE T1,UPTIME##
    56						 HRL T1,J
    57						 PUSHJ P,PUTIN##
    58						 MOVEI T1,^D'TYPE
    59						 PUSHJ P,PUTIN
    60				IFIDN <DATA1> <T1> <MOVE T1,(P)>
    61				IFDIF <DATA1> <T1> <MOVE T1,'DATA1>
    62						PUSHJ P,PUTIN
    63				IFIDN <DATA2> <T1> <MOVE T1,(P)>
    64				IFDIF <DATA2> <T1> <MOVE T1,'DATA2>
    65						PUSHJ P,PUTIN
    66						POP P,T1
    67						'INST
    68						JRST .+1
    69						JRST .+2]
    70				>;END TRACE MACRO DEFINITION
    71				>;END IFN SCDTRC
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 2
SCHED1.MAC	 4-DEC-87 16:14		S.MAC - with system parameter file for P035/D, January 1988

    72				;NXTJOB DECREMENTS CURRENT JOB'S QUANT. AND PROTECT
    73				;TIMES AND REQUEUES IT IF QUANT. TIME GONE TO 0.
    74				;SERVICES ANY JOB REQUEUING REQUESTED AT OTHER PRIORITY
    75				;LEVELS THEN CALLS SHUFFLER,SWAPPER AND SCHEDULAR.
    76				;MAKES NO ASSUMPTIONS RE. ACS
    77				;RETURNS NEXT JOB TO RUN IN J.
    78
    79				EXTERNAL POTLST,JBMQNT,REQUE,DECHJB,DRSCHK
    80
    81	000006'	260040	001013'	NXTJOB:	PUSHJ	P,SWPCHK	;DO SWAP DONE STUFF NOW, BECAUSE
    82								; SWAP OUT DONE REQUEUES JOBS
    83	000007'	336000	000000*		SKIPN	TIMEF		;CLOCK TIC?
    84	000010'	254000	000016'		JRST	NXTJB1		;NO.
    85	000011'	200100	000000*		MOVE	J,HIGHJB	;GET HIGHEST JOB NO.
    86	000012'	205340	777777		MOVSI	T2,-1		;DECREMENT IN CORE PROTECT TIME
    87	000013'	331002	000000*		SKIPL	JBTICT(J)	;UNLESS ALREADY < 0.
    88	000014'	272342	000013*		ADDM	T2,JBTICT(J)	;DECREMENT.
    89	000015'	367100	000013'		SOJG	J,.-2
    90
    91	000016'	337100	000000*	NXTJB1:	SKIPG	J,JOB		;CURRENT JOB NO., IS IT NULL JOB?
    92	000017'	254000	000046'		JRST	CKJB1		;YES,GO SEE IF OTHER JOBS NEED RESCHEDULING
    93	000020'	201200	000000		MOVEI	F,0		;GET READY IN CASE CURRENT JOB UNRUNABLE
    94	000021'	554342	000000*		HLRZ	T2,JBTSTS(J)	;GET JOB STATUS BITS AND CODES
    95	000022'	620340	300405		TRZ	T2,RUNMSK!CMWB!MRQ	;MASK OUT DO NOT CARE BITS
    96	000023'	302340	440000		CAIE	T2,RUNABLE	;IS CURRENT JOB RUNABLE?
    97	000024'	254000	000045'		JRST	CKJB0		;NO, REQUE CURRENT JOB
    98	000025'	515340	300000		HRLZI	T2,CMWB!MRQ
    99	000026'	616342	000021*		TDNN	T2,JBTSTS(J)	;IF THE CURRENT JOB'S RUNNABLE
   100	000027'	336000	000007*		SKIPN	TIMEF		;AND IT'S A CLOCK TICK,
   101	000030'	254000	000033'		JRST	.+3
   102	000031'	333000	000000*		SKIPLE	%UPT+UPTNTV	;  IF PAGE-AGE INTERVAL > 0,
   103	000032'	370000	000000*		SOS	%UPT+UPTNTV	;    DECREMENT IT
   104	000033'	370342	000014*		SOS	T2,JBTICT(J)	;DECREMENT QUANT. TIME
   105	000034'	602340	000000*		TRNE	T2,JBMQNT	;HAS TIME GONE TO 0?
   106	000035'	254000	000046'		JRST	CKJB1		;NO
   107	000036'	201240	000677'		MOVEI	U,QTIME		;YES--REQUEUE AND RESET QUANT. TIME
   108	000037'	200302	000026*		MOVE	T1,JBTSTS(J)
   109	000040'	602300	010000		TRNE	T1,SCHPRV
   110	000041'	201240	000707'		MOVEI	U,QHIP		;SPECIAL HIGH PRIORITY Q
   111	000042'	200300	000601'		MOVE	T1,JOBQUE
   112	000043'	260040	000217'		PUSHJ	P,QXFER
   113	000044'	254000	000046'		JRST	CKJB1
   114
   115	000045'	260040	000000*	CKJB0:	PUSHJ	P, REQUE	;FLAG CURRENT TO BE REQUEUED
   116								;AND GO REQUEUE ALL
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 3
SCHED1.MAC	 4-DEC-87 16:14		S.MAC - with system parameter file for P035/D, January 1988

   117	000046'	337200	000602'	CKJB1:	SKIPG	F,QJOB		;SET	F NON ZERO IF ANY REQUEUEING TO DO
   118	000047'	254000	000111'		JRST	CKJB5		;NO REQUEUEING NECESSARY
   119	000050'	200100	000011*		MOVE	J,HIGHJB	;START WITH HIGHEST JOB NUMBER ASSIGNED
   120	000051'	205340	000002	CKJB2:	MOVSI	T2,JRQ		;JOB NEEDS REQUEUEING BIT
   121	000052'	616342	000037*		TDNN	T2,JBTSTS(J)	;THIS JOB?
   122	000053'	367100	000052'		SOJG	J,.-1		;NO,KEEP LOOKING
   123	000054'	323100	000111'		JUMPLE	J,CKJB5		;YES,LOOKED AT ALL JOBS?
   124								; (MAY NOT FIND A KJOBED JOB IF HIGHEST
   125								; GO DECR. COUNT QJOB ANYWAY)
   126	000055'	412342	000052*		ANDCAM	T2,JBTSTS(J)	;NO,MARK THIS JOB AS DONE
   127	000056'	260040	000000*		PUSHJ	P,DECHJB	;MAY HAVE ONLY HAD JRQ ON, GET RID
   128							;OF IT IF SO
   129	000057'	200342	000055*	CKJB3:	MOVE	T2,JBTSTS(J)	;JOB STATUS WORD
   130	000060'	603340	300000		TLNE	T2,CMWB!MRQ	;ANY POSSIBILITY THAT JOB HAS TO
   131								; GO INTO COMMAND WAIT QUEUE?
   132	000061'	254000	000076'		JRST	CKJB4D		;YES, IF BOTH ARE ON, DO SO
   133	000062'	325340	000104'	CKJB9:	JUMPGE	T2,CKJB4	;NO--IS RUN BIT ON ?  IF NOT, JOB GOES TO STOP Q.
   134	000063'	135240	000000*		LDB	U,PJBST2	;YES, JOB WAS RUNNABLE, GET QUEUE CODE.
   135	000064'	302240	000003		CAIE	U,SSQ		;COMING OUT OF SWAP OR
   136	000065'	306240	000001		CAIN	U,WSQ		;I/O WAIT?
   137	000066'	254000	000162'		JRST	CKJB10		;YES--DO SPECIAL REQUEUEING IF HEAVY SWAPPING.
   138	000067'	306240	000023		CAIN	U,TIOWQ		;CURRENT JOB GOING INTO TTY I/O-WAIT ?
   139								;CAN AHPPEN IF ATTACHING BACK TO JOB IN
   140								; TTY INPUT WAIT
   141								;BESIDES IT IS GOOD PROTECTION TO PREVENT
   142								; CLOBBERING DISK PTR
   143	000070'	563002	000033*		HRROS	JBTICT(J)	;YES, SET IN CORE PROTECT TIME TO -1, SO TTY-WAIT
   144								; JOB CAN BE SWAPPED OUT IMMEDIATELY IF SOMEONE
   145								; ELSE WANTS TO BE SWAPPED IN.
   146	000071'	306240	000000		CAIN	U,RNQ		;DOESS HE WANT TO RUN?
   147	000072'	260040	000173'		PUSHJ	P,PRICHK	;YES, CHECK SHARABLE RES
   148	000073'	254000	000103'		  JRST CKJB4B		;NO, REQUE NORMALLY
   149	000074'	201240	000707'	CKJB4C:	MOVEI	U,QHIP		;SPECIAL HIGHER PRIORITY REQUE
   150	000075'	254000	000105'		JRST	CKJB4A
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 4
SCHED1.MAC	 4-DEC-87 16:14		S.MAC - with system parameter file for P035/D, January 1988

   151	000076'	641340	300000	CKJB4D:	TLC	T2,CMWB!MRQ	;COMPLEMENT
   152	000077'	643340	300000		TLCE	T2,CMWB!MRQ	;SKIP IF THEY WERE BOTH ZERO
   153	000100'	254000	000062'		JRST	CKJB9		;MUST BOTH BE ON TO PUT INTO CMQ
   154	000101'	201240	000607'		MOVEI	U,QCMW		;MRQ AND CMWB BOTH ON, PUT INTO COMMAND WAIT Q
   155	000102'	254000	000105'		JRST	CKJB4A		;GO XFER TO CMQ
   156	000103'	334245	000356'	CKJB4B:	SKIPA	U,QBITS(U)	;GET ADDRESS OF TRANSFER TABLE
   157	000104'	201240	000605'	CKJB4:	MOVEI	U,QSTOP		;IF RUN BIT WAS OFF
   158	000105'	260040	000217'	CKJB4A:	PUSHJ	P,QXFER		;REQUEUE THE JOB.
   159	000106'	322200	000140'		JUMPE	F,SCHED		;IF FROM NXTJOB GO DIRECTLY TO SCHED
   160								; I.E. CURRENT JOB NO LONGER RUNNABLE(IOW)
   161								; BUT JRQ WASN'Q SET SO DON'Q DECR QJOB
   162	000107'	373200	000602'		SOSLE	F,QJOB		;ANY MORE JOBS TO REQUEUE?
   163	000110'	367100	000051'		SOJG	J,CKJB2		;YES,BUT LOOK AT EACH JOB ONLY ONCE PER CLOCK TICK
   164
   165				    ;CHECK AVAL FLAGS FOR SHARABLE DEVICES.
   166	000111'	201200	000013	CKJB5:	MOVEI	F,AVLNUM-MINQ	;
   167	000112'	336004	000342'	CKJB6:	SKIPN	AVALTB+MINQ(F)	;FLAG=0?
   168	000113'	365200	000112'		SOJGE	F,CKJB6		;YES - TRY NEXT ONE.
   169	000114'	321200	000135'		JUMPL	F,CKJB7		;NO - OR FINISHED?
   170	000115'	544104	000477'	CKJB62:	HLR	J,AVLQTB+MINQ(F) ;NO--GET 1ST JOB IN Q.
   171	000116'	570102	000000*	CKJB6A:	HRRE	J,JBTQ(J)	;
   172	000117'	327100	000124'		JUMPG	J,CKJB65	;JUMP UNLESS FINISHED QUEUE.
   173	000120'	544104	000477'		HLR	J,AVLQTB+MINQ(F) ;GIVE AVAIL RES TO 1ST WAITER,
   174	000121'	570102	000116*		HRRE	J,JBTQ(J)	;EVEN IF HE IS SWAPPED OUT.
   175	000122'	323100	000134'		JUMPLE	J,CKJB8		;JUMP IF NONE REALLY IN THE WAIT Q
   176								; WHICH ACTUALLY HAPPENS WITH DECTAPE.
   177	000123'	254000	000127'		JRST	CKJB6B		;YES, SOMEONE TO GIVE IT TO.
   178	000124'	200242	000057*	CKJB65:	MOVE	U,JBTSTS(J)	;NO.
   179	000125'	603240	100000		TLNE	U,MRQ		;LOW SEG OKAY TO RUN?
   180	000126'	254000	000116'		JRST	CKJB6A		;NO.
   181	000127'	256004	000517'	CKJB6B:	XCT	MRKSWT+MINQ(F)	;MARK AS WAITING FOR SWAP IN FOR RESOURCE
   182	000130'	550244	000477'		HRRZ	U,AVLQTB+MINQ(F) ;GET TRANS. TABLE ADDRESS
   183	000131'	260040	000217'		PUSHJ	P,QXFER		;REQUEUE THE JOB AND PUT IT IN
   184								;PROCESSOR Q SO SCHEDULER WILL RUN IT
   185	000132'	352004	000342'		AOSE	AVALTB+MINQ(F)	;RESET AVAL FLAG.
   186	000133'	254000	000115'		JRST	CKJB62		;NOT ALL THESE RESOURCES ALLOCATED.
   187	000134'	365200	000112'	CKJB8:	SOJGE	F,CKJB6		;CONTINUE IF ANY MORE FLAGS TO LOOK AT
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 5
SCHED1.MAC	 4-DEC-87 16:14		S.MAC - with system parameter file for P035/D, January 1988

   188	000135'	352000	000171'	CKJB7:	AOSE	CALSWP		;IF SOMEONE WANTS A PAGE OR
   189	000136'	332000	000027*		SKIPE	TIMEF		;IF THIS IS A CLOCK TICK CALL,
   190	000137'	260040	001117'		PUSHJ	P,SWAP		;DO SWAPPING.
   191
   192				;SCHEDULAR--SEARCH THRU QUEUES ACCORDING TO SSCAN TABLE
   193				;FOR 1ST JOB IN CORE--RETURN ITS NO. IN J
   194
   195	000140'	402000	000000*	SCHED:	SETZM	POTLST		;CLEAR POTENTIALLY LOST TIME FLAG
   196	000141'	201240	001006'		MOVEI	U,SSCAN		;ADDRESS OF SCAN TABLE
   197	000142'	265200	000317'		JSP	F,QSCAN		;BEGIN SCAN
   198	000143'	254000	000160'		  JRST	SCHD6		;NO MORE JOBS -- RETURN NULLJOB
   199	000144'	476000	000140*		SETOM	POTLST		;SET POTENTIALLY LOST TIME FLAG FOR
   200								; CLOCK1
   201	000145'	200302	000124*		MOVE	T1,JBTSTS(J)	;GET JOB STATUS WORD IN T1
   202	000146'	603300	100002		TLNE	T1,MRQ!JRQ	;IS HE RUNNABLE?
   203	000147'	254013	000000		JRST	(M)		;NO, HAS NO CONTEXT PAGES OR JRQ.
   204
   205
   206	000150'	576540	000601'	SCHD5:	TRACE(0,<HLREM	M,JOBQUE>,,,<CAMN J,JOB>)	;YES--SAVE ITS Q
   207	000151'	205200	000370		MOVSI	F,WTMASK	;CLEAR WAIT CODE
   208	000152'	412202	000145*		ANDCAM	F,JBTSTS(J)
   209	000153'	402000	000144*		SETZM	POTLST		;CLEAR POTENTIALLY LOST TIME AS A USER IS TO BE RUN
   210	000154'	200200	000016*		MOVE	F,JOB		;WHO WE RAN BEFORE
   211	000155'	323200	000000*		JUMPLE	F,CPOPJ		;IF IT WAS ANYBODY INTERESTING,
   212	000156'	202200	000172'		MOVEM	F,OLDJOB	;REMEMBER FOR CRASH ANALYSIS
   213	000157'	263040	000000		POPJ	P,			;RETURN
   214	000160'	400100	000000	SCHD6:	TRACE(1,<SETZ	J,>,,,<SKIPN JOB>)		;RETURN NULL JOB
   215	000161'	263040	000000		POPJ	P,
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 6
SCHED1.MAC	 4-DEC-87 16:14		S.MAC - with system parameter file for P035/D, January 1988

   216				;SPECIAL LOGIC TO PERMIT TTY-I/O-WAIT-SATISFIED JOBS TO DISPLACE
   217				;I/O BOUND JOBS IN CORE. JOBS COMING OUT OF I/O WAIT WILL BE
   218				;REQUEUED ACCORDING TO THEIR CORE SIZE IF ANYONE IS WAITING TO
   219				;BE SWAPPED IN. THIS WILL BE PARTICULARLY HARD ON LARGE I/O
   220				;BOUND JOBS, BUT TOUGH ROCKS FOR THOSE NASTY CASES.
   221
   222	000162'	260040	000173'	CKJB10:	PUSHJ	P,PRICHK	;HAVE SHARABLE RES?
   223	000163'	254000	000165'		 JRST	.+2		;NO
   224	000164'	254000	000074'		JRST	CKJB4C		;YES, SPECIAL REQUE
   225	000165'	331002	000070*		SKIPL	JBTICT(J)	;YES. THIS JOBS INCORE PROTECT TIME RUN OUT?
   226	000166'	254000	000103'		JRST	CKJB4B		;REQUEUE NORMALLY,ICPT STILL UP
   227	000167'	201240	000613'		MOVEI	U,QRNW1		;TIME TO PUT THIS JOB IN A LOWER Q. RE-Q
   228	000170'	254000	000105'		JRST	CKJB4A		; HIM TO END OF A QUEUE, DEPENDING ON SIZE
   229
   230	000171'	000000	000000	CALSWP::0			;SET TO -1 IF SOMEONE WANTS A PAGE
   231	000172'	000000	000000	OLDJOB: 0			;PREVIOUS CONTENTS OF CELL "JOB"
   232
   233
   234				; CHECK FOR SPECIAL SCHEDUALING PRIVILEGE
   235				; T2 HAS JBTSTS WORD, IT GETS SMASHED.
   236
   237	000173'	602340	010000	PRICHK:	TRNE	T2,SCHPRV	;HAS SCHEDULING PRIVILEGE?
   238	000174'	254000	000000*		JRST	CPOPJ1		;YES, PUT IN HIGH QUEUE
   239	000175'	254000	000000*		JRST	DRSCHK		;NO. CHECK FOR SHAREABLE RESOURCE
   240
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 7
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   241				SUBTTL	QCSS R. KRASIN
   242
   243				;THIS ROUTINE MUST BE ASSEMBLED WITH THE CONFIGURATION
   244				;TAPE TO DEFINE NUMBER OF JOBS
   245				;THIS SECTION CONTAINS 2 ROUTINES FOR Q MANIPULATION
   246				;AND NECESSARY TABLES FOR SPECIFING OPERATIONS PERFORMED
   247				;BY THEM.
   248
   249				INTERNAL QXFER,QSCAN
   250
   251				;STORAGE:
   252				;EACH Q IS A RING STRUCTURED, FOWARD AND BACKWARD
   253				;LINKED SRING LIST. THE "FIRST" LINK IN A Q IS
   254				;A Q-HEADER POINTING TO THE FIRST AND LAST MEMBERS OF THE Q.
   255				;A NULL Q HAS ONE LINK--THE Q-HEADER ITSELF.  THE LINKS MAKING
   256				;UP THE QS ARE CONTAINED IN A TABLE (JBTQ) WITH NEGATIVE
   257				;INDICIES (ADDRESSES LESS THAN JBTQ) USED FOR Q-HEADERS AND
   258				;POSITIVE INDICIES USED FOR MEMBERS (JOBS). THUS ONLY ONE WORD
   259				;PER LINK IS NECESSARY--ITS ADDRESS RELATIVE TO JBTQ GIVES THE
   260				;JOB NO. (OR Q NO. IF NEGATIVE) WHICH IT REPRESENTS WHILE
   261				;ITS CONTENTS CONTAINS THE LINKING POINTERS. THESE
   262				;POINTERS ARE ALSO INDICIES RELATIVE TO JBTQ RATHER THAN
   263				;ABSOLUTE ADDRESSES--RH(LINK)=FOWARD POINTER;
   264				;LH(LINK)=BACKWARD POINTER.
   265				;A JOB IS ASSUMED TO BE IN NO MORE THAN ONE Q AT A TIME, AND
   266				;THE NULL JOB (JOB 0) DOES NOT APPEAR IN THE QS  (I.E. JBTQ
   267				;ITSELF IS THE Q-HEADER FOR Q 0).
   268
   269				;ROUTINES:
   270				;BOTH ROUTINES ARE "TABLE DRIVEN" IN THE SENSE THAT THE
   271				;CALLING ROUTINE PROVIDES THE ADDRESS OF A TABLE WHICH
   272				;DEFINES THE SPECIFIC OPERATIONS TO BE PERFORMED.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 8
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   273
   274				;QUEUE INITIALIZATION
   275				;PUT ALL JOBS IN NULL QUEUE(JOB NO. NOT ASSIGNED)
   276				;CALLED ON RESTART AT LOC. 143
   277
   278				INTERNAL QINI
   279				EXTERNAL CPOPJ,JOBMAX,MXQUE
   280				EXTERNAL JBQMN	;EQUALS JBTQ-NULQ
   281
   282	000176'	211300	000000*	QINI:	MOVNI	T1,MXQUE	;MAKE ALL QUEUE HEADERS POINT TO THEMSELVES
   283	000177'	504300	000006		HRL	T1,T1		;BACKWARD POINTERS TOO
   284	000200'	202306	000121*		MOVEM	T1,JBTQ(T1)
   285	000201'	253300	000200'		AOBJN	T1,.-1
   286
   287	000202'	201300	777747		MOVEI	T1,-NULQ	;PUT JOBS ALL IN NULQ QUEUE
   288	000203'	206300	000001*		MOVSM	T1,JBTQ+1	;BACK POINTER FOR JOB 1
   289	000204'	201100	000000*		MOVEI	J,JOBMAX	;MAX. JOB NO.
   290	000205'	202302	000200*		MOVEM	T1,JBTQ(J)	;FORWARD POINTER OF JOBMAX JOB NO.
   291	000206'	505100	000001		HRLI	J,1		;SET NULQ HEADER TO POINT
   292	000207'	206100	000000*		MOVSM	J,JBQMN		;TO JOB 1 AND JOBMAX.
   293	000210'	553000	000002		HRRZS	J
   294	000211'	542102	777777*	QINI1:	HRRM	J,JBTQ-1(J)	;JOB I-1 POINT TO JOB I
   295	000212'	363100	000215'		SOJLE	J,QINI2		;FINISHED?
   296	000213'	506102	000001*		HRLM	J,JBTQ+1(J)	;BACK POINTER JOB I+1 POINTS TO JOB I
   297	000214'	254000	000211'		JRST	QINI1
   298	000215'	402000	000205*	QINI2:	SETZM	JBTQ		;CLEAR JOB 0.
   299	000216'	263040	000000		POPJ	P,
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 9
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   300
   301				;DELETES A JOB FROM ITS "SOURCE-Q", DETERMINES A "DEST-Q"
   302				;ACCORDING TO ONE OF 3 FUNCTIONS, AND INSERTS THE JOB AT
   303				;THE BEGINNING OR END OF THIS DEST-Q. IN ADDITION IT MAY
   304				;RESET THE JOB'S QUANTUM TIME (RH JBTSTS).
   305				;THE DRIVING TABLES ARE "TRANSFER TABLES":
   306				;
   307				;T.TABLE:	EXP <CODE>
   308				;		XWD <QUANT-TAB>,<R-TAB>
   309				;
   310				;DEPENDING ON <CODE>, THE SECOND WORD IS EITHER DATA OR THE
   311				;ADDRESSES OF "CORRESPONDANCE TABLES".
   312				;
   313				;THFIX OF <CODE> SPECIFIES WHETHER THE JOB IS TO BE
   314				;INSERTED AT THE BEGINNING OR END OF THE DEST-Q. THE SUFFIX
   315				;DETERMINES THE FUNCTION USED TO SELECT THE DEST-Q.
   316				;THE FOLLOWING ARE THE SIX CODES AND THEIR TABLE FORMATS:
   317
   318				;DEST-Q AS A FIXED (PREDETERMINED) Q:
   319				;BQFIX:	INSERT AT BEG OF DEST-Q
   320				;EQFIX:	INSERT AT END
   321				;
   322				; THE JOB IS TRANSFERED TO THE END OR BEG. OF THE Q <Q-TAB>
   323				; IF <QUANT-TAB> = -1, QUANT. TIME IS NOT RESET.
   324				; IF <QUANT-TAB> .G. 0 , QUANT. TIME IS RESET TO <QUANT-TAB>.
   325				; SINCE THIS FUNCTION IS FULLY DEFINED BY THE SECOND WORD
   326				; ALONE, NO CORRES. TABLE IS NECESSARY.
   327				;DEST-Q AS A FUNCTION OF SOURCE-Q
   328				;BQLINK:	INSRT AT BEG OF DEST-Q
   329				;EQLINK:	INSERT AT END
   330				;
   331				; <Q-TAB>=ADDRES OF A CORRES. TABLE "LINKING" SOURCE-QS TO
   332				; DEST-QS.
   333				; IF <QUANT-TAB> = -1, QUANT. TIME IS NOT RESET.
   334				; OTHERWISE <QUANT-TAB> IS TAKEN AS THE ADDRESS OF A
   335				; TABLE OF QUANT. TIMES CORRESPONDING TO THE Q-LINKING TABLE.
   336				; FORMAT OF THE TABLES ARE:
   337				;
   338				; <Q-TAB>:	XWD <SQ1>,<DQ1>	;1ST SOUQCE-Q:DEST-Q PAIR
   339				;		...
   340				;		XWD <SQN>,<DQN>	;NTH ...
   341				;		Z		;ZERO TERMINATES TABLE
   342				;
   343				; <QUANT-TAB>:	EXP <QUANT1>	;CORRES. TO <Q-TAB>+0
   344				;		...
   345				;		EXP <QUANTN>	;CORRES. TO <Q-TAB>+N-1
   346				;		Z
   347				;
   348				; UPON A CALL TO QXFER FOR THESE 2 CODES, AC T1 CONTAINES
   349				; THE SOURCE-Q (CURRENT Q) OF THE JOB.  THE LH OF THE
   350				; <Q-TAB> ENTRIES ARE SEARCHED FOR A MATCH..IF FOUND, THE
   351				; RH IS TAKEN AS THE DEST-Q AND THE QUANT. TIME IS RESET
   352				; (IF <QUANT-TAB> NOT -1) TO THE CORRRES. ENTRY IN THE
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 9-2
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   353				; <QUANT-TAB> TABLE.
   354				; IF NO MATCH FOUND..NO TRANSFER TAKES PLACE.
   355
   356				;DEST-Q AS A FUNCTION OF JOB SIZE
   357				;BQJSIZ	INSERT AT BEG OF DEST-Q
   358				;EQJSIZ	INSERT AT END
   359				;
   360				; <Q-TAB>=ADDRESS OF A TABLE ASSOCIATING JOB SIZE
   361				; (IN 1K BLOCKS) TO DEST-QS.
   362				; <QUANT-TAB> HAS SAME MEANING AS FOR B-EQLINK
   363				;
   364				; <Q-TAB>:	XWD <JSIZ1>,<DQ1>
   365				;		...
   366				;		XWD <JSIZN>,<DQN>
   367				;		Z
   368				;
   369				; <QUANT-TAB>: SIMILAR TO THAT FOR B-EQLINK
   370				;
   371				; THE <JSIZ>'S MUST BE IN INCREASING ORDER.
   372				; THE TABLE IS SEARCHED UNTIL <JSIZ> IS LESS THAN OR
   373				; EQUAL TO THE JOB SIZE, THEN THE CORRES. <DQ> IS
   374				; TAKEN AS THE DEST-Q. IF THE TABLE IS EXAUSTED, NO
   375				; TRANSFER TAKES PLACE.
   376				; QUANT. TIME IS HANDLED AS IN B-EQLINK.
   377				;CALLING SEQUENCE:
   378				;	MOVE  J,[JOB NUMBER]
   379				;	MOVE T1,[CURRENT Q]	;BQLINK AND EQLINK ONLY
   380				;	MOVEI U,TRANS TABLE ADDRESS
   381				;	PUSHJ P,QXFER
   382				;	...		;RETURN
   383				;  ON RETURN J IS UNALTERED; LH(PG)=-1  IF QUANT. TIME NOT
   384				;  RESET; =QUANT. TIME IF RESET;RH(PG)=DEST.Q
   385				;
   386				;ACS:
   387
   388				EXTERNAL JBYQNT,GETSIZ
   389
   390	000217'	336000	000002	QXFER:	SKIPN	J		;TRYING TO REQUE JOB 0?
   391	000220'	256000	002722'		 STOPCD (.,STOP,NULARQ,,<Attempt to requeue null job>)
   392				 ;;QXFER+1
   393	000221'	200145	000001		MOVE	PG,1(U)		;GET TRANSFER TABLE ADDRESS
   394	000222'	254025	000000		JRST	@(U)		;DISPATCH
   395
   396				;DEST-Q AS FUNCTION OF SOURCE-Q
   397	000223'	336343	000000	QLINK:	SKIPN	T2,(PG)		;END OF TABLE?
   398	000224'	263040	000000		POPJ	P,		;YES
   399	000225'	574340	000007		HLRE	T2,T2
   400	000226'	312340	000006		CAME	T2,T1		;NO--SOURCE-Q=LH(TABLE ENTRY)?
   401	000227'	252140	000223'		AOBJP	PG,QLINK	;NO- CONTINUE SEARCH
   402	000230'	254000	000240'		JRST	QX2		;YES
   403
   404				;DEST-Q AS FUNCTION OF JOB SIZE
   405	000231'	260040	000000*	QJSIZ:	PUSHJ	P,GETSIZ
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 9-3
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   406	000232'	262040	000007		POP	P,T2		;GET SIZE INTO T2
   407	000233'	514300	000007		HRLZ	T1,T2		;MOVE TO LH FOR MATCHING
   408	000234'	336343	000000	QX1:	SKIPN	T2,(PG)		;END OF TABLE?
   409	000235'	256000	000000'		 STOPCD                         ;;QX1+1
   410	000236'	313300	000007		CAMLE	T1,T2		;JOBSIZE .LE. LH(TABLE ENTRY)?
   411	000237'	252140	000234'		AOBJP	PG,QX1		;NO--CONTINUE SEARCH, JUMP ALWAYS.
   412
   413	000240'	204300	000003	QX2:	MOVS	T1,PG		;T1 IS ADDR. OF QUANT.TIME(IF REQUESTED)
   414	000241'	560143	000000		HRRO	PG,(PG)		;RH(PG)=DEST-Q;LH=-1(NO QUANT.TIME REQ.)
   415	000242'	331005	000001		SKIPL	1(U)		;WAS QUANT. TIME REQUESTED?
   416	000243'	504146	000000		HRL	PG,(T1)		;YES--GET IT
   417
   418				;FIXED DEST-Q
   419	000244'	200342	000215*	QFIX:	MOVE	T2,JBTQ(J)	;DELETE JOB FROM SOURCE-Q
   420	000245'	204300	000007		MOVS	T1,T2		;T2=FORW. LINK, T1=BACK LINK
   421	000246'	542346	000244*		HRRM	T2,JBTQ(T1)	;FORW. LINK PAST JOB
   422	000247'	506307	000246*		TRACE(2,<HRLM	T1,JBTQ(T2)>,PG,<(U)>)	;BACK LINK PAST JOB
   423
   424	000250'	335005	000000		SKIPGE	(U)		;END OR BEG. OF Q?
   425	000251'	544143	000247*		HLR	PG,JBTQ(PG)	;END--THIS WILL LEAVE PG=IDX OF
   426								; CURRENT LAST LINK;T1=IDX OF Q-HEADER
   427	000252'	200303	000251*		MOVE	T1,JBTQ(PG)	;BEG--T1=IDX OF CURRENT 1ST LINK
   428								; PG=IDX OF R-HEADER
   429	000253'	542103	000252*		HRRM	J,JBTQ(PG)	;INSERT JOB IN DEST-Q
   430	000254'	506106	000253*		HRLM	J,JBTQ(T1)
   431	000255'	542302	000254*		HRRM	T1,JBTQ(J)
   432	000256'	506142	000255*		HRLM	PG,JBTQ(J)
   433
   434	000257'	321140	000266'		JUMPL	PG,QX3		;RETURN IF QUANT. TIME NOT REQ.
   435	000260'	554240	000003		HLRZ	U,PG		;GET QUANTUM TIME FOR DPB
   436	000261'	200245	000000		MOVE	U,(U)		;GET QUANTUM TIME (POINTER IS @)
   437	000262'	137240	000000*		DPB	U,JBYQNT	;STORE QUANTUM RUN TIME
   438	000263'	201240	000000		MOVEI	U,RNQ		;SET JOB STATUS WAIT
   439	000264'	137240	000000*		DPB	U,PJBSTS	;CODE TO RUN QUEUE (0).
   440	000265'	260040	000273'		PUSHJ	P,WRSMAP	;/WRS - ignore if same state
   441	000266'	263040	000000	QX3:	POPJ	P,
   442
   443			000244'	BQFIX==QFIX
   444		400000	000244'	EQFIX==QFIX+1B0
   445			000223'	BQLINK==QLINK
   446		400000	000223'	EQLINK==QLINK+1B0
   447			000231'	BQJSIZ==QJSIZ
   448		400000	000231'	EQJSIZ==QJSIZ+1B0
   449	
   450				repeat 0,<
   451					intern	MAPQUE
   452				MAPQUE:	block	2000		;for debugging only! /WRS
   453				; table of counts for state transactions...
   454				;  MAPQUE[cs*40+ns] = count of times went from state <cs> to <ns>
   455					> ;End repeat 0
   456
   457	000267'	263040	000000	MAPQSW::POPJ	P,		;patch to JFCL to turn on MAPQUE
   458								;patch to POPJ P, to turn it off
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 9-4
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   459					intern	WRSMAP,WRSMP1
   460	000270'	256000	000267'	WRSMP1:	XCT	MAPQSW
   461	000271'	261040	000005		PUSH	P,U
   462	000272'	254000	000301'		JRST	WRSMA1
   463	000273'	256000	000267'	WRSMAP:	XCT	MAPQSW
   464	000274'	261040	000005		PUSH	P,U
   465					extern	JBTWRS		
   466	000275'	135240	000264*		LDB	U,PJBSTS
   467	000276'	430242	000000*		XOR	U,JBTWRS(J)
   468	000277'	606240	000037		TRNN	U,37		;if no change, ignore all this
   469	000300'	254000	000311'		 JRST	WRSMA2
   470	000301'	200242	000276*	WRSMA1:	MOVE	U,JBTWRS(J)	;get history buffer
   471	000302'	242240	000005		LSH	U,5		;make room for latest value
   472	000303'	202242	000301*		MOVEM	U,JBTWRS(J)	
   473	000304'	135240	000275*		LDB	U,PJBSTS
   474	000305'	437242	000303*		IORB	U,JBTWRS(J)
   475	000306'	405240	001777		ANDI	U,1777
   476	000307'	306240	777777		CAIN	U,-1		;Patch -1 to a specific state pair
   477	000310'	256000	000000'		 STOPCD			;to crash on particular transition.;;WRSMA1+6
   478				;	AOSG	MAPQUE(U)	;if its negative, crash
   479				;	 STOPCD                                                    ;;WRSMA1+10
   480	000311'	262040	000005	WRSMA2:	POP	P,U
   481	000312'	263040	000000		POPJ	P,
   482
   483	000313'	000001	000000	WRSHDR:	1,,0			;for GETLNK gettab via .LINK operator
   484	000314'	000316'	000315'		WRSVAL,,WRSNAM
   485	000315'	524264	676263	WRSNAM:	sixbit	"JBTWRS"
   486				;	sixbit	"MAPQUE"
   487	000316'	000000	000305*	WRSVAL:		JBTWRS
   488				;		MAPQUE
   489					.LINK 1,WRSHDR
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 10
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   490				;SCANS THE QS RETURNING THE NUMBERS OF THE JOBS IN THE QS.
   491				;THE ORDER AND MANNER IN WHICH THE QS ARE SEARCHED IS
   492				;DETERMINED BY A "SCAN TABLE" ADDRESSED IN THE CALLING SEQ.
   493				;THE SCAN TABLE HAS THE FORM:
   494				;
   495				;SCANTAB:	XWD <Q1>,<CODE1>	;SCN Q1 ACCRDING TO CODE1
   496				;		...
   497				;		XWD <QN>,<CODEN>	;QN ACCORDING TO CODEN
   498				;		Z		;ZERO TERMINATES TABLE
   499				;
   500				;EACH Q MAY BE SCANNED IN ONE OF FOUR WAYS SPECIFIEDBY <CODE>
   501				;THE CODES ARE:
   502				;
   503				;QFOR	SCAN WHOLE Q FOWARD
   504				;QFOR1	SCAN FOR ONY THE 1ST MEMBER (IF ANY)
   505				;QBAK	SCAN WHOLE Q BACKWARD
   506				;QBAK1	SCAN BACKWARD FOR ALL MEMBERS EXCEPT THE 1ST
   507				;
   508				;CALLING SEQ.
   509				;
   510				;	MOVEI U,SCAN TABLE ADDRESS
   511				;	JSP F,QSCAN	;SET UP F FOR REPEATED RETURNS
   512				;	...		;RETURN HERE WHEN NO MORE JOBS
   513				;	...		;RETURN HERE WITH NEXT JOB IN AC J
   514				;			; AND ITS Q IN LH(M)
   515				;
   516				;	PERFORM ANY NECESSARY TESTING OF THIS JOB
   517				;	J,U,F,M MUST BE PRESERVED
   518				;
   519				;	JRST (M)	;RETURN TO QSCAN TO GET NEXT JOB
   520				;			; IF THIS ONE NOT ACCEPTABLE
   521				;
   522				;ACS:
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 11
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   523	000317'	336545	000000	QSCAN:	SKIPN	M,(U)		;END OF SCAN TABLE?
   524	000320'	254004	000000		JRST	(F)		;YES--RETURN TO CALL+1
   525	000321'	574100	000013		HLRE	J,M		;NO--GET NO. OF Q
   526	000322'	254013	000000		JRST	(M)		;DISPATCH
   527
   528	000323'	201540	000326'	QFOR1:	MOVEI	M,QFOR2		;ONLY THE FIRST JOB
   529
   530	000324'	570102	000256*	QFOR:	HRRE	J,JBTQ(J)	;SCAN FOWARD ALL JOBS
   531	000325'	327104	000001		JUMPG	J,1(F)		;RETURN THIS JOB NO. CALL+2 UNLESS--
   532	000326'	344240	000317'	QFOR2:	AOJA	U,QSCAN		;END OF THIS Q--GET NEXT Q
   533
   534	000327'	574102	000324*	QBAK1:	HLRE	J,JBTQ(J)	;SCAN BACKWARD ALL JOBS EXCEPT 1ST
   535	000330'	333002	000327*		SKIPLE	JBTQ(J)		;IS THIS THE FIRST MEMBER?
   536	000331'	254004	000001		JRST	1(F)		;NO--RETURN CALL+2
   537	000332'	344240	000317'		AOJA	U,QSCAN		;YES--GET NEXT Q
   538
   539	000333'	574102	000330*	QBAK:	HLRE	J,JBTQ(J)	;SCAN BACKWARD ALL JOBS
   540	000334'	327104	000001		JUMPG	J,1(F)		;RETURN CALL+2 WITH JOB NO. UNLESS
   541	000335'	344240	000317'		AOJA	U,QSCAN		;BEG OF THIS Q--GET NEXT Q
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 12
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   542				;SHARABLE DEVICE JUST BECOME AVAILABLE(EXTENDED TO OTHER QUEUEW TOO)
   543				;APPROPRIATE ENTRY IS SET NON-ZERO WHEN SCHEDULER SHOULD LOOK
   544				;AT THAT QUEUE TO FIND A JOB TO RUN
   545				;WSAVAL CONTAINS THE NO. OF JOBS WITH IO WAIT SATISFIED(0=NONE)
   546
   547				DEFINE X(A,B,C)
   548				<INTERNAL A'AVAL,A'Q
   549				A'Q==.-AVALTB
   550				A'AVAL:	0
   551				>
   552
   553				INTERNAL AVALTB
   554
   555	000336'	000000	000000	AVALTB:	QUEUES	;GENERATE THE AVAL FLAGS
   556	000337'	000000	000000
   557	000340'	000000	000000
   558	000341'	000000	000000
   559	000342'	000000	000000
   560	000343'	000000	000000
   561	000344'	000000	000000
   562	000345'	000000	000000
   563	000346'	000000	000000
   564	000347'	000000	000000
   565	000350'	000000	000000
   566	000351'	000000	000000
   567	000352'	000000	000000
   568	000353'	000000	000000
   569	000354'	000000	000000
   570	000355'	000000	000000
   571			000020	LOC==.-AVALTB
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 13
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   572			000020	NQUEUE==LOC		;NO. OF QUEUES COUNTING RUN QUEUE
   573			000017	XP MAXQ,NQUEUE-1	;MAX. STATE CODE WHICH HAS AN AVAL FLAG
   574			000004	XP MINQ,SIQ		;MINIMUM SHARABLE DEVICE QUEUE
   575			000017	XP AVLNUM,MAXQ		;MAX. STATE CODE WHICH HAS AN AVAL FLAG
   576
   577				;DEFINE STATE CODES WHICH DO NOT HAVE AVAL AND REQ FLAGS
   578
   579				DEFINE X(A,B,C)
   580				<INTERNAL A'Q
   581				A'Q==LOC
   582				LOC==LOC+1
   583				>
   584					CODES
   585
   586			000032	XP MXCODE,LOC-1	;MAX. JOB STATE CODE
   587			000033	PQ0==LOC
   588			000034	LOC==LOC+1		;VERY HIGH PRIORITY QUE FOR SHARABLE RES
   589			000034	PQ1==LOC
   590			000035	LOC==LOC+1
   591			000035	PQ2==LOC
   592			000036	LOC==LOC+1
   593			000036	PQ3==LOC
   594			000037	LOC==LOC+1
   595			000037	CMQ==LOC		;COMMAND DELAY QUEUE
   596
   597				;HERE IS DEFINITION OF DUMMY SATISFIED STATE ISQ, WHICH IS WHERE
   598				; A JOB GOES AFTER GETTING A CLUB INTERLOCK. DEFINE IT TO BE SAME
   599				; AS TSQ, SO THAT JOB THAT GETS CLUB INTERLOCK GETS HIGH PRIORITY
   600				; SOAS NOT TO BLOCK OTHER JOBS WAITING FOR THAT INTERLOCK. EVENTUALLY
   601				; SHOULD PUT IN SOME CONTROL SO THAT THESE KIND OF JOBS DON'T RUN AWAY
   602				; WITH THE SYSTEM.
   603
   604			000002	XP ISQ,TSQ
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 14
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   605
   606				;CORRESPONDENCE TABLE BETWEEN JOB STATUS CODES AND QUEUE TRANSFER TABLES
   607				;USED BY SCHEDULER
   608				;RUNCSS SETS JOB STATUS WORD TO NEW STATE CODE.
   609				;SCHEDULER SETS UP QUEUE TRANSFER TABLE ADDRESS FROM
   610				;FOLLOWING TABLE USING NEW STATE CODE AS INDEX
   611
   612				DEFINE X(A,B,C)
   613				<	EXP Q'A'W
   614				>
   615
   616				INTERNAL QBITS
   617
   618	000356'	000000	000611'	QBITS:	QUEUES
   619	000357'	000000	000615'
   620	000360'	000000	000617'
   621	000361'	000000	000621'
   622	000362'	000000	000643'
   623	000363'	000000	000645'
   624	000364'	000000	000647'
   625	000365'	000000	000651'
   626	000366'	000000	000653'
   627	000367'	000000	000657'
   628	000370'	000000	000661'
   629	000371'	000000	000655'
   630	000372'	000000	000663'
   631	000373'	000000	000667'
   632	000374'	000000	000671'
   633	000375'	000000	000673'
   634	000376'	000000	000623'		CODES
   635	000377'	000000	000637'
   636	000400'	000000	000641'
   637	000401'	000000	000625'
   638	000402'	000000	000627'
   639	000403'	000000	000631'
   640	000404'	000000	000633'
   641	000405'	000000	000635'
   642	000406'	000000	000665'
   643	000407'	000000	000603'
   644	000410'	000000	000605'
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 15
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   645				;SHARABLE DEVICE REQUEST TABLE(GENERALIZED FOR OTHER QUEUES TOO)
   646				;CONTAINS THE NUMBER OF JOB WAITING TO USE SHARBLE DEVICE
   647				;WSREQ AND RNREQ ARE UNUSED
   648
   649				DEFINE X(A,B,C)
   650				<A'REQ:	-1
   651				INTERNAL A'REQ
   652				>
   653
   654				INTERNAL REQTAB,CNTTAB
   655
   656	000411'	777777	777777	REQTAB:	QUEUES	;GENERATE REQ TABLE
   657	000412'	777777	777777
   658	000413'	777777	777777
   659	000414'	777777	777777
   660	000415'	777777	777777
   661	000416'	777777	777777
   662	000417'	777777	777777
   663	000420'	777777	777777
   664	000421'	777777	777777
   665	000422'	777777	777777
   666	000423'	777777	777777
   667	000424'	777777	777777
   668	000425'	777777	777777
   669	000426'	777777	777777
   670	000427'	777777	777777
   671	000430'	777777	777777
   672
   673				DEFINE X(A,B,C)
   674				<A'CNT: 0
   675				INTERNAL A'CNT
   676				>
   677
   678	000431'	000000	000000	CNTTAB:	QUEUES
   679	000432'	000000	000000
   680	000433'	000000	000000
   681	000434'	000000	000000
   682	000435'	000000	000000
   683	000436'	000000	000000
   684	000437'	000000	000000
   685	000440'	000000	000000
   686	000441'	000000	000000
   687	000442'	000000	000000
   688	000443'	000000	000000
   689	000444'	000000	000000
   690	000445'	000000	000000
   691	000446'	000000	000000
   692	000447'	000000	000000
   693	000450'	000000	000000
   694
   695				DEFINE X (A,B,C)
   696				<	<SIXBIT /A'CNT/>
   697				%%ZCNT==%%ZCNT+1>
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 15-2
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   698
   699			000000		%%ZCNT==0
   700	000451'	625643	566400	CNTNAM:	QUEUES
   701	000452'	676343	566400
   702	000453'	646343	566400
   703	000454'	636343	566400
   704	000455'	635143	566400
   705	000456'	625143	566400
   706	000457'	606343	566400
   707	000460'	606243	566400
   708	000461'	552243	566400
   709	000462'	444143	566400
   710	000463'	434243	566400
   711	000464'	464343	566400
   712	000465'	556443	566400
   713	000466'	417043	566400
   714	000467'	414343	566400
   715	000470'	426043	566400
   716
   717	000471'	000020	000000		%%ZCNT,,0
   718					.LINK	1,.-1
   719	000472'	000431'	000451'		CNTTAB,,CNTNAM
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 16
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   720
   721				;CORRESPONDENCE TABLE LH=QUEUE CODE, RH=QUEUE TRANSFER TABLE ADR.
   722				;INDEX INTO TABLE ALSO = QUEUE CODE
   723				;FOR SHARABLE DEVICES ONLY
   724				;SCHEDULER TAKES ONE JOB WAITING FOR A SHARABLE DEVICE AND
   725				;PUTS IT IN THE APPROPRIATE RUN QUEUE ACCORDING TO
   726				;QUEUE TRANSFER TABLE AS SPECIFIED BELOW BY THE JOB WAIT
   727				;STATE CODE.
   728
   729				DEFINE X(A,B,C)
   730				<	XWD -A'Q,Q'A'S
   731				>
   732
   733			000000	QRNS==0	;NO CORRESPONDENCE TABLES FO THESE QUEUES
   734			000000	QWSS==0
   735			000000	QTSS==0
   736			000000	QSSS==0
   737
   738				INTERNAL AVLQTB
   739
   740	000473'	000000	000000	AVLQTB:	QUEUES
   741	000474'	777777	000000
   742	000475'	777776	000000
   743	000476'	777775	000000
   744	000477'	777774	000707'
   745	000500'	777773	000707'
   746	000501'	777772	000707'
   747	000502'	777771	000707'
   748	000503'	777770	000707'
   749	000504'	777767	000707'
   750	000505'	777766	000707'
   751	000506'	777765	000707'
   752	000507'	777764	000675'
   753	000510'	777763	000701'
   754	000511'	777762	000705'
   755	000512'	777761	000703'
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 17
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   756				;DEFINE A SET OF INSTRUCTIONS TO MARK A JOB AS WAITING FOR
   757				;SWAP IN TO GRAB A RESOURCE. THIS IS IN CASE OF A SWAP ERROR
   758				;AT THIS POINT, WE CAN THEN RECOVER.
   759
   760					DEFINE X(A,B,C)
   761				<FFLAG==0
   762				IFIDN <A><M2>,<FFLAG==1>
   763				IFIDN <A><PS>,<FFLAG==1>
   764				IFIDN <A><PR>,<FFLAG==1>
   765				IFIDN <A><SI>,<FFLAG==1>
   766				IFIDN <A><RI>,<FFLAG==1>
   767				IFE FFLAG,<MOVEM J,A'SWT>
   768				IFN FFLAG,<PUSHJ P,A'SSWT
   769					EXTERN A'SSWT>
   770				>
   771
   772	000513'	202100	000533'	MRKSWT:	QUEUES
   773	000514'	202100	000534'
   774	000515'	202100	000535'
   775	000516'	202100	000536'
   776	000517'	260040	000000*
   777	000520'	260040	000000*
   778	000521'	260040	000000*
   779	000522'	260040	000000*
   780	000523'	260040	000000*
   781	000524'	202100	000544'
   782	000525'	202100	000545'
   783	000526'	202100	000546'
   784	000527'	202100	000547'
   785	000530'	202100	000550'
   786	000531'	202100	000551'
   787	000532'	202100	000552'
   788
   789					DEFINE X(A,B,C)
   790				<INTERNAL A'SWT
   791				A'SWT:	0>
   792
   793	000533'	000000	000000	SWTTAB:	QUEUES
   794	000534'	000000	000000
   795	000535'	000000	000000
   796	000536'	000000	000000
   797	000537'	000000	000000
   798	000540'	000000	000000
   799	000541'	000000	000000
   800	000542'	000000	000000
   801	000543'	000000	000000
   802	000544'	000000	000000
   803	000545'	000000	000000
   804	000546'	000000	000000
   805	000547'	000000	000000
   806	000550'	000000	000000
   807	000551'	000000	000000
   808	000552'	000000	000000
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 17-2
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   809
   810					DEFINE X(A,B,C)
   811				<FFLAG==0
   812				IFIDN <A><M2>,<FFLAG==1>
   813				IFIDN <A><PS>,<FFLAG==1>
   814				IFIDN <A><PR>,<FFLAG==1>
   815				IFIDN <A><SI>,<FFLAG==1>
   816				IFIDN <A><RI>,<FFLAG==1>
   817				IFE FFLAG,<PUSHJ P,FRQUE>
   818				IFN FFLAG,<POPJ P,>
   819				>
   820
   821	000553'	260040	000573'	CHKSWT:	QUEUES
   822	000554'	260040	000573'
   823	000555'	260040	000573'
   824	000556'	260040	000573'
   825	000557'	263040	000000
   826	000560'	263040	000000
   827	000561'	263040	000000
   828	000562'	263040	000000
   829	000563'	263040	000000
   830	000564'	260040	000573'
   831	000565'	260040	000573'
   832	000566'	260040	000573'
   833	000567'	260040	000573'
   834	000570'	260040	000573'
   835	000571'	260040	000573'
   836	000572'	260040	000573'
   837
   838				;HERE TO FREE UP A RESOURCE SOMEONE WAS WAITING FOR ON A SWAP ERR
   839	000573'	312104	000537'	FRQUE:	CAME	J,SWTTAB+MINQ(F)
   840	000574'	263040	000000		POPJ	P,		;NOT THIS JOB
   841	000575'	371004	000415'		SOSL	REQTAB+MINQ(F)
   842	000576'	476004	000342'		SETOM	AVALTB+MINQ(F)
   843	000577'	402004	000537'		SETZM	SWTTAB+MINQ(F)
   844	000600'	263040	000000		POPJ	P,
   845
   846				INTERNAL SWTTAB
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 18
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   847				INTERNAL JOBQUE
   848	000601'	000000	000000	JOBQUE:	0	;QUEUE NUMBER OF CURRENTLY RUNNING JOB: PQ1,PQ2,PQ3
   849
   850				INTERNAL QJOB
   851	000602'	000000	000000	QJOB:	Z	;NUMBER OF JOBS NEEDING Q TRANSFERS AT OTHER THAN CLOCK LEVEL
   852
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 19
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   853				INTERNAL QSTOP,QTIME,SSCAN,QCMW
   854				EXTERN QQYSD,QQYTTY
   855
   856			000244'	BQFIX==QFIX	;BEGINNING OF QUEUES FIXED QUEUE DISCIPLINE
   857		400000	000244'	EQFIX==QFIX+1B0	;END OF QUEUES " " "
   858			000223'	BQLINK==QLINK
   859		400000	000223'	EQLINK==QLINK+1B0
   860			000231'	BQJSIZ==QJSIZ
   861		400000	000231'	EQJSIZ==QJSIZ+1B0
   862				DEFINE TTAB(FCTN,QUEUE,QUANT)
   863				<		EXP FCTN
   864						XWD QUANT,-QUEUE
   865				>
   866				DEFINE PTTAB(FCTN,QUEUE,QUANT)
   867				<		EXP FCTN
   868						XWD QUANT,QUEUE
   869				>
   870
   871	000603'	400000	000244'	QNULW:	TTAB EQFIX,NULQ,-1	;NULL QUEUE JOB NO. NOT ASSIGNED
   872	000604'	777777	777747
   873	000605'	400000	000244'	QSTOP:QSTOPW:	TTAB EQFIX,STOPQ,-1	;UNRUNABLE JOBS TO END OF STOPQ
   874	000606'	777777	777746
   875	000607'	400000	000244'	QCMW:	TTAB EQFIX,CMQ,-1		;COMMAND WAIT TILL JOB IN CORE
   876	000610'	777777	777741
   877	000611'	400000	000231'	QRNW:	PTTAB EQJSIZ,QSTAB,QQSTAB	;JUST RUNABLE JOBS
   878	000612'	000725'	000711'
   879	000613'	400000	000231'	QRNW1:	PTTAB EQJSIZ,QSTAB1,QQSTB1	;FOR IOW SAT OR DIOW SAT
   880	000614'	000724'	000715'
   881					;WHICH ARE NOT IN SOME WAIT STATE BELOW,ENTER PROCESSOR
   882					;QS AT END AND GET QUANT. TIME ACCORDING TO THEIR SIZE
   883
   884				;*; QWSW: TTAB BQFIX,PQ1,QQYTTY	;(Go to PQ1 after 1/10 second)
   885	000615'	400000	000244'	QWSW:	TTAB EQFIX,PQ2,JFYS12	;IO WAIT SATISFIED (DEVICES NOT TTY+DSK)
   886	000616'	000000*	777743
   887					;ENTER FRONT OF PROCESSOR QS AND GET QUANT. TIME
   888					;ACCORDING TO JOB SIZE
   889	000617'	000000	000244'	QTSW:	TTAB BQFIX,PQ1,QQYTTY	;TTY IO WAIT SATISFIED(ENTER FRONT OF PQ1)
   890	000620'	000000*	777744
   891
   892				;*; QSSW: TTAB BQFIX,PQ1,QQYTTY	;(Go to PQ1 after 1/10 second)
   893	000621'	400000	000244'	QSSW:	TTAB EQFIX,PQ2,JFYS12	;PAGE WAIT SATISFIED.
   894	000622'	000000*	777743
   895	000623'	400000	000244'	QIOWW:	TTAB EQFIX,IOWQ,-1	;IOW(EXCEPT DSK+TTY) HELD IN IOWQ
   896	000624'	777777	777760
   897	000625'	400000	000244'	QTIOWW:	TTAB EQFIX,TIOWQ,-1	;TTY IOW HELD IN TIOWQ
   898	000626'	777777	777755
   899	000627'	400000	000244'	QSWW:	TTAB EQFIX,SWQ,-1	;JOBS WAITING FOR A PAGE TO FINISH
   900	000630'	777777	777754
   901	000631'	400000	000244'	QMLOWW:	TTAB EQFIX,MLOWQ,-1
   902	000632'	777777	777753
   903	000633'	400000	000244'	QILWW: TTAB EQFIX,ILWQ,-1
   904	000634'	777777	777752
   905	000635'	400000	000244'	QFLWW:	TTAB EQFIX,FLWQ,-1
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 19-2
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   906	000636'	777777	777751
   907	000637'	400000	000244'	QMBWW:	TTAB EQFIX,MBWQ,-1
   908	000640'	777777	777757
   909	000641'	400000	000244'	QCWW:	TTAB EQFIX,CWQ,-1
   910	000642'	777777	777756
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 20
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   911	000643'	400000	000244'	QSIW:	TTAB EQFIX,SIQ,-1	;SAT PRIMARY PCB NO IO WAIT.
   912	000644'	777777	777774
   913	000645'	400000	000244'	QRIW:	TTAB EQFIX,RIQ,-1	;RIB PRIMARY PCB NO IO WAIT.
   914	000646'	777777	777773
   915	000647'	400000	000244'	QPSW:	TTAB EQFIX,PSQ,-1	;SAT PRIMARY PCB WAIT.
   916	000650'	777777	777772
   917	000651'	400000	000244'	QPRW:	TTAB EQFIX,PRQ,-1	;RIB PRIMARY PCB WAIT.
   918	000652'	777777	777771
   919	000653'	400000	000244'	QM2W:	TTAB EQFIX,M2Q,-1	;2 PCB WAIT.
   920	000654'	777777	777770
   921	000655'	400000	000244'	QFCW:	TTAB EQFIX,FCQ,-1	;FREE CORE WAIT QUEUE
   922	000656'	777777	777765
   923	000657'	400000	000244'	QDAW:	TTAB EQFIX,DAQ,-1	;DEV. ALLOC.(DISK)
   924	000660'	777777	777767
   925	000661'	400000	000244'	QCBW:	TTAB EQFIX,CBQ,-1	;CORE-BLOCK (DISK)
   926	000662'	777777	777766
   927	000663'	400000	000244'	QMTW:	TTAB EQFIX,MTQ,-1	;MAG TAPE
   928	000664'	777777	777764
   929	000665'	400000	000244'	QSLPW:	TTAB EQFIX,SLPQ,-1	;SLEEP M
   930	000666'	777777	777750
   931	000667'	400000	000244'	QAXW:	TTAB EQFIX,AXQ,-1	;AUX. CIRCUIT WAIT
   932	000670'	777777	777763
   933	000671'	400000	000244'	QACW:	TTAB EQFIX,ACQ,-1	;ACCOUNTING BUFFER WAIT
   934	000672'	777777	777762
   935	000673'	400000	000244'	QBPW:	TTAB EQFIX,BPQ,-1	;BLOCK I/O PORT WAIT
   936	000674'	777777	777761
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 21
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   937				;TRANSLATION TABLE FROM WAIT STATE TO SATISFIED STATE
   938				;GO TO HEAD OF PQ1 TO MINIMIZE VULNERABILITY TO ^C FOUL UP
   939				;RESET TOSMALL QUANTUM RUN TIME (ABOUT TO GO INTO IOWAIT ANYWAY)
   940
   941	000675'	000000	000244'	QMTS:	TTAB BQFIX,PQ1,QQYSD	;MAG TAPE
   942	000676'	000000*	777744
   943
   944	000677'	400000	000223'	QTIME:	PTTAB EQLINK,QTTAB,QQSTBL	;MOVE JOB TO LOWER Q
   945	000700'	000724'	000717'
   946					;WHEN QUANT. TIME EXCEEDED AND RESET QUANT. TIME
   947
   948	000701'	000000	000244'	QAXS:	TTAB BQFIX,PQ1,QQYSD	;AUX. CIRCUIT
   949	000702'	000000*	777744
   950
   951	000703'	000000	000244'	QBPS:	TTAB BQFIX,PQ1,QQYSD	;BLOCK I/O PORT WAIT
   952	000704'	000000*	777744
   953
   954	000705'	000000	000244'	QACS:	TTAB BQFIX,PQ1,QQYSD	;ACCOUNTING BUFFER
   955	000706'	000000*	777744
   956	000707'			QSIS:QRIS:QM2S:QPRS:QPSS::QDAS:QCBS:QHIP:QFCS:
   957	000707'	400000	000244'		TTAB EQFIX,PQ0,[1]	;HAVE SHARABLE RES FOR DISK
   958	000710'	002725'	777745
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 22
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   959				;ENTER PROCESSOR QS ACCORDING TO JOB SIZE
   960	000711'	000040	777744	QSTAB:	XWD ^D32,-PQ1	;PQ1 if 32 K or less            (was 4 K)
   961	000712'	000304	777743		XWD ^D196,-PQ2	;PQ2 if between 32 and 196 K    (was 16 K)
   962	000713'	000400	777742		XWD ^D256,-PQ3	;PQ3 if between 196 and 256 K
   963	000714'	000000	000000		Z
   964
   965				;PUT JOB FROM DIOW SAT OR IOW SAT IN Q IF HEAVY SWAP
   966	000715'	000005	777744	QSTAB1:	XWD ^D5,-PQ1
   967	000716'	000400	777743		XWD ^D256,-PQ2
   968
   969				;PUT JOB DOWN A Q IF EXCEEDS QUANT. TIME
   970	000717'	777745	777744	QTTAB:	XWD -PQ0,-PQ1
   971	000720'	777744	777743		XWD -PQ1,-PQ2
   972	000721'	777743	777742		XWD -PQ2,-PQ3
   973	000722'	777742	777743		XWD -PQ3,-PQ2	;BACK TO PQ2 TO COMPETE WITH IOWS JOBS
   974	000723'	000000	000000		Z
   975
   976				;QUANTUM TABLES
   977
   978				; QUANT. TIMES ACCORDING TO PROCESSOR Q:
   979
   980	000724'			RNQUNT::
   981	000724'			QQSTB1:
   982	000724'	000000	000000*	QQSTBL:	EXP	JFYS12##	;FROM PQ0 TO PQ1, 1/12 SECOND
   983	000725'	000000	000724*	QQSTAB:	EXP	JFYS12##	;FROM PQ1 TO PQ2, 1/12 SECOND
   984	000726'	000000	000000*		EXP	QQYTTY##	;FROM PQ2 TO PQ3, 1/2 SECOND
   985	000727'	000000	000726*		EXP	QQYTTY##	;FROM PQ3 TO PQ2, 1/2 SECOND
   986	000730'	000000	000000		Z
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 23
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

   987				INTERNAL ISCAN,OSCAN
   988	000731'			ISCAN:	;SCAN FOR INPUT
   989	000731'	777745	000324'		XWD -PQ0,QFOR	;SHARABLE DISK RESOURCE
   990	000732'	777741	000324'		XWD -CMQ,QFOR	;MONITOR COMMAND WHICH NEEDS CORE IMAGE IN CORE
   991	000733'	777744	000324'		XWD -PQ1,QFOR
   992	000734'	777743	000324'		XWD -PQ2,QFOR
   993	000735'	777742	000324'		XWD -PQ3,QFOR
   994	000736'	777770	000323'		XWD -M2Q,QFOR1
   995	000737'	777771	000323'		XWD -PRQ,QFOR1
   996	000740'	777772	000323'		XWD -PSQ,QFOR1	;BRING IN MP FIRST --EARLY TO HELP KEEP DISK UP TO SPEED
   997	000741'	777766	000323'		XWD -CBQ,QFOR1
   998	000742'	777767	000323'		XWD -DAQ,QFOR1	;LOOK FOR 1ST JOBS IN OTHER SHAR.DEV QUEUES
   999					XWD -ILWQ,QFOR1		;BRING 1ST IL JOB IN, HE'S PROBABLY AT HEAD OF ONE OF THE CLUB 
  1000	000743'	777752	000323'	INTERLOCK QUEUES
  1001	000744'	000000	000000		Z		;PATCH SPACE
  1002	000745'	000000	000000		Z
  1003	000746'	000000	000000		Z		;FINAL ZERO TO FLAG END
  1004
  1005	000747'			OSCAN:	;SCAN FOR OUTPUT
  1006	000747'	777746	000324'		XWD -STOPQ,QFOR	;UNRUNABLE JOBS FIRST
  1007	000750'	777750	000324'		XWD -SLPQ,QFOR
  1008	000751'	777755	000324'		XWD -TIOWQ,QFOR		;TTY IOW
  1009	000752'	777753	000333'		XWD -MLOWQ,QBAK
  1010	000753'	777752	000327'		XWD -ILWQ,QBAK1		;EVERYONE BUT FIRST.
  1011	000754'	777751	000333'		XWD -FLWQ,QBAK
  1012	000755'	777764	000333'		XWD -MTQ,QBAK
  1013	000756'	777763	000333'		XWD -AXQ,QBAK
  1014	000757'	777761	000327'		XWD -BPQ,QBAK1
  1015	000760'	777762	000333'		XWD -ACQ,QBAK
  1016	000761'	777767	000327'		XWD -DAQ,QBAK1
  1017	000762'	777766	000327'		XWD -CBQ,QBAK1
  1018	000763'	777772	000327'		XWD -PSQ,QBAK1
  1019	000764'	777771	000327'		XWD -PRQ,QBAK1
  1020	000765'	777770	000327'		XWD -M2Q,QBAK1
  1021	000766'	777757	000333'		XWD -MBWQ,QBAK		;MONITOR BUFFER I/O WAIT
  1022	000767'	777754	000333'		XWD -SWQ,QBAK		;PAGE WAIT Q, TAKE LAST JOB TO ENTER
  1023	000770'	777752	000323'		XWD -ILWQ,QFOR1		;NOW FIRST MEMBER OF IL QUEUE.
  1024								; ACTUALLY, WOULD HAVE TO SCAN CLUB DATA BASE, SINCE MANY INTER
  1025				LOCKS.
  1026								; BUT DON'T WANT TO LOCK IL PEOPLE IN CORE.
  1027	000771'	777767	000323'		XWD -DAQ,QFOR1
  1028	000772'	777766	000323'		XWD -CBQ,QFOR1
  1029	000773'	777772	000323'		XWD -PSQ,QFOR1
  1030	000774'	777771	000323'		XWD -PRQ,QFOR1
  1031	000775'	777770	000323'		XWD -M2Q,QFOR1
  1032	000776'	777742	000333'		XWD -PQ3,QBAK
  1033	000777'	777743	000333'		XWD -PQ2,QBAK
  1034	001000'	777744	000333'		XWD -PQ1,QBAK
  1035	001001'	777741	000333'		XWD -CMQ,QBAK
  1036	001002'	777745	000333'		XWD -PQ0,QBAK
  1037	001003'	000000	000000		Z			;PATCH SPACE
  1038	001004'	000000	000000		Z
  1039	001005'	000000	000000		Z			;FINAL ZERO TO FLAG END
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 23-2
SCHED1.MAC	 4-DEC-87 16:14		QCSS R. KRASIN

  1040
  1041	001006'	777745	000324'	SSCAN:	XWD -PQ0,QFOR
  1042	001007'	777744	000324'		XWD -PQ1,QFOR	;SCHEDULER'S SCAN FOR NEXT JOB TO RUN
  1043	001010'	777743	000324'		XWD -PQ2,QFOR
  1044	001011'	777742	000324'		XWD -PQ3,QFOR
  1045	001012'	000000	000000		Z		;FINAL ZERO TO FLAG END
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 24
SCHED1.MAC	 4-DEC-87 16:14		SWAPPER

  1046				SUBTTL SWAPPER
  1047
  1048				COMMENT \ GENERAL PLAN FOR SWAPPER
  1049
  1050				1) SERVICE SWAP IN DONE LIST, WHICH ADJUSTS SIPTOT AND
  1051					TRANSFERS SWAP DONE PAGES TO THEIR NEW LISTS.
  1052
  1053				2) SERVICE SWAP OUT DONE LIST.  PUT PAGE ON CORRECT LIST
  1054					(FREE, USED), INCREMENT THE CORRECT COUND (CLEAN
  1055					RESERVED OR CLEAN FREE) , WAKE UP ANY JOBS WAITING
  1056					FOR A COMPLETED PAGE TO FINISH SWAP OUT.
  1057
  1058				3) DO SWAP IN SCAN. BEGIN BY FILLLNG THE SWAP IN LIST UP
  1059					[TO ITS QUOTA, SIPQTA. **OBSOLETE /AA**]  THEN, FOR ALL JOBS IN THE
  1060					SWAP IN LIST, BRANCH TO THE APPROPRIATE PHASE OF
  1061					THEIR SWAP IN, WHICH IS EITHER BRINGING IN ALL
  1062					THE CONTEXT PAGES OR SCANNING THE LMAP TO SWAP IN
  1063					NEEDED PAGES.  DURING THE FIRST CYCLE IN
  1064					WHICH THE CONTEXT PAGES ARE IN, ALL LMAP SLOTS IN THE JOB'S
  1065					MWS THAT CAN BE ACTIVATED ARE ACTIVATED, AND SIPTOT IS
  1066					ADJUSTED TO MORE ACCURATELY REFLECT HOW MANY PAGES WILL BE SWAPPED
  1067					IN.  AT ANY POINT IN EITHER OF THE TWO PHASES OF
  1068					SWAP IN, IF A RESERVED PAGE IS NOT AVAILABLE YET, THIS
  1069					JOB IS PASSED UNTIL NEXT CYCLE, WHEN A RESERVED PAGE MAY
  1070					BE AVAILABLE. (THE REASON MORE JOBS ARE SCANNED
  1071					WHEN NO RESERVED PAGES ARE AVAILABLE DURING A SWAP CYCLE
  1072					RATHER THAN RETURNING FROM THE CYCLE IS IN CASE THERE
  1073					ARE JOBS IN THE SWAP IN LIST THAT DON'T NEED MORE
  1074					RESERVED PAGES TO ACTIVATE MORE OF THEIR MWS
  1075					(HAPPENS IF A JOB NEEDS A PAGE THAT ANOTHER JOB HAS
  1076					STARTED IN FOR ITSELF).  IF SIPTOT WAS ADJUSTED,
  1077					THE SCHEDULER QUEUES ARE SCANNED FOR NEW JOBS TO ADD TO THE
  1078					SWAP IN LIST.  THEN THE NEXT JOB ON THE SWAP IN LIST IS
  1079					LOOKED AT.
  1080
  1081				4) WHEN A JOB'S ENTIRE LMAP IS SCANNED, THE JOB IS TAKEN
  1082					OFF THE SWAP IN LIST AND SWAP IN DONE WILL WAKE THE
  1083					JOB UP AFTER THE LAST PAGE THAT THE JOB IS WAITING
  1084					FOR COMPLETES SWAP IN.
  1085				\
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 25
SCHED1.MAC	 4-DEC-87 16:14		SWAPPER

  1086				;EXTERNALS IN CORE1
  1087
  1088				EXTERNAL ACTLMS,DEALMS,FINXWS,GETCPA,GETDPA,GETRES,INSCHT,GETFRE
  1089				EXTERNAL NXSMWS,PUTLST,SRCCHT,MAPUPS,GETLMS,STOLMS,INCUSE,DECUSE
  1090				EXTERNAL UPSJOB,TSTVIR,INCCAV,PAGERR,IOSERR,NXTSTL
  1091
  1092				;EXTERNALS IN CORE1 FOR CORE PAGE LISTS AND COUNTS
  1093
  1094				EXTERNAL SIDLST,SODLST,CAVPGN,CRSPGN,DFRPGN,DFRLST,USELST
  1095				EXTERNAL CFR.N,DFR.N,USE.N,SID.N,SOD.N,SPR.N
  1096				EXTERNAL SCNLMC,FINLMC
  1097
  1098				;EXTERNALS IN PGY TABLES
  1099
  1100				EXTERNAL PGYLMJ,PGYSIP,PGYSOP,PGYSPT,PGYPGO
  1101				EXTERNAL PGYUSE,PGYADR,PGYATB,PGYDIO,PGYDRT,PGYFPL
  1102				EXTERNAL PGYSTS,PGPSIP,PGPSOP,PGPDRT
  1103
  1104				;EXTERNALS IN COMMON FOR LMAP DEFINITIONS
  1105
  1106				EXTERNAL LM3HDA,LMPACT
  1107				EXTERNAL LMPSUP,LMPVIR,LMYLMV,LMYLMJ,UP4LDA
  1108				EXTERNAL LMASRP
  1109
  1110				;EXTERNALS IN COMMON FOR UPT DEFINITIONS
  1111
  1112				EXTERNAL UPT,UPTEND,%UPS,%UPLMS,EPT,EPYPSM,%UPT.N
  1113				EXTERNAL UPTPBM,PBMMSK,UPTACP,UPTLDC,UPTJOB
  1114				EXTERNAL VPUMAX,NCTXPG,UPTRES
  1115				EXTERNAL USYLSP,USYRES,USYSIN,USYUWL,USYUWM
  1116
  1117				;EXTERNALS IN COMMON FOR JOB TABLE REFERENCES
  1118
  1119				EXTERNAL JBTSTS,JBTCTX,JBTICT,JBTFIT,CTXTAB
  1120				EXTERNAL JBYACT,JBYMWS,JBYSWS,PJBSTS,JBYCTR,JBYUWS
  1121				EXTERNAL JBTPGO
  1122
  1123				;EXTERNALS IN COMMON, MISCELLANEOUS
  1124
  1125				EXTERNAL CPOPJ,CPOPJ1,JOB,CURUPT,DSKPIF,DSKPIN,SAVE2
  1126				EXTERNAL MXPROT,PROT,PROT0,MINPCB,MAXPCB,ADRDUM
  1127
  1128				;EXTERNALS IN FILE SYSTEM
  1129
  1130				EXTERNAL GTSAPG,SWPENQ
  1131
  1132				;EXTERNALS IN CLOCK1
  1133
  1134				EXTERNAL REQUE
  1135
  1136				EXTERNAL JOBATB,MBIT,RBREAL,GTSPAG,ATBMWC,ATBSPT
  1137				EXTERNAL ATPDUM,ATPMXU,ATBDUM,ATBUMC,LMPCUR,LMPMXW
  1138				EXTERNAL DABBIT,LM3ATB,JBTUPM,LMMERR,ATBSTS
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 25-2
SCHED1.MAC	 4-DEC-87 16:14		SWAPPER

  1139				DEFINE LSTCHK<JFCL>
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 26
SCHED1.MAC	 4-DEC-87 16:14		SWAPPER

  1140				;SERVICE THE SWAP IN DONE LIST.  THIS IS ADDED TO BY
  1141				; DISK INTERRUPT LEVEL.  CALLED BY SCHEDULER BEFORE REQUEUING
  1142				; JOBS, SINCE SWAP OUT DONE REQUEUES JOBS.  ALSO CALLED BY
  1143				; ONCE AFTER ALL DONE WITH ONCE PCB I/O.
  1144				; MINPCB, MAXPCB MUST BE SETUP.
  1145
  1146	001013'			SWPCHK::
  1147	001013'	550140	000000*	SIDCHK:	HRRZ	PG,SIDLST	;GET FIRST ELEMENT ON SWAP IN DONE LIST
  1148	001014'	322140	001043'		JUMPE	PG,SODCHK	;NOTHING TO DO, GO CHECK SWAP OUT DONE
  1149	001015'	135600	000000*	SIDLP1:	LDB	P1,PGYFPL	;GET NEXT PAGE ON SWAP IN DONE LIST
  1150	001016'	315140	000000*		CAMGE	PG,MINPCB	;TOO LOW?
  1151	001017'	256000	000000'		 STOPCD			;YES            ;;SIDLP1+2
  1152	001020'	317140	000000*		CAMG	PG,MAXPCB	;IS IT A PCB?
  1153	001021'	254000	001024'		JRST	SIDL1A		;YES, DON'T ADJUST SIPTOT
  1154	001022'	375000	002041'		SOSGE	SIPTOT		;YES, DECREMENT
  1155	001023'	256000	000000'		 STOPCD			;TOO MANY TIMES ;;SIDLP1+6
  1156	001024'	400300	000000	SIDL1A:	SETZ	T1,
  1157	001025'	137300	000000*		DPB	T1,PGYSIP	;CLEAR PGYSIP FOR THIS PAGE
  1158	001026'	201440	000000*	SIDLP2:	MOVEI	T4,USE.N	;ASSUME IT GOES ONTO USED LIST
  1159	001027'	135300	000000*		LDB	T1,PGYUSE	;GET CURRENT USE COUNT
  1160	001030'	326300	001034'		JUMPN	T1,SIDLP3	;JUMP IF BEING USED BY SOMEONE
  1161	001031'	350000	002077'		AOS	FRESID		;WHOEVER STARTED THIS IN DISAPPEARED.
  1162	001032'	201440	000000*		MOVEI	T4,CFR.N	;OOPS, DEACTIVATED IT BEFORE IT WAS
  1163								; DONE. CAN'T BE DIRTY, SINCE
  1164								; NO ONE WAS ALLOWED TO WRITE INTO IT.
  1165	001033'	260040	000000*		PUSHJ	P,INCCAV	;MAKE IT CLEAN AVAIL (OR ON I/O POOL)
  1166	001034'	700600	000000*	SIDLP3:	DSKOFF	;STOP SWPINT FROM CHANGING SIDLST
  1167	001035'	260040	000000*		PUSHJ	P,PUTLST	;CANNOT BE FREE LIST, SINCE
  1168								;CAN'T REMOVE PAGE WHILE ITS BEING
  1169								;SWAPPED IN
  1170	001036'	700600	000000*		DSKON	;BACK ON
  1171	001037'	313140	001020*		CAMLE	PG,MAXPCB	;IF A PCB, FINPCB FIXED IT ALREADY.
  1172	001040'	260040	001102'		PUSHJ	P,PAGWAK	;WAKE UP ANY WAITERS.
  1173	001041'	332140	000014		SKIPE	PG,P1		;GET NEXT PAGE TO CHECK
  1174	001042'	254000	001015'		JRST	SIDLP1		;GO IF THERE IS ONE
  1175								; ELSE FALL INTO SODCHK
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 27
SCHED1.MAC	 4-DEC-87 16:14		SWAPPER

  1176				;HERE TO CHECK SWAP OUT DONE LIST. WAKE UP ALL JOBS THAT
  1177				; WERE IN PAGE WAIT THAT ARE IN THE I/O WAIT LIST FOR THE CORE PAGE,
  1178				; AND PUT THE CORE PAGE ON EITHER THE FREE OR USE LIST ACCORDING
  1179				; TO ITS USE COUNT.
  1180
  1181	001043'	550140	000000*	SODCHK:	HRRZ	PG,SODLST	;GET FIRST CORE PAG ON LIST
  1182	001044'	322140	000155*		JUMPE	PG,CPOPJ	;NONE, GO SCAN FOR SWAP IN
  1183	001045'	400300	000000	SODLP1:	SETZ	T1,		;NO MORE SWAP OUT IN PROGRESS
  1184	001046'	137300	000000*		DPB	T1,PGYSOP
  1185
  1186	001047'	135600	001015*		LDB	P1,PGYFPL	;GET NEXT PAGE IN LIST
  1187	001050'	135300	001027*		LDB	T1,PGYUSE	;IS THIS PAGE BEING USED NOW?
  1188								; (MAY NOT HAVE BEEN WHEN WE STARTED)
  1189	001051'	322300	001054'		JUMPE	T1,SODLP2	;JUMP IF NOT
  1190	001052'	201440	001026*		MOVEI	T4,USE.N	;YES, IT GOES ONTO USE LIST
  1191	001053'	254000	001072'		JRST	SODLP6		;GO PUT INTO THE LIST
  1192	001054'	135300	000000*	SODLP2:	LDB	T1,PGYDRT	;WAS IT DIRTIED WHILE IT WAS ON ITS
  1193								; WAY OUT? (RES HAD TO BE ZERO IF SO)
  1194	001055'	322300	001061'		JUMPE	T1,SODLP3	;JUMPN IF NOT
  1195	001056'	201440	000000*		MOVEI	T4,DFR.N	;YES, THEN IT GOES ON DIRTY FREE LIST INSTEAD
  1196	001057'	350000	000000*		AOS	DFRPGN		;ONE MORE DIRTY FREE PAGE
  1197	001060'	254000	001072'		JRST	SODLP6		;GO PUT IT ON DIRTY FREE LIST
  1198	001061'	337000	002037'	SODLP3:	SKIPG	RIPPGN		;STILL NEED TO FILL UP CRSPGN?
  1199	001062'	254000	001066'		JRST	SODLP4		;NO, GO INCREMENT CAVPGN
  1200	001063'	370000	002037'		SOS	RIPPGN		;ONE LESS RESERVED IN PROGRESS
  1201	001064'	350000	000000*		AOS	CRSPGN		;ONE MORE RESERVED CLEAN
  1202	001065'	254000	001071'		JRST	SODLP5		;AND GO PUT ONTO CLEAN FREE LIST
  1203	001066'	375000	002040'	SODLP4:	SOSGE	CAPPGN		;ONE LESS CLEAN AVAIL IN PROGRESS
  1204	001067'	256000	000000'		 STOPCD			;LIST AND COUNTS DID NOT AGREE  ;;SODLP4+1
  1205	001070'	260040	001033*		PUSHJ	P,INCCAV	;ONE MORE CLEAN AVAIL OR I/O PAGE.
  1206	001071'	201440	001032*	SODLP5:	MOVEI	T4,CFR.N	;PUT INTO THE CLEAN FREE LIST
  1207	001072'	700600	001034*	SODLP6:	DSKOFF	;MAKE SURE SWPINT DOESNT CHANGE SODLST
  1208	001073'	260040	001035*		PUSHJ	P,PUTLST	;PUT INTO THE LIST
  1209	001074'	700600	001036*		DSKON
  1210	001075'	313140	001037*		CAMLE	PG,MAXPCB	;IF ITS A PCB, FINPCB CALLED ALREADY.
  1211	001076'	260040	001102'		PUSHJ	P,PAGWAK	;WAKE UP ALL JOBS WAITING FOR THIS PAGE.
  1212	001077'	332140	000014	SODLP8:	SKIPE	PG,P1		;GET NEXT PAGE, IF ANY
  1213	001100'	254000	001045'		JRST	SODLP1		;THERE IS ONE, GO DO IT
  1214	001101'	263040	000000		POPJ	P,		;RETURN TO SCHEDULER.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 28
SCHED1.MAC	 4-DEC-87 16:14		SWAPPER

  1215				COMMENT ;@@SUBROUTINE PAGWAK
  1216				@@PURPOSE WAKE UP ALL JOBS ON WAIT QUEUE FOR A CORE PAGE
  1217				CALLED FROM SWAP IN DONE, SWAP OUT DONE, DIRECT I/O DONE
  1218				(WHEN PGYDIO GETS DECREMENTED AND GOES TO ZERO.)
  1219				@@ENTRY CORE PAGE NUMBER IN PG
  1220				CAN BE CALLED FROM UUO, CLOCK, OR INTERRUPT LEVEL.
  1221				@@ACCUM SMASHES J, T1,T2. PRESERVES P1-P4, T3, T4.
  1222				@@EXIT ALL JOBS ON PGYPGO LIST REQUEUED.
  1223				@@RESTRICTIONS ASSUMES ONLY ONE WAKER CAN EXIST FOR A CERTAIN
  1224				PAGE AT A TIME (TRUE BECAUSE SWAP IN, SWAP OUT, AND
  1225				DIRECT I/O HAVE TO BE MUTUALLY EXCLUSIVE OF EACH OTHER.)
  1226				ASSUMES THAT PAGWAT IS ONLY CALLED AT UUO LEVEL, AND
  1227				THAT IT TURNS OFF PI SYSTEM WHEN ADDING A JOB TO JBTPGO.
  1228				@@FUNCTION LOOP THRU JBTPGO AND REQUEUE ALL JOBS
  1229				@@;
  1230
  1231	001102'	135100	000000*	PAGWAK::LDB	J,PGYPGO	;GET FIRST JOB TO WAKE
  1232	001103'	322100	001044*		JUMPE	J,CPOPJ		;IF NONE, JUST RETURN.
  1233	001104'	201340	000003		MOVEI	T2,SSQ		;GET READY TO TAKE JOBS OUT OF WAIT.
  1234
  1235	001105'	135300	000304*	PAGWK1:	LDB	T1,PJBSTS	;Get previous job state
  1236	001106'	302300	000024		CAIE	T1,SWQ		;Had better be...
  1237	001107'	256000	002726'		 STOPCD (.,JOB,PAGWK2,,<Job not coming out of SW queue at PAGWK1+2>)
  1238	001110'	137340	001105*		DPB	T2,PJBSTS	;CHANGE STATE CODE
  1239	001111'	260040	000045*		PUSHJ	P,REQUE		;REQUE THE JOB
  1240	001112'	550102	000000*		HRRZ	J,JBTPGO(J)	;GET NEXT JOB ON LIST
  1241	001113'	326100	001105'		JUMPN	J,PAGWK1	;AND GO WAKE IT UP
  1242	001114'	137100	001102*		DPB	J,PGYPGO	;NO MORE WAITERS.
  1243	001115'	263040	000000		POPJ	P,		;RETURN.
  1244
  1245	001116'	000000	000000	BADSS:	0			;Count of number of times job went to
  1246								;SS state from something other than SW
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 29
SCHED1.MAC	 4-DEC-87 16:14		SWAP IN SCAN

  1247				SUBTTL SWAP IN SCAN
  1248
  1249				COMMENT \
  1250
  1251				THE SWAP IN SCAN'S OUTLINE IS AS FOLLOWS:
  1252
  1253				1) CHECK TO SEE IF ANOTHER JOB SHOULD BE ADDED TO THE
  1254				  SWAP IN LIST. IF SO, SCAN FOR ANOTHER JOB TO ADD.
  1255
  1256				2) FOR EACH JOB IN THE SWAP IN LIST, DISPATCH ON THE JOB'S
  1257				  SWAPPER STATE.  THE PHASES OF A JOB'S SWAP IN ARE AS FOLLOWS:
  1258					A) CONTEXT PAGE CREATION PHASE.  IF CONTEXT PAGES HAVE
  1259					  ALREADY BEEN CREATED, GO TO CONTEXT PAGE ACTIVATE SCAN.
  1260					  ELSE, TRY TO ALLOCATE DISK PAGES FOR THE CONTEXT
  1261					  PAGES.
  1262
  1263					B) CONTEXT PAGE ACTIVATE SCAN. FOR ALL CONTEXT PAGES,
  1264					  TEMPORARILY INCREMENT THE USE COUNTS FOR ALL CONTEXT
  1265					  PAGES THAT HAPPEN TO BE IN CORE, SO THAT WHEN
  1266					  SWPRES IS CALLED IT WILL NOT PICK ONE OF THEM TO
  1267					  GIVE TO THIS JOB AS A RESERVED PAGE.
  1268
  1269					C) CONTEXT PAGE SWAP IN SCAN. THIS PHASE SOMETIMES SPANS
  1270					  SEVERAL SWAPPER CYCLE. CONTINUE TO INCREMENT USE
  1271					  COUNTS FOR CONTEXT PAGES UNEXPECTEDLY FOUND IN CORE,
  1272					  AND START CONTEXT PAGE SWAP INS IF THERE ARE ENOUGH
  1273					  RESERVED PAGES AVAILABLE TO DO SO. WHILE DOING THIS,
  1274					  CHECK TO SEE IF ALL CONTEXT PAGES ARE FINALLY IN.
  1275					  IF THEY ARE, ACTIVATE ALL THE EXEC PER-PROCESS SLOTS
  1276					  FOR THE CONTEXT PAGES, AND DECREMENT THE USE COUNTS
  1277					  THAT WERE TEMPORARILY INCREMENTED BEFORE.
  1278
  1279					D) LMAP ACTIVATE SCAN.  ACTIVATE ANY PAGES THAT THE
  1280					  JOB WANTS (IN MWS) THAT HAPPEN TO BE IN CORE.
  1281					  WHILE DOING THIS, COUNT UP THE NUMBER OF RESERVED PAGES
  1282					  NEEDED TO SWAP IN THE WHOLE MWS. TRY TO RESERVE THIS
  1283					  MANY. IF NOT, HAVE TO GIVE BACK ANY STOLEN RESERVED
  1284					  PAGES (EITHER SOP+RES OR CRS TYPF).
  1285
  1286					E) LMAP SWAP IN SCAN. NOW THAT ENOUGH PAGES ARE RESERVED,
  1287					  SCAN THE LMAP AGAIN. ACTIVATE ANY PAGES UNEXPECTEDLY FOUND
  1288					  IN CORE. IF RESERVED PAGE IS AVAILABLE, START SWAP INS.
  1289					  IF NO MORE RESERVED PAGES ARE AVAILABLE FOR THIS CYCLE,
  1290					  EXIT SWAPPER TILL NEXT CYCLE, WHEN MORE RESERVED PAGES
  1291					  MAY BE AVAILABLE. (THUS, THIS PHASE CAN SPAN ACROSS
  1292					  MANY SWAPPER CYCLES).  WHEN THE SCAN IS FINISHED,
  1293					  THERE MAY BE RESERVED PAGES LEFT OVER (OR THEY MAY HAVE
  1294					  RUN OUT BEFORE THE JOB'S WHOLE MWS WAS TAKEN
  1295					  CARE OF).  THIS HAPPENS WHEN THE SWAP IS FOR A PRE-REFERENCE
  1296					  AND THE JOB CHANGED ITS MWS SIZE, OR WHEN SWAPPING ACTIVITY
  1297					  FOR OTHER JOBS HAS BROUGHT PAGES INTO CORE THAT THIS
  1298					  JOB NEEDS.
  1299
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 29-2
SCHED1.MAC	 4-DEC-87 16:14		SWAP IN SCAN

  1300					F) LMAP SWAP IN SCAN COMPLETE. TURN OFF
  1301					  SWPINP, MRQ AND PRF FOR THE JOB, TAKE THE JOB OUT OF THE
  1302					  SWAP IN LIST, SETUP IN CORE PROTECT TIME TO THE
  1303					  CORRECT VALUE.
  1304
  1305				BEFORE STEPPING TO THE NEXT JOB IN STEP 2, STEP 1 IS REPEATED
  1306				  IF THERE HAS BEEN A CHANGE IN THE NUMBER OF PAGES CURRENTLY
  1307				  BEING SWAPPED IN.
  1308				\
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 30
SCHED1.MAC	 4-DEC-87 16:14		SWAP IN SCAN

  1309				;BEGIN A SWAPPER CYCLE.  INITIALIZE SWAPPER, BEGIN SCAN OF
  1310				;SCNED QUEUES
  1311
  1312	001117'			SWAP:
  1313
  1314	001117'	350000	002053'	SWISCN:	AOS	SWCCNT		;CALLED ONCE AGAIN.
  1315	001120'	260040	002501'		PUSHJ	P,SRSINI	;INITIALIZE SWAPPER
  1316	001121'	201240	000731'		MOVEI	U,ISCAN		;START THE SCAN OUT FRESH
  1317	001122'	550100	000000*		HRRZ	J,JBTFIT	;INITIALIZE FIT TO FIRST JOB ON SWAP IN
  1318	001123'	202100	002042'		MOVEM	J,FIT		;LIST, IF ANY.
  1319
  1320				;HERE AT BEGINNING OF ANY CYCLE TO SCAN SCHED QUEUES
  1321				;FOR ELIGIBLE JOBS TO PUT ON FIT LIST.  ALLOW A NEW BIGFIT
  1322				;JOB ONTO LIST IF ONE NOT ALREADY THERE.
  1323
  1324	001124'	265200	000317'	SWISC0:	JSP	F,QSCAN		;START THE SCAN OUT
  1325	001125'	254000	001154'		  JRST	SWISC1		;NONE LEFT
  1326
  1327				;HERE ALSO VIA JRST (M) FROM SWINJ2 &FF WHEN THERE ARE MORE JOBS
  1328				;WHICH COULD BE SCANNED HERE TO BE PUT ON S.I.L.
  1329				;BEFORE CONTEXT PAGES ARE SCANNED,
  1330				; NUMBER OF PAGES THAT HAVE TO BE SWAPPED IN FOR A JOB IS ASSUMED
  1331				; TO BE THE SIZE OF THE JOB'S MWS.  WHEN CONTEXT PAGES ARE FINALLY
  1332				; SWAPPED IN, NUMBER OF PAGES ACTUALLY NEEDED MAY DECREASE, THUS
  1333				; THE CHECK ON WHETHER OR NOT TO ADD TO THE SWAP IN LIST MUST
  1334				; BE RE-EXECUTED.  FIT CONTAINS NEXT JOB WE WERE GOING TO DO
  1335				; IN SWAP IN LIST, OR 0.
  1336
  1337	001126'	200302	000152*		MOVE	T1,JBTSTS(J)	;PUT JOB ON SWAP IN (FIT) LIST
  1338	001127'	606300	002000		TRNN	T1,SWPINP	;UNLESS ALREADY THERE
  1339	001130'	616300	002731'		TDNN	T1,[MRQ,,PRF]	;AND IT HAS TO WANT TO BE THERE
  1340	001131'	254013	000000		JRST	(M)		;JOB DOESN'T QUALIFY, SCAN SOME MORE
  1341
  1342	001132'	332000	002043'		SKIPE	BIGFIT		;IF SWAPPER ALREADY HAS A BIG JOB
  1343	001133'	606300	001000		TRNN	T1,SETICP	;AND CURRENT CANDIDATE IS A BIGGIE,
  1344	001134'	254000	001136'		JRST	.+2		;WE WILL MARK HIM, HE'S GOING ONTO SWAP IN LIST.
  1345	001135'	254013	000000		JRST	(M)		;FORGET HIM.  ALLOW ONLY 1 BIGFIT
  1346								;JOB THRU AT A TIME, AND ANY NUMBER
  1347								;OF OTHER MRQ'D JOBS
  1348	001136'	606300	001000		TRNN	T1,SETICP	;HE'S GOING ON:  IS HE A BIGGIE?
  1349	001137'	254000	001142'		JRST	SWISCA		;NO,SWOSCN NEVER ATE HIM
  1350	001140'	350000	002101'		AOS	BIGCNT		;YES,RECORD A NEW ONE SELECTED
  1351	001141'	202100	002043'		TRACE	(3,<MOVEM J,BIGFIT>) ;YES, NEW ONE.
  1352	001142'	201300	002000	SWISCA:	MOVEI	T1,SWPINP
  1353	001143'	436302	001126*		IORM	T1,JBTSTS(J)	;RECORD SWPINP SET
  1354	001144'	201300	000000		MOVEI	T1,SWSCCP	;INIT THE SWAPPING STATE
  1355	001145'	137300	000000*		DPB	T1,JBYSWS
  1356	001146'	260040	002571'		TRACE(4,<PUSHJ	P,PUTSIL>)	;PUT JOB ON SWAP IN LIST
  1357	001147'	350000	002054'		AOS	SIJCNT		;HAVE SELECTED ANOTHER JOB.
  1358	001150'	336000	002042'		SKIPN	FIT		;IF SWAP IN LIST SCAN WAS AT
  1359								; BEGINNING OR END,
  1360	001151'	202100	002042'		MOVEM	J,FIT		;CONTINUE SCAN WITH THIS JOB
  1361								; ELSE WITH ONE WE WERE GOING TO DO NEXT.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 30-2
SCHED1.MAC	 4-DEC-87 16:14		SWAP IN SCAN

  1362	001152'	135300	000000*		LDB	T1,JBYMWS	;ESTIMATE # SWAP IN PAGES TO BE
  1363	001153'	273300	002041'		ADDB	T1,SIPTOT	;ALL OF MWS (CORRECTED AFTER CONTEXT PGES ARE IN)
  1364								;DO NOT ADD TO SWAP IN LIST UNTIL
  1365								; WE SEE WHAT WE CAN DO FOR THE
  1366								; JOB WE JUST ADDED. WE MAY NEED
  1367								; THE NEXT JOB WE WERE GOING TO SELECT FOR SWAPPING OUT.
  1368	001154'	261040	000005	SWISC1:	PUSH	P,U		;SAVE PLACE IN QUEUES ON THE STACK
  1369	001155'	261040	000013		PUSH	P,M
  1370	001156'	261040	000004		PUSH	P,F
  1371	001157'	261040	000002		PUSH	P,J
  1372	001160'	200100	002042'		MOVE	J,FIT		;RESTORE NEXT JOB TO TRY
  1373								;AND FALL INTO DISPATCH.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 31
SCHED1.MAC	 4-DEC-87 16:14		PHASE DISPATCH

  1374				SUBTTL PHASE DISPATCH
  1375
  1376				;HERE FROM SWINJ2 IF WE ARE FINISHED SCANNING THE QUEUES
  1377				; OR ARE UP TO THE SWAP IN QUOTA. NEXT JOB, IF ANY, IN J
  1378				; POSITION IN QUEUES (U,F,M) STILL ON STACK.
  1379
  1380	001161'	255000	000000	SWISC2:	LSTCHK			;CHECK CORE PAGE LISTS
  1381	001162'	322100	001170'		JUMPE	J,SWIXIT	;IF NO MORE LEFT, EXIT FROM SWAPPER
  1382
  1383				;DISPATCH ON NEXT JOB'S SWAPPING STATE.
  1384
  1385	001163'	135400	001145*		LDB	T3,JBYSWS	;GET SWAPPER STATE FOR THIS JOB
  1386	001164'	254030	001165'		JRST	@SWIDSP(T3)	;DISPATCH TO APPROPRIATE SWAP IN ROUTINE
  1387
  1388				;TABLE OF SWAP IN ROUTINES, INDEXED BY STATE
  1389
  1390	001165'			SWIDSP:
  1391	000000				PHASE	0
  1392	001165'	000000	001175'	SWSCCP:!SWICCP			;CREATE CONTEXT PAGES
  1393	001166'	000000	001304'	SWSCSI:!SWICSI			;GET ALL CONTEXT PAGES IN
  1394	001167'	000000	001612'	SWSSWI:!SWISWI			;SWAP IN MORE MWS PAGES
  1395
  1396	001170'				DEPHASE
  1397
  1398
  1399				;HERE WITH QUEUE SCANNING INFO ON STACK AND WANT TO RETURN
  1400				; FROM SWAPPER
  1401
  1402	001170'	262040	000002	SWIXIT:	POP	P,J
  1403	001171'	262040	000004		POP	P,F
  1404	001172'	262040	000013		POP	P,M
  1405	001173'	262040	000005		POP	P,U
  1406	001174'	263040	000000		POPJ	P,
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 32
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PAGE CREATION

  1407				SUBTTL CONTEXT PAGE CREATION
  1408
  1409				;HERE TO ALLOCATE DISK SPACE FOR CONTEXT PAGES IF NOT ALREADY
  1410				; DONE. DISK PAGES ALREADY ALLOCATED UNLESS JOB IS JUST LOGGING
  1411				; IN.  MAY HAVE TO WAIT UNTIL SAT GETS INTO CORE.  ALSO,
  1412				; MAY BE OUT OF DISK SPACE, IN WHICH CASE LEAVE JOB ON SWAP IN
  1413				; LIST UNTIL CAN GET SOME ROOM.
  1414
  1415	001175'	205300	200000	SWICCP:	MOVSI	T1,CTXCEX	;CONTEXT PAGES EXIST ALREADY
  1416	001176'	612302	000000*		TDNE	T1,JBTCTX(J)	;
  1417	001177'	254000	001254'		JRST	SWICAS		;YES, RESERVE FOR SWAP IN
  1418	001200'	205300	100000		MOVSI	T1,CTXVIR	;NO, GET READY TO MARK THEM VIRGIN
  1419	001201'	436302	001176*		IORM	T1,JBTCTX(J)	;THEY ARE VIRGIN. COPY FROM UPT
  1420								; AND CLEAR JUST BEFORE ACTIVATING.
  1421	001202'	137300	001152*		DPB	T1,JBYMWS	;ZERO MWS SIZE, IT HAS TO BE 0
  1422	001203'	205500	000000*		MOVSI	W,-NCTXPG	;AOBJN POINTER TO CTXTAB
  1423	001204'	400600	000000		SETZ	P1,		;CALL GTSAPG FIRST TIME.
  1424	001205'	201300	000000*		MOVEI	T1,SRPNDS
  1425	001206'	612300	000000*		TDNE	T1,STRDDB+STRBTS	;IF PRIOR TO DSKCLN,
  1426	001207'	254000	001235'		JRST	SWICND		;CREATE CONTEXT PAGES WITHOUT DPS ATTACHED.
  1427
  1428	001210'	135352	000000*	SWICC1:	LDB	T2,CTXTAB(W)	;GET DISK ADDRESS, IF ANY
  1429	001211'	326340	001227'		JUMPN	T2,SWICC3	;ALREADY ALLOCATED
  1430	001212'	510400	000012		HLLZ	T3,W		;T3 GETS -VE PAGES,,0
  1431	001213'	217000	000010		MOVMS	T3		;# PAGES,,0
  1432	001214'	260040	000000*		PUSHJ	P,JOBATB	;GET JOB'S ATB ADDRESS
  1433	001215'	540400	000006		HRR	T3,T1		;T3 HAS # PAGES,,ATB ADDRESS
  1434	001216'	201300	000000*		MOVEI	T1,MBIT		;JUST MARK AS MAPPED
  1435	001217'	200340	000014		MOVE	T2,P1		;GET LAST PAGE ALLOCATED OR ZERO.
  1436	001220'	260040	000000*		PUSHJ	P,GTSPAG	;GET AS MANY PAGES AS WE CAN
  1437	001221'	254000	001747'		  JRST	SWINJ2		;COULD NOT, TRY NEXT CYCLE
  1438
  1439	001222'	137352	001210*	SWICC2:	DPB	T2,CTXTAB(W)	;OK, ITS ALLOCATED NOW.
  1440	001223'	350000	000007		AOS	T2		;POSSIBLE NEXT PAGE WE HAVE
  1441	001224'	363400	001227'		SOJLE	T3,SWICC3	;JUMP IF NO MORE IN THIS GROUP
  1442	001225'	253500	001222'		AOBJN	W,SWICC2	;HAVE ANOTHER, BETTER HAVE ANOTHER
  1443								; CONTEXT PAGE TO DO
  1444	001226'	256000	000000'		 STOPCD			;DO NOT, CRASH. ;;SWICC2+4
  1445	001227'	200600	000007	SWICC3:	MOVE	P1,T2		;REMEMBER NEXT PAGE TO ASK FOR.
  1446	001230'	661600	000000*		TLO	P1,RBREAL	;MAKE ACCEPTABLE TO GTSPAG.
  1447	001231'	253500	001210'		AOBJN	W,SWICC1	;STEP TO NEXT CP
  1448	001232'	205300	200000		MOVSI	T1,CTXCEX	;NOW THEY EXIST
  1449	001233'	436302	001201*		IORM	T1,JBTCTX(J)
  1450	001234'	254000	001254'		JRST	SWICAS		;GO BRING THEM IN.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 33
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PAGE CREATION

  1451				;HERE IF DSKCLN HASN'T RUN YET TO CREATE CONTEXT PAGES.
  1452				; DO NOT USE ANY DISK PAGES, JUST GET CORE AND SETUP PGYADR
  1453				; WITH "DUMMY" ADDRESSES.
  1454
  1455	001235'	400600	000000	SWICND:	SETZ	P1,		;RESERVED PAGE NEEDED COUNT SET TO 0.
  1456	001236'	200700	000000*		MOVE	P3,EPYPSM	;POINTER TO %UPS SLOTS [EPTPTR(%UPS.N-1)]
  1457	001237'	200740	000000*		MOVE	P4,ADRDUM
  1458	001240'	260040	000000*	SWICN1:	PUSHJ	P,GETFRE	;GET A CP
  1459	001241'	256000	000000'		 STOPCD			;CRASH IF NONE AVAILABLE        ;;SWICN1+1
  1460	001242'	260040	001301'		PUSHJ	P,INCCTX	;INCREMENT USE COUNT, ITS DECREMENTED LATER.
  1461	001243'	137740	000000*		DPB	P4,PGYADR	;SETUP DUMMY DISK ADDRESS CODE
  1462	001244'	137752	001222*		DPB	P4,CTXTAB(W)	;SETUP IN JBTCTX TOO.
  1463	001245'	201343	520000		MOVEI	T2,PGE.A!PGE.W!PGE.C(PG)
  1464	001246'	136340	000016		IDPB	T2,P3		;ANOTHER CONTEXT PAGE ADDRESSABLE
  1465	001247'	253500	001240'		AOBJN	W,SWICN1	;LOOP FOR ALL CONTEXT PAGES
  1466	001250'	205300	200000		MOVSI	T1,CTXCEX	;MARK AS EXISTENT NOW
  1467	001251'	436302	001233*		IORM	T1,JBTCTX(J)
  1468	001252'	701220	000000*		CLRPTA			;PUT NEW MAPPING INTO EFFECT
  1469	001253'	254000	001374'		JRST	SWIC7A		;GO SETUP UPSJOB, CONTEXT DATA.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 34
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PAGE ACTIVATE SCAN

  1470				SUBTTL CONTEXT PAGE ACTIVATE SCAN
  1471				;HERE TO SEE HOW MANY PAGES WE NEED TO RESERVE IN ORDER
  1472				; TO BRING IN ALL THE JOB'S CONTEXT PAGES.
  1473				; INCREMENT USE COUNTS FOR CONTEXT PAGES IN CORE, ASSUMING
  1474				; THERE WILL BE ENOUGH RESERVED PAGES AVAILABLE, SO THAT WHEN
  1475				; SWPRES IS CALLED IT WILL NOT TAKE A CONTEXT PAGE
  1476				; THAT WE NEED FOR THIS JOB IN ORDER TO RESERVE A PAGE FOR
  1477				; ANOTHER CONTEXT PAGE FOR THE JOB WHICH IS NOT IN CORE.
  1478				;
  1479				;A PAGE IS RESERVED FOR EVERY CONTEXT PAGE
  1480				; 1) NOT IN CORE
  1481				; 2) SWAP OUT IN PROGRESS, CLEAN AND CAPPGN = 0
  1482				; 3) PAGE IS FREE AND CLEAN, BUT CAVPGN = 0 (NO FREE PAGES AVAILABLE, ALL RESERVED)
  1483				;
  1484				;SEPARATE COUNTS ARE KEPT FOR EACH OF THE THREE CASES
  1485				; ABOVE, SO THAT IF SWPRES CANNOT RESERVE THE REQUESTED AMOUNT
  1486				; OF PAGES, SWICRP CAN GIVE BACK THE STOLEN RESERVED PAGES.
  1487				; THESE STOLEN RESERVED PAGES WERE EITHER STOLEN FROM RIPPGN
  1488				; OR FROM CRSPGN, DEPENDING ON WHETHER OR NOT
  1489				; SWAP OUT WAS IN PROGRESS FOR THEM.
  1490				;
  1491				;IF PAGE IS CLEAN-FREE AND THERE ARE CLEAN-FREE-AVAILABLE
  1492				; PAGES LEFT, DON'T RESERVE, BUT DECREMENT COUNT OF CLEAN-FREE-
  1493				; AVAILABLE PAGES.  IF CORE PAGE FOUND IS DIRTY AND FREE,
  1494				; JUST DECREMENT COUNT OF DIRTY FREE PAGES.
  1495
  1496	001254'	335002	001251*	SWICAS:	SKIPGE	JBTCTX(J)	;ALL IN (CHECK CTXCIN)
  1497					JRST	[SETZ P1,	;YES, START WITH 0 RESERVED PAGES
  1498						 PUSHJ P,MAPUPS	;MAKE SURE JOB'S UPT IS ADDRESSABLE.
  1499	001255'	254000	002732'			 JRST SWILAS]	;AND GO START LMAP ACTIVATE SCAN.
  1500
  1501	001256'	403600	000015		SETZB	P1,P2		;P1 HAS NUMBER OF PAGES NOT IN CORE
  1502								; P2 HAS NUMBER OF RESERVED SWAP
  1503								; OUT PAGES STOLEN
  1504	001257'	400000	000000		SETZ	S,		;S HAS NUMBER OF CLEAN RESERVED PAGES STOLEN
  1505	001260'	201500	777777*		MOVEI	W,NCTXPG-1	;HIGHEST CONTEXT PAGE INDEX
  1506
  1507	001261'	135352	001244*	SWICA1:	LDB	T2,CTXTAB(W)	;GET DISK PAGE ADDRESS
  1508	001262'	260040	000000*		PUSHJ	P,SRCCHT	;IN CORE?
  1509	001263'	344600	001266'		  AOJA	P1,SWICA2	;NO, COUNT IT AND CHECK NEXT
  1510
  1511				;ASSUME WE WILL GET ENOUGH RESERVED PAGES. IF NOT, HAVE TO
  1512				; BACK OUT AT SWICRP
  1513
  1514	001264'	201440	001301'		MOVEI	T4,INCCTX	;ROUTINE TO CALL TO NAIL DOWN
  1515	001265'	260040	002507'		PUSHJ	P,NAILIT	;INCREMENT USE COUNT, IF POSSIBLE.
  1516	001266'	365500	001261'	SWICA2:	SOJGE	W,SWICA1	;STEP TO NEXT CONTEXT PAGE
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 35
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PAGE ACTIVATE SCAN

  1517				;HERE AFTER CONTEXT PAGE ACTIVATE SCAN IS OVER. TRY TO
  1518				; RESERVE THE REQUIRED AMOUNT OF PAGES. IF CAN'T, GO
  1519				; GIVE BACK THE TWO TYPES OF PAGES WE STOLE, AT SWICRP.
  1520
  1521	001267'	200700	000014		MOVE	P3,P1		;NUMBER OF PAGES NOT IN CORE
  1522	001270'	270700	000015		ADD	P3,P2		;NUMBER OF STOLEN SOP-RES PAGES
  1523								; RESERVE SOME IN PLACE OF WHAT WE STOLE
  1524	001271'	270700	000000		ADD	P3,S		;ALSO RESERVE ENOUGH TO COVER CLEAN
  1525								; RESERVED WE STOLE
  1526	001272'	322700	001275'		JUMPE	P3,SWICA3	;JUMP IF NOTHING TO RESERVE
  1527	001273'	260040	002147'		PUSHJ	P,SWPRES	;RESERVE
  1528	001274'	254000	001760'		  TRACE(5,<JRST	SWICRP>);COULDN'T. GIVE BACK STOLEN PAGES.
  1529	001275'	201300	000001	SWICA3:	MOVEI	T1,SWSCSI	;CHANGE STATES
  1530	001276'	137300	001163*		DPB	T1,JBYSWS	;TO CONTEXT PAGE SWAP IN
  1531	001277'	254000	001305'		JRST	SWICS0		;AND GO THERE.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 36
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PAGE ACTIVATE SCAN

  1532				;ROUTINE TO NAIL DOWN A CONTEXT PAGE.  INCREMENT USE COUNT
  1533				; IF NOT INCREMENTED ALREADY, IF VIRGIN AND SWAP IN NOT
  1534				; IN PROGRESS SET UP THE CONTEXT PAGE BY CALLING ROUTINE
  1535				; FOR IT.
  1536
  1537	001300'	255000	000000		JFCL			;ENTRY FOR STOLEN PAGES.
  1538	001301'	205300	010000	INCCTX:	MOVSI	T1,CTXUCU	;USE COUNT UP BIT
  1539	001302'	436332	001261*		IORM	T1,@CTXTAB(W)	;SET IT FOR THIS CONTEXT PAGE
  1540	001303'	324740	000000*		PJRST	INCUSE		;AND GO INCREMENT USE COUNT
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 37
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PGE SWAP IN SCAN

  1541				SUBTTL CONTEXT PGE SWAP IN SCAN
  1542
  1543				;FIRST START AS MANY CONTEXT PAGES IN AS WE CAN, AT THE SAME
  1544				; TIME NOTING IF WE'VE SEEN ONE THAT ISN'T READY YET.
  1545				; (P2 NON-ZERO IS SET IF SUCH A CONTEXT PAGE EXISTS.)
  1546				; FOR CONTEXT PAGES WE HAVEN'T CHECKED YET, SEE IF THEY'RE
  1547				; IN CORE ALREADY.  IF NOT IN CORE AND WE CAN GET
  1548				; A RESERVED PAGE, INCRMENT ITS USE COUNT (SO IT WON'T BE SWAPPED
  1549				; OUT LATER WHEN SWAP IN PROGRESS GOES OFF FOR PAGE)
  1550				; AND SET THE BIT SAYING WE'VE DONE THIS (CTXUCU).
  1551				; START THE SWAP IN OF THE CONTEXT PAGE, GO CHECK NEXT
  1552				; ONE.
  1553				; IF THE CONTEXT PAGE WAS IN CORE, INCREMENT ITS USE COUND, SET THE BIT
  1554				; THAT SAYS WE'VE DONE THIS. IF SWAP OUT IS IN PROGRESS
  1555				; AND THE SWAP OUT PAGE IS RESERVED, DO NOT GIVE BACK
  1556				; THE RESERVED PAGE OBTAINED BEFORE. IF
  1557				; THE SWAP OUT PAGE IS NOT RESERVED, GIVE BACK A RESERVED
  1558				; PAGE, SINCE WE DON'T HAVE TO MAKE UP FOR THE ONE WE STOLE.
  1559				; IF SWAP IN IN PROGRESS, JUST NOTE THAT NOT ALL CONTEXT PAGES
  1560				; ARE READY.
  1561
  1562	001304'	135600	000000*	SWICSI:	LDB	P1,JBYCTR	;GET NUMBER OF RESERVED PAGES LEFT
  1563								; OVER FROM LAST TIME
  1564
  1565				;HERE AFTER RESERVING PAGES, NUMBER OF RESERVED PAGES IN P1
  1566	001305'	205700	010000	SWICS0:	MOVSI	P3,CTXUCU	;USE COUNT IS UP BIT
  1567	001306'	400640	000000		SETZ	P2,		;IF THIS IS NON-ZERO, NOT ALL CONTEXT PAGES ARE IN YET
  1568	001307'	201500	777777*		MOVEI	W,NCTXPG-1	;START WITH HIGHEST CONTEXT PAGE INDEX
  1569	001310'	135352	001302*	SWICS1:	LDB	T2,CTXTAB(W)	;GET THIS CONTEXT PAGE'S DP
  1570	001311'	260040	001262*		PUSHJ	P,SRCCHT	;GET ITS CP
  1571	001312'	254000	001351'		  JRST	SWICS3		;NOT IN YET, CHECK VIRGIN
  1572	001313'	400000	000000		SETZ	S,		;FRESHEN UP FLAGS.
  1573	001314'	260040	000000*		PUSHJ	P,PAGERR	;SEE IF ANY ERRORS
  1574	001315'	205300	020000		MOVSI	T1,CTXSWE	;THEN SET THIS FLAG
  1575	001316'	603000	000000*		TLNE	S,IOSERR	;IN JBTCTX
  1576	001317'	436302	001254*		IORM	T1,JBTCTX(J)	;FOR LATER.
  1577	001320'	616732	001310*		TDNN	P3,@CTXTAB(W)	;THIS PAGE IN ALREADY?
  1578	001321'	254000	001325'		JRST	SWICSA		;NO
  1579	001322'	135300	001025*		LDB	T1,PGYSIP	;YES, IS IT BEING SWAPPED IN STILL
  1580	001323'	322300	001370'		JUMPE	T1,SWICSD	;JUMP IF NOT, GO DO NEXT CONTEXT PAGE
  1581	001324'	364640	001370'		SOJA	P2,SWICSD	;STILL COMING IN, SET FLAG THAT SAYS
  1582								; ALL CONTEXT PAGES NOT IN YET.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 38
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PGE SWAP IN SCAN

  1583				;HERE WHEN PAGE IS IN CORE FOR THE FIRST TIME.
  1584
  1585	001325'	135300	001050*	SWICSA:	LDB	T1,PGYUSE	;PICKUP USE COUNT
  1586	001326'	326300	001367'		JUMPN	T1,SWICS4	;IF UP, CAN JUST INCREMENT AGAIN
  1587	001327'	135300	001322*		LDB	T1,PGYSIP	;IF SWAP IN IN PROGRESS,
  1588	001330'	326300	002735'		JUMPN	T1,[SOJA P2,SWICS4] ;FLAG TO CHECK LATER AND INCREMENT USE COUNT
  1589	001331'	135300	001054*		LDB	T1,PGYDRT	;IF ITS DIRTY,
  1590	001332'	326300	001367'		JUMPN	T1,SWICS4	;CAN ALWAYS INCREMENT ITS USE COUNT
  1591	
  1592	001333'	135300	001046*		LDB	T1,PGYSOP	;SWAP OUT IN PROGRESS?
  1593	001334'	322300	001343'		JUMPE	T1,SWICSC	;NO, IS CLEAN-FREE.
  1594	001335'	332000	002040'		SKIPE	CAPPGN		;YES. IS IT AVAILABLE?
  1595	001336'	254000	001367'		JRST	SWICS4		;YES, GO INCREMENT USE COUNT
  1596	001337'	375000	002037'		SOSGE	RIPPGN		;NO, STEAL IT.
  1597	001340'	256000	000000'		 STOPCD			;LIST AND COUNTS DIDN'T AGREE   ;;SWICSA+13
  1598	001341'	350000	002040'		AOS	CAPPGN		;MAKE IT AVAILABLE
  1599	001342'	364600	001367'		SOJA	P1,SWICS4	;USE UP ANOTHER RESERVED PAGE AND
  1600								; GO INCREMENT USE COUNT
  1601
  1602				;HERE IF CORE PAGE IS CLEAN-FREE. IF ANY CLEAN-AVAILABLE
  1603				; PAGES EXIST, DON'T USE UP A RESERVED PAGE, BUT INSTEAD
  1604				; LEAVE IT FOR NEXT CYCLE
  1605
  1606	001343'	333000	000000*	SWICSC:	SKIPLE	CAVPGN		;CAN WE USE AN AVAILABLE PAGE?
  1607	001344'	254000	001367'		JRST	SWICS4		;YES, JUST INCREMENT USE COUNT
  1608	001345'	375000	001064*		SOSGE	CRSPGN		;NO. TAKE A CLEAN RESERVED PAGE
  1609	001346'	256000	000000'		 STOPCD			;HAD TO BE ONE THERE    ;;SWICSC+4
  1610	001347'	350000	001343*		AOS	CAVPGN		;INCREMENT CAVPGN FOR IT
  1611	001350'	364600	001367'		SOJA	P1,SWICS4	;ONE LESS FOR THIS JOB, GO INCRMENT USE COUNT
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 39
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PGE SWAP IN SCAN

  1612	001351'	260040	000000*	SWICS3:	PUSHJ	P,GETRES	;THERE'S ONE NOT IN YET. GET A RESERVED PAGE IF AVAILABLE
  1613	001352'	254000	001736'		  JRST	SWINJC		;NOT AVAILABLE, BUT WILL BE SOMEDAY.
  1614								;(STORE JBYCTR)
  1615	001353'	370000	000014		SOS	P1		;USED UP ANOTHER RESERVED PAGE.
  1616	001354'	135352	001320*		LDB	T2,CTXTAB(W)	;GET DISK ADDRESS
  1617	001355'	260040	000000*		PUSHJ	P,INSCHT	;PUT IN CHT AND SET PGYADR.
  1618	001356'	205300	100000		MOVSI	T1,CTXVIR	;SEE IF CONTEXT PAGES ARE VIRGIN
  1619	001357'	612302	001317*		TDNE	T1,JBTCTX(J)	;ARE THEY?
  1620	001360'	254000	001367'		JRST	SWICS4		;YES, DON'T SWAP IT IN.
  1621	001361'	474640	000000		SETO	P2,		;(BIT 35 MAY BE OFF BECAUSE OF SOJAS)
  1622	001362'	137640	001327*		DPB	P2,PGYSIP	;MARK SWAP IN IN PROGRESS
  1623	001363'	350000	002041'		AOS	SIPTOT		;WILL GET DECREMENTED AT SIDCHK
  1624	001364'	375000	001347*		SOSGE	CAVPGN		;ONE LESS CLEAN AVAIL PAGE.
  1625	001365'	256000	000000'		 STOPCD			;TOO LOW.       ;;SWICS3+14
  1626	001366'	260040	002532'		PUSHJ	P,SWPIO		;SWPIO TAKES CORE PAGE IN PG
  1627								; LOOKS AT PGYSIP AND STARTS A SWAP IN
  1628
  1629	001367'	260040	001301'	SWICS4:	PUSHJ	P,INCCTX	;INCREMENT USE COUNT IF NOT DONE ALREADY,
  1630								; SO SWPRES WON'T TAKE IT AWAY.
  1631	001370'	365500	001310'	SWICSD:	SOJGE	W,SWICS1	;LOOP FOR ALL CONTEXT PAGES
  1632	001371'	322640	001373'		JUMPE	P2,SWICS7	;JUMP IF ALL CONTEXT PAGES ARE IN FOR THIS JOB
  1633	001372'	254000	001736'		JRST	SWINJC		;STEP TO NEXT JOB
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 40
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PGE SWAP IN SCAN

  1634				;HERE WHEN ALL THE CONTEXT PAGES ARE COMPLETELY IN.
  1635				; ACTIVATE THE PER PROCESS EXEC VIRTUAL SLOTS THAT MAP
  1636				; THE LMAP AND UPT, AND DECREMENT THE USE COUNTS FOR THE
  1637				; CONTEXT PAGES' CORE PAGES, SINCE THEY WERE INCREMENTED WHILE
  1638				; SWAPPING IN THE CONTEXT PAGES IN ORDER TO KEEP THEM FROM
  1639				; GOING AWAY.
  1640
  1641				EXTERNAL LMMEXS,LMPLOK,%UPX.N,USYPXM
  1642
  1643	001373'	260040	002651'	SWICS7:	PUSHJ	P,MPSUPS	;ALL CONTEXT PAGES IN NOW, MAKE THE LMAP ADDRESSABLE
  1644	001374'	202100	000000*	SWIC7A:	MOVEM	J,UPSJOB	;STORE THIS AS WE KNOW THESE WILL
  1645								; STICK AROUND.
  1646	001375'	205300	120000		MOVSI	T1,CTXVIR!CTXSWE ;ARE THESE CONTEXT PAGES VIRGIN
  1647								;OR ARE THEY BAD?
  1648	001376'	612302	001357*		TDNE	T1,JBTCTX(J)	;IF SO, SET THEM UP AGAIN.
  1649	001377'	254000	001404'		JRST	SWICSV
  1650	001400'	316100	000000*		CAMN	J,%UPS+UPTJOB	;SUPPOSED TO BE OK. ARE THEY?
  1651	001401'	254000	001441'		JRST	SWICS8		;YES.
  1652	001402'	205300	020000		MOVSI	T1,CTXSWE	;NO, SET SWAP ERROR, AND SET THEM UP FRESH
  1653	001403'	436302	001376*		IORM	T1,JBTCTX(J)	;BY FALLING INTO SWICSV.
  1654	001404'	200300	002736'	SWICSV:	MOVE	T1,[UPT,,%UPS]	;COPY TRAP LOCS, PCS
  1655	001405'	251300	000577*		BLT	T1,%UPS+UPTFSL-1;TO LAST LOC BEFORE SOFTWARE PLACES
  1656	001406'	402000	000504*	IFCPU (KL),<SETZM	%UPS+UPTHEC	;CLEAR OUT FUNKY METER DATA THAT WAS COPIED FROM
  1657	001407'	402000	000505*		SETZM	%UPS+UPTLEC	;NULL JOB'S UPT
  1658	001410'	402000	000506*		SETZM	%UPS+UPTHMC
  1659	001411'	402000	000507*		SETZM	%UPS+UPTLMC
  1660				>;END IFCPU (KL)
  1661	001412'	200300	002737'		MOVE	T1,[%UPS+UPTFSL,,%UPS+UPTFSL+1]
  1662								; GET READY TO ZERO OUT REST
  1663	001413'	402000	000600*		SETZM	%UPS+UPTFSL	;CLEAR FIRST SOFTWARE LOCATION
  1664	001414'	251300	000000*		BLT	T1,%UPS+UPTEND	;CLEAR OUT TO THE END
  1665	001415'	200300	000000*		MOVE	T1,PBMMSK	;SETUP PER PROCESS AREA BIT MASK
  1666	001416'	202300	000000*		MOVEM	T1,%UPS+UPTPBM	;USED FOR DYNAMIC ALLOC.
  1667	001417'	200300	000000*		MOVE	T1,UPT+UPTACP	;GET AC STACK POINTER
  1668	001420'	202300	000000*		MOVEM	T1,%UPS+UPTACP	;INIT THAT.
  1669	001421'	550300	000000*		HRRZ	T1, AGENTV
  1670	001422'	202300	000000*		MOVEM	T1, %UPS+UPTNTV	;FOR PAGE AGEING
  1671
  1672				;NOW UPDATE THE DUMMY ATB COUNTS FOR THE CONTEXT PAGES ABOUT TO
  1673				; BE MAPPED. NOTE THAT THE DUMMY ATB CAN STILL HAVE VALUES
  1674				; IN IT FROM THE PREVIOUS OCCUPANT OF THE JOB NUMBER IF
  1675				; SOME OTHER JOB HAS PRIVATE PAGES MAPPED FROM THAT
  1676				; PREVIOUS OCCUPANT.
  1677
  1678	001423'	260040	001214*		PUSHJ	P,JOBATB	;NOW INIT THE JOB'S ATB
  1679	001424'	201340	000000*		MOVEI	T2,NCTXPG	;THIS MANY SLOTS WILL BE MAX-WRITE
  1680	001425'	272346	000000*		ADDM	T2,ATBMWC(T1) 	;THIS MANY MORE PAGES MAPPED WRITABLE.
  1681	001426'	204346	000000*		MOVS	T2,ATBDUM&ATBUMC&ATBSTS(T1) ;GET SWAPPED COPY
  1682	001427'	671340	002740'		TSO	T2,[ATPDUM,,ATPMXU] ;MAKE SURE DUMMY BIT IS ON, SET MXU
  1683	001430'	271340	001424*		ADDI	T2,NCTXPG	;INCREASE ATBUMC BY NCTXPG.
  1684	001431'	206346	000000*		MOVSM	T2,ATBDUM&ATBUMC&ATBSTS(T1)
  1685								;SET THESE FIELDS
  1686
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 40-2
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PGE SWAP IN SCAN

  1687	001432'	201300	001000		MOVEI	T1,1000		;INIT UWS LIMIT AND MAX
  1688	001433'	137300	000000*		DPB	T1,USYUWM
  1689	001434'	137300	000000*		DPB	T1,USYUWL
  1690	001435'	202100	000000*		MOVEM	J,%UPS+UPTJOB	;REMEMBER WHO THIS IS FOR.
  1691	001436'	400300	000000		SETZ	T1,		;CLEAR UWS SIZE NOW.
  1692	001437'	137300	000000*		DPB	T1,JBYUWS
  1693	001440'	506302	000000*		HRLM	T1,JBTUPM(J)	;NUMBER OF EXISTENT PAGES TOO.
  1694								;MWS SIZE ALREADY CLEARED IF THESE ARE NEW
  1695								; (AS OPPOSED TO ERROR, THEN STILL NEED MWS SIZE TO DECREMENT S
  1696				IPTOT.)
  1697
  1698	001441'	200500	002741'	SWICS8:	MOVE	W,[-NCTXPG,,<%UPT.N+CNVVPN>] ;AOBJN POINTER TO VIRTUAL PAGE
  1699	001442'	205300	000000*		MOVSI	T1,LMMEXS	;IF %UPX DOES NOT EXIST,
  1700	001443'	616300	000000*		TDNN	T1,%UPLMS+%UPX.N+CNVVPN
  1701	001444'	334640	000000*		SKIPA	P2,USYPXM	;JUST SET TO CURRENT %UPT [UPSPTR(%UPX.N-1)]
  1702	001445'	400640	000000		SETZ	P2,		;ELSE LEAVE IT ALONE, ITS REAL.
  1703	001446'	200200	001236*		MOVE	F,EPYPSM	;TO GET CP NUMBER FROM EPT [EPTPTR(%UPS.N-1)]
  1704
  1705	001447'	260040	000000*	SWICS5:	PUSHJ	P,GETLMS	;GET LMAP SLOT INFO
  1706	001450'	205300	120000		MOVSI	T1,CTXVIR!CTXSWE ;VIRGIN OR SWAP ERROR?
  1707	001451'	616302	001403*		TDNN	T1,JBTCTX(J)	;?
  1708	001452'	254000	001464'		JRST	SWICSX		;NO, DON'T INIT SLOT CONTENTS
  1709								; IF SWAP ERROR, BETTER NOT BE ANYONE SHARING THIS DP, OR
  1710								; REMOVE WILL TURN OFF M BIT ON THEM.
  1711	001453'	350000	000000*		AOS	%UPS+UPTLDC	;SLOT EXISTS NOW, STOLMA DECREMENTS
  1712	001454'	205700	000000*		MOVSI	P3,<CPRRDW*LMPCUR>!LMPMXW ;MAKE IT READ WRITE, MAX WRITE
  1713	001455'	135352	000000*		LDB	T2,CTXTAB-<%UPT.N+CNVVPN>(W) ;GET DP ADDR
  1714	001456'	137340	000000*		DPB	T2,UP4LDA	;PUT LOW ORDER INTO UPT
  1715	001457'	620740	400000		TRZ	P4,PGE.A	;MAKE SURE A BIT IS OFF
  1716	001460'	242340	000000*		LSH	T2,-LMASRP	;RIGHT JUSTIFY HI ORDER DP ADDR
  1717	001461'	137340	000000*		DPB	T2,LM3HDA	;PUT INTO SLOT
  1718	001462'	201302	000000*		MOVEI	T1,DABBIT(J)	;GET DUMMY ATB POINTER
  1719	001463'	137300	000000*		DPB	T1,LM3ATB	;PUT INTO THE SLOT
  1720								;CONTEXT PAGES DON'T HAVE TO BE IN MWS
  1721	001464'	134140	000004	SWICSX:	ILDB	PG,F		;GET MAP SLOT FROM EPT
  1722	001465'	405140	017777		ANDI	PG,17777	;JUST CP NUMBER
  1723	001466'	550302	001440*		HRRZ	T1,JBTUPM(J)	;IF ALREADY WAS HERE,
  1724	001467'	326300	001472'		JUMPN	T1,SWICS9	;DON'T SET IT UP AGAIN, ELSE
  1725	001470'	201303	400000		MOVEI	T1,400000+USRACB_^D15(PG)
  1726	001471'	542302	001466*		HRRM	T1,JBTUPM(J)	; SETUP UPT ADDRESS.
  1727	001472'	474300	000000	SWICS9:	SETO	T1,		;CONTEXT PAGES ARE ALWAYS DIRTY
  1728	001473'	137300	001331*		DPB	T1,PGYDRT	;
  1729	001474'	260040	000000*		PUSHJ	P,DECUSE	;DECREMENT THE USE COUNT. IF USE COUNT
  1730								; GOES TO ZERO, DFRPGN WILL BE INCREMENTED AND
  1731								; PAGE WILL GO ONTO DIRTY FREE LIST, WHERE
  1732								; ACTIVATE CAN GET IT.
  1733	001475'	205300	010000		MOVSI	T1,CTXUCU	;GET BIT
  1734	001476'	412332	000000*		ANDCAM	T1,@CTXTAB-<%UPT.N+CNVVPN>(W)
  1735								;CLEAR THE "USE COUNT UP FOR SWAPPER" BIT
  1736	001477'	260040	000000*		PUSHJ	P,ACTLMS	;ACTIVATE ANOTHER CONTEXT PAGE
  1737	001500'	660740	400000		TRO	P4,PGE.A	;MAKE SURE CAN ACCESS THEM
  1738	001501'	260040	000000*		PUSHJ	P,STOLMS	;PUT LMAP INFO BACK INTO LMAP FROM P3,P4
  1739
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 40-3
SCHED1.MAC	 4-DEC-87 16:14		CONTEXT PGE SWAP IN SCAN

  1740	001502'	332000	000015		SKIPE	P2		;IF %UPX DOESN'T EXIST, HAVE TO SET IT
  1741	001503'	136740	000015		IDPB	P4,P2		; UP TO SAME AS %UPT.
  1742
  1743	001504'	253500	001447'	SWICS6:	AOBJN	W,SWICS5	;LOOP UNTIL FINISHED WITH ALL CONTEXT PAGES
  1744	001505'	205300	100000		MOVSI	T1,CTXVIR	;CLEAR VIRGIN BIT
  1745	001506'	410302	001451*		ANDCA	T1,JBTCTX(J)	;AND SET THE BIT THAT SAYS
  1746	001507'	661300	400000		TLO	T1,CTXCIN	;THAT CONTEXT PGES ARE IN CORE
  1747	001510'	202302	001506*		MOVEM	T1,JBTCTX(J)
  1748	001511'	603300	020000		TLNE	T1,CTXSWE	;ERROR SOMEWHERE?
  1749	001512'	254000	002670'		JRST	SWECTX		;YES, GO KILL THE JOB.
  1750	001513'	627300	040000		TLZN	T1,JSTCTX	;ONLY NEED CONTEXT PAGES IN?
  1751	001514'	254000	001526'		JRST	SWILAS		;NO, DO THE REST
  1752	001515'	202302	001510*		MOVEM	T1,JBTCTX(J)	;YES, RESET THE BIT NOW
  1753	001516'	135300	001202*	SWERTN:	LDB	T1,JBYMWS	;GET MWS SIZE
  1754	001517'	213000	000006		MOVNS	T1		;-VE
  1755	001520'	272300	002041'		ADDM	T1,SIPTOT	;RE INCREMENT SIPTOT
  1756	001521'	332000	000014		SKIPE	P1		;IF ANY RESERVED PAGES LEFT,
  1757	001522'	260040	002465'		PUSHJ	P,DECRES	;GIVE 'EM BACK
  1758	001523'	201300	001430*		MOVEI	T1,NCTXPG	;WE SWAPPED THIS MANY IN
  1759	001524'	137300	000000*		DPB	T1,USYSIN	;SO ICPT GETS SET IF NEEDS TO BE
  1760	001525'	254000	001724'		JRST	SWIDN1		;GO TAKE OFF SWAP IN LIST, CLEAR
  1761								; MRQ OR WHATEVER AND RETURN.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 41
SCHED1.MAC	 4-DEC-87 16:14		LMAP ACTIVATE SCAN

  1762				SUBTTL LMAP ACTIVATE SCAN
  1763
  1764				;NOW THAT ALL THE CONTEXT PAGES ARE IN, ACTIVATE ALL LMAP
  1765				; SLOTS IN MWS THAT HAVE PAGES IN CORE WHILE COUNTING
  1766				; THE NUMBER OF PAGES THAT NEED TO BE RESERVED.
  1767				; BEFORE CALLING ACTLMS FOR AN LMAP SLOT THAT HAS ITS DISK
  1768				; PAGE IN CORE, EITHER THAT PAGE MUST BE
  1769				;	1) USED (USE COUNT NON-ZERO)
  1770				;	2) PGYSOP SET AND DIRTY OR CAPPGN NON-ZERO
  1771				;	3) CLEAN AND FREE WITH CAVPGN NON-ZERO
  1772				;	4) DIRTY FREE AND DFRPGN NON-ZERO
  1773				;	5) SWAP IN IN PROGRESS
  1774				;
  1775				;IF NONE OF THE ABOVE ARE TRUE, THEN THE PAGE IS
  1776				; IN ONE OF THE FOLLOWING STATES:
  1777				;	1) PGYSOP SET, CAPPGN = 0 AND CLEAN
  1778				;	2) CLEAN FREE, CAVPGN ZERO
  1779				;	3) NOT IN CORE.
  1780				;
  1781				;FOR CASE 1 ABOVE, CAPPGN IS INCREMENTED, RIPPGN DECREMENTED,
  1782				; AND ONE MORE PAGE IS RESERVED AT THE END OF THE ACTIVATE
  1783				; SCAN TO REPLACE THE SOP-RES PAGE WE STOLE.
  1784				;
  1785				;FOR CASE 2 ABOVE, CRSPGN IS DECREMENTED AND CAVPGN IS INCREMENTED
  1786				; IN ORDER THAT ACTLMS CAN ACTIVATE THE PAGE. ONE MORE PAGE
  1787				; IS RESERVED AT THE END OF THE ACTIVATE SCAN TO REPLACE
  1788				; THE CLEAN RESERVED PAGE WE STOLE.
  1789				;
  1790				;SEPARATE COUNTS ARE KEPT OF THE NUMBER OF PAGES THAT WERE
  1791				; NOT IN CORE, THE NUMBER OF SOP-RES PAGES STOLEN, AND
  1792				; THE NUMBER OF CLEAN RESERVED PAGES STOLEN.  NOTE THAT
  1793				; ONLY THE FIRST COUNT REPRESENTS RESERVED PAGES THAT
  1794				; ACTUALLY BELONG TO THE JOB - THE OTHER COUNTS REPRESENT
  1795				; RESERVED PAGES STOLEN FROM OTHER JOBS THAT WE WILL MAKE UP
  1796				; FOR.  THE REASON FOR KEEPING THE THREE SEPARATE COUNTS IS
  1797				; TO GIVE BACK STOLEN PAGES OF THE APPROPRIATE TYPE IN CASE
  1798				; SWPRES CAN'T GIVE THIS JOB THE REQUESTED NUMBER OF RESERVED
  1799				; PAGES.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 42
SCHED1.MAC	 4-DEC-87 16:14		LMAP ACTIVATE SCAN

  1800				;HERE DURING THE CYCLE IN WHICH WE COMPLETED THE CONTEXT
  1801				; PAGE SWAP IN SCAN. P1 HAS NUMBER OF RESERVED PAGES JOB HAS SO FAR.
  1802
  1803	001526'	201500	000000	SWILAS:	MOVEI	W,0		;START SCANNING WITH PAGE 0
  1804	001527'	137500	001524*		DPB	W,USYSIN	;INITIALIZE NUMBER OF SWAP IN PAGES
  1805	001530'	210000	000014		MOVN	S,P1		;S CONTAINS COUNT OF CLEAN RESERVED
  1806								; PAGES STOLEN. START IT OUT WITH
  1807								; -VE NUMBER OF RESERVE PAGES WE HAVE
  1808								; NOW.
  1809	001531'	403600	000015		SETZB	P1,P2		;P1 CONTAINS COUNT OF PAGES NOT
  1810								; IN CORE
  1811								;P2 CONTAINS COUNT OF SOP-RES
  1812								; PAGES STOLEN
  1813	001532'	402000	002115'		SETZM	STLBTM		;CLEAR OUT BIT MAP OF STOLEN PAGES KEPT BY ACTLMS AND NAILIT
  1814	001533'	200300	002742'		MOVE	T1,[STLBTM,,STLBTM+1]
  1815	001534'	251300	002133'		BLT	T1,STLBTM+<<VPMAX+^D35>/^D36>-1
  1816
  1817	001535'	265200	000000*		JSP	F,NXSMWS	;GET NEXT PAGE IN MWS FROM BIT TABLE
  1818	001536'	254000	001560'		  JRST	SWILA5		;NO MORE.
  1819	001537'	205300	000000*		MOVSI	T1,LMPACT	;QUICK CHECK FOR ACTIVE
  1820	001540'	616312	000000*		TDNN	T1,%UPLMS(W)	;IF NOT ACTIVE, GO GET LMAP SLOT
  1821	001541'	254000	001544'		JRST	SWILA2
  1822	001542'	350000	002064'		AOS	OKPCNT		;YES, ANOTHER ONE THAT WAS ALREADY OK
  1823	001543'	254013	000000		JRST	(M)		;DON'T HAVE SLOT, JUST RETURN FOR NEXT PAGE.
  1824
  1825	001544'	260040	001447*	SWILA2:	PUSHJ	P,GETLMS	;NEED SLOT NOW.
  1826	001545'	260040	000000*		PUSHJ	P,GETDPA	;GET DISK ADDRESS IN T2
  1827	001546'	260040	001311*		PUSHJ	P,SRCCHT	;IS IT IN CORE?
  1828	001547'	344600	001555'		  AOJA	P1,MWSMNX	;NO, RESERVE ANOTHER PAGE
  1829	001550'	201440	001477*	SWILA3:	MOVEI	T4,ACTLMS	;NAILING ROUTINE
  1830	001551'	260040	002507'		PUSHJ	P,NAILIT	;MAKE SURE SWPRES DOESN'T TAKE THIS AWAY
  1831	001552'	350000	002056'		AOS	STLCNT		;ONE THAT WAS IN CORE BUT NOT ACTIVE.
  1832	001553'	260040	001501*	SWILA4:	PUSHJ	P,STOLMS	;PUT LMAP DATA BACK
  1833	001554'	254013	000000		JRST	(M)		;GET NEXT PAGE
  1834
  1835
  1836				;HERE FROM EVERYONE THAT CALLS NXSMWS WHEN THEY ARE DONE WITH
  1837				; SLOT DATA IN P3 AND P4 BUT DON'T WANT TO STORE IT BACK.
  1838				; AFTER ADJUSTING UPTLDC, JRST (M) TO GET NEXT MWS PAGE.
  1839
  1840	001555'	375000	000000*	MWSMNX:	SOSGE	%UPS+UPTLDC	;DON'T NEED DATA ANYMORE
  1841	001556'	256000	000000'		 STOPCD                         ;;MWSMNX+1
  1842	001557'	254013	000000		JRST	(M)		;GET NEXT MWS PAGE.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 43
SCHED1.MAC	 4-DEC-87 16:14		LMAP ACTIVATE SCAN

  1843				;SCAN IS FINISHED. SEE IF WE CAN RESERVE THE NEEDED PAGES
  1844
  1845	001560'	200700	000014	SWILA5:	MOVE	P3,P1		;NUMBER OF PAGES WE NEED FOR SWAP INS
  1846	001561'	270700	000015		ADD	P3,P2		;PAGES TO RESERVE TO REPLACE STOLEN
  1847								; SOP-RES PAGES
  1848	001562'	270700	000000		ADD	P3,S		;PAGES TO REPLACE CLEAN RESERVED
  1849					JUMPLE	P3,[JUMPE P3,SWILA6 ;GO IF NOTHING TO DO
  1850						    EXCH P1,P3	;JOB OWNS SOME, GIVE THEM BACK
  1851						    MOVMS P1	;NUMBER TO GIVE BACK
  1852						    PUSHJ P,DECRES
  1853						    MOVE P1,P3	;GET NUMBER NOT IN CORE AGAIN IN P1
  1854	001563'	323700	002743'			    JRST SWILA6] ;AND UPDATE SIPTOT
  1855	001564'	260040	002147'		PUSHJ	P,SWPRES	;GO RESERVE
  1856	001565'	254000	001776'		  TRACE(6,<JRST	SWIBKO>)		;OH OH, GIVE BACK STOLEN STUFF
  1857	001566'	260040	000000*		PUSHJ	P,MAPUPS	;MAKE THIS JOB'S LMAP ADDRESSABLE AGAIN
  1858
  1859	001567'	135000	001516*	SWILA6:	LDB	S,JBYMWS	;ORIGINAL GUESS (COULDN'T CHANGE,
  1860								; FOR IF JOB IS RUNNABLE WE WOULD
  1861								; GET HERE ON FIRST SWAPPER CYCLE)
  1862	001570'	276600	000000		SUBM	P1,S		;-VE AMOUNT WE OVERESTIMATED BY
  1863	001571'	272000	002041'		ADDM	S,SIPTOT	;DECREMENT SIPTOT
  1864	001572'	200340	000016	SWILA7:	MOVE 	T2,P3		;NOW DO A LITLE STATISTICS ON
  1865	001573'	221340	000012		IMULI	T2,^D10		;PAGES TO SWAP IN AS FRACTION OF
  1866	001574'	400300	000000		SETZ	T1,		;JOBS MWS
  1867	001575'	135400	001567*		LDB	T3,JBYMWS	;GET A NUMBER BETWEEN 0 AND 9
  1868	001576'	234300	000010		DIV	T1,T3		;AND BUMP LITTLE HISTOGRAM
  1869	001577'	335000	000006		SKIPGE	T1		;LITTLE SAFETY CHECK
  1870	001600'	256000	000000'		 STOPCD                         ;;SWILA7+6
  1871	001601'	301300	000012		CAIL	T1,SINTBS	;BIGGER TTHAN TBL SIZE?
  1872	001602'	201300	000011		MOVEI	T1,SINTBS-1	;SIGH,LAST BUUCKET IS CATCH-ALL
  1873	001603'	350006	002134'		AOS	SINTB(T1)	;SEE PERFORMANCE COUNTERS AREA
  1874	001604'	322600	001724'		JUMPE 	P1,SWIDN1	;IF NO SWAP INS TO DO, DONE
  1875	001605'	201400	000002		MOVEI	T3,SWSSWI	;OTHERWISE, NEXT PHASE
  1876	001606'	137400	001276*		DPB	T3,JBYSWS	;IS LMAP SWAP IN SCAN
  1877								;FALL INTO LMAP SWAP IN SCAN
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 44
SCHED1.MAC	 4-DEC-87 16:14		LMAP SWAP IN SCAN

  1878				SUBTTL LMAP SWAP IN SCAN
  1879				;HERE WITH P1 CONTAINING NUMBER OF RESERVED PAGES.
  1880				; BEGIN (OR CONTINUE WITH) SWAP IN LMAP SCAN
  1881
  1882	001607'	201500	000000		MOVEI	W,0		;START WITH PAGE 0
  1883	001610'	137500	000000*		DPB	W,USYLSP	;THIS IS THE FIRST LMAP SCAN POINTER
  1884	001611'	254000	001615'		JRST	SWISW0		;GO JOIN THE SCAN CODE.
  1885
  1886				;HERE IF THIS IS NOT THE FIRST TIME DOING THE SCAN FOR THIS JOB
  1887
  1888	001612'	260040	001566*	SWISWI:	PUSHJ	P,MAPUPS	;MAKE JOB'S LMAP ADDRESSABLE
  1889	001613'	135500	001610*		LDB	W,USYLSP	;GET LMAP SCAN POINTER
  1890	001614'	135600	000000*		LDB	P1,USYRES	;RESERVED PAGE COUNT
  1891
  1892				;HERE WITH W/ LMAP SCAN POINTER, P1/RESERVED PAGES LEFT,
  1893				; P2/NUMBER OF PAGES WITH SWAP IN IN PROGRESS FOR THIS JOB
  1894
  1895	001615'	265200	001535*	SWISW0:	JSP	F,NXSMWS	;GET A MWS PAGE, MAYBE ONE IN W.
  1896	001616'	254000	001720'		  JRST	SWIDON		;FINISHED WITH MWS.
  1897	001617'	205300	001537*		MOVSI	T1,LMPACT	;QUICK CHECK FOR ACTIVE
  1898	001620'	612312	001540*		TDNE	T1,%UPLMS(W)	;IF ACTIVE,
  1899	001621'	254013	000000		JRST	(M)		;GET ONE THAT ISN'T.
  1900
  1901	001622'	260040	001544*	SWISW7:	PUSHJ	P,GETLMS	;GET THE INACTIVE SLOT.
  1902	001623'	260040	001545*		PUSHJ	P,GETDPA	;NO, GET DISK ADDRESS
  1903	001624'	260040	001546*		PUSHJ	P,SRCCHT	; IN T2. IS IT IN CHT?
  1904	001625'	254000	001665'		  JRST	SWISIN		;NO, GO TRY TO SWAP IT IN
  1905	001626'	135300	000000*		LDB	T1,PGYSTS	;GET CP STATUS BITS
  1906	001627'	602300	000000*		TRNE	T1,PGPSIP	;SWAP IN GOING?
  1907	001630'	254000	001660'		JRST	SWIRD1		;YES, JUST ACTIVATE IT.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 45
SCHED1.MAC	 4-DEC-87 16:14		LMAP SWAP IN SCAN

  1908				;CORE PAGE EXISTS FOR LMAP SLOT AND NO SWAP IN IN PROGRESS.
  1909				; IF USE COUNT IS UP, PAGE IS DIRTY, OR SWAP OUT IN PROGRESS
  1910				; AND CAPPGN IS NON-ZERO, JUST ACTIVATE. IF CAPPGN IS ZERO
  1911				; AND PAGE IS SOP AND THIS JOB HAS A RESERVED PAGE LEFT,
  1912				; DECREMENT RIPPGN AND INCREMENT CAPPGN (STEAL) AND GO ACTIVATE.
  1913				; IF RAN OUT OF RESERVED PAGES, JUST CHECK NEXT VP. IF PAGE
  1914				; IS CLEAN FREE AND CAVPGN IS NON-ZERO, JUST ACTIVATE. ELSE
  1915				; IF JOB HAS RESERVED PAGE LEFT, STEAL CLEAN RESERVED PAGE.
  1916
  1917	001631'	135340	001325*		LDB	T2,PGYUSE	;USE COUNT UP?
  1918	001632'	326340	001660'		JUMPN	T2,SWIRD1	;YES, JUST ACTIVATE
  1919	001633'	602300	000000*		TRNE	T1,PGPDRT	;IS PAGE DIRTY?
  1920	001634'	254000	001660'		JRST	SWIRD1		;YES, DFRPGN MUST BE .GT. ZERO
  1921								; OR ITS A DIRTY SWAP OUT IN PROG PAGE
  1922	001635'	606300	000000*		TRNN	T1,PGPSOP	;SWAP OUT GOING?
  1923	001636'	254000	001650'		JRST	SWIRD0		;NO, ITS CLEAN FREE.
  1924	001637'	332000	002040'		SKIPE	CAPPGN		;CAN WE JUST TAKE IT?
  1925	001640'	254000	001660'		JRST	SWIRD1		;YES, GO ACTIVATE
  1926	001641'	361600	001663'		SOJL	P1,SWIRD2	;NO. HAVE RES PAGE LEFT?
  1927	001642'	375000	002041'		SOSGE	SIPTOT		;YES, NOT STARTING SWAP IN SO DECREMENT THIS
  1928	001643'	256000	000000'		 STOPCD			;WENT BAD       ;;SWISW7+many
  1929	001644'	375000	002037'		SOSGE	RIPPGN		;TRADE IT FOR THIS PAGE
  1930	001645'	256000	000000'		 STOPCD			;HAD TO BE ONE, CAPPGN WAS ZERO ;;SWISW7+many
  1931	001646'	350000	002040'		AOS	CAPPGN		;NOW PAGE IS CLEAN AVAILABLE SOP
  1932	001647'	254000	001660'		JRST	SWIRD1		;NOW CAN GO ACTIVATE IT.
  1933	001650'	332000	001364*	SWIRD0:	SKIPE	CAVPGN		;NO, PAGE IS CLEAN-FREE. AVAILABLE?
  1934	001651'	254000	001660'		JRST	SWIRD1		;YES, JUST ACTIVATE
  1935	001652'	361600	001663'		SOJL	P1,SWIRD2	;IF RAN OUT OF RESERVED PAGES, FORGET IT
  1936	001653'	375000	002041'		SOSGE	SIPTOT		;USING A RESERVED PAGE BUT NO SWAP IN
  1937	001654'	256000	000000'		 STOPCD			;WENT NEGATIVE, SORRY.  ;;SWIRD0+4
  1938	001655'	375000	001345*		SOSGE	CRSPGN		;USE A RESERVED CLEAN PAGE
  1939	001656'	256000	000000'		 STOPCD			;HAS TO BE NON-ZERO     ;;SWIRD0+6
  1940	001657'	350000	001650*		AOS	CAVPGN		;OK, MAKE IT AN AVAILABLE PAGE
  1941	001660'	260040	001550*	SWIRD1:	PUSHJ	P,ACTLMS	;ACTIVATE THE SLOT
  1942	001661'	350000	002056'		AOS	STLCNT		;COUNT ANOTHER STOLEN PAGE.
  1943	001662'	254000	001716'		JRST	SWINVP		;GO DO NEXT PAGE
  1944
  1945	001663'	350000	002061'	SWIRD2:	AOS	NSRCNT		;ANOTHER PGE WE COULDN'T STEAL
  1946	001664'	254000	001555'		JRST	MWSMNX		;DO NEXT MWS PAGE
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 46
SCHED1.MAC	 4-DEC-87 16:14		LMAP SWAP IN SCAN

  1947				;HERE IF INACTIVE PAGE IN MWS IS NOT IN CHT. IF JOB HAS A
  1948				; RESERVED PAGE, BEGIN SWAP IN.
  1949				; IF SLOT IS VIRGIN, MUST CHECK SPT VIA ROUTINE TSTVIR
  1950				; TO MAKE SURE NO ONE FIXED IT YET.
  1951
  1952	001665'	323600	001714'	SWISIN:	JUMPLE	P1,SWINIR	;HAVE TO BE ABLE TO GET SOMETHING TO
  1953								; SWAP IN WITH.
  1954	001666'	260040	001351*		PUSHJ	P,GETRES	;GET A RESERVED PAGE
  1955	001667'	254000	001740'		  JRST	SWINJB		;NONE AVAILABLE YET, STEP TO NEXT JOB
  1956								;OK, HAVE A CLEAN CP, CAVPGN INCREMENTED FOR IT.
  1957	001670'	260040	001623*		PUSHJ	P,GETDPA	;OK, GET DISK ADDRESS FROM LMAP
  1958	001671'	260040	001355*		PUSHJ	P,INSCHT	;PUT INTO CHT, SET PGYADR
  1959	001672'	260040	000000*		PUSHJ	P,TSTVIR	;IS THIS A VIRGIN PAGE?
  1960	001673'	254000	001701'		  JRST	SWISN0		;NO, START THE SWAP IN
  1961					JUMPL	T1,[AOS SIOSWP	;SAY SWAPPER GOT TO THIS FIRST
  1962						    TLZ P3,LMPVIR ;NO MORE VIRGIN FILE PAGE
  1963	001674'	321300	002751'			    JRST SWISN0];GO SWAP IT IN.
  1964	001675'	375000	002041'		SOSGE	SIPTOT		;YES, USING RESERVED PAGE BUT NOT
  1965	001676'	256000	000000'		 STOPCD			; STARTING SWAP IN, DECREMENT THIS. ;;SWISIN+11
  1966	001677'	350000	002060'		AOS	VIRCNT		;COUNT ANOTHER VIRGIN PAGE DONE.
  1967	001700'	254000	001712'		JRST	SWISN1		;SKIP SWAPPING IT IN AND JUST ACTIVATE
  1968	001701'	474000	000000	SWISN0:	SETO	S,		;MARK
  1969	001702'	137000	001362*		DPB	S,PGYSIP	;SWAP IN IN PROGRESS
  1970	001703'	375000	001657*		SOSGE	CAVPGN		;GETRES LEFT THIS INCREMENTED.
  1971	001704'	256000	000000'		 STOPCD			;WENT NEGATIVE.         ;;SWISN0+3
  1972	001705'	350000	002057'		AOS	SINCNT		;RACK UP ANOTHER SWAP IN STARTED.
  1973	001706'	260040	002532'		PUSHJ	P,SWPIO		;ADD CORE PAGE TO THE SWAP LIST
  1974	001707'	135000	001527*		LDB	S,USYSIN	;INCREMENT THE SWAPPED IN COUNT
  1975	001710'	350000	000000		AOS	S
  1976	001711'	137000	001707*		DPB	S,USYSIN
  1977
  1978	001712'	260040	001660*	SWISN1:	PUSHJ	P,ACTLMS	;ACTIVATE THE REGULAR OR VIRGIN PAGE
  1979	001713'	364600	001716'		SOJA	P1,SWINVP	;ONE LESS RESERVED PAGE AND
  1980								; GO STORE P3, P4 BACK INTO LMAP
  1981								; AND STEP TO NEXT VP.
  1982
  1983	001714'	350000	002062'	SWINIR:	AOS	NIRCNT		;ANOTHER PAGE WE COULDN'T SWAP IN
  1984	001715'	254000	001555'		JRST	MWSMNX		;GO LOOK AT NEX MWS PAGE.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 47
SCHED1.MAC	 4-DEC-87 16:14		LMAP SWAP IN SCAN

  1985				;HERE TO STEP TO NEXT VIRTUAL PAGE WHEN LMAP DATA IN P3 AND/OR
  1986				; P4 HAS BEEN MODIFIED.
  1987
  1988	001716'	260040	001553*	SWINVP:	PUSHJ	P,STOLMS	;PUT LMAP DATA BACK INTO LMAP
  1989	001717'	254013	000000		JRST	(M)		;AND GO GET NEXT MWS PAGE
  1990
  1991
  1992				;HERE WHEN FINISHED THE SECOND (SWAP IN) LMAP SCAN.
  1993				; GIVE BACK ANY EXTRA RESERVED PAGES WE DIDN'T USE
  1994				; (HAPPENS WHEN JOB IS RUNNING DURING ITS SWAP IN AND
  1995				; MAKES ITS MWS SIZE SMALLER), REMOVE JOB FROM SWAP IN LIST,
  1996				; AND WAKE THE JOB UP. IF PAGE JOB WANTS IS STILL COMING IN,
  1997				; JOB WILL WAIT FOR IN IN PAGE FAULT CODE.
  1998
  1999	001720'	323600	001724'	SWIDON:	JUMPLE	P1,SWIDN1	;IF ANY LEFT,
  2000	001721'	210300	000014		MOVN	T1,P1		;GET NUMBER OF RESERVED PAGES NEGATED
  2001	001722'	272300	002041'		ADDM	T1,SIPTOT	;DON'T HAVE TO DO THESE SWAP INS ANYMORE,
  2002								; SOMEONE ELSE DID THEM.
  2003	001723'	260040	002465'		PUSHJ	P,DECRES	;GIVE BACK THE RESERVED PAGES
  2004	001724'	200300	002754'	SWIDN1:	MOVE	T1,[PRF!SWPINP!(MRQ)] ;CLEAR ALL SWAPPING BITS
  2005	001725'	412302	001143*		ANDCAM	T1,JBTSTS(J)
  2006	001726'	260040	002576'		PUSHJ	P,REMSIL
  2007	001727'	135300	001711*		LDB	T1,USYSIN	;GET NUMBER OF PAGES WE SWAPPED IN
  2008	001730'	201340	001000		TRACE(7,<MOVEI	T2,SETICP>,T1)	;GET THE BIT TO CHECK
  2009	001731'	616342	001725*		TDNN	T2,JBTSTS(J)	;HAS THIS JOB BEEN PERSECUTED?
  2010	001732'	254000	001747'		JRST	SWINJ2		;NO, NO NEED TO PROTECT IT
  2011	001733'	260040	002605'		PUSHJ	P,SETIPT	;OK, SETUP ICPT FROM C(T1)
  2012								; (EVEN IF NOTHING SWAPPED IN, SET IT TO C(PROT0).
  2013	001734'	412342	001731*		ANDCAM	T2,JBTSTS(J)	;CLEAR SETICP
  2014	001735'	254000	001747'		JRST	SWINJ2		;AND GO DO NEXT JOB.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 48
SCHED1.MAC	 4-DEC-87 16:14		STEP TO NEXT JOB

  2015				SUBTTL STEP TO NEXT JOB
  2016
  2017				;HERE IF CAN'T GET RESERVED PAGE YET IN CONTEXT PAGE SWAP IN
  2018				; SCAN. SAVE NUMBER OF RESERVED PAGES THE JOB OWNS IN
  2019				; JBYCTR
  2020
  2021	001736'	137600	001304*	SWINJC:	DPB	P1,JBYCTR	;SAVE FOR NEXT TIME
  2022	001737'	254000	001747'		JRST	SWINJ2		;AND TO GET NEXT JOB
  2023
  2024				;HERE TO STEP TO NEXT JOB IN SWAP IN LIST. JOB NUMBER WE WERE
  2025				; WORKING ON IS IN J, AND THIS JOB IS NOT DONE WITH ITS
  2026				; SWAP IN SCAN YET, SO MUST REMEMBER LMAP SCAN POINTER,
  2027				; NUMBER OF RESERVED PAGES, AND NUMBER OF SWAP IN IN PROGRESS
  2028				; PAGES.
  2029
  2030	001740'	375000	000000*	SWINJB:	SOSGE	%UPS+UPTLDC	;HAD P3 AND P4 SETUP, THROW AWAY NOW.
  2031	001741'	256000	000000'		 STOPCD                         ;;SWINJB+1
  2032	001742'	265200	000000*		JSP	F,FINXWS	;FIX UP STACK THAT NXSMWS MESSED UP
  2033	001743'	137500	001613*		DPB	W,USYLSP	;STORE LMAP SCAN POINTER
  2034	001744'	325600	001746'		JUMPGE	P1,.+2		;IF P1 IS NEGATIVE,
  2035	001745'	400600	000000		SETZ	P1,		;ITS REALLY ZERO.
  2036	001746'	137600	001614*		DPB	P1,USYRES	;AND NUMBER OF RESERVED PAGES
  2037								; AND FALL INTO CODE BELOW
  2038
  2039				;HERE TO STEP TO NEXT JOB WHEN COMPLETELY THROUGH WITH A JOB.
  2040				; NO NEED TO STORE ANY POINTERS IN THE LMAP
  2041
  2042	001747'	550102	001122*	SWINJ2:	HRRZ	J,JBTFIT(J)	;JOB IS NOT ON FIT LIST ANYMORE, BUT
  2043								; NEXT JOB IN JBTFIT IS STILL CORRECT
  2044	001750'	336001	777776		SKIPN	-2(P)		;IF NO MORE JOBS TO SCAN IN QUEUES,
  2045	001751'	254000	001161'		JRST	SWISC2		;JUST DO NEXT JOB IN S.I.L
  2046	001752'	202100	002042'		MOVEM	J,FIT		;GOING TO SCAN THE SCHED QUEUES
  2047								; FOR MORE JOBS TO GO ON SWAP
  2048								; IN LIST. REMEMBER NEXT JOB
  2049								; THAT WE WERE GOING TO DO, IF ANY.
  2050	001753'	262040	000002		POP	P,J
  2051	001754'	262040	000004		POP	P,F		;
  2052	001755'	262040	000013		POP	P,M		;SO RESTORE POSITION IN QUEUES
  2053	001756'	262040	000005		POP	P,U		;
  2054	001757'	254013	000000		JRST	(M)		;AND GO GET NEXT JOB ON SCHED QUEUES.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 49
SCHED1.MAC	 4-DEC-87 16:14		BACK OUT

  2055				SUBTTL BACK OUT
  2056
  2057				;HERE IF FAILED TO RESERVED ENOUGH PAGES TO BRING IN ALL
  2058				; CONTEXT PAGES. ADJUST SIPTOT, REMOVE JOB FROM SWAP IN
  2059				; LIST. DECREMENT USE COUNT FOR ALL CONTEXT PAGES THAT
  2060				; HAD USE COUNT UP.  AFTER THIS, CAVPGN AND CAPPGN WILL
  2061				; BE INCREMENTED APPROPRIATELY.  THEN, DECREMENT
  2062				; CAVPGN AND CAPPGN WITH THE NUMBER OF CLEAN RESERVED AND
  2063				; RESERVED SOP PAGES COUNTS IN S AND P2, RESPECTIVELY, AND
  2064				; INCREMENT CRSPGN AND RIPPGN.
  2065
  2066	001760'	135300	001575*	SWICRP:	LDB	T1,JBYMWS	;ORIGINAL SIPTOT GUESS
  2067	001761'	213000	000006		MOVNS	T1		;GET NEGATIVE
  2068	001762'	272300	002041'		ADDM	T1,SIPTOT	;RESTORE SIPTOT BACK TO WHAT IT WAS
  2069	001763'	201500	777777*		MOVEI	W,NCTXPG-1	;START WITH LAST CONTEXT PAGE
  2070	001764'	205600	010000		MOVSI	P1,CTXUCU	;BIT FOR QUICK CHECKING
  2071
  2072	001765'	616632	001354*	SWICR1:	TDNN	P1,@CTXTAB(W)	;USE COUNT UP?
  2073	001766'	254000	001774'		JRST	SWICR2		;NO, CHECK NEXT
  2074	001767'	135352	001765*		LDB	T2,CTXTAB(W)	;GET DISK ADDRESS IN T2
  2075	001770'	260040	001624*		PUSHJ	P,SRCCHT	;GET CORE ADDRESS
  2076	001771'	256000	000000'		 STOPCD			;HAS TO BE THERE.       ;;SWICR1+4
  2077	001772'	260040	001474*		PUSHJ	P,DECUSE	;GIVE IT BACK
  2078	001773'	412632	001767*		ANDCAM	P1,@CTXTAB(W)	;USE COUNT NOT UP ANYMORE
  2079	001774'	365500	001765'	SWICR2:	SOJGE	W,SWICR1	;STEP TO NEXT CONTEXT PAGE
  2080	001775'	324740	002021'		PJRST	SWIBAD		;GO UPDATE CAV, CAP, RIP,CRS AND RETURN
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 50
SCHED1.MAC	 4-DEC-87 16:14		BACK OUT

  2081				;HERE IF CANNOT RESERVE ENOUGH PAGES TO START LMAP SWAP IN
  2082				; SCAN. S CONTAINS THE NUMBER OF CLEAN RESERVED PAGES WE
  2083				; STOLE, P2 CONTAINS TE NUMBER OF RESERVED SOP PAGES WE STOLE
  2084				; IF JOB STOLE ANY PAGES, DEACTIVATE THEM. STOLEN PAGES ARE RECORDED
  2085				; IN STLBTM BY ACTLMS/NAILIT.
  2086				; THEN ADJUST CRS, RIP, CAV, CAP.
  2087				;
  2088				;TAKE JOB OUT OF SWAP IN LIST, ADJUST SIPTOT BACK ALSO.
  2089				;
  2090				;S MAY BE NEGATIVE, IF THERE WERE RESERVED PAGES LEFT OVER
  2091				; FROM CONTEXT PAGE SWAP IN PHASE. IN THIS CASE, GIVE BACK
  2092				; THAT MANY RESERVED PAGES BY CALLING DECRES.
  2093				;
  2094
  2095	001776'	325000	002002'	SWIBKO:	JUMPGE	S,SWIBK1	;IF ZERO OR OWE SOME, CONTINUE
  2096	001777'	214600	000000		MOVM	P1,S		;JOB OWNS SOME. GIVE THEM BACK
  2097	002000'	260040	002465'		PUSHJ	P,DECRES	;
  2098	002001'	400000	000000		SETZ	S,		;NO STOLEN CLEAN RESERVED
  2099	002002'	135300	001760*	SWIBK1:	LDB	T1,JBYMWS	;GET THE GUESS AT HOW MANY SWAP INS
  2100	002003'	213000	000006		MOVNS	T1		; AND SUBTRACT IT FROM SIPTOT
  2101	002004'	272300	002041'		ADDM	T1,SIPTOT
  2102	002005'	336000	000000		SKIPN	S		;IF ANYTHING TO GIVE BACK, DO IT
  2103	002006'	322640	002032'		JUMPE	P2,SWIBD0	;ELSE DON'T DEACTIVATE ANYTHING.
  2104
  2105	002007'	201500	000000		MOVEI	W,0		;START SCANNING AT PAGE ZERO.
  2106	002010'	260040	001612*		PUSHJ	P,MAPUPS	;GET UPT BACK AFTER SWPRES CALL.
  2107
  2108	002011'	265200	000000*		JSP	F,NXTSTL	;GET STOLEN PAGE.
  2109	002012'	254000	002021'		  JRST	SWIBAD		;NO MORE, GO UPDATE COUNTS
  2110	002013'	260040	001622*		PUSHJ	P,GETLMS	;GET LMAP SLOT CONTENTS
  2111	002014'	607700	001617*		TLNN	P3,LMPACT	;HAD BETTER BE ACTIVE.
  2112	002015'	256000	000000'		 STOPCD			;OOPS.          ;;SWIBK1+13
  2113	002016'	260040	000000*		PUSHJ	P,DEALMS	;DEACTIVATE, MAYBE INCREMENT CAV OR CAP
  2114	002017'	260040	001716*		PUSHJ	P,STOLMS	;STUFF LMAP DATA BACK
  2115	002020'	254013	000000		JRST	(M)		;GO FOR NEXT PAGE IN MWS
  2116
  2117				;NOW UPDATE CRS, RIP, CAP, CAV. COME HERE FROM SWICRP TOO.
  2118
  2119	002021'	272000	001655*	SWIBAD:	ADDM	S,CRSPGN	;HOW MANY CLEAN RES. WE STOLE
  2120	002022'	272640	002037'		ADDM	P2,RIPPGN	;HOW MANY SOP RES WE STOLE
  2121	002023'	213000	000000		MOVNS	S
  2122	002024'	213000	000015		MOVNS	P2		;GET READY TO DECREMENT MEMORY
  2123	002025'	273000	001703*		ADDB	S,CAVPGN	;DECUSE INCREMENTED THIS SOME
  2124	002026'	273640	002040'		ADDB	P2,CAPPGN	;THIS TOO
  2125	002027'	331000	000000		SKIPL	S		;IF EITHER IS NEGATIVE, THEN
  2126	002030'	335000	000015		SKIPGE	P2		;SOMETHING DIDN'T MATCH.
  2127	002031'	256000	000000'		 STOPCD                         ;;SWIBAD+10
  2128	002032'	260040	002576'	SWIBD0:	PUSHJ	P,REMSIL	;TAKE JOB OUT OF SWAP IN LIST
  2129	002033'	201300	002000		MOVEI	T1,SWPINP	;CLEAR SWAP IN PROGRESS.
  2130	002034'	412302	001734*		ANDCAM	T1,JBTSTS(J)	;
  2131	002035'	350000	002055'		AOS	SIFCNT		;ANOTHER JOB FAILED.
  2132	002036'	254000	001747'		JRST	SWINJ2		;NOW GET NEXT JOB.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 51
SCHED1.MAC	 4-DEC-87 16:14		MISCELLANEOUS CELLS

  2133				SUBTTL MISCELLANEOUS CELLS
  2134
  2135				COMMENT \
  2136				THE SWAPPER USES THE FOLLOWING COUNTS, WHICH ARE RELATED
  2137				TO PHYSICAL CORE PAGE HANDLING:
  2138
  2139				RIPPGN - COUNT OF THE TOTAL NUMBER OF PAGES ON SPRLST, SODLST THAT
  2140				  ARE TO BE PUT ONTO CLEAN RESERVED LIST AT SWAP OUT DONE.
  2141
  2142				CAPPGN - COUNT OF NUMBER OF CLEAN AVAILABLE SWAP OUT IN
  2143				  PROGRESS PAGES. RIPPGN+CAPPGN+DIRTY SOP PAGES ARE EQUAL
  2144				  TO ALL THE PAGES THAT HAVE SOP ON.
  2145
  2146				NOTE THAT AT ANY GIVEN TIME RIPPGN+CRSPGN IS EQUAL TO
  2147				  THE NUMBER OF RESERVED PAGES STILL OWNED BY ALL JOBS BEING
  2148				  SWAPPED IN.
  2149
  2150				SIPTOT - TOTAL COUNT OF PAGES THAT ALL JOBS IN SWAP IN LIST
  2151				  INTEND TO SWAP IN OR ARE ALREADY COMING IN.
  2152				\
  2153
  2154	002037'	000000	000000	RIPPGN::0			;RESERVED IN PROGRESS COUNT
  2155	002040'	000000	000000	CAPPGN::0			;CLEAN AVAILABLE SWAP OUT IN PROG. COUNT
  2156	002041'	000000	000000	SIPTOT:: 0			;TOTAL SWAP IN PAGES
  2157				COMMENT !  OBSOLETE SIPQTA MECHANISM /AAA
  2158				SIPQTA:: EXP M.SQTA##		;HOW MANY PGS TO STOP SWAPPIN IN AT
  2159				!
  2160
  2161				;MORE MISCELLANEOUS CELLS
  2162
  2163	002042'	000000	000000	FIT:	0			;ARG TO SWPRES, EQUAL TO JOB TRYING
  2164								; TO RESERVE PAGES FOR
  2165	002043'	000000	000000	BIGFIT: 0			;THE "BIG" JOB WHICH SWAPPER IS
  2166								;CURRENTLY TRYING TO GET IN.  "BIG"
  2167								;MEANING SETICP HAS BEEN SET, JOB HAS BEEN EATEN.
  2168								;TO COME IN FOR THE JOB.
  2169
  2170	002044'	000000	000000	OUTJOB: 0			;THE JOB WHICH SWOSCN IS EATING FROM.
  2171								;KEPT FROM CYCLE TO CYCLE.
  2172								;-1 IF HIT END OF OSCAN ;  0 IF NEED
  2173								;TO SCAN FOR NEW OUTJOB
  2174	002045'	000000	000000	OUTJPG: 0			;PGS EATEN FROM OUTJOB (CYCLE TO CYCLE)
  2175
  2176
  2177	002046'	000000	000024	DIUQTA:	^D20			;UP TO DIUQTA DIRTY IN-USE
  2178								;PAGES ARE CLEANED UP IN ONCE-A-
  2179								;SECOND CODE.
  2180
  2181				;CELLS TO SAVE SWOSCN QUEUE POSITION (BETWEEN SWOSCN CALLS IN ANY ONE
  2182				;SWAP CYCLE)  TO PREVENT SCANNING SAME JOBS AGAIN
  2183
  2184	002047'			SVQPOS:	BLOCK	1		;SAVED POSITION IN OSCAN (U)
  2185	002050'			SVQRPC:	BLOCK	1		;SAVED COROUTINE PC (M)
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 51-2
SCHED1.MAC	 4-DEC-87 16:14		MISCELLANEOUS CELLS

  2186	002051'			SVQRTN:	BLOCK	1		;SAVED RETURN PC (F)
  2187
  2188	002052'	000000	000000	POSAVL:	0			;UPPER BOUND ON NUMBER OF ACTIVE PAGES GRABBABLE BY SWOSCN
  2189
  2190				;PERFORMANCE COUNTERS
  2191
  2192	002053'			SWCCNT:	BLOCK	1		;TIMES SWAPPER WAS CALLED
  2193	002054'			SIJCNT:	BLOCK	1		;JOBS WE ADDED TO SWAP IN LIST
  2194	002055'			SIFCNT:	BLOCK	1		;JOBS WE TOOK OFF SWAP IN LIST WITHOUT DOING ANYTHING
  2195	002056'			STLCNT:	BLOCK	1		;PAGES STOLEN SUCCESSFULLY
  2196	002057'			SINCNT:	BLOCK	1		;SWAP INS STARTED (NOT VIRGIN PAGES)
  2197	002060'			VIRCNT:	BLOCK	1		;NO. VIRGIN PAGES DONE
  2198	002061'			NSRCNT:	BLOCK	1		;COULDN'T STEAL, NO RESERVED PGES
  2199	002062'			NIRCNT:	BLOCK	1		;COULDN'T SWAP IN, NO RESERVED PGES
  2200	002063'			DEACNT:	BLOCK	1		;PAGES DEACTIVATED INSIDE SWOSCN, NOT INCLUDING CONTEXT PAGES
  2201	002064'			OKPCNT:	BLOCK	1		;PAGES ALREADY IN CORE AT BEG OF SWAP IN
  2202				NAPCNT:	BLOCK	1		;TIMES SWAP IN SCAN STOPPED BECAUSE KNEW NOT ENOUGH JOBS TO SWA
  2203				P OUT
  2204	002066'			HEQCNT:	BLOCK	1		;SWAP IN SCAN STOPPED BECAUSE HIT END OF QS
  2205	002067'			PFLCNT::BLOCK	1		;NUMBER OF PAGE FAILS
  2206	002070'			PFWCNT::BLOCK	1		;NUMBER OF TIMES PAGE FAIL WAITED FOR SWAPPER
  2207	002071'			VRACNT::BLOCK	1		;NUMBER OF VIRGIN PAGES DONE INSIDE ACTIVATE
  2208	002072'			PFICNT::BLOCK	1		;NUMBER OF FAULTS FOR INACTIVE PAGE
  2209	002073'			TOTACT::BLOCK	1		;TOTAL NUMBER OF ACTIVE SLOTS IN SYSTEM
  2210	002074'			SIOCNT::BLOCK	1		;TOTAL VSTIO UUOS THAT STARTED A PAGE IN
  2211	002075'			SIOBOM::BLOCK	1		;TOTAL VSTIO UUOS THAT DIDN'T START A PAGE IN
  2212								; FOR VP WHOSE DP WAS IN CORE BUT
  2213								; WAS NOT AVAILABLE (RESERVED FOR ANOTHER JOB)
  2214	002076'			SIOSWP::BLOCK	1		;NUMBER OF TIMES SWAPPER BROUGHT
  2215								;IN VIRGIN FILE PAGE INSTEAD OF ACTLMA.
  2216	002077'			FRESID::BLOCK	1		;TOTAL NUMBER OF TIMES PAGE WAS STARTED IN
  2217								; BUT USE COUNT WENT TO 0 AT DONE TIME.
  2218
  2219	002100'			EATCNT::BLOCK	1		;JOBS TOTALLY EATEN AWAY IN SWOCTX
  2220	002101'			BIGCNT::BLOCK 	1		;JOBS SELECTED AS BIGFIT
  2221	002102'			OUTCNT::BLOCK	1		;JOBS SELECTED AS OUTJOB
  2222	002103'	000000	000000	SSTC1::		0		;SWAPPER/SCHEDULER TEMP COUNTER 1
  2223	002104'	000000	000000	SSTC2:		0		;TO USE THESE, HOOK UP TO CODE OF
  2224	002105'	000000	000000	SSTC3:		0		;INTEREST BY PATCHING MONITOR.  (MPL)ICP
  2225	002106'	000000	000000	SSTC4:		0		;OR ITS SUCCESSORS WILL BE ARRANGED TO
  2226	002107'	000000	000000	SSTC5:		0		;PRINT THESE OUT IF THEY ARE
  2227	002110'	000000	000000	SSTC6:		0		;INCREMENTING.  THEY WILL PRINT ON A
  2228	002111'	000000	000000	SSTC7:		0		;COUNTS/SECOND BASIS.
  2229	002112'	000000	000000	SSTC8:		0		;HAVE FUN!
  2230	002113'	000000	000000	SSTC9:		0		;
  2231	002114'	000000	000000	SSTC0:		0		;
  2232
  2233	002115'			STLBTM::BLOCK	<VPMAX+^D35>/^D36	;BIT MAP FOR PAGES STOLEN IN
  2234								; LMAP ACTIVATE SCAN.
  2235			000012	XP SINTBS,^D10 ;SIZE LITTLE HISTOGRAM OF SWAP-IN SIZES
  2236	002134'			SINTB:: BLOCK SINTBS		;SWILAS RECORDS SIZES OF SWAP-IN
  2237								;REQUESTS HERE
  2238	002146'	000000	000000	LOKJOB::0			;NUMBER OF JOB TO AVOID SWAPPING FOR.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 52
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2239				SUBTTL RESERVE PAGES
  2240
  2241				;SUBROUTINE TO RESERVE PAGES FOR A JOB BEING SWAPPED IN.
  2242				; ONCE THIS ROUTINE RETURNS SUCCESSFULLY FOR A JOB,
  2243				; THAT JOB IS GUARANTEED THAT THE REQUESTED AMOUNT OF CLEAN FREE
  2244				; PAGES WILL BECOME AVAILABLE IN SOME FINITE AMOUNT OF TIME.
  2245				; IN ORDER TO GUARANTEE THIS, PAGES MUST BE TRANSFERRED FROM
  2246				; THE CLEAN AVAILABLE SET TO THE CLEAN RESERVED SET. ONLY JOBS
  2247				; THAT HAVE RESERVED PAGES IN THE SWAPPER ARE ALLOWED TO TAKE
  2248				; A PAGE FROM THE CLEAN FREE LIST AND DECREMENT CRSPGN
  2249				; (RESERVED PAGE COUNT) INSTEAD OF CAVPGN, WHICH ANYONE CAN
  2250				; DECREMENT.  IF THERE ARE NOT ENOUGH CLEAN AVAILALE PAGES
  2251				; AROUND TO TRANSFER OVER TO THE CLEAN RESERVED SET
  2252				; TO SATISFY A REQUEST, THIS ROUTINE MUST RESORT TO SWAPPING
  2253				; OUT PAGES, FIRST FROM THE DIRTY FREE LIST, THEN FROM JOBS'
  2254				; PAGES FROM JOBS THAT ARE SUBJECT TO SWAP OUT. IF THIS IS
  2255				; STILL NOT ENOUGH, THE ERROR RETURN MUST BE GIVEN. IF THIS
  2256				; HAPPENS, NO PAGES ARE RESERVED FOR THE JOB
  2257				;
  2258				;BEFORE THIS ROUTINE STARTS ANY NEW SWAP OUTS, THE
  2259				; CLEAN AVAIL. SOP PAGES PAGE COUNT (CAPPGN) IS CHECKED TO SEE IF
  2260				; THERE ARE PAGES ON THEIR WAY OUT THAT CAN BE USED TO
  2261				; SATISFY A RESERVE REQUEST. IF SO, THESE ARE USED UP BEFORE
  2262				; ANY NEW SWAP OUTS ARE STARTED.
  2263				;
  2264				;GENERAL PLAN:
  2265				;
  2266				;1) SEE IF THERE ARE ENOUGH CLEAN AVAILABLE, CLEAN AVAIL. SOP PAGES, AND DIRTY
  2267				;  FREE PAGES TO SATISFY THIS REQUEST. IF SO, THERE IS NO NEED
  2268				;  TO SWAP OUT PAGES THAT ARE IN SOME JOB'S WORKING SET.
  2269				;  IF THERE ARE NOT ENOUGH PAGES, A ROUTINE IS CALLED TO SCAN
  2270				;  THE SCHEDULER QUEUES BACKWARD, DEACTIVATING ALL THE PAGES
  2271				;  IN THE JOBS' LMAP. THIS WILL MAKE MORE DIRTY AND CLEAN FREE
  2272				;  PAGES AVAILABLE. KEEP DOING THIS UNTIL ENOUGH CLEAN, DIRTY,
  2273				;  FREE AND CLEAN AVAIL. SOP PAGES PAGES ARE AVAILABLE TO SATISFY
  2274				;  THE CALLER'S REQUEST. STOP SCANNING JOBS WHEN THE CALLER'S
  2275				;  QUEUE POSITION IS REACHED.
  2276				;
  2277				;2) WHETHER OR NOT THE SCHEDULER QUEUES WERE SCANNED, TRANSFER
  2278				;  ENOUGH CLEAN AVAILABLE TO CLEAN RESERVED TO HELP SATISFY THE
  2279				;  REQUEST. USE ALL AVAILABLE CLEAN AVAIL. SOP PAGES PAGES.  THEN START
  2280				;  ENOUGH PAGES ON THE DIRTY FREE LIST SWAPPING OUT TO ENSURE THAT
  2281				;  WHEN THEY FINISH SWAPPING OUT, CRSPGN WILL BE INCREMENTED SUFFICIENTLY
  2282				;  TO SATISFY THE CALLER'S REQUEST.
  2283				;
  2284				;NOTE THAT DIRTY SWAP OUT IN PROG. PAGES ARE IN EFFECT TIED
  2285				; UP UNTIL THEY COMPLETE SWAP OUT, SINCE THEY HAVE
  2286				; TO BE STARTED OUT AGAIN BEFORE THEY CAN BE USED.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 53
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2287				;ENTER HERE WITH P3 CONTAINING NUMBER OF PAGES TO RESERVE,
  2288				; J THE JOB NUMBER OF THE JOB TO RESERVE THEM FOR.
  2289
  2290	002147'	265440	002617'	SWPRES:	JSP	T4,SWPSAV	;SAVE P1-P4, W, J, F, U, M
  2291	002150'	202100	002042'		MOVEM	J,FIT		;THIS IS WHERE TO STOP SCANNING
  2292
  2293				;FIRST SEE IF THERE ARE ENOUGH CLEAN AVAILABLE, DIRTY FREE,
  2294				; AND CLEAN AVAILABLE SOP PAGES TO SATISFY THE REQUEST
  2295
  2296	002151'	200300	002025*		MOVE	T1,CAVPGN	;CLEAN AVAILABLE
  2297	002152'	270300	001057*		ADD	T1,DFRPGN	;DIRTY FREE
  2298	002153'	270300	002040'		ADD	T1,CAPPGN	;PLUS ONES THAT WILL BECOME CLEAN AVAIL
  2299	002154'	317700	000006		CAMG	P3,T1		;NEED MORE THAN THAT?
  2300	002155'	254000	002164'		JRST	SWPRS2		;NO. JUST USE WHAT WE NEED.
  2301
  2302				;HERE IF WE MUST MAKE ADDITIONAL CLEAN AVAILABLE AND DIRTY FREE
  2303				; PAGES BY DEACTIVATING LMAP SLOTS OF JOBS ELIGIBLE TO
  2304				;  HAVE PAGES STOLEN. NOTE THAT IF ENOUGH PAGES CANNOT
  2305				; BE FOUND AFTER ALL ELIGIBLE JOBS ARE SCANNED, THE PAGES
  2306				; DEACTIVATED THAT WERE IN JOB'S WORKING SETS REMAIN DEACTIVATED
  2307				; UNTIL THOSE JOBS PAGE FAULT AND HAVE THEIR WORKING SETS
  2308				; RE-ACTIVATED.  THIS OPENS THE POSSIBILITY OF LOWER PRIORITY
  2309				; JOBS TAKING PAGES AWAY FROM HIGHER PRIORITY ONES, SINCE
  2310				; ONCE THE PAGES ARE RETURNED TO A FREE LIST THERE IS NO
  2311				; METHOD OF DETERMINING THE PRIORITY OF THE JOB THAT WAS USING
  2312				; THEM.
  2313
  2314	002156'	200600	000016		MOVE	P1,P3		;START WITH REQUESTED AMOUNT
  2315	002157'	274600	000006		SUB	P1,T1		;GET HOW MANY WE NEED STILL
  2316	002160'	261040	000016		PUSH	P,P3		;SAVE REQUEST AMOUNT ON STACK
  2317	002161'	260040	002212'		PUSHJ	P,SWOSCN	;TRY TO MAKE ENOUGH AVAILABLE
  2318					  JRST	[POP P,P3	;COULD NOT FIND ENOUGH
  2319	002162'	254000	002755'			 POPJ P,]	;SO GIVE ERROR RETURN.
  2320	002163'	262040	000016		POP	P,P3		;RESTORE ORIGINAL REQUEST AMOUNT.
  2321
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 54
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2322				;HERE IF THERE ARE NOW ENOUGH CLEAN AVAILABLE, DIRTY FREE, AND
  2323				; CLEAN AVAIL. SOP PAGES TO SATISFY THE REQUEST.
  2324
  2325	002164'	200300	002151*	SWPRS2:	MOVE	T1,CAVPGN	;GET CLEAN AVAILABLE COUNT
  2326	002165'	313700	000006		CAMLE	P3,T1	;ENOUGH OF THESE?
  2327	002166'	254000	002173'		JRST	SWPRS3		;NO
  2328	002167'	210300	000016		MOVN	T1,P3		;YES. TRANSFER FROM CAVPGN
  2329	002170'	272300	002164*		ADDM	T1,CAVPGN	; TO
  2330	002171'	272700	002021*		ADDM	P3,CRSPGN	;CRSPGN.
  2331	002172'	254000	000174*		JRST	CPOPJ1		;AND GIVE GOOD RETURN
  2332
  2333				;NOT ENOUGH CLEAN AVAILABLE. ENOUGH COUNTING CLEAN AVAIL. SOP?
  2334
  2335	002173'	274700	000006	SWPRS3:	SUB	P3,T1		;HOW MANY WE STILL NEED
  2336	002174'	272300	002171*		ADDM	T1,CRSPGN	;TAKE ALL AVAILABLE CLEAN PAGES
  2337	002175'	402000	002170*		SETZM	CAVPGN
  2338	002176'	200300	002040'		MOVE	T1,CAPPGN	;GET NUMBER OF CLEAN AVAIL SOP PAGES
  2339	002177'	313700	000006		CAMLE	P3,T1		;ENOUGH OF THESE TO COVER REQUEST?
  2340	002200'	254000	002205'		JRST	SWPRS4		;NO, TAKE ALL CAPPGN AND START SWAPPING OUT
  2341	002201'	210300	000016		MOVN	T1,P3		;YES, TAKE FROM CAPPGN
  2342	002202'	272300	002040'		ADDM	T1,CAPPGN	;AND
  2343	002203'	272700	002037'		ADDM	P3,RIPPGN	;CAUSE THESE TO INCREMENT CRSPGN WHEN
  2344	002204'	254000	002172*		JRST	CPOPJ1		; THEY FINISH SWAPPING. GIVE GOOD RETURN.
  2345
  2346				;HERE IF CLEAN AVAIL. SOP PAGES WERE NOT ENOUGH TO SATISFY REQUEST.
  2347				; MUST START OUT PAGES FROM DIRTY FREE LIST.
  2348
  2349	002205'	274700	000006	SWPRS4:	SUB	P3,T1		;GET HOW MANY WE STILL NEED
  2350	002206'	272300	002037'		ADDM	T1,RIPPGN	;ALL CAPPGN CONVERTED TO RIPPGN
  2351	002207'	402000	002040'		SETZM	CAPPGN		;WE'VE TAKEN ALL CLEAN AVAIL. SOP PAGES
  2352	002210'	350001	000000		AOS	(P)		;GIVE SKIP RETURN.
  2353	002211'	324740	002451'		PJRST	SWOSTR		;GO START OUT C(P3) PAGES.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 55
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2354				;		FIND JOB TO SWAP OUT
  2355
  2356				;HERE TO SELECT (IF NECESSARY) A NEW OUTJOB, OR TO CONTINUE
  2357				;EATING AWAY FROM CURRENT OUTJOB.  SCAN FOR NEW OUTJOB ONLY IF
  2358				;CURRENT ONE CANNOT BE EATEN ANY LONGER (RAN OUT OF PGS OR NO
  2359				;LONGER ELIGIBLE TO BE EATEN).  COMPUTE POSAVL (UPPER BOUND
  2360				;ON HOW MANY PGS WE COULD POSSIBLY GET BY SCANNING) THE FIRST
  2361				;TIME IN ANY CYCLE THAT WE ARE FORCED TO SCAN .
  2362				;EXPECTS P1/PAGES WE STILL NEED (SO WE CAN USE GETLMS)
  2363
  2364
  2365	002212'	335100	002044'	SWOSCN:	SKIPGE	J,OUTJOB	;ARE WE OUT OF JOBS THIS CYCLE?
  2366					JRST	[AOS HEQCNT	;YES, INCREMENT COUNTER AND
  2367	002213'	254000	002757'			 POPJ P,]	;GIVE FAIL RETURN.
  2368	002214'	336300	002052'		SKIPN	T1,POSAVL	;SKIP IF WE ALREADY KNOW POSAVL THIS
  2369	002215'	254000	002220'		JRST	SWOSC0		;CYCLE. (DONT,CAN'T COMPARE YET)
  2370	002216'	313600	000006		CAMLE	P1,T1		;ASKING FOR MORE THAN WE CAN GIVE?
  2371					 JRST	[AOS NAPCNT
  2372	002217'	254000	002761'			 POPJ P,]	;FAIL RET
  2373	002220'			SWOSC0:
  2374	002220'	200540	002050'		MOVE 	M,SVQRPC	;LEFT BY QSCAN OR INIT BY SRSINI
  2375	002221'	200200	002051'		MOVE	F,SVQRTN	;LEFT BY JSP F,QSCAN
  2376	002222'	200240	002047'		MOVE	U,SVQPOS	;LAST POSITION IN OSCAN
  2377	002223'	327100	002252'		JUMPG	J,SWOSC3	;SEE IF CAN EAT MORE FROM JOB J
  2378
  2379	002224'			SWOSC1:	;ENTER HERE VIA JRST (M) IF OUTJOB EXISTING AT START
  2380					;OF CYCLE NO LONGER ANY GOOD, OR FALL THRU FROM ABOVE IF
  2381					;START CYCLE WITH NO OUTJOB.  NEED TO SCAN, SO COMPUTE
  2382					;POSAVL FIRST.
  2383
  2384
  2385				;POSAVL:=MAX POSSIBLE PAGES SCANNING COULD PRODUCE THIS CYCLE =
  2386				;SUM(JBYACT) FOR ALL ELIGIBLE JOBS IN OSCAN.
  2387
  2388	002224'	400740	000000		SETZ	P4,		;INIT COUNT
  2389	002225'	201240	000747'		MOVEI	U,OSCAN		;WHERE TO SCAN
  2390	002226'	265200	000317'		JSP	F,QSCAN		;START SCANNING
  2391	002227'	254000	002243'		  JRST	SWOSC2		;SCAN HIT END,GO STORE ANSWER
  2392	002230'	200302	002034*		MOVE	T1,JBTSTS(J)	;GET JBTSTS
  2393	002231'	335002	001515*		SKIPGE	JBTCTX(J)	;IF NO CORE, FORGET IT
  2394	002232'	612300	002763'		TDNE	T1,[<CMWB>B17!SWPINP] ;IF EITHER OF THESE ON, FORGET IT
  2395	002233'	254013	000000		JRST	(M)		;GO FOR ANOTHER
  2396	002234'	603300	400000		TLNE	T1,RUN		;HE'S ELIGIBLE, RUN OFF OR ICPT EXPIRED?
  2397	002235'	335002	000165*		SKIPGE	JBTICT(J)	; ICPT IS IN LH JBTICT
  2398	002236'	254000	002240'		JRST	.+2		;HE'S FAIR GAME
  2399	002237'	254013	000000		JRST	(M)		;SORRY, CAN'T COUNT HIM.
  2400	002240'	135300	000000*		LDB	T1,JBYACT	;OK, GET NUMBER OF ACTIVE PAGES
  2401	002241'	270740	000006		ADD	P4,T1		;ADD IT TO TOTAL
  2402	002242'	254013	000000		JRST	(M)		;AND GO FOR MORE
  2403	002243'	202740	002052'	SWOSC2:	MOVEM	P4,POSAVL	;THIS IS UPPER  BOUND
  2404	002244'	313600	000017		CAMLE	P1,P4		;IS REQUEST IN LINE?
  2405					JRST	[AOS NAPCNT	;NO, RETURN NOW.
  2406	002245'	254000	002761'			 POPJ P,]	;CAN'T DO ANTHING FOR HIM.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 55-2
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2407
  2408
  2409
  2410	002246'	201240	000747'	SWOSC4:	MOVEI	U,OSCAN		;SCAN TABLE TO FIND SWAP OUT JOBS
  2411	002247'	402000	002044'		SETZM	OUTJOB		;NO JOB TO EAT UNTIL QSCAN PRODUCES ONE
  2412	002250'	265200	000317'		JSP	F,QSCAN		;***SCAN QUEUES FOR JOB***
  2413	002251'	324740	002414'		  PJRST	SWODNN		;COULDN'T GET ENOUGH, ERROR RETURN
  2414
  2415				;CHECK ELIGIBILITY OF JOB IN J. MAY HAVE BEEN FOUND PREVIOUS CYCLE
  2416
  2417	002252'	316100	002146'	SWOSC3:	CAMN	J,LOKJOB	;AVOID TAKING PAGES
  2418	002253'	254013	000000		JRST	(M)		;FROM THIS GUY
  2419	002254'	200302	002230*		MOVE	T1,JBTSTS(J)	;GET JBTSTS WORD
  2420	002255'	602300	002000		TRNE	T1,SWPINP	;SWAP ALREADY IN PROGRESS (IN?)
  2421	002256'	254013	000000		JRST	(M)		;YES, GET ANOTHER JOB
  2422	002257'	607300	400000		TLNN	T1,RUN		;IS RUN BIT OFF?
  2423	002260'	254000	002263'		JRST	SWOSC5		;IS OFF, IGNORE ICPT
  2424	002261'	331002	002235*		SKIPL	JBTICT(J)	;NO, IN CORE TIME OUT?
  2425	002262'	254013	000000		JRST	(M)		;NOT YET, DON'T TOUCH THIS JOB
  2426	002263'	335002	002231*	SWOSC5:	SKIPGE	JBTCTX(J)	;DON'T TOUCH IF NO CORE AND
  2427	002264'	603300	200000		TLNE	T1,CMWB		;DON'T TOUCH JOBS WAITING FOR COMMANDS
  2428	002265'	254013	000000		JRST	(M)
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 56
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2429				;		EAT AWAY AT JOB IN J
  2430
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 57
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2431				;HERE IF JOB IS OK TO TAKE PAGES FROM.  AVOID DEACTIVATING
  2432				; CONTEXT PAGES IF THERE ARE STILL ACTIVE PAGES IN THE LMAP,
  2433				; SINCE THIS WOULD LEAD TO DISASTER. IF ANY OF THE CONTEXT
  2434				; PAGES ARE DEACTIVATED, MUST SET MRQ SO THE SWAPPER CAN
  2435				; ACTIVATE CONTEXT PAGES AGAIN, WHICH IS NECESSARY BEFORE
  2436				; JOB CAN BE MADE RUNNABLE AGAIN, SINCE PAGE
  2437				; FAULT ASSUMES ADDRESSABLE CONTEXT PAGES.
  2438				;
  2439				;DEACTIVATE JOB'S PAGES ONE AT A TIME. IF PAGE HAS DIRECT
  2440				; I/O IN PROGRESS, AVOID DEACTIVATING IT AS DEACTIVATE WILL TRY
  2441				; TO INSTRUCT SCHEDULER TO WAIT UNTIL I/O HAS STOPPED FOR PAGE.
  2442				; (THIS WILL KEEP CONTEXT PAGES FROM BEING DEACTIVATED, IF IT
  2443				; HAPPENS, SINCE THERE IS NO ATTEMPT TO DEACTIVATE THE PAGE
  2444				; IF IT IS FOUND WITH THE DIC COUNT UP). IF USE COUNT IS NON-ZER
  2445				; AFTER DEACTIVATING, JUST STEP TO NEXT PAGE, SINCE
  2446				; THE CORE PAGE WAS NOT MADE AVAILABLE. IF USE COUNT IS NOW ZERO,
  2447				; AND IF SWAP OUT IN PROGRESS IS OFF (SWPINP COULDN'T BE ON BECAUSE
  2448				; LMAP SLOT WAS ACTIVE) DECREMENT COUNT OF HOW MANY PAGES
  2449				; ARE NEEDED, SINCE THE PAGE WAS RETURNED TO THE FREE LIST
  2450				; (CLEAN OR DIRTY) BY DECUSE, WHICH WAS CALLED BY DEALMS.
  2451				; IF SWAP OUT IN PROGRESS WAS ON, INCREMENT CAPPGN AND CALLER
  2452				; WILL TRANSFER THAT QUANTITY TO RIPPGN.
  2453
  2454	002266'	403500	002045'	SWOSJ0:	SETZB	W,OUTJPG	;W/VP STARTS AT 0; NO PGS EATEN FROM OUTJOB
  2455	002267'	202100	002044'		TRACE(9,<MOVEM	J,OUTJOB>)	;THIS JOB IS NOW ON ITS WAY OUT
  2456	002270'	200300	002764'		MOVE	T1,[MRQ,,SETICP] ;SAY WE'VE EATEN HIM, AND NAIL HIM DOWN SO HE DOESNT
  2457	002271'	436302	002254*		IORM	T1,JBTSTS(J)	;CHANGE QUEUES ETC.
  2458	002272'	350000	002102'		AOS	OUTCNT		;ONE MORE GUY CHOSEN AS OUTJOB
  2459	002273'	261040	000005		PUSH	P,U
  2460	002274'	261040	000013		PUSH	P,M
  2461	002275'	261040	000004		PUSH	P,F		;SAVE ACS THAT NXSMWS USES
  2462	002276'	260040	002010*		PUSHJ	P,MAPUPS	;MAKE THIS JOB'S LMAP ADDRESSABLE
  2463	002277'	205640	002014*		MOVSI	P2,LMPACT	;FOR QUICK CHECKING
  2464
  2465	002300'	265200	001615*	SWOSJ1:	JSP	F,NXSMWS	;GET NEXT MWS PAGE
  2466	002301'	254000	002336'		  JRST	SWOCTX		;NO MORE MWS PAGES, GO EAT CONTEXT PAGES.
  2467	002302'	616652	001620*		TDNN	P2,%UPLMS(W)	;IS IT ACTIVE?
  2468	002303'	254013	000000		JRST	(M)		;NO, GET NEXT ONE
  2469	002304'	260040	002013*		PUSHJ	P,GETLMS	;GET LMAP SLOT DATA IN P3, P4
  2470	002305'	603700	000000*		TLNE	P3,LMPLOK	;IF THE VP IS LOCKED IN CORE,
  2471	002306'	254000	001555'		JRST	MWSMNX		; CAN'T HAVE IT.
  2472	002307'	260040	000000*		PUSHJ	P,GETCPA	;GET CORE PAGE NUMBER IN PG
  2473	002310'	135300	000000*		LDB	T1,PGYDIO	;ANY DIRECT I/O GOING ON IN THIS PAGE?
  2474	002311'	326300	001555'		JUMPN	T1,MWSMNX	;YES, CAN'T DEACTIVATE IT YET. MAYBE
  2475								; NEXT SWAPPER CYCLE
  2476	002312'	260040	002016*		PUSHJ	P,DEALMS	;OK. DEACTIVATE.
  2477	002313'	350000	002063'		AOS	DEACNT		;COUNT ANOTHER ONE
  2478	002314'	333000	002052'		SKIPLE	POSAVL		;UNLESS POSAVL WASNT COMPUTED,
  2479	002315'	370000	002052'		SOS	POSAVL		;NOTE ONE LESS POSSIBLE AVAIL PG
  2480	002316'	350340	002045'		AOS	T2,OUTJPG	;PGS EATEN FROM OUTJOB
  2481	002317'	260040	002017*		PUSHJ	P,STOLMS	;PUT LMAP SLOT DATA BACK
  2482	002320'	135300	001631*		LDB	T1,PGYUSE	;SEE IF IT WAS MADE AVAILABLE
  2483	002321'	326313	000000		JUMPN	T1,(M)		;JUMP IF NOT YET. MAYBE LATER.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 57-2
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2484
  2485				;HERE IF WE JUST DEACTIVATED THE SLOT AND ITS USE COUNT
  2486				; WENT TO ZERO.
  2487
  2488	002322'	135300	001626*		LDB	T1,PGYSTS	;GET CP STATUS BITS
  2489	002323'	606300	000000*		TRNN	T1,PGPSIP!PGPSOP ;ANY SWAPPING GOING?
  2490	002324'	254000	002330'		JRST	SWOSJ4		;NO, COUNT ONE LESS PAGE
  2491	002325'	606300	001627*		TRNN	T1,PGPSIP	;IF SWAP IN OR
  2492	002326'	602300	001633*		TRNE	T1,PGPDRT	;DIRTY SWAP OUT
  2493	002327'	254013	000000		JRST	(M)		;IT DOES US NO GOOD.
  2494								;NO, CAPPGN WAS INCREMENTED BY DECUSE
  2495								; WHEN THIS SLOT WAS DEACTIVATED.
  2496								; CALLER WILL DECREMENT CAPPGN AND INCREMENT RIPPGN.
  2497	002330'	367613	000000	SWOSJ4:	SOJG	P1,(M)		;NEED ONE LESS PAGE NOW.
  2498	002331'	265200	001742*		JSP	F,FINXWS	;FIX UP STACK
  2499	002332'	262040	000004	SWOS4A:	POP	P,F		;RESTORE SAVED ACS
  2500	002333'	262040	000013		POP	P,M
  2501	002334'	262040	000005		POP	P,U
  2502	002335'	254000	002410'		JRST	SWODON		;WE HAVE ALL WE NEED, GIVE GOOD RETURN
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 58
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2503				;HERE WHEN WE HAVE DEACTIVATED EVERYTHING WE CAN IN THE MWS FOR
  2504				; THE UNFORTUNATE JOB. TRY TO DEACTIVATE ALL THE CONTEXT PGES.
  2505				; CANNOT DO IT IF ANY OTHER PAGES LEFT ACTIVE. IF WE DO
  2506				; DEACTIVATE THE CONTEXT PAGES, IT MUST BE DONE ALL AT ONCE
  2507				; OR ELSE WE CAN'T MAKE THE ENTIRE LMAP ADDRESSABLE TO DEACTIVATE
  2508				; ANY REMAINING ONES.
  2509
  2510	002336'	205300	100000	SWOCTX:	MOVSI	T1,MRQ		;EITHER TAKING HIS CONTEXT PAGES, SO NEED MRQ ON
  2511	002337'	436302	002271*		IORM	T1,JBTSTS(J)	;OR CAN'T TAKE THEM, SO SET MRQ TO SETTLE HIM DOWN.
  2512	002340'	135300	002240*		LDB	T1,JBYACT	;GET NUMBER OF ACTIVE PAGES INCLUDING CONTEXT PGES.
  2513	002341'	312100	000154*		CAME	J,JOB		;IF THIS IS CURRENT JOB, ACS NOT YET
  2514								;SAVED, SO CAN'T DO IT YET.
  2515	002342'	303300	001523*		CAILE	T1,NCTXPG	;ANY PAGES ACTIVE OTHER THAN THE CONTEXT PAGES?
  2516	002343'	254000	002404'		JRST	SWOSJ5		;CAN'T DEACTIVATE CONTEXT PAGES
  2517	002344'	205300	400000		MOVSI	T1,CTXCIN	;NO. FLAG THAT CONTEXT PAGES NOT IN ANYMORE
  2518	002345'	412302	002263*		ANDCAM	T1,JBTCTX(J)
  2519	002346'	513002	001471*		HLLZS	JBTUPM(J)	;CLEAR OUT RH OF JBTUPM (UPT ADDRESS)
  2520	002347'	350000	002100'		AOS	EATCNT		;ONE MORE JOB TOTALLY EATEN
  2521	002350'	200500	002765'		MOVE	W,[-NCTXPG,,%UPT.N+CNVVPN] ;GET AOBJN POINTER
  2522	002351'	260040	002304*	SWOCT1:	PUSHJ	P,GETLMS	;GET SLOT DATA
  2523	002352'	260040	002307*		PUSHJ	P,GETCPA	;GET CORE ADDRESS
  2524	002353'	135300	002310*		LDB	T1,PGYDIO	;NO DIO ALLOWED IN CONTEXT PAGES
  2525	002354'	332000	000006		SKIPE	T1
  2526	002355'	256000	000000'		 STOPCD			;(ONLY PRIV PEOPLE CAN TO THIS) ;;SWOCT1+4
  2527	002356'	135300	001702*		LDB	T1,PGYSIP	;SWAP IN CAN'T BE GOING ON
  2528								; (SWAP OUT CAN HAPPEN IF JOB
  2529								; HAS RECONNECTED WHILE IT WAS GOING OUT)
  2530	002357'	332000	000006		SKIPE	T1
  2531	002360'	256000	000000'		 STOPCD                         ;;SWOCT1+7
  2532	002361'	260040	002312*		PUSHJ	P,DEALMS	;DEACTIVATE THIS ONE
  2533	002362'	333000	002052'		SKIPLE	POSAVL		;UNLESS POSAVL WASNT COMPUTED,
  2534	002363'	370000	002052'		SOS	POSAVL		;NOTE ONE LESS POSSIBLE AVAIL PG
  2535	002364'	316100	001374*		CAMN	J,UPSJOB	;DID DEALMS CHANGE %UPS?
  2536	002365'	254000	002372'		JRST	SWOCT2		;NO
  2537	002366'	261040	000003		PUSH	P,PG		;SAVE PG FROM MPSUPS
  2538	002367'	260040	002651'		PUSHJ	P,MPSUPS	;YES, POINT IT BACK TO US
  2539	002370'	202100	002364*		MOVEM	J,UPSJOB	;STORE BY HAND, MPSUPS ZEROES IT.
  2540	002371'	262040	000003		POP	P,PG		;GET CP BACK THAT DEALMS SAVED FOR US.
  2541	002372'	260040	002317*	SWOCT2:	PUSHJ	P,STOLMS	;PUT DATA BACK
  2542
  2543				;NOW SEE IF WE HAVE HELPED MATTERS ANY
  2544
  2545	002373'	135300	002320*		LDB	T1,PGYUSE	;GET USE COUNT NOW
  2546	002374'	326300	002401'		JUMPN	T1,SWOCT3	;IF USE COUNT UP, HAVEN'T FREED IT.
  2547	002375'	135300	002322*		LDB	T1,PGYSTS	;GET CP STATUS BITS
  2548	002376'	602300	001635*		TRNE	T1,PGPSOP	;ONE LESS IF NOT A DIRTY SOP PAGE
  2549	002377'	606300	002326*		TRNN	T1,PGPDRT
  2550	002400'	370000	000014		SOS	P1		;ITS GOOD.
  2551	002401'	253500	002351'	SWOCT3:	AOBJN	W,SWOCT1	;DO NEXT ONE.
  2552	002402'	402000	002370*		SETZM	UPSJOB		;CONTEXT PAGES ARE GONE, WERE MAPPED IN %UPS.
  2553	002403'	323600	002332'		JUMPLE	P1,SWOS4A	;IF HAVE SATISFIED HUNGER,
  2554								; GO FIX STACK AND RETURN.
  2555
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 58-2
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2556	002404'	262040	000004	SWOSJ5:	POP	P,F		;RESTORE F, NO MORE MWS PAGES IN THIS JOB
  2557	002405'	262040	000013		POP	P,M		;RESTORE M
  2558	002406'	262040	000005		POP	P,U		;RESTORE U AND
  2559	002407'	254013	000000		JRST	(M)		;GO FOR ANOTHER JOB.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 59
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2560				;HERE WHEN REQUESTED NUMBER OF PAGES HAVE BEEN SUCCESSFULLY
  2561				; RESERVED, AND ALL I/O THAT CAN BE STARTED UP IS STARTED UP.
  2562
  2563	002410'			SWODON:
  2564	002410'	202200	002051'		MOVEM	F,SVQRTN	;SAVE COROUTINE RETURN, CONTINUE
  2565	002411'	202540	002050'		MOVEM	M,SVQRPC	;PC (M) AND OSCAN POSITION (U) IN
  2566	002412'	202240	002047'		MOVEM	U,SVQPOS	;CASE FURTHER SWOSCN CALLS THIS
  2567								;CYCLE NEED TO CONTINUE SCAN
  2568	002413'	254000	002204*		JRST	CPOPJ1		;SKIP RETURN.
  2569
  2570				;HERE IF NO MORE JOBS IN QUEUES TO SCAN
  2571
  2572	002414'	350000	002066'	SWODNN:	AOS	HEQCNT		;REASON WE STOPPED
  2573	002415'	476000	002044'		SETOM	OUTJOB		;SET OUTJOB NEGATIVE AS A FLAG
  2574								;TO FURTHER SWOSCN CALLS THIS
  2575								;CYCLE:  OUT OF JOBS
  2576	002416'	263040	000000		POPJ	P,		;AND RETURN.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 60
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2577				;SUBROUTINES SWOSTR AND CLNALL. IF ENTER AT SWOSTR, P3
  2578				; CONTAINS THE NUMBER OF PAGES ON THE DIRTY FREE LIST
  2579				; THAT SHOULD BE STARTED OUT. RIPPGN IS ADJUSTED.
  2580				;
  2581				;CLNALL STARTS OUT ALL PAGES ON DIRTY FREE LIST AND UP TO
  2582				;DIUQTA DIRTY IN-USE PAGES. CALLED PERIODICALLY.
  2583
  2584
  2585
  2586	002417'			SWPSEC::			;HERE ONCE A SEC FROM CLOCK1
  2587	002417'	550140	000000*	CLNALL:	HRRZ	PG,DFRLST	;LIST MAY BE EMPTY..
  2588	002420'	322140	002430'		JUMPE	PG,USECLN	;TRY ELSEWHERE
  2589	002421'	201700	020001		MOVEI	P3,20001	;ONE GREATER THAN MAXIMUM PHYS PAGE
  2590	002422'	260040	002454'		PUSHJ	P,SWOST0	;CALL COMMON CODE
  2591	002423'	275700	020002		SUBI	P3,20002	;GET -VE NUMBER THAT WERE ON DFRLST
  2592	002424'	322700	002430'		JUMPE	P3,USECLN	;DID NOTHING. TRY ELSEWHERE
  2593	002425'	272700	002152*		ADDM	P3,DFRPGN	;DECREMENT DFRPGN
  2594	002426'	213000	000016		MOVNS	P3		;GET NUMBER THAT WERE ON DFRLST
  2595	002427'	272700	002040'		ADDM	P3,CAPPGN	;NOW THIS MANY ARE CLEAN AVAIL SOP.
  2596
  2597	002430'	337600	002046'	USECLN:	SKIPG	P1,DIUQTA	;DIRTY-IN-USE CLEANUP QUOTA
  2598	002431'	263040	000000		POPJ	P,
  2599	002432'	550140	000000*		HRRZ	PG,USELST
  2600	002433'	322140	001103*		JUMPE	PG,CPOPJ
  2601	002434'	135640	001047*	USECL1:	LDB	P2,PGYFPL	;GET BEFORE SWPIO ERASES IT
  2602	002435'	135300	001473*		LDB	T1,PGYDRT
  2603	002436'	322300	002446'		JUMPE	T1,USECL2	;CLEAN PAGE?
  2604	002437'	317140	001075*		CAMG	PG,MAXPCB	;AVOID CLEANUP OF PCB'S
  2605	002440'	254000	002446'		JRST	USECL2
  2606	002441'	135340	001243*		LDB	T2,PGYADR	;DSK PAGE FOR THIS CORE PG
  2607	002442'	316340	001237*		CAMN	T2,ADRDUM	;PHONY?
  2608	002443'	254000	002446'		JRST	USECL2		;YES,HANGING AROUND FROM SYS INIT'ZN STILL
  2609	002444'	137300	001333*		DPB	T1,PGYSOP	;OK..THIS IS A CANDIDATE PAGE TO CLEANUP
  2610	002445'	260040	002532'		PUSHJ	P,SWPIO		;GET IT GOING
  2611	002446'	332140	000015	USECL2:	SKIPE	PG,P2		;WAS THERE ANOTHER PG ON USELST
  2612	002447'	367600	002434'		SOJG	P1,USECL1	;ANOTHER EXISTS. DIUQTA RUN OUT?
  2613	002450'	263040	000000		POPJ	P,		;ALL DONE.
  2614
  2615
  2616
  2617	002451'	210300	000016	SWOSTR:	MOVN	T1,P3		;GET -VE NUMBER TO GO
  2618	002452'	272300	002425*		ADDM	T1,DFRPGN	;THIS MANY LESS NOW.
  2619	002453'	272700	002037'		ADDM	P3,RIPPGN	;THIS MANY MORE SOP-RES.
  2620
  2621	002454'	201740	000001	SWOST0:	MOVEI	P4,1		;QUICK SOURCE OF ONES
  2622	002455'	550140	002417*		HRRZ	PG,DFRLST	;FIRST PAGE
  2623	002456'	322140	002433*		JUMPE	PG,CPOPJ	;END OF LIST, DONE
  2624
  2625	002457'	137740	002444*	SWOST1:	DPB	P4,PGYSOP	;SWAP OUT NOW IN PROGESS
  2626	002460'	135640	002434*		LDB	P2,PGYFPL	;GET NEXT PAGE BEFORE ITS TOO LATE
  2627	002461'	260040	002532'		PUSHJ	P,SWPIO		;PUT ON I/O ACTIVE LIST
  2628	002462'	332140	000015		SKIPE	PG,P2
  2629	002463'	367700	002457'		SOJG	P3,SWOST1	;AND CONTINUE WHILE THERE ARE SOME LEFT
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 60-2
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2630	002464'	263040	000000		POPJ	P,
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 61
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2631				;ROUTINE TO GIVE BACK RESERVED PAGES, NUMBER TO GIVE
  2632				; BACK IN P1. FIRST TRY TO TRANSFER ENOUGH PAGES FROM RESERVED
  2633				; TO CLEAN AVAILABLE IN PROGRESS TO GIVE BACK ENOUGH.  IF THAT
  2634				; IS NOT ENOUGH, TRANSFER PAGES FROM CRS TO CAV
  2635				; NOTE: WE SHOULD REALLY TAKE CARE OF IOSPGN HERE, BUT
  2636				; FOR NOW ITS NOT WORTH IT.
  2637
  2638	002465'	200300	002037'	DECRES:	MOVE	T1,RIPPGN	;GET COUNT OF RESERVED IN PROGRESS
  2639	002466'	311600	000006		CAML	P1,T1		;ENOUGH IN PROGRESS
  2640	002467'	254000	002472'		JRST	DECRS1		;NO, HAVE TO DO MORE
  2641	002470'	272600	002040'		ADDM	P1,CAPPGN	;YES, JUST MAKE MORE CLEAN AVAIL SOP
  2642								; PAGES, WILL BECOME FREE WHEN DONE.
  2643	002471'	263040	000000		POPJ	P,		;RETURN
  2644
  2645	002472'	272300	002040'	DECRS1:	ADDM	T1,CAPPGN	;ALL FORMERLY RESERVED SOP PAGES ARE
  2646								; NOW CLEAN FREE SOP PAGES.
  2647	002473'	402000	002037'		SETZM	RIPPGN		;SEE? NO MORE.
  2648	002474'	276600	000006		SUBM	P1,T1		;T1 GETS HOW MANY MORE WE NEED
  2649	002475'	272300	002175*		ADDM	T1,CAVPGN	;CREATE THAT MANY MORE CLEAN AVAIL.
  2650	002476'	213000	000006		MOVNS	T1		;SUBTRACT IT OFF CRSPGN
  2651	002477'	272300	002174*		ADDM	T1,CRSPGN
  2652	002500'	263040	000000		POPJ	P,		;RETURN.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 62
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2653				;ROUTINE TO INITIALIZE SWAPPER FOR NEXT CYCLE
  2654
  2655	002501'			SRSINI:
  2656	002501'	402000	002052'		SETZM	POSAVL		;UPPER BOUND ON GRABBABLE PAGES.
  2657	002502'	201300	002224'		MOVEI	T1,SWOSC1	;INITIALIZE FOR SWOSCN
  2658	002503'	202300	002050'		MOVEM	T1,SVQRPC	;TO FORCE COMPLETE NEW OSCAN WHEN
  2659								;ENTERING SWAPPER WITH A JOB IN OUTJOB
  2660	002504'	335000	002044'		SKIPGE	OUTJOB		;IF LEFT -1 LAST CYCLE (HEQ),
  2661	002505'	402000	002044'		SETZM	OUTJOB		;FORCE NEW OSCAN IN SWOSCN
  2662	002506'	263040	000000		POPJ	P,
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 63
SCHED1.MAC	 4-DEC-87 16:14		RESERVE PAGES

  2663				;ROUTINE NAILIT. CALLED WITH ROUTINE THAT NAILS DOWN
  2664				; A CORE PAGE IN T4 (EITHER ACTLMS OR INCCTX),
  2665				; PAGE TO NAIL DOWN IN PG, LMAP SLOT DATA IN P3, P4.
  2666				; INCREMENTS S IF HAD TO STEAL A CLEAN RESERVED PAGE,
  2667				; INCREMENTS P2 IF HAD TO STEAL A RESERVED SWAP OUT IN
  2668				; PROGRESS PAGE.
  2669
  2670
  2671	002507'	135300	002373*	NAILIT:	LDB	T1,PGYUSE	;IF USE COUNT UP, CAN JUST ACTIVATE
  2672	002510'	326311	000000		JUMPN	T1,(T4)		;CALL THE CORRECT ACTIVATE ROUTINE.
  2673	002511'	135300	002375*		LDB	T1,PGYSTS	;GET CP STATUS BITS
  2674	002512'	602300	000000*		TRNE	T1,PGPSIP!PGPDRT ;IF SWAP IN OR DIRTY
  2675	002513'	254011	000000		JRST	(T4)		;JUST NAIL IT.
  2676	002514'	606300	002376*		TRNN	T1,PGPSOP	;IF SWAP OUT GOING
  2677	002515'	254000	002524'		JRST	NAILI2		;(MUST BE CLEAN FREE)
  2678
  2679				;SWAP OUT IN PROGRESS.
  2680
  2681	002516'	332000	002040'		SKIPE	CAPPGN		;IS THERE ONE AVAILABLE?
  2682	002517'	254011	000000		JRST	(T4)		;YES, JUST NAIL FOR FREE.
  2683	002520'	375000	002037'		SOSGE	RIPPGN		;NO, MUST STEAL ONE.
  2684	002521'	256000	000000'		 STOPCD			;BUT CAPPGN WAS ZERO!   ;;NAILIT+12
  2685	002522'	350000	002040'		AOS	CAPPGN		;NOW MAKE STOLEN ONE AVAILABLE
  2686	002523'	344651	777777		AOJA	P2,-1(T4)	;RECORD THEFT AND NAIL DOWN.
  2687								; AD GO NAIL, TELLING ROUTINE IT WAS STOLEN.
  2688
  2689				;HERE IF PAGE DOES NOT HAVE SWAPPING GOING ON TO OR
  2690				; FROM IT.
  2691
  2692	002524'	333000	002475*	NAILI2:	SKIPLE	CAVPGN		;NO, CLEAN. AVAILABLE?
  2693	002525'	254011	000000		JRST	(T4)		;YES. CAVPGN OK, GO ACTIVATE
  2694	002526'	375000	002477*		SOSGE	CRSPGN		;STEAL A CLEAN-RESERVED PAGE
  2695	002527'	256000	002766'		 STOPCD (.,JOB,NAILI3,,<Counts and CFRLST don't agree in NAILIT>);NAILI2+3
  2696	002530'	350000	002524*		AOS	CAVPGN		;ONE MORE AVAILABLE PAGE NOW
  2697	002531'	344011	777777		AOJA	S,-1(T4)	;REMEMBER WE STOLE ONE OF THESE
  2698								; AND GO NAIL IT, TELLING ROUTINE ITS STOLEN. RETURN.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 64
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O

  2699				SUBTTL START SWAPPING I/O
  2700
  2701				COMMENT ;@@SUBROUTINE SWPIO
  2702				@@PURPOSE START SWAPPING I/O FOR CORE PAGE IN PG
  2703				@@ENTRY CORE PAGE IN PG, WITH PGYSIP OR PGYSOP ON
  2704				INDICATING DIRECTION OF DESIRED SWAP.
  2705				@@ACCUM PRESERVES ALL BUT T ACS
  2706				@@EXIT CORE PAGE IN PG
  2707				@@RESTRICTIONS CALLER MUST UPDATE CAVPGN OR RIPPGN IF THIS IS A
  2708				SWAP OUT PAGE.
  2709				@@FUNCTION IF SWAP IN IS REQUESTED, JUST ENTER REQUEST
  2710				USING SWPENQ. IF SWAP OUT IS REQUESTED, MARK PAGE
  2711				CLEAN, TURN OFF W BITS FOR ALL SLOTS ON LMA CHAIN.
  2712				IF ONE OF THE SLOTS IS A CONTEXT PAGE SLOT, DON'T MARK
  2713				CLEAN AND DISCONTINUE TURNING W BITS OFF.
  2714				@@;
  2715
  2716	002532'	265440	002617'	SWPIO::	JSP	T4,SWPSAV	;SAVE F,J,W,M,U,P1-P4
  2717	002533'	135300	002356*		LDB	T1,PGYSIP	;SWAP IN REQUESTED?
  2718	002534'	326300	000000*		JUMPN	T1,SWPENQ	;YES, JUST CAL SWPENQ
  2719	002535'	135300	002457*		LDB	T1,PGYSOP
  2720	002536'	336000	000006		SKIPN	T1
  2721	002537'	256000	000000'		 STOPCD			;DON'T KNOW WHAT HE WANTS       ;;SWPIO+5
  2722	002540'	201300	001205*		MOVEI	T1,SRPNDS	;IF DSKCLN HAS YET TO FINISH,
  2723	002541'	612300	000000*		TDNE	T1,STRDDB+STRBTS
  2724	002542'	254000	002560'		JRST	SWPIO3		;THEN DO SPECIAL THING.
  2725	002543'	265200	000000*		JSP	F,SCNLMC	;START SCANNING THE LMA CHAIN
  2726	002544'	254000	002553'		  JRST	SWPIO2		;END OF CHAIN
  2727	002545'	307500	000000*		CAIG	W,VPUMAX	;IS IT A CONTEXT PGE?
  2728	002546'	254000	002551'		JRST	SWPIO1		;NO, JUST TURN OFF W BIT
  2729	002547'	265200	000000*		JSP	F,FINLMC	;YES. STOP SCANNING
  2730	002550'	254000	002534*		JRST	SWPENQ		;AND LEAVE THE PAGE DIRTY.
  2731
  2732	002551'	620740	100000	SWPIO1:	TRZ	P4,PGE.W	;PAGE IS CLEAN NOW, DON'T LET PEOPLE
  2733	002552'	254013	000000		JRST	(M)		;WRITE. STEP TO NEXT SLOT
  2734	002553'	135300	002435*	SWPIO2:	LDB	T1,PGYDRT	;MAKE SURE NOT SWAPPING OUT CLEAN PAGE
  2735	002554'	372000	000006		SOSE	T1		;CHECK AND ZERO T1 IF OK
  2736	002555'	256000	000000'		 STOPCD			;YES, TOO MUCH SWAPPING GOING ON  ;;SWPIO2+2
  2737	002556'	137300	002553*		DPB	T1,PGYDRT
  2738	002557'	324740	002550*		PJRST	SWPENQ		;AND GO START I/O.
  2739				;CONTINUED ON NEXT PAGE
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 65
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O

  2740				;THE FOLLOWING CODE EXISTS AS A CHECK DURING THE TIME WHEN
  2741				; DSKCLN IS RUNNING. SINCE WHEN DSKCLN STARTS UP THE STATE OF
  2742				; THE SATS IS QUESTIONABLE (SYSTEM MAY HAVE JUST CRASHED)
  2743				; THE INITIAL PAGES ALLOCATED MAY ACTUALLY BELONG TO SOME POOR
  2744				; USER'S FILE. HOWEVER, THESE PAGES WILL NEVER GET WRITTEN OUT
  2745				; IF ALL OF INITIA'S AND DSKCLN'S PAGES FIT INTO CORE.
  2746				; THEREFORE, THE ONLY PAGES ALLOWED TO BE WRITTEN OUT
  2747				; BEFORE DSKCLN HAS FINISHED ITS WORK ARE SUPER PAGES, WHICH WE
  2748				; ASSUME ARE SATS THAT DSKCLN IS FIXING.
  2749				; WHEN DSKCLN DOES THE NODSLN UUO, WE CRASH IF
  2750				; DFRLST IS NON-ZERO, SINCE THESE PAGES WILL BE WRITTEN
  2751				; OUT EVENTUALLY, AND SINCE THEY WERE GENERATED BEFORE
  2752				; DSKCLN FINISHED, THEY MIGHT BE PART OF USER'S FILES.
  2753				; WE CAN ONLY HOPE THAT AFTER THE NODSLN UUO THE DIRTY PAGES
  2754				; REMAINING (WHICH MUST BE ACTIVE SOMEWHERE) WILL NEVER GET OUT.
  2755				; SINCE REMOVE TAKES PRIVATE PAGES OUT OF THE CHT BEFORE THEY
  2756				; ARE WRITTEN AND VALIDATE NEVER WRITES THEM, WE SHOULD BE OK.
  2757
  2758				EXTERN SRPNDS,STRDDB,STRBTS
  2759
  2760	002560'	135300	000000*	SWPIO3:	LDB	T1,PGYLMJ	;MAKE SURE ITS ACTIVE.
  2761	002561'	336000	000006		SKIPN	T1		;IF NOT AND DSKCLN RUNNING,
  2762	002562'	256000	000000'		 STOPCD			;ITS BAD, MAY WRITE ON USER'S FILE. ;;SWPIO3+2
  2763	002563'	265200	002543*		JSP	F,SCNLMC	;OK SO FAR, SCAN LMA CHAIN
  2764	002564'	254000	002553'		  JRST	SWPIO2		;ALL SLOTS SUPER, GO CLEAN UP PAGE AND START IT OUT.
  2765	002565'	607700	000000*		TLNN	P3,LMPSUP	;MAKE SURE ITS SUPER SLOT
  2766	002566'	256000	000000'		 STOPCD			;NOT, MAYBE WRITING ON USER'S FILE  ;;SWPIO3+6
  2767	002567'	620740	100000		TRZ	P4,PGE.W	;OK, CAUSE FAULT NEXT WRITE
  2768	002570'	254013	000000		JRST	(M)		;AND GO TO NEXT SLOT IF ANY.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 66
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O

  2769				;ROUTINES TO PUT JOB ON SWAP IN LIST, REMOVE FROM SWAP IN
  2770				; LIST.
  2771
  2772	002571'	554300	001747*	PUTSIL:	HLRZ	T1,JBTFIT	;GET LAST MEMBER
  2773	002572'	516302	002571*		HRLZM	T1,JBTFIT(J)	;NEW LAST POINTS BACK TO OLD LAST, FORWARD
  2774								; TO ZERO
  2775	002573'	542106	002572*		HRRM	J,JBTFIT(T1)	;OLD LAST POINTS FORWARD TO NEW LAST
  2776	002574'	506100	002573*		HRLM	J,JBTFIT	;THIS IS NOW LAST.
  2777	002575'	263040	000000		POPJ	P,		;RETURN.
  2778
  2779	002576'	200302	002574*	REMSIL:	MOVE	T1,JBTFIT(J)	;GET LAST,,NEXT
  2780	002577'	554340	000006		HLRZ	T2,T1		;GET LAST IN T2
  2781	002600'	506346	002576*		HRLM	T2,JBTFIT(T1)	;NEXT POINTS BACK TO LAST
  2782	002601'	542307	002600*		HRRM	T1,JBTFIT(T2)	;AST POINTS FORWARD TO NEXT
  2783	002602'	316100	002043'		CAMN	J,BIGFIT	;IF WE REMOVE BIGFIT FROM SIL FOR ANY
  2784	002603'	402000	002043'		SETZM	BIGFIT		;REASON, ALLOW SWAPPER TO CONSIDER NEW ONE
  2785	002604'	263040	000000		POPJ	P,		;RETURN
  2786
  2787				;ROUTINE TO SET IN CORE TIME ACCORDING TO NUMBER OF PAGES
  2788				; SWAPPED IN SUPPLIED AS ARG IN T1.  PRESERVES ALL BUT T1.
  2789
  2790	002605'	220300	000000*	SETIPT:	IMUL	T1,PROT
  2791	002606'	270300	000000*		ADD	T1,PROT0
  2792	002607'	313300	000000*		CAMLE	T1,MXPROT
  2793	002610'	200300	002607*		MOVE	T1,MXPROT	;UPPER LIMIT ON FUNCTION. /AA
  2794	002611'	261040	000007		PUSH	P,T2		;SAVE T2
  2795	002612'	574342	002261*		HLRE	T2,JBTICT(J)	;GET ICPT TIME
  2796	002613'	315340	000006		CAMGE	T2,T1		;DON'T SET IT BELOW WHAT IT IS
  2797	002614'	506302	002612*		TRACE(8,<HRLM	T1,JBTICT(J)>)	;OK, SET IT.
  2798	002615'	262040	000007		POP	P,T2		;RESTORE T2
  2799	002616'	263040	000000		POPJ	P,
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 67
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O

  2800				;ROUTINE TO SAVE LOTS OF ACS. CALLED BY JSP T4,SWPSAV.
  2801				; CALLED IN SWPIO, SWPRES WHERE LOTS OF ACS ARE NEEDED.
  2802
  2803	002617'	200300	000001	SWPSAV:	MOVE	T1,P		;GET COPY OF P
  2804	002620'	270040	002771'		ADD	P,[^D10,,^D10]	;SAVE 10 ACS. ADVANCE STACK POINTER
  2805	002621'	444300	000001		EQV	T1,P		;SIGN BIT MUST NOT CHANGE
  2806	002622'	331000	000006		SKIPL	T1		;CHECK FOR OVERFLOW
  2807	002623'	256000	000000'		 STOPCD			;THERE WAS.     ;;SWPSAV+4
  2808	002624'	205300	000002		MOVSI	T1,J		;AC TO START XFER FROM
  2809	002625'	541301	777767		HRRI	T1,-^D9(P)	;ADDRESS TO SAVE
  2810	002626'	251301	777772		BLT	T1,-^D9+U-J(P)	;SAVE THRU AC U
  2811	002627'	205300	000012		MOVSI	T1,W		;START FROM W NOW
  2812	002630'	541301	777773		HRRI	T1,-^D9+U-J+1(P)	;ADDRESS TO START XFER TO
  2813	002631'	251301	000000		BLT	T1,(P)		;SAVE THE REST
  2814	002632'	260051	000000		PUSHJ	P,(T4)		;CALL THE CALLER
  2815	002633'	334000	000000		  SKIPA
  2816	002634'	350001	777766		AOS	-^D10(P)	;FOR SKIP RETURNS
  2817	002635'	201300	000002		MOVEI	T1,J		;RESTORE TO J
  2818	002636'	505301	777767		HRLI	T1,-^D9(P)	;FROM STACK
  2819	002637'	251300	000005		BLT	T1,U		;THRU U
  2820	002640'	201300	000012		MOVEI	T1,W		;START WITH W
  2821	002641'	505301	777773		HRLI	T1,-^D9+U-J+1(P)	;WHERE W IS
  2822	002642'	251300	000017		BLT	T1,P4		;THRU P4
  2823	002643'	200300	000001		MOVE	T1,P		;GET COPY OF POINTER
  2824	002644'	274040	002771'		SUB	P,[^D10,,^D10]	;BACK IT UP
  2825	002645'	444300	000001		EQV	T1,P		;MAKE SURE SIGN BIT DIDN'T CHANGE
  2826	002646'	331000	000006		SKIPL	T1		;DID IT/
  2827	002647'	256000	000000'		 STOPCD			;YES, PDL OVERFLOW THEN.        ;;SWPSAV+many
  2828	002650'	263040	000000		POPJ	P,		;AND RETURN TO CALLER'S CALLER.
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 68
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O

  2829				COMMENT ;@@SUBROUTINE MPSUPS
  2830				@@PURPOSE MAKE LMAP ADDRESSABLE THRU UPT WHEN THE LMAP'S
  2831				VIRTUAL ADDRESSES %UPT+X DO NOT POINT TO THEMSELVES YET.
  2832				CALLED JUST AFTER ALL CONTEXT PAGES ARE BROUGHT IN.
  2833				@@ENTRY J CONTAINS JOB NUMBER
  2834				@@ACCUM T1-T4, PG, P2
  2835				@@GLOBAL
  2836				@@EXIT J CONTAINS JOB NUMBER, EXEC ADDRESS %UPS CONTAINS
  2837				LMAP AND UPT. %UPT ACCESSES ARE NOT LIMITED TO %UPT+777, I.E.
  2838				THE LMAP TAKES UP MORE THAN ONE PAGE AND THIS ROUTINE SETS UP
  2839				ALL REQUIRED PAGES IN JOB'S CONTEXT PAGES.
  2840				@@RESTRICTIONS
  2841				@@CALLS
  2842				@@FUNCTION FOR EACH OF THE JOB'S CONTEXT PAGES, FIND DISK ADDRESS
  2843				, FIND PHYSICAL CORE ADDRESS OF THE DISK ADDRESS IN THE CHT,
  2844				CRASH IF ITS NOT THERE. OTHERWISE, SETUP THE APPROPRIATE
  2845				EXEC MAP SLOT WITH THE "A" AND "W" BITS ON, AND THE
  2846				PHYSICAL CORE ADDRESS.
  2847				WHEN ALL MAP SLOTS ARE SETUP, DO DATAO PAG, TO CLEAR THE
  2848				ASSOCIATIVE PAGING MEMORY AND RETURN. DO NOT CHECK UPSJOB
  2849				AS CONTEXT PAGES AREN'T AROUND YET, AND DO NOT SET IT UP SINCE
  2850				WE ARE NOT SURE THEY WILL STICK AROUND AFTER
  2851				THIS CALL. INSTEAD, CLEAR UPSJOB SO NO ONE WILL GET CONFUSED.
  2852				IF CALLER IS SURE THEY WILL STICK AROUND, HE CAN SETUP UPSJOB
  2853				HIMSELF.
  2854				@@ ;
  2855
  2856				EXTERNAL UPSJOB,SAVE1
  2857
  2858	002651'	265440	000000*	MPSUPS:	JSP	T4,SAVE1	;SAVE P1 FOR BYTE POINTER,
  2859								; P2 IS AOBJN POINTER
  2860	002652'	200600	001446*		MOVE	P1,EPYPSM	;  [EPTPTR(%UPS.N-1)]
  2861	002653'	205640	000000*		MOVSI	P2,-NCTXPG	;-VE NUMBER OF CONTEXT PAGES
  2862
  2863	002654'	135355	001773*	MPSUP1:	LDB	T2,CTXTAB(P2)	;GET NEXT CONTEXT PAGE DP
  2864	002655'	260040	001770*		PUSHJ	P,SRCCHT	;GET ITS CORE PAGE ADDRESS
  2865	002656'	256000	000000'		 STOPCD			;HAS TO BE THERE        ;;MPSUP1+2
  2866	002657'	660140	520000		TRO	PG,PGE.A!PGE.W!PGE.C	;MAKE IT ACCESSIBLE
  2867	002660'	136140	000014		IDPB	PG,P1		;PUT IT INTO RIGHT SLOT
  2868	002661'	253640	002654'		AOBJN	P2,MPSUP1	;AND STEP TO NEXT CONTEXT PAGE
  2869
  2870	002662'	201640	000000*		MOVEI	P2,<NCTXPG-1>*1000
  2871	002663'	701115	000000*	MPSUP2:	CLRPTO	%UPS(P2)
  2872	002664'	275640	001000		SUBI	P2,1000
  2873	002665'	325640	002663'		JUMPGE	P2,MPSUP2
  2874	002666'	402000	002402*		SETZM	UPSJOB		;NO ONE BUT CALLER SHOULD BELIEVE %UPS
  2875								;UNLESS CALLER SETS UP UPSJOB.
  2876	002667'	263040	000000		POPJ	P,		;AND RETURN
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 69
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O

  2877				;HERE FROM CONTEXT PAGE ACTIVATE IF THERE WAS AN ERROR
  2878				; READING IN THE CONTEXT PAGES. AN OUTPUT ERROR FOR CONTEXT
  2879				; PAGES WILL SHOW UP WHEN THEY ARE NEXT SWAPPED IN, SO WE
  2880				; GET HERE FOR BOTH INPUT AND OUTPUT ERRORS.
  2881
  2882				EXTERNAL ERRSWP,PCBSWN,HNGMON,CBSWER,SWPERC,MONJOB
  2883
  2884	002670'	135300	002002*	SWECTX:	LDB	T1,JBYMWS	;GET MWS SIZE WE WERE
  2885	002671'	213000	000006		MOVNS	T1		;AND DECREMENT SIPTOT
  2886	002672'	272300	002041'		ADDM	T1,SIPTOT
  2887	002673'	205300	020000		MOVSI	T1,CTXSWE	;CLEAR THIS SO DON'T GO THRU HERE AGAIN NEXT TIME IF NO ERROR
  2888	002674'	412302	002345*		ANDCAM	T1,JBTCTX(J)	;AND LEAVE RH ZERO FOR CLEARING MWS IMIT.
  2889	002675'	137300	002670*		DPB	T1,JBYMWS	;SO DON'T DECREMENT SIPTOT AGAIN.
  2890	002676'	205300	000001		MOVSI	T1,1		;COUNT CONTEXT PAGE SWAP ERROR
  2891	002677'	272300	000000*		ADDM	T1,SWPERC
  2892	002700'	260040	000000*		PUSHJ	P,PCBSWN	;CLEAN UP PCBS
  2893	002701'	260040	002706'		PUSHJ	P,SDVCLN	;CLEAN UP DEVICES
  2894	002702'	260040	000000*		PUSHJ	P,CBSWER	;AND CLUB STUFF.
  2895	002703'	201340	000000*		MOVEI	T2,ERRSWP	;ADDRESS OF MONITOR JOB TO RUN
  2896	002704'	260040	000000*		PUSHJ	P,MONJOB	;START IT UP THERE.
  2897	002705'	254000	001516'		JRST	SWERTN		;AND GO BACK TO MAIN CODE.
  2898
  2899				; CLEAN UP DEVICES AND DISK IN PROGRESS
  2900
  2901				EXTERNAL DEVLST,JBTABT,PJOBN,RELEA9
  2902
  2903	002706'			SDVCLN:	
  2904	002706'	332302	000000*		SKIPE T1,JBTABT(J)
  2905	002707'	260046	000000		PUSHJ P,(T1)		;CALL ABORT ROUTINE IF ANY
  2906	002710'	554200	000000*		HLRZ F,DEVLST
  2907	002711'	135300	000000*	SWPER5:	LDB T1,PJOBN		;DEVICE BELONG TO THIS JOB?
  2908	002712'	316300	000002		CAMN T1,J
  2909	002713'	260040	000000*		PUSHJ P,RELEA9		;YES. RELEASE DEVICE
  2910	002714'	554204	000003		HLRZ F,DEVSER(F)	;NEXT DEVICE
  2911	002715'	326200	002711'		JUMPN F,SWPER5		;LOOP THROUGH ALL DEVICES
  2912	002716'	201200	000013		MOVEI F,AVLNUM-MINQ
  2913	002717'	256004	000557'		XCT CHKSWT+MINQ(F)	;RELEASE SHARABLE RESOURCE IF ANY
  2914	002720'	365200	002717'		SOJGE F,.-1
  2915	002721'	263040	000000		POPJ P,
  2916
  2917	002722'	260040	000000*		$END	(SCH)

  2918	002723'	566554	416261

  2919	002724'	000001	000000

  2920	002725'	000000	000001

  2921	002726'	260040	002722*

  2922	002727'	604147	675322

  2923	002730'	000002	000000
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 69-2
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O


  2924	002731'	100000	004000

  2925	002732'	400600	000000

  2926	002733'	260040	002276*

  2927	002734'	254000	001526'

  2928	002735'	364640	001367'

  2929	002736'	000000*	002663*

  2930	002737'	000600*	000601*

  2931	002740'	000000*	000000*

  2932	002741'	000000*	000440*

  2933	002742'	002115'	002116'

  2934	002743'	322700	001567'

  2935	002744'	250600	000016

  2936	002745'	217000	000014

  2937	002746'	260040	002465'

  2938	002747'	200600	000016

  2939	002750'	254000	001567'

  2940	002751'	350000	002076'

  2941	002752'	621700	000000*

  2942	002753'	254000	001701'

  2943	002754'	100000	006000

  2944	002755'	262040	000016

  2945	002756'	263040	000000

  2946	002757'	350000	002066'

  2947	002760'	263040	000000

  2948	002761'	350000	002065'

  2949	002762'	263040	000000

SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 69-3
SCHED1.MAC	 4-DEC-87 16:14		START SWAPPING I/O

  2950	002763'	200000	002000

  2951	002764'	100000	001000

  2952	002765'	000000*	000440*

  2953	002766'	260040	002726*

  2954	002767'	564151	545123

  2955	002770'	000002	000000

  2956	002771'	000012	000012

  2957						;End of SCHED1 (SCHLIT: SCHEND:)
  2958
NO ERRORS DETECTED
PROGRAM BREAK IS 002772
8K CORE USED
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 70
SCHED1.MAC	 4-DEC-87 16:14		SYMBOL TABLE

ACAVAL		000354'	INT	CKJB4C		000074'		DRSCHK		000175'	EXT	JBTUPM		002346'	EXT
ACCNT		000447'	INT	CKJB4D		000076'		DSKPIF		001072'	EXT	JBTWRS		000316'	EXT
ACQ		000016	SIN	CKJB5		000111'		DSKPIN		001074'	EXT	JBYACT		002340'	EXT
ACREQ		000427'	INT	CKJB6		000112'		EATCNT		002100'	INT	JBYCTR		001736'	EXT
ACSWT		000551'	INT	CKJB62		000115'		EPT		000000	EXT	JBYMWS		002675'	EXT
ACTLMS		001712'	EXT	CKJB65		000124'		EPTEBR		000000	EXT	JBYQNT		000262'	EXT
ADRDUM		002442'	EXT	CKJB6A		000116'		EPYPSM		002652'	EXT	JBYSWS		001606'	EXT
AGENTV		001421'	EXT	CKJB6B		000127'		EQFIX	400000	000244'	SPD	JBYUWS		001437'	EXT
ATBDUM		000000	EXT	CKJB7		000135'		EQJSIZ	400000	000231'	SPD	JFYS12		000725'	EXT
ATBMWC		001425'	EXT	CKJB8		000134'		EQLINK	400000	000223'	SPD	JOB		002341'	EXT
ATBSPT		000000	EXT	CKJB9		000062'		ERRSWP		002703'	EXT	JOBATB		001423'	EXT
ATBSTS		000000	EXT	CLNALL		002417'		F		000004	INT	JOBMAX		000204'	EXT
ATBUMC		000000	EXT	CLRPT	701100	000000		FCAVAL		000351'	INT	JOBQUE		000601'	INT
ATPDUM		000000	EXT	CMQ		000037	SPD	FCCNT		000444'	INT	JRQ		000002	SIN
ATPMXU		002740'	EXT	CMWB		200000	SIN	FCQ		000013	SIN	JSTCTX		040000	SIN
AVALTB		000336'	INT	CNTNAM		000451'		FCREQ		000424'	INT	LM3ATB		001463'	EXT
AVLNUM		000017	SIN	CNTTAB		000431'	INT	FCSWT		000546'	INT	LM3HDA		001461'	EXT
AVLQTB		000473'	INT	CNVVPN		000440	SIN	FFLAG		000000	SPD	LMASRP		000000	EXT
AXAVAL		000353'	INT	CPOPJ		002456'	EXT	FINLMC		002547'	EXT	LMMERR		000000	EXT
AXCNT		000446'	INT	CPOPJ1		002413'	EXT	FINXWS		002331'	EXT	LMMEXS		001442'	EXT
AXQ		000015	SIN	CPRRDW		000003	SIN	FIT		002042'		LMPACT		002277'	EXT
AXREQ		000426'	INT	CPUKL		000002	SPD	FLWQ		000027	SIN	LMPCUR		000000	EXT
AXSWT		000550'	INT	CPUTYP		000002	SPD	FRESID		002077'	INT	LMPLOK		002305'	EXT
BADSS		001116'		CPZZ		000001	SPD	FRQUE		000573'		LMPMXW		000000	EXT
BIGCNT		002101'	INT	CRSPGN		002526'	EXT	GETCPA		002352'	EXT	LMPSUP		002565'	EXT
BIGFIT		002043'		CTXCEX		200000	SIN	GETDPA		001670'	EXT	LMPVIR		002752'	EXT
BPAVAL		000355'	INT	CTXCIN		400000	SIN	GETFRE		001240'	EXT	LMYLMJ		000000	EXT
BPCNT		000450'	INT	CTXSWE		020000	SIN	GETLMS		002351'	EXT	LMYLMV		000000	EXT
BPQ		000017	SIN	CTXTAB		002654'	EXT	GETRES		001666'	EXT	LOC		000037	SPD
BPREQ		000430'	INT	CTXUCU		010000	SIN	GETSIZ		000231'	EXT	LOKJOB		002146'	INT
BPSWT		000552'	INT	CTXVIR		100000	SIN	GTSAPG		000000	EXT	M		000013	INT
BQFIX		000244'	SPD	CURUPT		000000	EXT	GTSPAG		001220'	EXT	M2AVAL		000346'	INT
BQJSIZ		000231'	SPD	CWQ		000022	SIN	HEQCNT		002066'		M2CNT		000441'	INT
BQLINK		000223'	SPD	DAAVAL		000347'	INT	HIGHJB		000050'	EXT	M2Q		000010	SIN
CALSWP		000171'	INT	DABBIT		001462'	EXT	HNGMON		000000	EXT	M2REQ		000421'	INT
CAPPGN		002040'	INT	DACNT		000442'	INT	ILWQ		000026	SIN	M2SSWT		000523'	EXT
CAVPGN		002530'	EXT	DAQ		000011	SIN	INCCAV		001070'	EXT	M2SWT		000543'	INT
CBAVAL		000350'	INT	DAREQ		000422'	INT	INCCTX		001301'		MAPQSW		000267'	INT
CBCNT		000443'	INT	DASWT		000544'	INT	INCUSE		001303'	EXT	MAPUPS		002733'	EXT
CBQ		000012	SIN	DEACNT		002063'		INSCHT		001671'	EXT	MAXPCB		002437'	EXT
CBREQ		000423'	INT	DEALMS		002361'	EXT	IOSERR		001316'	EXT	MAXQ		000017	SIN
CBSWER		002702'	EXT	DECHJB		000056'	EXT	IOWQ		000020	SIN	MBIT		001216'	EXT
CBSWT		000545'	INT	DECRES		002465'		ISCAN		000731'	INT	MBWQ		000021	SIN
CFR.N		001071'	EXT	DECRS1		002472'		ISQ		000002	SIN	MINPCB		001016'	EXT
CHKSWT		000553'		DECUSE		001772'	EXT	J		000002	INT	MINQ		000004	SIN
CKJB0		000045'		DEVLST		002710'	EXT	JBMQNT		000034'	EXT	MLOWQ		000025	SIN
CKJB1		000046'		DEVSER		000003	SIN	JBQMN		000207'	EXT	MONJOB		002704'	EXT
CKJB10		000162'		DFR.N		001056'	EXT	JBTABT		002706'	EXT	MPSUP1		002654'	
CKJB2		000051'		DFRLST		002455'	EXT	JBTCTX		002674'	EXT	MPSUP2		002663'	
CKJB3		000057'		DFRPGN		002452'	EXT	JBTFIT		002601'	EXT	MPSUPS		002651'	
CKJB4		000104'		DIE		002766'	EXT	JBTICT		002614'	EXT	MRKSWT		000513'	
CKJB4A		000105'		DIUQTA		002046'		JBTPGO		001112'	EXT	MRQ		100000	SIN
CKJB4B		000103'		DRSCHK		000175'	EXT	JBTQ		000333'	EXT	MTAVAL		000352'	INT
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 70-2
SCHED1.MAC	 4-DEC-87 16:14		SYMBOL TABLE

MTCNT		000445'	INT	PGYATB		000000	EXT	QDAS		000707'		QTSW		000617'	
MTQ		000014	SIN	PGYDIO		002353'	EXT	QDAW		000657'		QTTAB		000717'	
MTREQ		000425'	INT	PGYDRT		002556'	EXT	QFCS		000707'		QWSS		000000	SPD
MTSWT		000547'	INT	PGYFPL		002460'	EXT	QFCW		000655'		QWSW		000615'	
MWSMNX		001555'		PGYLMJ		002560'	EXT	QFIX		000244'		QX1		000234'	
MXCODE		000032	SIN	PGYPGO		001114'	EXT	QFLWW		000635'		QX2		000240'	
MXPROT		002610'	EXT	PGYSIO		000000	EXT	QFOR		000324'		QX3		000266'	
MXQUE		000176'	EXT	PGYSIP		002533'	EXT	QFOR1		000323'		QXFER		000217'	INT
NAILI2		002524'		PGYSOP		002535'	EXT	QFOR2		000326'		RBREAL		001230'	EXT
NAILI3		002527'	INT	PGYSPT		000000	EXT	QHIP		000707'		RELEA9		002713'	EXT
NAILIT		002507'		PGYSTS		002511'	EXT	QILWW		000633'		REMSIL		002576'	
NAPCNT		002065'		PGYUSE		002507'	EXT	QINI		000176'	INT	REQTAB		000411'	INT
NCTXPG		002342'	EXT	PJBST2		000063'	EXT	QINI1		000211'		REQUE		001111'	EXT
NIRCNT		002062'		PJBSTS		001110'	EXT	QINI2		000215'		RIAVAL		000343'	INT
NODIE		000000	EXT	PJOBN		002711'	EXT	QIOWW		000623'		RICNT		000436'	INT
NQUEUE		000020	SPD	PJRST	324740	000000		QJOB		000602'	INT	RIPPGN		002037'	INT
NSRCNT		002061'		POSAVL		002052'		QJSIZ		000231'		RIQ		000005	SIN
NULARQ		000220'	INT	POTLST		000153'	EXT	QLINK		000223'		RIREQ		000416'	INT
NULQ		000031	SIN	PQ0		000033	SPD	QM2S		000707'		RISSWT		000520'	EXT
NXSMWS		002300'	EXT	PQ1		000034	SPD	QM2W		000653'		RISWT		000540'	INT
NXTINI		000003'	INT	PQ2		000035	SPD	QMBWW		000637'		RNAVAL		000336'	INT
NXTJB1		000016'		PQ3		000036	SPD	QMLOWW		000631'		RNCNT		000431'	INT
NXTJOB		000006'	INT	PRAVAL		000345'	INT	QMTS		000675'		RNQ		000000	SIN
NXTSTL		002011'	EXT	PRCNT		000440'	INT	QMTW		000663'		RNQUNT		000724'	INT
OKPCNT		002064'		PRF		004000	SIN	QNULW		000603'		RNREQ		000411'	INT
OLDJOB		000172'		PRICHK		000173'		QPRS		000707'		RNSWT		000533'	INT
OSCAN		000747'	INT	PROT		002605'	EXT	QPRW		000651'		RUN		400000	SIN
OUTCNT		002102'	INT	PROT0		002606'	EXT	QPSS		000707'	INT	RUNABL		440000	SIN
OUTJOB		002044'		PRQ		000007	SIN	QPSW		000647'		RUNMSK		000405	SIN
OUTJPG		002045'		PRREQ		000420'	INT	QQSTAB		000725'		S		000000	INT
P		000001	INT	PRSSWT		000522'	EXT	QQSTB1		000724'		S$ENTR	777777	777775	SIN
P1		000014	INT	PRSWT		000542'	INT	QQSTBL		000724'		S$EVEN		000006	SIN
P2		000015	INT	PSAVAL		000344'	INT	QQYSD		000000	EXT	S$HALT	777777	777777	SIN
P3		000016	INT	PSCNT		000437'	INT	QQYTTY		000727'	EXT	S$INFO		000005	SIN
P4		000017	INT	PSQ		000006	SIN	QRIS		000707'		S$JOB		000002	SIN
PAG		000010	SPD	PSREQ		000417'	INT	QRIW		000645'		S$NAME		000000'	SPD
PAGERR		001314'	EXT	PSSSWT		000521'	EXT	QRNS		000000	SPD	S$NONA		000000	SIN
PAGWAK		001102'	INT	PSSWT		000541'	INT	QRNW		000611'		S$PATC		000007	SIN
PAGWK1		001105'		PUTLST		001073'	EXT	QRNW1		000613'		S$STOP		000001	SIN
PAGWK2		001107'	INT	PUTSIL		002571'		QSCAN		000317'	INT	S$TEMP		000000	SPD
PBMMSK		001415'	EXT	QACS		000705'		QSIS		000707'		S$XCT	777777	777776	SIN
PCBSWN		002700'	EXT	QACW		000671'		QSIW		000643'		SAVE1		002651'	EXT
PFICNT		002072'	INT	QAXS		000701'		QSLPW		000665'		SAVE2		000000	EXT
PFLCNT		002067'	INT	QAXW		000667'		QSSS		000000	SPD	SCDTRC		000000	SPD
PFWCNT		002070'	INT	QBAK		000333'		QSSW		000621'		SCHD5		000150'	
PG		000003	INT	QBAK1		000327'		QSTAB		000711'		SCHD6		000160'	
PGE.A		400000	SIN	QBITS		000356'	INT	QSTAB1		000715'		SCHED		000140'	ENT
PGE.C		020000	SIN	QBPS		000703'		QSTOP		000605'	INT	SCHED1		000000'	ENT
PGE.W		100000	SIN	QBPW		000673'		QSTOPW		000605'		SCHEND		002771'	INT
PGPDRT		002377'	EXT	QCBS		000707'		QSWW		000627'		SCHLIT		002722'	INT
PGPSIP		002325'	EXT	QCBW		000661'		QTIME		000677'	INT	SCHPRV		010000	SIN
PGPSOP		002514'	EXT	QCMW		000607'	INT	QTIOWW		000625'		SCNLMC		002563'	EXT
PGYADR		002441'	EXT	QCWW		000641'		QTSS		000000	SPD	SDVCLN		002706'	
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 70-3
SCHED1.MAC	 4-DEC-87 16:14		SYMBOL TABLE

SETICP		001000	SIN	SSTC8		002112'		SWILA4		001553'		SWPIO1		002551'	
SETIPT		002605'		SSTC9		002113'		SWILA5		001560'		SWPIO2		002553'	
SIAVAL		000342'	INT	STLBTM		002115'	INT	SWILA6		001567'		SWPIO3		002560'	
SICNT		000435'	INT	STLCNT		002056'		SWILA7		001572'		SWPRES		002147'	
SID.N		000000	EXT	STOLMS		002372'	EXT	SWILAS		001526'		SWPRS2		002164'	
SIDCHK		001013'		STOPQ		000032	SIN	SWINIR		001714'		SWPRS3		002173'	
SIDL1A		001024'		STRBTS		000000	EXT	SWINJ2		001747'		SWPRS4		002205'	
SIDLP1		001015'		STRDDB		000000	EXT	SWINJB		001740'		SWPSAV		002617'	
SIDLP2		001026'		SVQPOS		002047'		SWINJC		001736'		SWPSEC		002417'	INT
SIDLP3		001034'		SVQRPC		002050'		SWINVP		001716'		SWQ		000024	SIN
SIDLST		001013'	EXT	SVQRTN		002051'		SWIRD0		001650'		SWSCCP		000000	SPD
SIFCNT		002055'		SWAP		001117'		SWIRD1		001660'		SWSCSI		000001	SPD
SIJCNT		002054'		SWCCNT		002053'		SWIRD2		001663'		SWSSWI		000002	SPD
SINCNT		002057'		SWECTX		002670'		SWISC0		001124'		SWTTAB		000533'	INT
SINTB		002134'	INT	SWERTN		001516'		SWISC1		001154'		T1		000006	INT
SINTBS		000012	SIN	SWIBAD		002021'		SWISC2		001161'		T2		000007	INT
SIOBOM		002075'	INT	SWIBD0		002032'		SWISCA		001142'		T3		000010	INT
SIOCNT		002074'	INT	SWIBK1		002002'		SWISCN		001117'		T4		000011	INT
SIOSWP		002076'	INT	SWIBKO		001776'		SWISIN		001665'		TIMEF		000136'	EXT
SIPTOT		002041'	INT	SWIC7A		001374'		SWISN0		001701'		TIOWQ		000023	SIN
SIQ		000004	SIN	SWICA1		001261'		SWISN1		001712'		TOTACT		002073'	INT
SIREQ		000415'	INT	SWICA2		001266'		SWISW0		001615'		TPOPJ		000000	EXT
SISSWT		000517'	EXT	SWICA3		001275'		SWISW7		001622'		TSAVAL		000340'	INT
SISWT		000537'	INT	SWICAS		001254'		SWISWI		001612'		TSCNT		000433'	INT
SLPQ		000030	SIN	SWICC1		001210'		SWIXIT		001170'		TSETBI		000000	EXT
SOD.N		000000	EXT	SWICC2		001222'		SWOCT1		002351'		TSQ		000002	SIN
SODCHK		001043'		SWICC3		001227'		SWOCT2		002372'		TSREQ		000413'	INT
SODLP1		001045'		SWICCP		001175'		SWOCT3		002401'		TSSWT		000535'	INT
SODLP2		001054'		SWICN1		001240'		SWOCTX		002336'		TSTVIR		001672'	EXT
SODLP3		001061'		SWICND		001235'		SWODNN		002414'		TTYFND		000000	EXT
SODLP4		001066'		SWICR1		001765'		SWODON		002410'		U		000005	INT
SODLP5		001071'		SWICR2		001774'		SWOS4A		002332'		UP4LDA		001456'	EXT
SODLP6		001072'		SWICRP		001760'		SWOSC0		002220'		UPSJOB		002666'	EXT
SODLP8		001077'		SWICS0		001305'		SWOSC1		002224'		UPT		000000	EXT
SODLST		001043'	EXT	SWICS1		001310'		SWOSC2		002243'		UPTACP		000000	EXT
SPR.N		000000	EXT	SWICS3		001351'		SWOSC3		002252'		UPTEND		000000	EXT
SRCCHT		002655'	EXT	SWICS4		001367'		SWOSC4		002246'		UPTFSL		000600	SIN
SRPNDS		002540'	EXT	SWICS5		001447'		SWOSC5		002263'		UPTHEC		000504	SIN
SRSINI		002501'		SWICS6		001504'		SWOSCN		002212'		UPTHMC		000506	SIN
SSAVAL		000341'	INT	SWICS7		001373'		SWOSJ0		002266'		UPTJOB		000000	EXT
SSCAN		001006'	INT	SWICS8		001441'		SWOSJ1		002300'		UPTLDC		000000	EXT
SSCNT		000434'	INT	SWICS9		001472'		SWOSJ4		002330'		UPTLEC		000505	SIN
SSQ		000003	SIN	SWICSA		001325'		SWOSJ5		002404'		UPTLMC		000507	SIN
SSREQ		000414'	INT	SWICSC		001343'		SWOST0		002454'		UPTNTV		000000	EXT
SSSWT		000536'	INT	SWICSD		001370'		SWOST1		002457'		UPTPBM		000000	EXT
SSTC0		002114'		SWICSI		001304'		SWOSTR		002451'		UPTRES		000000	EXT
SSTC1		002103'	INT	SWICSV		001404'		SWPCHK		001013'	INT	USE.N		001052'	EXT
SSTC2		002104'		SWICSX		001464'		SWPENQ		002557'	EXT	USECL1		002434'	
SSTC3		002105'		SWIDN1		001724'		SWPER5		002711'		USECL2		002446'	
SSTC4		002106'		SWIDON		001720'		SWPERC		002677'	EXT	USECLN		002430'	
SSTC5		002107'		SWIDSP		001165'		SWPINP		002000	SIN	USELST		002432'	EXT
SSTC6		002110'		SWILA2		001544'		SWPIO		002532'	INT	USRACB		000000	SIN
SSTC7		002111'		SWILA3		001550'		SWPIO	701640	000000		USYLSP		001743'	EXT
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88 PAGE 70-4
SCHED1.MAC	 4-DEC-87 16:14		SYMBOL TABLE

USYPXM		001444'	EXT	
USYRES		001746'	EXT	
USYSIN		001727'	EXT	
USYUWL		001434'	EXT	
USYUWM		001433'	EXT	
VIRCNT		002060'		
VPMAX		001034	SIN	
VPUMAX		002545'	EXT	
VRACNT		002071'	INT	
W		000012	INT	
WRPI	700600	000000		
WRSHDR		000313'		
WRSMA1		000301'		
WRSMA2		000311'		
WRSMAP		000273'	INT	
WRSMP1		000270'	INT	
WRSNAM		000315'		
WRSVAL		000316'		
WSAVAL		000337'	INT	
WSCNT		000432'	INT	
WSQ		000001	SIN	
WSREQ		000412'	INT	
WSSWT		000534'	INT	
WTMASK		000370	SIN	
%%ZCNT		000020	SPD	
%UPLMS		002302'	EXT	
%UPS		002736'	EXT	
%UPT		000000	EXT	
%UPT.N		000000	EXT	
%UPX.N		000000	EXT	

SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

ACAVAL	   569	   569#
ACCNT	   692#	   693
ACQ	   569	   569#	   754	   934	  1015
ACREQ	   670#	   671
ACSWT	   786	   807	   807#
ACTLMS	  1088%	  1736	  1829	  1941	  1978
ADRDUM	  1126%	  1457	  2607
AGENTV	    22%	  1669
ATBDUM	  1137%	  1681	  1684
ATBMWC	  1136%	  1680
ATBSPT	  1136%
ATBSTS	  1138%	  1681	  1684
ATBUMC	  1137%	  1681	  1684
ATPDUM	  1137%	  1682
ATPMXU	  1137%	  1682
AVALTB	   167	   185	   553	   555#	   555	   556	   557	   558	   559	   560	   561	   562	   563	   564
	   565	   566	   567	   568	   569	   570	   571	   842
AVLNUM	   166	   575#	  2912
AVLQTB	   170	   173	   182	   738	   740#
AXAVAL	   568	   568#
AXCNT	   691#	   692
AXQ	   568	   568#	   753	   932	  1013
AXREQ	   669#	   670
AXSWT	   785	   806	   806#
BADSS	  1245#
BIGCNT	  1350	  2220#
BIGFIT	  1342	  1351	  2165#	  2783	  2784
BPAVAL	   570	   570#
BPCNT	   693#	   694
BPQ	   570	   570#	   755	   936	  1014
BPREQ	   671#	   672
BPSWT	   787	   808	   808#
BQFIX	   443#	   856#	   889	   941	   948	   951	   954
BQJSIZ	   447#	   860#
BQLINK	   445#	   858#
CALSWP	   188	   230#
CAPPGN	  1203	  1594	  1598	  1924	  1931	  2124	  2155#	  2298	  2338	  2342	  2351	  2595	  2641	  2645
	  2681	  2685
CAVPGN	  1094%	  1606	  1610	  1624	  1933	  1940	  1970	  2123	  2296	  2325	  2329	  2337	  2649	  2692
	  2696
CBAVAL	   565	   565#
CBCNT	   688#	   689
CBQ	   565	   565#	   750	   926	   997	  1017	  1028
CBREQ	   666#	   667
CBSWER	  2882%	  2894
CBSWT	   782	   803	   803#
CFR.N	  1095%	  1162	  1206
CHKSWT	   821#	  2913
CKJB0	    97	   115#
CKJB1	    92	   106	   113	   117#
CKJB10	   137	   222#
CKJB2	   120#	   163
CKJB3	   129#
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

CKJB4	   133	   157#
CKJB4A	   150	   155	   158#	   228
CKJB4B	   148	   156#	   226
CKJB4C	   149#	   224
CKJB4D	   132	   151#
CKJB5	   118	   123	   166#
CKJB6	   167#	   168	   187
CKJB62	   170#	   186
CKJB65	   172	   178#
CKJB6A	   171#	   180
CKJB6B	   177	   181#
CKJB7	   169	   188#
CKJB8	   175	   187#
CKJB9	   133#	   153
CLNALL	  2587#
CMQ	   595#	   876	   990	  1035
CMWB	    95	    98	   130	   151	   152	  2394	  2427
CNTNAM	   700#	   719
CNTTAB	   654	   678#	   719
CNVVPN	  1698	  1700	  1713	  1734	  2521
CPOPJ	   211	   279%	  1125%	  1182	  1232	  2600	  2623
CPOPJ1	    21%	   238	  1125%	  2331	  2344	  2568
CPRRDW	  1712
CPUKL	  1656
CPUTYP	  1656
CPZZ	  1656#	  1656
CRSPGN	  1094%	  1201	  1608	  1938	  2119	  2330	  2336	  2651	  2694
CTXCEX	  1415	  1448	  1466
CTXCIN	  1746	  2517
CTXSWE	  1574	  1646	  1652	  1706	  1748	  2887
CTXTAB	  1119%	  1428	  1439	  1462	  1507	  1539	  1569	  1577	  1616	  1713	  1734	  2072	  2074	  2078
	  2863
CTXUCU	  1538	  1566	  1733	  2070
CTXVIR	  1418	  1618	  1646	  1706	  1744
CURUPT	  1125%
CWQ	   584	   584#	   910
DAAVAL	   564	   564#
DABBIT	  1138%	  1718
DACNT	   687#	   688
DAQ	   564	   564#	   749	   924	   998	  1016	  1027
DAREQ	   665#	   666
DASWT	   781	   802	   802#
DEACNT	  2200#	  2477
DEALMS	  1088%	  2113	  2476	  2532
DECHJB	    79%	   127
DECRES	  1757	  1852	  2003	  2097	  2638#
DECRS1	  2640	  2645#
DECUSE	  1089%	  1729	  2077
DEVLST	  2901%	  2906
DEVSER	  2910
DFR.N	  1095%	  1195
DFRLST	  1094%	  2587	  2622
DFRPGN	  1094%	  1196	  2297	  2593	  2618
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

DIE	    11	    11%	    12	   391	  1237	  2695
DIUQTA	  2177#	  2597
DRSCHK	    79%	   239
DSKPIF	  1125%	  1166	  1207
DSKPIN	  1125%	  1170	  1209
EATCNT	  2219#	  2520
EPT	  1112%	  1468
EPTEBR	  1468	  1468%
EPYPSM	  1112%	  1456	  1703	  2860
EQFIX	   444#	   857#	   871	   873	   875	   885	   893	   895	   897	   899	   901	   903	   905	   907
	   909	   911	   913	   915	   917	   919	   921	   923	   925	   927	   929	   931	   933	   935
	   957
EQJSIZ	   448#	   861#	   877	   879
EQLINK	   446#	   859#	   944
ERRSWP	  2882%	  2895
F	    93	   117	   159	   162	   166	   167	   168	   169	   170	   173	   181	   182	   185	   187
	   197	   207	   208	   210	   211	   212	   524	   531	   536	   540	   839	   841	   842	   843
	  1324	  1370	  1403	  1703	  1721	  1817	  1895	  2032	  2051	  2108	  2375	  2390	  2412	  2461
	  2465	  2498	  2499	  2556	  2564	  2725	  2729	  2763	  2906	  2910	  2911	  2912	  2913	  2914
FCAVAL	   566	   566#
FCCNT	   689#	   690
FCQ	   566	   566#	   751	   922
FCREQ	   667#	   668
FCSWT	   783	   804	   804#
FFLAG	   772#	   772	   773	   773#	   774	   774#	   775	   775#	   776	   776#	   777#	   777	   778#	   778
	   779#	   779	   780#	   780	   781#	   781	   782	   782#	   783	   783#	   784	   784#	   785	   785#
	   786	   786#	   787	   787#	   788	   821#	   821	   822	   822#	   823	   823#	   824	   824#	   825
	   825#	   826#	   826	   827#	   827	   828#	   828	   829#	   829	   830#	   830	   831	   831#	   832
	   832#	   833	   833#	   834	   834#	   835	   835#	   836	   836#	   837
FINLMC	  1096%	  2729
FINXWS	  1088%	  2032	  2498
FIT	  1318	  1358	  1360	  1372	  2046	  2163#	  2291
FLWQ	   584	   584#	   906	  1011
FRESID	  1161	  2216#
FRQUE	   821	   822	   823	   824	   830	   831	   832	   833	   834	   835	   836	   839#
GETCPA	  1088%	  2472	  2523
GETDPA	  1088%	  1826	  1902	  1957
GETFRE	  1088%	  1458
GETLMS	  1089%	  1705	  1825	  1901	  2110	  2469	  2522
GETRES	  1088%	  1612	  1954
GETSIZ	   388%	   405
GTSAPG	  1130%
GTSPAG	  1136%	  1436
HEQCNT	  2204#	  2366	  2572
HIGHJB	    21%	    85	   119
HNGMON	  2882%
ILWQ	   584	   584#	   904	   999	  1010	  1023
INCCAV	  1090%	  1165	  1205
INCCTX	  1460	  1514	  1538#	  1629
INCUSE	  1089%	  1540
INSCHT	  1088%	  1617	  1958
IOSERR	  1090%	  1575
IOWQ	   584	   584#	   896
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

ISCAN	   987	   988#	  1316
ISQ	   604#
J	    85	    87	    88	    89	    91	    94	    99	   104	   108	   119	   121	   122	   123	   126
	   129	   143	   163	   170	   171	   172	   173	   174	   175	   178	   201	   208	   214	   225
	   289	   290	   291	   292	   293	   294	   295	   296	   390	   419	   429	   430	   431	   432
	   467	   470	   472	   474	   525	   530	   531	   534	   535	   539	   540	   772	   773	   774
	   775	   781	   782	   783	   784	   785	   786	   787	   839	  1231	  1232	  1240	  1241	  1242
	  1317	  1318	  1337	  1351	  1353	  1360	  1371	  1372	  1381	  1402	  1416	  1419	  1449	  1467
	  1496	  1576	  1619	  1644	  1648	  1650	  1653	  1690	  1693	  1707	  1718	  1723	  1726	  1745
	  1747	  1752	  2005	  2009	  2013	  2042	  2046	  2050	  2130	  2291	  2365	  2377	  2392	  2393
	  2397	  2417	  2419	  2424	  2426	  2455	  2457	  2511	  2513	  2518	  2519	  2535	  2539	  2773
	  2775	  2776	  2779	  2783	  2795	  2797	  2808	  2810	  2812	  2817	  2821	  2888	  2904	  2908
JBMQNT	    79%	   105
JBQMN	   280%	   292
JBTABT	  2901%	  2904
JBTCTX	  1119%	  1416	  1419	  1449	  1467	  1496	  1576	  1619	  1648	  1653	  1707	  1745	  1747	  1752
	  2393	  2426	  2518	  2888
JBTFIT	  1119%	  1317	  2042	  2772	  2773	  2775	  2776	  2779	  2781	  2782
JBTICT	    21%	    87	    88	   104	   143	   225	  1119%	  2397	  2424	  2795	  2797
JBTPGO	  1121%	  1240
JBTQ	    20%	   171	   174	   284	   288	   290	   294	   296	   298	   419	   421	   422	   425	   427
	   429	   430	   431	   432	   530	   534	   535	   539
JBTSTS	    20%	    94	    99	   108	   121	   126	   129	   178	   201	   208	  1119%	  1337	  1353	  2005
	  2009	  2013	  2130	  2392	  2419	  2457	  2511
JBTUPM	  1138%	  1693	  1723	  1726	  2519
JBTWRS	   465%	   467	   470	   472	   474	   487
JBYACT	  1120%	  2400	  2512
JBYCTR	  1120%	  1562	  2021
JBYMWS	  1120%	  1362	  1421	  1753	  1859	  1867	  2066	  2099	  2884	  2889
JBYQNT	   388%	   437
JBYSWS	  1120%	  1355	  1385	  1530	  1876
JBYUWS	  1120%	  1692
JFYS12	   886	   894	   982%	   982	   983%	   983
JOB	    20%	    91	   210	  1125%	  2513
JOBATB	  1136%	  1432	  1678
JOBMAX	   279%	   289
JOBQUE	    33	   111	   206	   847	   848#
JRQ	   120	   202
JSTCTX	  1750
LISTSN	     3	     6
LM3ATB	  1138%	  1719
LM3HDA	  1106%	  1717
LMASRP	  1108%	  1716
LMMERR	  1138%
LMMEXS	  1641%	  1699
LMPACT	  1106%	  1819	  1897	  2111	  2463
LMPCUR	  1137%	  1712
LMPLOK	  1641%	  2470
LMPMXW	  1137%	  1712
LMPSUP	  1107%	  2765
LMPVIR	  1107%	  1962
LMYLMJ	  1107%
LMYLMV	  1107%
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

LOC	   571#	   572	   584	   584#	   586	   587	   588	   588#	   589	   590	   590#	   591	   592	   592#
	   593	   594	   594#	   595
LOKJOB	  2238#	  2417
M	   203	   206	   523	   525	   526	   528	  1340	  1345	  1369	  1404	  1823	  1833	  1842	  1899
	  1989	  2052	  2054	  2115	  2374	  2395	  2399	  2402	  2418	  2421	  2425	  2428	  2460	  2468
	  2483	  2493	  2497	  2500	  2557	  2559	  2565	  2733	  2768
M2AVAL	   563	   563#
M2CNT	   686#	   687
M2Q	   563	   563#	   748	   920	   994	  1020	  1031
M2REQ	   664#	   665
M2SSWT	   780	   781%
M2SWT	   801	   801#
MAPQSW	   457#	   460	   463
MAPUPS	  1089%	  1498	  1857	  1888	  2106	  2462
MAXPCB	  1126%	  1152	  1171	  1210	  2604
MAXQ	   573#	   575
MBIT	  1136%	  1434
MBWQ	   584	   584#	   908	  1021
MINPCB	  1126%	  1150
MINQ	   166	   167	   170	   173	   181	   182	   185	   574#	   839	   841	   842	   843	  2912	  2913
MLOWQ	   584	   584#	   902	  1009
MONJOB	  2882%	  2896
MPSUP1	  2863#	  2868
MPSUP2	  2871#	  2873
MPSUPS	  1643	  2538	  2858#
MRKSWT	   181	   772#
MRQ	    95	    98	   130	   151	   152	   179	   202	  1339	  2004	  2456	  2510
MTAVAL	   567	   567#
MTCNT	   690#	   691
MTQ	   567	   567#	   752	   928	  1012
MTREQ	   668#	   669
MTSWT	   784	   805	   805#
MWSMNX	  1828	  1840#	  1946	  1984	  2471	  2474
MXCODE	   586#
MXPROT	  1126%	  2792	  2793
MXQUE	   279%	   282
NAILI2	  2677	  2692#
NAILI3	  2695#
NAILIT	  1515	  1830	  2671#
NAPCNT	  2202#	  2371	  2405
NCTXPG	  1114%	  1422	  1505	  1568	  1679	  1683	  1698	  1758	  2069	  2515	  2521	  2861	  2870
NIRCNT	  1983	  2199#
NODIE	    11%
NQUEUE	   572#	   573
NSRCNT	  1945	  2198#
NULARQ	   391#
NULQ	   287	   584	   584#	   872
NXSMWS	  1089%	  1817	  1895	  2465
NXTINI	    30	    32#
NXTJB1	    84	    91#
NXTJOB	    24	    81#
NXTSTL	  1090%	  2108
OKPCNT	  1822	  2201#
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

OLDJOB	   212	   231#
OSCAN	   987	  1005#	  2389	  2410
OUTCNT	  2221#	  2458
OUTJOB	  2170#	  2365	  2411	  2455	  2573	  2660	  2661
OUTJPG	  2174#	  2454	  2480
P	    12	    35	    81	   112	   115	   127	   147	   158	   183	   190	   213	   215	   222	   299
	   391	   398	   405	   406	   440	   441	   457	   461	   464	   480	   481	   776	   777	   778
	   779	   780	   821	   822	   823	   824	   825	   826	   827	   828	   829	   830	   831	   832
	   833	   834	   835	   836	   840	   844	  1165	  1167	  1172	  1205	  1208	  1211	  1214	  1237
	  1239	  1243	  1315	  1356	  1368	  1369	  1370	  1371	  1402	  1403	  1404	  1405	  1406	  1432
	  1436	  1458	  1460	  1498	  1508	  1515	  1527	  1570	  1573	  1612	  1617	  1626	  1629	  1643
	  1678	  1705	  1729	  1736	  1738	  1757	  1825	  1826	  1827	  1830	  1832	  1852	  1855	  1857
	  1888	  1901	  1902	  1903	  1941	  1954	  1957	  1958	  1959	  1973	  1978	  1988	  2003	  2006
	  2011	  2044	  2050	  2051	  2052	  2053	  2075	  2077	  2097	  2106	  2110	  2113	  2114	  2128
	  2316	  2317	  2318	  2319	  2320	  2352	  2367	  2372	  2406	  2459	  2460	  2461	  2462	  2469
	  2472	  2476	  2481	  2499	  2500	  2501	  2522	  2523	  2532	  2537	  2538	  2540	  2541	  2556
	  2557	  2558	  2576	  2590	  2598	  2610	  2613	  2627	  2630	  2643	  2652	  2662	  2695	  2777
	  2785	  2794	  2798	  2799	  2803	  2804	  2805	  2809	  2810	  2812	  2813	  2814	  2816	  2818
	  2821	  2823	  2824	  2825	  2828	  2864	  2876	  2892	  2893	  2894	  2896	  2905	  2909	  2915
P1	  1149	  1173	  1186	  1212	  1423	  1435	  1445	  1446	  1455	  1497	  1501	  1509	  1521	  1562
	  1599	  1611	  1615	  1756	  1805	  1809	  1828	  1845	  1850	  1851	  1853	  1862	  1874	  1890
	  1926	  1935	  1952	  1979	  1999	  2000	  2021	  2034	  2035	  2036	  2070	  2072	  2078	  2096
	  2314	  2315	  2370	  2404	  2497	  2550	  2553	  2597	  2612	  2639	  2641	  2648	  2860	  2867
P2	  1501	  1522	  1567	  1581	  1588	  1621	  1622	  1632	  1701	  1702	  1740	  1741	  1809	  1846
	  2103	  2120	  2122	  2124	  2126	  2463	  2467	  2601	  2611	  2626	  2628	  2686	  2861	  2863
	  2868	  2870	  2871	  2872	  2873
P3	  1456	  1464	  1521	  1522	  1524	  1526	  1566	  1577	  1712	  1845	  1846	  1848	  1849	  1850
	  1853	  1864	  1962	  2111	  2299	  2314	  2316	  2318	  2320	  2326	  2328	  2330	  2335	  2339
	  2341	  2343	  2349	  2470	  2589	  2591	  2592	  2593	  2594	  2595	  2617	  2619	  2629	  2765
P4	  1457	  1461	  1462	  1715	  1737	  1741	  2388	  2401	  2403	  2404	  2621	  2625	  2732	  2767
	  2822
PAG	  1468
PAGERR	  1090%	  1573
PAGWAK	  1172	  1211	  1231#
PAGWK1	  1235#	  1241
PAGWK2	  1237#
PBMMSK	  1113%	  1665
PCBSWN	  2882%	  2892
PFICNT	  2208#
PFLCNT	  2205#
PFWCNT	  2206#
PG	   393	   397	   401	   408	   411	   413	   414	   416	   425	   427	   429	   432	   434	   435
	  1147	  1148	  1150	  1152	  1171	  1173	  1181	  1182	  1210	  1212	  1463	  1721	  1722	  1725
	  2537	  2540	  2587	  2588	  2599	  2600	  2604	  2611	  2622	  2623	  2628	  2866	  2867
PGE.A	  1463	  1715	  1737	  2866
PGE.C	  1463	  2866
PGE.W	  1463	  2732	  2767	  2866
PGPDRT	  1102%	  1919	  2492	  2549	  2674
PGPSIP	  1102%	  1906	  2489	  2491	  2674
PGPSOP	  1102%	  1922	  2489	  2548	  2676
PGYADR	  1101%	  1461	  2606
PGYATB	  1101%
PGYDIO	    21%	  1101%	  2473	  2524
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

PGYDRT	  1101%	  1192	  1589	  1728	  2602	  2734	  2737
PGYFPL	  1101%	  1149	  1186	  2601	  2626
PGYLMJ	  1100%	  2760
PGYPGO	  1100%	  1231	  1242
PGYSIO	    21%
PGYSIP	  1100%	  1157	  1579	  1587	  1622	  1969	  2527	  2717
PGYSOP	  1100%	  1184	  1592	  2609	  2625	  2719
PGYSPT	  1100%
PGYSTS	  1102%	  1905	  2488	  2547	  2673
PGYUSE	  1101%	  1159	  1187	  1585	  1917	  2482	  2545	  2671
PJBST2	    20%	   134
PJBSTS	    20%	   439	   466	   473	  1120%	  1235	  1238
PJOBN	  2901%	  2907
POSAVL	  2188#	  2368	  2403	  2478	  2479	  2533	  2534	  2656
POTLST	    79%	   195	   199	   209
PQ0	   587#	   958	   970	   989	  1036	  1041
PQ1	   589#	   890	   942	   949	   952	   955	   960	   966	   970	   971	   991	  1034	  1042
PQ2	   591#	   886	   894	   961	   967	   971	   972	   973	   992	  1033	  1043
PQ3	   593#	   962	   972	   973	   993	  1032	  1044
PRAVAL	   562	   562#
PRCNT	   685#	   686
PRF	  1339	  2004
PRICHK	   147	   222	   237#
PROT	  1126%	  2790
PROT0	  1126%	  2791
PRQ	   562	   562#	   747	   918	   995	  1019	  1030
PRREQ	   663#	   664
PRSSWT	   779	   780%
PRSWT	   800	   800#
PSAVAL	   561	   561#
PSCNT	   684#	   685
PSQ	   561	   561#	   746	   916	   996	  1018	  1029
PSREQ	   662#	   663
PSSSWT	   778	   779%
PSSWT	   799	   799#
PUTLST	  1089%	  1167	  1208
PUTSIL	  1356	  2772#
QACS	   754	   954#
QACW	   632	   933#
QAXS	   753	   948#
QAXW	   631	   931#
QBAK	   539#	  1009	  1011	  1012	  1013	  1015	  1021	  1022	  1032	  1033	  1034	  1035	  1036
QBAK1	   534#	  1010	  1014	  1016	  1017	  1018	  1019	  1020
QBITS	   156	   616	   618#
QBPS	   755	   951#
QBPW	   633	   935#
QCBS	   750	   956#
QCBW	   628	   925#
QCMW	   154	   853	   875#
QCWW	   636	   909#
QDAS	   749	   956#
QDAW	   627	   923#
QFCS	   751	   956#
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

QFCW	   629	   921#
QFIX	   419#	   443	   444	   856	   857
QFLWW	   641	   905#
QFOR	   530#	   989	   990	   991	   992	   993	  1006	  1007	  1008	  1041	  1042	  1043	  1044
QFOR1	   528#	   994	   995	   996	   997	   998	   999	  1023	  1027	  1028	  1029	  1030	  1031
QFOR2	   528	   532#
QHIP	   110	   149	   956#
QILWW	   640	   903#
QINI	   278	   282#
QINI1	   294#	   297
QINI2	   295	   298#
QIOWW	   634	   895#
QJOB	    32	   117	   162	   850	   851#
QJSIZ	   405#	   447	   448	   860	   861
QLINK	   397#	   401	   445	   446	   858	   859
QM2S	   748	   956#
QM2W	   626	   919#
QMBWW	   635	   907#
QMLOWW	   639	   901#
QMTS	   752	   941#
QMTW	   630	   927#
QNULW	   643	   871#
QPRS	   747	   956#
QPRW	   625	   917#
QPSS	   746	   956#
QPSW	   624	   915#
QQSTAB	   878	   983#
QQSTB1	   880	   981#
QQSTBL	   945	   982#
QQYSD	   854%	   942	   949	   952	   955
QQYTTY	   854%	   890	   984%	   984	   985%	   985
QRIS	   745	   956#
QRIW	   623	   913#
QRNS	   733#	   740
QRNW	   618	   877#
QRNW1	   227	   879#
QSCAN	   197	   249	   523#	   532	   537	   541	  1324	  2390	  2412
QSIS	   744	   956#
QSIW	   622	   911#
QSLPW	   642	   929#
QSSS	   736#	   743
QSSW	   621	   893#
QSTAB	   878	   960#
QSTAB1	   880	   966#
QSTOP	   157	   853	   873#
QSTOPW	   644	   873#
QSWW	   638	   899#
QTIME	   107	   853	   944#
QTIOWW	   637	   897#
QTSS	   735#	   742
QTSW	   620	   889#
QTTAB	   945	   970#
QWSS	   734#	   741
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

QWSW	   619	   885#
QX1	   408#	   411
QX2	   402	   413#
QX3	   434	   441#
QXFER	   112	   158	   183	   249	   390#
RBREAL	  1136%	  1446
RELEA9	  2901%	  2909
REMSIL	  2006	  2128	  2779#
REQTAB	   654	   656#	   841
REQUE	    79%	   115	  1134%	  1239
RIAVAL	   560	   560#
RICNT	   683#	   684
RIPPGN	  1198	  1200	  1596	  1929	  2120	  2154#	  2343	  2350	  2619	  2638	  2647	  2683
RIQ	   560	   560#	   745	   914
RIREQ	   661#	   662
RISSWT	   777	   778%
RISWT	   798	   798#
RNAVAL	   555	   555#
RNCNT	   678#	   679
RNQ	   146	   438	   555	   555#	   740
RNQUNT	   980#
RNREQ	   656#	   657
RNSWT	   772	   793	   793#
RUN	  2396	  2422
RUNABL	    96
RUNMSK	    95
S	  1504	  1524	  1572	  1575	  1805	  1848	  1859	  1862	  1863	  1968	  1969	  1974	  1975	  1976
	  2095	  2096	  2098	  2102	  2119	  2121	  2123	  2125	  2697
S$ENTR	    11	    17	   392	   409	   477	  1151	  1155	  1204	  1238	  1444	  1459	  1597	  1609	  1625
	  1841	  1870	  1928	  1930	  1937	  1939	  1965	  1971	  2031	  2076	  2112	  2127	  2526	  2531
	  2684	  2696	  2721	  2736	  2762	  2766	  2807	  2827	  2865
S$EVEN	   391	  1237	  2695
S$HALT	    11	   391	   409	   477	  1151	  1155	  1204	  1237	  1444	  1459	  1597	  1609	  1625	  1841
	  1870	  1928	  1930	  1937	  1939	  1965	  1971	  2031	  2076	  2112	  2127	  2526	  2531	  2684
	  2695	  2721	  2736	  2762	  2766	  2807	  2827	  2865
S$INFO	   391	  1237	  2695
S$JOB	  1237	  1238	  2695	  2696
S$NAME	    15#	   409	   477	  1151	  1155	  1204	  1444	  1459	  1597	  1609	  1625	  1841	  1870	  1928
	  1930	  1937	  1939	  1965	  1971	  2031	  2076	  2112	  2127	  2526	  2531	  2684	  2721	  2736
	  2762	  2766	  2807	  2827	  2865
S$NONA	    14	    17	   392	   409	   477	  1151	  1155	  1204	  1238	  1444	  1459	  1597	  1609	  1625
	  1841	  1870	  1928	  1930	  1937	  1939	  1965	  1971	  2031	  2076	  2112	  2127	  2526	  2531
	  2684	  2696	  2721	  2736	  2762	  2766	  2807	  2827	  2865
S$PATC	   391	  1237	  2695
S$STOP	   391	   392
S$TEMP	    11#	    11	   391#	   391	   409#	   409	   477#	   477	  1151#	  1151	  1155#	  1155	  1204#	  1204
	  1237#	  1237	  1444#	  1444	  1459#	  1459	  1597#	  1597	  1609#	  1609	  1625#	  1625	  1841#	  1841
	  1870#	  1870	  1928#	  1928	  1930#	  1930	  1937#	  1937	  1939#	  1939	  1965#	  1965	  1971#	  1971
	  2031#	  2031	  2076#	  2076	  2112#	  2112	  2127#	  2127	  2526#	  2526	  2531#	  2531	  2684#	  2684
	  2695#	  2695	  2721#	  2721	  2736#	  2736	  2762#	  2762	  2766#	  2766	  2807#	  2807	  2827#	  2827
	  2865#	  2865
S$XCT	    17	   392	   409	   477	  1151	  1155	  1204	  1238	  1444	  1459	  1597	  1609	  1625	  1841
	  1870	  1928	  1930	  1937	  1939	  1965	  1971	  2031	  2076	  2112	  2127	  2526	  2531	  2684
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

	  2696	  2721	  2736	  2762	  2766	  2807	  2827	  2865
SAVE1	  2856%	  2858
SAVE2	  1125%
SCDTRC	    44	    45	    47
SCHD5	   206#
SCHD6	   198	   214#
SCHED	    18	   159	   195#
SCHED1	    11	    12#	    15
SCHEND	  2957#
SCHLIT	  2917#
SCHPRV	   109	   237
SCNLMC	  1096%	  2725	  2763
SDVCLN	  2893	  2903#
SETICP	  1343	  1348	  2008	  2456
SETIPT	  2011	  2790#
SIAVAL	   559	   559#
SICNT	   682#	   683
SID.N	  1095%
SIDCHK	  1147#
SIDL1A	  1153	  1156#
SIDLP1	  1149#	  1174
SIDLP2	  1158#
SIDLP3	  1160	  1166#
SIDLST	  1094%	  1147
SIFCNT	  2131	  2194#
SIJCNT	  1357	  2193#
SINCNT	  1972	  2196#
SINTB	  1873	  2236#
SINTBS	  1871	  1872	  2235#	  2236
SIOBOM	  2211#
SIOCNT	  2210#
SIOSWP	  1961	  2214#
SIPTOT	  1154	  1363	  1623	  1755	  1863	  1927	  1936	  1964	  2001	  2068	  2101	  2156#	  2886
SIQ	   559	   559#	   574	   744	   912
SIREQ	   660#	   661
SISSWT	   776	   777%
SISWT	   797	   797#
SLPQ	   584	   584#	   930	  1007
SOD.N	  1095%
SODCHK	  1148	  1181#
SODLP1	  1183#	  1213
SODLP2	  1189	  1192#
SODLP3	  1194	  1198#
SODLP4	  1199	  1203#
SODLP5	  1202	  1206#
SODLP6	  1191	  1197	  1207#
SODLP8	  1212#
SODLST	  1094%	  1181
SPR.N	  1095%
SRCCHT	  1089%	  1508	  1570	  1827	  1903	  2075	  2864
SRPNDS	  1424	  2722	  2758%
SRSINI	  1315	  2655#
SSAVAL	   558	   558#
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

SSCAN	   196	   853	  1041#
SSCNT	   681#	   682
SSQ	   135	   558	   558#	   743	  1233
SSREQ	   659#	   660
SSSWT	   775	   796	   796#
SSTC0	  2231#
SSTC1	  2222#
SSTC2	  2223#
SSTC3	  2224#
SSTC4	  2225#
SSTC5	  2226#
SSTC6	  2227#
SSTC7	  2228#
SSTC8	  2229#
SSTC9	  2230#
STLBTM	  1813	  1814	  1815	  2233#
STLCNT	  1831	  1942	  2195#
STOLMS	  1089%	  1738	  1832	  1988	  2114	  2481	  2541
STOPQ	   584	   584#	   874	  1006
STRBTS	  1425	  2723	  2758%
STRDDB	  1425	  2723	  2758%
SVQPOS	  2184#	  2376	  2566
SVQRPC	  2185#	  2374	  2565	  2658
SVQRTN	  2186#	  2375	  2564
SWAP	   190	  1312#
SWCCNT	  1314	  2192#
SWECTX	  1749	  2884#
SWERTN	  1753#	  2897
SWIBAD	  2080	  2109	  2119#
SWIBD0	  2103	  2128#
SWIBK1	  2095	  2099#
SWIBKO	  1856	  2095#
SWIC7A	  1469	  1644#
SWICA1	  1507#	  1516
SWICA2	  1509	  1516#
SWICA3	  1526	  1529#
SWICAS	  1417	  1450	  1496#
SWICC1	  1428#	  1447
SWICC2	  1439#	  1442
SWICC3	  1429	  1441	  1445#
SWICCP	  1392	  1415#
SWICN1	  1458#	  1465
SWICND	  1426	  1455#
SWICR1	  2072#	  2079
SWICR2	  2073	  2079#
SWICRP	  1528	  2066#
SWICS0	  1531	  1566#
SWICS1	  1569#	  1631
SWICS3	  1571	  1612#
SWICS4	  1586	  1588	  1590	  1595	  1599	  1607	  1611	  1620	  1629#
SWICS5	  1705#	  1743
SWICS6	  1743#
SWICS7	  1632	  1643#
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

SWICS8	  1651	  1698#
SWICS9	  1724	  1727#
SWICSA	  1578	  1585#
SWICSC	  1593	  1606#
SWICSD	  1580	  1581	  1631#
SWICSI	  1393	  1562#
SWICSV	  1649	  1654#
SWICSX	  1708	  1721#
SWIDN1	  1760	  1874	  1999	  2004#
SWIDON	  1896	  1999#
SWIDSP	  1386	  1390#
SWILA2	  1821	  1825#
SWILA3	  1829#
SWILA4	  1832#
SWILA5	  1818	  1845#
SWILA6	  1849	  1854	  1859#
SWILA7	  1864#
SWILAS	  1499	  1751	  1803#
SWINIR	  1952	  1983#
SWINJ2	  1437	  2010	  2014	  2022	  2042#	  2132
SWINJB	  1955	  2030#
SWINJC	  1613	  1633	  2021#
SWINVP	  1943	  1979	  1988#
SWIRD0	  1923	  1933#
SWIRD1	  1907	  1918	  1920	  1925	  1932	  1934	  1941#
SWIRD2	  1926	  1935	  1945#
SWISC0	  1324#
SWISC1	  1325	  1368#
SWISC2	  1380#	  2045
SWISCA	  1349	  1352#
SWISCN	  1314#
SWISIN	  1904	  1952#
SWISN0	  1960	  1963	  1968#
SWISN1	  1967	  1978#
SWISW0	  1884	  1895#
SWISW7	  1901#
SWISWI	  1394	  1888#
SWIXIT	  1381	  1402#
SWOCT1	  2522#	  2551
SWOCT2	  2536	  2541#
SWOCT3	  2546	  2551#
SWOCTX	  2466	  2510#
SWODNN	  2413	  2572#
SWODON	  2502	  2563#
SWOS4A	  2499#	  2553
SWOSC0	  2369	  2373#
SWOSC1	  2379#	  2657
SWOSC2	  2391	  2403#
SWOSC3	  2377	  2417#
SWOSC4	  2410#
SWOSC5	  2423	  2426#
SWOSCN	  2317	  2365#
SWOSJ0	  2454#
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

SWOSJ1	  2465#
SWOSJ4	  2490	  2497#
SWOSJ5	  2516	  2556#
SWOST0	  2590	  2621#
SWOST1	  2625#	  2629
SWOSTR	  2353	  2617#
SWPCHK	    81	  1146#
SWPENQ	  1130%	  2718	  2730	  2738
SWPER5	  2907#	  2911
SWPERC	  2882%	  2891
SWPINP	  1338	  1352	  2004	  2129	  2394	  2420
SWPIO	  1626	  1973	  2610	  2627	  2716#
SWPIO1	  2728	  2732#
SWPIO2	  2726	  2734#	  2764
SWPIO3	  2724	  2760#
SWPRES	  1527	  1855	  2290#
SWPRS2	  2300	  2325#
SWPRS3	  2327	  2335#
SWPRS4	  2340	  2349#
SWPSAV	  2290	  2716	  2803#
SWPSEC	  2586#
SWQ	   584	   584#	   900	  1022	  1236
SWSCCP	  1354	  1392#
SWSCSI	  1393#	  1529
SWSSWI	  1394#	  1875
SWTTAB	   793#	   839	   843	   846
T1	   108	   109	   111	   201	   202	   282	   283	   284	   285	   287	   288	   290	   400	   407
	   410	   413	   416	   420	   421	   422	   427	   430	   431	  1156	  1157	  1159	  1160	  1183
	  1184	  1187	  1189	  1192	  1194	  1235	  1236	  1337	  1338	  1339	  1343	  1348	  1352	  1353
	  1354	  1355	  1362	  1363	  1415	  1416	  1418	  1419	  1421	  1424	  1425	  1433	  1434	  1448
	  1449	  1466	  1467	  1529	  1530	  1538	  1539	  1574	  1576	  1579	  1580	  1585	  1586	  1587
	  1588	  1589	  1590	  1592	  1593	  1618	  1619	  1646	  1648	  1652	  1653	  1654	  1655	  1661
	  1664	  1665	  1666	  1667	  1668	  1669	  1670	  1680	  1681	  1684	  1687	  1688	  1689	  1691
	  1692	  1693	  1699	  1700	  1706	  1707	  1718	  1719	  1723	  1724	  1725	  1726	  1727	  1728
	  1733	  1734	  1744	  1745	  1746	  1747	  1748	  1750	  1752	  1753	  1754	  1755	  1758	  1759
	  1814	  1815	  1819	  1820	  1866	  1868	  1869	  1871	  1872	  1873	  1897	  1898	  1905	  1906
	  1919	  1922	  1961	  2000	  2001	  2004	  2005	  2007	  2066	  2067	  2068	  2099	  2100	  2101
	  2129	  2130	  2296	  2297	  2298	  2299	  2315	  2325	  2326	  2328	  2329	  2335	  2336	  2338
	  2339	  2341	  2342	  2349	  2350	  2368	  2370	  2392	  2394	  2396	  2400	  2401	  2419	  2420
	  2422	  2427	  2456	  2457	  2473	  2474	  2482	  2483	  2488	  2489	  2491	  2492	  2510	  2511
	  2512	  2515	  2517	  2518	  2524	  2525	  2527	  2530	  2545	  2546	  2547	  2548	  2549	  2602
	  2603	  2609	  2617	  2618	  2638	  2639	  2645	  2648	  2649	  2650	  2651	  2657	  2658	  2671
	  2672	  2673	  2674	  2676	  2717	  2718	  2719	  2720	  2722	  2723	  2734	  2735	  2737	  2760
	  2761	  2772	  2773	  2775	  2779	  2780	  2781	  2782	  2790	  2791	  2792	  2793	  2796	  2797
	  2803	  2805	  2806	  2808	  2809	  2810	  2811	  2812	  2813	  2817	  2818	  2819	  2820	  2821
	  2822	  2823	  2825	  2826	  2884	  2885	  2886	  2887	  2888	  2889	  2890	  2891	  2904	  2905
	  2907	  2908
T2	    86	    88	    94	    95	    96	    98	    99	   104	   105	   120	   121	   126	   129	   130
	   133	   151	   152	   237	   397	   399	   400	   406	   407	   408	   410	   419	   420	   421
	   422	  1233	  1238	  1428	  1429	  1435	  1439	  1440	  1445	  1463	  1464	  1507	  1569	  1616
	  1679	  1680	  1681	  1682	  1683	  1684	  1713	  1714	  1716	  1717	  1864	  1865	  1917	  1918
	  2008	  2009	  2013	  2074	  2480	  2606	  2607	  2780	  2781	  2782	  2794	  2795	  2796	  2798
	  2863	  2895
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

T3	  1385	  1386	  1430	  1431	  1433	  1441	  1867	  1868	  1875	  1876
T4	  1158	  1162	  1190	  1195	  1206	  1514	  1829	  2290	  2672	  2675	  2682	  2686	  2693	  2697
	  2716	  2814	  2858
TIMEF	    20%	    83	   100	   189
TIOWQ	   138	   584	   584#	   898	  1008
TOTACT	  2209#
TPOPJ	    20%
TSAVAL	   557	   557#
TSCNT	   680#	   681
TSETBI	    21%
TSQ	   557	   557#	   604	   742
TSREQ	   658#	   659
TSSWT	   774	   795	   795#
TSTVIR	  1090%	  1959
TTYFND	    21%
U	   107	   110	   134	   135	   136	   138	   146	   149	   154	   156	   157	   178	   179	   182
	   196	   227	   393	   394	   415	   424	   435	   436	   437	   438	   439	   461	   464	   466
	   467	   468	   470	   471	   472	   473	   474	   475	   476	   480	   523	   532	   537	   541
	  1316	  1368	  1405	  2053	  2376	  2389	  2410	  2459	  2501	  2558	  2566	  2810	  2812	  2819
	  2821
UP4LDA	  1107%	  1714
UPSJOB	  1090%	  1644	  2535	  2539	  2552	  2856%	  2874
UPT	  1112%	  1654	  1667
UPTACP	  1113%	  1667	  1668
UPTEND	  1112%	  1664
UPTFSL	  1655	  1661	  1663
UPTHEC	  1656
UPTHMC	  1658
UPTJOB	  1113%	  1650	  1690
UPTLDC	  1113%	  1711	  1840	  2030
UPTLEC	  1657
UPTLMC	  1659
UPTNTV	    22%	   102	   103	  1670
UPTPBM	  1113%	  1666
UPTRES	  1114%
USE.N	  1095%	  1158	  1190
USECL1	  2601#	  2612
USECL2	  2603	  2605	  2608	  2611#
USECLN	  2588	  2592	  2597#
USELST	  1094%	  2599
USRACB	  1725
USYLSP	  1115%	  1883	  1889	  2033
USYPXM	  1641%	  1701
USYRES	  1115%	  1890	  2036
USYSIN	  1115%	  1759	  1804	  1974	  1976	  2007
USYUWL	  1115%	  1689
USYUWM	  1115%	  1688
VIRCNT	  1966	  2197#
VPMAX	  1815	  2233
VPUMAX	  1114%	  2727
VRACNT	  2207#
W	  1422	  1428	  1430	  1439	  1442	  1447	  1462	  1465	  1505	  1507	  1516	  1539	  1568	  1569
	  1577	  1616	  1631	  1698	  1713	  1734	  1743	  1803	  1804	  1820	  1882	  1883	  1889	  1898
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Symbol cross reference

	  2033	  2069	  2072	  2074	  2078	  2079	  2105	  2454	  2467	  2521	  2551	  2727	  2811	  2820
WRSHDR	   483#	   489
WRSMA1	   462	   470#
WRSMA2	   469	   480#
WRSMAP	   440	   459	   463#
WRSMP1	   459	   460#
WRSNAM	   484	   485#
WRSVAL	   484	   487#
WSAVAL	   556	   556#
WSCNT	   679#	   680
WSQ	   136	   556	   556#	   741
WSREQ	   657#	   658
WSSWT	   773	   794	   794#
WTMASK	   207
%%ZCNT	   699#	   701	   701#	   702	   702#	   703	   703#	   704	   704#	   705	   705#	   706	   706#	   707
	   707#	   708	   708#	   709	   709#	   710	   710#	   711	   711#	   712	   712#	   713	   713#	   714
	   714#	   715	   715#	   716	   716#	   717
%UPLMS	  1112%	  1700	  1820	  1898	  2467
%UPS	  1112%	  1650	  1654	  1655	  1656	  1657	  1658	  1659	  1661	  1663	  1664	  1666	  1668	  1670
	  1690	  1711	  1840	  2030	  2871
%UPT	    22%	   102	   103
%UPT.N	  1112%	  1698	  1713	  1734	  2521
%UPX.N	  1641%	  1700
SCHED1 - SCHEDULING ALGORITHM FOR SWAPPING SYSTEM	MACRO 12.5-46.0 14:35 13-JAN-88
SCHED1.MAC	 4-DEC-87 16:14		Macro/Opdef cross reference

CALTAL	    38#
CLRPT	  2871
CLRPTA	  1468
CLRPTO	  2871
CODES	   584	   634
DSKOFF	    40#	  1166	  1207
DSKON	    41#	  1170	  1209
IFCPU	  1656
LSTCHK	  1139#	  1380
PJRST	  1540	  2080	  2353	  2413	  2738
PTTAB	   867#	   877	   879	   944
QUEUES	   555	   618	   656	   678	   700	   740	   772	   793	   821
STOPCD	    10	   391	   409	   477	  1151	  1155	  1204	  1237	  1444	  1459	  1597	  1609	  1625	  1841
	  1870	  1928	  1930	  1937	  1939	  1965	  1971	  2031	  2076	  2112	  2127	  2526	  2531	  2684
	  2695	  2721	  2736	  2762	  2766	  2807	  2827	  2865
TRACE	    45#	   206	   214	   422	  1351	  1356	  1528	  1856	  2008	  2455	  2797
TTAB	   863#	   871	   873	   875	   885	   889	   893	   895	   897	   899	   901	   903	   905	   907
	   909	   911	   913	   915	   917	   919	   921	   923	   925	   927	   929	   931	   933	   935
	   941	   948	   951	   954	   957
WRPI	  1166	  1170	  1207	  1209
X	   548#	   555	   556	   557	   558	   559	   560	   561	   562	   563	   564	   565	   566	   567
	   568	   569	   570	   580#	   584	   613#	   618	   619	   620	   621	   622	   623	   624	   625
	   626	   627	   628	   629	   630	   631	   632	   633	   634	   635	   636	   637	   638	   639
	   640	   641	   642	   643	   644	   650#	   656	   657	   658	   659	   660	   661	   662	   663
	   664	   665	   666	   667	   668	   669	   670	   671	   674#	   678	   679	   680	   681	   682
	   683	   684	   685	   686	   687	   688	   689	   690	   691	   692	   693	   696#	   700	   701
	   702	   703	   704	   705	   706	   707	   708	   709	   710	   711	   712	   713	   714	   715
	   730#	   740	   741	   742	   743	   744	   745	   746	   747	   748	   749	   750	   751	   752
	   753	   754	   755	   761#	   772	   773	   774	   775	   776	   777	   778	   779	   780	   781
	   782	   783	   784	   785	   786	   787	   790#	   793	   794	   795	   796	   797	   798	   799
	   800	   801	   802	   803	   804	   805	   806	   807	   808	   811#	   821	   822	   823	   824
	   825	   826	   827	   828	   829	   830	   831	   832	   833	   834	   835	   836
XP	   573	   574	   575	   586	   604	  2235
$END	  2917   > 69