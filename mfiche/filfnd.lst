FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 1
S.MAC	13-JAN-88 11:55		S.MAC - with system parameter file for P035/D, January 1988

     1				SUBTTL	S.MAC - with system parameter file for P035/D, January 1988
     2
     3				IF2,<IFNDEF LISTSN,<TAPE>>	;Skip to PASS2 in all but COMMON.LST
     4				;THIS MODULE ASSEMBLED WITH KL-10 PARAMETER FILE - KLSYM.MAC
     5
     6					IF2,<IFNDEF LISTSN,<		;LIST KLSYM.MAC IN COMMON ONLY
     7								TAPE>>
     8				TITLE FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS
     9
    10					STOPCD(,ENTRY,FILFND)^
    11					ENTRY	FILFND		;For library searches
    12	000000'	260040	000000*	FILFND::PUSHJ	P,DIE		;**** Default stopcode for "FILFND" ****
    13	000001'	465154	465644		SIXBIT	/FILFND/  	;Title of module
    14	000002'	000000	000000		S$NONAME,,0		;?NONAME stopcode "FILFND+nnn(nnnnnn)"
    15			000000'	S$NAME==FILFND			;For STOPCDs with no arguments
    16					SALL>
    17				^
    18
    19				;EXTERNALS FROM OTHER PARTS OF THE MONITOR
    20
    21				EXTERNAL CBAVAL,CBREQ,CBSWT,CBWAIT,CPOPJ1,CPOPJ2,JBTFPN
    22				EXTERNAL JBTLIC,JBTPPN,JBYRPT,JBYWPT,JOB,PJOBN,SAVE4,TPOPJ,JBTAUN
    23				EXTERNAL TPOPJ1,CPOPJ
    24
    25				COMMENT ;@@MODULE FILFNX
    26				@@PURPOSE HANDLE ALL MANIPULATION OF IN-CORE TABLES AND
    27				DIRECTORY MANIPULATION FOR
    28				FILE ROUTINES. HANDLES LOOKUP, ENTER, RENAME PROCESSES WHICH
    29				DO NOT INVOLVE THE FORMAT OF THE UUO ITSELF
    30				@@;
    31
    32				INTERNAL FREATB,CHKACC,RMVATB,SRCNAM,RELLOK,LOKPPB,NLKPPB
    33				INTERNAL GIVCB1,GIVCBR,GUFBT,SRCFIL,LKDATB,GETCBR,DIRSRC,CHKPRV
    34				INTERNAL TSTWRT,FNDDRB
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 2
FILFND.MAC	28-OCT-87 00:07		S.MAC - with system parameter file for P035/D, January 1988

    35				;EXTERNALS IN COMMOD.MAC
    36
    37				EXTERNAL ACTPPN,MFDPPN,SYSPPN,SPLPPN,INDPPN
    38				EXTERNAL CBADR,CBUSER
    39
    40				EXTERNAL ATBALP,ATBCNT,ATBDOR,ATBFNB,ATBLCW,ATBLNK,ATBMSC
    41				EXTERNAL ATBPVW,ATBRIB,ATBSIZ,ATBSTS,ATBPID
    42				EXTERNAL ATMCNT,ATPCRE,ATPDEL,ATPDIR,ATPNDL,ATPREN,ATPSUP,ATPUPD
    43				EXTERNAL ATPALC
    44				EXTERNAL ATYPRV
    45
    46				EXTERNAL CMBLNK,CMBNAM
    47
    48				EXTERNAL DEVDBL,DEVATB,DEVDRB,DEVRIB
    49				EXTERNAL PIDACC
    50				EXTERN DEVREL,DEVBLK ;*************
    51
    52				EXTERNAL DRBALC,DRBCNT,DRBFNB,DRBLNK,DRBLOG,DRBMXA,DRBNX
    53				EXTERNAL DRBRIB,DRBSTS,DRBLOK,DRBNAM,DRBUNM
    54				EXTERNAL DRMCNT,DRPLOG,DRPLOK,DRPNX,DRPMXC
    55				EXTERNAL DRYPRV
    56
    57				EXTERNAL FNBATB,FNBDBL,FNBDRB,FNBEXT,FNBLNK,FNBLOK,FNBALT,FNBNX
    58				EXTERNAL FNBRIB
    59				EXTERNAL FNPLOK,FNPNX
    60				EXTERNAL FNYUFP
    61
    62				EXTERNAL FNCAPP,FNCCPR,FNCCRE,FNCDEL,FNCEXC,FNCLOK,FNCRED,FNCUPD
    63				EXTERNAL UFRXLK,UFRXRD,UFRXCR
    64
    65				EXTERNAL PTRLEN
    66
    67				EXTERNAL RIBALP,RIBLCW,RIBMSC,RIBMXA,RIBPVW,RIBQTF,RIBSIZ,RIBSLF
    68				EXTERNAL RIBSTS,RIBUSD,RIBUNM,RIBPID,RIBALT
    69				EXTERNAL RIPDIR,RIPNDL
    70				EXTERNAL RIYPRV,RIBPFS,RIBLST,RBMASK,RBREAL,RELRB2,RELRIB
    71
    72				EXTERNAL SYSCOR,SYSDOR,SYSDRB
    73
    74				EXTERNAL UFDRIB,UFDNAM,UFDEXT,UFDSIZ,UFDLNK
    75
    76				EXTERNAL SAVE2,ATBMWC,ATMMWC,ATPMXU,ATPDUM,LM3SPT,LMPMXW
    77				EXTERNAL LMPSUP,%UPT,UPTPID
    78				EXTERNAL PCDTIM
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 3
FILFND.MAC	28-OCT-87 00:07		S.MAC - with system parameter file for P035/D, January 1988

    79				COMMENT ;
    80				THE FOLLOWING INDICATIONS ARE USED IN COMMENTS:
    81				% THE JOB HAS CB RESOURCE AT THIS POINT
    82				+ THE JOB HAS DRBCNT INCREMENTED AT THIS POINT
    83				! THE JOB HAS A BLOCK LOCKED AT THIS POINT
    84				;
    85
    86				;EXTERNALS IN OTHER PARTS OF FILSER
    87
    88				EXTERNAL IOSRIB,%RIB.C,MAPRDL,UUOLUK,UUOREN,UUOENT,UUOUFD
    89				EXTERN GIVPAG,FALAQA
    90				EXTERNAL UUOMLK,MAPWTL,MAPRLS,%RB2.C,IOSRBE,MAPWLN
    91				EXTERNAL GETER1,DIRFST,PRMCHK,DIRNXT,NCSERR,SNFERR
    92				EXTERNAL RIBDIR,DIRBLK,MAPXCH,RIBCKD,%RB2.C,GETAPG,MAPWTL,IOSALC
    93				EXTERNAL UFDATB		;FROM FILUUO, FILLS IN ATB FROM UFD ENTRY
    94				EXTERNAL UUOIRE		;IGNORE RIB ERROR BIT SET BY RENAME CODE THAT CALLS SRCFIL
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 4
FILFND.MAC	28-OCT-87 00:07		S.MAC - with system parameter file for P035/D, January 1988

    95				COMMENT ;@@SUBROUTINE LOKPPB
    96				@@PURPOSE TEST AND SET DRPLOK BIT IN DIRECTORY BLOCK (DRB)
    97				FOR LOGINN AND LOGOUT. USED TO AVOID HAVING TWO USERS MANIPULATING
    98				THE DIRECTORY AT THE SAME TIME.
    99				@@ENTRY P1 CONTAINS THE STRUCTURE NAME (MUST BE DSKB)
   100				P2 CONTAINS THE PPN
   101				@@ACCUM P1,T2,T3,P2,T1
   102				@@TABLES DRB TABLES IN CORE (MAY CREATE NEW DRB BLOCK)
   103				@@GLOBAL SYSDRB
   104				@@ERRORS MAY EXIT TO SNFERR OR NCSERR IF WRONG FILE
   105				STRUCTURE OR NO CORE TO CREATE NEW DRB RESPECTIVELY.
   106				@@CALLS PPBBIT (SETS CB INTERLOCK)
   107				GIVCBR,GIVCB1
   108				@@EXIT NON-SKIP RETURN IF DPRLOK ALREADY SET
   109				SKIP RETURN IF DRPLOK WAS NOT SET, IT IS SET NOW.
   110				@@FUNCTION IF PPBBIT() NON-SKIP [TAKE ERROR EXIT SET BY PPBBIT]
   111					IF DRPLOK IS ON GO TO GIVCBR
   112					SET DRPLOK AND GO TO GIVCB1@@;
   113
   114	000003'	260040	000015'	LOKPPB:	PUSHJ	P,PPBBIT	;GET L(UFB), BIT TO TEST
   115	000004'	324754	000000		 PJRST (P1)		;P1 SET FOR CORRECT ERROR RETURN
   116	000005'	612647	000000*		TDNE	P2,DRBLOK(T2)	;% LOCKED?
   117	000006'	324740	001357'		  PJRST	GIVCBR		;% YES - NON SKIP RETURN
   118	000007'	436647	000005*		ORM	P2,DRBLOK(T2)	;% NO. NOW IT IS
   119	000010'	324740	001356'		  PJRST	GIVCB1		;% GIVE UP CB AND SKIP-RETURN
   120
   121				COMMENT ;@@SUBROUTINE NLKPPB
   122				@@PURPOSE RESET DRPLOK BIT IN DIRECTORY BLOCK (DRB)
   123				@@ENTRY P1 CONTAINS THE STRUCTURE NAME P2 THE PPN
   124				@@ACCUM P1,T2,T3,P2,T1
   125				@@TABLES DRB TABLES
   126				@@GLOBAL SYSDRB
   127				@@ERRORS NONE, INCORRECT STR NAME OR NO FREE CORE IS NOT CONSIDERED
   128				AN ERROR
   129				@@CALLS PPBBIT,GIVCBR
   130				@@EXIT NON-SKIP ONLY
   131				@@FUNCTION IF PPBBIT() NON-SKIP [RETURN]
   132					CLEAR DRPLOK AND GO TO GIVCBR
   133				@@;
   134
   135	000011'	260040	000015'	NLKPPB:	PUSHJ	P,PPBBIT	;GET UFB, BIT TO CLEAR
   136	000012'	263040	000000		  POPJ	P,		;NOT AN STR NAME
   137	000013'	412647	000007*		ANDCAM	P2,DRBLOK(T2)	;% CLEAR THE BIT
   138	000014'	324740	001357'		PJRST	GIVCBR		;% GIVE UP CB AND RETURN
   139
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 5
FILFND.MAC	28-OCT-87 00:07		S.MAC - with system parameter file for P035/D, January 1988

   140				COMMENT ;@@SUBROUTINE PPBBIT
   141				@@PURPOSE FIND A DRB AND RETURN A POINTER TO IT FOR LOKPPB AND NLKPPB
   142				@@ENTRY P1 HAS STR NAME, P2 PPN
   143				@@ACCUM P1,P2,T2,T3,T1
   144				@@TABLES DRB TABLES
   145				@@GLOBAL SYSDRB (NOT MODIFIED)
   146				@@EXIT NON-SKIP RETURN IF NO CORE TO CREATE DRB OR STR NAME
   147				INCORRECT. P1 SET TO ADDRESS OF APPROPRIATE ROUTINE
   148				SKIP RETURN WITH T2 THE ADDRESS OF THE DRB AND P2 DRPLOK
   149				@@ERRORS NOT ENOUGH CORE FOR DRB OR STR NAME NOT DSKB
   150				@@CALLS SRCNAM,GETCBR,GIVCBR
   151				@@FUNCTION  P1_@SNFERR
   152					IF STR#'DSKB' RETURN
   153					CALL GETCBR
   154					P1_@NCSERR
   155					IF SRCNAM(SYSDRB) NON-SKIP RETURN AND T2<0 (NO CORE)
   156						GO TO GIVCBR
   157					P2_DRPLOK
   158					SKIP-RETURN
   159				@@;
   160
   161				PRINTF(<[PPBBIT Why must the STR name be DSKB here?  If DRBSTR setup?]>)
   162	000015'	200300	000014	PPBBIT:	MOVE	T1,P1			;STR NAME
   163	000016'	201600	000000*		MOVEI	P1,SNFERR		;ERROR RETURN, NOT F/S NAME
   164	000017'	312300	002337'		CAME	T1,[SIXBIT /DSKB/]	;ONLY ONE PERMITTED
   165	000020'	263040	000000		  POPJ	P,			;NOT AN STR
   166	000021'	200300	000015		MOVE	T1,P2			;PRJ-PRG
   167	000022'	260040	001342'		PUSHJ	P,GETCBR
   168	000023'	201600	000000*		MOVEI	P1,NCSERR		;% ERROR RETURN, NOT ENOUGH CORE
   169	000024'	554340	000000*		HLRZ	T2,SYSDRB		;% 1ST PPB IN SYSTEM
   170	000025'	201400	000000*		MOVEI	T3,SYSDRB-CMBLNK	;% IN CASE THIS CREATES 1ST PPB BLOCK
   171	000026'	260040	001202'		PUSHJ	P,SRCNAM		;% FIND PPB FOR THIS USER (MAY CREATE ONE)
   172	000027'	323340	001357'		 JUMPLE T2,GIVCBR		;% CREATED ONE IF ENOUGH CORE
   173	000030'	201640	000000*		MOVEI	P2,DRPLOK		;% THE BIT TO USE
   174	000031'	324740	000000*		PJRST	CPOPJ1			;% RETURN
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 6
FILFND.MAC	28-OCT-87 00:07		S.MAC - with system parameter file for P035/D, January 1988

   175				COMMENT ;@@SUBROUTINE GUFBT
   176				@@PURPOSE DETERMINE NUMBER OF BLOCKS LEFT IN QUOTA FOR A GIVEN
   177				UFD
   178				@@ENTRY NONE
   179				@@ACCUM T2,T4
   180				@@TABLES DRB TABLES,JBTPPN
   181				@@GLOBAL SYSDRB,JOB
   182				@@EXIT T2 CONTAINS THE REMAINING QUOTA. IF QUOTA IS UNKNOWN
   183				(BECAUSE DRB BLOCK NOT FOUND) T2 CONTAINS 1B0
   184				@@RESTRICTIONS MUST BE CALLED AT UUO LEVEL FOR THE CURRENT JOB
   185				@@CALLS NONE
   186				@@FUNCTION SEARCH DRB TABLE FOR DRB WITH NAM=JBTPPN(JOB)
   187					IF NOT FOUND RETURN (1B0)
   188					RETURN (DRBALC(DRB TABLE))
   189				@@ ;
   190
   191	000032'	200340	000000*	GUFBT:	MOVE	T2,JOB			;% T2=JOB NUMBER
   192	000033'	200447	000000*		MOVE	T4,JBTPPN(T2)		;% GET PROJ-R # FOR THIS JOB
   193	000034'	201340	000000*		MOVEI	T2,SYSDRB-DRBLNK	;%READ TO LOOK AT FIRST DRB IN SYS
   194	000035'	554347	000000*	GUFBT1:	HLRZ	T2,DRBLNK(T2)		;% GET ADR. OF NEXT PPB
   195	000036'	322340	000042'		JUMPE	T2,GUFBT3		;% NONE LEFT - RETURN WITH T2=0
   196	000037'	312447	000000*		CAME	T4,DRBNAM(T2)		;% IS THIS PPB # SAME AS JOB'S?
   197	000040'	254000	000035'		  JRST	GUFBT1			;% NO - REPEAT
   198	000041'	334347	000000*		SKIPA	T2,DRBALC(T2)		;% YES - GET # FREE + RESERVED BLOCKS LEFT IN THIS UFB
   199	000042'	205340	400000	GUFBT3:	  MOVSI	T2,400000		;% RETURN MOST NEGATIVE NUMBER IF NO UFB BLOCK
   200	000043'	263040	000000		POPJ	P,			;% GO DEPOSIT IT IN TABLE
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 7
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   201				SUBTTL	SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES
   202				;IN THIS MODULE P3=LOC OF FNB, P4=LOC OF DRB, P2=LOC OF ATB
   203
   204				COMMENT ;@@SUBROUTINE SRCFIL
   205				@@PURPOSE DOES MANIPULATION OF CORE TABLES AND EXAMINATION
   206				OF DIRECTORIES FOR LOOKUP, ENTER, AND RENAME.
   207				@@ENTRY F POINTS TO DSK DDB, DEVFIL(F),DEVEXT(F), AND DEVPPN(F)
   208				CONTAIN THE FILE NAME, EXTENSION, AND PPN DESIREC.
   209				M HAS UUOLUK FOR LOOKUP, UUOENT OF ENTER OR UUOREN FOR RENAME.
   210				ONLY ONE OF THESE MAY BE ON. M MAY HAVE UUOMLK FOR MULTIPLE LOOKUP.
   211				@@ACCUM T1,T2,T3,T4
   212				@@TABLES ALL IN-CORE TABLES (DRB, FNB, ATB) ARE USED AND POSSIBLY
   213				MODIFIED.
   214				@@GLOBAL SYSDRB,SYSCOR,SYSDOR
   215				@@EXIT NON-SKIP RETURN ON ERROR, T1 CONTAINS ERROR CODE
   216				SKIP RETURN IF OK, DEVACC(F) POINTS TO THE ATB. IOSRIB IN S
   217				IS ON IF AND ONLY IF %RIB HAS THE FILE RIB IN IT (LOOKUP ONLY)
   218				repeat 0,<FOR MULTIPLE LOOKUP, DEVEXT(F) IS SET TO THE CORRECT EXTENION.>
   219				ERROR BITS MAY BE SET IF THERE WERE RIB ERRORS
   220				@@ERRORS SEE EXIT CONDITIONS
   221				@@RESTRICTIONS CALLED AT UUO LEVEL ONLY MAY WAIT FOR RESOURCES
   222				@@CALLS GETCBR,GIVCBR,GIVCB1,SRCNAM,RELLOK,DIRSRC,LOKDIR
   223				SETDDB,MAPRDL,PRMCHK,SRCAT,ULDATB,FREATB,GETCOR
   224				@@ ;
   225
   226
   227	000044'	265440	000000*	SRCFIL:	JSP	T4,SAVE4
   228	000045'	621000	000000*		TLZ	S,IOSRIB!IOSRBE!IO ;DO NOT HAVE RIB IN %RIB
   229	000046'	260040	001342'		PUSHJ	P,GETCBR	;FOR THE INITIAL DRB SEARCH
   230	000047'	554340	000024*		HLRZ	T2,SYSDRB	;%SEARCH FOR THIS DRB, FIRST IN T2
   231	000050'	201400	000000*		MOVEI	T3,SYSDRB-DRBLNK
   232	000051'	200304	000017		MOVE	T1,DEVPPN(F)
   233	000052'	260040	001202'		PUSHJ	P,SRCNAM	;%SEARCH FOR THE APPROPRIATE NAME
   234	000053'	323340	000650'		  JUMPLE T2,ERRNEC	;%COULD NOT GET FREE CORE TO CREATE
   235	000054'	201400	000000*		MOVEI	T3,DRPNX
   236	000055'	612407	000000*		TDNE	T3,DRBNX(T2)	;% DO WE KNOW ITS NOT THERE?
   237	000056'	254000	000652'		 JRST	ERRIPP		;% YES, NO UFD
   238	000057'	200740	000007		MOVE	P4,T2
   239	000060'	350317	000000*		AOS	T1,DRBCNT(P4)	;%+ NOW ANOTHER USING IT
   240	000061'	602300	000000*		TRNE	T1,DRPMXC	;%+ IS COUNT NOW TOO BIG (OVERFLOW)
   241	000062'	256000	002340'	FILDMO:: STOPCD (.,DISK,FILDMO,,<DRB Max count overflow>)
   242				 ;;SRCFIL+16
   243	000063'	332017	000000*		SKIPE	DRBRIB(P4)	;%+ DO WE KNOW WHERE IT IS?
   244	000064'	254000	000201'		 JRST	DRBFND		;%+ YES, READY TO LOOK FOR FILE
   245	000065'	260040	001357'		PUSHJ	P,GIVCBR
   246	000066'	261044	000015		PUSH	P,DEVFIL(F)	;+ SAVE NAME TO SET FOR DIR
   247	000067'	200304	000016		MOVE	T1,DEVEXT(F)
   248	000070'	627540	000000*		TLZN	M,UUOMLK	;+ USE RH TO SAVE MLK BIT
   249	000071'	624300	777777		 TRZA	T1,-1
   250	000072'	660300	777777		  TRO	T1,-1
   251	000073'	261040	000006		PUSH	P,T1
   252	000074'	200304	000017		MOVE	T1,DEVPPN(F)
   253	000075'	202304	000015		MOVEM	T1,DEVFIL(F)
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 7-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   254	000076'	200300	000000*		MOVE	T1,MFDPPN
   255	000077'	202304	000017		MOVEM	T1,DEVPPN(F)
   256	000100'	205300	654644		MOVSI	T1,'UFD'
   257	000101'	502304	000016		HLLM	T1,DEVEXT(F)
   258	000102'	200300	000000*		MOVE	T1,MFDRIB##	;+ GET RIB POINTER FOR MFD
   259	000103'	260040	000000*		PUSHJ	P,DIRFST	;+ GET THE FIRST DIRECTORY BLOCK
   260	000104'	254000	000121'		  JRST	SRCNUF		;+ NONE THERE
   261	000105'	260040	001342'	SRCULP:	PUSHJ	P,GETCBR	;+! NEED TO LOOK AT DRB IN CASE COMPLETED BY ANOTHER JOB
   262	000106'	201300	000054*		MOVEI	T1,DRPNX
   263	000107'	612317	000055*		TDNE	T1,DRBNX(P4)
   264	000110'	254000	000140'		 JRST	SRCNU2		;%+! NOW KNOW ITS NOT THERE
   265	000111'	332017	000063*		SKIPE	DRBRIB(P4)
   266	000112'	254000	000170'		 JRST	DRBFN1		;%+! SOMEONE ELSE FOUND IT
   267	000113'	260040	001357'		PUSHJ	P,GIVCBR
   268	000114'	260040	000717'		PUSHJ	P,DIRSRC	;+! NOW SEARCH. MUST GIVE UP CB IN CASE PAGE FAULT
   269	000115'	254000	000142'		  JRST	DRBFN2		;+! FOUND
   270	000116'	260040	000000*		PUSHJ	P,DIRNXT	;+! GO ON TO THE NEXT DIR BLOCK
   271	000117'	254000	000121'		  JRST	SRCNUF		;+! THAT WAS THE LAST
   272	000120'	254000	000105'		JRST	SRCULP		;+! FOLLOWS LINKED HASH FORMAT
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 8
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   273				;+ HERE ON END OF FILE FOR THE MFD
   274
   275	000121'	260040	001342'	SRCNUF:	PUSHJ	P,GETCBR
   276	000122'	332017	000111*		SKIPE	DRBRIB(P4)	;%+ WAS IT REALLY FOUND BY SOMEONE ELSE (OR CREATED)
   277	000123'	254000	000171'		 JRST	DRBFN3		;%+ YES
   278	000124'	201300	000106*		MOVEI	T1,DRPNX
   279	000125'	436317	000107*		IORM	T1,DRBNX(P4)	;%+ MARK NON-EXISTANT
   280	000126'	370017	000060*	SRCNU1:	SOS	DRBCNT(P4)
   281	000127'	262040	000006		POP	P,T1
   282	000130'	502304	000016		HLLM	T1,DEVEXT(F)
   283	000131'	602300	777777		TRNE	T1,-1
   284	000132'	661540	000070*		 TLO	M,UUOMLK	;%+ RESET BIT
   285	000133'	262040	000006		POP	P,T1
   286	000134'	250304	000015		EXCH	T1,DEVFIL(F)
   287	000135'	202304	000017		MOVEM	T1,DEVPPN(F)
   288	000136'	254000	000652'		JRST	ERRIPP		;% NO UFD
   289
   290	000137'	260040	001342'	SRCNU3:	PUSHJ	P,GETCBR	;+! HERE ON A RIB ERROR
   291	000140'	260040	000715'	SRCNU2:	PUSHJ	P,RELLOK	;%+! NOW KNOWN NX
   292	000141'	254000	000126'		JRST	SRCNU1		;%+ CLEAN UP AND GIVE IPP ERROR
   293
   294	000142'	200307	376000*	DRBFN2:	MOVE	T1,%RIB+UFDRIB(T2)	;+! GET POINTER
   295	000143'	202304	000000*		MOVEM	T1,DEVRIB(F)	;+! SAVE IT
   296	000144'	260040	000715'		PUSHJ	P,RELLOK	;+! RELEASE CURRENT BLOCK
   297	000145'	200304	000143*		MOVE	T1,DEVRIB(F)	;+ MAP IN RIB FOR DIRECTORY
   298	000146'	260040	000000*		PUSHJ	P,MAPRDL
   299	000147'	260040	000000*		PUSHJ	P,PRMCHK	;+! DO A PRIME RIB CHECK
   300	000150'	254000	000137'		  JRST	SRCNU3		;+! RIB ERROR, SAY NO UFD
   301	000151'	260040	001342'		PUSHJ	P,GETCBR
   302	000152'	332017	000122*		SKIPE	DRBRIB(P4)	;%+! SOMEONE ELSE GOT IT
   303	000153'	254000	000170'		 JRST	DRBFN1
   304	000154'	200300	376000*		MOVE	T1,%RIB+RIBSLF
   305	000155'	202317	000152*		MOVEM	T1,DRBRIB(P4)
   306	000156'	200300	376000*		MOVE	T1,%RIB+RIBQTF
   307	000157'	274300	376000*		SUB	T1,%RIB+RIBUSD
   308	000160'	202317	000041*		MOVEM	T1,DRBALC(P4)
   309	000161'	200300	376000*		MOVE	T1,%RIB+RIBQTF
   310	000162'	274300	376000*		SUB	T1,%RIB+RIBMXA
   311	000163'	202317	000000*		MOVEM	T1,DRBMXA(P4)
   312	000164'	120300	376000*		DMOVE	T1,%RIB+RIBUNM
   313	000165'	124317	000000*		DMOVEM	T1,DRBUNM(P4)
   314	000166'	135300	000000*		LDB	T1,RIYPRV
   315	000167'	137300	000000*		DPB	T1,DRYPRV
   316	000170'	260040	000715'	DRBFN1:	PUSHJ	P,RELLOK	;%+! ALL SET UP NOW
   317	000171'	262040	000006	DRBFN3:	POP	P,T1		;%+
   318	000172'	502304	000016		HLLM	T1,DEVEXT(F)
   319	000173'	602300	777777		TRNE	T1,-1
   320	000174'	661540	000132*		  TLO	M,UUOMLK	;%+ RESET BIT
   321	000175'	262040	000006		POP	P,T1
   322	000176'	250304	000015		EXCH	T1,DEVFIL(F)
   323	000177'	202304	000017		MOVEM	T1,DEVPPN(F)
   324	000200'	621000	000000*		TLZ	S,IOSRBE	;FORGET ERROR FLAG
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 9
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   325				;%+ HERE WHEN WE HAVE A DRB ALL SET U 326
   327	000201'	201300	000000*	DRBFND:	MOVEI	T1,DRPLOG	;%+ GET READY TO MARK LOGGED IN (DO NOT GARBAGE COLLECT)
   328	000202'	200344	000017		MOVE	T2,DEVPPN(F)
   329	000203'	200400	000032*		MOVE	T3,JOB
   330	000204'	312350	000033*		CAME	T2,JBTPPN(T3)
   331	000205'	316340	000076*		CAMN	T2,MFDPPN
   332	000206'	436317	000000*		  IORM	T1,DRBLOG(P4)
   333	000207'	312340	000000*		CAME	T2,SYSPPN	;%+ SYS, MFD, SPOOLING ALWAYS SAVED
   334	000210'	316340	000000*		CAMN	T2,SPLPPN
   335	000211'	436317	000206*		  IORM	T1,DRBLOG(P4)
   336	000212'	200304	000015		MOVE	T1,DEVFIL(F)	;%+ SEARCH FOR THE FNB
   337	000213'	201417	000000*		MOVEI	T3,DRBFNB-FNBLNK(P4)	;%+ DOWN POINTER
   338	000214'	554357	000000*		HLRZ	T2,DRBFNB(P4)
   339	000215'	554444	000016		HLRZ	T4,DEVEXT(F)	;%+ USE T4 FOR EXT
   340	000216'	260040	001202'		PUSHJ	P,SRCNAM	;%+ GO LOOK FOR IT
   341	000217'	254000	000230'		  JRST	CREFNB		;%+ NOT FOUND, SHOULD HAVE BEEN CREATED
   342	000220'	550407	000000*	SRCFNB:	HRRZ	T3,FNBEXT(T2)	;%+ SAME EXT? (T3 NOT NEEDED NOW)
   343	000221'	603540	000174*		TLNE	M,UUOMLK	;%+ FOO MULTIPLE LOOKUP
   344	000222'	254000	000302'		  JRST	SRCMFB		;%+ SPECIAL CODE REQUIRED
   345	000223'	316440	000010		CAMN	T4,T3
   346	000224'	254000	000235'		JRST	FNDFNB		;%+ YES FOUND
   347	000225'	260040	001205'	SRCFN0:	PUSHJ	P,SRCNM0	;%+ NO CONTINUE
   348	000226'	254000	000230'		  JRST	CREFNB
   349	000227'	254000	000220'		JRST	SRCFNB		;%+ CHECK NEXT
   350
   351	000230'	323340	000644'	CREFNB:	JUMPLE	T2,ERRNC1	;%+ NOT ENOUGH CORE TO CREATE FNB
   352	000231'	542747	000000*		HRRM	P4,FNBDRB(T2)	;%+ ALSO NEED DRB POINTER
   353	000232'	603540	000221*		TLNE	M,UUOMLK
   354	000233'	254000	000274'		  JRST	CREMFB		;%+ NEED MULTIPLE FNB BLOCKS
   355	000234'	542447	000220*		HRRM	T4,FNBEXT(T2)	;%+ SAVE EXT
   356	000235'	200700	000007	FNDFNB:	MOVE	P3,T2		;%+ GET POINTER WHERE IT BELONGS
   357	000236'	607540	000000*		TLNN	M,UUOLUK	;%+ IS IT LOOKUP?
   358	000237'	254000	000542'		  JRST	SRCENT		;%+ NO, DO ENTER CODE
   359	000240'	205300	000000*		MOVSI	T1,FNPNX
   360	000241'	612316	000000*		TDNE	T1,FNBNX(P3)	;%+ IS THE FNB FOR NX FILE?
   361	000242'	254000	000351'		  JRST	ERRFNM		;%+ YES
   362	000243'	201300	000000*		MOVEI	T1,ATPDEL!ATPSUP
   363	000244'	201400	000000*		MOVEI	T3,ATPCRE!ATPREN ;%+ IGNORE DEL SUP, STOP ON CRE OR REN
   364	000245'	260040	001216'		PUSHJ	P,SRCAT		;%+ LOOK FOR ACCESS TABLE
   365	000246'	254000	000351'		  JRST	ERRFNM		;%+ ONE OF THE PROHIBITED AT ENTRIES
   366	000247'	254000	000644'		  JRST	ERRNC1		;%+ NO ROOM
   367	000250'	350015	000000*		AOS	ATBCNT(P2)	;%+ SET READ COUNT UP
   368	000251'	332015	000000*		SKIPE	ATBDOR(P2)	;%+ IF IT IS DORMANT
   369	000252'	260040	001302'		  PUSHJ	P,ULDATB	;%+ REMOVE FROM DORMANT LIST
   370	000253'	607540	000232*		TLNN	M,UUOMLK
   371	000254'	254000	000261'		  JRST	SRCLU1		;%+ NORMAL
   372	000255'	542711	000001		HRRM	P3,1(T4)	;%+ SAVE P2 AND P3 IN CORE BLOCK
   373	000256'	506651	000001		HRLM	P2,1(T4)
   374	000257'	554444	000016		HLRZ	T4,DEVEXT(F)	;%+ RELOAD
   375	000260'	370011	000000		SOS	(T4)		;%+ AND MARK ONE MORE FOUND
   376	000261'	332015	000000*	SRCLU1:	SKIPE	ATBRIB(P2)	;%+ DO WE KNOW WHERE THE RIB IS
   377	000262'	324740	000632'		  PJRST	SRCLK1		;%+ YES, DONE, GIVE UP CB AND SKIP
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 9-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   378	000263'	332316	000000*		SKIPE	T1,FNBRIB(P3)	;%+ RIB KNOW IN FNB?
   379	000264'	254000	000563'		  JRST	FILRB2		;%+ YES, MUST READ RIB TO SET AT
   380	000265'	607540	000253*		TLNN	M,UUOMLK
   381	000266'	254000	000421'		  JRST	SRCLU2
   382	000267'	550311	000000		HRRZ	T1,(T4)		;%+ SEE IF ANY WITH NO FNB
   383	000270'	322300	000421'		JUMPE	T1,SRCLU2
   384	000271'	200340	000016		MOVE	T2,P3		;%+ YES, CONTINUE SEARCH
   385	000272'	200304	000015		MOVE	T1,DEVFIL(F)
   386	000273'	254000	000225'		JRST	SRCFN0
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 10
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   387	000274'	500451	000000	CREMFB:	HLL	T4,(T4)		;%+ NEED TO CREATE ANOTHER, GET COUNT
   388	000275'	204611	000001	CREMF0:	MOVS	P1,1(T4)
   389	000276'	603600	777777		TLNE	P1,-1		;%+ RH (NO LH) 0 IF NO FNB YET
   390					  JRST	[AOBJN T4,CREMF0 ;%+ MORE
   391	000277'	254000	002343'		 STOPCD (SLO)]	;%+ ERROR IF OUT ;;CREFM0+5
   392	000300'	542607	000234*		HRRM	P1,FNBEXT(T2)	;%+ SAVE EXTENSION
   393	000301'	254000	000235'		JRST	FNDFNB		;%+ AND GO
   394
   395	000302'	500451	000000	SRCMFB:	HLL	T4,(T4)		;%+ GET COOUNT TO SEARCH EXT
   396	000303'	204611	000001	SRCMF0:	MOVS	P1,1(T4)
   397	000304'	607600	777777		TLNN	P1,-1
   398	000305'	302414	000000		  CAIE	T3,(P1)
   399	000306'	334000	000000		 SKIPA			;%+ ALREADY FNB OR NO MATCH
   400	000307'	254000	000235'		  JRST	FNDFNB		;%+ FOUND IT
   401	000310'	253440	000303'		AOBJN	T4,SRCMF0
   402	000311'	554444	000016		HLRZ	T4,DEVEXT(F)	;%+ RELOAD
   403	000312'	254000	000225'		JRST	SRCFN0		;%+ NONE MATCH, CONTINUE SEARCH
   404
   405	000313'	554444	000016	SRCDLM:	HLRZ	T4,DEVEXT(F)	;%+! NEED TO CHECK ALL FNB'S
   406	000314'	500451	000000	SRCDL0:	HLL	T4,(T4)
   407	000315'	200351	000001	SRCDM1:	MOVE	T2,1(T4)	;%+! GET ATB FNB PNTR
   408	000316'	612307	000241*		TDNE	T1,FNBNX(T2)	;%+! NOW NX?
   409	000317'	254000	000327'		  JRST	SRCDMD		;%+! YES, REMOVE
   410	000320'	332007	000263*		SKIPE	FNBRIB(T2)
   411	000321'	254000	000324'		  JRST	SRCDMC		;%+! FOUND ONE
   412	000322'	253440	000315'		AOBJN	T4,SRCDM1
   413	000323'	254000	000435'		JRST	SRCDMR		;%+! JUST CONTINUE
   414
   415	000324'	550700	000007	SRCDMC:	HRRZ	P3,T2
   416	000325'	554640	000007		HLRZ	P2,T2		;%+! JUST LOAD POINTERS
   417	000326'	254000	000502'		JRST	SRCCFP		;%!+ AND GO
   418
   419	000327'	550700	000007	SRCDMD:	HRRZ	P3,T2
   420	000330'	554640	000007		HLRZ	P2,T2		;%+! LOAD POINTERS
   421	000331'	554304	000016		HLRZ	T1,DEVEXT(F)
   422	000332'	564346	000000		HLRO	T2,(T1)		;%!+ GET SET TO REMOVE
   423	000333'	213000	000007		MOVNS	T2
   424	000334'	270340	000006		ADD	T2,T1
   425	000335'	200407	000000		MOVE	T3,(T2)
   426	000336'	202411	000001		MOVEM	T3,1(T4)	;%+! REPLACE CURRENT WITH END
   427	000337'	205340	000001		MOVSI	T2,1
   428	000340'	272346	000000		ADDM	T2,(T1)		;%+! AND REDUCE COUNT
   429	000341'	370315	000250*		SOS	T1,ATBCNT(P2)	;%+! DEC COUNT ON DELETED ONE
   430	000342'	616300	002345'		TDNN	T1,[ATMUMC,,ATPMXU!ATMCNT!ATPCRE!ATPSUP!ATPUPD!ATPREN]
   431	000343'	260040	001252'		  PUSHJ	P,FREATB	;%+! MAY FREE IT
   432	000344'	554444	000016		HLRZ	T4,DEVEXT(F)
   433	000345'	331011	000000		SKIPL	(T4)
   434	000346'	254000	000707'		  JRST	ERRFNF		;%+! RAN OUT, NO FILE
   435	000347'	205300	000240*		MOVSI	T1,FNPNX
   436	000350'	254000	000314'		JRST	SRCDL0		;%+! CONTINUE THE SEARCH
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 11
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   437
   438	000351'	607540	000265*	ERRFNM:	TLNN	M,UUOMLK	;%+ IF NOT MULTIPLE LOOKUP, NO FILE
   439	000352'	254000	000707'		  JRST	ERRFNF
   440	000353'	554304	000016		HLRZ	T1,DEVEXT(F)
   441	000354'	564346	000000		HLRO	T2,(T1)
   442	000355'	213000	000007		MOVNS	T2
   443	000356'	270340	000006		ADD	T2,T1
   444	000357'	200407	000000		MOVE	T3,(T2)
   445	000360'	202411	000001		MOVEM	T3,1(T4)	;%+ REPLACE CURENT WITH LAST
   446	000361'	205340	000001		MOVSI	T2,1
   447	000362'	273346	000000		ADDB	T2,(T1)
   448	000363'	325340	000707'		JUMPGE	T2,ERRFNF	;%+ ALL OUT, FORGET IT
   449	000364'	370346	000000		SOS	T2,(T1)		;%+ DECREMNT UNFOUND COUNT
   450	000365'	606340	777777		TRNN	T2,-1
   451	000366'	254000	000421'		  JRST	SRCLU2		;%+ ALL FOUND, GO
   452	000367'	200440	000006		MOVE	T4,T1
   453	000370'	200340	000016		MOVE	T2,P3
   454	000371'	200304	000015		MOVE	T1,DEVFIL(F)
   455	000372'	254000	000225'		JRST	SRCFN0		;%+ GO ON
   456
   457	000373'	627540	000351*	MULCLN:	TLZN	M,UUOMLK	;% (AND POSSIBLY MORE)
   458	000374'	263040	000000		  POPJ	P,		;% NOTHING EXCEPT FOR MULTIPLE
   459	000375'	554444	000016		HLRZ	T4,DEVEXT(F)	;% POINTER TO EXTENSION LIST
   460	000376'	500451	000000		HLL	T4,(T4)		;% REMOVE ALL ATBS
   461	000377'	325440	000000*		JUMPGE	T4,CPOPJ	;% IN CASE ALL GONE ALREADY
   462	000400'	261040	000016		PUSH	P,P3
   463	000401'	506641	000000		HRLM	P2,(P)		;% SAVE FNB AND ATB PNTRS
   464	000402'	200311	000001	SRCLL0:	MOVE	T1,1(T4)
   465	000403'	602300	777777		TRNE	T1,-1		;% NOTHING THERE
   466	000404'	306706	000000		CAIN	P3,(T1)		;% OR SAME AS CURRENT
   467					  JRST	[HRRZ  T1,FNBEXT(P3)	;SET EXTENSION FROM THIS
   468						 HRLM  T1,DEVEXT(F)
   469	000405'	254000	002346'			 JRST  SRCLL1]
   470	000406'	550700	000006		HRRZ	P3,T1
   471	000407'	554640	000006		HLRZ	P2,T1
   472	000410'	370315	000341*		SOS	T1,ATBCNT(P2)
   473	000411'	616300	002351'		TDNN	T1,[ATMUMC,,ATPMXU!ATMCNT!ATPCRE!ATPSUP!ATPUPD!ATPREN]
   474	000412'	260040	001252'		  PUSHJ	P,FREATB	;% GET RID OF ATB
   475	000413'	550701	000000		HRRZ	P3,(P)		;% FOR ABOVE CHECK
   476	000414'	253440	000402'	SRCLL1:	AOBJN	T4,SRCLL0
   477	000415'	262040	000016		POP	P,P3
   478	000416'	554640	000016		HLRZ	P2,P3
   479	000417'	543000	000016		HRRS	P3			;% JUST IN CASE
   480	000420'	263040	000000		POPJ	P,
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 12
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   481				;%+ NOW SEARCH THE UFD FOR THIS FILE
   482
   483	000421'	200317	000155*	SRCLU2:	MOVE	T1,DRBRIB(P4)	;%+ GET POINTER TO UFD RIB
   484	000422'	260040	001357'		PUSHJ	P,GIVCBR
   485	000423'	260040	000103*		PUSHJ	P,DIRFST	;+ NOW GET FIRST DIRECTORY BLOCK
   486	000424'	254000	000473'		  JRST	SRCDEF
   487	000425'	260040	001342'	SRCDLP:	PUSHJ	P,GETCBR
   488	000426'	205300	000347*		MOVSI	T1,FNPNX
   489	000427'	603540	000373*		TLNE	M,UUOMLK
   490	000430'	254000	000313'		  JRST	SRCDLM
   491	000431'	612316	000316*		TDNE	T1,FNBNX(P3)	;%+! IS FILE NOW KNOWN NX?
   492	000432'	254000	000443'		  JRST	SRCFNX		;%+! YES
   493	000433'	332016	000320*		SKIPE	FNBRIB(P3)	;%+! OR DO WE NOW KNOW RIB LOC?
   494	000434'	254000	000502'		  JRST	SRCCFP		;%+! YES
   495	000435'	260040	001357'	SRCDMR:	PUSHJ	P,GIVCBR	;%+! GIVE UP CB BEFORE FAULT ON PAGE
   496	000436'	260040	000717'		PUSHJ	P,DIRSRC	;+! LOOK FOR THE FILE NAME
   497	000437'	254000	000531'		  JRST	SRCDFD		;+! FOUND
   498	000440'	260040	000116*		PUSHJ	P,DIRNXT	;+! CONTINUE TO NEXT LINKED BLOCK
   499	000441'	254000	000473'		  JRST	SRCDEF		;+ EOF (BLOCK UNLOCKED)
   500	000442'	254000	000425'		JRST	SRCDLP		;+ TRY NEXT BLOCK
   501
   502	000443'	260040	000715'	SRCFNX:	PUSHJ	P,RELLOK	;%+! KNOWN NX, DON'T NEED DIR
   503	000444'	621000	000200*		TLZ	S,IOSRBE	;%+! FORGET ABOUT ANY ERROS SO FAR
   504	000445'	370315	000410*	SRCFN1:	SOS	T1,ATBCNT(P2)	;%+ NOT GOING TO WANT ATB ANY MORE
   505	000446'	607540	000236*		TLNN	M,UUOLUK	;%+ LOOKUP DIFFERENT THAN ENTER-RENAME
   506	000447'	254000	000453'		  JRST	SRCNX0		;%+ HANDLE ENTER AND RENAME
   507	000450'	616300	002352'		TDNN	T1,[ATMUMC,,ATPMXU!ATMCNT!ATPCRE!ATPSUP!ATPUPD!ATPREN]
   508								;%+ ANY ONE ELSE USING THIS
   509	000451'	260040	001252'		  PUSHJ	P,FREATB	;%+ NO, RETURN TO FREE STORAGE
   510	000452'	254000	000707'		JRST	ERRFNF		;%+ AND SAY NOT FOUND
   511
   512	000453'	201300	000000*	SRCNX0:	MOVEI	T1,ATPUPD	;%+ MUST RESET UPD ON ENTER-RENAME
   513	000454'	412315	000000*		ANDCAM	T1,ATBSTS(P2)
   514	000455'	603000	000444*	SRCENX:	TLNE	S,IOSRBE
   515	000456'	254000	000663'		  JRST	ERRTR1		;%+ SAY BAD TRANSFER
   516	000457'	200300	002353'		MOVE	T1,[ATMUMC,,ATPMXU!ATMCNT!ATPCRE!ATPSUP!ATPUPD!ATPREN]
   517	000460'	616315	000445*		TDNN	T1,ATBCNT(P2)	;%+ ANYONE ELSE USING IT?
   518	000461'	254000	000466'		  JRST	SRCNX1		;%+ NO, CAN USE THIS ATB
   519	000462'	260040	001367'		PUSHJ	P,GETCOR	;%+ YES, MAKE A NEW ATB
   520	000463'	323340	000644'		JUMPLE	T2,ERRNC1	;%+ IF THERE IS ROOM
   521	000464'	200640	000007		MOVE	P2,T2
   522	000465'	260040	001243'		PUSHJ	P,LNKATB	;%+ LINK IT IN
   523	000466'	201300	000000*	SRCNX1:	MOVEI	T1,ATPCRE	;%+ SET TO CRE
   524	000467'	603540	000000*		TLNE	M,UUOREN
   525	000470'	201300	000000*		  MOVEI	T1,ATPREN	;%+ OR RENAME
   526	000471'	436315	000454*		IORM	T1,ATBSTS(P2)
   527	000472'	254000	000633'		JRST	SRCFNI		;%+ SET DEVATB AND DRB
   528
   529	000473'	260040	001342'	SRCDEF:	PUSHJ	P,GETCBR	;+ COME HERE ON EOF FOR UFD
   530	000474'	332016	000433*		SKIPE	FNBRIB(P3)	;%+ HAS SOMEONE ELSE FOUND IT
   531	000475'	254000	000503'		  JRST	SRCCF1		;%+ YES, FINISH UP
   532	000476'	205300	000426*		MOVSI	T1,FNPNX
   533	000477'	607000	000455*		TLNN	S,IOSRBE	;%+ MAY HAVE JUST BEN ERROR. NOT NX
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 12-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   534	000500'	436316	000431*		  IORM	T1,FNBNX(P3)	;%+ NO MARK NX
   535	000501'	254000	000445'		JRST	SRCFN1		;%+ AND TREAT AS IF WE FOUND NX SET
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 13
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   536	000502'	260040	000715'	SRCCFP:	PUSHJ	P,RELLOK	;%+! HERE IF SOMEONE ELSE FOUND IT
   537	000503'	603540	000446*	SRCCF1:	TLNE	M,UUOLUK
   538	000504'	254000	000261'		  JRST	SRCLU1		;%+ FINISH LOOKUP
   539	000505'	603540	000467*	SRCSUP:	TLNE	M,UUOREN
   540	000506'	254000	000673'		  JRST	ERRFB1		;%+ RENAME NOT PERMITTED, GIVE ERR
   541	000507'	336015	000261*		SKIPN	ATBRIB(P2)	;%+ DO WE ALREADY HAVE RIB DATA?
   542	000510'	254000	000562'		  JRST	FILRB1		;%+ NO, NEED PROTECTION ETC.
   543	000511'	201300	000453*	SRCSP0:	MOVEI	T1,ATPUPD	;%+ HAVE RIB, RESET
   544	000512'	412315	000471*		ANDCAM	T1,ATBSTS(P2)
   545	000513'	370315	000460*		SOS	T1,ATBCNT(P2)	;%+ ANYONE ELSE STILL USING IT?
   546	000514'	616300	002354'		TDNN	T1,[ATMUMC,,ATPMXU!ATMCNT!ATPCRE!ATPSUP!ATPUPD!ATPREN]
   547	000515'	254000	000526'		  JRST	SRCSP1		;%+ NO, WE CAN USE IT
   548	000516'	260040	001367'		PUSHJ	P,GETCOR	;%+ MUST GEN A NEW ONE
   549	000517'	323340	000644'		JUMPLE	T2,ERRNC1
   550	000520'	200315	000000*		MOVE	T1,ATBPVW(P2)
   551	000521'	202307	000520*		MOVEM	T1,ATBPVW(T2)	;%+ KEEP OLD PROTECTION
   552	000522'	200315	000000*		MOVE	T1,ATBLCW(P2)	;%+ IN CASE WE WANT TO PRESERVE LIC
   553	000523'	202307	000522*		MOVEM	T1,ATBLCW(T2)
   554	000524'	200640	000007		MOVE	P2,T2
   555	000525'	260040	001243'		PUSHJ	P,LNKATB
   556	000526'	201300	000000*	SRCSP1:	MOVEI	T1,ATPSUP
   557	000527'	436315	000512*		IORM	T1,ATBSTS(P2)
   558	000530'	254000	000633'		JRST	SRCFNI
   559
   560	000531'	260040	001342'	SRCDFD:	PUSHJ	P,GETCBR	;+! FOUND FILE IN DIR
   561	000532'	332016	000474*		SKIPE	FNBRIB(P3)
   562	000533'	254000	000502'		  JRST	SRCCFP		;%+! SOMEONE ELSE DID TOO
   563	000534'	200307	376000*		MOVE	T1,%RIB+UFDRIB(T2)
   564	000535'	202316	000532*		MOVEM	T1,FNBRIB(P3)
   565	000536'	200304	000000*		MOVE	T1,DEVREL(F)	;%+! GET POSITION FOUND IN
   566	000537'	137300	000000*		DPB	T1,FNYUFP	;%+! AND SAVE PAGE NUMBER IN UFD
   567	000540'	260040	000000*		PUSHJ	P,UFDATB	;%+! FILL IN ATB FROM UFD ENTRY
   568								;%+!  IN CASE THERE IS A RIB ERROR, WILL KNOW WHETHER OR NOT OK
   569				 TO DELETE.
   570								;%+! (UNFORTUNATELY WE WILL LOSE RIPNDL IN RIB ERROR)
   571	000541'	254000	000502'		JRST	SRCCFP		;%+! GO AFTER SETTING RIB PTR
   572
   573	000542'	201300	000000*	SRCENT:	MOVEI	T1,ATPDEL
   574	000543'	201400	000000*		MOVEI	T3,ATPMXU!ATPCRE!ATPSUP!ATPUPD!ATPREN
   575	000544'	260040	001216'		PUSHJ	P,SRCAT		;%+ ANY UPDATE ETC ILL FOR REN OR ENT
   576	000545'	254000	000700'		  JRST	ERRFBM		;%+ FOUND PROHIBITED ATB
   577	000546'	254000	000644'		  JRST	ERRNC1		;%+ NO ROOM FOR ATB
   578	000547'	332015	000251*		SKIPE	ATBDOR(P2)
   579	000550'	260040	001302'		  PUSHJ	P,ULDATB	;MAKE UN-DORMANT
   580	000551'	205300	000476*		MOVSI	T1,FNPNX
   581	000552'	612316	000500*		TDNE	T1,FNBNX(P3)	;%+ IS FILE KNOWN NX
   582	000553'	254000	000455'		  JRST	SRCENX		;%+ YES, THIS IS A CREATE
   583	000554'	350015	000513*		AOS	ATBCNT(P2)
   584	000555'	201300	000511*		MOVEI	T1,ATPUPD
   585	000556'	436315	000527*		IORM	T1,ATBSTS(P2)	;%+ SET COUNT AND UPD AND GO
   586	000557'	332016	000535*		SKIPE	FNBRIB(P3)	;%+ IF RIB POSITION KNOWN
   587	000560'	254000	000505'		  JRST	SRCSUP		;%+ ITS A SUPERCEDE
   588	000561'	254000	000421'		JRST	SRCLU2
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 14
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   589				;%+ HERE WHEN WE NEED TO READ IN THE RIB FOR THIS FILE
   590
   591	000562'	200316	000557*	FILRB1:	MOVE	T1,FNBRIB(P3)
   592	000563'	202304	000145*	FILRB2:	MOVEM	T1,DEVRIB(F)	;STORE IT (MULCLN MAY DESTRY)
   593	000564'	260040	000373'		PUSHJ	P,MULCLN	;GETS DEVEXT SET RIGHT
   594	000565'	260040	001357'		PUSHJ	P,GIVCBR	;%+ TO GET READY FOR A MAP OP
   595	000566'	201140	000000*		MOVEI	PG,%RIB.C
   596	000567'	200304	000563*		MOVE	T1,DEVRIB(F)	;+ RESTORE RIB PNTR
   597	000570'	260040	000146*		PUSHJ	P,MAPRDL
   598	000571'	260040	000147*		PUSHJ	P,PRMCHK
   599					  JRST	[TLNN M,UUOIRE	;+! SOMETHING WRONG WITH RIB.
   600						JRST  ERRTRN	;+! GIVE RIB ERROR RETURN IF NOT IGNORING
   601						PUSHJ P,GETCBR	;+! NEED CB SO NO ONE WILL FILL IT IN BEHIND OUR BACKS
   602	000572'	254000	002355'			JRST  FILRBD]	;+! GO WITH INFO FROM UFD COLLECTED EARLIER, CALLER KNOWS
   603								;+! WHAT HE'S DOING WE HOPE.
   604	000573'	260040	001342'		PUSHJ	P,GETCBR
   605	000574'	332015	000507*		SKIPE	ATBRIB(P2)	;%+! DID SOMEONE BEAT US TO IT
   606	000575'	254000	000627'		  JRST	FILRBD
   607	000576'	200300	376000*		MOVE	T1,%RIB+RIBSLF	;%+! NOW MOVE THE STUFF TO ATB
   608	000577'	202315	000574*		MOVEM	T1,ATBRIB(P2)
   609	000600'	200300	376000*		MOVE	T1,%RIB+RIBPVW
   610	000601'	202315	000521*		MOVEM	T1,ATBPVW(P2)
   611	000602'	200300	376000*		MOVE	T1,%RIB+RIBLCW
   612	000603'	202315	000523*		MOVEM	T1,ATBLCW(P2)
   613	000604'	200300	376000*		MOVE	T1,%RIB+RIBPID
   614	000605'	202315	000000*		MOVEM	T1,ATBPID(P2)
   615	000606'	200300	376000*		MOVE	T1,%RIB+RIBMSC
   616	000607'	506315	000000*		HRLM	T1,ATBMSC(P2)
   617	000610'	200300	376000*		MOVE	T1,%RIB+RIBALP
   618	000611'	202315	000000*		MOVEM	T1,ATBALP(P2)
   619	000612'	200300	376000*		MOVE	T1,%RIB+RIBALT	;GET DIRTY TIMER
   620	000613'	202316	000000*		MOVEM	T1,FNBALT(P3)	;SETUP IN FNB.
   621	000614'	200300	376000*		MOVE	T1,%RIB+RIBSIZ
   622	000615'	602300	000177		TRNE	T1,177
   623	000616'	271300	000200		  ADDI	T1,200		;%+! INC BLOCK COUNT IF EXTRA WDS IN LAST BLOCK
   624	000617'	202315	000000*		MOVEM	T1,ATBSIZ(P2)
   625	000620'	201300	000000		MOVEI	T1,0
   626	000621'	200340	376000*		MOVE	T2,%RIB+RIBSTS	;%+! GET STATUS WORD
   627	000622'	602340	000000*		TRNE	T2,RIPDIR
   628	000623'	660300	000000*		  TRO	T1,ATPDIR
   629	000624'	602340	000000*		TRNE	T2,RIPNDL
   630	000625'	660300	000000*		  TRO	T1,ATPNDL	;%+! AND SET A COUPLE OF STATUS BITS
   631	000626'	436315	000556*		IORM	T1,ATBSTS(P2)
   632	000627'	607540	000503*	FILRBD:	TLNN	M,UUOLUK	;%+! IS THIS A LOOKUP?
   633					  JRST	[PUSHJ P,RELLOK	;%+! ENTER, RELEASE BLOCK
   634	000630'	254000	002361'			JRST   SRCSP0]	;%+ AND GO
   635	000631'	661000	000000*		TLO	S,IOSRIB	;%+! HAVE RIB
   636	000632'	260040	000373'	SRCLK1:	PUSHJ	P,MULCLN	;%+! GET RID OF EXTRA ATBS
   637	000633'	542644	000000*	SRCFNI:	HRRM	P2,DEVATB(F)	;%+! (OR %+ IF IOSRIB=0)
   638	000634'	506744	000000*		HRLM	P4,DEVDRB(F)
   639	000635'	603540	000505*		TLNE	M,UUOREN
   640	000636'	324740	001356'		  PJRST	GIVCB1		;DON'T FIDDLE IF RENAME
   641	000637'	550316	000000*		HRRZ	T1,FNBDBL(P3)
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 14-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   642	000640'	542216	000637*		HRRM	F,FNBDBL(P3)
   643	000641'	302304	000000	        CAIE	T1,(F)		;PREVENT LINK FROM POINTING TO ITSELF
   644	000642'	542304	000000*		  HRRM	T1,DEVDBL(F)	;%+! SET DDB LINK (FOR INSERT AND DELETE)
   645	000643'	324740	001356'		PJRST	GIVCB1
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 15
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   646				;ERROR ROUTINES FOR SRCFIL
   647
   648	000644'	260040	000373'	ERRNC1:	PUSHJ	P,MULCLN	;%+ REMOVE EXTRA ATBS IF ANY
   649	000645'	370317	000126*		SOS	T1,DRBCNT(P4)	;%+ NOT ENOUGH CORE
   650	000646'	602300	000061*		TRNE	T1,DRPMXC	;% UNDERFLOW?
   651	000647'	256000	002363'	FILDMU:: STOPCD (.,DISK,FILDMU,,<DRB Max count underflow>)
   652				    ;;ERRNC1+3
   653	000650'	201300	000010	ERRNEC:	MOVEI	T1,NECERR	;% F still points to DDB
   654	000651'	324740	001357'		PJRST	GIVCBR
   655
   656	000652'	201300	000001	ERRIPP:	MOVEI	T1,IPPERR	;% CAN NOT FIND UFD
   657	000653'	324740	001357'		PJRST	GIVCBR
   658
   659	000654'	260040	001342'	ERRTRN:	PUSHJ	P,GETCBR	;
   660	000655'	260040	000373'		PUSHJ	P,MULCLN
   661	000656'	260040	000715'		PUSHJ	P,RELLOK	;%+! (ACTUALLY RIB ERROR)
   662	000657'	201300	000555*		MOVEI	T1,ATPUPD	;%+ UPD SET IF ENTER OR RENAME
   663	000660'	607540	000627*		TLNN	M,UUOLUK
   664	000661'	412315	000626*		 ANDCAM	T1,ATBSTS(P2)	;%+ SO RESET
   665	000662'	374315	000554*		SOSA	T1,ATBCNT(P2)
   666	000663'	200315	000662*	ERRTR1:	MOVE	T1,ATBCNT(P2)	;%+ SOME RIB OR UFD ERROR
   667	000664'	616300	002366'		TDNN	T1,[ATMUMC,,ATPMXU!ATMCNT!ATPCRE!ATPSUP!ATPUPD!ATPREN]
   668								;%+ STILL HAVE USERS?
   669	000665'	260040	001252'		  PUSHJ	P,FREATB	;%+ NO, RETURN TO FREE CORE
   670	000666'	370317	000645*		SOS	T1,DRBCNT(P4)	;%+
   671	000667'	602300	000646*		TRNE	T1,DRPMXC
   672	000670'	256000	000647'		 STOPCD (,XCT,FILDMU)
   673					;% UNDEFLOW     ;;ERRTR1+5
   674	000671'	201300	000006		MOVEI	T1,TRNERR	;% FINALLY THE ERROR
   675	000672'	324740	001357'		PJRST	GIVCBR
   676
   677	000673'	201300	000657*	ERRFB1:	MOVEI	T1,ATPUPD	;%+ FILE IN USE ON RENAME
   678	000674'	412315	000661*		ANDCAM	T1,ATBSTS(P2)
   679	000675'	370315	000663*		SOS	T1,ATBCNT(P2)
   680	000676'	616300	002367'		TDNN	T1,[ATMUMC,,ATPMXU!ATMCNT!ATPCRE!ATPSUP!ATPUPD!ATPREN]
   681	000677'	260040	001252'		  PUSHJ	P,FREATB	;%+ RETURN ATB IF NO OTHER USERS
   682	000700'	370317	000666*	ERRFBM:	SOS	T1,DRBCNT(P4)	;%+ FBM ON ENTER OR RENAME
   683	000701'	602300	000667*		TRNE	T1,DRPMXC
   684	000702'	256000	000647'		 STOPCD (,XCT,FILDMU)
   685					;% UNDEFLOW     ;;ERRFBM+2
   686	000703'	201300	000003		MOVEI	T1,FBMERR
   687	000704'	603540	000635*		TLNE	M,UUOREN
   688	000705'	201300	000004		  MOVEI	T1,AEFERR	;% DIFFERENT FOR ENTER
   689	000706'	324740	001357'		PJRST	GIVCBR
   690
   691	000707'	260040	000373'	ERRFNF:	PUSHJ	P,MULCLN
   692	000710'	370317	000700*		SOS	T1,DRBCNT(P4)	;%+ CAN NOT FIND FILE
   693	000711'	602300	000701*		TRNE	T1,DRPMXC	;% UNDERFLOW?
   694	000712'	256000	000647'		 STOPCD (,XCT,FILDMU)
   695				   ;;ERRFNF+3
   696	000713'	201300	000000		MOVEI	T1,FNFERR	;% FINALLY THE ERROR
   697	000714'	324740	001357'		PJRST	GIVCBR
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 16
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   698				;THIS ROUTINE RELEASES A LOCKED BLOCK (%RIB)
   699
   700	000715'	201140	000566*	RELLOK:	MOVEI PG,%RIB.C
   701	000716'	324740	000000*		PJRST MAPRLS
   702
   703				;SEARCH A DIRECTORY BLOCK IN %RIB. USE DEVNAM AND DEVEXT
   704				; TO DECIDE WHAT TO LOOK FORR
   705
   706				; NON-SKIP RETURN IF FOUND. T2 POINTS TO UFD ENTRY
   707				;SKIP RETURN - NOT FOUND
   708
   709	000717'	205340	000000*	DIRSRC:	MOVSI T2,-<^D512/UFDSIZ>	;NUMBER OF ENTRIES
   710	000720'	200304	000015		MOVE T1,DEVFIL(F)
   711	000721'	500404	000016		HLL T3,DEVEXT(F)
   712	000722'	316307	376000*	DIRSR1:	CAMN T1,%RIB+UFDNAM(T2)
   713	000723'	254000	000731'		JRST DIRSC1
   714	000724'	271340	777777*	DIRSR2:	ADDI T2,UFDSIZ-1
   715	000725'	253340	000722'		AOBJN T2,DIRSR1
   716	000726'	260040	000000*		PUSHJ P,GETER1
   717	000727'	326300	000736'		JUMPN T1,DIRSCE		;SOME ERROR THERE
   718	000730'	254000	000031*		JRST CPOPJ1		;NOT FOUND
   719
   720	000731'	540407	376000*	DIRSC1:	HRR T3,%RIB+UFDEXT(T2)
   721	000732'	312407	376000*		CAME T3,%RIB+UFDEXT(T2)
   722	000733'	254000	000724'		JRST DIRSR2	;NOT THIS ONE
   723	000734'	260040	000726*	DIRSC5:	PUSHJ P,GETER1	;LOAD THE ERROR BITS
   724	000735'	322300	000377*		JUMPE T1,CPOPJ	;FOUND NO ERROR
   725	000736'	661000	000477*	DIRSCE:	TLO S,IOSRBE	;SET ERROR BIT
   726	000737'	254000	000730*		JRST CPOPJ1	;AND GO
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 17
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   727				COMMENT ;@@SUBROUTINE DRRSRC
   728				@@PURPOSE SEARCH UFD PAGE FOR A FILE'S
   729				PRIME RIB POINTER.
   730				@@ENTRY ATB ADDRESS IN P2, UFD PAGE IN %RIB.
   731				@@ACCUM T1-T4.
   732				@@EXIT SKIP RETURN WITH INDEX INTO %RIB IN T2
   733				FOR UFD ENTRY IF FOUND, ELSE NON-SKIP RETURN.
   734				@@;
   735
   736	000740'	205340	000000*	DRRSRC::MOVSI	T2,<-^D512/UFDSIZ> ;NUMBER TO SEARCH
   737	000741'	260040	000734*		PUSHJ	P,GETER1	;ERRORS?
   738	000742'	326300	000735*		JUMPN	T1,CPOPJ	;JUMP IF YES.
   739	000743'	336315	000577*		SKIPN	T1,ATBRIB(P2)	;HAS FILE'S RIB DISAPPEARED?
   740	000744'	263040	000000		POPJ	P,		;YES, GO HOME.
   741
   742	000745'	336007	376000*	DRRSR1:	SKIPN	%RIB+UFDNAM(T2)	;THIS THE END?
   743	000746'	263040	000000		POPJ	P,		;YES NOT FOUND
   744	000747'	316307	376000*		CAMN	T1,%RIB+UFDRIB(T2) ;CORRECT POINTER?
   745	000750'	254000	000737*		JRST	CPOPJ1		;YES, GIVE INDEX BACK IN T2
   746	000751'	271340	777777*		ADDI	T2,UFDSIZ-1	;ADD ALL BUT ONE AND
   747	000752'	253340	000745'		AOBJN	T2,DRRSR1	;AOBJN AROUND.
   748	000753'	263040	000000		POPJ	P,		;OUT OF ENTRIES, ITS NOT THERE.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 18
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   749				;REMOVE A NAME FROM THE DIRECTORY
   750
   751				INTERNAL DLTNAM
   752
   753			011471	UFDLST==<1000/UFDSIZ-1>*UFDSIZ
   754
   755	000754'	661000	000020	DLTNAM:	TLO S,IO
   756	000755'	260040	000000*		PUSHJ P,RIBDIR	;GET DIRECTORY RIB
   757	000756'	254000	000715'		 JRST RELLOK	;ERROR, CAN NOT GET IT
   758	000757'	135300	000537*		LDB T1,FNYUFP
   759	000760'	260040	000000*		PUSHJ P,DIRBLK
   760	000761'	263040	000000		 POPJ P,	;ALSO FAILED TO GET IT
   761	000762'	621540	000427*		TLZ M,UUOMLK	;MAKE SURE
   762	000763'	260040	000717'		PUSHJ P,DIRSRC
   763	000764'	334000	000000		 SKIPA
   764	000765'	254000	000715'		JRST RELLOK	;NOT THERE
   765	000766'	553000	000007		HRRZS T2
   766	000767'	306340	000000*		CAIN T2,UFDLST	;JUST IN CASE LAST NAME
   767	000770'	254000	000774'		JRST DLTNM1
   768	000771'	505307	376000*		HRLI T1,%RIB+UFDSIZ(T2)
   769	000772'	541307	376000		HRRI T1,%RIB(T2)
   770	000773'	251300	000000*		BLT T1,%RIB+UFDLST-1
   771	000774'	402000	000000*	DLTNM1:	SETZM %RIB+UFDLST
   772	000775'	200300	002370'		MOVE T1,[%RIB+UFDLST,,%RIB+UFDLST+1]
   773	000776'	251300	000000*		BLT T1,%RIB+UFDLST+UFDSIZ-1
   774	000777'	324740	000715'		PJRST RELLOK	;FINISHED ZEROING, RELEASE BLOCK
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 19
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   775				;NOW INSERT A NAME IN THE DIRECTORY.   NAME IN DDB POINTED TO BY F.
   776				;EXPECTS T2/ 0 OR RET PNTR SUPPLIED BY CALLER IN CASE WE HAVE TO
   777				;EXTEND THE DIRECTORY.
   778				;SKIP RETURNS ON SUCCESS, WITH T2/ POINTER TO THE EMPTY ENTRY
   779				;WE FOUND.
   780				;NON-SKIP RETURNS ON FAILURE, WITH T1/ FALAQA IF WE RAN OUT
   781				;OF ROOM, ELSE T1/ 0.
   782
   783	001000'	322340	001004'	INSNAM::JUMPE	T2,INSNM0	;CHECK THE FORM OF
   784	001001'	607340	000000*		TLNN	T2,RBMASK-RBREAL ;THE RETRIEVAL
   785	001002'	607340	000000*		TLNN	T2,RBREAL	;PNTR.
   786	001003'	256000	000000'		 STOPCD (SLO)
   787				           ;;INSNAM+3
   788	001004'	261040	000007	INSNM0:	PUSH	P,T2		;SAVE RET PNTR.
   789	001005'	661000	000020		TLO	S,IO		;MAKE SURE WE WRITE LOCK
   790	001006'	200317	000421*		MOVE	T1,DRBRIB(P4)
   791	001007'	260040	000423*		PUSHJ	P,DIRFST
   792	001010'	254000	001026'		  JRST	INSNML		;MIGHT BE A NX BLOCK HERE
   793	001011'	260040	001016'	INSNLP:	PUSHJ	P,FNDFRE
   794	001012'	254000	001051'		  JRST	INSNM1		;HERE WE HAVE A SPOT TO PUT IT
   795	001013'	260040	000440*		PUSHJ	P,DIRNXT
   796	001014'	254000	001026'		  JRST	INSNML		;TRY AGAIN TO INSERT A BLOCK
   797	001015'	254000	001011'		JRST	INSNLP		;KEEP LOOKING FOR A FREE SPOT
   798
   799				    ;TINY SUBR TO SEE IF THERE IS AN EMPTY ENTRY IN THIS PAGE OF
   800				    ;THE DIRECTORY.
   801
   802	001016'	332000	000000*	FNDFRE:	SKIPE	%RIB+UFDLST	;ANY FREE ENTRIES IN PAGE
   803	001017'	254000	000750*		 JRST	CPOPJ1		;NONE FREE IF LAST NOT FREE
   804	001020'	205340	000000*		MOVSI	T2,-1000/UFDSIZ	;YES, AT LEAST ONE
   805	001021'	336007	376000	FNDFR1:	SKIPN	%RIB(T2)
   806	001022'	263040	000000		 POPJ	P,		;FOUND THE FIRST EMPTY ONE
   807	001023'	271340	777777*		ADDI	T2,UFDSIZ-1
   808	001024'	253340	001021'		AOBJN	T2,FNDFR1
   809	001025'	256000	000000'		 STOPCD (SLO)
   810						;THERE WAS ONE FREE (@FNDFRE+2) ;;FNDFR1+4
   811
   812	001026'	200317	001006*	INSNML:	MOVE	T1,DRBRIB(P4)	;NEED TO ADD A BLOCK
   813	001027'	201140	000000*		MOVEI	PG,%RB2.C
   814	001030'	260040	000000*		PUSHJ	P,MAPWTL
   815	001031'	260040	000000*		PUSHJ	P,MAPXCH	;FOR CHECKING
   816	001032'	260040	000000*		PUSHJ	P,RIBCKD
   817					  JRST	[PUSHJ  P,MAPXCH
   818	001033'	254000	002371'			PJRST   INSFER]	;REL RB2, DISK PAGE, FAIL EXIT.
   819	001034'	260040	001031*		PUSHJ	P,MAPXCH
   820	001035'	661000	000631*		TLO	S,IOSRIB	;NEED TO SEARCH AGAIN WITH RIB LCCKED
   821	001036'	200317	001026*		MOVE	T1,DRBRIB(P4)
   822	001037'	260040	001007*		PUSHJ	P,DIRFST
   823	001040'	254000	001062'		  JRST	INSFAK		;THIS MUST BE A NX PNTR
   824	001041'	260040	001016'	INSNL2:	PUSHJ	P,FNDFRE	;THERE MAY NOW BE FREE SPACE
   825	001042'	254000	001046'		  JRST	INSGOT		;YES, OR NEW BLOCK OR SOMETHING
   826	001043'	260040	001013*		PUSHJ	P,DIRNXT
   827	001044'	254000	001111'		  JRST	INSLNK		;INSERT A NEW LINK
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 19-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   828	001045'	254000	001041'		JRST	INSNL2		;KEEP LOOKING
   829
   830	001046'	261040	000007	INSGOT:	PUSH	P,T2		;SAVE DIRECTORY SLOT FOUND THIS TIME
   831	001047'	260040	000000*		PUSHJ	P,RELRB2	;RELEASE %RB2.
   832	001050'	262040	000007		POP	P,T2
   833
   834	001051'	200304	000000*	INSNM1:	MOVE	T1,DEVBLK(F)
   835	001052'	137300	000757*		DPB	T1,FNYUFP	;REMEMBER WHERE IT IS IN UFD
   836	001053'	250341	000000		EXCH	T2,(P)		;SAVE FOUND SLOT, GET DISK PAGE.
   837	001054'	322340	001060'		JUMPE	T2,INSNM4	;IF HAVE A DISK PAGE,
   838	001055'	261040	000003		PUSH	P,PG		; WE HAVE
   839	001056'	261040	000000*		PUSH	P,GIVPAG	; TO GIVE IT
   840	001057'	262040	000003		POP	P,PG		; BACK.
   841	001060'	262040	000007	INSNM4:	POP	P,T2		;RESTORE PNTR TO SLOT FOUND.
   842	001061'	254000	001017*		JRST	CPOPJ1
   843
   844	001062'	603000	000736*	INSFAK:	TLNE	S,IOSRBE	;WAS THERE REALLY AN ERROR?
   845	001063'	254000	001163'		 JRST	INSFER		;YES.
   846	001064'	262040	000007	INSFK2:	POP	P,T2		;
   847	001065'	326340	001074'		JUMPN	T2,INSFK4	;
   848	001066'	661000	000000*		TLO	S,IOSALC	;NO, NEED TO ADD A NEW BLOCK
   849	001067'	201300	000000*		MOVEI	T1,FBIT##
   850	001070'	550404	000633*		HRRZ	T3,DEVATB(F)	;T3/ ATB ADDR OR ZERO.
   851	001071'	260040	000000*		PUSHJ	P,GETAPG
   852	001072'	254000	001177'		  JRST	INSFQ2		;
   853	001073'	621000	001066*		TLZ	S,IOSALC
   854	001074'	200304	001051*	INSFK4:	MOVE	T1,DEVBLK(F)
   855	001075'	137300	001052*		DPB	T1,FNYUFP
   856	001076'	202346	375000*		MOVEM	T2,%RB2+RIBPFS(T1)	;DEVBLK IS POINTER
   857	001077'	200300	000007		MOVE	T1,T2
   858	001100'	201140	000715*		MOVEI	PG,%RIB.C
   859	001101'	260040	000000*		PUSHJ	P,MAPWLN	;A NEW BLOCK
   860	001102'	350000	375000*		AOS	%RB2+RIBALP	;COUNT A NEW DIRECTORY PAGE
   861	001103'	402000	376000		SETZM	%RIB
   862	001104'	200300	002373'		MOVE	T1,[%RIB,,%RIB+1]
   863	001105'	251300	376777		BLT	T1,%RIB+777
   864	001106'	260040	001047*		PUSHJ	P,RELRB2	;RELEASE %RB2.
   865	001107'	201340	000000		MOVEI	T2,0
   866	001110'	254000	001061*		JRST	CPOPJ1		;HAVE IT ALL DONE
   867
   868				    ;HERE ON A HOLE, EOF, OR RIB ERROR FOR THE DIRECTORY.
   869	001111'	603000	001062*	INSLNK:	TLNE	S,IOSRBE
   870	001112'	254000	001163'		  JRST	INSFER		;ERROR.
   871	001113'	607000	001035*		TLNN	S,IOSRIB
   872	001114'	254000	001064'		  JRST	INSFK2		;REALLY A NX PNTR
   873	001115'	332341	000000		SKIPE	T2,(P)		;MAKE SURE WE HAVE A DISK
   874	001116'	254000	001124'		  JRST	INSL00		;PAGE BEFORE WE GO TO THE
   875	001117'	201300	001067*		MOVEI	T1,FBIT		;TROUBLE OF
   876	001120'	550404	001070*		HRRZ	T3,DEVATB(F)	;UPDATING THE
   877	001121'	260040	001071*		PUSHJ	P,GETAPG	;COUNTS.
   878	001122'	254000	001164'		JRST	INSFQO		;
   879	001123'	202341	000000		MOVEM	T2,(P)		;
   880	001124'	205300	000000*	INSL00:	MOVSI	T1,RIBPFS-RIBLST-1
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 19-3
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   881	001125'	336006	375000*	INSLK0:	SKIPN	%RB2+RIBPFS(T1)	;LOOK FOR A PLACE TO PUT ONE
   882	001126'	254000	001131'		  JRST	INSEOF
   883	001127'	253300	001125'		AOBJN	T1,INSLK0
   884	001130'	254000	001163'		JRST	INSFER		;DIRECTORY FULL.
   885
   886	001131'	552304	001074*	INSEOF:	HRRZM	T1,DEVBLK(F)	;STORE AS POINTER
   887	001132'	552300	376000*		HRRZM	T1,%RIB+UFDLNK
   888	001133'	137300	001075*		DPB	T1,FNYUFP	;SLOT ALSO
   889	001134'	260040	000000*		PUSHJ	P,RELRIB	;RELEASE %RIB.
   890	001135'	201300	001000		MOVEI	T1,1000
   891	001136'	272300	375000*		ADDM	T1,%RB2+RIBSIZ
   892	001137'	260040	001342'		PUSHJ	P,GETCBR	;MAY BE BEING READ AS A FILE
   893	001140'	554340	000047*		HLRZ	T2,SYSDRB
   894	001141'	211400	000001		MOVNI	T3,1
   895	001142'	200300	000205*		MOVE	T1,MFDPPN
   896	001143'	260040	001202'		PUSHJ	P,SRCNAM
   897	001144'	254000	001161'		  JRST	INSNAT
   898	001145'	554347	000214*		HLRZ	T2,DRBFNB(T2)
   899	001146'	200304	000017		MOVE	T1,DEVPPN(F)
   900	001147'	260040	001202'		PUSHJ	P,SRCNAM
   901	001150'	254000	001161'		  JRST	INSNAT
   902	001151'	554347	000000*		HLRZ	T2,FNBATB(T2)
   903	001152'	200307	000674*	INSXAT:	MOVE	T1,ATBSTS(T2)
   904	001153'	602300	000000*		TRNE	T1,ATPREN!ATPCRE!ATPUPD!ATPSUP!ATPDEL
   905	001154'	254000	001157'		  JRST	INSIAT		;IGNORE THIS
   906	001155'	201300	001000		MOVEI	T1,1000
   907	001156'	272307	000617*		ADDM	T1,ATBSIZ(T2)
   908	001157'	554347	000000*	INSIAT:	HLRZ	T2,ATBLNK(T2)
   909	001160'	326340	001152'		JUMPN	T2,INSXAT
   910	001161'	260040	001357'	INSNAT:	PUSHJ	P,GIVCBR
   911	001162'	254000	001064'		JRST	INSFK2		;NOW TREAT LIKE OTHER
   912
   913				    ;ERROR EXITS.
   914	001163'	634340	000007	INSFER:	TDZA	T2,T2		;HERE ON RIB ERROR.
   915	001164'	201340	000000*	INSFQO:	  MOVEI	T2,FALAQA	;HERE ON ALLOCATION ERROR.
   916	001165'	250341	000000		EXCH	T2,(P)		;SAVE ERR CODE, GET RET PNTR.
   917	001166'	261040	000007		PUSH	P,T2		;SAVE RET PNTR.
   918	001167'	260040	001106*		PUSHJ	P,RELRB2	;RELEASE RIB FIRST, TO SPEED
   919	001170'	262040	000007		POP	P,T2		;UP SYSTEM. GET RET PNTR AGAIN.
   920	001171'	322340	001175'		JUMPE	T2,INSFR4	;GIVE BACK THE DISK PAGE, IF
   921	001172'	261040	000003		PUSH	P,PG		;WE
   922	001173'	260040	001056*		PUSHJ	P,GIVPAG	;HAVE
   923	001174'	262040	000003		POP	P,PG		;IT.
   924	001175'	262040	000006	INSFR4:	POP	P,T1		;RESTORE T1/ ERROR CODE.
   925	001176'	263040	000000		POPJ	P,
   926
   927	001177'	260040	001167*	INSFQ2:	PUSHJ	P,RELRB2	;
   928	001200'	201300	001164*		MOVEI	T1,FALAQA	;
   929	001201'	263040	000000		POPJ	P,		;
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 20
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   930				;TWO ROUTINES TO SEARCH CORE TABLES
   931
   932				;SRCNAM SEARCHES FOR FNB AND DRB BLOCKS
   933				;	ALWAYS CALL WITH CB RESOURCE
   934				;	T1 NAME TO SEARCH FOR
   935				;	T2 CURRENT POINTER (POSSIBLY 0)
   936				;	T3 PRVIOUS POINTER
   937				;	T3 LH NEG IF DO NOT CREATE NEW TABLE
   938				;
   939				;	WILL CONSTRUCT A NEW ENTRY AND LINK TO END OF LIST IF NOT FOUND
   940
   941				; NON-SKIP RETURN IF NOT FOUND T2<=0 IF NO CORE FOR NEW TABLE
   942				;	T2>0 POINTS TO NEW TABLE
   943				; SKIP RETURN, FOUND, T2 HAS POINTER
   944
   945	001202'	322340	001210'	SRCNAM:	JUMPE T2,SRCNMC	;NEED A NEW ONE
   946	001203'	316307	000000*	SRCNM1:	CAMN T1,CMBNAM(T2)
   947	001204'	254000	001110*		JRST CPOPJ1	;FOUND
   948	001205'	540400	000007	SRCNM0:	HRR T3,T2	;CONTINUE BY PUSHJ TO HERE
   949	001206'	554347	000000*		HLRZ T2,CMBLNK(T2)	;NEXT
   950	001207'	326340	001203'		JUMPN T2,SRCNM1	;THERE IS ONE
   951	001210'	321400	000742*	SRCNMC:	JUMPL T3,CPOPJ	;DO NOT CREATE NEW TABLE
   952	001211'	260040	001370'		PUSHJ P,GETCRL	;GET SPACE FOR IT (DON'T GC T3)
   953	001212'	263040	000000		 POPJ P,	;NO ROOM, T2=0
   954	001213'	202307	001203*		MOVEM T1,CMBNAM(T2)	;STORE NAME
   955	001214'	506350	001206*		HRLM T2,CMBLNK(T3)	;LINK TO END OF CHAIN
   956	001215'	263040	000000		POPJ P,
   957
   958				;SRCAT SEARCHES FOR ACCESS TABLES
   959				;	ALWAYS CALL WITH CB RESOURCE
   960				;	P3 HAS POINTER TO FNB
   961				;	T1 HAS BITS TO BE CHECKED IN ATBSTS, IF ON IGNORE AT
   962				;	T3 HAS BITS TO BE CHECK IN ATBSTS, IF ON, ERROR
   963				;
   964				; NON-SKIP RETURN IF ANY ERROR BITS ON
   965				; SKINGLE SKIP RETURN IF NO CORE TO CREATE NEW AT
   966				; DOUBLE SKIP RETURN IF ALL OK, P2 HAS ATB POINTER
   967
   968	001216'	554356	001151*	SRCAT:	HLRZ T2,FNBATB(P3)
   969	001217'	322340	001230'		JUMPE T2,SRCATC	;NONE THERE, NEED A NEW ONE
   970	001220'	201640	000000		MOVEI P2,0	;NONE FOUND YET
   971	001221'	612407	001152*	SRCAT0:	TDNE T3,ATBSTS(T2)	;ANY PROHIBITED BITS?
   972	001222'	263040	000000		POPJ P,		;YES
   973	001223'	616307	001221*		TDNN T1,ATBSTS(T2)	;IGNORE THIS ONE?
   974	001224'	200640	000007		MOVE P2,T2	;NO, SAVE IT
   975	001225'	554347	001157*		HLRZ T2,ATBLNK(T2)	;NEXT
   976	001226'	326340	001221'		JUMPN T2,SRCAT0	;CONTINUE IF MORE
   977	001227'	326640	000000*		JUMPN P2,CPOPJ2		;DID WE FIND ONE, YES GOOD
   978	001230'	205300	000000*	SRCATC:	MOVSI T1,FNPLOK
   979	001231'	436316	000000*		IORM T1,FNBLOK(P3)	;LOCK FNB SO NO GARBAGE COLLECT
   980	001232'	260040	001367'		PUSHJ P,GETCOR
   981	001233'	255000	000000		 JFCL	;IGNORE ERROR (T2 WILL BE 0)
   982	001234'	205300	001230*		MOVSI T1,FNPLOK
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 20-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   983	001235'	412316	001231*		ANDCAM T1,FNBLOK(P3)	;UNLOCK
   984	001236'	336640	000007		SKIPN P2,T2
   985	001237'	254000	001204*		JRST CPOPJ1	;ERROR
   986	001240'	350001	000000		AOS (P)
   987	001241'	350001	000000		AOS (P)
   988	001242'	254000	001243'		JRST LNKATB	;LINK INTO RING
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 21
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

   989				;ROUTINES TO DO LINKING AND UNLINKING
   990
   991				;LNKATB LINKS AN ACCESS ATBLE TO THE FNB RING
   992				;	P3 POINTER TO FNB
   993				;	P2 POINTER TO ATB
   994
   995				;WILL SET FNBATB,ATBLNK,ATBFNB
   996				;	SHOULD BE CALLED WITH CB RESOURCE
   997
   998	001243'	542715	000000*	LNKATB:	HRRM	P3,ATBFNB(P2)
   999	001244'	510316	001216*		HLLZ	T1,FNBATB(P3)	;GET OLD LINK
  1000	001245'	502315	001225*		HLLM	T1,ATBLNK(P2)	;POINT NEW ONE TO IT
  1001	001246'	506656	001244*		HRLM	P2,FNBATB(P3)	;AND POINT FNB TO NEW ONE
  1002	001247'	263040	000000		POPJ	P,
  1003
  1004				;RMVATB RETURNS AN ATB TO FREE CORE
  1005				;IF THE ATB IS DORMANT, IT UNLINKS IT FROM THE DORMANT LIST
  1006				;	P2 POINTER TO ATB
  1007				;	P3 POINTER TO FNB
  1008
  1009				;SHOULD BE CALLED WITH CB RESOURCE
  1010
  1011	001250'	332015	000547*	RMVATB:	SKIPE	ATBDOR(P2)
  1012	001251'	260040	001302'		  PUSHJ	P,ULDATB		;UNLIK ATB FROM DORMANT LIST
  1013
  1014				;FREATB IS LIKE RMVATB BUT ATB IS KNOWN NOT TO BE DORMANT
  1015
  1016	001252'	201316	000000*	FREATB:	MOVEI	T1,FNBATB-ATBLNK(P3)	;SET PRED.
  1017	001253'	554346	001245*	FREAT1:	HLRZ	T2,ATBLNK(T1)
  1018	001254'	336000	000007		SKIPN	T2		;SHOULD NOT REACH END OF LIST
  1019	001255'	256000	002374'		 STOPCD (.,DISK,FILANF,,<ATB not found in list>)
  1020				      ;;FREAT1+2
  1021	001256'	312340	000015		CAME	T2,P2
  1022	001257'	334300	000007		 SKIPA	T1,T2		;NOT SAME, GET PRED=THIS
  1023	001260'	334347	001253*		 SKIPA	T2,ATBLNK(T2)	;SAME, GET LINK
  1024	001261'	254000	001253'		  JRST	FREAT1		;NO SAME, CONTINUE SEARCH
  1025	001262'	502346	001260*		HLLM	T2,ATBLNK(T1)	;LINK AROUND THIS ONE
  1026	001263'	200300	000000*		MOVE	T1,SYSCOR
  1027	001264'	502315	001214*		HLLM	T1,CMBLNK(P2)	;LINK TO FREE CORE LIST
  1028	001265'	516640	001263*		HRLZM	P2,SYSCOR
  1029	001266'	263040	000000		POPJ	P,
  1030
  1031				;ROUTINE TO REMOVE DDB FROM FNBDBL LINK
  1032
  1033				INTERNAL ULKDBL
  1034
  1035	001267'	201356	000000*	ULKDBL:	MOVEI	T2,FNBDBL-DEVDBL(P3)	;FOR A START
  1036	001270'	550307	000642*	ULKDB0:	HRRZ	T1,DEVDBL(T2)
  1037	001271'	306304	000000		CAIN	T1,(F)		;HAVE WE FOUND THIS ONE YET?
  1038	001272'	254000	001276'		  JRST	ULKDB1		;YES
  1039	001273'	336340	000006		SKIPN	T2,T1		;NO, BETTER NOT BE AT END
  1040	001274'	256000	002377'		 STOPCD (.,DISK,FILBNF,,<DDB Not found in FNB device block list>);;ULKDB0+4
  1041	001275'	254000	001270'		JRST	ULKDB0
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 21-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1042
  1043	001276'	550304	001270*	ULKDB1:	HRRZ	T1,DEVDBL(F)	;ONE WE POINT TO
  1044	001277'	542307	001276*		HRRM	T1,DEVDBL(T2)	;LINK AROUND THIS DDB
  1045	001300'	513004	001277*		HLLZS	DEVDBL(F)		;JUST TO MAKE SURE
  1046	001301'	263040	000000		POPJ	P,
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 22
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1047				;ULDATB REMOVES AN ATB FROM THE DORMANT LIST.. SEE COMMOD
  1048				;FOR A DESCRIPTION OF THE DORMANT LIST.
  1049				;	P2=POINTER TO ATB
  1050
  1051				;SHOULD BE CALLED WITH THE CB RESOURCE
  1052
  1053	001302'	200315	001250*	ULDATB:	MOVE	T1,ATBDOR(P2)
  1054	001303'	502306	001302*		HLLM	T1,ATBDOR(T1)	;RESET FORWARD POINTER OF PREVIOUS
  1055	001304'	306300	000000*		CAIN	T1,SYSDOR-ATBDOR
  1056	001305'	254000	001311'		  JRST	ULDAT1		;THIS IS THE ONLY DORMAT AT IF SO
  1057	001306'	207000	000006		MOVSS	T1		;NO RH IS NEXT IN CHAIN
  1058	001307'	606300	777777		TRNN	T1,-1		;MIGHT BE LAST
  1059	001310'	541300	000000*		  HRRI	T1,SYSDOR-ATBDOR ;IF SO, POINT BACK TO START
  1060	001311'	546306	001303*	ULDAT1:	HLRM	T1,ATBDOR(T1)	;RESET PREVIOS PNTR OF NEXT
  1061	001312'	402015	001311*		SETZM	ATBDOR(P2)	;NOT DORMANT ANY MORE
  1062	001313'	263040	000000		POPJ	P,
  1063
  1064				;LKDATB PUTS AN ATB ON THE DORMANT LIST
  1065				;	P2=POINTER TO ATB
  1066
  1067				;SHOULD BE CALLED WITH CB RESOURCE
  1068
  1069	001314'	332015	001312*	LKDATB:	SKIPE	ATBDOR(P2)	;MUST NOT ALREADY BE DORMANT
  1070	001315'	256000	000000'		 STOPCD (SLO)
  1071				           ;;LKDATB+1
  1072	001316'	554300	000000*		HLRZ	T1,SYSDOR
  1073	001317'	506640	001316*		HRLM	P2,SYSDOR	;PUT ON END OF LIST
  1074	001320'	505300	000000*		HRLI	T1,SYSDOR-ATBDOR
  1075	001321'	206315	001314*		MOVSM	T1,ATBDOR(P2)	;SET BACK LINK TO OLD LAST
  1076	001322'	606300	777777		TRNN	T1,-1
  1077	001323'	207000	000006		  MOVSS	T1		;THIS WILL HAPPEN ONLY IF NO PREVIOUS ENTRIES
  1078	001324'	542646	001321*		HRRM	P2,ATBDOR(T1)	;STORE AS FORWARD LINK FOR OLD LAST ENTRY
  1079	001325'	263040	000000		POPJ	P,
  1080
  1081				;HERE WITH CB TO FIND A DRB IF IT EXISTS
  1082				;T1 HAS PPN
  1083
  1084	001326'	554340	001140*	FNDDRB:	HLRZ	T2,SYSDRB
  1085	001327'	211400	000001		MOVNI	T3,1		;DO NOT CREATE
  1086	001330'	324740	001202'		PJRST	SRCNAM		;THAT WAS EASY
  1087
  1088				;ROUTINE TO TEST TO SEE IF THERE IS SOMEONE WRITING THIS FILE
  1089				;T3 HAS ATBSTS IN IT
  1090				; ENTER AT TSTWRS TO CHECK FOR NON-SIMULTANEOUS WRITERS.
  1091
  1092	001331'	334400	002402'	TSTWRS::SKIPA	T3,[ATPUPD!ATPCRE!ATPSUP!ATPREN]
  1093	001332'	201400	000000*	TSTWRT:	  MOVEI	T3,ATPMXU!ATPUPD!ATPCRE!ATPSUP!ATPREN
  1094	001333'	550355	001243*		HRRZ	T2,ATBFNB(P2)
  1095	001334'	554347	001246*		HLRZ	T2,FNBATB(T2)
  1096	001335'	612407	001223*	TSTWRL:	TDNE	T3,ATBSTS(T2)
  1097	001336'	263040	000000		  POPJ	P,
  1098	001337'	554347	001262*		HLRZ	T2,ATBLNK(T2)
  1099	001340'	326340	001335'		JUMPN	T2,TSTWRL
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 22-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1100	001341'	254000	001237*		JRST	CPOPJ1
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 23
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1101
  1102	001342'	261040	000006	GETCBR:	PUSH	P,T1
  1103	001343'	200300	000203*		MOVE	T1,JOB
  1104	001344'	316300	000000*		CAMN	T1,CBUSER	;MAKE SURE WE DO NOT ALREADY HAVE IT
  1105	001345'	256000	000000'		 STOPCD (SLO)
  1106						;YES WE DO      ;;GETCBR+3
  1107	001346'	352000	000000*		AOSE	CBREQ
  1108	001347'	260040	000000*		  PUSHJ	P,CBWAIT
  1109	001350'	402000	000000*		SETZM	CBSWT
  1110	001351'	202300	001344*		MOVEM	T1,CBUSER
  1111	001352'	550301	777777		HRRZ	T1,-1(P)
  1112	001353'	504300	000004		HRL	T1,F
  1113	001354'	202300	000000*		MOVEM	T1,CBADR
  1114	001355'	324740	000000*		PJRST	TPOPJ
  1115
  1116	001356'	350001	000000	GIVCB1:	AOS	(P)		;SKIP RETURN
  1117	001357'	261040	000006	GIVCBR:	PUSH	P,T1		;HE MUST BE THE ONE WHO HAS IT
  1118	001360'	200300	001343*		MOVE	T1,JOB
  1119	001361'	312300	001351*		CAME	T1,CBUSER
  1120	001362'	256000	000000'		 STOPCD (SLO)
  1121				           ;;GIVCBR+3
  1122	001363'	371000	001346*		SOSL	CBREQ
  1123	001364'	476000	000000*		SETOM	CBAVAL
  1124	001365'	402000	001361*		SETZM	CBUSER
  1125	001366'	324740	001355*		PJRST	TPOPJ
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 24
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1126				;% SUBROUTINE TO GET FREE CORE BLOCK
  1127				; NON-SKIP RETURN, NONE AVAILABLE T2=0
  1128				; SKIP RETURN, BLOCK FOUND T2 IS POINTER
  1129				;% JOB MUST HAVE CB RESOURCE WHEN ROUTINE IS CALLED
  1130				;% T1 RESPECTED
  1131				;%GETCOR ZEROS T3, GETCRL T3 IS SOMETHING TO NOT GARBAGE COLLECT
  1132				;% EITHER A DRB OR AN FNB
  1133	001367'	201400	000000	GETCOR:	MOVEI	T3,0		;NOTHING TO SAVE
  1134	001370'	261040	000006	GETCRL:	PUSH	P,T1		;SAVE FOR A WORK REGISTER
  1135	001371'	554340	001265*	GTCOR0:	HLRZ	T2,SYSCOR	;% 1ST FREE BLOCK ON LIST
  1136	001372'	326340	001505'		JUMPN	T2,GTCOR2	;% THERE IS FREE CORE IF NON-0
  1137	001373'	550340	001317*		HRRZ	T2,SYSDOR
  1138	001374'	322340	001406'		JUMPE	T2,CORGR4	;NO DORMANT ATB'S
  1139	001375'	261040	000015		PUSH	P,P2
  1140	001376'	261040	000016		PUSH	P,P3
  1141	001377'	550640	000007		HRRZ	P2,T2
  1142	001400'	550715	001333*		HRRZ	P3,ATBFNB(P2)	;NEED TO GET IT OUT OF FNB LIST ALSO
  1143	001401'	260040	001250'		PUSHJ	P,RMVATB
  1144	001402'	262040	000016		POP	P,P3
  1145	001403'	262040	000015		POP	P,P2
  1146	001404'	254000	001371'		JRST	GTCOR0
  1147	001405'	254000	001507'		JRST	GTCOR3		;JUST GET THE BLOCK ZEROED OUT
  1148
  1149	001406'	261040	000016	CORGR4:	PUSH	P,P3		;ANOTHER REGISTER TO WORK IN
  1150	001407'	550700	001326*		HRRZ	P3,SYSDRB	;THE ONE TO SEARCH
  1151	001410'	336000	000016		SKIPN	P3		;MAY BE NONE, SO...
  1152	001411'	554700	001407*		  HLRZ	P3,SYSDRB	;THE FIRST TIME THROUGH, USE FIRST IN SYSTEM
  1153	001412'	322700	001450'		JUMPE	P3,CORGR9	;THERE IS NO FREE CORE
  1154	001413'	542700	001411*		HRRM	P3,SYSDRB	;SAVE IT HERE IN CASE IT WAS 0
  1155	001414'	554356	001145*	CORGR5:	HLRZ	T2,DRBFNB(P3)	;DOES DRB HAVE ANY FNB'S
  1156	001415'	326340	001453'		JUMPN	T2,CORGR6	;YES, SEE ABOUT ONE OF THEM
  1157	001416'	201300	000000*		MOVEI	T1,DRMCNT
  1158	001417'	312700	000010		CAME	P3,T3		;DON'T TAKE SPECIAL ONE
  1159	001420'	612316	000710*		  TDNE	T1,DRBCNT(P3)
  1160	001421'	254000	001442'		  JRST	CORG5A		;THIS DRB IS IN USE, FORGET IT
  1161	001422'	201300	000000*		MOVEI	T1,DRPLOG!DRPLOK
  1162	001423'	612316	000000*		TDNE	T1,DRBSTS(P3)
  1163	001424'	254000	001442'		  JRST	CORG5A		;ALSO FORGET THAT ONE
  1164	001425'	201300	000000*		MOVEI	T1,SYSDRB-DRBLNK ;NOW NEED TO RECLAIM THIS DRB
  1165	001426'	554346	000035*	CORG5B:	HLRZ	T2,DRBLNK(T1)
  1166	001427'	316340	000016		CAMN	T2,P3		;FIND THE ONE WE CURRENTLY POINT TO
  1167	001430'	254000	001434'		  JRST	CORG5C		;FOUND IT
  1168	001431'	336300	000007		SKIPN	T1,T2		;NOT THIS ONE, SET PREDECESSOR
  1169	001432'	256000	000000'		 STOPCD (SLO)
  1170						;END AND NOT FOUND, SOMETHING IS WRONG;;CORGB5+4
  1171	001433'	254000	001426'		JRST	CORG5B	;CONTINUE
  1172
  1173	001434'	200340	000016	CORG5C:	MOVE	T2,P3	;THIS IS THE ONE TO GRAB
  1174	001435'	500716	001426*		HLL	P3,DRBLNK(P3)	;THIS IS THE NEXT ONE
  1175	001436'	502706	001435*		HLLM	P3,DRBLNK(T1)	;RELINK
  1176	001437'	546700	001413*	CORG5D:	HLRM	P3,SYSDRB	;LOOK HERE NEXT TIME
  1177	001440'	262040	000016		POP	P,P3
  1178	001441'	254000	001507'		JRST	GTCOR3	;GO ZERO BLOCK
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 25
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1179	001442'	554716	001436*	CORG5A:	HLRZ P3,DRBLNK(P3)	;NEED TO LOOK AT NEXT DRB
  1180	001443'	336000	000016		SKIPN P3	;AT END?
  1181	001444'	554700	001437*		HLRZ P3,SYSDRB	;START OVER (MAY HAVE STARTED IN MIDDLE)
  1182	001445'	550340	001444*		HRRZ T2,SYSDRB	;THIS WAS WHERE WE STARTED
  1183	001446'	312340	000016		CAME T2,P3
  1184	001447'	254000	001414'		JRST CORGR5	;MORE TO LOOK AT
  1185	001450'	262040	000016	CORGR9:	POP P,P3
  1186	001451'	201340	000000		MOVEI T2,0
  1187	001452'	254000	001366*		JRST TPOPJ	;NONE FOUND, GIVE ERROR RETURN
  1188
  1189				;HERE TO LOOK AT FNBS ON A DRB
  1190
  1191	001453'	505716	000000*	CORGR6:	HRLI P3,DRBFNB-FNBLNK(P3)	;REMEMBER PRED.. FNB
  1192	001454'	261040	000011		PUSH P,T4	;ANOTHER REGISTER TO WORK IN
  1193	001455'	201440	000000		MOVEI T4,0	;THIS IS THE FIRST FNB FOUND WITH NO ATBS BUT WITHOUT NX
  1194	001456'	554307	001334*	CORG6B:	HLRZ T1,FNBATB(T2)
  1195	001457'	326300	001477'		JUMPN T1,CORG6A	;CAN NOT TAKE ONE WITH ATBS
  1196	001460'	205300	001234*		MOVSI T1,FNPLOK
  1197	001461'	312340	000010		CAME T2,T3	;NOT SPECIAL ONE
  1198	001462'	612307	001235*		TDNE T1,FNBLOK(T2)	;CAN NOT TAKE IT IF LOCKED
  1199	001463'	254000	001477'		JRST CORG6A
  1200	001464'	205300	000551*		MOVSI T1,FNPNX
  1201	001465'	616307	000552*		TDNN T1,FNBNX(T2)	;JUST NX
  1202	001466'	254000	001475'		JRST CORG6C	;NO, WILL TAKE IF HAVE TO, BUT RATHER FIND AN NX
  1203	001467'	554440	000016		HLRZ T4,P3	;GET PRED
  1204	001470'	554307	000000*	CORG6D:	HLRZ T1,FNBLNK(T2)
  1205	001471'	506311	001470*		HRLM T1,FNBLNK(T4)	;LINK AROUND THIS ONE
  1206	001472'	262040	000011		POP P,T4
  1207	001473'	500716	001442*		HLL P3,DRBLNK(P3)	;GET READY TO SET TO LOOK AT NEXT
  1208	001474'	254000	001437'		JRST CORG5D
  1209
  1210	001475'	336000	000011	CORG6C:	SKIPN T4	;HAVE WE ALREADY FOUND FNB NOT NX?
  1211	001476'	544440	000016		HLR T4,P3	;NO, SAVE THE PRED TO THE ONE TO GRAB
  1212	001477'	504700	000007	CORG6A:	HRL P3,T2	;SAVE THIS AS PRED
  1213	001500'	554347	001471*		HLRZ T2,FNBLNK(T2)	;NEXT FNB
  1214	001501'	326340	001456'		JUMPN T2,CORG6B	;NOT OUT YET
  1215					JUMPN T4,[HLRZ T2,FNBLNK(T4)	;GET THE ONE NO NX BUT GRABABLE
  1216	001502'	326440	002403'			JRST CORG6D]	;AND GO GRAB IT
  1217	001503'	262040	000011		POP P,T4
  1218	001504'	254000	001442'		JRST CORG5A	;MUST GO TO NEXT DRB
  1219
  1220	001505'	200307	001264*	GTCOR2:	MOVE T1,CMBLNK(T2)	;FOUND ONE IN CORE LIST, UNLINK
  1221	001506'	502300	001371*		HLLM T1,SYSCOR
  1222	001507'	402007	000000	GTCOR3:	SETZM (T2)	;ZERO OUT NEWLY FOUND BLOCK
  1223	001510'	504300	000007		HRL T1,T2
  1224	001511'	541307	000001		HRRI T1,1(T2)
  1225	001512'	251307	777777*		BLT T1,CMBSIZ-1(T2)
  1226	001513'	254000	000000*		JRST TPOPJ1	;TAKE GOOD RETURN
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 26
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1227
  1228				;SUBROUTINE TO CHECK ACCESS PRIVILIGES
  1229				;ENTER WITH T1=DESIRED FUNCTION
  1230				; F=DDB ADDRESS
  1231				; P2=ATB ADDRESS
  1232				;EXIT CPOPJ IF PRIVS DON'T1 ALLOW OPERATION
  1233				;EXIT CPOPJ1 IF OK, T1=FUNCTION
  1234
  1235	001514'	261040	000002	CHKPRV:	PUSH	P,J			;CHECK, MAY NOT HAVE STORED HIGHEST
  1236	001515'	135100	000000*		LDB	J,PJOBN
  1237	001516'	554404	000016		HLRZ	T3,DEVEXT(F)
  1238	001517'	302400	654644		CAIE	T3,'UFD'		;IS IT UFD??
  1239	001520'	254000	001540'		  JRST	CKNUFD			;NO
  1240	001521'	200404	000017		MOVE	T3,DEVPPN(F)
  1241	001522'	312400	001142*		CAME	T3,MFDPPN
  1242	001523'	254000	001540'		  JRST	CKNUFD
  1243	001524'	661540	000000*		TLO	M,UUOUFD		;MARK AS A UFD
  1244	001525'	135440	000000*		LDB	T4,ATYPRV
  1245	001526'	434440	002405'		IOR	T4,[XWD 400000,700]	;SET ALL FOR OWN AND MARK UFD
  1246	001527'	200344	000015		MOVE	T2,DEVFIL(F)		;UFD NAME
  1247	001530'	260040	001604'		PUSHJ	P,CHKPRJ		;CHECK FOR LICENSED JOB
  1248	001531'	254000	001556'		  JRST	CPOPK1			;IS SPECIAL
  1249	001532'	260040	001720'		PUSHJ	P,GETPTR		;NOT SPECIAL
  1250	001533'	135340	000010		LDB	T2,T3
  1251	001534'	307300	000000*		CAIG	T1,FNCLOK		;WANT TO DO MORE THAN READ??
  1252	001535'	606340	000000*		  TRNN	T2,UFRXRD		;CAN WE READ
  1253	001536'	254000	001557'		 JRST	CPOPK			;NO TO ONE. CHG PROT CAUGHT IN CHKPRJ
  1254	001537'	254000	001556'		JRST	CPOPK1
  1255
  1256	001540'	200344	000017	CKNUFD:	MOVE	T2,DEVPPN(F)		;USE FILE PPN NOT NAME FOR CHECK
  1257	001541'	135440	001525*		LDB	T4,ATYPRV
  1258	001542'	640440	000700		TRC	T4,700			;IF OWNER FIELD IS 7
  1259	001543'	646440	000700		TRCN	T4,700
  1260	001544'	620440	000100		TRZ	T4,100			;MAKE IT 6
  1261	001545'	260040	001604'		PUSHJ	P,CHKPRJ
  1262	001546'	254000	001556'		  JRST	CPOPK1
  1263	001547'	260040	001720'		PUSHJ 	P,GETPTR
  1264	001550'	135440	000167*		LDB	T4,DRYPRV
  1265	001551'	435440	000700		IORI	T4,700			;CAN ALWAYS USE OWN
  1266	001552'	135340	000010		LDB	T2,T3			;GET IT
  1267	001553'	302300	000000*		CAIE	T1,FNCCRE		;CREATE IS SPECIAL
  1268	001554'	254000	001561'		  JRST	CKNCRE
  1269	001555'	602340	000000*		TRNE	T2,UFRXCR
  1270	001556'	350001	777777	CPOPK1:	  AOS	-1(P)			;GOOD RETURN
  1271	001557'	262040	000002	CPOPK:	POP	P,J
  1272	001560'	263040	000000		POPJ	P,			;ALL DONE
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 27
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1273
  1274	001561'	606340	000000*	CKNCRE:	TRNN	T2,UFRXLK		;IS UFD TRANSPARENT??
  1275	001562'	254000	001557'		  JRST	CPOPK			;NO
  1276	001563'	135440	001541*		LDB	T4,ATYPRV		;GET BACK FILE PROT
  1277	001564'	640440	000700		TRC	T4,700
  1278	001565'	646440	000700		TRCN	T4,700
  1279	001566'	620440	000100		  TRZ	T4,100
  1280	001567'	135340	000010		LDB	T2,T3			;STILL HAVE POINTER IN T3
  1281	001570'	200347	001574'		MOVE	T2,TRNSTB(T2)		;TRANSLATE TO INTERNAL FORM
  1282	001571'	315340	000006		CAMGE	T2,T1
  1283	001572'	254000	001557'		  JRST	CPOPK			;NO GOOD
  1284	001573'	254000	001556'		JRST	CPOPK1
  1285
  1286	001574'	000000	000000*	TRNSTB:	EXP	FNCDEL,FNCCPR,FNCUPD,FNCAPP,FNCRED,FNCEXC,FNCLOK,0
	001575'	000000	000000*
	001576'	000000	000000*
	001577'	000000	000000*
	001600'	000000	000000*
	001601'	000000	000000*
	001602'	000000	001534*
	001603'	000000	000000
  1287
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 28
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1288				;THIS SUBROUTINE CHECKS THE LICENSE BITS TO SEE IF A JOB
  1289				;HAS SPECIAL ACCESS TO A FILE. ENTER WITH
  1290				;T1=FUNCTION DESIRED
  1291				;T2=PPN OF FILE (NAME IF UFD)
  1292				;T4=PROTECTION BITS. BIT 0=1 IF UFD
  1293				;J=JOB NUMBER
  1294				;P2=ATB ADDRESS
  1295				;RETURNS CALL+1 IF OK
  1296				;RETURNS CALL+2 IF NOT OK
  1297				;CHECKS ALL CHANGE PROTECTION OPERATIONS
  1298
  1299	001604'	312340	000000*	CHKPRJ::CAME	T2,ACTPPN	;IS IT FOR AN ACCOUNTING FILE??
  1300	001605'	254000	001612'		  JRST	CHKNAC		;NO
  1301	001606'	205400	001000		MOVSI	T3,LICJAL
  1302	001607'	616402	000000*		TDNN	T3,JBTLIC(J)
  1303	001610'	254000	001612'		  JRST	CHKNAC		;JACCT NOT ON
  1304	001611'	263040	000000		POPJ	P,		;YES, ALL OPS OK (KLUDGE)
  1305
  1306	001612'	303300	001600*	CHKNAC:	CAILE	T1,FNCRED
  1307	001613'	254000	001661'		  JRST	CHKNRD		;NOT A READ
  1308	001614'	135400	000000*		LDB	T3,JBYRPT
  1309	001615'	303400	000001		CAILE	T3,1		;CAN HE READ ALL FILES??
  1310	001616'	263040	000000		  POPJ	P,
  1311	001617'	302400	000001		CAIE	T3,1		;READ IN PROJ??
  1312	001620'	254000	001626'		  JRST	CHKHRF		;NO, CHECK HOME READ FILES
  1313	001621'	200402	000000*		MOVE	T3,JBTAUN(J)
  1314	001622'	430400	000007		XOR	T3,T2
  1315	001623'	603400	777777		TLNE	T3,-1
  1316	001624'	254000	001635'		  JRST	CHKWRT		;NOT IN PROJECT
  1317	001625'	263040	000000		POPJ	P,
  1318
  1319	001626'	200402	001607*	CHKHRF:	MOVE	T3,JBTLIC(J)	;GET CURRENT LICENSE
  1320	001627'	607400	000040		TLNN	T3,LICHR	;CHECK HOME READ
  1321	001630'	254000	001635'		  JRST	CHKWRT		;NONE, CHECK WRITE ABILITIES (IMPLY READ)
  1322	001631'	200402	000000*		MOVE	T3,JBTFPN(J)	;YES, WHAT DIRECTORY RUN FROM?
  1323	001632'	312400	000007		CAME	T3,T2		;DOES IT MATCH
  1324	001633'	254000	001635'		  JRST	CHKWRT		;NO, CHECK WRITE ABILITIES (IMPLY READ)
  1325	001634'	263040	000000		POPJ	P,		;OK!
  1326
  1327	001635'	325440	001647'	CHKWRT:	JUMPGE	T4,CHKWR1	;WRITE OF UFDS IS SPECIAL
  1328	001636'	200402	001626*		MOVE	T3,JBTLIC(J)
  1329	001637'	603400	001000		TLNE	T3,LICJAL
  1330	001640'	263040	000000		  POPJ	P,		;OK SINCE HAS JL
  1331	001641'	306300	001575*		CAIN	T1,FNCCPR	;IF RENAME(CH PROT)	;- UFD WPJ RENAME
  1332	001642'	254000	001647'		  JRST	CHKWR1		;SEE ABOUT WF,WPJ
  1333	001643'	641400	000003		TLC    T3,LICWFL+LICWPJ	;WRITE ABSOLUTE
  1334	001644'	643400	000003		TLCE   T3,LICWFL+LICWPJ	;SUPER USETO MAKE IT OK TOO
  1335	001645'	350001	000000		  AOS	(P)
  1336	001646'	263040	000000		POPJ	P,
  1337	001647'	135400	000000*	CHKWR1:	LDB	T3,JBYWPT	;GET HIS WRITE LICENSES WFL, WPJ
  1338	001650'	303400	000001		CAILE	T3,1
  1339	001651'	263040	000000		  POPJ	P,		;HAS WF
  1340	001652'	302400	000001		CAIE	T3,1
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 28-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1341	001653'	254000	001701'		  JRST	CHRMT		;TRY FOR A REMOTE BIT
  1342	001654'	200402	001621*		MOVE	T3,JBTAUN(J)
  1343	001655'	430400	000007		XOR	T3,T2
  1344	001656'	603400	777777		TLNE	T3,-1
  1345	001657'	254000	001701'		  JRST	CHRMT		;NOT FORM HERE, TRY REMOTE
  1346	001660'	263040	000000		POPJ	P,		;ALL FUNCTIONS ARE OK
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 29
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1347
  1348	001661'	302300	001641*	CHKNRD:	CAIE	T1,FNCCPR	;IS IT CHANGE PROTECTION??
  1349	001662'	254000	001635'		  JRST	CHKWRT		;NO
  1350							;OWNER CAN ALWAYS CHANGE PROTECTION EXCEPT WHEN
  1351							; FILE HAS PID - THEN NO ONE EXCEPT PROCESSOR CAN.
  1352	001663'	336415	000605*		SKIPN	T3,ATBPID(P2)	;THIS FILE HAVE A PID?
  1353	001664'	254000	001672'		  JRST	CHKNR1		;NO.
  1354	001665'	312400	000000*		CAME	T3,%UPT+UPTPID	;YES. PUNT IF DOESN'T MATCH REQUESTOR'S PID
  1355	001666'	254000	001635'		  JRST	CHKWRT		;TREAT HF PROGRAM JUST LIKE OWNER - ELSE
  1356								; OWNER COULD WRITE HF PROG TO CHANGE PROTECTION
  1357								; ON FILES WITH PIDS IN HIS AREA.
  1358	001667'	205400	000000*		MOVSI	T3,PIDACC	;ALSO PUNT IF JOB DIDN'T REQUEST PID ACCESS
  1359	001670'	616404	000007		TDNN	T3,DEVIAD(F)	;SKIP IF ASKED FOR PID ACCESS
  1360	001671'	254000	001635'		  JRST	CHKWRT		;DID NOT.
  1361	001672'	200402	000204*	CHKNR1:	MOVE	T3,JBTPPN(J)
  1362	001673'	430400	000007		XOR	T3,T2
  1363	001674'	616400	002406'		TDNN	T3,[XWD INDPPN,-1]
  1364	001675'	263040	000000		  POPJ	P,		;OK, BUT STORE NOTHING
  1365	001676'	260040	001732'		PUSHJ	P,RMTCHK	;IS IT A REMOTE PROGRAM
  1366	001677'	254000	001635'		  JRST	CHKWRT		;NO, CHECK WRITE
  1367	001700'	263040	000000		POPJ	P,		;YES, TREAT LIKE OWNER
  1368
  1369	001701'	260040	001732'	CHRMT:	PUSHJ	P,RMTCHK	;IS IT A REMOTE PROGRAM??
  1370	001702'	254000	001711'		  JRST	CHKPID		;NO, SEE IF THIS IS A PROCESSOR FOR FILE'S PID
  1371	001703'	135400	002407'		LDB	T3,[POINT 3,T4,29]	;GET OWNERS PROTECTION
  1372	001704'	331000	000011		SKIPL	T4		;IS IT UFD??
  1373	001705'	334410	001574'		 SKIPA	T3,TRNSTB(T3)	;NO, TRANSLATE
  1374	001706'	201400	001612*		 MOVEI	T3,FNCRED	;YES, READ (PROTECTION CH. CAUGHT ABOVE)
  1375	001707'	311400	000006		CAML	T3,T1
  1376	001710'	263040	000000		  POPJ	P,		;YES, HE DID
  1377
  1378				;HERE TO SEE IF THIS IS THE PROCESSOR FOR FILE'S PID
  1379
  1380	001711'	332415	001663*	CHKPID:	SKIPE	T3,ATBPID(P2)	;IF FILE DOES NOT HAVE A PID,
  1381	001712'	312400	000000*		CAME	T3,%UPT+UPTPID	;OR IF NOT THE PROCESSOR
  1382	001713'	254000	001341*		  JRST	CPOPJ1		;THEN NO ACCESS TO BE GIVEN.
  1383	001714'	205400	001667*		MOVSI	T3,PIDACC	;IS THE PROCESSOR, DID HE ASK FOR PID ACCESS?
  1384	001715'	616404	000007		TDNN	T3,DEVIAD(F)	;SKIP IF HE DID.
  1385	001716'	350001	000000		  AOS	(P)		;THEN NO ACCESS TO BE GIVEN.
  1386	001717'	263040	000000		POPJ	P,		;ELSE ALL FUNCTIONS ARE OK.
  1387
  1388				;SUBROUTINE TO SET T3 AS A BYTE POINTER TO T4 DEPENDING ON
  1389				;WHETHER THIS IS OWNER, SAME PROJ, OTHER
  1390				;T2 HAS PPN OF FILE (OR UFD). CHANGES T2
  1391
  1392	001720'	316342	001654*	GETPTR:	CAMN	T2,JBTAUN(J)
  1393	001721'	634340	000007		  TDZA	T2,T2		;ALLOW ACCESS TO HOME DIR IF GFD'D
  1394	001722'	430342	001672*		 XOR	T2,JBTPPN(J)
  1395	001723'	200400	002407'		MOVE	T3,[POINT 3,T4,29]
  1396	001724'	616340	002406'		TDNN	T2,[XWD INDPPN,-1]	;OWNER??
  1397	001725'	263040	000000		  POPJ	P,		;YES
  1398	001726'	603340	777777		TLNE	T2,-1		;SAME PROJ??
  1399	001727'	133000	000010		  IBP	T3		;NO 2 IBPS
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 29-2
FILFND.MAC	28-OCT-87 00:07		SRCFIL - MANIPULATE DIRECTORIES, ACCESS TABLES

  1400	001730'	133000	000010		IBP	T3		;YES 1 IBP
  1401	001731'	263040	000000		POPJ	P,
  1402
  1403				;CHECK TO SEE IF REMOTE BIT ON AND PROGRAM CAME FROM
  1404				;CORRECT FILE DIRECTORY. WORKS ONLY ON SHR SEG FOR NOW
  1405				;SKIP RETURN IF REMOTE SO TREAT AS OWNER
  1406
  1407	001732'	205400	002000	RMTCHK:	MOVSI	T3,LICRMT	;RMT == (Home File)
  1408	001733'	616402	001636*		TDNN	T3,JBTLIC(J)
  1409	001734'	263040	000000		  POPJ	P,		;BIT NOT EVEN ON
  1410	001735'	200402	001631*		MOVE	T3,JBTFPN(J)	;WHERE HE CAME FROM
  1411	001736'	316400	000007		CAMN	T3,T2		;SAME AS T2
  1412	001737'	350001	000000		  AOS	(P)		;YES SKIP
  1413	001740'	263040	000000		POPJ	P,
  1414
  1415				COMMENT ! ROUTINE CHKACC
  1416				PURPOSE: CHECK PROTECTION VS. DESIRED FUNCTION IN GET/RUN CODE.
  1417				FUNCTION: SKIP IF THE T1/FUNCTION IS ALLOWED ON THE FILE
  1418				EXPECTS: F/DDB  T1/FUNCTION J/JOB T2/DEVPPN(F)
  1419					T4/PROT FIELD RETURNED BY LOOKUP ON THE FILE
  1420				DESTROYS: T2,T3
  1421				!
  1422
  1423	001741'	261040	000015	CHKACC:	PUSH	P,P2		;SAVE P2, AND SETUP ATB ADDRESS
  1424	001742'	550644	001120*		HRRZ	P2,DEVATB(F)
  1425	001743'	260040	001604'		PUSHJ	P,CHKPRJ	;SEE IF LICENSES ALLOW T1/FUNC
  1426					JRST	[POP   P,P2	;YES, RESTORE P2 AND RETURN
  1427	001744'	254000	002410'			 JRST  CPOPJ1]
  1428	001745'	262040	000015		POP	P,P2		;GET OLD P2 BACK.
  1429	001746'	260040	001720'		PUSHJ	P,GETPTR
  1430	001747'	135340	000010		LDB	T2,T3
  1431	001750'	200347	001574'		MOVE	T2,TRNSTB(T2)
  1432	001751'	317300	000007		CAMG	T1,T2
  1433	001752'	254000	001713*		  JRST	CPOPJ1
  1434	001753'	263040	000000		POPJ	P,
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 30
FILFND.MAC	28-OCT-87 00:07		ATB ADDRESS AND POINTER MANIPULATION

  1435				SUBTTL ATB ADDRESS AND POINTER MANIPULATION
  1436
  1437				;ROUTINES TO HANDLE ATB POINTERS AND ADDRESSES
  1438				;ROUTINE TO CONVERT ATB POINTER TO ATB ADDRESS. CALLED WITH
  1439				; ATB POINTER IN T1
  1440
  1441				EXTERNAL CMBSIZ,CORBAS,DABSIZ,JBTDAB,DABOFS
  1442
  1443			010000	XP DABBIT,10000		;THE THIRTEENTH BIT FLAGS A DUMMY POINTER
  1444			000001	XP OFSATP,1		;OFFSET SO THAT NO ATB POINTER IS ZERO
  1445
  1446	001754'	336000	000006	CNVATP::SKIPN	T1		;MUST BE NON-ZERO, ELSE BAD POINTER
  1447	001755'	256000	002412'		 STOPCD (.,DISK,FILATB,,<Bad ATB pointer>)
  1448				 ;;CNVATP+1
  1449	001756'	622300	010000		TRZE	T1,DABBIT	;IS THIS A DUMMY ATB POINTER
  1450	001757'	324740	001765'		 PJRST	JB1ATB		;YES, GO GET THE DUMMY ADDRESS
  1451	001760'	275300	000001		SUBI	T1,OFSATP	;OFFSET BY SOME AMOUNT
  1452	001761'	221300	000000*		IMULI	T1,CMBSIZ	;GET OFFSET FROM START OF FILSER CORE
  1453	001762'	270300	000000*		ADD	T1,CORBAS	;GET ACTUAL ATB ADDRESS
  1454	001763'	263040	000000		POPJ	P,		;AND RETURN WITH IT IN T1.
  1455
  1456				;ROUTINE TO RETURN JOB'S ATB ADDRESS IN T1
  1457
  1458	001764'	200300	000002	JOBATB::MOVE	T1,J		;GET JOB NUMBER IN T1
  1459	001765'	275300	000001	JB1ATB:	SUBI	T1,1		;NONE FOR JOB 0
  1460	001766'	221300	000000*		IMULI	T1,DABSIZ	;SIZE OF ONE DUMMY ATB
  1461	001767'	271300	000000*		ADDI	T1,JBTDAB-DABOFS ;ADD ADDRESS OF JOB TABLE, SUBTRACT
  1462								; FUDGE FACTOR SO IT LOOKS LIKE REAL ADDRESS
  1463	001770'	263040	000000		POPJ	P,		;RETURN WITH ADDRESS IN T1
  1464
  1465				;ROUTINE TO CONVERT A REAL ATB ADDRESS INTO ATB POINTER
  1466
  1467				INTERN CNVATB
  1468
  1469	001771'	274300	001762*	CNVATB:	SUB	T1,CORBAS	;RELATIVE TO START
  1470	001772'	231300	001761*		IDIVI	T1,CMBSIZ	;MAKE CORE BLOCK NUMBER
  1471	001773'	271300	000001		ADDI	T1,OFSATP	;MUST BE OFFSET FROM ZERO
  1472	001774'	263040	000000		POPJ	P,		;RETURN.
  1473
  1474				;TO CONVERT DUMMY ATB ADDRESS TO POINTER, JUST
  1475				; DO MOVEI T1,DABBIT(J).
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 31
FILFND.MAC	28-OCT-87 00:07		ATB ADDRESS AND POINTER MANIPULATION

  1476				COMMENT ;@@SUBROUTINE DECRMV
  1477				@@PURPOSE MANIPULATE THE ATB/SPT/DRB DATA WHEN A PAGE IS BEING VREMOVED.
  1478				IF NECESSARY:
  1479				  DECREMENTS ATB UNSHARED MAP COUNT AND MAX WRITE COUNT (ATBUMC AND ATBMXW)
  1480				  GETS RID OF ATB, REMOVES SPT ENTRY FOR THE PAGE
  1481				@ENTRY P3,P4 CONTAIN LMAP SLOT DATA.  MUST BE INACTIVE.
  1482				  CALLER HAS THE SAT FOR THE SLOT'S DP LOCKED.  NOT NECESSARY FOR THIS
  1483				  ROUTINE, BUT NECESSARY FOR CALLER.
  1484				@ACCUM USES T1-T4, PRESERVES ALL OTHERS.
  1485				@@EXIT P3 AND P4 UNCHANGED.
  1486				  SKIP RETURN IF THIS IS THE LAST SLOT USING THE DP, OTHERWISE NON-SKIP.
  1487				@@CALLS SRCSPT, REMSPT, DECUMC, GETCBR,GIVCB?
  1488				@@FUNCTION IF LMAP SLOT IS ACTIVE OR SUPER, CRASH.
  1489				  GET THE ATB ADDRESS IN P2.
  1490				  DECREMENT MAX WRITE COUNT.  IF IT GOES TO ZERO, CLEAR ATPMXU IN ATBSTS.
  1491				  IF SLOT IS UNSHARED, SEARCH SPT FOR THE DP.  IF NOT IN THE SPT,
  1492				  DECREMENT ATBUMC (DECUMC) AND GIVE THE SKIP RETURN (LAST USER).
  1493				  IF IN THE SPT, DECREMENT THE USE COUNT. IF IT GOES TO ZERO,
  1494				  REMOVE THE SPT ENTRY AND GIVE THE SKIP RETURN.
  1495				  IF SPT COUNT STILL NON-ZERO, GIVE NON-SKIP RETURN.
  1496				@@;
  1497
  1498				EXTERNAL LMPACT,GETATB,LM3SPB,LM3SPO,SPTEN1,GETDPA,SPTUSC
  1499				EXTERNAL SPMUSC
  1500
  1501	001775'	265440	000000*	DECRMV::JSP	T4,SAVE2	;! SAVE P1 AND P2
  1502	001776'	603700	000000*		TLNE	P3,LMPACT!LMPSUP ;! SLOT MUST BE INACTIVE, BECAUSE
  1503								;! WE'RE DECREMENTING UMC OR SPTUSC
  1504	001777'	256000	002415'		 STOPCD (.,DISK,FILLAS,,<LMAP slot active/super>)
  1505				 ;;DECRMV+2
  1506	002000'	260040	001342'		PUSHJ	P,GETCBR	;! Get CB now so ATB won't disappear
  1507	002001'	260040	000000*		PUSHJ	P,GETATB	;%! GET ATB ADDRESS IN T1
  1508	002002'	200640	000006		MOVE	P2,T1		;%! SAVE IT IN P2 FOR LATER
  1509	002003'	627700	000000*		TLZN	P3,LMPMXW	;%! MAX WRITE ON FOR THIS SLOT?
  1510	002004'	254000	002014'		 JRST	DECRM4		;%! NO, LEAVE ATB MWC ALONE.
  1511	002005'	370355	000000*		SOS	T2,ATBMWC(P2)	;%! YES, DECREMENT COUNT, ONE LESS WRITER
  1512	002006'	640340	000000*		TRC	T2,ATMMWC	;%! HAS IT OVERFLOWED?
  1513	002007'	646340	002006*		TRCN	T2,ATMMWC	;%! IF (ALL BITS GO TO 1) THEN CRASH
  1514	002010'	256000	002420'	FILAMO:: STOPCD (.,DISK,FILAMO,PRTATB,<ATB Max write count overflow>)
  1515				 ;;DECRMV+13
  1516	002011'	201400	000000*		MOVEI	T3,ATPMXU	;%! GET READY TO CLEAR THE UP BIT
  1517	002012'	606340	002007*		TRNN	T2,ATMMWC	;%! IF COUNT WENT TO ZERO,
  1518	002013'	412415	001335*		ANDCAM	T3,ATBSTS(P2)	;%! CLEAR THE UP BIT IN ATBSTS
  1519	002014'	325700	002022'	DECRM4:	JUMPGE	P3,DECRM1	;%! JUMP IF SLOT IS UNSHARED
  1520	002015'	135300	000000*		LDB	T1,LM3SPB	;%! SLOT SHARED, GET SPT TABLE BASE
  1521	002016'	135340	000000*		LDB	T2,LM3SPO	;%! AND OFFSET
  1522	002017'	271307	000000*		ADDI	T1,SPTEN1(T2)	;%! GET ADDRESS OF ENTRY
  1523	002020'	135440	000000*		LDB	T4,LM3SPT	;%! REMSPT NEEDS POINTER IN T4
  1524	002021'	254000	002025'		JRST	DECRM2		;%! AND GO DECREMENT SPT COUNT
  1525
  1526	002022'	260040	000000*	DECRM1:	PUSHJ	P,GETDPA	;%! GET DP ADDRESS TO SEARCH SPT FOR
  1527	002023'	260040	002167'		PUSHJ	P,SRCSPT	;%! SEE IF ITS THERE
  1528	002024'	254000	002032'		  JRST	DECRM3		;%! NO, GO DECREMENT ATBUMC
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 31-2
FILFND.MAC	28-OCT-87 00:07		ATB ADDRESS AND POINTER MANIPULATION

  1529	002025'	370346	000000*	DECRM2:	SOS	T2,SPTUSC(T1)	;%! ONE LESS USER,
  1530	002026'	602340	000000*		TRNE	T2,SPMUSC	;%! SKIP IF ITS THE LAST
  1531	002027'	324740	001357'		PJRST	GIVCBR		;%! NOT THE LAST, JUST RETURN
  1532	002030'	260040	002131'		PUSHJ	P,REMSPT	;%! LAST USER, DELETE ENTRY
  1533	002031'	324740	001356'		PJRST	GIVCB1		;%! AND TELL CALLER THIS WAS LAST.
  1534
  1535	002032'	260040	002226'	DECRM3:	PUSHJ	P,DECUMC	;%! WASN'T IN SPT, UMC WAS UP FOR IT
  1536	002033'	324740	001356'		PJRST	GIVCB1		;%! SO DECREMENT AND RETURN.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 32
FILFND.MAC	28-OCT-87 00:07		SPT HANDLING ROUTINES

  1537				SUBTTL SPT HANDLING ROUTINES
  1538
  1539				COMMENT ;@@SUBROUTINE INSSPT
  1540				@@PURPOSE CREATE AN SPT ENTRY. ONLY HAPPENS WHEN
  1541				A USER DOES A MAP AND FINDS THE "M" BIT IN THE SAT ON.
  1542				@@ENTRY T1/ATB ADDRESS
  1543				T2/ DISK PAGE ADDRESS (RBMASK OFF)
  1544				@@ACCUM PRESERVES T2, SMASHES T1,T3,T4.
  1545				@@EXIT T1/SPT ENTRY ADDRESS
  1546				T4/SPT ENTRY POINTER (BASE AND OFFSET)
  1547				NON-SKIP RETURN WHEN ENTRY IS INSERTEC SUCCESSFULLY.
  1548				@@CALLS GETWDS
  1549				@@RESTRICTIONS CALLER MUST BE SURE THAT AN SPT ENTRY DOES NOT
  1550				ALREADY EXIST FOR DP. UMC MUST BE INCREMENTED FOR DP DUE
  1551				TO OTHER USER OF DP. MAY RESCHEDULE TO GET FREE CORE.
  1552				@@FUNCTION TRY TO FIND AN SPT TABLE WITH A FREE ENTRY SLOT.
  1553				IF FIND ONE, STORE DISK ADDRESS IN SPT ENTRY, SET USE COUNT
  1554				TO 2 (ONE FOR THE CALLER, ONE FOR THE USER WHO CAUSED THE M
  1555				BIT TO BE SET). DECREMENT ATBUMC (CALL DECUMC) SO THAT
  1556				THE UNSHARED USER WILL NOT HAVE TO DECREMENT IT. RETURN
  1557				THE ENTRY ADDRESS AND POINTER, GIVE SKIP RETURN.
  1558				IF NO FREE SPT SLOTS, ALLOCATE A NEW SPT TABLE, INITIALIZE IT,
  1559				AND USE THE FIRST FREE SPT ENTRY IN IT. IF THIS NEW
  1560				SPT TABLE IS THE ONLY ONE LINKED TO THE ATB, LEAVE ATBUMC INCREMENTED,
  1561				SINCE MUST DECREMENT IT FOR THE ORIGINAL USER AND THEN INCREMENT
  1562				IT BECAUSE AN SPT CAME INTO EXISTENCE. ELSE, DECREMENT
  1563				ATBUMC WITH DECUMC. GIVE SKIP RETURN WITH ENTRY ADDRESS IN T1
  1564				AND POINTER IN T4. (ERROR RETURN IS GIVEN IF COULD NOT
  1565				CREATE ANOTHER SECTION OF SPT).
  1566				@@;
  1567
  1568				EXTERNAL ATBSPT,SPTLNK,SPYNFE,SPTEN1,SPTNME,SPTUSC,SPTPNO
  1569				EXTERNAL SPTNFE,SPTEN1,SPNBAS,SPTSIZ,GETWDS,SPTATB,SPTNMM
  1570				EXTERNAL SPNNFE,SPTBLN
  1571				EXTERNAL FCWAIT,FCREQ,RBMASK
  1572
  1573	002034'	603340	000000*	INSSPT::TLNE	T2,RBMASK	;BAD BITS OFF?
  1574	002035'	256000	000000'		 STOPCD (SLO)
  1575						;NO     ;;INSSPT+1
  1576	002036'	260040	001342'		PUSHJ	P,GETCBR	;GET CB
  1577	002037'	201446	000000*		MOVEI	T4,ATBSPT-SPTLNK(T1) ;% GET FAKE PREDECESSOR ADDR.
  1578
  1579	002040'	554451	000000*	INSSP1:	HLRZ	T4,SPTLNK(T4)	;% GET NEXT SPT SECTION ADDRESS
  1580	002041'	322440	002072'		JUMPE	T4,CRESPT	;% COULDN'T FIND FREE ENTRY, GO CREATE NEW SECTION
  1581	002042'	135400	000000*		LDB	T3,SPYNFE	;% GET NUMBER OF FREE ENTRIES IN THIS SECTION
  1582	002043'	322400	002040'		JUMPE	T3,INSSP1	;% NONE FREE, THEN LOOK AT NEXT SECTION
  1583
  1584				;FOUND A SECTION WITH A FREE ENTRY IN IT. DECREMENT ATBUMC BY
  1585				; CALLING DECUMC AND FIND THE FREE ENTRY
  1586
  1587	002044'	261040	000015	INSSP2:	PUSH	P,P2		;% SAVE P2
  1588	002045'	200640	000006		MOVE	P2,T1		;% GET ATB ADDRESS INTO P2 FOR DECUMC
  1589	002046'	260040	002226'		PUSHJ	P,DECUMC	;% DECREMENT ATBUMC. ATB WILL NOT GO AWAY
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 32-2
FILFND.MAC	28-OCT-87 00:07		SPT HANDLING ROUTINES

  1590								;%  BECAUSE UMC IS UP FOR THE SPT
  1591	002047'	262040	000015		POP	P,P2		;% P2 COMES BACK
  1592
  1593	002050'	201311	002017*		MOVEI	T1,SPTEN1(T4)	;% GET ADDRESS OF FIRST ENTRY
  1594	002051'	505300	000000*		HRLI	T1,-SPTNME	;% HAVE TO LOOK AT ALL ENTRIES
  1595
  1596	002052'	336006	002025*	INSSP3:	SKIPN	SPTUSC(T1)	;% IS THIS A FREE ONE?
  1597	002053'	254000	002056'		  JRST	INSSP4		;% YES, GO STUFF DATA INTO IT
  1598	002054'	253300	002052'		AOBJN	T1,INSSP3	;% NO, KEEP GOING
  1599	002055'	256000	000000'		 STOPCD (SLO)
  1600						;% BUT THE COUNT SAID THERE WAS A FREE ONE!
  1601
  1602				;HERE WHEN WE HAVE FOUND BOTH SECTION AND THE FREE ENTRY
  1603
  1604	002056'	202346	000000*	INSSP4:	MOVEM	T2,SPTPNO(T1)	;% PUT IN THE DP
  1605	002057'	201400	000002		MOVEI	T3,2		;% USE COUNT SET TO 2 ONE FOR US,
  1606	002060'	202406	002052*		MOVEM	T3,SPTUSC(T1)	;% AND ONE FOR ORIGINAL MAPPER.
  1607	002061'	370011	000000*		SOS	SPTNFE(T4)	;% ONE LESS FREE ENTRY IN HERE
  1608	002062'	350001	000000		AOS	(P)		;% SKIP RETURN
  1609	002063'	260040	001357'		PUSHJ	P,GIVCBR	;GIVE BACK CB
  1610
  1611				;HERE ALSO FROM SRCSPT TO RETURN SPT ENTRY ADDR AND POINTER IN
  1612				; T1 AND T4, RESPECTIVELY, AND GIVE SKIP OR NON-SKIP RETURN
  1613
  1614	002064'	553000	000006	SPTRET:	HRRZS	T1		;GET RID OF -VE COUNT
  1615	002065'	201411	002050*		MOVEI	T3,SPTEN1(T4)	;GET ADDRESS OF FIRST ENTRY
  1616	002066'	242440	000000*		LSH	T4,^D35-SPNBAS	;POSTION SECTION ADDRESS PROPERLY
  1617	002067'	276300	000010		SUBM	T1,T3		;GET OFFSET FROM FIRST ENTRY
  1618	002070'	270440	000010		ADD	T4,T3		;T4 IS POINTER, HAS BASE AND OFFSET
  1619	002071'	263040	000000		POPJ	P,		;RETURN TO CALLER.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 33
FILFND.MAC	28-OCT-87 00:07		SPT HANDLING ROUTINES

  1620				;MORE OF INSSPT
  1621
  1622				;HERE WHEN ALL SPT SECTIONS ARE FULL. CREATE A NEW SPT
  1623				; SECTION. SPT SECTIONS COME FROM THE SAME FREE CORE
  1624				; THAT DDBS COME FROM, NOT FROM FILSER FREE CORE.
  1625
  1626				;T1 HAS ATB ADDRESS
  1627
  1628	002072'	261040	000006	CRESPT:	PUSH	P,T1		;SAVE ATB ADDRESS
  1629	002073'	261040	000007		PUSH	P,T2		;AND CALLER'S DP ADDRESS
  1630	002074'	201340	000000*	CRESP0:	MOVEI	T2,SPTSIZ	;HOW BIG AN SPT IS
  1631	002075'	335000	000000*		SKIPGE	FCREQ		;NEED TO WAIT? IF SO, SKIP AND WAIT
  1632	002076'	260040	000000*		PUSHJ	P,GETWDS	;GET THE CORE
  1633					 JRST	[POP	P,T2
  1634						POP	P,T1
  1635	002077'	254000	002424'			JRST	GIVCBR]
  1636	002100'	262040	000007		POP	P,T2		;GET T2 BACK OFF STACK
  1637	002101'	262040	000011		POP	P,T4		;GET ATB ADDRESS IN T4
  1638	002102'	250300	000011		EXCH	T1,T4		;ATB IN T1, BASE OF SECTION IN T4
  1639
  1640	002103'	554406	000000*		HLRZ	T3,ATBSPT(T1)	;GET OLD FIRST SPT SECTION
  1641	002104'	322400	002113'		JUMPE	T3,CRESP1	;GO IF WE'RE CREATING FIRST ONE
  1642								; LEAVE ATBUSC INCREMENTED TO REPRESENT
  1643								; THE SPT'S EXISTENCE.
  1644	002105'	261040	000015		PUSH	P,P2		;ALREADY AN SPT, DECREMENT
  1645	002106'	200640	000006		MOVE	P2,T1		;ATB IN P2 FOR DECUMC
  1646	002107'	260040	002226'		PUSHJ	P,DECUMC	;DECREMENT THE COUNT THAT ORIGINAL
  1647	002110'	200300	000015		MOVE	T1,P2		;GET ATB ADDRESS BACK IN T1
  1648	002111'	554406	002103*		HLRZ	T3,ATBSPT(T1)	;AND SPT OLD FIRST IN T3
  1649	002112'	262040	000015		POP	P,P2		; MAPPER INCREMENTED IN ATB
  1650	002113'	504400	000006	CRESP1:	HRL	T3,T1		;T3/ ATB ADDR,,OLD FIRST SECTION
  1651	002114'	206411	000000*		MOVSM	T3,SPTLNK&SPTATB(T4) ;SET FORWARD LINK AND ATB BACK POINTER
  1652	002115'	602400	777777		TRNE	T3,-1		;IF THERE IS AN OLD FIRST,
  1653	002116'	506450	000000*		HRLM	T4,SPTBLN(T3)	;IT SHOULD POINT BACK TO NEW FIRST.
  1654	002117'	205406	000000*		MOVSI	T3,ATBSPT-SPTLNK(T1) ;GET PHONEY BACK POINTER
  1655	002120'	541400	000000*		HRRI	T3,SPTNMM	;MAKE ALL ENTRIES FREE (SPTNME<B>SPNNFE)
  1656	002121'	202411	000000*		MOVEM	T3,SPTNFE&SPTBLN(T4)     ;SET NO. FREE ENTRIES AND BACK LINK
  1657	002122'	506446	002111*		HRLM	T4,ATBSPT(T1)	;AND FINALLY POINT THE ATB TO IT.
  1658
  1659				;NOW CLEAR THE ENTRIES
  1660
  1661	002123'	505411	002065*		HRLI	T3,SPTEN1(T4)	;FIRST ADDRESS
  1662	002124'	541411	000001*		HRRI	T3,SPTEN1+1(T4)	;1ST,,2ND
  1663	002125'	402010	777777		SETZM	-1(T3)		;CLEAR 1ST (2ND-1)
  1664	002126'	251411	000000*		BLT	T3,SPTEN1+SPTNME*2-1(T4) ;ZERO ALL
  1665	002127'	201311	002123*		MOVEI	T1,SPTEN1(T4)	;GET ENTRY ADDRESS (BASE IS IN T4)
  1666	002130'	254000	002056'		JRST	INSSP4		;AND GO STICK DATA INTO ENTRY.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 34
FILFND.MAC	28-OCT-87 00:07		SPT HANDLING ROUTINES

  1667				COMMENT ;@@SUBROUTINE REMSPT
  1668				@@PURPOSE DELETE AN SPT ENTRY
  1669				@@ENTRY T4 CONTAINS SPT POINTER (BASE AND OFFSET)
  1670				@@ACCUM PRESERVES T2, SMASHES T1,T3,T4.
  1671				@@EXIT ALWAYS NON-SKIP
  1672				@@CALLS DECUMC
  1673				@@RESTRICTIONS CALLER MUST HAVE CB
  1674				@@FUNCTION CLEAR USE COUNT WORD OF ENTRY, MAKING IT FREE.
  1675				INCREMENT COUNT OF FREE ENTRIES. IF ALL ENTRIES IN THIS
  1676				SPT SECTION ARE NOW FREE, SO UNLINK THIS SECTION AND GIVE
  1677				THE FREE CORE BACK.
  1678				@@;
  1679
  1680				EXTERNAL SP4BAS,SP4OFS,SPTEN1,SPTUSC,SPTVIR,SPTPNO
  1681				EXTERNAL SPMNFE,SPTBLN,SPTLNK,SPTATB,ATBSPT,SPTSIZ,GIVWDS
  1682
  1683	002131'	135300	000000*	REMSPT::LDB	T1,SP4BAS	;% GET SECTION ADDRESS
  1684	002132'	135400	000000*		LDB	T3,SP4OFS	;% AND OFFSET
  1685	002133'	200440	000006		MOVE	T4,T1		;% T4 HAS SECTION ADDRESS NOW
  1686	002134'	271310	002127*		ADDI	T1,SPTEN1(T3)	;% T1 GETS ADDRESS OF ENTRY
  1687
  1688	002135'	402006	000000*		SETZM	SPTUSC&SPTVIR(T1) ;% CLEAR OUT WHOLE COUNT WORD
  1689	002136'	402006	002056*		SETZM	SPTPNO(T1)	;% MAKE SURE DP IS ZERO FOR SRCSPT
  1690	002137'	350411	002061*		AOS	T3,SPTNFE(T4)	;% INCREMENT NUMBER OF FREE ENTRIES
  1691	002140'	646400	000000*		TRCN	T3,SPMNFE	;% IF FIELD WENT TO 0, WE HAVE AN OVERFLOW
  1692	002141'	256000	002427'		 STOPCD (.,DISK,FILSEO,,<SPT Free entry count overflow>);;REMSPT+10
  1693	002142'	642400	002140*		TRCE	T3,SPMNFE	;% OK. ALL BITS SET? (ZERO)
  1694	002143'	263040	000000		  POPJ	P,		;% NO, STILL SOME ENTRIES HERE.
  1695
  1696				;HERE WHEN THE SPT SECTION IS NOW DEVOID OF ANY ENTRIES.
  1697
  1698	002144'	554411	002116*		HLRZ	T3,SPTBLN(T4)	;% GET PRED. ADDR (MAY POINT TO ATBSPT)
  1699	002145'	500411	002040*	REMSP1:	HLL	T3,SPTLNK(T4)	;% T3/NEXT(MAYBE 0),,LAST(MAY BE ATBSPT)
  1700	002146'	502410	002145*		HLLM	T3,SPTLNK(T3)	;% PRED. FORWARD LINK TO NEXT
  1701	002147'	207000	000010		MOVSS	T3		;% T3/LAST,,NEXT
  1702	002150'	602400	777777		TRNE	T3,-1		;% IS THERE REALLY A NEXT?
  1703	002151'	502410	002144*		HLLM	T3,SPTBLN(T3)	;% YES, POINTS BACK TO LAST
  1704
  1705				;NOW SEE IF THIS WAS THE LAST SPT SECTION ON THE ATB. IF SO,
  1706				; MUST DECREMENT ATBUMC BECAUSE THERE IS NO MORE SPT.
  1707
  1708	002152'	550311	000000*		HRRZ	T1,SPTATB(T4)	;% GET ATB ADDRESS FROM OLD SECTION
  1709	002153'	554406	002122*		HLRZ	T3,ATBSPT(T1)	;% ALL THE SPT SECTIONS GONE?
  1710	002154'	326400	002161'		JUMPN	T3,REMSP2	;% JUMP IF NOT
  1711	002155'	261040	000015		PUSH	P,P2		;% ALL GONE, CAL DECUMC
  1712	002156'	200640	000006		MOVE	P2,T1		;% IT WANTS ATB IN P2
  1713	002157'	260040	002226'		PUSHJ	P,DECUMC	;% MAYBE ATB WILL GO AWAY.
  1714	002160'	262040	000015		POP	P,P2		;% BURMA SHAVE
  1715
  1716	002161'	261040	000007	REMSP2:	PUSH	P,T2		;% SAVE T2 FROM GIVWDS, WHICH DESTOROYS EVERYTHINK
  1717	002162'	201300	002074*		MOVEI	T1,SPTSIZ	;% NUMBER OF WORDS TO GIVE BACK
  1718	002163'	200340	000011		MOVE	T2,T4		;% GET ADDRESS IN T2
  1719	002164'	260040	000000*		PUSHJ	P,GIVWDS	;% GIVE BACK CORE
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 34-2
FILFND.MAC	28-OCT-87 00:07		SPT HANDLING ROUTINES

  1720	002165'	262040	000007		POP	P,T2		;% RESTORE PRECIOUS DISK ADDRESS
  1721	002166'	263040	000000		POPJ	P,		;% AND RETURN.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 35
FILFND.MAC	28-OCT-87 00:07		SPT HANDLING ROUTINES

  1722				COMMENT ;@@SUBROUTINE SRCSPT
  1723				@@PURPOSE SEE IF A DP HAS AN SPT ENTRY.
  1724				@@ENTRY T1/ATB ADDRESS
  1725				T2/ DP ADDRESS TO SEARCH FOR (RBMASK OFF)
  1726				@@ACCUM PRESERVES T2, USES T1,T3,T4.
  1727				@@EXIT NON-SKIP IF DP IS NOT IN SPT. SKIP RETURN IF DP IS IN SPT,
  1728				WITH T1 CONTAINING ENTRY ADDRESS AND T4 CONTAINING ENTRY POINTER.
  1729				@@FUNCTION SEARCH EACH SPT SECTION FOR AN ENTRY THAT HAS
  1730				A MATCHING DISK ADDRESS. DON'T FORGET THAT SPTS ARE SPARSE.
  1731				SEARCH ASSUMES THAT SEARCH WILL FAIL WITHIN MOST SPT
  1732				SECTIONS, SO THAT WE WILL HAVE TO LOOK AT SPTNME WORDS
  1733				AT LEAST, MOST OF THE TIME. ASSUME TABLE ENTRIES ARE NOT
  1734				GROUPED TOGETHER, BUT ARE SEPERATED, SO THAT IT WOULD
  1735				NOT HELP BY CUTTING OFF SEARCH AFTER WE HAVE FOUND
  1736				<NUMBER OF ENTRIES> VALID ENTRIES.
  1737				@@;
  1738
  1739				EXTERNAL ATBSPT,SPTLNK,SPYNFE,SPTEN1,SPTPNO,RBMASK
  1740
  1741	002167'	603340	002034*	SRCSPT::TLNE	T2,RBMASK	;BAD BITS OFF?
  1742	002170'	256000	000000'		 STOPCD (SLO)
  1743						;NO     ;;SRCSPT+1
  1744	002171'	201446	000000*		MOVEI	T4,ATBSPT-SPTLNK(T1) ;START OFF WITH THIS THING
  1745	002172'	554451	002146*	SRCSPA:	HLRZ	T4,SPTLNK(T4)	;GET NEXT SECTION ADDRESS
  1746	002173'	322440	001210*		JUMPE	T4,CPOPJ	;NOT IN SPT.
  1747	002174'	205300	000000*		MOVSI	T1,-SPTNME	;SEARCH WHOLE TABLE, ASSUMING ITS
  1748								; USUALLY BEEN FILLED, MAYBE MADE SPARSE
  1749	002175'	541311	002134*		HRRI	T1,SPTEN1(T4)	;GET FIRST ENTRY ADDRESS
  1750	002176'	316346	002136*	SRCSP2:	CAMN	T2,SPTPNO(T1)	;ONE WE'RE LOOKING FOR?
  1751	002177'	254000	002202'		JRST	SRCSP4		;GO MAKE SURE ITS A REAL ENTRY
  1752	002200'	253300	002176'	SRCSP3:	AOBJN	T1,SRCSP2	;NO, LOOK SOME MORE.
  1753	002201'	254000	002172'		JRST	SRCSPA		;NOT IN THIS SECTION, CHECK NEXT SECTION
  1754
  1755				;HERE WHEN DISK ADDRESS AND SPT ENTRY DISK ADDRESS MATCH.
  1756				; IF THE PAGE IS PAGE 0, MAKE SURE USE COUNT IS
  1757				; NON-ZERO (A REAL ENTRY)
  1758
  1759	002202'	326340	002205'	SRCSP4:	JUMPN	T2,SRCSP5	;NON-ZERO, ITS REAL
  1760	002203'	336006	002060*		SKIPN	SPTUSC(T1)	;IS THE ENTRY REAL?
  1761	002204'	254000	002200'		JRST	SRCSP3		;NO, KEEP LOOKING
  1762	002205'	350001	000000	SRCSP5:	AOS	(P)		;GIVE SKIP RETURN, WE FOUND IT.
  1763	002206'	324740	002064'		PJRST	SPTRET		;YES, RETURN WITH IT.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 36
FILFND.MAC	28-OCT-87 00:07		UNSHARED MAP COUNT HANDLING

  1764				SUBTTL UNSHARED MAP COUNT HANDLING
  1765
  1766				COMMENT ;@@SUBROUTINE INCUMC
  1767				@@PURPOSE INCREMENT ATBUMC, AND IF IT WAS ZERO INCREMENT
  1768				DRBCNT.
  1769				@@ENTRY T1/ATB ADDRESS
  1770				@@ACCUM PRESERVES T1,T2,T4 SMASHES T3
  1771				@@EXIT NON-SKIP RETURN.
  1772				@@FUNCTION INCREMENT ATBUMC, CRASH IF OVERFLOW. IF
  1773				ATBUMC WENT FROM 0 TO 1 AND ATB IS FOR A FILE,
  1774				INCREMENT DRBCNT. RETURN.
  1775				@@;
  1776
  1777				EXTERNAL ATPUMC,ATBUMC,ATMUMC,ATBFNB,FNBDRB,DRBCNT,DRPMXC
  1778				EXTERNAL ATBDUM
  1779
  1780	002207'	205400	000000*	INCUMC::MOVSI	T3,ATPUMC	;GET COUNT BIT
  1781	002210'	273406	000000*		ADDB	T3,ATBUMC&ATBDUM(T1);INCREMENT UMC
  1782	002211'	261040	000015		PUSH	P,P2
  1783	002212'	200640	000006		MOVE	P2,T1		;For PRTATB
  1784	002213'	607400	000000*		TLNN	T3,ATMUMC	;IF ALL WENT TO 0, ITS AN OVERFLOW
  1785	002214'	256000	002432'		 STOPCD (.,DISK,FILAUO,PRTATB,<ATB Unshared map count overflow>)
  1786				 ;;INCUMC+3
  1787	002215'	262040	000015		POP	P,P2
  1788	002216'	603400	000000*		TLNE	T3,ATPDUM!ATMUMC-1 ;COUNT NOW = 1 AND FILE ATB?
  1789	002217'	263040	000000		 POPJ	P,		;NO, JUST RETURN
  1790	002220'	550406	001400*		HRRZ	T3,ATBFNB(T1)	;YES, GET DRB ADDRESS
  1791	002221'	550410	000231*		HRRZ	T3,FNBDRB(T3)
  1792	002222'	350410	001420*		AOS	T3,DRBCNT(T3)	;INCREMENT DRB COUNT
  1793	002223'	602400	000711*		TRNE	T3,DRPMXC	;OVERFLOW?
  1794	002224'	256000	000062'		 STOPCD (,XCT,FILDMO)
  1795				   ;;INCUMC+12
  1796	002225'	263040	000000		POPJ	P,		;NO, RETURN.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 37
FILFND.MAC	28-OCT-87 00:07		UNSHARED MAP COUNT HANDLING

  1797				COMMENT ;@@SUBROUTINE DECUMC
  1798				@@PURPOSE DECREMENT ATBUMC WHEN AN SPT IS DESTROYED,
  1799				WHEN SPT ENTRY IS CREATED AND SPT ALREADY EXISTED, OR
  1800				WHEN A PAGE IS REMOVED THAT IS NOT IN AN ATB'S SPT.
  1801				@@ENTRY P2/ ATB ADDRESS
  1802				CALLER GOT CB RESOURCE. CALLER ALSO HAS SAT FOR THE DP
  1803				HE IS REMOVING LOCKED, ALTHOUGHT THIS IS NOT NECESSARY
  1804				FOR DECUMC.
  1805				@@ACCUM USES T1,T3. PRESERVES T2,T4.
  1806				@@EXIT ATB ADDRESS STILL IN P2
  1807				STILL HAVE CB
  1808				@@CALLS FREATB OR LKDATB
  1809				@@FUNCTION DECREMENT ATBUMC, CRASH IF IT UNDERFLOWS.
  1810				IF ATB IS A DUMMY ATB OR COUNT IS NOT ZERO, RETURN.
  1811				OTHERWISE DECREMENT DRB COUNT, CRASH IF UNDERFLOW.
  1812				IF ATB IS MARKED FOR DELETION AND THERE ARE NO MORE
  1813				USERS OF ATB, GIVE IT BACK TO FREE CORE. ELSE IF NO
  1814				MORE USERS OF ATB, PUT ATB ON DORMANT LIST.
  1815				@@;
  1816
  1817	002226'	205300	000000*	DECUMC::MOVSI	T1,-ATPUMC	;%! GET DECREMENTING VALUE
  1818	002227'	273315	000000*		ADDB	T1,ATBUMC&ATBSTS&ATBDUM(P2)
  1819								;%! (WILL USE THIS AS ATBSTS LATER,
  1820								;%! SO GET ATBSTS INTO CREF)
  1821								;%! DECREMENT THE COUNT
  1822	002230'	641300	002213*		TLC	T1,ATMUMC	;%! SEE IF ALL BITS WENT TO 1
  1823	002231'	647300	002230*		TLCN	T1,ATMUMC	;%! IF YES, UNDERFLOW
  1824	002232'	256000	002436'		 STOPCD (.,DISK,FILAUU,PRTATB,<ATB Unshared map count underflow>);;DECUMC+4
  1825	002233'	554415	002153*		HLRZ	T3,ATBSPT(P2)	;%! GET POSSIBLE SPT SECTION ADDRESS
  1826	002234'	322400	002237'		JUMPE	T3,DECUM0	;%! IF NONE, OK
  1827	002235'	607300	002231*		TLNN	T1,ATMUMC	;%! IF STILL AN SPT AND COUNT IS 0, CRASH.
  1828	002236'	256000	002442'		 STOPCD (.,DISK,FILAUS,PRTATB,<ATB Unshared map count zero with SPT>);;DECUMC+10
  1829	002237'	603300	000000*	DECUM0:	TLNE	T1,ATPDUM!ATMUMC ;%! IF THIS IS DUMMY ATB OR COUNT STILL UP
  1830	002240'	263040	000000		 POPJ	P,		;%! JUST RETURN.
  1831	002241'	550415	002220*		HRRZ	T3,ATBFNB(P2)	;%! GET DRB ADDRESS
  1832	002242'	550410	002221*		HRRZ	T3,FNBDRB(T3)	;%! HAVE IT NOW
  1833	002243'	370410	002222*		SOS	T3,DRBCNT(T3)	;%! DECREMENT IT, SINCE UMC WENT TO ZERO
  1834	002244'	602400	002223*		TRNE	T3,DRPMXC	;%! UNDERFLOW?
  1835	002245'	256000	000647'		 STOPCD (,XCT,FILDMU)
  1836					;%! YES, CRASH  ;;DECUM0+6
  1837	002246'	602300	000000*		TRNE	T1,ATPMXU!ATMCNT!ATPUPD!ATPREN!ATPSUP!ATPCRE
  1838								;%! ANY USERS OF ATB LEFT?
  1839	002247'	263040	000000		  POPJ	P,		;%! YES, DON'T TOUCH ATB
  1840	002250'	261040	000007		PUSH	P,T2		;%! SAVE T2 AND P3
  1841	002251'	261040	000016		PUSH	P,P3		;%! AS WE SAY WE PRESERVE THEM
  1842	002252'	550715	002241*		HRRZ	P3,ATBFNB(P2)	;%! P3 GETS FNB ADDR IN CASE CALL FREATB
  1843	002253'	201340	001314'		MOVEI	T2,LKDATB	;%! ASSUME IT GOES ON DORMANT LIST
  1844	002254'	602300	000542*		TRNE	T1,ATPDEL	;%! MARKED FOR DELETION?
  1845	002255'	201340	001252'		  MOVEI	T2,FREATB	;YES, GOES BACK TO FREE CORE
  1846	002256'	260047	000000		PUSHJ	P,(T2)		;%! PUT ON DORMANT OR FREE LIST
  1847	002257'	262040	000016		POP	P,P3		;%! RESTORE THESE AND
  1848	002260'	262040	000007		POP	P,T2		;%!
  1849	002261'	263040	000000		POPJ	P,		;%! RETURN.
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 38
FILFND.MAC	28-OCT-87 00:07		UNSHARED MAP COUNT HANDLING

  1850				COMMENT ;@@SUBROUTINE DECUNS
  1851				@@PURPOSE TO DECREMENT ATBUMC,MXW, AND REMOVE SPT ENTRY FOR AN
  1852				UNSHARED DP SO THAT IT CAN BE MOVED TO ANOTHER FILE.
  1853				@@ENTRY P3,P4 CONTAIN LMAP SLOT DATA, ACTIVE OR INACTIVE.
  1854				T2/ DP
  1855				P2/ ATB OF OLD FILE (OR DUMMY ATB ADDRESS IF PRIVATE PAGE)
  1856				@@ACCUM USES T1-T4.
  1857				@@EXIT P3,P4 STILL CONTAINLMAP SLOT DATA - STATUS SET TO UNSHARED IF
  1858				ENTERED AS SHARED. LMYATB NO LONGER VALID.
  1859				SKIP IF PAGE WAS NOT BEING SHARED BY ANYONE. NON-SKIP IF PAGE WAS BEING
  1860				SHARED.
  1861				@@FUNCTION IF SLOT IS UNSHARED, SEARCH SPT FOR DP. IF DP IS IN SPT OR SLOT
  1862				IS SHARED, AND SPT SHARE COUNT IS NOT 1, GIVE NON-SKIP RETURN (MUST BE
  1863				GREATER THAN 1). ELSE DELETE SPT ENTRY (CALL REMSPT).
  1864				IF DP IS NOT IN SPT, DECREMENT ATBUMC.
  1865				DECREMENT ATBMXW IF MAX WRITE IS ON FOR SLOT.
  1866				(NOTE %=CB, !=SAT)
  1867				@@;
  1868				EXTERNAL ATBSTS,ATPMXU,ATMMWC,ATBMWC
  1869				EXTERNAL LMPMXW,LMPSHR,GETSPT
  1870
  1871
  1872	002262'	260040	001342'	DECUNS::PUSHJ	P,GETCBR	;! GET CB WHILE MESSING WITH ATB AND SPT
  1873	002263'	325700	002266'		JUMPGE	P3,DECUN1	;%! IF SHARED, DON'T HAVE TO CHECK FOR SPT
  1874								;%! EVEN IF ITS ACTIVE UNSHARED CAN'T GUARANTEE
  1875								;%!  THAT IT DOESN'T HAVE AN SPT ENTRY,
  1876								;%!  ACTLMA DOESN'T CHECK - ONLY PAGE FAULT.
  1877	002264'	260040	000000*		PUSHJ	P,GETSPT	;%! GET SPT ENTRY ADDRESS IN T1 FOR SHARED SLOT.
  1878	002265'	254000	002271'		JRST	DECUN2		;%! AND GO SEE IF ANYONE ELSE IS REALLY USING IT.
  1879	002266'	200300	000015	DECUN1:	MOVE	T1,P2		;%! GET ATB ADDRESS IN T1 FOR SRCSPT
  1880	002267'	260040	002167'		PUSHJ	P,SRCSPT	;%! SEE IF IT HAS AN SPT ENTRY
  1881	002270'	254000	002301'		  JRST	DECUN3		;%! NO SPT ENTRY, JUST DECREMENT COUNTS
  1882	002271'	200406	002203*	DECUN2:	MOVE	T3,SPTUSC(T1)	;%! GET USE COUNT
  1883	002272'	602400	777777*		TRNE	T3,SPMUSC-1	;%! EQUAL TO 1? (CAN'T BE ZERO)
  1884	002273'	324740	001357'		PJRST	GIVCBR		;%! NO, JUST GIVE BACK CB AND GIVE NON SKIP RETURN.
  1885	002274'	260040	002131'		PUSHJ	P,REMSPT	;%! YES, GET RID OF ENTRY (MAYBE WHOLE SPT TABLE)
  1886	002275'	603700	002003*		TLNE	P3,LMPMXW	;%! MAX WRITABLE ON FOR THIS SLOT?
  1887	002276'	260040	002305'		PUSHJ	P,DECMXW	;%! YES, DECREMENT MAX WRITE COUNT
  1888	002277'	621700	000000*		TLZ	P3,LMPSHR	;%! SLOT NO LONGER SHARED (IF WAS AND WAS INACTIVE,
  1889								;%!  LMYSPT IS NOW GARBAGE.
  1890	002300'	254000	001356'		JRST	GIVCB1		;%! GIVE SKIP RETURN.
  1891
  1892	002301'	603700	002275*	DECUN3:	TLNE	P3,LMPMXW	;%! MAX WRITE ON?
  1893	002302'	260040	002305'		PUSHJ	P,DECMXW	;%! YES, DECREMENT MAX WRITE COUNT
  1894	002303'	260040	002226'		PUSHJ	P,DECUMC	;%! WASN'T IN SPT, DECREMENT ATBUMC, DRBCNT
  1895								;%! ETC.
  1896	002304'	324740	001356'		PJRST	GIVCB1		;%! AND RETURN.
  1897
  1898	002305'	370415	002005*	DECMXW:	SOS	T3,ATBMWC(P2)	;%! YES, DECREMENT IT
  1899	002306'	640400	002012*		TRC	T3,ATMMWC	;%! HAS IT OVERFLOWED?
  1900	002307'	646400	002306*		TRCN	T3,ATMMWC	;%!  (ALL BITS GO TO 1)
  1901	002310'	256000	002010'		 STOPCD (,XCT,FILAMO);;;%! YES, CRASH   ;;DECMXW+3
  1902	002311'	201440	002011*		MOVEI	T4,ATPMXU	;%! GET READY TO CLEAR MAX WRITE UP BIT
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 38-2
FILFND.MAC	28-OCT-87 00:07		UNSHARED MAP COUNT HANDLING

  1903	002312'	606400	002307*		TRNN	T3,ATMMWC	;%! COUNT STILL NON-ZERO?
  1904	002313'	412455	002013*		ANDCAM	T4,ATBSTS(P2)	;%! NOT ANYMORE, CLEAR THE BIT.
  1905	002314'	263040	000000		POPJ	P,		;%! RETURN.
  1906
  1907				;PRTATB - Print ATB that P2 points to for STOPCD typeout
  1908				;Modifies F and T1-T4
  1909
  1910	002315'	260040	000000*	PRTATB::PUSHJ	P,INLMES##
  1911	002316'	406510	235100		 ASCIZ	/ATB: /
	002317'	000000	000000
  1912	002320'	335015	000000*		SKIPGE	ATBDUM(P2)	;Dummy ATB?
  1913	002321'	254000	002325'		 JRST	PRTAT1		;Yes
  1914	002322'	550215	002252*		HRRZ	F,ATBFNB(P2)	;Point to FNB
  1915	002323'	550204	000640*		HRRZ	F,FNBDBL(F)	;Get first open DDB for this file
  1916	002324'	324740	000000*		PJRST	PRTDDB##	;Print DEV:FILE.EXT[P,Pn]
  1917
  1918	002325'	201315	000000*	PRTAT1:	MOVEI	T1,DABOFS-JBTDAB(P2)
  1919	002326'	231300	001766*		IDIVI	T1,DABSIZ	;Determine how far into JBTDAB it is
  1920	002327'	201106	000001		MOVEI	J,1(T1)		;Job number
  1921	002330'	260040	002315*		PUSHJ	P,INLMES##
  1922	002331'	503455	173302		 ASCIZ	/Private pages for frame /
	002332'	723124	070302
	002333'	637136	320314
	002334'	677444	063344
	002335'	607334	520000
  1923	002336'	324740	000000*		PJRST	PJOB##		;Output job number and CRLF
  1924
  1925	002337'	446353	420000		$END	(FND)

  1926	002340'	260040	000000*

  1927	002341'	465154	445557

  1928	002342'	000010	000000

  1929	002343'	253440	000275'

  1930	002344'	256000	000000'

  1931	002345'	000000*	000000*

  1932	002346'	550316	000300*

  1933	002347'	506304	000016

  1934	002350'	254000	000414'

  1935	002351'	000000*	000000*

  1936	002352'	000000*	000000*

  1937	002353'	000000*	000000*

FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 38-3
FILFND.MAC	28-OCT-87 00:07		UNSHARED MAP COUNT HANDLING

  1938	002354'	000000*	000000*

  1939	002355'	607540	000000*

  1940	002356'	254000	000654'

  1941	002357'	260040	001342'

  1942	002360'	254000	000627'

  1943	002361'	260040	000715'

  1944	002362'	254000	000511'

  1945	002363'	260040	002340*

  1946	002364'	465154	445565

  1947	002365'	000010	000000

  1948	002366'	000000*	000000*

  1949	002367'	000000*	000000*

  1950	002370'	000000*	000000*

  1951	002371'	260040	001034*

  1952	002372'	324740	001163'

  1953	002373'	376000	376001

  1954	002374'	260040	002363*

  1955	002375'	465154	415646

  1956	002376'	000010	000000

  1957	002377'	260040	002374*

  1958	002400'	465154	425646

  1959	002401'	000010	000000

  1960	002402'	000000	000000*

  1961	002403'	554351	001500*

  1962	002404'	254000	001470'

  1963	002405'	400000	000700

  1964	002406'	000000*	777777
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 38-4
FILFND.MAC	28-OCT-87 00:07		UNSHARED MAP COUNT HANDLING


  1965	002407'	060300	000011

  1966	002410'	262040	000015

  1967	002411'	254000	001752*

  1968	002412'	260040	002377*

  1969	002413'	465154	416442

  1970	002414'	000010	000000

  1971	002415'	260040	002412*

  1972	002416'	465154	544163

  1973	002417'	000010	000000

  1974	002420'	260040	002415*

  1975	002421'	465154	415557

  1976	002422'	400010	000000

  1977	002423'	000000	002315'

  1978	002424'	262040	000007

  1979	002425'	262040	000006

  1980	002426'	254000	001357'

  1981	002427'	260040	002420*

  1982	002430'	465154	634557

  1983	002431'	000010	000000

  1984	002432'	260040	002427*

  1985	002433'	465154	416557

  1986	002434'	400010	000000

  1987	002435'	000000	002315'

  1988	002436'	260040	002432*

  1989	002437'	465154	416565

  1990	002440'	400010	000000

FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 38-5
FILFND.MAC	28-OCT-87 00:07		UNSHARED MAP COUNT HANDLING

  1991	002441'	000000	002315'

  1992	002442'	260040	002436*

  1993	002443'	465154	416563

  1994	002444'	400010	000000

  1995	002445'	000000	002315'

  1996						;End of FILFND (FNDLIT: FNDEND:)
  1997
NO ERRORS DETECTED
PROGRAM BREAK IS 002446
8K CORE USED
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 39
FILFND.MAC	28-OCT-87 00:07		SYMBOL TABLE

ACTPPN		001604'	EXT	CMBLNK		001505'	EXT	DIE		002442'	EXT	FILATB		001755'	INT
AEFERR		000004	SIN	CMBNAM		001213'	EXT	DIRBLK		000760'	EXT	FILAUO		002214'	INT
ATBALP		000611'	EXT	CMBSIZ		001772'	EXT	DIRFST		001037'	EXT	FILAUS		002236'	INT
ATBCNT		000675'	EXT	CNVATB		001771'	INT	DIRNXT		001043'	EXT	FILAUU		002232'	INT
ATBDOR		001324'	EXT	CNVATP		001754'	INT	DIRSC1		000731'		FILBNF		001274'	INT
ATBDUM		002320'	EXT	CORBAS		001771'	EXT	DIRSC5		000734'		FILDMO		000062'	INT
ATBFNB		002322'	EXT	CORG5A		001442'		DIRSCE		000736'		FILDMU		000647'	INT
ATBLCW		000603'	EXT	CORG5B		001426'		DIRSR1		000722'		FILFND		000000'	ENT
ATBLNK		001337'	EXT	CORG5C		001434'		DIRSR2		000724'		FILLAS		001777'	INT
ATBMSC		000607'	EXT	CORG5D		001437'		DIRSRC		000717'	INT	FILRB1		000562'	
ATBMWC		002305'	EXT	CORG6A		001477'		DLTNAM		000754'	INT	FILRB2		000563'	
ATBPID		001711'	EXT	CORG6B		001456'		DLTNM1		000774'		FILRBD		000627'	
ATBPVW		000601'	EXT	CORG6C		001475'		DRBALC		000160'	EXT	FILSEO		002141'	INT
ATBRIB		000743'	EXT	CORG6D		001470'		DRBCNT		002243'	EXT	FNBALT		000613'	EXT
ATBSIZ		001156'	EXT	CORGR4		001406'		DRBFN1		000170'		FNBATB		001456'	EXT
ATBSPT		002233'	EXT	CORGR5		001414'		DRBFN2		000142'		FNBDBL		002323'	EXT
ATBSTS		002313'	EXT	CORGR6		001453'		DRBFN3		000171'		FNBDRB		002242'	EXT
ATBUMC		000000	EXT	CORGR9		001450'		DRBFNB		001414'	EXT	FNBEXT		002346'	EXT
ATMCNT		000000	EXT	CPOPJ		002173'	EXT	DRBFND		000201'		FNBLNK		002403'	EXT
ATMMWC		002312'	EXT	CPOPJ1		002411'	EXT	DRBLNK		001473'	EXT	FNBLOK		001462'	EXT
ATMUMC		002235'	EXT	CPOPJ2		001227'	EXT	DRBLOG		000211'	EXT	FNBNX		001465'	EXT
ATPALC		000000	EXT	CPOPK		001557'		DRBLOK		000013'	EXT	FNBRIB		000562'	EXT
ATPCRE		000466'	EXT	CPOPK1		001556'		DRBMXA		000163'	EXT	FNCAPP		001577'	EXT
ATPDEL		002254'	EXT	CREFNB		000230'		DRBNAM		000037'	EXT	FNCCPR		001661'	EXT
ATPDIR		000623'	EXT	CREMF0		000275'		DRBNX		000125'	EXT	FNCCRE		001553'	EXT
ATPDUM		000000	EXT	CREMFB		000274'		DRBRIB		001036'	EXT	FNCDEL		001574'	EXT
ATPMXU		002311'	EXT	CRESP0		002074'		DRBSTS		001423'	EXT	FNCEXC		001601'	EXT
ATPNDL		000625'	EXT	CRESP1		002113'		DRBUNM		000165'	EXT	FNCLOK		001602'	EXT
ATPREN		000470'	EXT	CRESPT		002072'		DRMCNT		001416'	EXT	FNCRED		001706'	EXT
ATPSUP		000526'	EXT	DABBIT		010000	SIN	DRPLOG		000201'	EXT	FNCUPD		001576'	EXT
ATPUMC		002207'	EXT	DABOFS		000000	EXT	DRPLOK		000030'	EXT	FNDDRB		001326'	INT
ATPUPD		000673'	EXT	DABSIZ		002326'	EXT	DRPMXC		002244'	EXT	FNDEND		002445'	INT
ATYPRV		001563'	EXT	DECMXW		002305'		DRPNX		000124'	EXT	FNDFNB		000235'	
CBADR		001354'	EXT	DECRM1		002022'		DRRSR1		000745'		FNDFR1		001021'	
CBAVAL		001364'	EXT	DECRM2		002025'		DRRSRC		000740'	INT	FNDFRE		001016'	
CBREQ		001363'	EXT	DECRM3		002032'		DRYPRV		001550'	EXT	FNDLIT		002337'	INT
CBSWT		001350'	EXT	DECRM4		002014'		ERRFB1		000673'		FNFERR		000000	SIN
CBUSER		001365'	EXT	DECRMV		001775'	INT	ERRFBM		000700'		FNPLOK		001460'	EXT
CBWAIT		001347'	EXT	DECUM0		002237'		ERRFNF		000707'		FNPNX		001464'	EXT
CHKACC		001741'	INT	DECUMC		002226'	INT	ERRFNM		000351'		FNYUFP		001133'	EXT
CHKHRF		001626'		DECUN1		002266'		ERRIPP		000652'		FREAT1		001253'	
CHKNAC		001612'		DECUN2		002271'		ERRNC1		000644'		FREATB		001252'	INT
CHKNR1		001672'		DECUN3		002301'		ERRNEC		000650'		GETAPG		001121'	EXT
CHKNRD		001661'		DECUNS		002262'	INT	ERRTR1		000663'		GETATB		002001'	EXT
CHKPID		001711'		DEVATB		001742'	EXT	ERRTRN		000654'		GETCBR		001342'	INT
CHKPRJ		001604'	INT	DEVBLK		001131'	EXT	F		000004	INT	GETCOR		001367'	
CHKPRV		001514'	INT	DEVDBL		001300'	EXT	FALAQA		001200'	EXT	GETCRL		001370'	
CHKWR1		001647'		DEVDRB		000634'	EXT	FBIT		001117'	EXT	GETDPA		002022'	EXT
CHKWRT		001635'		DEVEXT		000016	SIN	FBMERR		000003	SIN	GETER1		000741'	EXT
CHRMT		001701'		DEVFIL		000015	SIN	FCREQ		002075'	EXT	GETPTR		001720'	
CKNCRE		001561'		DEVIAD		000007	SIN	FCWAIT		000000	EXT	GETSPT		002264'	EXT
CKNUFD		001540'		DEVPPN		000017	SIN	FILAMO		002010'	INT	GETWDS		002076'	EXT
CMBLNK		001505'	EXT	DEVREL		000536'	EXT	FILANF		001255'	INT	GIVCB1		001356'	INT
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 39-2
FILFND.MAC	28-OCT-87 00:07		SYMBOL TABLE

GIVCBR		001357'	INT	JOB		001360'	EXT	REMSP1		002145'		SPTPNO		002176'	EXT
GIVPAG		001173'	EXT	JOBATB		001764'	INT	REMSP2		002161'		SPTRET		002064'	
GIVWDS		002164'	EXT	LICHR		000040	SIN	REMSPT		002131'	INT	SPTSIZ		002162'	EXT
GTCOR0		001371'		LICJAL		001000	SIN	RIBALP		000000	EXT	SPTUSC		002271'	EXT
GTCOR2		001505'		LICRMT		002000	SIN	RIBALT		000000	EXT	SPTVIR		000000	EXT
GTCOR3		001507'		LICWFL		000002	SIN	RIBCKD		001032'	EXT	SPYNFE		002042'	EXT
GUFBT		000032'	INT	LICWPJ		000001	SIN	RIBDIR		000755'	EXT	SRCAT		001216'	
GUFBT1		000035'		LKDATB		001314'	INT	RIBLCW		000000	EXT	SRCAT0		001221'	
GUFBT3		000042'		LM3SPB		002015'	EXT	RIBLST		000000	EXT	SRCATC		001230'	
INCUMC		002207'	INT	LM3SPO		002016'	EXT	RIBMSC		000000	EXT	SRCCF1		000503'	
INDPPN		000000	EXT	LM3SPT		002020'	EXT	RIBMXA		000000	EXT	SRCCFP		000502'	
INLMES		002330'	EXT	LMPACT		000000	EXT	RIBPFS		000000	EXT	SRCDEF		000473'	
INSEOF		001131'		LMPMXW		002301'	EXT	RIBPID		000000	EXT	SRCDFD		000531'	
INSFAK		001062'		LMPSHR		002277'	EXT	RIBPVW		000000	EXT	SRCDL0		000314'	
INSFER		001163'		LMPSUP		000000	EXT	RIBQTF		000000	EXT	SRCDLM		000313'	
INSFK2		001064'		LNKATB		001243'		RIBSIZ		000000	EXT	SRCDLP		000425'	
INSFK4		001074'		LOKPPB		000003'	INT	RIBSLF		000000	EXT	SRCDM1		000315'	
INSFQ2		001177'		M		000013	INT	RIBSTS		000000	EXT	SRCDMC		000324'	
INSFQO		001164'		MAPRDL		000570'	EXT	RIBUNM		000000	EXT	SRCDMD		000327'	
INSFR4		001175'		MAPRLS		000716'	EXT	RIBUSD		000000	EXT	SRCDMR		000435'	
INSGOT		001046'		MAPWLN		001101'	EXT	RIPDIR		000622'	EXT	SRCENT		000542'	
INSIAT		001157'		MAPWTL		001030'	EXT	RIPNDL		000624'	EXT	SRCENX		000455'	
INSL00		001124'		MAPXCH		002371'	EXT	RIYPRV		000166'	EXT	SRCFIL		000044'	INT
INSLK0		001125'		MFDPPN		001522'	EXT	RMTCHK		001732'		SRCFN0		000225'	
INSLNK		001111'		MFDRIB		000102'	EXT	RMVATB		001250'	INT	SRCFN1		000445'	
INSNAM		001000'	INT	MULCLN		000373'		S		000000	INT	SRCFNB		000220'	
INSNAT		001161'		NCSERR		000023'	EXT	S$DISK		000010	SIN	SRCFNI		000633'	
INSNL2		001041'		NECERR		000010	SIN	S$ENTR	777777	777775	SIN	SRCFNX		000443'	
INSNLP		001011'		NLKPPB		000011'	INT	S$EVEN		000006	SIN	SRCLK1		000632'	
INSNM0		001004'		NODIE		000000	EXT	S$HALT	777777	777777	SIN	SRCLL0		000402'	
INSNM1		001051'		OFSATP		000001	SIN	S$INFO		000005	SIN	SRCLL1		000414'	
INSNM4		001060'		P		000001	INT	S$NAME		000000'	SPD	SRCLU1		000261'	
INSNML		001026'		P1		000014	INT	S$NONA		000000	SIN	SRCLU2		000421'	
INSSP1		002040'		P2		000015	INT	S$PATC		000007	SIN	SRCMF0		000303'	
INSSP2		002044'		P3		000016	INT	S$TEMP	777776	000000	SPD	SRCMFB		000302'	
INSSP3		002052'		P4		000017	INT	S$XCT	777777	777776	SIN	SRCNAM		001202'	INT
INSSP4		002056'		PCDTIM		000000	EXT	SAVE2		001775'	EXT	SRCNM0		001205'	
INSSPT		002034'	INT	PG		000003	INT	SAVE4		000044'	EXT	SRCNM1		001203'	
INSXAT		001152'		PIDACC		001714'	EXT	SNFERR		000016'	EXT	SRCNMC		001210'	
IO		000020	SIN	PJOB		002336'	EXT	SP4BAS		002131'	EXT	SRCNU1		000126'	
IOSALC		001073'	EXT	PJOBN		001515'	EXT	SP4OFS		002132'	EXT	SRCNU2		000140'	
IOSRBE		001111'	EXT	PJRST	324740	000000		SPLPPN		000210'	EXT	SRCNU3		000137'	
IOSRIB		001113'	EXT	PPBBIT		000015'		SPMNFE		002142'	EXT	SRCNUF		000121'	
IPPERR		000001	SIN	PRMCHK		000571'	EXT	SPMUSC		002026'	EXT	SRCNX0		000453'	
J		000002	INT	PRTAT1		002325'		SPNBAS		000000	EXT	SRCNX1		000466'	
JB1ATB		001765'		PRTATB		002315'	INT	SPNNFE		000000	EXT	SRCSP0		000511'	
JBTAUN		001720'	EXT	PRTDDB		002324'	EXT	SPTATB		002152'	EXT	SRCSP1		000526'	
JBTDAB		000000	EXT	PTRLEN		000000	EXT	SPTBLN		002151'	EXT	SRCSP2		002176'	
JBTFPN		001735'	EXT	RBMASK		002167'	EXT	SPTEN1		002175'	EXT	SRCSP3		002200'	
JBTLIC		001733'	EXT	RBREAL		001002'	EXT	SPTLNK		002172'	EXT	SRCSP4		002202'	
JBTPPN		001722'	EXT	RELLOK		000715'	INT	SPTNFE		002137'	EXT	SRCSP5		002205'	
JBYRPT		001614'	EXT	RELRB2		001177'	EXT	SPTNME		000000	EXT	SRCSPA		002172'	
JBYWPT		001647'	EXT	RELRIB		001134'	EXT	SPTNMM		002120'	EXT	SRCSPT		002167'	INT
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88 PAGE 39-3
FILFND.MAC	28-OCT-87 00:07		SYMBOL TABLE

SRCSUP		000505'		
SRCULP		000105'		
SYSCOR		001506'	EXT	
SYSDOR		001373'	EXT	
SYSDRB		001445'	EXT	
SYSPPN		000207'	EXT	
T1		000006	INT	
T2		000007	INT	
T3		000010	INT	
T4		000011	INT	
TPOPJ		001452'	EXT	
TPOPJ1		001513'	EXT	
TRNERR		000006	SIN	
TRNSTB		001574'		
TSTWRL		001335'		
TSTWRS		001331'	INT	
TSTWRT		001332'	INT	
UFDATB		000540'	EXT	
UFDEXT		000000	EXT	
UFDLNK		000000	EXT	
UFDLST		011471	SPD	
UFDNAM		000000	EXT	
UFDRIB		000000	EXT	
UFDSIZ		000000	EXT	
UFRXCR		001555'	EXT	
UFRXLK		001561'	EXT	
UFRXRD		001535'	EXT	
ULDAT1		001311'		
ULDATB		001302'		
ULKDB0		001270'		
ULKDB1		001276'		
ULKDBL		001267'	INT	
UPTPID		000000	EXT	
UUOENT		000000	EXT	
UUOIRE		002355'	EXT	
UUOLUK		000660'	EXT	
UUOMLK		000762'	EXT	
UUOREN		000704'	EXT	
UUOUFD		001524'	EXT	
%RB2		375000	SIN	
%RB2.C		001027'	EXT	
%RIB		376000	SIN	
%RIB.C		001100'	EXT	
%UPT		000000	EXT	

FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

ACTPPN	    37%	  1299
AEFERR	   688
ATBALP	    40%	   618
ATBCNT	    40%	   367	   429	   472	   504	   517	   545	   583	   665	   666	   679
ATBDOR	    40%	   368	   578	  1011	  1053	  1054	  1055	  1059	  1060	  1061	  1069	  1074	  1075	  1078
ATBDUM	  1778%	  1781	  1818	  1912
ATBFNB	    40%	   998	  1094	  1142	  1777%	  1790	  1831	  1842	  1914
ATBLCW	    40%	   552	   553	   612
ATBLNK	    40%	   908	   975	  1000	  1016	  1017	  1023	  1025	  1098
ATBMSC	    40%	   616
ATBMWC	    76%	  1511	  1868%	  1898
ATBPID	    41%	   614	  1352	  1380
ATBPVW	    41%	   550	   551	   610
ATBRIB	    41%	   376	   541	   605	   608	   739
ATBSIZ	    41%	   624	   907
ATBSPT	  1568%	  1577	  1640	  1648	  1654	  1657	  1681%	  1709	  1739%	  1744	  1825
ATBSTS	    41%	   513	   526	   544	   557	   585	   631	   664	   678	   903	   971	   973	  1096	  1518
	  1818	  1868%	  1904
ATBUMC	  1777%	  1781	  1818
ATMCNT	    42%	   430	   473	   507	   516	   546	   667	   680	  1837
ATMMWC	    76%	  1512	  1513	  1517	  1868%	  1899	  1900	  1903
ATMUMC	   430	   473	   507	   516	   546	   667	   680	  1777%	  1784	  1788	  1822	  1823	  1827	  1829
ATPALC	    43%
ATPCRE	    42%	   363	   430	   473	   507	   516	   523	   546	   574	   667	   680	   904	  1092	  1093
	  1837
ATPDEL	    42%	   362	   573	   904	  1844
ATPDIR	    42%	   628
ATPDUM	    76%	  1788	  1829
ATPMXU	    76%	   430	   473	   507	   516	   546	   574	   667	   680	  1093	  1516	  1837	  1868%	  1902
ATPNDL	    42%	   630
ATPREN	    42%	   363	   430	   473	   507	   516	   525	   546	   574	   667	   680	   904	  1092	  1093
	  1837
ATPSUP	    42%	   362	   430	   473	   507	   516	   546	   556	   574	   667	   680	   904	  1092	  1093
	  1837
ATPUMC	  1777%	  1780	  1817
ATPUPD	    42%	   430	   473	   507	   512	   516	   543	   546	   574	   584	   662	   667	   677	   680
	   904	  1092	  1093	  1837
ATYPRV	    44%	  1244	  1257	  1276
CBADR	    38%	  1113
CBAVAL	    21%	  1123
CBREQ	    21%	  1107	  1122
CBSWT	    21%	  1109
CBUSER	    38%	  1104	  1110	  1119	  1124
CBWAIT	    21%	  1108
CHKACC	    32	  1423#
CHKHRF	  1312	  1319#
CHKNAC	  1300	  1303	  1306#
CHKNR1	  1353	  1361#
CHKNRD	  1307	  1348#
CHKPID	  1370	  1380#
CHKPRJ	  1247	  1261	  1299#	  1425
CHKPRV	    33	  1235#
CHKWR1	  1327	  1332	  1337#
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

CHKWRT	  1316	  1321	  1324	  1327#	  1349	  1355	  1360	  1366
CHRMT	  1341	  1345	  1369#
CKNCRE	  1268	  1274#
CKNUFD	  1239	  1242	  1256#
CMBLNK	    46%	   170	   949	   955	  1027	  1220
CMBNAM	    46%	   946	   954
CMBSIZ	  1225	  1441%	  1452	  1470
CNVATB	  1467	  1469#
CNVATP	  1446#
CORBAS	  1441%	  1453	  1469
CORG5A	  1160	  1163	  1179#	  1218
CORG5B	  1165#	  1171
CORG5C	  1167	  1173#
CORG5D	  1176#	  1208
CORG6A	  1195	  1199	  1212#
CORG6B	  1194#	  1214
CORG6C	  1202	  1210#
CORG6D	  1204#	  1216
CORGR4	  1138	  1149#
CORGR5	  1155#	  1184
CORGR6	  1156	  1191#
CORGR9	  1153	  1185#
CPOPJ	    23%	   461	   724	   738	   951	  1746
CPOPJ1	    21%	   174	   718	   726	   745	   803	   842	   866	   947	   985	  1100	  1382	  1427	  1433
CPOPJ2	    21%	   977
CPOPK	  1253	  1271#	  1275	  1283
CPOPK1	  1248	  1254	  1262	  1270#	  1284
CREFNB	   341	   348	   351#
CREMF0	   388#	   390
CREMFB	   354	   387#
CRESP0	  1630#
CRESP1	  1641	  1650#
CRESPT	  1580	  1628#
DABBIT	  1443#	  1449
DABOFS	  1441%	  1461	  1918
DABSIZ	  1441%	  1460	  1919
DECMXW	  1887	  1893	  1898#
DECRM1	  1519	  1526#
DECRM2	  1524	  1529#
DECRM3	  1528	  1535#
DECRM4	  1510	  1519#
DECRMV	  1501#
DECUM0	  1826	  1829#
DECUMC	  1535	  1589	  1646	  1713	  1817#	  1894
DECUN1	  1873	  1879#
DECUN2	  1878	  1882#
DECUN3	  1881	  1892#
DECUNS	  1872#
DEVATB	    48%	   637	   850	   876	  1424
DEVBLK	    50%	   834	   854	   886
DEVDBL	    48%	   644	  1035	  1036	  1043	  1044	  1045
DEVDRB	    48%	   638
DEVEXT	   247	   257	   282	   318	   339	   374	   402	   405	   421	   432	   440	   459	   468	   711
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

	  1237
DEVFIL	   246	   253	   286	   322	   336	   385	   454	   710	  1246
DEVIAD	  1359	  1384
DEVPPN	   232	   252	   255	   287	   323	   328	   899	  1240	  1256
DEVREL	    50%	   565
DEVRIB	    48%	   295	   297	   592	   596
DIE	    11	    11%	    12	   241	   651	  1019	  1040	  1447	  1504	  1514	  1692	  1785	  1824	  1828
DIRBLK	    92%	   759
DIRFST	    91%	   259	   485	   791	   822
DIRNXT	    91%	   270	   498	   795	   826
DIRSC1	   713	   720#
DIRSC5	   723#
DIRSCE	   717	   725#
DIRSR1	   712#	   715
DIRSR2	   714#	   722
DIRSRC	    33	   268	   496	   709#	   762
DLTNAM	   751	   755#
DLTNM1	   767	   771#
DRBALC	    52%	   198	   308
DRBCNT	    52%	   239	   280	   649	   670	   682	   692	  1159	  1777%	  1792	  1833
DRBFN1	   266	   303	   316#
DRBFN2	   269	   294#
DRBFN3	   277	   317#
DRBFNB	    52%	   337	   338	   898	  1155	  1191
DRBFND	   244	   327#
DRBLNK	    52%	   193	   194	   231	  1164	  1165	  1174	  1175	  1179	  1207
DRBLOG	    52%	   332	   335
DRBLOK	    53%	   116	   118	   137
DRBMXA	    52%	   311
DRBNAM	    53%	   196
DRBNX	    52%	   236	   263	   279
DRBRIB	    53%	   243	   265	   276	   302	   305	   483	   790	   812	   821
DRBSTS	    53%	  1162
DRBUNM	    53%	   313
DRMCNT	    54%	  1157
DRPLOG	    54%	   327	  1161
DRPLOK	    54%	   173	  1161
DRPMXC	    54%	   240	   650	   671	   683	   693	  1777%	  1793	  1834
DRPNX	    54%	   235	   262	   278
DRRSR1	   742#	   747
DRRSRC	   736#
DRYPRV	    55%	   315	  1264
ERRFB1	   540	   677#
ERRFBM	   576	   682#
ERRFNF	   434	   439	   448	   510	   691#
ERRFNM	   361	   365	   438#
ERRIPP	   237	   288	   656#
ERRNC1	   351	   366	   520	   549	   577	   648#
ERRNEC	   234	   653#
ERRTR1	   515	   666#
ERRTRN	   600	   659#
F	   232	   246	   247	   252	   253	   255	   257	   282	   286	   287	   295	   297	   318	   322
	   323	   328	   336	   339	   374	   385	   402	   405	   421	   432	   440	   454	   459	   468
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

	   565	   592	   596	   637	   638	   642	   643	   644	   710	   711	   834	   850	   854	   876	   886
	   899	  1037	  1043	  1045	  1112	  1237	  1240	  1246	  1256	  1359	  1384	  1424	  1914	  1915
FALAQA	    89%	   915	   928
FBIT	   849%	   849	   875
FBMERR	   686
FCREQ	  1571%	  1631
FCWAIT	  1571%
FILAMO	  1514#	  1901
FILANF	  1019#
FILATB	  1447#
FILAUO	  1785#
FILAUS	  1828#
FILAUU	  1824#
FILBNF	  1040#
FILDMO	   241#	  1794
FILDMU	   651#	   672	   684	   694	  1835
FILFND	    11	    12#	    15
FILLAS	  1504#
FILRB1	   542	   591#
FILRB2	   379	   592#
FILRBD	   602	   606	   632#
FILSEO	  1692#
FNBALT	    57%	   620
FNBATB	    57%	   902	   968	   999	  1001	  1016	  1095	  1194
FNBDBL	    57%	   641	   642	  1035	  1915
FNBDRB	    57%	   352	  1777%	  1791	  1832
FNBEXT	    57%	   342	   355	   392	   467
FNBLNK	    57%	   337	  1191	  1204	  1205	  1213	  1215
FNBLOK	    57%	   979	   983	  1198
FNBNX	    57%	   360	   408	   491	   534	   581	  1201
FNBRIB	    58%	   378	   410	   493	   530	   561	   564	   586	   591
FNCAPP	    62%	  1286
FNCCPR	    62%	  1286	  1331	  1348
FNCCRE	    62%	  1267
FNCDEL	    62%	  1286
FNCEXC	    62%	  1286
FNCLOK	    62%	  1251	  1286
FNCRED	    62%	  1286	  1306	  1374
FNCUPD	    62%	  1286
FNDDRB	    34	  1084#
FNDEND	  1996#
FNDFNB	   346	   356#	   393	   400
FNDFR1	   805#	   808
FNDFRE	   793	   802#	   824
FNDLIT	  1925#
FNFERR	   696
FNPLOK	    59%	   978	   982	  1196
FNPNX	    59%	   359	   435	   488	   532	   580	  1200
FNYUFP	    60%	   566	   758	   835	   855	   888
FREAT1	  1017#	  1024
FREATB	    32	   431	   474	   509	   669	   681	  1016#	  1845
GETAPG	    92%	   851	   877
GETATB	  1498%	  1507
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

GETCBR	    33	   167	   229	   261	   275	   290	   301	   487	   529	   560	   601	   604	   659	   892
	  1102#	  1506	  1576	  1872
GETCOR	   519	   548	   980	  1133#
GETCRL	   952	  1134#
GETDPA	  1498%	  1526
GETER1	    91%	   716	   723	   737
GETPTR	  1249	  1263	  1392#	  1429
GETSPT	  1869%	  1877
GETWDS	  1569%	  1632
GIVCB1	    33	   119	   640	   645	  1116#	  1533	  1536	  1890	  1896
GIVCBR	    33	   117	   138	   172	   245	   267	   484	   495	   594	   654	   657	   675	   689	   697
	   910	  1117#	  1531	  1609	  1635	  1884
GIVPAG	    89%	   839	   922
GIVWDS	  1681%	  1719
GTCOR0	  1135#	  1146
GTCOR2	  1136	  1220#
GTCOR3	  1147	  1178	  1222#
GUFBT	    33	   191#
GUFBT1	   194#	   197
GUFBT3	   195	   199#
INCUMC	  1780#
INDPPN	    37%	  1363	  1396
INLMES	  1910%	  1910	  1921%	  1921
INSEOF	   882	   886#
INSFAK	   823	   844#
INSFER	   818	   845	   870	   884	   914#
INSFK2	   846#	   872	   911
INSFK4	   847	   854#
INSFQ2	   852	   927#
INSFQO	   878	   915#
INSFR4	   920	   924#
INSGOT	   825	   830#
INSIAT	   905	   908#
INSL00	   874	   880#
INSLK0	   881#	   883
INSLNK	   827	   869#
INSNAM	   783#
INSNAT	   897	   901	   910#
INSNL2	   824#	   828
INSNLP	   793#	   797
INSNM0	   783	   788#
INSNM1	   794	   834#
INSNM4	   837	   841#
INSNML	   792	   796	   812#
INSSP1	  1579#	  1582
INSSP2	  1587#
INSSP3	  1596#	  1598
INSSP4	  1597	  1604#	  1666
INSSPT	  1573#
INSXAT	   903#	   909
IO	   228	   755	   789
IOSALC	    92%	   848	   853
IOSRBE	    90%	   228	   324	   503	   514	   533	   725	   844	   869
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

IOSRIB	    88%	   228	   635	   820	   871
IPPERR	   656
J	  1235	  1236	  1271	  1302	  1313	  1319	  1322	  1328	  1342	  1361	  1392	  1394	  1408	  1410
	  1458	  1920
JB1ATB	  1450	  1459#
JBTAUN	    22%	  1313	  1342	  1392
JBTDAB	  1441%	  1461	  1918
JBTFPN	    21%	  1322	  1410
JBTLIC	    22%	  1302	  1319	  1328	  1408
JBTPPN	    22%	   192	   330	  1361	  1394
JBYRPT	    22%	  1308
JBYWPT	    22%	  1337
JOB	    22%	   191	   329	  1103	  1118
JOBATB	  1458#
LICHR	  1320
LICJAL	  1301	  1329
LICRMT	  1407
LICWFL	  1333	  1334
LICWPJ	  1333	  1334
LISTSN	     3	     6
LKDATB	    33	  1069#	  1843
LM3SPB	  1498%	  1520
LM3SPO	  1498%	  1521
LM3SPT	    76%	  1523
LMPACT	  1498%	  1502
LMPMXW	    76%	  1509	  1869%	  1886	  1892
LMPSHR	  1869%	  1888
LMPSUP	    77%	  1502
LNKATB	   522	   555	   988	   998#
LOKPPB	    32	   114#
M	   248	   284	   320	   343	   353	   357	   370	   380	   438	   457	   489	   505	   524	   537
	   539	   599	   632	   639	   663	   687	   761	  1243
MAPRDL	    88%	   298	   597
MAPRLS	    90%	   701
MAPWLN	    90%	   859
MAPWTL	    90%	    92%	   814
MAPXCH	    92%	   815	   817	   819
MFDPPN	    37%	   254	   331	   895	  1241
MFDRIB	   258%	   258
MULCLN	   457#	   593	   636	   648	   660	   691
NCSERR	    91%	   168
NECERR	   653
NLKPPB	    32	   135#
NODIE	    11%
OFSATP	  1444#	  1451	  1471
P	    12	   114	   135	   136	   165	   167	   171	   200	   229	   233	   241	   245	   246	   251
	   259	   261	   267	   268	   270	   275	   281	   285	   290	   291	   296	   298	   299	   301
	   316	   317	   321	   340	   347	   364	   369	   431	   458	   462	   463	   474	   475	   477
	   480	   484	   485	   487	   495	   496	   498	   502	   509	   519	   522	   529	   536	   548
	   555	   560	   567	   575	   579	   593	   594	   597	   598	   601	   604	   633	   636	   648
	   651	   659	   660	   661	   669	   681	   691	   716	   723	   737	   740	   743	   748	   756
	   759	   760	   762	   788	   791	   793	   795	   806	   814	   815	   816	   817	   819	   822
	   824	   826	   830	   831	   832	   836	   838	   839	   840	   841	   846	   851	   859	   864
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

	   873	   877	   879	   889	   892	   896	   900	   910	   916	   917	   918	   919	   921	   922	   923
	   924	   925	   927	   929	   952	   953	   956	   972	   980	   986	   987	  1002	  1012	  1019
	  1029	  1040	  1046	  1062	  1079	  1097	  1102	  1108	  1111	  1116	  1117	  1134	  1139	  1140
	  1143	  1144	  1145	  1149	  1177	  1185	  1192	  1206	  1217	  1235	  1247	  1249	  1261	  1263
	  1270	  1271	  1272	  1304	  1310	  1317	  1325	  1330	  1335	  1336	  1339	  1346	  1364	  1365
	  1367	  1369	  1376	  1385	  1386	  1397	  1401	  1409	  1412	  1413	  1423	  1425	  1426	  1428
	  1429	  1434	  1447	  1454	  1463	  1472	  1504	  1506	  1507	  1514	  1526	  1527	  1532	  1535
	  1576	  1587	  1589	  1591	  1608	  1609	  1619	  1628	  1629	  1632	  1633	  1634	  1636	  1637
	  1644	  1646	  1649	  1692	  1694	  1711	  1713	  1714	  1716	  1719	  1720	  1721	  1762	  1782
	  1785	  1787	  1789	  1796	  1824	  1828	  1830	  1839	  1840	  1841	  1846	  1847	  1848	  1849
	  1872	  1877	  1880	  1885	  1887	  1893	  1894	  1905	  1910	  1921
P1	   115	   162	   163	   168	   388	   389	   392	   396	   397	   398
P2	   116	   118	   137	   166	   173	   367	   368	   373	   376	   416	   420	   429	   463	   471
	   472	   478	   504	   513	   517	   521	   526	   541	   544	   545	   550	   552	   554	   557
	   578	   583	   585	   605	   608	   610	   612	   614	   616	   618	   624	   631	   637	   664
	   665	   666	   678	   679	   739	   970	   974	   977	   984	   998	  1000	  1001	  1011	  1021
	  1027	  1028	  1053	  1061	  1069	  1073	  1075	  1078	  1094	  1139	  1141	  1142	  1145	  1352
	  1380	  1423	  1424	  1426	  1428	  1508	  1511	  1518	  1587	  1588	  1591	  1644	  1645	  1647
	  1649	  1711	  1712	  1714	  1782	  1783	  1787	  1818	  1825	  1831	  1842	  1879	  1898	  1904
	  1912	  1914	  1918
P3	   356	   360	   372	   378	   384	   415	   419	   453	   462	   466	   467	   470	   475	   477
	   478	   479	   491	   493	   530	   534	   561	   564	   581	   586	   591	   620	   641	   642
	   968	   979	   983	   998	   999	  1001	  1016	  1035	  1140	  1142	  1144	  1149	  1150	  1151
	  1152	  1153	  1154	  1155	  1158	  1159	  1162	  1166	  1173	  1174	  1175	  1176	  1177	  1179
	  1180	  1181	  1183	  1185	  1191	  1203	  1207	  1211	  1212	  1502	  1509	  1519	  1841	  1842
	  1847	  1873	  1886	  1888	  1892
P4	   238	   239	   243	   263	   265	   276	   279	   280	   302	   305	   308	   311	   313	   332
	   335	   337	   338	   352	   483	   638	   649	   670	   682	   692	   790	   812	   821
PCDTIM	    78%
PG	   595	   700	   813	   838	   840	   858	   921	   923
PIDACC	    49%	  1358	  1383
PJOB	  1923%	  1923
PJOBN	    22%	  1236
PPBBIT	   114	   135	   162#
PRMCHK	    91%	   299	   598
PRTAT1	  1913	  1918#
PRTATB	  1514	  1785	  1824	  1828	  1910#
PRTDDB	  1916%	  1916
PTRLEN	    65%
RBMASK	    70%	   784	  1571%	  1573	  1739%	  1741
RBREAL	    70%	   784	   785
RELLOK	    32	   291	   296	   316	   502	   536	   633	   661	   700#	   757	   764	   774
RELRB2	    70%	   831	   864	   918	   927
RELRIB	    70%	   889
REMSP1	  1699#
REMSP2	  1710	  1716#
REMSPT	  1532	  1683#	  1885
RIBALP	    67%	   617	   860
RIBALT	    68%	   619
RIBCKD	    92%	   816
RIBDIR	    92%	   756
RIBLCW	    67%	   611
RIBLST	    70%	   880
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

RIBMSC	    67%	   615
RIBMXA	    67%	   310
RIBPFS	    70%	   856	   880	   881
RIBPID	    68%	   613
RIBPVW	    67%	   609
RIBQTF	    67%	   306	   309
RIBSIZ	    67%	   621	   891
RIBSLF	    67%	   304	   607
RIBSTS	    68%	   626
RIBUNM	    68%	   312
RIBUSD	    68%	   307
RIPDIR	    69%	   627
RIPNDL	    69%	   629
RIYPRV	    70%	   314
RMTCHK	  1365	  1369	  1407#
RMVATB	    32	  1011#	  1143
S	   228	   324	   503	   514	   533	   635	   725	   755	   789	   820	   844	   848	   853	   869
	   871
S$DISK	   241	   242	   391	   651	   652	   786	   809	  1019	  1020	  1040	  1041	  1070	  1105	  1120
	  1169	  1447	  1448	  1504	  1505	  1514	  1515	  1574	  1599	  1692	  1693	  1742	  1785	  1786
	  1824	  1825	  1828	  1829
S$ENTR	    11	    17	   242	   391	   652	   672	   684	   694	   786	   809	  1020	  1041	  1070	  1105
	  1120	  1169	  1448	  1505	  1515	  1574	  1599	  1693	  1742	  1786	  1794	  1825	  1829	  1835
	  1901
S$EVEN	   241	   651	  1019	  1040	  1447	  1504	  1514	  1692	  1785	  1824	  1828
S$HALT	    11	   241	   391	   651	   672	   684	   694	   786	   809	  1019	  1040	  1070	  1105	  1120
	  1169	  1447	  1504	  1514	  1574	  1599	  1692	  1742	  1785	  1794	  1824	  1828	  1835	  1901
S$INFO	   241	   651	  1019	  1040	  1447	  1504	  1514	  1692	  1785	  1824	  1828
S$NAME	    15#	   391	   786	   809	  1070	  1105	  1120	  1169	  1574	  1599	  1742
S$NONA	    14	    17	   242	   391	   652	   673	   685	   695	   786	   809	  1020	  1041	  1070	  1105
	  1120	  1169	  1448	  1505	  1515	  1574	  1599	  1693	  1742	  1786	  1795	  1825	  1829	  1836
	  1902
S$PATC	   241	   651	  1019	  1040	  1447	  1504	  1514	  1692	  1785	  1824	  1828
S$TEMP	    11#	    11	   241#	   241	   391#	   391	   651#	   651	   672#	   672	   684#	   684	   694#	   694
	   786#	   786	   809#	   809	  1019#	  1019	  1040#	  1040	  1070#	  1070	  1105#	  1105	  1120#	  1120
	  1169#	  1169	  1447#	  1447	  1504#	  1504	  1514#	  1514	  1574#	  1574	  1599#	  1599	  1692#	  1692
	  1742#	  1742	  1785#	  1785	  1794#	  1794	  1824#	  1824	  1828#	  1828	  1835#	  1835	  1901#	  1901
S$XCT	    17	   242	   391	   652	   672	   673	   684	   685	   694	   695	   786	   809	  1020	  1041
	  1070	  1105	  1120	  1169	  1448	  1505	  1515	  1574	  1599	  1693	  1742	  1786	  1794	  1795
	  1825	  1829	  1835	  1836	  1901	  1902
SAVE2	    76%	  1501
SAVE4	    22%	   227
SNFERR	    91%	   163
SP4BAS	  1680%	  1683
SP4OFS	  1680%	  1684
SPLPPN	    37%	   334
SPMNFE	  1681%	  1691	  1693
SPMUSC	  1499%	  1530	  1883
SPNBAS	  1569%	  1616
SPNNFE	  1570%
SPTATB	  1569%	  1651	  1681%	  1708
SPTBLN	  1570%	  1653	  1656	  1681%	  1698	  1703
SPTEN1	  1498%	  1522	  1568%	  1569%	  1593	  1615	  1661	  1662	  1664	  1665	  1680%	  1686	  1739%	  1749
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

SPTLNK	  1568%	  1577	  1579	  1651	  1654	  1681%	  1699	  1700	  1739%	  1744	  1745
SPTNFE	  1569%	  1607	  1656	  1690
SPTNME	  1568%	  1594	  1664	  1747
SPTNMM	  1569%	  1655
SPTPNO	  1568%	  1604	  1680%	  1689	  1739%	  1750
SPTRET	  1614#	  1763
SPTSIZ	  1569%	  1630	  1681%	  1717
SPTUSC	  1498%	  1529	  1568%	  1596	  1606	  1680%	  1688	  1760	  1882
SPTVIR	  1680%	  1688
SPYNFE	  1568%	  1581	  1739%
SRCAT	   364	   575	   968#
SRCAT0	   971#	   976
SRCATC	   969	   978#
SRCCF1	   531	   537#
SRCCFP	   417	   494	   536#	   562	   571
SRCDEF	   486	   499	   529#
SRCDFD	   497	   560#
SRCDL0	   406#	   436
SRCDLM	   405#	   490
SRCDLP	   487#	   500
SRCDM1	   407#	   412
SRCDMC	   411	   415#
SRCDMD	   409	   419#
SRCDMR	   413	   495#
SRCENT	   358	   573#
SRCENX	   514#	   582
SRCFIL	    33	   227#
SRCFN0	   347#	   386	   403	   455
SRCFN1	   504#	   535
SRCFNB	   342#	   349
SRCFNI	   527	   558	   637#
SRCFNX	   492	   502#
SRCLK1	   377	   636#
SRCLL0	   464#	   476
SRCLL1	   469	   476#
SRCLU1	   371	   376#	   538
SRCLU2	   381	   383	   451	   483#	   588
SRCMF0	   396#	   401
SRCMFB	   344	   395#
SRCNAM	    32	   171	   233	   340	   896	   900	   945#	  1086
SRCNM0	   347	   948#
SRCNM1	   946#	   950
SRCNMC	   945	   951#
SRCNU1	   280#	   292
SRCNU2	   264	   291#
SRCNU3	   290#	   300
SRCNUF	   260	   271	   275#
SRCNX0	   506	   512#
SRCNX1	   518	   523#
SRCSP0	   543#	   634
SRCSP1	   547	   556#
SRCSP2	  1750#	  1752
SRCSP3	  1752#	  1761
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

SRCSP4	  1751	  1759#
SRCSP5	  1759	  1762#
SRCSPA	  1745#	  1753
SRCSPT	  1527	  1741#	  1880
SRCSUP	   539#	   587
SRCULP	   261#	   272
SYSCOR	    72%	  1026	  1028	  1135	  1221
SYSDOR	    72%	  1055	  1059	  1072	  1073	  1074	  1137
SYSDRB	    72%	   169	   170	   193	   230	   231	   893	  1084	  1150	  1152	  1154	  1164	  1176	  1181
	  1182
SYSPPN	    37%	   333
T1	   162	   164	   166	   232	   239	   240	   247	   249	   250	   251	   252	   253	   254	   255
	   256	   257	   258	   262	   263	   278	   279	   281	   282	   283	   285	   286	   287	   294
	   295	   297	   304	   305	   306	   307	   308	   309	   310	   311	   312	   313	   314	   315
	   317	   318	   319	   321	   322	   323	   327	   332	   335	   336	   359	   360	   362	   378
	   382	   383	   385	   408	   421	   422	   424	   428	   429	   430	   435	   440	   441	   443
	   447	   449	   452	   454	   464	   465	   466	   467	   468	   470	   471	   472	   473	   483
	   488	   491	   504	   507	   512	   513	   516	   517	   523	   525	   526	   532	   534	   543
	   544	   545	   546	   550	   551	   552	   553	   556	   557	   563	   564	   565	   566	   573
	   580	   581	   584	   585	   591	   592	   596	   607	   608	   609	   610	   611	   612	   613
	   614	   615	   616	   617	   618	   619	   620	   621	   622	   623	   624	   625	   628	   630
	   631	   641	   643	   644	   649	   650	   653	   656	   662	   664	   665	   666	   667	   670
	   671	   674	   677	   678	   679	   680	   682	   683	   686	   688	   692	   693	   696	   710
	   712	   717	   724	   738	   739	   744	   758	   768	   769	   770	   772	   773	   790	   812
	   821	   834	   835	   849	   854	   855	   856	   857	   862	   863	   875	   880	   881	   883
	   886	   887	   888	   890	   891	   895	   899	   903	   904	   906	   907	   924	   928	   946
	   954	   973	   978	   979	   982	   983	   999	  1000	  1016	  1017	  1022	  1025	  1026	  1027
	  1036	  1037	  1039	  1043	  1044	  1053	  1054	  1055	  1057	  1058	  1059	  1060	  1072	  1074
	  1075	  1076	  1077	  1078	  1102	  1103	  1104	  1110	  1111	  1112	  1113	  1117	  1118	  1119
	  1134	  1157	  1159	  1161	  1162	  1164	  1165	  1168	  1175	  1194	  1195	  1196	  1198	  1200
	  1201	  1204	  1205	  1220	  1221	  1223	  1224	  1225	  1251	  1267	  1282	  1306	  1331	  1348
	  1375	  1432	  1446	  1449	  1451	  1452	  1453	  1458	  1459	  1460	  1461	  1469	  1470	  1471
	  1508	  1520	  1522	  1529	  1577	  1588	  1593	  1594	  1596	  1598	  1604	  1606	  1614	  1617
	  1628	  1634	  1638	  1640	  1645	  1647	  1648	  1650	  1654	  1657	  1665	  1683	  1685	  1686
	  1688	  1689	  1708	  1709	  1712	  1717	  1744	  1747	  1749	  1750	  1752	  1760	  1781	  1783
	  1790	  1817	  1818	  1822	  1823	  1827	  1829	  1837	  1844	  1879	  1882	  1918	  1919	  1920
T2	   116	   118	   137	   169	   172	   191	   192	   193	   194	   195	   196	   198	   199	   230
	   234	   236	   238	   294	   328	   330	   331	   333	   334	   338	   342	   351	   352	   355
	   356	   384	   392	   407	   408	   410	   415	   416	   419	   420	   422	   423	   424	   425
	   427	   428	   441	   442	   443	   444	   446	   447	   448	   449	   450	   453	   520	   521
	   549	   551	   553	   554	   563	   626	   627	   629	   709	   712	   714	   715	   720	   721
	   736	   742	   744	   746	   747	   765	   766	   768	   769	   783	   784	   785	   788	   804
	   805	   807	   808	   830	   832	   836	   837	   841	   846	   847	   856	   857	   865	   873
	   879	   893	   898	   902	   903	   907	   908	   909	   914	   915	   916	   917	   919	   920
	   945	   946	   948	   949	   950	   954	   955	   968	   969	   971	   973	   974	   975	   976
	   984	  1017	  1018	  1021	  1022	  1023	  1025	  1035	  1036	  1039	  1044	  1084	  1094	  1095
	  1096	  1098	  1099	  1135	  1136	  1137	  1138	  1141	  1155	  1156	  1165	  1166	  1168	  1173
	  1182	  1183	  1186	  1194	  1197	  1198	  1201	  1204	  1212	  1213	  1214	  1215	  1220	  1222
	  1223	  1224	  1225	  1246	  1250	  1252	  1256	  1266	  1269	  1274	  1280	  1281	  1282	  1299
	  1314	  1323	  1343	  1362	  1392	  1393	  1394	  1396	  1398	  1411	  1430	  1431	  1432	  1511
	  1512	  1513	  1517	  1521	  1522	  1529	  1530	  1573	  1604	  1629	  1630	  1633	  1636	  1716
	  1718	  1720	  1741	  1750	  1759	  1840	  1843	  1845	  1846	  1848
T3	   170	   231	   235	   236	   329	   330	   337	   342	   345	   363	   398	   425	   426	   444
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Symbol cross reference

	   445	   574	   711	   720	   721	   850	   876	   894	   948	   951	   955	   971	  1085	  1092	  1093
	  1096	  1133	  1158	  1197	  1237	  1238	  1240	  1241	  1250	  1266	  1280	  1301	  1302	  1308
	  1309	  1311	  1313	  1314	  1315	  1319	  1320	  1322	  1323	  1328	  1329	  1333	  1334	  1337
	  1338	  1340	  1342	  1343	  1344	  1352	  1354	  1358	  1359	  1361	  1362	  1363	  1371	  1373
	  1374	  1375	  1380	  1381	  1383	  1384	  1395	  1399	  1400	  1407	  1408	  1410	  1411	  1430
	  1516	  1518	  1581	  1582	  1605	  1606	  1615	  1617	  1618	  1640	  1641	  1648	  1650	  1651
	  1652	  1653	  1654	  1655	  1656	  1661	  1662	  1663	  1664	  1684	  1686	  1690	  1691	  1693
	  1698	  1699	  1700	  1701	  1702	  1703	  1709	  1710	  1780	  1781	  1784	  1788	  1790	  1791
	  1792	  1793	  1825	  1826	  1831	  1832	  1833	  1834	  1882	  1883	  1898	  1899	  1900	  1903
T4	   192	   196	   227	   339	   345	   355	   372	   373	   374	   375	   382	   387	   388	   390
	   395	   396	   401	   402	   405	   406	   407	   412	   426	   432	   433	   445	   452	   459
	   460	   461	   464	   476	  1192	  1193	  1203	  1205	  1206	  1210	  1211	  1215	  1217	  1244
	  1245	  1257	  1258	  1259	  1260	  1264	  1265	  1276	  1277	  1278	  1279	  1327	  1371	  1372
	  1395	  1501	  1523	  1577	  1579	  1580	  1593	  1607	  1615	  1616	  1618	  1637	  1638	  1651
	  1653	  1656	  1657	  1661	  1662	  1664	  1665	  1685	  1690	  1698	  1699	  1708	  1718	  1744
	  1745	  1746	  1749	  1902	  1904
TPOPJ	    22%	  1114	  1125	  1187
TPOPJ1	    23%	  1226
TRNERR	   674
TRNSTB	  1281	  1286#	  1373	  1431
TSTWRL	  1096#	  1099
TSTWRS	  1092#
TSTWRT	    34	  1093#
UFDATB	    93%	   567
UFDEXT	    74%	   720	   721
UFDLNK	    74%	   887
UFDLST	   753#	   766	   770	   771	   772	   773	   802
UFDNAM	    74%	   712	   742
UFDRIB	    74%	   294	   563	   744
UFDSIZ	    74%	   709	   714	   736	   746	   753	   768	   773	   804	   807
UFRXCR	    63%	  1269
UFRXLK	    63%	  1274
UFRXRD	    63%	  1252
ULDAT1	  1056	  1060#
ULDATB	   369	   579	  1012	  1053#
ULKDB0	  1036#	  1041
ULKDB1	  1038	  1043#
ULKDBL	  1033	  1035#
UPTPID	    77%	  1354	  1381
UUOENT	    88%
UUOIRE	    94%	   599
UUOLUK	    88%	   357	   505	   537	   632	   663
UUOMLK	    90%	   248	   284	   320	   343	   353	   370	   380	   438	   457	   489	   761
UUOREN	    88%	   524	   539	   639	   687
UUOUFD	    88%	  1243
%RB2	   856	   860	   881	   891
%RB2.C	    90%	    92%	   813
%RIB	   294	   304	   306	   307	   309	   310	   312	   563	   607	   609	   611	   613	   615	   617
	   619	   621	   626	   712	   720	   721	   742	   744	   768	   769	   770	   771	   772	   773
	   802	   805	   861	   862	   863	   887
%RIB.C	    88%	   595	   700	   858
%UPT	    77%	  1354	  1381
FILFND  HANDLE CORE TABLES FOR FILE OPERATIONS	MACRO 12.5-46.0 14:30 13-JAN-88
FILFND.MAC	28-OCT-87 00:07		Macro/Opdef cross reference

PJRST	   115	   117	   119	   138	   174	   377	   640	   645	   654	   657	   675	   689	   697	   701
	   774	   818	  1086	  1114	  1125	  1450	  1531	  1533	  1536	  1763	  1884	  1896	  1916	  1923
PRINTF	   161
STOPCD	    10	   241	   391	   651	   672	   684	   694	   786	   809	  1019	  1040	  1070	  1105	  1120
	  1169	  1447	  1504	  1514	  1574	  1599	  1692	  1742	  1785	  1794	  1824	  1828	  1835	  1901
XP	  1443	  1444
$END	  1925  DZ]a