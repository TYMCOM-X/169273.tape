FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 1
S.MAC	13-JAN-88 11:55		S.MAC - with system parameter file for P035/D, January 1988

     1				SUBTTL	S.MAC - with system parameter file for P035/D, January 1988
     2
     3				IF2,<IFNDEF LISTSN,<TAPE>>	;Skip to PASS2 in all but COMMON.LST
     4				;THIS MODULE ASSEMBLED WITH KL-10 PARAMETER FILE - KLSYM.MAC
     5
     6					IF2,<IFNDEF LISTSN,<		;LIST KLSYM.MAC IN COMMON ONLY
     7								TAPE>>
     8				TITLE	FILIO	DISK SERVICE ROUTINE
     9
    10					STOPCD(,ENTRY,FILIO)^
    11					ENTRY	FILIO		;For library searches
    12	000000'	260040	000000*	FILIO::PUSHJ	P,DIE		;**** Default stopcode for "FILIO" ****
    13	000001'	465154	515700		SIXBIT	/FILIO/  	;Title of module
    14	000002'	000000	000000		S$NONAME,,0		;?NONAME stopcode "FILIO+nnn(nnnnnn)"
    15			000000'	S$NAME==FILIO			;For STOPCDs with no arguments
    16					SALL>
    17				^	;All stopcodes in FILIO start with "SWP"
    18
    19			000000		ND	FTDPAG,0	;Must match COMMOD,RMXKON,APXKON,BPXKON
    20				IF2,<IFE FTDPAG,<PRINTX :    FTDPAG set for blocks>
    21				     IFN FTDPAG,<PRINTX :    FTDPAG set for pages>>
    22			000001	IFCPU (<KI,KL>),<SAXN==1>	;SA10 on KI and KL
    23				IFNCPU(<KI,KL>),<SAXN==0>	;Not on KS or F3
    24
    25			100000	IOSUPR==100000	;SUPER USETI/USETO DONE ON THIS CHAN
    26
    27
    28				;THE FOLLOWING S BITS ARE DEFINED IN COMMON.MOD
    29				;BECAUSE THEY WANT TO BE IN THE SAME POSITION IN S AS IN RIB STATUS WORD
    30				;IOSHRE==100	;HARD READ ERROR ENCOUNTERED
    31				;IOSHWE==200	;HARD WRITE ERROR ENCOUNTERED
    32				;IOSSCE==400	;SOFTWARE CHECKSUM ERROR ENCOUNTERED
    33				;IOSERR==IOSHRE+IOSHWE+IOSSCE
    34				;IOSMER==-IOSERR
    35				DEFINE DSKOFF <WRPI DSKPIF>
    36				DEFINE DSKON  <WRPI DSKPIN>
    37
    38
    39				EXTERN ALR620,CPOPJ,CPOPJ1,DEVBLK,DSKPIF,DSKPIN
    40				EXTERN GETOPR,INLMES,IOSHRE,IOSHWE,PRNAME
    41				EXTERN PTNUNI,PTSUNI,PWAIT1
    42				EXTERN REMLST,SATONC,SYSUNI,UNTTBL,PIOMOD
    43
    44				EXTERN PGYPNO,PGYFPL,PGYBPL,PGYSTS,PGPDER,PGPDTE,PGYSIO,PGYADR
    45				EXTERN PGYDRT,PGYUNI
    46				IFCPU (KL),<EXTERN PGYCSH>
    47
    48				EXTERN RBYUNI,RBYPNO,RBREAL,RBINDX,RBSPAR
    49
    50
    51				EXTERN KONPOS,KONRED,KONWRT,KONRCL,KONSTP,KONCPY
    52				EXTERN KONCHN,KONLTM,KONPTR,KONADD,KONFIN,CHNBSY
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 1
FILIO.MAC	19-NOV-87 14:54		S.MAC - with system parameter file for P035/D, January 1988

    53				EXTERN KONOFS,KONHRD,KONSFT,KONIBM,KONRBL
    54
    55				EXTERN UNISTS,UNICHN,UNPOFL
    56				EXTERN UNISTT,UNIERR,UNYPGL,UNYPAC
    57				EXTERN UNIKON,UNISTR,UNITAL,UNISYS
    58				EXTERN UNIDES,UNINAM,UNYLUN,UNISOF,UNIHBN
    59				EXTERN UNIBRC,UNIDRC,UNIMSC,UNIUSC,UNISBN,UNIICT,UNIBWC,UNIDWC
    60				EXTERN UNIHCT,UNISCT,UNICYL,UNIONC
    61				EXTERN UNIHNG,UNISDI,UNIECT,UNIRCT,UNIRC1
    62				EXTERN UNIHDI,UNPFUS,UNIDIR,UNIFCT,UNYTIM
    63				EXTERN UNICDA,UNYRCL,UNYRRT,UNYRTY,UNPDEV,UNYOCV,UNYRTO,UNYRCO
    64				IFE FTDPAG,<EXTERN UNIBLK,UNYBPY,UNYPPL>
    65				IFN FTDPAG,<EXTERN UNIPAG,UNYPPY>
    66				IFN SAXN,<EXTERN UNIOLV,UNPRRS>
    67
    68				EXTERN KCMOFL,KCMFUS,KCMRER,KCMERR,KCMDTA,KCMIOS,KCMPOS
    69
    70				EXTERN LSTLST,PGYPNO,PGYLST,PGYSOP,SID.N,SOD.N,SPR.N,%UPT
    71				EXTERN MAXPCB,FINPCB,MINPCB,MEMSZP
    72				EXTERN PICLK,JOB,CLKFLG
    73
    74				EXTERN ADRDUM
    75				EXTERN CTLFND,PGYLMA,%SAT.C
    76
    77				IFCPU (KL),<EXTERN CSUCNT,CSVCNT,CSHSAV>
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 2
FILIO.MAC	19-NOV-87 14:54		S.MAC - with system parameter file for P035/D, January 1988

    78				REPEAT	0,<
    79				NOTE ABOUT STATES OF CHANNELS, KONTROLLERS, UNITS, FILES:
    80				
    81							C	J	U	F
    82				IDLE		I	I	I	I	I
    83				SEEK WAIT	SW			SW
    84				SEEK		S			S
    85				POSITION WAIT	PW			PW	PW
    86				POSITION	P			P	P
    87				TRANSFER WAIT	TW			TW	TW
    88				TRANSFER(BUSY)	T1 OR B	B	B	T1	T1
    89				
    90				NOTE ABOUT QUEUES:
    91				THERE ARE 2 QUEUES OF FILES
    92					SW/PW QUEUE FOR EACH UNIT
    93					TW QUEUE FOR CHANNEL
    94				A FILE IS ONE AND ONLY ONE OF THE FOLLOWING CONDITIONS:WITH RESPECT TO QUEUES
    95					A.THE ONLY FILE IN SW/PW QUEUE FOR A UNIT (UNIT IN SW STATE)
    96					B.ONE OF PERHAPS MANY FILES IN PW QUEUE FOR A UNIT(UNIT IN PW,P,TW,OR T1 STATE)
    97					C.ONE OF PERHAPS MANY IN TW QUEUE FOR CHANNEL(CHAN AND KONTROL IN B STATE)
    98					D.NONE OF THE ABOVE (FILE IN I,P, OR T1 STATE)
    99				
   100				NOTE:	#MEANS INSTRUCTION IS EXECUTED WITH ALL DISK PI CHANNELS OFF
   101					%MEANS INSTRUCTION IS EXECUTED WHILE JOB HAS CB RESOURCE
   102					*MEANS INSTRUCTION MAY BE EXECUTED AT INTERRUPT LEVEL
   103					(TO SAVE TYPING USED ONLY FOR INSTRUCTIONS NOT IN INTERRUPT MODULE ITSELF)
   104				
   105				THE FOLLOWING TECO MACRO WILL PRODUCE A LISTING OF ONLY THE SUBROUTINE
   106				NAMES AND COMMENTS PRIOR TO THEM:
   107				ERDEV1:FILIO.MAC$EWDEV2:FILIO.SUB$
   108				<_;SUBROUT$;0L.U1  !NTST! :S:$"GA ONTST$'.U20L1A-59"E LONTST$' Q2JI
   109				
   110				$Q1,.PW 0,.K>EF
   111				
   112				>
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 3
FILIO.MAC	19-NOV-87 14:54		UUO interface -- SEEK uuo

   113				SUBTTL	UUO interface -- SEEK uuo
   114				;UUO LEVEL IO (F ALREADY SET TO DDB FOR FILE DOING IO)
   115
   116				;HERE TO START A SEEK  (CALLI 56)
   117
   118	000003'	260040	000040'	UUOSEK::PUSHJ	P,SEKPTR	;GET POINTER TO NEXT BLOCK IN T2
   119	000004'	263040	000000		  POPJ	P,		;CAN'T DO IT
   120	000005'	331002	000000*		SKIPL	KONPOS(J)	;DOES CONTROLLER POSITION?
   121	000006'	332305	000000*		SKIPE	T1,UNISTS(U)	;YES. IS UNIT IDLE?
   122	000007'	263040	000000		 POPJ	P,		;NO. IGNORE SEEK REQUEST
   123	000010'	700600	000000*		DSKOFF			;SINCE WE ARE DIDDLING QUEUES
   124	000011'	137300	000000*		DPB	T1,UNYPAC	;ALSO PAGE POINTER (0 FROM ABOVE)
   125				IFE FTDPAG,<
   126	000012'	202345	000000*		MOVEM	T2,UNIBLK(U)	;Save desired block address
   127	000013'	135400	000000*		LDB	T3,UNYBPY	;Convert to desired cylinder number
   128				>
   129				IFN FTDPAG,<
   130					LSH	T2,B2PLSH	;Convert blocks to pages
   131					MOVEM	T2,UNIPAG(U)	;Save desired page address
   132					LDB	T3,UNYPPY	;Convert to desired cylinder number
   133				>
   134	000014'	230340	000010		IDIV	T2,T3		; (to see if SEEK needs to be done)
   135	000015'	316345	000000*		CAMN	T2,UNICYL(U)	;ALREADY ON CYL?
   136	000016'	324740	000032'		 PJRST	ONPOPJ		;YES, TURN ON PI AND GO
   137				IFN SAXN,<
   138	000017'	332005	000000*		SKIPE	UNIOLV(U)	;Is there an Other Logical Volume?
   139	000020'	336025	000017*		SKIPN	@UNIOLV(U)	;Yes, is it busy?
   140	000021'	254000	000032'		 JRST	ONPOPJ		;No, go ahead with this transfer
   141				>  ;End IFN SAXN
   142	000022'	201300	000003		MOVEI	T1,SWCOD	;SET TO SEEK WAIT
   143	000023'	202305	000006*		MOVEM	T1,UNISTS(U)
   144	000024'	331002	000000*		SKIPL	KONIBM(J)	;Disks on an IBM block mux channel?
   145	000025'	254000	000034'		 JRST	UUOSK1		;No, start seek and then select best unit
   146	000026'	201300	000004		MOVEI	T1,SCOD		;For IBM disks on an SA-10, just seek
   147	000027'	202305	000023*		MOVEM	T1,UNISTS(U)	; (there is no DF10 to worry about)
   148	000030'	350005	000000*		AOS	UNIUSC(U)	;Count user seek
   149	000031'	260062	000005*		PUSHJ	P,@KONPOS(J)	;Start seek to page in UNIPAG/UNIBLK
   150	000032'	700600	000000*	ONPOPJ:	DSKON
   151	000033'	263040	000000		POPJ	P,
   152
   153	000034'	261040	000004	UUOSK1:	PUSH	P,F		;Save F from IOSEL
   154	000035'	260040	001054'		PUSHJ	P,IOSEL		;Do seeks for any on this kontroller
   155	000036'	262040	000004		POP	P,F
   156	000037'	254000	000032'		JRST	ONPOPJ		;Turn on PI and go
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 4
FILIO.MAC	19-NOV-87 14:54		UUO interface -- SEEK uuo

   157				;ROUTINE TO GET NEXT BLOCK FOR SEEK.
   158				; CALL WITH DEVPOS(F) POINTING TO NEXT BLOCK,
   159				; RETURNS WITH T2 NEXT ABSOLUTE BLOCK ON DISK,
   160				; U AND J SETUP WITH UDB AND KDB. SKIP IF SUCCESSFUL.
   161
   162				EXTERNAL USETST,ATYBSZ,RBMASK,RELRIB,UNLFIL,RBYUNI
   163				EXTERNAL DEVSUP,DEVPOS,DEVATB,DEVRET
   164				EXTERNAL STRDDB,STRPPU,STRUNI,STRBTS,SRPNDS
   165				EXTERNAL LOKUNM
   166
   167	000040'	200544	000000*	SEKPTR:	MOVE	M,DEVPOS(F)	;GET NEXT BLOCK
   168	000041'	621540	400000		TLZ	M,(1B0)		;CLEAR POSSIBLE CHANGE FLAG.
   169	000042'	603000	100000		TLNE	S,IOSUPR	;SUPER I/O?
   170	000043'	254000	000073'		 JRST	SEKPTS		;YES, DO IT DIFFERENTLY
   171
   172	000044'	550344	000000*		HRRZ	T2,DEVATB(F)	;GET ATB
   173	000045'	322340	000000*		JUMPE	T2,CPOPJ	;CAN'T DO IT IF NO FILE.
   174	000046'	135300	000000*		LDB	T1,ATYBSZ	;GET SIZE IN BLOCKS
   175	000047'	313540	000006		CAMLE	M,T1		;EOF?
   176	000050'	263040	000000		 POPJ	P,		;YES, CAN'T DO IT.
   177	000051'	271540	000003		ADDI	M,3		;ROUND UP TO NEAREST PAGE.
   178	000052'	242540	777776		LSH	M,B2PLSH	;CONVERT TO PAGES FOR USETST
   179	000053'	322540	000045*		JUMPE	M,CPOPJ		;BETTER NOT BE PAGE 0 OF FILE
   180	000054'	260040	000000*		PUSHJ	P,LOKUNM	;LOCK FILE UNMODIFIED.
   181	000055'	260040	000000*		PUSHJ	P,USETST	;SETUP DEVRET
   182					  JRST	[MOVEM S,DEVIOS(F) ;STORE STATUS
   183	000056'	254000	002106'			POPJ P,]
   184	000057'	200364	000000*		MOVE	T2,@DEVRET(F)	;GET POINTER WE WORKED SO HARD FOR
   185	000060'	261040	000007		PUSH	P,T2		;SAVE T2 FROM THESE GUYS
   186	000061'	260040	000000*		PUSHJ	P,RELRIB
   187	000062'	260040	000000*		PUSHJ	P,UNLFIL	;RELEASE RIB AND FILE
   188	000063'	262040	000007		POP	P,T2		;RESTORE T2.
   189	000064'	607340	000000*		TLNN	T2,RBREAL	;IS NEXT THING A HOLE?
   190	000065'	263040	000000		 POPJ	P,		;YES, ALL THAT FOR NOTHING.
   191	000066'	135240	000000*		LDB	U,RBYUNI	;GET UNIT NUMBER
   192	000067'	200245	000000*		MOVE	U,UNTTBL(U)	;GET UDB ADDRESS
   193	000070'	621340	000000*		TLZ	T2,RBMASK	;GET RID OF XTRA BITS
   194	000071'	242340	000002		LSH	T2,P2BLSH	;CONVERT TO BLOCK
   195								;(ALWAYS OK TO POSITION TO 1ST BLOCK OF PAGE.)
   196	000072'	254000	000106'		JRST	SEKPT1		;RETURN U AND J SET UP, T2 HAS PAGE #
   197
   198				;HERE IF IT WAS SUPER I/O
   199
   200	000073'	200340	000013	SEKPTS:	MOVE	T2,M		;GET BLOCK # IN CASE ITS A UNIT
   201	000074'	550244	000000*		HRRZ	U,DEVSUP(F)	;MAYBE HE INITED UNIT
   202	000075'	326240	000106'		JUMPN	U,SEKPT1	;IF SO, JUST USE DEVPOS (BLOCK # IN T2)
   203	000076'	200300	000013		MOVE	T1,M		;NO, MUST COMPUTE BLOCK WITHIN UNIT
   204	000077'	242300	777776		LSH	T1,B2PLSH	;CONVERT TO PAGES
   205				PRINTF(<[SEKPTS+5: Check need to use DRBSTR instead of STRDDB]>)
   206	000100'	201240	000000*		MOVEI	U,STRDDB	;Get current structure
   207				PRINTF(<[SEKPTS+6: Uses STRPPU as divisor - all units must be same size!!!]>)
   208	000101'	230305	000000*		IDIV	T1,STRPPU(U)	;GET UNIT # IN T1, PAGE # IN T2
   209	000102'	242340	000002		LSH	T2,P2BLSH	;CONVERT BACK TO BLOCKS
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 4-2
FILIO.MAC	19-NOV-87 14:54		UUO interface -- SEEK uuo

   210	000103'	201245	000000*		MOVEI	U,STRUNI-UNISTR(U) ;START WITH THIS
   211	000104'	554245	000000*		HLRZ	U,UNISTR(U)	;GET NEXT UNIT IN STR
   212	000105'	365300	000104'		SOJGE	T1,.-1		;KEEP GOING TILL GET THE RIGHT ONE
   213
   214	000106'	200105	000000*	SEKPT1:	MOVE	J,UNIKON(U)	;GET KDB ADDRESS
   215	000107'	254000	000000*		JRST	CPOPJ1		;RETURN FROM SEKPTR WITH BLOCK # IN T2
   216
   217
   218				SUBTTL	UUO interface -- read buffered log
   219
   220				IFE SAXN,<RRSETB==:CPOPJ> ;There is no buffered log on F3 or KS
   221				IFN SAXN,< ;Read error log from disk control unit via SA10
   222	000110'	700600	000010*	RRSETB::DSKOFF
   223	000111'	332005	000027*		SKIPE	UNISTS(U)	;Is unit doing anything?
   224	000112'	254000	000121'		 JRST	RRSETF		;Yes, just set a flag and catch it later
   225	000113'	201300	000005		MOVEI	T1,RSCOD	;No, mark unit as busy reading sense bytes
   226	000114'	202305	000111*		MOVEM	T1,UNISTS(U)
   227	000115'	260040	001431'		PUSHJ	P,SETTIM
   228	000116'	260062	000000*		PUSHJ	P,@KONRBL(J)	;Read buffered log (instead of latency routine)
   229	000117'	700600	000032*		DSKON
   230	000120'	254000	000107*		JRST	CPOPJ1		;Back to UUOCON
   231
   232	000121'	205300	000000*	RRSETF:	MOVSI	T1,UNPRRS	;Flag to do RDRST later
   233	000122'	436305	000000*		IORM	T1,UNIDES(U)
   234	000123'	700600	000117*		DSKON
   235	000124'	254000	000120*		JRST	CPOPJ1		;Back to UUOCON
   236
   237				;Here when unit is idle and UNPPRS was set (in both T1 and UNIDES)
   238
   239	000125'	412305	000122*	RDRST:	ANDCAM	T1,UNIDES(U)	;Reset UNPRRS bit
   240	000126'	201300	000005		MOVEI	T1,RSCOD	;Set to read status wait
   241	000127'	202305	000114*		MOVEM	T1,UNISTS(U)
   242	000130'	550105	000106*		HRRZ	J,UNIKON(U)	;Just to make sure
   243	000131'	260040	001431'		PUSHJ	P,SETTIM
   244	000132'	260062	000116*		PUSHJ	P,@KONRBL(J)	;Read buffered log (instead of latency routine)
   245	000133'	254000	001136'		JRST	UXPOPJ		;Don't start anything else on this channel
   246				>  ;End IFN SAXN
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 5
FILIO.MAC	19-NOV-87 14:54		FILINT -- Interrupt handling module

   247				SUBTTL	FILINT -- Interrupt handling module
   248
   249				COMMENT !
   250				Called from device dependent interrupt routine (disk drivers)
   251				T3 contains the DATAI (or fake DATAI) from the device
   252				T2 contains the CONI (or fake CONI) from the device
   253				T1 is the Kontroller CoMmunications word
   254				  Bits 0-7 are attention bits (for DPXKON,RMXKON,APXKON)
   255				  KCMPOS (1B7)  IBM disk controller gets position interrupt (BPXKON)
   256				  KCMRER (1B8)  Recovered data error (corrected using ECC)
   257				  KCMFUS (1B9)  File unsafe
   258				  KCMERR (1B10) Unrecoverable error in data transfer
   259				  KCMDTA (1B11) Successful data transfer (RH must be nonzero)
   260				  KCMIOS (1B12) I/O select needed (internal to FILIO only)
   261				  KCMOFL (1B13) Unit is off-line
   262				        (17B17) unused
   263				IFE FTDPAG,<Bits 18-35 contain the number of blocks transfered>
   264				IFN FTDPAG,<Bits 18-35 contain the number of pages transfered>
   265				The device driver sets J to Kontroller DB and U to Unit DB
   266				!
   267
   268	000134'	261040	000010	FILINT::PUSH	P,T3		;Software generated DATAI
   269	000135'	261040	000007		PUSH	P,T2		;Software generated CONI
   270	000136'	261040	000006		PUSH	P,T1		;LH=error bits, RH=blocks or pages
   271	000137'	603300	000000*		TLNE	T1,KCMOFL!KCMFUS
   272	000140'	260040	000155'		 PUSHJ	P,SETOFL	;Set unit off-line
   273	000141'	603300	000000*		TLNE	T1,776000!KCMPOS
   274	000142'	260040	000205'		 PUSHJ	P,POSSAT	;Position interrupt (set KCMIOS if needed)
   275	000143'	603300	000000*		TLNE	T1,KCMRER
   276	000144'	260040	000314'		 PUSHJ	P,ERRRCV	;Recovered error (set KCMIOS if more to do)
   277	000145'	603300	000000*		TLNE	T1,KCMDTA
   278	000146'	260040	000334'		 PUSHJ	P,DTASAT	;Data transfer completed (errors possible)
   279	000147'	603300	000000*		TLNE	T1,KCMIOS
   280	000150'	260040	001054'		 PUSHJ	P,IOSEL		;Find next unit that needs to start I/O
   281	000151'	262040	000006		POP	P,T1
   282	000152'	262040	000007		POP	P,T2
   283	000153'	262040	000010		POP	P,T3
   284	000154'	263040	000000		POPJ	P,		;Back to BPXKON,APXKON,RMXKON interrupt routine
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 6
FILIO.MAC	19-NOV-87 14:54		FILINT -- Interrupt handling module

   285				;Set unit off line - called with KCMOFL or KCMFUS set in T1
   286	000155'	200345	000127*	SETOFL:	MOVE	T2,UNISTS(U)
   287	000156'	306340	000007		CAIN	T2,CCOD		;Doing capacity test?
   288	000157'	254000	000202'		 JRST	CPYOFL
   289	000160'	302340	000012		CAIE	T2,TCOD		;Was this unit in the middle of a transfer?
   290	000161'	254000	000165'		 JRST	SETOF1		;If not, do not free KON and CHN
   291	000162'	260040	000450'		PUSHJ	P,SETID2	;Set KON and CHN idle
   292	000163'	205300	000147*		MOVSI	T1,KCMIOS	;
   293	000164'	437301	777777		IORB	T1,-1(P)	;Set IOS bit to restart the transfer
   294	000165'	201340	000014	SETOF1:	MOVEI	T2,OWCOD
   295	000166'	202345	000155*		MOVEM	T2,UNISTS(U)	;Waiting for on-line interrupt
   296	000167'	205340	000000*		MOVSI	T2,UNPOFL
   297	000170'	603300	000000*		TLNE	T1,KCMFUS
   298	000171'	661340	000000*		 TLO	T2,UNPFUS
   299	000172'	436345	000125*		IORM	T2,UNIDES(U)	;Remember off-line and possible unsafe
   300	000173'	502340	000201'		HLLM	T2,LSTBDU	;Save last bad status
   301	000174'	542240	000201'		HRRM	U,LSTBDU	; and unit
   302	000175'	201340	000001		MOVEI	T2,1
   303	000176'	137340	000000*		DPB	T2,UNYTIM	;Set timer to go off now
   304	000177'	200301	777777		MOVE	T1,-1(P)	;Go get KMCIOS again
   305	000200'	263040	000000		POPJ	P,
   306
   307	000201'	000000	000000	LSTBDU:	0			;Last bad status and unit (for crash analysis)
   308
   309	000202'	563005	000000*	CPYOFL:	HRROS	UNIONC(U)	;Negative to signify off-line
   310	000203'	402005	000166*	CPYFIN:	SETZM	UNISTS(U)	;End of capacity test, make idle
   311	000204'	324740	001430'		PJRST	ZERTIM		;Clear hung timer and return
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 7
FILIO.MAC	19-NOV-87 14:54		FILINT -- Interrupt handling module

   312				;Positioning done interrupt - Bits 0-7 set for non-IBM, KMCPOS for IBM disks
   313	000205'	261040	000005	POSSAT:	PUSH	P,U		;Save unit of data transfer if any
   314	000206'	205640	776000		MOVSI	P2,776000	;Get just the attention bits
   315	000207'	404641	777776		AND	P2,-2(P)	; from device CONI
   316				IFN SAXN,<
   317	000210'	603300	000000*		TLNE	T1,KCMPOS	;Position done on an IBM disk?
   318	000211'	634640	000015		 TDZA	P2,P2		;Yes, zero P2 and got to POSTS1
   319	000212'	634740	000017		  TDZA	P4,P4		;No, zero P4 and go to POSTST
   320	000213'	254000	000222'		   JRST	POSTS1		;already set up for IBM disk
   321				>  ;End IFN SAXN
   322				IFE SAXN,<SETZ	P4,>		;Clear offset
   323	000214'	243640	000216'	POSTST:	JFFO	P2,.+2		;Any attention bits left on?
   324	000215'	254000	000243'		 JRST	POSDON		;No, finished
   325	000216'	242656	000001		LSH	P2,1(P3)	;Get rid of bit
   326	000217'	273740	000016		ADDB	P4,P3		;Set unit index
   327	000220'	336262	000000*		SKIPN	U,@KONPTR(J)	;Doing I/O?
   328	000221'	344740	000214'		 AOJA	P4,POSTST	;Extraneous interrupt, check next unit
   329	000222'	200305	000203*	POSTS1:	MOVE	T1,UNISTS(U)	;Get wait code
   330	000223'	256006	000225'		XCT	PSTTBL(T1)	;Process position done interrupt
   331	000224'	344740	000214'		AOJA	P4,POSTST	;Go do next one
   332
   333	000000			PSTTBL:	PHASE	0
   334	000225'	476005	000015*	ICOD:!	SETOM	UNICYL(U)	;JUST MARK SO FORCES SEEK
   335	000226'	476005	000225*	PWCOD:!	SETOM	UNICYL(U)
   336	000227'	260040	000250'	PCOD:!	PUSHJ	P,POSFIN	;FINISHED A POSITION OPERATION
   337	000230'	476005	000226*	SWCOD:!	SETOM	UNICYL(U)
   338	000231'	260040	000302'	SCOD:!	PUSHJ	P,SEKFIN	;FINISHED A SEEK
   339	000232'	260040	000302'	RSCOD:!	PUSHJ	P,SEKFIN	;READ AND RESET BUFFERED LOG, TREAT LIKE SEEK
   340	000233'	476005	000230*	CWCOD::!SETOM	UNICYL(U)
   341	000234'	260040	000203'	CCOD::!	PUSHJ	P,CPYFIN	;CAPACITY TEST FINISHED
   342	000235'	256000	000000'	TWCOD:!	 STOPCD			;ONLY FIXED HEAD DISKS ARE IN TW
   343	000236'	260040	000260'	TWFCOD:!PUSHJ	P,RESEK		;MUST BE OFF THEN ON, RESET FOR POS
   344	000237'	476005	000233*	TCOD:!	SETOM	UNICYL(U)	;SHOULD HAVE BEEN AN OFF-LINE INT FIRST
   345	000240'	260040	000260'	RCOD:!	PUSHJ	P,RCLFIN	;FINISHED RECAL, SET TO POS
   346	000241'	260040	000265'	OWCOD:!	PUSHJ	P,UNIONL	;UNIT BACK ONLINE
   347	000242'	260040	000250'	VWCOD:!	PUSHJ	P,POSFIN	;Go set KCMIOS and restart logical volume
   348	000243'				DEPHASE
   349
   350	000243'	262040	000005	POSDON:	POP	P,U		;Restore pointer to UCB
   351	000244'	200301	777777		MOVE	T1,-1(P)	;Reset COM word
   352	000245'	263040	000000		POPJ	P,		;End of position done interrupt
   353
   354	000246'	476005	000237*	SEKFN1:	SETOM	UNICYL(U)
   355	000247'	634300	000006		TDZA	T1,T1		;GO TO IDLE
   356	000250'	201300	000011	POSFIN:	MOVEI	T1,TWFCOD	;BUT IF POS FINISHED, TO TWF
   357	000251'	202305	000222*	COMFIN:	MOVEM	T1,UNISTS(U)	;SET STATUS
   358	000252'	260040	001430'		PUSHJ	P,ZERTIM	;Zero hung timer
   359	000253'	205300	000163*		MOVSI	T1,KCMIOS
   360	000254'	436301	777775		IORM	T1,-3(P)	;NEED I/O SELECTION
   361	000255'	336001	777777		SKIPN	-1(P)
   362	000256'	542241	777777		HRRM	U,-1(P)		;SAVE UNIT IN CASE ONLY POS INTERUPT
   363	000257'	263040	000000		POPJ	P,
   364
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 7-2
FILIO.MAC	19-NOV-87 14:54		FILINT -- Interrupt handling module

   365	000260'			RESEK:
   366	000260'	476005	000246*	RCLFIN:	SETOM	UNICYL(U)	;MUST HAVE BEEN OFF-LINE
   367	000261'	201300	000001	RCLFN2:	MOVEI	T1,PWCOD	;OR FINISHED RECAL, FORCE SEEK
   368	000262'	335002	000024*		SKIPGE	KONIBM(J)	;If on-line or RECAL done on an IBM disk,
   369	000263'	201300	000011		 MOVEI	T1,TWFCOD	; set TWF to go to T (no seek wait for SA10)
   370	000264'	254000	000251'		JRST	COMFIN
   371
   372	000265'	256000	002110'	UNIONL:	 STOPCD (.+1,EVENT,UNIONL,PRTUNI,<Unit came on-line>)
   373				 ;;UNIONL+0
   374	000266'	205300	000000*		MOVSI	T1,UNPOFL!UNPFUS
   375	000267'	412305	000172*		ANDCAM	T1,UNIDES(U)	;Clear off-line and unsafe bits
   376	000270'	135300	000011*		LDB	T1,UNYPAC	;OTHER KIND OF WAITER
   377	000271'	326300	000260'		JUMPN	T1,RCLFIN
   378	000272'	254000	000246'		JRST	SEKFN1		;ELSE NO ONE WAITING, JUST SET IDLE
   379
   380	000273'	260040	000000*	PRTUNI:	PUSHJ	P,INLMES##	;Routine for STOPCD(UNIONL)
   381	000274'	527355	172100		 ASCIZ	/Unit came on-line: /
	000275'	617035	562500
	000276'	677345	566322
	000277'	673127	220000
   382	000300'	200345	000000*		MOVE	T2,UNINAM(U)
   383	000301'	324740	000000*		PJRST	PRNAME##	;CRLF is provided by stopcode processor
   384
   385	000302'	261040	000015	SEKFIN:	PUSH	P,P2		;NEED TO SAVE THIS AC
   386	000303'	260040	001242'		PUSHJ	P,PIKPOS	;SEE WHAT POSITION NEED DOING
   387	000304'	322140	000310'		  JUMPE	PG,SEKFN2	;NO REQUESTS, GO TO IDLE
   388	000305'	322640	000311'		JUMPE	P2,SEKFN3	;NO POSITION NEEDED, TO TWF
   389	000306'	262040	000015		POP	P,P2
   390	000307'	254000	000261'		JRST	RCLFN2		;GO TO PW
   391
   392	000310'	634300	000006	SEKFN2:	TDZA	T1,T1		;NO REQUEST, GO IDLE
   393	000311'	201300	000011	SEKFN3:	MOVEI	T1,TWFCOD	;NO POSITION NEEDED, TO TWF
   394	000312'	262040	000015		POP	P,P2
   395	000313'	254000	000251'		JRST	COMFIN
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 8
FILIO.MAC	19-NOV-87 14:54		FILINT -- Interrupt handling module

   396				;Recoverable error interrupt - KCMRER is set
   397	000314'	350005	000000*	ERRRCV:	AOS	UNISCT(U)	;Call it a soft error
   398	000315'	260062	000000*		PUSHJ	P,@KONSFT(J)	;Save error status if necessary
   399	000316'	200341	777776		MOVE	T2,-2(P)	;Device CONI
   400	000317'	202345	000000*		MOVEM	T2,UNISOF(U)
   401	000320'	200341	777775		MOVE	T2,-3(P)	;Device DATAI
   402	000321'	202345	000000*		MOVEM	T2,UNISDI(U)
   403	000322'	550341	777777		HRRZ	T2,-1(P)	;Get number of blocks or pages
   404				IFN FTDPAG,<
   405					LSH	T2,P2BLSH	;Convert to blocks for UNISBN
   406				>
   407	000323'	275340	000001		SUBI	T2,1		;Last block did not transfer OK
   408	000324'	202345	000000*		MOVEM	T2,UNISBN(U)	;PUT THIS IN SOFT BLOCK FOR NOW
   409	000325'	135140	000270*		LDB	PG,UNYPAC	;GET PAGE INFO POINTER
   410	000326'	135340	000000*		LDB	T2,PGYPNO	;AND ADDRESS
   411	000327'	242340	000002		LSH	T2,P2BLSH	;CONVERT TO BLOCKS
   412	000330'	272345	000324*		ADDM	T2,UNISBN(U)	;Disk block address of error
   413				IFE FTDPAG,<
   414	000331'	135340	000000*		LDB	T2,UNYPPL	;ALSO GET OFFSET
   415	000332'	272345	000330*		ADDM	T2,UNISBN(U)	;FINISH SETTING BLOCK NUMBER
   416				>
   417				IFN FTDPAG,<
   418					LSH	T2,B2PLSH	;Convert back to page number
   419				>
   420	000333'	263040	000000		POPJ	P,
   421
   422				;Data transfered interrupt - KCMDTA is set, RH must nonzero if KCMERR off
   423
   424	000334'	135140	000325*	DTASAT:	LDB	PG,UNYPAC	;GET ACTIVE PAGE NUMBER
   425	000335'	135000	000000*		LDB	S,PGYSIO	;MAKE SURE PAGE HAS I/O GOING
   426	000336'	336000	000000		SKIPN	S		;NO?
   427	000337'	256000	002114'		 STOPCD (.,STOP,SWPNIO,,<Swap done: No I/O in progress>)
   428				 ;;DTASAT+3
   429	000340'	135000	000000*		LDB	S,PGYSOP
   430	000341'	322000	000343'		JUMPE	S,DTAST2	;IN
   431	000342'	205000	000020		MOVSI	S,IO		;OUT
   432	000343'	607300	000000*	DTAST2:	TLNN	T1,KCMERR	;IS THERE AN ERROR?
   433	000344'	254000	000463'		 JRST	DTAOK		;NO, TRANSFER IS OK
   434	000345'	205340	000000*		MOVSI	T2,UNPDEV
   435	000346'	201700	200000		MOVEI	P3,IODERR
   436	000347'	616345	000000*		TDNN	T2,UNIRCT(U)
   437	000350'	201700	100000		 MOVEI	P3,IODTER	;SET DATA OR DEVICE ERROR
   438	000351'	602000	000100		TRNE	S,IONRCK
   439	000352'	254000	000474'		 JRST	DTAOK1		;IGNORE ERROR IF NO RETRY REQUESTED
   440	000353'	550741	777777		HRRZ	P4,-1(P)	;Get number of blocks or pages
   441				IFN FTDPAG,<
   442					LSH	P4,P2BLSH	;Convert pages to blocks
   443				>
   444	000354'	135340	000326*		LDB	T2,PGYPNO	;Disk page number
   445	000355'	242340	000002		LSH	T2,P2BLSH	;Convert to disk block address
   446	000356'	270740	000007		ADD	P4,T2		;Block address where error was detected
   447				IFE FTDPAG,<
   448	000357'	135340	000331*		LDB	T2,UNYPPL
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 8-2
FILIO.MAC	19-NOV-87 14:54		FILINT -- Interrupt handling module

   449	000360'	270740	000007		ADD	P4,T2		;PLUS BLOCK WITHIN PAGE
   450				>
   451	000361'	275740	000001		SUBI	P4,1		;Last block successfully transferred
   452	000362'	337005	000347*	DTAST3:	SKIPG	UNIRCT(U)	;IS THE ERROR THE FIRST ONE?
   453	000363'	254000	000374'		 JRST	DTRSEC		;NO
   454	000364'	202745	000332*		MOVEM	P4,UNISBN(U)	;SAVE SOFT BLOCK NUMBER
   455	000365'	200341	777776		MOVE	T2,-2(P)	;Device CONI
   456	000366'	202345	000317*		MOVEM	T2,UNISOF(U)	;STORE THE SOFT ERROR STATUS
   457	000367'	200301	777775		MOVE	T1,-3(P)	;Device DATAI
   458	000370'	202305	000321*		MOVEM	T1,UNISDI(U)
   459	000371'	402005	000000*		SETZM	UNIECT(U)	;RESET ERROR COUNT
   460	000372'	205300	400000		MOVSI	T1,(1B0)
   461	000373'	436305	000362*		IORM	T1,UNIRCT(U)	;AND RESET BIT 0 (NOT FIRST)
   462	000374'	135300	000000*	DTRSEC:	LDB	T1,UNYRTY	;CHECK NUMBER OF RETRYS REMAINING
   463	000375'	365300	000421'		SOJGE	T1,DTRRTY	;GO RETRY
   464	000376'	135300	000000*		LDB	T1,UNYRCL	;OUT OF RETRYS, TRY RECAL
   465	000377'	365300	000427'		SOJGE	T1,DTRRCL
   466	000400'	135300	000000*		LDB	T1,UNYOCV	;TRY OFFSET NEXT.
   467	000401'	365300	000437'		SOJGE	T1,DTROFS
   468	000402'	202745	000000*		MOVEM	P4,UNIHBN(U)	;SET HARD DATA ERROR BLOCK NUMBER
   469	000403'	200301	777776		MOVE	T1,-2(P)	;Device CONI
   470	000404'	202305	000000*		MOVEM	T1,UNIERR(U)	;STILL FAILS AFTER E.R.: CALL IT HARD ERROR.
   471	000405'	200301	777775		MOVE	T1,-3(P)	;Device DATAI
   472	000406'	202305	000000*		MOVEM	T1,UNIHDI(U)
   473	000407'	201300	000001		MOVEI	T1,1		;READY TO COUNT ERROR
   474	000410'	606700	100000		TRNN	P3,IODTER
   475					 JRST	[MOVSS T1	;DEVICE ERROR
   476	000411'	254000	002117'			JRST   DTRSC1]
   477	000412'	603000	000020		TLNE	S,IO
   478	000413'	665700	000000*		 TLOA	P3,IOSHWE	;Hard write error
   479	000414'	661700	000000*		  TLO	P3,IOSHRE	;Hard read error
   480	000415'	272305	000000*	DTRSC1:	ADDM	T1,UNIHCT(U)	;# of IODERRs ,, # of IODTERs
   481	000416'	200745	000402*		MOVE	P4,UNIHBN(U)	;SAVE HARD BLOCK NUMBER
   482	000417'	260062	000000*		PUSHJ	P,@KONHRD(J)	;CALL DEVICE DEPENDENT HARD ERROR DATA SAVER.
   483	000420'	254000	000474'		JRST	DTAOK1
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 9
FILIO.MAC	19-NOV-87 14:54		FILINT -- Interrupt handling module

   484				;Device retry
   485	000421'	137300	000374*	DTRRTY:	DPB	T1,UNYRTY	;REST COUNT
   486	000422'	350005	000371*		AOS	UNIECT(U)	;COUNT 1 RECOVERY TRY
   487	000423'	201300	000011		MOVEI	T1,TWFCOD	;SET TRANSFER FIXED (RETRY)
   488	000424'	260040	000446'		PUSHJ	P,IDL1		;SET IDLE AND STORE STATUS
   489	000425'	205300	000253*	KCIPOP:	MOVSI	T1,KCMIOS	;NEED TO DO I/O SELECT
   490	000426'	263040	000000		POPJ	P,
   491
   492	000427'	137300	000376*	DTRRCL:	DPB	T1,UNYRCL	;RESET COUNT
   493	000430'	135300	000000*		LDB	T1,UNYRRT	;SET RETRY COUNT AFTER RECAL
   494	000431'	137300	000421*		DPB	T1,UNYRTY
   495	000432'	201300	000013		MOVEI	T1,RCOD
   496	000433'	260040	000446'		PUSHJ	P,IDL1
   497	000434'	260040	001431'		PUSHJ	P,SETTIM	;MAKE SURE IT HAPPENS EVENTUALLY
   498	000435'	260062	000000*		PUSHJ	P,@KONRCL(J)	;ISSUE RECAL
   499	000436'	254000	000425'		JRST	KCIPOP
   500
   501	000437'	137300	000400*	DTROFS:	DPB	T1,UNYOCV	;STORE UPDATED COUNT.
   502	000440'	135300	000000*		LDB	T1,UNYRTO	;RETRY COUNT AFTER OFFSET.
   503	000441'	137300	000431*		DPB	T1,UNYRTY
   504	000442'	135300	000000*		LDB	T1,UNYRCO	;RECAL COUNT AFTER OFFSET.
   505	000443'	137300	000427*		DPB	T1,UNYRCL
   506	000444'	260062	000000*		PUSHJ	P,@KONOFS(J)	;SETUP FOR OFFSET, STATE IN UNYOCV
   507	000445'	254000	000374'		JRST	DTRSEC		;AND TRY AGAIN.
   508
   509
   510	000446'	202305	000251*	IDL1:	MOVEM	T1,UNISTS(U)
   511	000447'	260040	001430'		PUSHJ	P,ZERTIM
   512	000450'	135140	000334*	SETID2:	LDB	PG,UNYPAC
   513	000451'	135300	000354*		LDB	T1,PGYPNO	;Physical page number on disk
   514				IFE FTDPAG,<
   515	000452'	242300	000002		LSH	T1,P2BLSH	;CONVERT TO BLOCKS
   516	000453'	135400	000357*		LDB	T3,UNYPPL	;NUMBER OF BLOCKS IN PARTIAL PAGE TRANSFER
   517	000454'	270300	000010		ADD	T1,T3		;INCLUDE OFFSET IN ADDRESS
   518	000455'	202305	000012*		MOVEM	T1,UNIBLK(U)
   519				>
   520				IFN FTDPAG,<
   521					MOVEM	T1,UNIPAG(U)	;Store for KONRED and KONWRT
   522				>
   523	000456'	205300	400000	SETIDL:	MOVSI	T1,(1B0)
   524	000457'	412302	000220*		ANDCAM	T1,KONPTR(J)	;Clear busy flag for this kontroller
   525	000460'	550402	000000*		HRRZ	T3,KONCHN(J)
   526	000461'	412310	000000*		ANDCAM	T1,CHNBSY(T3)	;Clear busy flag for its channel
   527	000462'	263040	000000		POPJ	P,
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 10
FILIO.MAC	19-NOV-87 14:54		Data transfer OK

   528				SUBTTL	Data transfer OK
   529	000463'	201700	000000	DTAOK:	MOVEI	P3,0		;NO ERRORS
   530	000464'	331005	000373*		SKIPL	UNIRCT(U)	;WAS THERE AN ERROR?
   531	000465'	254000	000474'		 JRST	DTAOK1		;NO
   532	000466'	201300	000001		MOVEI	T1,1
   533	000467'	205340	000345*		MOVSI	T2,UNPDEV
   534	000470'	612345	000464*		TDNE	T2,UNIRCT(U)	;DEVICE OR DATA?
   535	000471'	207000	000006		 MOVSS	T1		;DEVICE
   536	000472'	272305	000314*		ADDM	T1,UNISCT(U)
   537					PUSHJ	P,@KONSFT(J)	;TELL DRIVER THAT SOFT ERROR HAS OCCURRED, MAYBE HAS TO SAVE SO
   538	000473'	260062	000315*	ME STATUS.
   539	000474'	260040	001430'	DTAOK1:	PUSHJ	P,ZERTIM	;Clear hung timer
   540	000475'	260040	000456'		PUSHJ	P,SETIDL	;KON AND CHN ARE NOW IDLE
   541	000476'	402005	000446*		SETZM	UNISTS(U)	;UNIT IS NOW IDLE
   542	000477'	402005	000470*		SETZM	UNIRCT(U)	;ZERO THIS FOR NEXT TIME
   543	000500'	402005	000000*		SETZM	UNIRC1(U)	;ZERO SECOND E.R. STORAGE CELL.
   544
   545	000501'	550741	777777	SWPFIN:	HRRZ	P4,-1(P)	;Get number of blocks or pages
   546				IFN FTDPAG,<
   547					LSH	P4,P2BLSH	;Convert to number of blocks
   548				>
   549	000502'	201305	000000*		MOVEI	T1,UNIICT(U)	;GET POINTER TO BLOCKS TRANS
   550	000503'	260040	001354'		PUSHJ	P,UPSTAT	;AND UPDATE
   551	000504'	322700	000571'		JUMPE	P3,NOSWPR	;No swap errors (P4 has # of blocks xfer'd)
   552
   553				;   The following path was used to get here:
   554				;1) Disk interrupt to BPXINT, APXINT, or RMXINT
   555				;2) Disk driver jumps to FILINT with bits in T1
   556				;3) KCMERR was set in T1 when tested at DTASAT
   557				;4) Jump to DTAOK1 at either DTRSEC+16 or DTAST2+7, which set P3 nonzero
   558
   559	000505'	607000	000020		TLNN	S,IO		;INPUT OR OUTPUT ERROR?
   560	000506'	254000	000562'		 JRST	SWPFIE		;INPUT
   561	000507'	135340	000000*		LDB	T2,PGYADR	;OUTPUT, GET DISK ADDRESS
   562	000510'	313140	000000*		CAMLE	PG,MAXPCB	;Is page a PCB?
   563	000511'	254000	000551'		 JRST	SWPFNP		;No
   564	000512'	202140	000521'		MOVEM	PG,SAVEPG
   565	000513'	135340	000000*		LDB	T2,PGYLMA	;Yes, get address of page
   566	000514'	260040	000000*		PUSHJ	P,CTLFND	;Determine PCB type
   567	000515'	306140	000000*		CAIN	PG,%SAT.C	;Is it a SAT?
   568	000516'	256000	002121'		 STOPCD (.+1,INFO,WRTSAT,WRTST1,<Disk output error writing SAT>);;SWPFIN+15
   569	000517'	200140	000521'		MOVE	PG,SAVEPG
   570	000520'	254000	000551'		JRST	SWPFNP		;Go put page in error hash table (INSOH3+1)
   571
   572	000521'	000000	000000	SAVEPG:	0			;Saved contents of PG
   573
   574				;This routine called by STOPCD processor (see also CPLSAT in SWAMP)
   575	000522'	260040	000000*	WRTST1:	PUSHJ	P,DSKCLN##	;Output "Requesting FULL DSKCLN" and continue
   576	000523'	200140	000521'	WRTST2:	MOVE	PG,SAVEPG
   577					PFALL	PRTPGY		;Output info from PGY table for this PG
   578
   579	000524'	260040	000273*	PRTPGY::PUSHJ	P,INLMES##
   580	000525'	417376	262500		 ASCIZ /Core page /
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 10-2
FILIO.MAC	19-NOV-87 14:54		Data transfer OK

	000526'	703034	762500
	000527'	000000	000000
   581	000530'	200300	000003		MOVE	T1,PG
   582	000531'	260040	000000*		PUSHJ	P,OCTPNT##
   583	000532'	260040	000524*		PUSHJ	P,INLMES##
   584	000533'	203036	371736		 ASCIZ / associated with disk unit /
	000534'	617234	172312
	000535'	621016	764750
	000536'	641014	464746
	000537'	655016	567322
	000540'	721000	000000
   585	000541'	135300	000000*		LDB	T1,PGYUNI	;Get disk unit part of PGYADR
   586	000542'	260040	000531*		PUSHJ	P,OCTPNT##	;Print unit
   587	000543'	260040	000532*		PUSHJ	P,INLMES##
   588	000544'	203414	163712		 ASCIZ	/ page /
	000545'	200000	000000
   589	000546'	135300	000451*		LDB	T1,PGYPNO	;Get disk page number part of PGYADR
   590	000547'	260040	000000*		PUSHJ	P,PRT22A##	;Print page address (6 or 7 octal digits)
   591	000550'	324740	000000*		PJRST	CRLF##
   592
   593				PRINTF(<[SWPFNP Checking DSKCLN done should use DRBSTR for file]>)
   594	000551'	201300	000000*	SWPFNP:	MOVEI	T1,SRPNDS	;If DSKCLN has not run to completion,
   595	000552'	612300	000000*		TDNE	T1,STRDDB+STRBTS; then output message, don't put in OHT
   596	000553'	256000	002125'		 STOPCD (NOSWPR,EVENT,WRTDSK,WRTST2,<Disk write error>);;SWPFNP+2
   597	000554'	260040	001613'		PUSHJ	P,INSOHT	;PUT INTO OUTPUT ERROR HASH TABLE
   598	000555'	200300	000016		MOVE	T1,P3		;COPY ERROR BITS
   599	000556'	405300	300000		ANDI	T1,IODERR!IODTER ;JUST THESE
   600	000557'	242300	000023		LSH	T1,^L<IODTER>-^L<OHTDTE>+^D18	;POSITION IT FOR OHT IORM
   601	000560'	436311	001747'		IORM	T1,OHTTAB(T4)	;PUT BITS INTO OHT
   602	000561'	254000	000571'		JRST	NOSWPR		;REJOIN CODE.
   603
   604				;Disk read error
   605
   606	000562'	135300	000000*	SWPFIE:	LDB	T1,PGYSTS	;GET STATUS BITS
   607	000563'	271740	000003		ADDI	P4,3		;FORCE TO END OF THIS PAGE
   608	000564'	622700	200000		TRZE	P3,IODERR
   609	000565'	660300	000000*		 TRO	T1,PGPDER
   610	000566'	622700	100000		TRZE	P3,IODTER
   611	000567'	660300	000000*		 TRO	T1,PGPDTE
   612	000570'	137300	000562*		DPB	T1,PGYSTS	;SET ERROR BITS.
   613
   614	000571'			NOSWPR:		;Here with # of blocks transferred in P4 (even IFN FTDPAG)
   615				IFE FTDPAG,<
   616	000571'	305740	000004		CAIGE	P4,4		;THIS MIGHT BE TRUE ON RECOVERABLE ERROR
   617	000572'	254000	000657'		 JRST	SWPPPL		;YES, MUST TAKE SPECIAL PAINS
   618				>
   619	000573'	135140	000450*	SWPPLD:	LDB	PG,UNYPAC	;GET FIRST PAGE DONE
   620	000574'	242740	777776		LSH	P4,B2PLSH	;Convert # of blocks done to pages
   621	000575'	337000	000017		SKIPG	P4		;MUST BE AT LEAST ONE
   622	000576'	256000	002131'		 STOPCD (.,INFO,SWPZER,PRTPGY,<Swapped zero pages>)
   623				 ;;SWPPLD+2 (PGEZER)
   624	000577'	272740	000756'		ADDM	P4,DSKAPC	;UPDATE SYSTEM-WIDE COUNTER
   625	000600'	332000	000000*		SKIPE	JOB		;IF NULL JOB RUNNING
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 10-3
FILIO.MAC	19-NOV-87 14:54		Data transfer OK

   626	000601'	254000	000604'		 JRST	SWPFI0		;NOT
   627	000602'	476000	000000*		SETOM	CLKFLG		;GET TO SCHED EARLY SO
   628	000603'	700600	000000*		WRPI	PICLK		;HE DOESN'T HAVE TO WAIT TILL NEXT TICK.
   629	000604'	201200	000000*	SWPFI0:	MOVEI	F,SOD.N		;ASSUME SWAP OUT DONE
   630	000605'	607000	000020		TLNN	S,IO		;IS IT?
   631	000606'	201200	000000*		 MOVEI	F,SID.N		;NO, SWAP IN DONE
   632	000607'	304000	000000		CAIA			;SKIP OVER FIRST LDB
   633	000610'	135140	000000*		 LDB	PG,PGYFPL	;GET NEXT PAGE
   634	000611'	367740	000610'		SOJG	P4,.-1		;JUMP IF THIS IS NOT THE LAST
   635
   636				;HERE WITH LIST NUMBER IN F, FIRST PAGE DONE IN UNYPAC,
   637				; LAST PAGE DONE IN PG.
   638
   639				;FIRST TAKE THE PAGES THAT HAVE BEEN COMPLETED OFF THE I/O LIST.
   640
   641	000612'	135740	000573*		LDB	P4,UNYPAC	;P4 GETS FIRST DONE.
   642	000613'	200700	000003		MOVE	P3,PG		;P3 GETS LAST DONE.
   643	000614'	135400	000610*		LDB	T3,PGYFPL	;GET FIRST NOT DONE, IF ANY, IN T3
   644	000615'	200140	000017		MOVE	PG,P4		;ADDRESS FIRST DONE
   645	000616'	135140	000000*		LDB	PG,PGYBPL	;GET PREVIOUS IN PG
   646					JUMPE	PG,[DPB T3,UNYPGL ;IN NO PREVIOUS, FIRST NOT DONE, IF ANY,
   647								; IS NEW FIRST ON I/O LIST
   648	000617'	322140	002135'			    JRST .+2]	;SKIP OVER THE DPB
   649	000620'	137400	000614*		DPB	T3,PGYFPL	;PREVIOUS POINTS FORWARD TO 1ST NOT DONE
   650	000621'	250140	000010		EXCH	PG,T3		;ADDRESS 1ST NOT DONE IF ANY, T3
   651								; HAS PREVIOUS
   652	000622'	332000	000003		SKIPE	PG		;IF NO 1ST NOT DONE, NOTHING TO POINT BACK
   653	000623'	137400	000616*		 DPB	T3,PGYBPL	;1ST NOT DONE POINTS BACK TO PREVIOUS
   654
   655				;NOW TAKE PAGES THAT HAVE COMPLETED I/O AND PUT THEM ALL TOGETHER
   656				; ONTO THE CORRECT DONE LIST.
   657
   658	000624'	336404	000000*		SKIPN	T3,LSTLST(F)	;ANYONE AT ALL ON DONE LIST?
   659	000625'	254000	000637'		 JRST	NEWDON		;NO, JUST MAKE THIS THE DONE LIST
   660	000626'	554140	000010		HLRZ	PG,T3		;ADDRESS LAST IN DONE LIST
   661	000627'	137740	000620*		DPB	P4,PGYFPL	;LAST IN LIST POINTS FORWARD TO FIRST DONE
   662	000630'	250740	000003		EXCH	P4,PG		;ADDR. FIRST DONE, P4/LAST IN DONE LIST
   663	000631'	137740	000623*		DPB	P4,PGYBPL	;FIRST DONE POINTS BACK TO LAST IN DONE LIST
   664	000632'	250140	000016		EXCH	PG,P3		;ADDRESS LAST DONE, FIRST DONE IN P3.
   665	000633'	506144	000624*		HRLM	PG,LSTLST(F)	;THIS IS THE NEW LAST IN DONE LIST
   666	000634'	400300	000000		SETZ	T1,		;LAST IN DONE LIST POINTS TO 0
   667	000635'	137300	000627*		DPB	T1,PGYFPL
   668	000636'	254000	000645'		JRST	SWPFI1		;RETURN
   669
   670				;HERE WHEN DONE LIST WAS EMPTY. T3 CONTAINS 0.
   671
   672	000637'	504740	000016	NEWDON:	HRL	P4,P3		;LAST DONE,,FIRST DONE
   673	000640'	202744	000633*		MOVEM	P4,LSTLST(F)	;NEW DONE LIST
   674	000641'	550140	000017		HRRZ	PG,P4		;ADDRESS FIRST DONE
   675	000642'	137400	000631*		DPB	T3,PGYBPL	;POINTS BACK TO A 0
   676	000643'	250140	000016		EXCH	PG,P3		;ADDRESS LAST DONE, FIRST DONE IN P3.
   677	000644'	137400	000635*		DPB	T3,PGYFPL	;POINTS FORWARD TO A ZERO
   678
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 10-4
FILIO.MAC	19-NOV-87 14:54		Data transfer OK

   679				;HERE AFTER PAGES ARE PUT ONTO THE DONE LIST. STORE NEW
   680				; LIST NUMBER AND CALL FINPCB IF THIS IS A PCB, WHICH
   681				; MAY CALL SWPENQ (SO PAGE HAS TO BE ON DONE LIST).
   682				; P3 HAS FIRST PAGE DONE, LAST PAGE DONE IS LAST ON DONE LIST.
   683
   684	000645'	200140	000016	SWPFI1:	MOVE	PG,P3		;GET FIRST DONE IN PG.
   685
   686	000646'	137200	000000*	SWPFI2:	DPB	F,PGYLST	;THIS PAGE NOW ON DONE LIST
   687	000647'	315140	000000*		CAMGE	PG,MINPCB	;MUST BE AT LEAST FIRST PCB PAGE
   688	000650'	256000	000701'		 STOPCD (,XCT,SWPOOR)
   689					;PAGE NUMBER TOO LOW    ;;SWPFI2+2
   690	000651'	135700	000644*		LDB	P3,PGYFPL	;SAVE NEXT MEMBER IN CASE FINPCB
   691								; CALLS SWPENQ TO START IT AGAIN.
   692	000652'	317140	000510*		CAMG	PG,MAXPCB	;IS IT A PCB?
   693	000653'	260040	000000*		 PUSHJ	P,FINPCB	;YES, DO SPECIAL STUFF
   694	000654'	332140	000016		SKIPE	PG,P3		;GET NEXT PAGE IF ANY
   695	000655'	254000	000646'		 JRST	SWPFI2		;AND DO IT
   696	000656'	254000	000425'		JRST	KCIPOP		;RETURN.
   697
   698				IFE FTDPAG,<;Here if less than a full page was transfered
   699	000657'	135340	000453*	SWPPPL:	LDB	T2,UNYPPL	;SEE IF ANY LEFT FROM BEFORE
   700	000660'	270740	000007		ADD	P4,T2		;TOTAL TRANSFERED SO FAR
   701	000661'	137740	000657*		DPB	P4,UNYPPL	;SAVE AMOUNT DONE NOW
   702	000662'	301740	000004		CAIL	P4,4		;IF NOT, IT IS 4, WE SAVE THE 2 LOW 0 BITS
   703	000663'	254000	000573'		 JRST	SWPPLD		;FINALLY FINISHED THAT PAGE
   704	000664'	135140	000612*		LDB	PG,UNYPAC
   705	000665'	135340	000546*		LDB	T2,PGYPNO	;RESET ADDRESS
   706	000666'	242340	000002		LSH	T2,P2BLSH	;CONVERT TO BLOCKS
   707	000667'	270340	000017		ADD	T2,P4
   708	000670'	202345	000455*		MOVEM	T2,UNIBLK(U)	;RESTART I/O AT THIS BLOCK
   709	000671'	201340	000001		MOVEI	T2,PWCOD	;PW for positioning and need channel
   710	000672'	331002	000262*		SKIPL	KONIBM(J)	;If IBM disk (no latency optimization)
   711	000673'	335002	000031*		SKIPGE	KONPOS(J)	; or fixed head disk that does not position
   712	000674'	201340	000011		 MOVEI	T2,TWFCOD	;  then set to TWF to go to T
   713	000675'	202345	000476*		MOVEM	T2,UNISTS(U)
   714	000676'	254000	000425'		JRST	KCIPOP
   715				>  ;End IFE FTDPAG
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 11
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

   716				SUBTTL	FILIO SUBROUTINES
   717				COMMENT ;@@SUBROUTINE SWPENQ
   718				@@PURPOSE ADD ONE PAGE TO THE SWAP I/O REQUEST LIST
   719				@@ENTRY PG CONTAINS CORE PAGE TO ADD TO LIST. PGYSOP IS 1
   720				IF PAGE IS TO BE SWAPPED OUT, 0 OTHERWISE (PGYSIP IS ASSUMED
   721				TO BE ON IF PGYSOP IS OFF). PGYADR CONTAINS UNIT
   722				(PGYUNI) AND PAGE WITHIN UNIT (PGYPNO) THAT THE SWAP
   723				I/O IS TO BE DONE TO/FROM.
   724				@@ACCUM USES T1-T4, PG, F, U, J, P1-P4, S
   725				@@EXIT PAGE NUMBER IS NOT RETURNED IN PG, CALLER MUST SAVE.
   726				@@CALLS IOSEL, WHICH CALLS KONTROLLER DEPENDENT ROUTINES, STRTIO
   727				@@RESTRICTIONS CORE PAGE MUST NOT HAVE SWAP I/O IN PROGRESS
   728				ALREADY BEFORE CALLING. CALLER IS RESPONSIBLE FOR
   729				HANDLING ALL INFO REGARDING THE PAGE'S TRANSITION TO THE
   730				SWAP IN PROGRESS STATE (E.G. MARKING PAGE CLEAN, PUTTING
   731				JOBS INTO WAIT FOR THE PAGE, ETC.)
   732				CORE PAGE MUST BE GREATER THAN OR EQUAL TO THE FIRST PCB
   733				CORE PAGE IN THE SYSTEM, AND MUST BE LESS THAN OR
   734				EQUAL TO THE LAST CORE PAGE IN THE SYSTEM.
   735				@@FUNCTION TAKE PAGE OFF LIST IT WAS ON.  INSERT REQUEST ON
   736				UNIT'S I/O QUEUE SOAS TO KEEP I/O QUEUE SORTED
   737				WITH RESPECT TO UNIT PAGE NUMBERS. CALL IOSEL TO START I/O
   738				IF NOT ALREADY STARTED, AND RETURN.
   739				@@;
   740
   741
   742	000677'	311140	000647*	SWPENQ::CAML	PG,MINPCB	;IS PAGE IN BOUNDS?
   743	000700'	311140	000000*		CAML	PG,MEMSZP	;ONLY THESE PAGES CAN SWAP
   744	000701'	256000	002137'	SWPOOR:: STOPCD (.,STOP,SWPOOR,,<Swapper: Out of range>)
   745				   ;;SWPENQ+2
   746	000702'	135300	000507*		LDB	T1,PGYADR	;GET ADDRESS
   747	000703'	316300	000000*		CAMN	T1,ADRDUM	;THIS REALLY HAVE A DISK PAGE?
   748	000704'	256000	002142'		 STOPCD (.,STOP,SWPNDP,,<Swapper: Not a disk page>);;SWPENQ+5
   749	000705'	700600	000110*		DSKOFF			;LET NO ONE CHANGE THINGS. DO THIS
   750								; BEFORE REMLST, SINCE IF THIS IS
   751								; A PCB PAGE, COULD GO FROM SWAP DONE
   752								; LIST TO SPR LIST AT INTERRUPT LEVEL.
   753	000706'	260040	000000*		PUSHJ	P,REMLST	;TAKE CORE PAGE OFF OLD LIST
   754	000707'	135240	000541*		LDB	U,PGYUNI	;GET UNIT NUMBER FROM REQUEST
   755	000710'	303240	000000*		CAILE	U,UNTLEN##	;Don't exceed size of UNTTBL
   756	000711'	256000	002145'	SWPUOR:: STOPCD (.,STOP,SWPUOR,PRTPGY,<Swapper: Unit out of range>)
   757	000712'	200245	000067*		MOVE	U,UNTTBL(U)	;GET UNIT DATA BLOCK
   758	000713'	322240	000711'		JUMPE	U,SWPUOR	;Cannot do I/O to off-line drive
   759	000714'	201300	000000*		MOVEI	T1,SPR.N	;LIST PAGE WILL BE GOING ON
   760	000715'	137300	000646*		DPB	T1,PGYLST	;PUT IT THERE.
   761	000716'	135300	000340*	IFCPU (KL),<LDB	T1,PGYSOP	;GET DIRECTION
   762					MOVE	T1,@[CSUCNT
   763	000717'	200326	002151'			     CSVCNT](T1) ;GET PROPER COUNT
   764	000720'	202320	000000*		MOVEM	T1,@PGYCSH	;REMEMBER SWEEP NUMBER
   765				>;END IFCPU (KL)
   766	000721'	135200	000000*		LDB	F,UNYPGL
   767	000722'	322200	000752'		JUMPE	F,SWPEN0	;NO REQUEST WAITING, QUE THIS
   768	000723'	201400	000000		MOVEI	T3,0		;THIS IS THE 'PREVIOUS PAGE'
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 11-2
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

   769	000724'	135300	000665*		LDB	T1,PGYPNO	;GET THE DESIRED ADDRESS
   770	000725'	250200	000003		EXCH	F,PG		;SAVE REQUEST PAGE IN F
   771	000726'	135340	000724*	SQLP:	LDB T2,PGYPNO		;GET ADDRESS OF REQUEST IN QUE
   772	000727'	317300	000007		CAMG	T1,T2		;SEARCH TILL ONE GREATER
   773	000730'	254000	000734'		JRST	SWPQFD		;THIS IS IT
   774	000731'	200400	000003		MOVE	T3,PG
   775	000732'	135140	000651*		LDB	PG,PGYFPL	;GET NEXT
   776	000733'	326140	000726'		JUMPN	PG,SQLP		;CONTINUE SEARCH
   777	000734'	332000	000003	SWPQFD:	SKIPE PG
   778	000735'	137200	000642*		DPB	F,PGYBPL	;LINK IN BACK POINTER
   779	000736'	250200	000003		EXCH	F,PG
   780	000737'	137200	000732*		DPB	F,PGYFPL	;AND FORWAR LINK
   781	000740'	137400	000735*		DPB	T3,PGYBPL	;SET BACK LINK
   782	000741'	250140	000010		EXCH	PG,T3
   783					JUMPE	PG,[DPB T3,UNYPGL	;SET UP LIST IF PREVIOUS=0
   784	000742'	322140	002153'			JRST .+2]
   785	000743'	137400	000737*		DPB	T3,PGYFPL	;ELSE SET FORWARD LINK IN OLD
   786	000744'	200140	000010		MOVE	PG,T3		;RESTORE PG
   787	000745'	370000	000756'	SQENT:	SOS	DSKAPC		;NEW PG ON QUEUES
   788	000746'	550105	000130*		HRRZ	J,UNIKON(U)	;J/ KONTROLLER ADDRESS
   789	000747'	260040	001054'		PUSHJ	P,IOSEL
   790	000750'	700600	000123*		DSKON
   791	000751'	263040	000000		POPJ	P,
   792
   793	000752'	137200	000743*	SWPEN0:	DPB	F,PGYFPL	;REQUEST IS FIRST AND LAST
   794	000753'	137200	000740*		DPB	F,PGYBPL	;ON THE UNIT'S SWAP IN PROGRESS LIST
   795	000754'	137140	000721*		DPB	PG,UNYPGL	;REQUEST IS FIRST ON LIST
   796	000755'	254000	000745'		JRST	SQENT		;AND GET THINGS STARTED
   797
   798	000756'	000000	000000	DSKAPC:: Z		;SYSTEM-WIDE ACTIVE-PAGE COUNT ON ALL UNITS
   799							;KEPT AS -(NUMBER OUTSTANDING PAGES)
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 12
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

   800				;SWPSTR ACTUALLY STARTS THE I/O PROCESS FOR THE LIST IN UNYPAC
   801
   802	000757'			STRTIO:				;Start I/O - U point to unit
   803								;Called when there is at least 1 page to xfer
   804	000757'	135140	000664*	SWPSTR:	LDB	PG,UNYPAC	;First page in list for this unit
   805	000760'	135000	000716*		LDB	S,PGYSOP	;Swap out flag
   806				IFCPU (KL),<
   807	000761'	200320	000720*		MOVE	T1,@PGYCSH	;Set highest cache sweep number seen so far
   808	000762'	202300	001045'		MOVEM	T1,CSNSAV
   809				>;END IFCPU (KL)
   810	000763'	336000	000000		SKIPN	S
   811	000764'	334302	000000*		 SKIPA	T1,KONRED(J)	;IN  = APXRED,BPXRED,RMXRED
   812	000765'	200302	000000*		MOVE	T1,KONWRT(J)	;OUT = APXWRT,BPXWRT,RMXWRT
   813	000766'	260046	000000		PUSHJ	P,(T1)		;Set up for I/O, UNIPAG has disk page address
   814								;P1 thru P4 get set up for use by KONADD
   815	000767'	260040	001431'		PUSHJ	P,SETTIM	;Set 3 second timer
   816	000770'			SWPGL1:
   817				IFE FTDPAG,<
   818	000770'	135340	000661*		LDB	T2,UNYPPL	;See if finishing up from error
   819	000771'	326340	001046'		JUMPN	T2,SWPPST	;If so, do less than 4 blocks
   820				>
   821	000772'	135400	000726*		LDB	T3,PGYPNO	;Get the starting page number on disk
   822	000773'	200340	000003		MOVE	T2,PG		;First consecutive core page
   823	000774'	200300	000003		MOVE	T1,PG		; to both (T1 will increment if contiguous)
   824
   825	000775'			SWPGLP:		;Loop looking for consecutive blocks to contiguous core
   826				IFCPU (KL),<
   827	000775'	200460	000761*		MOVE	T4,@PGYCSH	;Get sweep number for this core page
   828	000776'	313440	001045'		CAMLE	T4,CSNSAV	;Keep the highest
   829	000777'	202440	001045'		 MOVEM	T4,CSNSAV
   830				>;END IFCPU (KL)
   831	001000'	135140	000752*		LDB	PG,PGYFPL	;Get next page in the list for this unit
   832	001001'	322140	001023'		JUMPE	PG,SWPST1	;No more pages need I/O on this unit
   833	001002'	135440	000760*		LDB	T4,PGYSOP	;Get page's direction (in or out)
   834	001003'	312440	000000		CAME	T4,S
   835	001004'	254000	001023'		 JRST	SWPST1		;Different direction, start what we've got
   836	001005'	135440	000772*		LDB	T4,PGYPNO	;Get disk page number
   837	001006'	271400	000001		ADDI	T3,1		;Increment current disk page number
   838	001007'	312400	000011		CAME	T3,T4		;Does next page follow previous disk page?
   839	001010'	254000	001023'		 JRST	SWPST1		;Discontiguous disk address, start previous
   840				;Here when 8 or more consecutive blocks are requested.  If going to
   841				;scattered core pages, make several small requests to KONADD.  If going to
   842				;consecutive core pages, make one big request to KONADD (because that is more
   843				;efficient when using DF10 or RH11).  To avoid end-of-track or command list
   844				;full hassles, request only 1 page at a time from BPXADD.
   845	001011'	335002	000672*		SKIPGE	KONIBM(J)	;Disks on the SA-10?
   846	001012'	254000	001015'		 JRST	SWPSTX		;Yes, only 1 page per call to KONADD
   847	001013'	306146	000001		CAIN	PG,1(T1)	;Does this new core page follow current?
   848	001014'	344300	000775'		 AOJA	T1,SWPGLP	;Yes, count contiguous pages
   849	001015'	275307	777777	SWPSTX:	SUBI	T1,-1(T2)	;Core is discontiguous, get number of pages
   850				IFE FTDPAG,<
   851	001016'	242300	000011		LSH	T1,P2WLSH	;Conver to number of words
   852	001017'	242340	000011		LSH	T2,P2WLSH	;Convert to physical word address in core
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 12-2
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

   853				>
   854				;P034/P05 Changed to use pages instead of words.  UNIPAG has disk address.
   855				IFN FTDPAG,<;T1 has number of pages to transfer, T2 has physical page number>
   856	001020'	260062	000000*		PUSHJ	P,@KONADD(J)	;Add to current I/O command list
   857	001021'	324740	001030'		  PJRST	SWPSTD		;Command list is full or hit end of cylinder
   858	001022'	254000	000770'		JRST	SWPGL1		;Loop back to call KONADD again
   859
   860	001023'	275307	777777	SWPST1:	SUBI	T1,-1(T2)	;End of list or noncontiguous disk address
   861				IFE FTDPAG,<
   862	001024'	242300	000011		LSH	T1,P2WLSH	;# of words to transfer
   863	001025'	242340	000011		LSH	T2,P2WLSH	;Word address of start
   864	001026'			SWPST2:				;Here to retry a partial page transfer
   865				            ;T1 has number of words to transfer, T2 has physical word address>
   866				IFN FTDPAG,<;T1 has number of pages to transfer, T2 has physical page number>
   867	001026'	260062	001020*		PUSHJ	P,@KONADD(J)	;Add transfer to the command list
   868	001027'	255000	000000		  JFCL			;No problem if command list is now full
   869					PFALL	SWPSTD		;Swap start done
   870
   871	001030'			SWPSTD:			;Here when contiguous disk transfer is set up
   872				IFCPU (KL),<
   873	001030'	200400	000000		MOVE	T3,S		;GET DIRECTION OF IO
   874	001031'	200440	001045'		MOVE	T4,CSNSAV	;GET LARGEST SWEEP NUMBER
   875					CAME	T4,@[CSUCNT
   876	001032'	312470	002151'			     CSVCNT](T3) ;NEED A SWEEP?
   877					 PJRST	[AOS CSHSAV	;NO, COUNT A SAVED SWEEP
   878	001033'	324740	002155'			 PJRST @KONFIN(J)] ;AND START TRANSFER UP.
   879	001034'	326400	001041'		JUMPN	T3,SWPCSV	;DO VALIDATE IF ITS OUTPUT
   880	001035'	260040	000000*		CSHUNL			;INPUT, START AN UNLOAD.
   881	001036'	316300	000000*		CAMN	T1,CSUCNT	;SWEEP NUMBER CHANGE YET?
   882	001037'	254000	001036'		 JRST	.-1		;NO, WAIT FOR APR INTERRUPT
   883	001040'	324762	000000*		PJRST	@KONFIN(J)	;YES, CAN START I/O NOW.
   884
   885	001041'	260040	000000*	SWPCSV:	CSHVAL			;IT WAS AN OUTPUT, DON'T UNLOAD CACHE
   886	001042'	316300	000000*		CAMN	T1,CSVCNT	;WAIT UNTIL VALIDATE COMPLETES
   887	001043'	254000	001042'		 JRST	.-1
   888				>;END IFCPU (KL)
   889				IFCPU (KS),<
   890					SKIPN	S		;SKIP IF OUTPUT
   891					 CSHIVL			;ON INPUT INVALIDATE CACHE
   892				>;END IFCPU (KS)
   893	001044'	324762	001040*		PJRST	@KONFIN(J)	;GO START UP I/O
   894
   895				IFCPU (KL),<
   896	001045'			CSNSAV:	BLOCK	1	;HIGHEST SWEEP NUMBER SEEN IN CURRENT GROUP OF I/O REQUESTS
   897				>;END IFCPU (KL)
   898
   899				IFE FTDPAG,<
   900	001046'	242340	000007	SWPPST:	LSH	T2,B2WLSH	;FIND NUMBER OF WORDS ALREADY TRANSFERED
   901	001047'	201300	001000		MOVEI	T1,1000
   902	001050'	274300	000007		SUB	T1,T2		;THIS IS THE NUMBER LEFT TO DO
   903	001051'	242140	000011		LSH	PG,P2WLSH
   904	001052'	270340	000003		ADD	T2,PG		;THIS IS THE ADDRESS
   905	001053'	254000	001026'		JRST	SWPST2		;GO
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 12-3
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

   906				>  ;End IFE FTDPAG
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 13
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

   907				;SELECT THE I/O TRANSFER TO BE STARTED. CALLED AT INTERUPT
   908				;LEVEL OR AT UUO LEVEL WITH DSKOFF IN EFFECT
   909
   910				;I	Idle - UNISTS=0
   911				;PW	Position wait - start monitor seek when kontroller is free
   912				;P	Positioning - when seek done, select best XFR and go to TWF
   913				;SW	Seek wait - user has issued a SEEK uuo, wait for kontroller
   914				;S	Seek - when seek done, calculate best XFR and go to P or I
   915				;RS	Read status - when done, return sense bytes to user
   916				;CW	Capacity wait - determine size of disk when kontroller is free
   917				;C	Capacity test in progress - when done, inform ONCDSK
   918				;TW	Transfer wait - start XFR on fixed head disk when kontroller is free
   919				;TWF	Transfer wait fixed - position done or retry needed, start current XFR
   920				;T	Transfer - go to I if XFR OK, go to TWF if retry needed
   921				;R	RECAL in progress - go to PW (go to TWF if SA10 which avoids PW and P)
   922				;OW	Operator wait - human intervention required (drive off-line)
   923				;VW	Volume wait - waiting for other half of 3652 disk to finish
   924
   925				;IOSEL is called from ONCDSK to start capacity test, from the SEEK uuo,
   926				;from hung unit recovery, and when time to swap pages to/from core.
   927
   928	001054'	261040	000005	IOSEL::	PUSH	P,U		;Save starting unit at top of stack
   929	001055'	336005	000675*		SKIPN	UNISTS(U)
   930	001056'	254000	001157'		 JRST	IOIDLE		;The unit is currently idle
   931	001057'	335002	000673*		SKIPGE	KONPOS(J)	;Positioner or fixed head unit?
   932	001060'	254000	001105'		 JRST	IOCHN		;Fixed head, no seeks required on this KON
   933	001061'	335002	001011*		SKIPGE	KONIBM(J)	;IBM disks?
   934	001062'	254000	001232'		 JRST	IOINC1		;Yes, don't need DF10 channel with SA10
   935
   936				;Start multiple overlapping seeks on the units on this kontroller
   937
   938	001063'	335002	000457*	IOKON:	SKIPGE	KONPTR(J)	;Is the kontroller busy?
   939	001064'	254000	001136'		 JRST	UXPOPJ		;Cannot proceed until it is free
   940	001065'	200305	001055*	IOKON0:	MOVE	T1,UNISTS(U)
   941	001066'	306300	000006		CAIN	T1,CWCOD	;Part of the capacity test involves seeks
   942	001067'	260040	001152'		 PUSHJ	P,CPYKON	;Start up capacity test if in CW
   943	001070'	302300	000003		CAIE	T1,SWCOD	;Seek wait
   944	001071'	306300	000001		CAIN	T1,PWCOD	;Position wait
   945	001072'	334000	000000		 SKIPA			;Start position of SW or PW
   946	001073'	254000	001102'		  JRST	IOKON1		;See if next unit needs a position operation
   947	001074'	350005	001065*		AOS	UNISTS(U)	;Set to S or P
   948	001075'	306300	000003		CAIN	T1,SWCOD	;Is this a user request (SEEK UUO)
   949	001076'	354005	000030*	USRSEK:	 AOSA	UNIUSC(U)	;Count user
   950	001077'	350005	000000*	MONSEK:	AOS	UNIMSC(U)	; or monitor seek
   951	001100'	260040	001431'		PUSHJ	P,SETTIM	;Set 3 second timer
   952	001101'	260062	001057*		PUSHJ	P,@KONPOS(J)	;Start the position
   953	001102'	554245	000746*	IOKON1:	HLRZ	U,UNIKON(U)	;Get next unit on kontroller
   954	001103'	312241	000000		CAME	U,(P)		;Is it the one we started with?
   955	001104'	254000	001065'		 JRST	IOKON0		;No, check it
   956
   957				;All outstanding seeks taken care of.
   958				;Search all units on this channel, look for best one to start a transfer.
   959
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 13-2
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

   960	001105'	550602	000460*	IOCHN:	HRRZ	P1,KONCHN(J)	;Pointer to channel
   961	001106'	335014	000461*		SKIPGE	CHNBSY(P1)	;Is channel idle?
   962	001107'	254000	001136'		 JRST	UXPOPJ		;No, cannot proceed until it is free
   963
   964	001110'	201600	000000		MOVEI	P1,0		;No "BEST" unit so far
   965	001111'	201640	000001		MOVEI	P2,1		;Found perfect unit if this goes to zero
   966	001112'	200305	001074*	IOCHN0:	MOVE	T1,UNISTS(U)
   967	001113'	306300	000006		CAIN	T1,CWCOD	;Part of the capacity test is a read transfer
   968	001114'	260040	001152'		 PUSHJ	P,CPYKON	;Start capacity test
   969	001115'	306300	000011		CAIN	T1,TWFCOD	;TWF if already on cylinder or retry needed
   970	001116'	260040	001141'		 PUSHJ	P,IOCHNF	;Set P1 and P2 if this is best unit
   971	001117'	306300	000010		CAIN	T1,TWCOD	;Only fixed head disks are ever in TW
   972	001120'	260040	001377'		 PUSHJ	P,PIKTRN	;TW, pick best transfer for drum
   973	001121'	554245	000000*	IOCNH1:	HLRZ	U,UNICHN(U)	;Check next unit looped on this channel
   974	001122'	312241	000000		CAME	U,(P)		;Back where we started?
   975	001123'	326640	001112'		 JUMPN	P2,IOCHN0	;If not ideal transfer found, try next one
   976	001124'	336240	000014		SKIPN	U,P1		;Found unit with 0 latency or checked all
   977	001125'	254000	001136'		 JRST	UXPOPJ		;Give up if no units are in TW or TWF
   978	001126'	550105	001102*		HRRZ	J,UNIKON(U)	;Point to correct kontroller (U may be changed)
   979	001127'	201300	000012		MOVEI	T1,TCOD
   980	001130'	202305	001112*		MOVEM	T1,UNISTS(U)	;Mark transfer in progress on this unit
   981	001131'	550602	001105*		HRRZ	P1,KONCHN(J)	;Pointer to channel
   982	001132'	205300	400000		MOVSI	T1,(1B0)
   983	001133'	436314	001106*		IORM	T1,CHNBSY(P1)	;Mark channel busy
   984	001134'	436302	001063*		IORM	T1,KONPTR(J)	;Mark kontroller busy
   985	001135'	260040	000757'	STRTIU:	PUSHJ	P,STRTIO	;Start I/O transfer (read or write)
   986	001136'	262040	000005	UXPOPJ:	POP	P,U		;Back to UCB we started with
   987	001137'	550105	001126*		HRRZ	J,UNIKON(U)	;Original kontroller
   988	001140'	263040	000000		POPJ	P,		;End of IOSEL
   989
   990				;IOCHNF - IO channel is free, find best unit to start
   991
   992	001141'	550105	001137*	IOCHNF:	HRRZ	J,UNIKON(U)	;Here if was in TWF (happens on retry)
   993	001142'	200305	000670*	IFE FTDPAG,<MOVE T1,UNIBLK(U)>	;CHECK LATENCY FOR REQUESTED BLOCK
   994				IFN FTDPAG,<MOVE T1,UNIPAG(U)>	;CHECK LATENCY FOR REQUESTED PAGE
   995	001143'	331002	001061*		SKIPL	KONIBM(J)	;Don't call KONLTM for IBM disks
   996	001144'	260062	000000*		 PUSHJ P,@KONLTM(J)	;Get # of microseconds until sector arrives
   997	001145'	332000	000014		SKIPE	P1		;FIRST ONE IS ALWAYS BEST
   998	001146'	315300	000015		CAMGE	T1,P2
   999	001147'	260040	001424'		 PUSHJ	P,SAVBST	;BEST SO FAR
  1000	001150'	200305	001130*		MOVE	T1,UNISTS(U)	;Restore T1
  1001	001151'	263040	000000		POPJ	P,		;Continue down skip chain
  1002
  1003				;CPYKON - Called to start capacity test when UNISTS=CWCOD
  1004
  1005	001152'	350005	001150*	CPYKON:	AOS	UNISTS(U)	;Increment CW to C
  1006	001153'	550302	000000*		HRRZ	T1,KONCPY(J)	;NOTE: LH of KONCPY has 16 unit bits
  1007	001154'	260046	000000		PUSHJ	P,(T1)		;Go to capacity test
  1008	001155'	200305	001152*		MOVE	T1,UNISTS(U)	;Set T1 back to current status
  1009	001156'	263040	000000		POPJ	P,		;Continue down skip chain
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 14
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

  1010				;HERE IF THE UNIT IS IDLE
  1011
  1012	001157'	335002	001101*	IOIDLE:	SKIPGE	KONPOS(J)	;Does unit have moving heads?
  1013	001160'	254000	001172'		 JRST	IOINPS		;No, fixed head disks do not seek
  1014				IFN SAXN,<
  1015	001161'	335002	001143*		SKIPGE	KONIBM(J)	;IBM disk?
  1016	001162'	254000	001177'		 JRST	IOINCH		;Yes, skip PW and TWF states, go to T
  1017				>  ;End IFE SAXN
  1018	001163'	260040	001242'		PUSHJ	P,PIKPOS	;Pick the best position
  1019	001164'	322140	001063'		  JUMPE	PG,IOKON	;No transfers waiting if zero in PG
  1020	001165'	201300	000001		MOVEI	T1,PWCOD	;(lowest cylinder on unit if nonzero in PG)
  1021	001166'	336000	000015		SKIPN	P2		;P2 has magnitude of difference in cylinders
  1022	001167'	201300	000011		 MOVEI	T1,TWFCOD	;If already at right cylinder, use TWF not PW
  1023	001170'	202305	001155*		MOVEM	T1,UNISTS(U)
  1024	001171'	254000	001063'		JRST	IOKON		;Go see if KON is ready
  1025
  1026				;IOIDLE - No Position Seek required (for FH disks)
  1027
  1028	001172'	201300	000010	IOINPS:	MOVEI	T1,TWCOD	;Set TW (fixed head disks only)
  1029	001173'	135600	000754*		LDB	P1,UNYPGL	;Is there a transfer waiting?
  1030	001174'	322600	001105'		JUMPE	P1,IOCHN	;No, leave it idle, check others on channel
  1031	001175'	202305	001170*		MOVEM	T1,UNISTS(U)	;Yes, set to TW
  1032	001176'	254000	001105'		JRST	IOCHN		;And see if channel is ready
  1033
  1034				IFN SAXN,<
  1035				;IOIDLE - No Channel needed
  1036				;Don't check other units on this channel - that's what the block MUX is for.
  1037				;If this unit has something to do, start it as long as the other half of the
  1038				;3652 disk is not busy.  Switch to OLV at lowest requested cylinder.
  1039
  1040	001177'	205300	000121*	IOINCH:	MOVSI	T1,UNPRRS	;Was RRSETB called while unit was busy?
  1041	001200'	612305	000267*		TDNE	T1,UNIDES(U)
  1042	001201'	254000	000125'		 JRST	RDRST		;Yes, do that and UXPOPJ
  1043	001202'	260040	001242'		PUSHJ	P,PIKPOS	;Pick best unit to start (IBM disks)
  1044	001203'	254000	001215'		  JRST	IOIOLV		;Time to start other logical volume
  1045	001204'	332005	000020*		SKIPE	UNIOLV(U)	;Is there an Other Logical Volume?
  1046	001205'	336025	001204*		SKIPN	@UNIOLV(U)	;Yes, is it busy?
  1047	001206'	254000	001237'		 JRST	IOINC2		;No, go ahead with this transfer
  1048	001207'	201300	000015		MOVEI	T1,VWCOD	;Logical volume wait code
  1049	001210'	316325	001205*		CAMN	T1,@UNIOLV(U)	;Is other volume waiting for us?
  1050	001211'	254000	001237'		 JRST	IOINC2		;Yes, we have priority as long as PIKPOS skips
  1051	001212'	202305	001175*		MOVEM	T1,UNISTS(U)	;No, other logical volume is busy, we have to
  1052	001213'	260040	001431'		PUSHJ	P,SETTIM	; wait for elevator algorithm to hit bottom
  1053	001214'	254000	001136'		JRST	UXPOPJ		; (SETTIM gives it 3 seconds to do so)
  1054
  1055				;Hit lowest cylinder wanted on this unit, switch to OLV if it is waiting
  1056
  1057	001215'	201300	000015	IOIOLV:	MOVEI	T1,VWCOD	;Code for other unit waiting for us
  1058	001216'	332005	001210*		SKIPE	UNIOLV(U)	;Is there an other logical volume?
  1059	001217'	312325	001216*		CAME	T1,@UNIOLV(U)	;Yes, does it want to go?
  1060					 JRST	[JUMPE PG,UXPOPJ  ;No, done if nothing to do
  1061	001220'	254000	002157'			 JRST  IOINC2]	  ;Else do transfer to cylinder 0
  1062	001221'	322140	001224'		JUMPE	PG,IOIOL1	;Yes, do we want to go?
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 14-2
FILIO.MAC	19-NOV-87 14:54		FILIO SUBROUTINES

  1063	001222'	202305	001212*		MOVEM	T1,UNISTS(U)	;No, put us in VW wait state
  1064	001223'	260040	001431'		PUSHJ	P,SETTIM	;Set timer for 3 seconds in case OLV gets hung
  1065	001224'	350000	001231'	IOIOL1:	AOS	OVBUSY		;Count # of times switched to OLV
  1066	001225'	550245	001217*		HRRZ	U,UNIOLV(U)	;Get pointer to other unit's UNISTS
  1067	001226'	275240	001222*		SUBI	U,UNISTS	;Point to start of UCB
  1068	001227'	550105	001141*		HRRZ	J,UNIKON(U)	;Point to its KON
  1069	001230'	254000	001237'		JRST	IOINC2		;Start up this other logical volume
  1070	001231'	000000	000000	OVBUSY::0			;# of times switched from BPAn to BPCn
  1071				>  ;End IFN SAXN
  1072
  1073				;IOSEL called for a unit that does no latency (doesn't set channel busy)
  1074				;UNISTS checked to be nonzero, it can only be CW or TWF on SA10 disks
  1075
  1076	001232'	200305	001226*	IOINC1:	MOVE	T1,UNISTS(U)	;Get current status
  1077	001233'	306300	000006		CAIN	T1,CWCOD	;Did ONCDSK put unit in capacity wait?
  1078	001234'	260040	001152'		 PUSHJ	P,CPYKON	;Start capacity test
  1079	001235'	302300	000011		CAIE	T1,TWFCOD	;Is it in TWF? (doing a retry)
  1080	001236'	254000	001136'		 JRST	UXPOPJ		;No, must be T or VW, wait for it to be idle
  1081
  1082				;Here to start I/O on a unit that does not use a DF10 data channel.
  1083				;It has already been determined that UNISTS is zero or TWF.
  1084
  1085	001237'	201300	000012	IOINC2:	MOVEI	T1,TCOD		;Go directly to Transfer status (bypass PW)
  1086	001240'	202305	001232*		MOVEM	T1,UNISTS(U)	;Put in block MUX list and start it
  1087	001241'	254000	001135'		JRST	STRTIU		;(do not mark channel or kontroller busy)
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 15
FILIO.MAC	19-NOV-87 14:54		Elevator algorithm

  1088				SUBTTL	Elevator algorithm
  1089				COMMENT ! PIKPOS & PIKCYL
  1090				PURPOSE: PICK THE BEST POSITION & CYLINDER TO DO NEXT
  1091				EXPECTS: U/UNIT
  1092				DESTROYS:  T1-T3,P1-P3,PG
  1093				RETURNS:
  1094				  NOSKIP: NO PAGES ON UNYPGL,NOTHING TO DO. T3/BLOCKS PER CYL
  1095				  SKIP: P1/ 1ST BLK OF NEXT CYL
  1096					P2/ NUMBER OF CYLS TO MOVE
  1097					P3/ PG/ OPTIMUM PG
  1098					T3/ BLOCKS PER CYL
  1099				FUNCTION: CHAIN DOWN UNYPGL LOOKING FOR LARGEST DSK PAGE
  1100				 NUMBER .LE. UNICYL(U).  (IF ONE FOUND ON SAME CYL
  1101				 AS UNICYL(U), SOSLE FAIRNESS COUNT AND USE THIS ONE
  1102				 IF LARGER THAN LAST PAGE DONE ON THIS CYL AND FAIRNESS CNT
  1103				 NOT EXHAUSTED). AT THE POINT WE ENCOUNTER A DSK PAGE NUMBER
  1104				 WHOSE CYL IS > UNICYL, RESET FAIRNESS, CHECK
  1105				 WHICH DIRECTION WE'RE GOING. IF WE ARE GOING TOWARDS LARGER
  1106				 DISK PAGE NOS., EXIT WITH THIS AS THE OPTIMUM PAGE. IF
  1107				 WE WERE GOING TOWARDS SMALLER PAGES, USE THE LARGEST PAGE
  1108				 SMALLER THAN UNICYL WHICH WE ALREADY FOUND, IF ANY; OTHERWISE
  1109				 SET DIRECTION TOWARDS LARGER PAGES (="FORWARD") AND EXIT WITH THIS
  1110				 ONE AS OPTIMUM PAGE.
  1111
  1112				 IF ALL PAGES ON UNYPGL HAVE CYL < UNICYL, SET DIRECTION
  1113				 TOWARDS SMALLER (="BACKWARDS") AND USE LARGEST FOUND.
  1114
  1115				CAVEAT:  THIS IS A ROUGH DESCRIPTION OF THE DSK ALGORITHM,
  1116				 AND I DON'T GUARANTEE IT TO BE EXACT; MOREOVER, SOME
  1117				 BEING MAY CHANGE THE CODE WITHOUT CHANGING THIS COMMENT.
  1118				 IT IS INTENDED AS AN INTRODUCTORY GUIDE ONLY, TO THOSE WISHING
  1119				 TO PENETRATE THIS MYSTERIOUS REALM, AS I HAVE.
  1120				 GOOD LUCK.  MAGIC IS SAID TO WORK HERE. /AA
  1121				!
  1122				;THIS IS THE FAMOUS "ELEVATOR" ALGORITHM
  1123
  1124
  1125	001242'	211600	000001	PIKPOS:	MOVNI	P1,1		;INITIALIZE TO -1 FOR FIRST REQ SELECTED
  1126	001243'	201700	000000		MOVEI	P3,0		;NONE SAVED
  1127	001244'	135400	000013*	IFE FTDPAG,<LDB	T3,UNYBPY>	;BLOCKS PER CYLINDER (ELEVATOR ALGORIGTHM)
  1128				IFN FTDPAG,<LDB	T3,UNYPPY>	;PAGES PER CYLINDER (ELEVATOR ALGORIGTHM)
  1129	001245'	135140	001173*		LDB	PG,UNYPGL	;FIRST PAGE ON LIST TO TRANSFER
  1130	001246'	322140	000053*		JUMPE	PG,CPOPJ	;IF NO PAGES, EXIT WITH ZERO IN PG
  1131	001247'	261045	000000*		PUSH	P,UNIDIR(U)	;Save direction flag
  1132	001250'	135300	001005*	PIKPSL:	LDB	T1,PGYPNO	;GET ADDRESS FOR PAGE
  1133	001251'	242300	000002	IFE FTDPAG,<LSH T1,P2BLSH>	;CONVERT TO BLOCKS
  1134	001252'	311300	000014	PKPSP:	CAML	T1,P1		;CHECK AT ALL?
  1135	001253'	265640	001277'		 JSP	P2,PIKCYL	;YES, DO THE WORK
  1136	001254'	135140	001000*		LDB	PG,PGYFPL	;NEXT
  1137	001255'	326140	001250'		JUMPN	PG,PIKPSL	;MORE PAGES, CONTINUE
  1138
  1139				;BACK HERE FROM PIKCYL TO USE SAVED BEST-SO-FAR PAGE.
  1140
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 15-2
FILIO.MAC	19-NOV-87 14:54		Elevator algorithm

  1141	001256'	200140	000016	PKPSB:	MOVE	PG,P3		;OUT OF PAGES. GET SAVED PAGE.
  1142	001257'	205340	400000		MOVSI	T2,(1B0)	;CHANGE DIRECTION TO BACKWARDS.
  1143	001260'	436345	001247*		IORM	T2,UNIDIR(U)	;THIS IS A NORMAL WAY OUT IN BACKUP MODE
  1144	001261'	135300	001250*	PIKPS2:	LDB	T1,PGYPNO	;FOR A PAGE, GET ADDRESS
  1145				IFE FTDPAG,<
  1146	001262'	242300	000002		LSH	T1,P2BLSH	;CONVERT TO BLOCKS
  1147	001263'	202305	001142*		MOVEM	T1,UNIBLK(U)	;SET DESIRED BLOCK
  1148				>
  1149				IFN FTDPAG,<
  1150					MOVEM	T1,UNIPAG(U)	;Tell BPXKON/APXKON/RMXKON the disk address
  1151				>
  1152	001264'	230300	000010		IDIV	T1,T3		;FIND THE CYL
  1153	001265'	274305	000260*		SUB	T1,UNICYL(U)	;DIFF IS ENOUGH
  1154	001266'	322300	001270'		JUMPE	T1,PIKPC1	;SET UNICDA AND UNYPAC FOR SELECTED RQ
  1155	001267'	260040	001331'		PUSHJ	P,SETFCT	;DIFFERENT CYL, RESET FAIRNESS
  1156	001270'	214640	000006	PIKPC1:	MOVM	P2,T1		;GET MAGNITUDE OF CHANGE FOR CALLERS
  1157	001271'	137140	000757*		DPB	PG,UNYPAC	;AND PAGE NUMBER (F=0 FOR PAGE RQ)
  1158	001272'	262040	000006		POP	P,T1		;Get old direction flag
  1159	001273'	335000	000006		SKIPGE	T1		;Was it going forward?
  1160	001274'	335005	001260*		SKIPGE	UNIDIR(U)	;Or now going backward?
  1161	001275'	350001	000000		 AOS	(P)		;Yes to either, skip return
  1162	001276'	263040	000000		POPJ	P,		;Nonskip if at lowest cyl and now going forward
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 16
FILIO.MAC	19-NOV-87 14:54		Elevator algorithm

  1163				;PIKCYL DOES THE REAL WORK FOR EACH CYL FOUND
  1164				;THE CALL IS JSP P2,PIKCYL
  1165				;IS GOES TO PIKPS2 TO USE CURRENT REQUEST
  1166				;IT RETURNS TO CALL+1 TO CONTINUE SCAN
  1167				;IT RETURNS TO PKPSB TO USE SAVE  BEST REQUEST
  1168
  1169	001277'	230300	000010	PIKCYL:	IDIV	T1,T3		;GET CYL OF REQUEST
  1170	001300'	311305	001265*		CAML	T1,UNICYL(U)	;SMALLER THAN CURRENT?
  1171	001301'	254000	001306'		 JRST	PIKCY1		;NO
  1172	001302'	200700	000003	PIKCYH:	MOVE	P3,PG		;SAVE PG, CLOSEST REQUEST SO FAR BELOW UNICYL
  1173	001303'	201606	000001	PIKCYB:	MOVEI	P1,1(T1)	;SET BLOCK FOR NEXT CYL
  1174	001304'	220600	000010		IMUL	P1,T3
  1175	001305'	254015	000000		JRST	(P2)		;RETURN
  1176
  1177				;Found request for CYL .GE. UNICYL
  1178
  1179	001306'	274305	001300*	PIKCY1:	SUB	T1,UNICYL(U)	;SAME?
  1180	001307'	322300	001341'		JUMPE	T1,PIKSMC	;YES, SPECIAL PROCESSING
  1181	001310'	260040	001331'		PUSHJ	P,SETFCT	;RESET FAIRNESS COUNT (DIFF CYL)
  1182	001311'	331005	001274*		SKIPL	UNIDIR(U)	;WHICH WAY?
  1183	001312'	254000	001261'		 JRST	PIKPS2		;FORWARD, USE THIS ONE
  1184	001313'	326700	001256'		JUMPN	P3,PKPSB	;BACKWARD, IF ONE SAVED, USE IT
  1185	001314'	205340	400000		MOVSI	T2,(1B0)
  1186	001315'	432345	001311*		XORM	T2,UNIDIR(U)	;RESET DIRECTION TO FORWARD SCAN
  1187	001316'	254000	001261'		JRST	PIKPS2		;AND USE THIS ONE
  1188
  1189				;Found request for CYL = UNICYL
  1190
  1191	001317'	373005	000000*	PIKCYS:	SOSLE	UNIFCT(U)	;SAME CYL, FAIRNESS EXAUSTED?
  1192	001320'	254000	001261'		 JRST	PIKPS2		;NO, USE THIS ONE
  1193	001321'	322700	001326'		JUMPE	P3,PIKCY0	;NONE SAVED, SET DIR=FORWARD
  1194	001322'	331005	001315*		SKIPL	UNIDIR(U)	;WHICH WAY
  1195	001323'	254000	001303'		 JRST	PIKCYB		;FORWARD, JUST SET FOR NEW SEARCH CYL
  1196	001324'	260040	001331'		PUSHJ	P,SETFCT	;BACKWARDS, USED HELD REQUEST
  1197	001325'	254000	001256'		JRST	PKPSB
  1198
  1199	001326'	205340	400000	PIKCY0:	MOVSI	T2,(1B0)
  1200	001327'	412345	001322*		ANDCAM	T2,UNIDIR(U)	;RESET DIR=FORWARD IN CASE ONE THERE
  1201	001330'	254000	001302'		JRST	PIKCYH		;AND REMEMBER THIS IN CASE NONE
  1202
  1203	001331'	202405	001317*	SETFCT:	MOVEM	T3,UNIFCT(U)	;Set fairness count to max
  1204	001332'	201340	600000		MOVEI	T2,STSHUT!STSUPR;Shut or super-shut bits
  1205	001333'	612340	000000*		TDNE	T2,STATES##	;System shut? (running ASP or standalone TITO)
  1206	001334'	263040	000000		 POPJ	P,		;Yes, bypass cylinder fairness count
  1207	001335'	200340	000010		MOVE	T2,T3		;Blocks per cylinder
  1208	001336'	242340	777773		LSH	T2,-5		;Divide by 32
  1209	001337'	202345	001331*		MOVEM	T2,UNIFCT(U)	;Use that as fairness count
  1210	001340'	263040	000000		POPJ	P,
  1211
  1212	001341'	135340	001261*	PIKSMC:	LDB	T2,PGYPNO	;GET ADDRESS BACK
  1213				IFE FTDPAG,<
  1214	001342'	242340	000002		LSH	T2,P2BLSH	;CONVERT TO BLOCKS
  1215	001343'	313345	001263*		CAMLE	T2,UNIBLK(U)
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 16-2
FILIO.MAC	19-NOV-87 14:54		Elevator algorithm

  1216				>
  1217				IFN FTDPAG,<
  1218					CAMLE	T2,UNIPAG(U)	;Compare with requested disk page address
  1219				>
  1220	001344'	254000	001317'		 JRST	PIKCYS		;STILL GOING UP, CONTIMUE
  1221	001345'	350600	000007		AOS	P1,T2		;JUST LOOK A LITTLE HIGHER
  1222	001346'	326700	001256'		JUMPN	P3,PKPSB	;ALREADY GOT ONE SAVED, GO
  1223	001347'	205340	400000		MOVSI	T2,(1B0)
  1224	001350'	412345	001327*		ANDCAM	T2,UNIDIR(U)
  1225	001351'	200700	000003		MOVE	P3,PG		;SAVE THIS
  1226	001352'	370005	001337*		SOS	UNIFCT(U)	;JUST IN CASE
  1227	001353'	254015	000000		JRST	(P2)		;AND CONTINUE SCAN
  1228				;End of elevator algorithm
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 17
FILIO.MAC	19-NOV-87 14:54		UPDATE UNIT STATISTICS AFTER IO

  1229				SUBTTL	UPDATE UNIT STATISTICS AFTER IO
  1230
  1231				;ENTER WITH P4=NUMBER OF BLOCKS,  T1=UNIXRC(U)   (X=M,B OR D)
  1232	001354'	603000	000020	UPSTAT:	TLNE	S,IO		;WRITING?
  1233	001355'	271300	000001		 ADDI	T1,1		;YES. UNIXWC=UNIXRC+1
  1234	001356'	272746	000000		ADDM	P4,(T1)		;UPDATE WORD IN UNIT BLOCK
  1235	001357'	263040	000000		POPJ	P,		;AND RETURN
  1236
  1237				COMMENT;@@SUBROUTINE SMSTAT
  1238				@@PURPOSE UPDATE UNIT DATA BLOCK COUNTS (INCREMENT BY "N" BLOCKS)
  1239				@@ENTRY T1/ NUMBER OF BLOCKS DONE
  1240					T2/ RETRIEVAL POINTER FOR BLOCKS
  1241					S/  I/O STATUS (MODE AND IO BIT)
  1242				@@ACCUM USES T1-T3, U
  1243				@@EXIT ALWAYS NON-SKIP.
  1244				@@FUNCTION INCREMENT APPROPRIATE UNIT DATA BLOCK COUNT.
  1245				@@;
  1246
  1247	001360'	135240	000066*	SMSTAT::LDB	U,RBYUNI	;GET UNIT NUMBER
  1248	001361'	200245	000712*		MOVE	U,UNTTBL(U)	;GET UNIT DATA BLOCK ADDRESS
  1249	001362'	135400	000000*		LDB	T3,PIOMOD	;GET MODE
  1250	001363'	301400	000015		CAIL	T3,SD		;SKIP IF NOT DUMP MODE
  1251	001364'	254000	001372'		 JRST	SMSTA1		;DO DUMP MODE
  1252
  1253	001365'	201405	000000*		MOVEI	T3,UNIBRC(U)	;ASSUME READ
  1254	001366'	603000	000020		TLNE	S,IO		;SKIP IF READ
  1255	001367'	201405	000000*		 MOVEI	T3,UNIBWC(U)	;NO, WRITE.
  1256	001370'	272310	000000		ADDM	T1,(T3)		;BUMP COUNT AND
  1257	001371'	263040	000000		POPJ	P,		;RETURN
  1258
  1259	001372'	201405	000000*	SMSTA1:	MOVEI	T3,UNIDRC(U)	;ASSUME READ
  1260	001373'	603000	000020		TLNE	S,IO		;SKIP IF READ
  1261	001374'	201405	000000*		 MOVEI	T3,UNIDWC(U)	;WRITE
  1262	001375'	272310	000000		ADDM	T1,(T3)		;INCREMENT
  1263	001376'	263040	000000		POPJ	P,		;AND RETURN.
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 18
FILIO.MAC	19-NOV-87 14:54		PICK THE BEST TRANSFER

  1264				SUBTTL	PICK THE BEST TRANSFER
  1265
  1266				;THIS ROUTINE IS CALLED FOR FIXED-HEAD DISKS ONLY
  1267				;P1 HAS BEST UNIT, P2 ITS LATENCY TIME
  1268
  1269	001377'	201700	000000	PIKTRN:	MOVEI	P3,0		;NO F FOUND
  1270	001400'	550105	001227*		HRRZ	J,UNIKON(U)	;GET CORRECT KON
  1271	001401'	135140	001245*		LDB	PG,UNYPGL	;START LOOKING FOR PAGE TRANSFERS
  1272	001402'	322140	001246*		JUMPE	PG,CPOPJ	;NONE
  1273	001403'	135300	001341*	PIKTP1:	LDB	T1,PGYPNO
  1274	001404'	242300	000002	IFE FTDPAG,<LSH T1,P2BLSH>	;CONVERT TO BLOCKS
  1275	001405'	331002	001161*		SKIPL	KONIBM(J)	;If not a fixed-head IBM disk
  1276	001406'	260062	001144*		 PUSHJ	P,@KONLTM(J)	;CALCULATE TIME TO REACH THIS RECORD
  1277	001407'	332000	000014		SKIPE	P1		;FIRST XFER IS ALWAYS BEST
  1278	001410'	315300	000015		CAMGE	T1,P2		;BEST SO FAR?
  1279	001411'	260040	001424'		 PUSHJ	P,SAVBST
  1280	001412'	322640	001417'		JUMPE	P2,PIKTP0	;BEST POSSIBLE FOUND IF P2=0
  1281	001413'	135140	001254*		LDB	PG,PGYFPL	;GET NEXT PAGE
  1282	001414'	326140	001403'		JUMPN	PG,PIKTP1
  1283	001415'	322700	001402*		JUMPE	P3,CPOPJ	;NONE FOUND
  1284	001416'	200140	000016		MOVE	PG,P3		;GET BEST BACK
  1285	001417'	137140	001271*	PIKTP0:	DPB	PG,UNYPAC
  1286	001420'	135300	001403*		LDB	T1,PGYPNO
  1287				IFE FTDPAG,<
  1288	001421'	242300	000002		LSH	T1,P2BLSH	;CONVERT TO BLOCKS
  1289	001422'	202305	001343*		MOVEM	T1,UNIBLK(U)
  1290				>
  1291				IFN FTDPAG,<
  1292					MOVEM	T1,UNIPAG(U)	;Set physical page address
  1293				>
  1294	001423'	263040	000000		POPJ	P,
  1295
  1296	001424'	200700	000003	SAVBST:	MOVE	P3,PG		;BEST PAGE
  1297	001425'	200600	000005		MOVE	P1,U		;BEST UNIT
  1298	001426'	200640	000006		MOVE	P2,T1		;MICROSECONDS LATENCY TIME
  1299	001427'	263040	000000		POPJ	P,
  1300
  1301	001430'	634300	000006	ZERTIM:	TDZA	T1,T1		;TURN OFF TIMER
  1302	001431'	201300	000003	SETTIM:	 MOVEI	T1,3		;SET TIMER FOR 3 SECONDS
  1303	001432'	137300	000176*		DPB	T1,UNYTIM
  1304	001433'	263040	000000		POPJ	P,
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 19
FILIO.MAC	19-NOV-87 14:54		ONCE A SECOND TO CHECK FOR UNITS THAT ARE HUNG

  1305				SUBTTL	ONCE A SECOND TO CHECK FOR UNITS THAT ARE HUNG
  1306
  1307	001434'	554240	000000*	UNISEC::HLRZ	U,SYSUNI
  1308	001435'	700600	000705*		DSKOFF			;NO INTERUPTS WHILE CODE IN PROGRESS
  1309	001436'	135300	001432*	USCLP:	LDB	T1,UNYTIM
  1310	001437'	362300	001447'		SOJE	T1,USCLP1	;ONLY IF COUNTS DOWN TO ZERO
  1311	001440'	331000	000006		SKIPL	T1
  1312	001441'	137300	001436*		 DPB	T1,UNYTIM	;PUT BACK IF WAS NOT ZERO
  1313	001442'	554245	000000*	USCLP2:	HLRZ	U,UNISYS(U)	;NEXT UNIT IN SYSTEM
  1314	001443'	326240	001436'		JUMPN	U,USCLP
  1315	001444'	700600	000750*		DSKON
  1316	001445'	260040	000000*		PUSHJ	P,SATONC	;DO ONCE-A-SECOND SAT STUFF
  1317	001446'	263040	000000		POPJ	P,		;END OF UNISEC
  1318
  1319	001447'	200305	001240*	USCLP1:	MOVE	T1,UNISTS(U)
  1320	001450'	256006	001452'		XCT	HNGCOD(T1)	;DO APPROPRIATE ACTION
  1321	001451'	254000	001442'		JRST	USCLP2		;AND GET BACK TO THE CHECK
  1322
  1323	000000			HNGCOD:	PHASE 0
  1324	001452'	260040	001430'	ICOD:!	PUSHJ P,ZERTIM
  1325	001453'	260040	001430'	PWCOD:!	PUSHJ P,ZERTIM	;THESE ARE MISTAKES, TIMER SHOULD NOT BE SET
  1326	001454'	260040	001471'	PCOD:!	PUSHJ P,HNGPS	;POSITION OR SEEK HUNG
  1327	001455'	260040	001430'	SWCOD:!	PUSHJ P,ZERTIM
  1328	001456'	260040	001471'	SCOD:!	PUSHJ P,HNGPS
  1329	001457'	260040	001515'	RSCOD:!	PUSHJ P,HNGRS
  1330	001460'	260040	001430'	CWCOD::	PUSHJ P,ZERTIM
  1331	001461'	260040	001430'	CCOD::	PUSHJ P,ZERTIM
  1332	001462'	260040	001430'	TWCOD:!	PUSHJ P,ZERTIM
  1333	001463'	260040	001503'	TWFCOD:!PUSHJ P,HNGT	;IOSEL not called, go start unstarted transfer
  1334	001464'	260040	001503'	TCOD:!	PUSHJ P,HNGT	;HUNG IN TRANSFER
  1335	001465'	260040	001470'	RCOD:!	PUSHJ P,HNGR	;HUNG IN RECAL
  1336	001466'	260040	001524'	OWCOD:!	PUSHJ P,OFLUNI	;UNIT IS OFF-LINE
  1337	001467'	260040	001503'	VWCOD:!	PUSHJ P,HNGT	;Hung waiting for other volume, start transfer
  1338	001470'				DEPHASE
  1339
  1340	001470'	201300	000002	HNGR:	MOVEI	T1,PCOD		;SET TO PCOD SO GET TO TRANSFER WAIT
  1341	001471'	275300	000001	HNGPS:	SUBI	T1,1		;SET TO PW OR SW
  1342	001472'	550105	001400*		HRRZ	J,UNIKON(U)
  1343	001473'	260062	000000*		PUSHJ	P,@KONSTP(J)	;TRY TO STOP IT
  1344	001474'	334000	000000		  SKIPA			;STOPPED, NOW RESTART
  1345	001475'	254000	001431'		 JRST	SETTIM		;STOPPED AND RESTARTED, RETIME
  1346	001476'	202305	001447*		MOVEM	T1,UNISTS(U)
  1347	001477'	350005	000000*		AOS	UNIHNG(U)	;RECORD HUNG RECOV FROM POS
  1348	001500'	260040	001574'		PUSHJ	P,HNGUNI	;Tell OPR about hung unit
  1349	001501'	260040	001430'		PUSHJ	P,ZERTIM	;RESET TIMER
  1350	001502'	324740	001054'		PJRST	IOSEL		;AND START I/O IF POSSIBLE
  1351
  1352				;Hung in transfer
  1353
  1354	001503'	205300	000001	HNGT:	MOVSI	T1,1		;INCREMENT LH OF UNIHNG
  1355	001504'	272305	001477*		ADDM	T1,UNIHNG(U)	;RECORD HUNG RECOV FROM TRANS
  1356	001505'	260040	001574'		PUSHJ	P,HNGUNI	;Tell OPR about hung unit
  1357	001506'	550105	001472*		HRRZ	J,UNIKON(U)
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 19-2
FILIO.MAC	19-NOV-87 14:54		ONCE A SECOND TO CHECK FOR UNITS THAT ARE HUNG

  1358	001507'	260062	001473*		PUSHJ	P,@KONSTP(J)	;TRY TO STOP
  1359	001510'	334000	000000		  SKIPA			;OK
  1360	001511'	254000	001431'		 JRST	SETTIM		;STOPPED AND RESTARTED, RETIME
  1361	001512'	201300	000011		MOVEI	T1,TWFCOD
  1362	001513'	260040	000446'		PUSHJ	P,IDL1		;Set UNISTS, zero timer, reset UNIBLK, idle KON
  1363	001514'	324740	001054'		PJRST	IOSEL		;Restart unit
  1364
  1365				IFE SAXN,<HNGRS==ZERTIM>	;RS applies to SA10 only
  1366				IFN SAXN,<
  1367	001515'	350005	001504*	HNGRS:	AOS	UNIHNG(U)	;Hung trying to read sense bytes
  1368	001516'	260040	001574'		PUSHJ	P,HNGUNI	;Tell OPR about hung unit
  1369	001517'	550105	001506*		HRRZ	J,UNIKON(U)
  1370	001520'	260062	001507*		PUSHJ	P,@KONSTP(J)
  1371	001521'	255000	000000		  JFCL
  1372	001522'	260040	001431'		PUSHJ	P,SETTIM
  1373	001523'	324762	000132*		PJRST	@KONRBL(J)	;READ BUFFERRED LOG (instead of latency)
  1374				>  ;End IFN SAXN
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 20
FILIO.MAC	19-NOV-87 14:54		ONCE A SECOND TO CHECK FOR UNITS THAT ARE HUNG

  1375				;Unit is off line
  1376	001524'	201300	000040	OFLUNI:	MOVEI T1,ALRACT
  1377	001525'	436300	000000*		IORM T1,ALR620	;SET ALARM CELL
  1378	001526'	261040	000005		PUSH P,U
  1379	001527'	260040	000000*		PUSHJ P,GETOPR
  1380	001530'	260040	000543*		PUSHJ P,INLMES
  1381	001531'	034160	703416		 BYTE (7) 7,7,7,7,7	;SOME BELLS
  1382					 ASCIZ /
  1383	001532'	064252	547222	UNIT /
	001533'	521000	000000
  1384	001534'	200341	000000		MOVE T2,(P)	;RESTORE U
  1385	001535'	200347	000300*		MOVE T2,UNINAM(T2)
  1386	001536'	260040	000301*		PUSHJ P,PRNAME
  1387	001537'	260040	001530*		PUSHJ P,INLMES
  1388	001540'	202570	547250		 ASCIZ / WENT OFF-LINE/
	001541'	202370	643132
	001542'	462231	642400
  1389	001543'	200341	000000		MOVE T2,(P)
  1390	001544'	200347	001200*		MOVE T2,UNIDES(T2)
  1391	001545'	607340	000171*		TLNN T2,UNPFUS	;CHECK UNSAFE
  1392	001546'	254000	001553'		 JRST TELOP4
  1393	001547'	260040	001537*		PUSHJ P,INLMES
  1394	001550'	201210	644630		 ASCIZ / (FILE UNSAFE)/
	001551'	425012	547246
	001552'	406150	524400
  1395	001553'	260040	001547*	TELOP4:	PUSHJ P,INLMES
  1396	001554'	034160	703416		 BYTE (7)7,7,7,7,7
  1397					 ASCIZ /
  1398	001555'	064252	046212	PLEASE TURN IT OFF-LINE, THEN BACK ON-LINE AGAIN.
	001556'	406470	520250
	001557'	526451	620222
	001560'	521011	743214
	001561'	266311	147212
	001562'	261012	444212
	001563'	471010	240606
	001564'	455011	747132
	001565'	462231	642500
	001566'	406170	144634
  1399	001567'	270321	200000	/
  1400
  1401	001570'	262040	000005		POP P,U
  1402	001571'	201300	000074		MOVEI T1,^D60	;RESET TIME TO 1 MINUTE
  1403	001572'	137300	001441*		DPB T1,UNYTIM
  1404	001573'	263040	000000		POPJ P,
  1405
  1406				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1407				;;								;;
  1408				;;	This routine is called to report the occurrence of	;;
  1409				;;	a true "hung" state to the system operator.  It does	;;
  1410				;;	not matter if the hung condition is immediately		;;
  1411				;;	corrected, only that it occurred at all.		;;
  1412				;;								;;
  1413				;;	Entered with U - Unit Data Block address (preserved)	;;
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 20-2
FILIO.MAC	19-NOV-87 14:54		ONCE A SECOND TO CHECK FOR UNITS THAT ARE HUNG

  1414				;;								;;
  1415				;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  1416
  1417	001574'	201300	000040	HNGUNI:	MOVEI	T1,ALRACT	;It's the Accounting flag, but who's perfect?
  1418	001575'	436300	001525*		IORM	T1,ALR620	;Irritate the operator
  1419	001576'	261040	000005		PUSH	P,U		;Save from typeout routines
  1420	001577'	260040	001527*		PUSHJ	P,GETOPR	;Grab the operator's Line Data Block
  1421	001600'	260040	001553*		PUSHJ	P,INLMES	;In-line message
  1422	001601'	034160	703416		BYTE (7) 7,7,7,7,7	;Bells (Clangor and Alarum)
  1423					ASCIZ	/
  1424	001602'	064252	567322	Unit /
	001603'	721000	000000
  1425	001604'	200341	000000		MOVE	T2,(P)		;Get back Unit Data Block address
  1426	001605'	200347	001535*		MOVE	T2,UNINAM(T2)	;Get this unit's SIXBIT name
  1427	001606'	260040	001536*		PUSHJ	P,PRNAME	;Type it out
  1428	001607'	260040	001600*		PUSHJ	P,INLMES	;In-line message
  1429	001610'	202216	567316		ASCIZ	/ Hung
  1430	001611'	064240	000000	/
  1431	001612'	324740	001136'		PJRST	UXPOPJ		;Restore UDB and return
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 21
FILIO.MAC	19-NOV-87 14:54		OHT (OUTPUT ERROR HASH TABLE)

  1432				SUBTTL OHT (OUTPUT ERROR HASH TABLE)
  1433				COMMENT;@@ SUBROUTINE INSOHT
  1434				@@PURPOSE INSERT A DP ADDRESS IN THE OUTPUT ERROR HASH TABLE (OHT)
  1435				@@ENTRY T2 HAS DP ADDRESS. 1B0-1B8 MUST BE ZERO.
  1436				@@ PG has Core Page Number of Disk Page in T2.
  1437				@@ACCUM PRESERVES DP ADDRESS IN T2, CLEARS 1B0-1B8 IN T2,
  1438				SMASHES T1,T3,T4.
  1439				@@EXIT T2 HAS DP ADDRESS. T4 HAS INDEX, SO CALLER CAN SET BITS. ALWAYS RETURN NON-SKIP.
  1440				@@RESTRICTIONS CALL AT DISK INTERRUPT LEVEL OR DSK PI OFF ONLY,
  1441				ELSE CAN'T LOOK AT HEADER DATA (MAY BE CHANGED BY INSOHT, AND
  1442				THIS ROUTINE IS NOT REENTRANT.)
  1443				@@FUNCTION IF DP IS ALREADY IN OHT, RETURN.
  1444				OTHERWISE PUT DP IN OHT, INCREMENT OHTNUM, RETURN.
  1445				@@;
  1446
  1447	001613'	260040	001667'	INSOHT::PUSHJ	P,SRCOHT	;SEE IF ITS THERE ALREADY
  1448	001614'	354000	001724'		  AOSA	OHTNUM		;NO, GOING TO PUT IT IN, INCREMENT
  1449	001615'	254000	001630'		JRST	INSOH2		;Count multiple calls for same DP,
  1450								; overwrite OHTCPN entry, exit w/T4=index
  1451	001616'	205440	777701		MOVSI	T4,-OHTLEN	;SET TO SEARCH OHTTAB FOR FREE CELL
  1452	001617'	460311	001747'	INSOH1:	SETCM	T1,OHTTAB(T4)	;GET COMPLEMENT OF DATA
  1453	001620'	606300	777777		TRNN	T1,-1		;IF ALL ZERO, THEN ITS FREE.
  1454	001621'	603300	000777		  TLNE	T1,777		;SKIP IF FREE
  1455	001622'	254000	001642'		  JRST	INSOH3		;NOT FREE.
  1456	001623'	135300	000010		LDB	T1,T3		;FREE. GET OLD FIRST
  1457	001624'	137440	000010		DPB	T4,T3		;HEADER GETS NEW FIRST
  1458	001625'	137300	002161'		DPB	T1,[POINT OHTLNS,T2,OHTLNP]
  1459	001626'	202351	001747'		MOVEM	T2,OHTTAB(T4)	;STORE NEW DATA OVER THE -1
  1460	001627'	625340	777000		TLZA	T2,777000	;CLEAR ALL BUT DISK ADDRESS.
  1461	001630'	350000	001725'	INSOH2:	  AOS	OHTREP		;# times called gtr once for same DP
  1462	001631'	621440	777777		TLZ	T4,-1		;Clear out crap
  1463	001632'	241440	777777		ROT	T4,-1		;Make low-order bit the sign bit
  1464	001633'	335000	000011		SKIPGE	T4
  1465	001634'	254000	001637'		 JRST	.+3
  1466	001635'	506151	002046'		HRLM	PG,OHTCPN(T4)	;Write CPN into even-numbered table entry
  1467	001636'	334000	000000		SKIPA
  1468	001637'	542151	002046'		  HRRM	PG,OHTCPN(T4)	;Or odd-numbered entry
  1469	001640'	241440	000001		ROT	T4,1		;Restore OHTTAB index
  1470	001641'	263040	000000		POPJ	P,		;AND RETURN.
  1471
  1472	001642'	253440	001617'	INSOH3:	AOBJN	T4,INSOH1	;NOT FREE, LOOK FOR ANOTHER, CRASH WHEN FULL
  1473	001643'	256000	002162'		 STOPCD (.,STOP,OHTFUL,,<Output Hash Table Full - Too many DP errors>);;INSOH3+1
  1474
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 22
FILIO.MAC	19-NOV-87 14:54		OHT (OUTPUT ERROR HASH TABLE)

  1475				COMMENT;@@SUBROUTINE REMOHT
  1476				@@PURPOSE REMOVE DP ADDRESS FROM OHT. CALLED BY REMOVE VP.
  1477				@@ENTRY T2 CONTAINS DP ADDRESS
  1478				@@ACCUM PRESERVES T2, SMASHES T1,T3,T4
  1479				@@EXIT  ALWAYS NON-SKIP.  DSK PI CHANNEL STATE DESTROYED.
  1480				@@RESTRICTIONS DP MUST BE IN OHT. CALL ONLY AT UUO LEVEL,
  1481				REMOHT CAN HAVE ONLY ONE CALLER AT A TIME.
  1482				@@FUNCTION CALL SRCOHT TO FIND THE ENTRY TO BE REMOVED.
  1483				TURN DSK PI CHANNEL OFF. IF PREVIOUS POINTER IS NOT THE HEADER
  1484				POINTER, JUST REMOVE THE ENTRY BY POINTING PREVIOUS POINTER
  1485				TO NEXT ENTRY, SET REMOVED ENTRY DATA TO -1. IF PREVIOUS WAS THE
  1486				HEADER, MAY HAVE BEEN CHANGED AFTER RETURN FROM SRCOHT
  1487				AND BEFORE DSKPIF. CHECK TO SEE THAT PREVIOUS POINTER
  1488				STILL POINTS TO FOUND ENTRY. IF NOT (NEW ENTRY SNUCK IN AT HEADER)
  1489				CHAIN THRU HASH CHAIN UNTIL FIND THE POINTER THAT POINTS TO
  1490				ENTRY TO BE REMOVED. CRASH IF CANNOT FIND REMOVED ENTRY
  1491				AGAIN. THEN REMOVE ENTRY NORMALLY.
  1492				@@;
  1493
  1494
  1495	001644'	260040	001667'	REMOHT::PUSHJ	P,SRCOHT	;FIND THE ENTRY, MUST BE HERE OR CRASH
  1496	001645'	256000	002165'	OHTENF:: STOPCD (.,STOP,OHTENF,,<Output error Hash Table - Entry not found>);;REMOHT+1
  1497	001646'	700600	001435*		DSKOFF			;TURN OFF DSK PI
  1498	001647'	312300	000010		CAME	T1,T3		;DID SRCOHT GIVE US HEADER PTR?
  1499	001650'	254000	001661'		  JRST	REMOH2		;NO, ITS SAFE, ENTRIES ONLY ADDED AT HEAD
  1500								; OF CHAIN, AND ONLY REMOVED AT UUO LEVEL.
  1501	001651'	135300	000010	REMOH1:	LDB	T1,T3		;HEADER. GET WHAT IT POINTS TO.
  1502	001652'	316300	000011		CAMN	T1,T4		;MOST OF THE TIME, ITS OK.
  1503	001653'	254000	001661'		  JRST	REMOH2		;THIS IS STILL THE FIRST ENTRY
  1504	001654'	306300	000077		CAIN	T1,ENDOHT	;MAKE SURE ENTRY DIDN'T VANISH
  1505	001655'	256000	001645'		 STOPCD (,XCT,OHTENF)
  1506					;; It did!  So, CRASH   ;;REMOH1+4
  1507	001656'	201406	001747'		MOVEI	T3,OHTTAB(T1)	;GET ADDRESS OF ENTRY
  1508	001657'	505400	330600		HRLI	T3,(POINT OHTLNS,0,OHTLNP)	;FRESH BYTE POINTER
  1509	001660'	254000	001651'		JRST	REMOH1		;AND GIVE THAT IF WHAT IT POINTS TO IS ENTRY
  1510								; THAT IS GOING AWAY.
  1511
  1512	001661'	370000	001724'	REMOH2:	SOS	OHTNUM		;ONE LESS NOW.
  1513	001662'	135300	002170'		LDB	T1,[POINT OHTLNS,OHTTAB(T4),OHTLNP] ;GET NEW NEXT MEMBER
  1514	001663'	137300	000010		DPB	T1,T3		;PREVIOUS POINTER POINTS TO NEXT
  1515	001664'	476011	001747'		SETOM	OHTTAB(T4)	;THIS WORD NOW FREE.
  1516	001665'	700600	001444*		DSKON		;ALLOW INSERTIONS AGAIN.
  1517	001666'	263040	000000		POPJ	P,		;RETURN.
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 23
FILIO.MAC	19-NOV-87 14:54		OHT (OUTPUT ERROR HASH TABLE)

  1518				COMMENT;@@SUBROUTINE SRCOHT
  1519				@@PURPOSE USED WHEN SEARCHING OHT OR WHEN INSERTING OR DELETING
  1520				AN ENTRY FROM OHT. CALLERS SHOULD DO SKIPN OHTNUM BEFORE
  1521				CALLING TO SAVE TIME.
  1522				@@ENTRY T2 CONTAINS DP ADDRESS TO SEARCH FOR.
  1523				CAN CALL BOTH AT INTERRUPT AND UUO LEVEL.
  1524				@@ACCUM USES T1,T3,T4. PRESERVES T2.
  1525				@@EXIT IF DP NOT FOUND, NON-SKIP RETURN WITH
  1526					T3/ BYTE POINTER TO HEADER FIELD.
  1527					     (USE ONLY IF CALLING AT DSK IRP LEVEL OR DSKPIF)
  1528				IF DP IS FOUND, SKIP RETURN WITH
  1529					T1/ HEADER POINTER (FOR VALIDITY CHECK OF T3).
  1530					T3/ BYTE POINTER TO LAST LINK FIELD (MUST BE CHECKED, SEE
  1531					     RESTRICTIONS)
  1532					T4/ INDEX OF DP'S CELL.
  1533				@@RESTRICTIONS CALLER MUST CHECK VALIDITY OF LAST LINK POINTER
  1534
  1535				IF IT POINTS TO THE HEADER BYTE BY TURNING OFF DSK PI CHANNEL
  1536
  1537				AND MAKING SURE A NEW ENTRY DID NOT SNEAK IN IF ENTRY IS FOUND.
  1538
  1539				IF ENTRY IS NOT FOUND, CALLER MUST NOT USE BYTE POINTER TO HEADER FIELD
  1540				UNLESS DSK PI IS OFF OR AT DSK PI LEVEL, ELSE DATA COULD CHANGE.
  1541				@@FUNCTION COMPUTE HASH INDEX FOR DP. GET BYTE POINTER TO PROPER
  1542				HEADER BYTE FOR HASH CODE. IF CONTENTS OF HEADER IS ENDOHT,
  1543				RETURN WITH THE BYTE POINTER TO THE HEADER. ELSE, SAVE THE
  1544				POINTER TO THE HEADER. LOOK FOR THE DP. IF FOUND, GIVE SKIP
  1545				RETURN WITH BYTE POINTER TO PREVIOUS MEMBER (OR HEADER)
  1546				IN T3, INDEX IN T4. IF NOT FOUND, RETURN WITH BYTE
  1547				POINTER TO HEADER BYTE IN T3.  NOTE THAT A NEW ENTRY CAN SNEAK IN
  1548				WHILE SEARCHING, BUT NEW ENTRIES ARE ADDED TO BEGINNING OF
  1549				CHAIN ONLY, SO WORST THAT CAN HAPPEN IS THAT SEARCH WILL FAIL
  1550				TO FIND ENTRY THAT SNUCK IN, BUT THIS IS NO WORSE
  1551				THAN IF ENTRY SNUCK IN AFTER RETURN FROM SRCOHT.
  1552				CHAIN IS ALWAYS INTACT, REMOHT ONLY CALLED AT UUO LEVEL.
  1553				@@;
  1554
  1555	001667'	200400	000007	SRCOHT::MOVE	T3,T2		;COPY SO DON'T DESTROY T2
  1556	001670'	231400	000077		IDIVI	T3,OHTLEN	;GET DP'S HASH INDEX IN T4
  1557	001671'	200400	000011		MOVE	T3,T4		;GET INTO T3 FOR IDIVI AGAIN
  1558	001672'	231400	000006		IDIVI	T3,OHTHPW	;INDEX TO OHTBYT IN T4, TO OHTHED IN T3.
  1559	001673'	270411	001726'		ADD	T3,OHTBYT(T4)	;GET POINTER TO HEADER FIELD.
  1560	001674'	135440	000010		LDB	T4,T3		;GET FIRST ENTRY INDEX
  1561	001675'	306440	000077		CAIN	T4,ENDOHT	;CHAIN EMPTY?
  1562	001676'	263040	000000		POPJ	P,		;YES, RETURN WITH T3 POINTER TO HEADER BYTE
  1563	001677'	261040	000010		PUSH	P,T3		;REMEMBER POINTER TO HEADER IN CASE SEARCH FAILS
  1564	001700'	200300	000007	SRCOH1:	MOVE	T1,T2		;COPY DP ADDRESS
  1565	001701'	430311	001747'		XOR	T1,OHTTAB(T4)	;T1 HAS INDEX IN 1B0-8, XOR IN THE REST
  1566	001702'	606300	777777		TRNN	T1,-1		;SKIP IF ANY DIFFERENT BITS IN RH
  1567	001703'	603300	000077		TLNE	T1,ENDOHT	;SKIP IF ALL BITS THE SAME IN RH OF LH
  1568	001704'	254000	001711'		JRST	SRCOH2		;NO MATCH.
  1569	001705'	607400	777777		TLNN	T3,-1		;IF NOT THE HEADER POINTER,
  1570	001706'	270400	002171'		ADD	T3,[POINT OHTLNS,OHTTAB,OHTLNP] ;TURN T3 INTO POINTER TO LINK.
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 23-2
FILIO.MAC	19-NOV-87 14:54		OHT (OUTPUT ERROR HASH TABLE)

  1571	001707'	262040	000006		POP	P,T1		;THROW AWAY HEADER POINTER
  1572	001710'	254000	000124*		JRST	CPOPJ1		;MATCHING CELL IN T4. SKIP RETURN.
  1573
  1574	001711'	135300	002172'	SRCOH2:	LDB	T1,[POINT OHTLNS,T1,OHTLNP] ;GET INDEX.
  1575	001712'	306300	000077		CAIN	T1,ENDOHT	;THIS THE LAST CELL?
  1576					JRST	[POP P,T3	;GET HEADER POINTER IN T3 TO RETURN
  1577	001713'	254000	002173'			 POPJ P,]	;AND GIVE FAIL RETURN.
  1578	001714'	200400	000011		MOVE	T3,T4		;NOT DONE, REMEMBER LAST INDEX
  1579	001715'	200440	000006		MOVE	T4,T1		;GET NEXT TO DO IN T4
  1580	001716'	254000	001700'		JRST	SRCOH1		;AND GO CHECK FOR A MATCH
  1581				;ROUTINE TO INIT OHT. PRESERVES T2-T4, SMASHES ONLY T1.
  1582
  1583	001717'	476000	001734'	OHTINI::SETOM	OHTHED		;HEADER BYTES ALL ONES, ALL SLOTS -1.
  1584	001720'	200300	002175'		MOVE	T1,[OHTHED,,OHTHED+1]
  1585	001721'	251300	002045'		BLT	T1,OHTTAB+OHTMAX
  1586	001722'	402000	001724'		SETZM	OHTNUM
  1587	001723'	263040	000000		POPJ	P,
  1588
  1589				IFNDEF OHTLEN,<OHTLEN==77>
  1590				IFGE <OHTLEN-100>,<PRINTX OHTLEN MUST BE LESS THAN 100 OCTAL>
  1591
  1592			000076	OHTMAX==OHTLEN-1		;MAX INDEX POSSIBLE
  1593
  1594
  1595			000077		ENDOHT==1B<^L<OHTMAX>-1>-1	; ALL ONES IN FIELD IS END SIGNAL.
  1596
  1597				;BITS IN OHT
  1598
  1599			400000	XP OHTDER,(1B0)		;DEVICE ERROR
  1600			200000	XP OHTDTE,(1B1)		;DATA ERROR
  1601			100000	XP OHTPAR,(1B2)		;PARITY ERROR ON DIRTY CORE PAGE.
  1602
  1603		077000	000000	OHTLNM==<ENDOHT>B8	;MASK FOR LINK FIELD
  1604			000010	OHTLNP==^L<OHTLNM&-OHTLNM> ;RIGHTMOST BIT OF FIELD
  1605			000006	OHTLNS==OHTLNP-^L<OHTLNM>+1
  1606
  1607		000777	777777	OHTDPM==777,,777777	;FOR THE RECORD, DISK PAGE MASK.
  1608
  1609			000006	OHTHPW==^D36/OHTLNS	;NUMBER OF HEADER POINTERS PER WORD.
  1610	001724'	000000	000000	OHTNUM::0
  1611	001725'	000000	000000	OHTREP:	0		;Count of repeat calls for same DP
  1612
  1613	001726'			OHTBYT:
  1614
  1615			000006		ZZ==OHTLNS
  1616				REPEAT OHTHPW,<
  1617					POINT OHTLNS,OHTHED,ZZ-1
  1618					ZZ==ZZ+OHTLNS>
  1619	001726'	360600	001734'
  1620	001727'	300600	001734'
  1621	001730'	220600	001734'
  1622	001731'	140600	001734'
  1623	001732'	060600	001734'
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 23-3
FILIO.MAC	19-NOV-87 14:54		OHT (OUTPUT ERROR HASH TABLE)

  1624	001733'	000600	001734'
  1625	001734'			OHTHED:	BLOCK	<OHTLEN+OHTHPW-1>/OHTHPW ;HEADER BYTES.
  1626	001747'			OHTTAB::BLOCK	OHTLEN
  1627	002046'			OHTCPN:	BLOCK	<OHTLEN+1>/2	;Halfword Core Page Number entries
  1628
  1629	002106'	202004	000002		$END	(FIO)

  1630	002107'	263040	000000

  1631	002110'	260040	000000*

  1632	002111'	655651	575654

  1633	002112'	400006	000000

  1634	002113'	000000	000273'

  1635	002114'	260040	000000*

  1636	002115'	636760	565157

  1637	002116'	000001	000000

  1638	002117'	207000	000006

  1639	002120'	254000	000415'

  1640	002121'	260040	002110*

  1641	002122'	676264	634164

  1642	002123'	400005	000000

  1643	002124'	000000	000522'

  1644	002125'	260040	002121*

  1645	002126'	676264	446353

  1646	002127'	400006	000571'

  1647	002130'	000000	000523'

  1648	002131'	260040	002125*

  1649	002132'	636760	724562

  1650	002133'	400005	000000

  1651	002134'	000000	000524'

  1652	002135'	137400	001401*

FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 23-4
FILIO.MAC	19-NOV-87 14:54		OHT (OUTPUT ERROR HASH TABLE)

  1653	002136'	254000	000621'

  1654	002137'	260040	002114*

  1655	002140'	636760	575762

  1656	002141'	000001	000000

  1657	002142'	260040	002137*

  1658	002143'	636760	564460

  1659	002144'	000001	000000

  1660	002145'	260040	002142*

  1661	002146'	636760	655762

  1662	002147'	400001	000000

  1663	002150'	000000	000524'

  1664	002151'	000000	001036*

  1665	002152'	000000	001042*

  1666	002153'	137400	002135*

  1667	002154'	254000	000744'

  1668	002155'	350000	000000*

  1669	002156'	324762	001044*

  1670	002157'	322140	001136'

  1671	002160'	254000	001237'

  1672	002161'	330600	000007

  1673	002162'	260040	002145*

  1674	002163'	575064	466554

  1675	002164'	000001	000000

  1676	002165'	260040	002162*

  1677	002166'	575064	455646

  1678	002167'	000001	000000

  1679	002170'	330611	001747'
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 23-5
FILIO.MAC	19-NOV-87 14:54		OHT (OUTPUT ERROR HASH TABLE)


  1680	002171'	330600	001747'

  1681	002172'	330600	000006

  1682	002173'	262040	000010

  1683	002174'	263040	000000

  1684	002175'	001734'	001735'

  1685						;End of FILIO  (FIOLIT: FIOEND:)
  1686
NO ERRORS DETECTED
PROGRAM BREAK IS 002176
7K CORE USED
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 24
FILIO.MAC	19-NOV-87 14:54		SYMBOL TABLE

ADRDUM		000703'	EXT	F		000004	INT	KONADD		001026'	EXT	P2BLSH		000002	SPD
ALR620		001575'	EXT	FILINT		000134'	INT	KONCHN		001131'	EXT	P2WLSH		000011	SPD
ALRACT		000040	SIN	FILIO		000000'	ENT	KONCPY		001153'	EXT	P3		000016	INT
ATYBSZ		000046'	EXT	FINPCB		000653'	EXT	KONFIN		002156'	EXT	P4		000017	INT
B2PLSH	777777	777776	SPD	FIOEND		002175'	INT	KONHRD		000417'	EXT	PCOD		000002	SPD
B2WLSH		000007	SPD	FIOLIT		002106'	INT	KONIBM		001405'	EXT	PG		000003	INT
CCOD		000007	SIN	FTDPAG		000000	SIN	KONLTM		001406'	EXT	PGPDER		000565'	EXT
CHNBSY		001133'	EXT	GETOPR		001577'	EXT	KONOFS		000444'	EXT	PGPDTE		000567'	EXT
CLKFLG		000602'	EXT	HNGCOD		001452'		KONPOS		001157'	EXT	PGYADR		000702'	EXT
COMFIN		000251'		HNGPS		001471'		KONPTR		001134'	EXT	PGYBPL		000753'	EXT
CPOPJ		001415'	EXT	HNGR		001470'		KONRBL		001523'	EXT	PGYCSH		000775'	EXT
CPOPJ1		001710'	EXT	HNGRS		001515'		KONRCL		000435'	EXT	PGYDRT		000000	EXT
CPUKI		000001	SPD	HNGT		001503'		KONRED		000764'	EXT	PGYFPL		001413'	EXT
CPUKL		000002	SPD	HNGUNI		001574'		KONSFT		000473'	EXT	PGYLMA		000513'	EXT
CPUKS		000003	SPD	ICOD		000000	SPD	KONSTP		001520'	EXT	PGYLST		000715'	EXT
CPUTYP		000002	SPD	IDL1		000446'		KONWRT		000765'	EXT	PGYPNO		001420'	EXT
CPYFIN		000203'		INLMES		001607'	EXT	LOKUNM		000054'	EXT	PGYSIO		000335'	EXT
CPYKON		001152'		INSOH1		001617'		LSTBDU		000201'		PGYSOP		001002'	EXT
CPYOFL		000202'		INSOH2		001630'		LSTLST		000640'	EXT	PGYSTS		000570'	EXT
CPZZ		000001	SPD	INSOH3		001642'		M		000013	INT	PGYUNI		000707'	EXT
CRLF		000550'	EXT	INSOHT		001613'	INT	MAXPCB		000652'	EXT	PICLK		000603'	EXT
CSHSAV		002155'	EXT	IO		000020	SIN	MEMSZP		000700'	EXT	PIKCY0		001326'	
CSNSAV		001045'		IOCHN		001105'		MINPCB		000677'	EXT	PIKCY1		001306'	
CSUCNT		002151'	EXT	IOCHN0		001112'		MONSEK		001077'		PIKCYB		001303'	
CSUNL		001035'	EXT	IOCHNF		001141'		NEWDON		000637'		PIKCYH		001302'	
CSVAL		001041'	EXT	IOCNH1		001121'		NODIE		002131'	EXT	PIKCYL		001277'	
CSVCNT		002152'	EXT	IODERR		200000	SIN	NOSWPR		000571'		PIKCYS		001317'	
CTLFND		000514'	EXT	IODTER		100000	SIN	OCTPNT		000542'	EXT	PIKPC1		001270'	
CWCOD		000006	SIN	IOIDLE		001157'		OFLUNI		001524'		PIKPOS		001242'	
DEVATB		000044'	EXT	IOINC1		001232'		OHTBYT		001726'		PIKPS2		001261'	
DEVBLK		000000	EXT	IOINC2		001237'		OHTCPN		002046'		PIKPSL		001250'	
DEVIOS		000002	SIN	IOINCH		001177'		OHTDER		400000	SIN	PIKSMC		001341'	
DEVPOS		000040'	EXT	IOINPS		001172'		OHTDPM	000777	777777	SPD	PIKTP0		001417'	
DEVRET		000057'	EXT	IOIOL1		001224'		OHTDTE		200000	SIN	PIKTP1		001403'	
DEVSUP		000074'	EXT	IOIOLV		001215'		OHTENF		001645'	INT	PIKTRN		001377'	
DIE		002165'	EXT	IOKON		001063'		OHTFUL		001643'	INT	PIOMOD		001362'	EXT
DSKAPC		000756'	INT	IOKON0		001065'		OHTHED		001734'		PJRST	324740	000000	
DSKCLN		000522'	EXT	IOKON1		001102'		OHTHPW		000006	SPD	PKPSB		001256'	
DSKPIF		001646'	EXT	IONRCK		000100	SIN	OHTINI		001717'	INT	PKPSP		001252'	
DSKPIN		001665'	EXT	IOSEL		001054'	INT	OHTLEN		000077	SPD	POSDON		000243'	
DTAOK		000463'		IOSHRE		000414'	EXT	OHTLNM	077000	000000	SPD	POSFIN		000250'	
DTAOK1		000474'		IOSHWE		000413'	EXT	OHTLNP		000010	SPD	POSSAT		000205'	
DTASAT		000334'		IOSUPR		100000	SPD	OHTLNS		000006	SPD	POSTS1		000222'	
DTAST2		000343'		J		000002	INT	OHTMAX		000076	SPD	POSTST		000214'	
DTAST3		000362'		JOB		000600'	EXT	OHTNUM		001724'	INT	PRNAME		001606'	EXT
DTROFS		000437'		KCIPOP		000425'		OHTPAR		100000	SIN	PRT22A		000547'	EXT
DTRRCL		000427'		KCMDTA		000145'	EXT	OHTREP		001725'		PRTPGY		000524'	INT
DTRRTY		000421'		KCMERR		000343'	EXT	OHTTAB		001747'	INT	PRTUNI		000273'	
DTRSC1		000415'		KCMFUS		000170'	EXT	ONPOPJ		000032'		PSTTBL		000225'	
DTRSEC		000374'		KCMIOS		000425'	EXT	OVBUSY		001231'	INT	PTNUNI		000000	EXT
ENDOHT		000077	SPD	KCMOFL		000000	EXT	OWCOD		000014	SPD	PTSUNI		000000	EXT
ERRRCV		000314'		KCMPOS		000210'	EXT	P		000001	INT	PWAIT1		000000	EXT
F		000004	INT	KCMRER		000143'	EXT	P1		000014	INT	PWCOD		000001	SPD
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88 PAGE 24-2
FILIO.MAC	19-NOV-87 14:54		SYMBOL TABLE

RBINDX		000000	EXT	SPR.N		000714'	EXT	UNIBLK		001422'	EXT	UNYRTY		000441'	EXT
RBMASK		000070'	EXT	SQENT		000745'		UNIBRC		001365'	EXT	UNYTIM		001572'	EXT
RBREAL		000064'	EXT	SQLP		000726'		UNIBWC		001367'	EXT	UPSTAT		001354'	
RBSPAR		000000	EXT	SRCOH1		001700'		UNICDA		000000	EXT	USCLP		001436'	
RBYPNO		000000	EXT	SRCOH2		001711'		UNICHN		001121'	EXT	USCLP1		001447'	
RBYUNI		001360'	EXT	SRCOHT		001667'	INT	UNICYL		001306'	EXT	USCLP2		001442'	
RCLFIN		000260'		SRPNDS		000551'	EXT	UNIDES		001544'	EXT	USETST		000055'	EXT
RCLFN2		000261'		STATES		001333'	EXT	UNIDIR		001350'	EXT	USRSEK		001076'	
RCOD		000013	SPD	STRBTS		000000	EXT	UNIDRC		001372'	EXT	UUOSEK		000003'	INT
RDRST		000125'		STRDDB		000100'	EXT	UNIDWC		001374'	EXT	UUOSK1		000034'	
RELRIB		000061'	EXT	STRPPU		000101'	EXT	UNIECT		000422'	EXT	UXPOPJ		001136'	
REMLST		000706'	EXT	STRTIO		000757'		UNIERR		000404'	EXT	VWCOD		000015	SPD
REMOH1		001651'		STRTIU		001135'		UNIFCT		001352'	EXT	WRPI	700600	000000	
REMOH2		001661'		STRUNI		000000	EXT	UNIHBN		000416'	EXT	WRTDSK		000553'	INT
REMOHT		001644'	INT	STSHUT		400000	SIN	UNIHCT		000415'	EXT	WRTSAT		000516'	INT
RESEK		000260'		STSUPR		200000	SIN	UNIHDI		000406'	EXT	WRTST1		000522'	
RRSETB		000110'	INT	SWCOD		000003	SPD	UNIHNG		001515'	EXT	WRTST2		000523'	
RRSETF		000121'		SWPCSV		001041'		UNIICT		000502'	EXT	ZERTIM		001430'	
RSCOD		000005	SPD	SWPEN0		000752'		UNIKON		001517'	EXT	ZZ		000052	SPD
S		000000	INT	SWPENQ		000677'	INT	UNIMSC		001077'	EXT	%SAT.C		000515'	EXT
S$ENTR	777777	777775	SIN	SWPFI0		000604'		UNINAM		001605'	EXT	%UPT		000000	EXT
S$EVEN		000006	SIN	SWPFI1		000645'		UNIOLV		001225'	EXT	
S$HALT	777777	777777	SIN	SWPFI2		000646'		UNIONC		000202'	EXT	
S$INFO		000005	SIN	SWPFIE		000562'		UNIONL		000265'		
S$NAME		000000'	SPD	SWPFIN		000501'		UNIRC1		000500'	EXT	
S$NONA		000000	SIN	SWPFNP		000551'		UNIRCT		000477'	EXT	
S$PATC		000007	SIN	SWPGL1		000770'		UNISBN		000364'	EXT	
S$STOP		000001	SIN	SWPGLP		000775'		UNISCT		000472'	EXT	
S$TEMP	777776	000000	SPD	SWPNDP		000704'	INT	UNISDI		000370'	EXT	
S$XCT	777777	777776	SIN	SWPNIO		000337'	INT	UNISEC		001434'	INT	
SATONC		001445'	EXT	SWPOOR		000701'	INT	UNISOF		000366'	EXT	
SAVBST		001424'		SWPPLD		000573'		UNISTR		000104'	EXT	
SAVEPG		000521'		SWPPPL		000657'		UNISTS		001476'	EXT	
SAXN		000001	SPD	SWPPST		001046'		UNISTT		000000	EXT	
SCOD		000004	SPD	SWPQFD		000734'		UNISYS		001442'	EXT	
SD		000015	SIN	SWPST1		001023'		UNITAL		000000	EXT	
SEKFIN		000302'		SWPST2		001026'		UNIUSC		001076'	EXT	
SEKFN1		000246'		SWPSTD		001030'		UNLFIL		000062'	EXT	
SEKFN2		000310'		SWPSTR		000757'		UNPDEV		000467'	EXT	
SEKFN3		000311'		SWPSTX		001015'		UNPFUS		001545'	EXT	
SEKPT1		000106'		SWPUOR		000711'	INT	UNPOFL		000167'	EXT	
SEKPTR		000040'		SWPZER		000576'	INT	UNPRRS		001177'	EXT	
SEKPTS		000073'		SYSUNI		001434'	EXT	UNTLEN		000710'	EXT	
SETFCT		001331'		T1		000006	INT	UNTTBL		001361'	EXT	
SETID2		000450'		T2		000007	INT	UNYBPY		001244'	EXT	
SETIDL		000456'		T3		000010	INT	UNYLUN		000000	EXT	
SETOF1		000165'		T4		000011	INT	UNYOCV		000437'	EXT	
SETOFL		000155'		TCOD		000012	SPD	UNYPAC		001417'	EXT	
SETTIM		001431'		TELOP4		001553'		UNYPGL		002153'	EXT	
SID.N		000606'	EXT	TWCOD		000010	SPD	UNYPPL		000770'	EXT	
SMSTA1		001372'		TWFCOD		000011	SPD	UNYRCL		000443'	EXT	
SMSTAT		001360'	INT	U		000005	INT	UNYRCO		000442'	EXT	

FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

ADRDUM	    74%	   747
ALR620	    39%	  1377	  1418
ALRACT	  1376	  1417
ATYBSZ	   162%	   174
B2PLSH	   178	   204	   620
B2WLSH	   900
CCOD	   287	   341#	  1331#
CHNBSY	    52%	   526	   961	   983
CLKFLG	    72%	   627
COMFIN	   357#	   370	   395
CPOPJ	    39%	   173	   179	  1130	  1272	  1283
CPOPJ1	    39%	   215	   230	   235	  1572
CPUKI	    22	    23
CPUKL	    22	    23	    46	    77	   761	   806	   826	   872	   895
CPUKS	   889
CPUTYP	    22	    23	    46	    77	   761	   806	   826	   872	   889	   895
CPYFIN	   310#	   341
CPYKON	   942	   968	  1005#	  1078
CPYOFL	   288	   309#
CPZZ	    22#	    22	    23#	    23	    46#	    46	    77#	    77	   761#	   761	   806#	   806	   826#	   826
	   872#	   872	   889#	   889	   895#	   895
CRLF	   591%	   591
CSHSAV	    77%	   877
CSNSAV	   808	   828	   829	   874	   896#
CSUCNT	    77%	   762	   875	   881
CSUNL	   880%	   880
CSVAL	   885%	   885
CSVCNT	    77%	   763	   876	   886
CTLFND	    75%	   566
CWCOD	   340#	   941	   967	  1077	  1330#
DEVATB	   163%	   172
DEVBLK	    39%
DEVIOS	   182
DEVPOS	   163%	   167
DEVRET	   163%	   184
DEVSUP	   163%	   201
DIE	    11	    11%	    12	   372	   427	   568	   596	   622	   744	   748	   756	  1473	  1496
DSKAPC	   624	   787	   798#
DSKCLN	   575%	   575
DSKPIF	    39%	   123	   222	   749	  1308	  1497
DSKPIN	    39%	   150	   229	   234	   790	  1315	  1516
DTAOK	   433	   529#
DTAOK1	   439	   483	   531	   539#
DTASAT	   278	   424#
DTAST2	   430	   432#
DTAST3	   452#
DTROFS	   467	   501#
DTRRCL	   465	   492#
DTRRTY	   463	   485#
DTRSC1	   476	   480#
DTRSEC	   453	   462#	   507
ENDOHT	  1504	  1561	  1567	  1575	  1595#	  1603
ERRRCV	   276	   397#
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

F	   153	   155	   167	   172	   182	   184	   201	   629	   631	   658	   665	   673	   686	   766
	   767	   770	   778	   779	   780	   793	   794
FILINT	   268#
FILIO	    11	    12#	    15
FINPCB	    71%	   693
FIOEND	  1685#
FIOLIT	  1629#
FTDPAG	    19	    19#	    20	    21	    64	    65	   125	   129	   404	   413	   417	   441	   447	   514
	   520	   546	   615	   698	   817	   850	   855	   861	   866	   899	   993	   994	  1127	  1128
	  1133	  1145	  1149	  1213	  1217	  1274	  1287	  1291
GETOPR	    40%	  1379	  1420
HNGCOD	  1320	  1323#
HNGPS	  1326	  1328	  1341#
HNGR	  1335	  1340#
HNGRS	  1329	  1367#
HNGT	  1333	  1334	  1337	  1354#
HNGUNI	  1348	  1356	  1368	  1417#
ICOD	   334#	  1324#
IDL1	   488	   496	   510#	  1362
INLMES	    40%	   380%	   380	   579%	   579	   583%	   583	   587%	   587	  1380	  1387	  1393	  1395	  1421
	  1428
INSOH1	  1452#	  1472
INSOH2	  1449	  1461#
INSOH3	  1455	  1472#
INSOHT	   597	  1447#
IO	   431	   477	   559	   630	  1232	  1254	  1260
IOCHN	   932	   960#	  1030	  1032
IOCHN0	   966#	   975
IOCHNF	   970	   992#
IOCNH1	   973#
IODERR	   435	   599	   608
IODTER	   437	   474	   599	   600	   610
IOIDLE	   930	  1012#
IOINC1	   934	  1076#
IOINC2	  1047	  1050	  1061	  1069	  1085#
IOINCH	  1016	  1040#
IOINPS	  1013	  1028#
IOIOL1	  1062	  1065#
IOIOLV	  1044	  1057#
IOKON	   938#	  1019	  1024
IOKON0	   940#	   955
IOKON1	   946	   953#
IONRCK	   438
IOSEL	   154	   280	   789	   928#	  1350	  1363
IOSHRE	    40%	   479
IOSHWE	    40%	   478
IOSUPR	    25#	   169
J	   120	   144	   149	   214	   228	   242	   244	   327	   368	   398	   482	   498	   506	   524
	   525	   537	   710	   711	   788	   811	   812	   845	   856	   867	   878	   883	   893	   931
	   933	   938	   952	   960	   978	   981	   984	   987	   992	   995	   996	  1006	  1012	  1015
	  1068	  1270	  1275	  1276	  1342	  1343	  1357	  1358	  1369	  1370	  1373
JOB	    72%	   625
KCIPOP	   489#	   499	   696	   714
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

KCMDTA	    68%	   277
KCMERR	    68%	   432
KCMFUS	    68%	   271	   297
KCMIOS	    68%	   279	   292	   359	   489
KCMOFL	    68%	   271
KCMPOS	    68%	   273	   317
KCMRER	    68%	   275
KONADD	    52%	   856	   867
KONCHN	    52%	   525	   960	   981
KONCPY	    51%	  1006
KONFIN	    52%	   878	   883	   893
KONHRD	    53%	   482
KONIBM	    53%	   144	   368	   710	   845	   933	   995	  1015	  1275
KONLTM	    52%	   996	  1276
KONOFS	    53%	   506
KONPOS	    51%	   120	   149	   711	   931	   952	  1012
KONPTR	    52%	   327	   524	   938	   984
KONRBL	    53%	   228	   244	  1373
KONRCL	    51%	   498
KONRED	    51%	   811
KONSFT	    53%	   398	   537
KONSTP	    51%	  1343	  1358	  1370
KONWRT	    51%	   812
LISTSN	     3	     6
LOKUNM	   165%	   180
LSTBDU	   300	   301	   307#
LSTLST	    70%	   658	   665	   673
M	   167	   168	   175	   177	   178	   179	   200	   203
MAXPCB	    71%	   562	   692
MEMSZP	    71%	   743
MINPCB	    71%	   687	   742
MONSEK	   950#
NEWDON	   659	   672#
NODIE	    11%	   372	   568	   596	   622
NOSWPR	   551	   596	   602	   614#
OCTPNT	   582%	   582	   586%	   586
OFLUNI	  1336	  1376#
OHTBYT	  1559	  1613#
OHTCPN	  1466	  1468	  1627#
OHTDER	  1599#
OHTDPM	  1607#
OHTDTE	   600	  1600#
OHTENF	  1496#	  1505
OHTFUL	  1473#
OHTHED	  1583	  1584	  1619	  1620	  1621	  1622	  1623	  1624	  1625#
OHTHPW	  1558	  1609#	  1616	  1625
OHTINI	  1583#
OHTLEN	  1451	  1556	  1589	  1590	  1592	  1625	  1626	  1627
OHTLNM	  1603#	  1604	  1605
OHTLNP	  1458	  1508	  1513	  1570	  1574	  1604#	  1605
OHTLNS	  1458	  1508	  1513	  1570	  1574	  1605#	  1609	  1615	  1619	  1620	  1621	  1622	  1623	  1624
	  1625
OHTMAX	  1585	  1592#	  1595
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

OHTNUM	  1448	  1512	  1586	  1610#
OHTPAR	  1601#
OHTREP	  1461	  1611#
OHTTAB	   601	  1452	  1459	  1507	  1513	  1515	  1565	  1570	  1585	  1626#
ONPOPJ	   136	   140	   150#	   156
OVBUSY	  1065	  1070#
OWCOD	   294	   346#	  1336#
P	    12	   118	   119	   122	   149	   151	   153	   154	   155	   176	   180	   181	   183	   185
	   186	   187	   188	   190	   227	   228	   243	   244	   268	   269	   270	   272	   274	   276
	   278	   280	   281	   282	   283	   284	   291	   293	   304	   305	   313	   315	   336	   338
	   339	   341	   343	   345	   346	   347	   350	   351	   352	   358	   360	   361	   362	   363
	   372	   380	   385	   386	   389	   394	   398	   399	   401	   403	   420	   427	   440	   455
	   457	   469	   471	   482	   488	   490	   496	   497	   498	   506	   511	   527	   537	   539
	   540	   545	   550	   566	   568	   575	   579	   582	   583	   586	   587	   590	   596	   597
	   622	   693	   744	   748	   753	   756	   789	   791	   813	   815	   856	   867	   880	   885
	   928	   942	   951	   952	   954	   968	   970	   972	   974	   985	   986	   988	   996	   999
	  1001	  1007	  1009	  1018	  1043	  1052	  1064	  1078	  1131	  1155	  1158	  1161	  1162	  1181
	  1196	  1206	  1210	  1235	  1257	  1263	  1276	  1279	  1294	  1299	  1304	  1316	  1317	  1324
	  1325	  1326	  1327	  1328	  1329	  1330	  1331	  1332	  1333	  1334	  1335	  1336	  1337	  1343
	  1348	  1349	  1356	  1358	  1362	  1368	  1370	  1372	  1378	  1379	  1380	  1384	  1386	  1387
	  1389	  1393	  1395	  1401	  1404	  1419	  1420	  1421	  1425	  1427	  1428	  1447	  1470	  1473
	  1495	  1496	  1517	  1562	  1563	  1571	  1576	  1577	  1587
P1	   960	   961	   964	   976	   981	   983	   997	  1029	  1030	  1125	  1134	  1173	  1174	  1221
	  1277	  1297
P2	   314	   315	   318	   323	   325	   385	   388	   389	   394	   965	   975	   998	  1021	  1135
	  1156	  1175	  1227	  1278	  1280	  1298
P2BLSH	   194	   209	   411	   445	   515	   706	  1133	  1146	  1214	  1274	  1288
P2WLSH	   851	   852	   862	   863	   903
P3	   325	   326	   435	   437	   474	   478	   479	   529	   551	   598	   608	   610	   642	   664
	   672	   676	   684	   690	   694	  1126	  1141	  1172	  1184	  1193	  1222	  1225	  1269	  1283
	  1284	  1296
P4	   319	   326	   328	   331	   440	   446	   449	   451	   454	   468	   481	   545	   607	   616
	   620	   621	   624	   634	   641	   644	   661	   662	   663	   672	   673	   674	   700	   701
	   702	   707	  1234
PCOD	   336#	  1326#	  1340
PG	   387	   409	   424	   512	   562	   564	   567	   569	   576	   581	   619	   633	   642	   644
	   645	   646	   650	   652	   660	   662	   664	   665	   674	   676	   684	   687	   692	   694
	   704	   742	   743	   770	   774	   775	   776	   777	   779	   782	   783	   786	   795	   804
	   822	   823	   831	   832	   847	   903	   904	  1019	  1060	  1062	  1129	  1130	  1136	  1137
	  1141	  1157	  1172	  1225	  1271	  1272	  1281	  1282	  1284	  1285	  1296	  1466	  1468
PGPDER	    44%	   609
PGPDTE	    44%	   611
PGYADR	    44%	   561	   746
PGYBPL	    44%	   645	   653	   663	   675	   778	   781	   794
PGYCSH	    46%	   764	   807	   827
PGYDRT	    45%
PGYFPL	    44%	   633	   643	   649	   661	   667	   677	   690	   775	   780	   785	   793	   831	  1136
	  1281
PGYLMA	    75%	   565
PGYLST	    70%	   686	   760
PGYPNO	    44%	    70%	   410	   444	   513	   589	   705	   769	   771	   821	   836	  1132	  1144	  1212
	  1273	  1286
PGYSIO	    44%	   425
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

PGYSOP	    70%	   429	   761	   805	   833
PGYSTS	    44%	   606	   612
PGYUNI	    45%	   585	   754
PICLK	    72%	   628
PIKCY0	  1193	  1199#
PIKCY1	  1171	  1179#
PIKCYB	  1173#	  1195
PIKCYH	  1172#	  1201
PIKCYL	  1135	  1169#
PIKCYS	  1191#	  1220
PIKPC1	  1154	  1156#
PIKPOS	   386	  1018	  1043	  1125#
PIKPS2	  1144#	  1183	  1187	  1192
PIKPSL	  1132#	  1137
PIKSMC	  1180	  1212#
PIKTP0	  1280	  1285#
PIKTP1	  1273#	  1282
PIKTRN	   972	  1269#
PIOMOD	    42%	  1249
PKPSB	  1141#	  1184	  1197	  1222
PKPSP	  1134#
POSDON	   324	   350#
POSFIN	   336	   347	   356#
POSSAT	   274	   313#
POSTS1	   320	   329#
POSTST	   323#	   328	   331
PRNAME	    40%	   383%	   383	  1386	  1427
PRT22A	   590%	   590
PRTPGY	   577	   579#	   622	   756
PRTUNI	   372	   380#
PSTTBL	   330	   333#
PTNUNI	    41%
PTSUNI	    41%
PWAIT1	    41%
PWCOD	   335#	   367	   709	   944	  1020	  1325#
RBINDX	    48%
RBMASK	   162%	   193
RBREAL	    48%	   189
RBSPAR	    48%
RBYPNO	    48%
RBYUNI	    48%	   162%	   191	  1247
RCLFIN	   345	   366#	   377
RCLFN2	   367#	   390
RCOD	   345#	   495	  1335#
RDRST	   239#	  1042
RELRIB	   162%	   186
REMLST	    42%	   753
REMOH1	  1501#	  1509
REMOH2	  1499	  1503	  1512#
REMOHT	  1495#
RESEK	   343	   365#
RRSETB	   222#
RRSETF	   224	   232#
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

RSCOD	   225	   240	   339#	  1329#
S	   169	   182	   425	   426	   429	   430	   431	   438	   477	   559	   630	   805	   810	   834
	   873	  1232	  1254	  1260
S$ENTR	    11	    17	   342	   373	   428	   569	   597	   623	   688	   745	   749	   757	  1474	  1497
	  1505
S$EVEN	   372	   373	   427	   568	   596	   597	   622	   744	   748	   756	  1473	  1496
S$HALT	    11	   342	   372	   427	   568	   596	   622	   688	   744	   748	   756	  1473	  1496	  1505
S$INFO	   372	   427	   568	   569	   596	   622	   623	   744	   748	   756	  1473	  1496
S$NAME	    15#	   342
S$NONA	    14	    17	   342	   373	   428	   569	   597	   623	   689	   745	   749	   757	  1474	  1497
	  1506
S$PATC	   372	   427	   568	   596	   622	   744	   748	   756	  1473	  1496
S$STOP	   427	   428	   744	   745	   748	   749	   756	   757	  1473	  1474	  1496	  1497
S$TEMP	    11#	    11	   342#	   342	   372#	   372	   427#	   427	   568#	   568	   596#	   596	   622#	   622
	   688#	   688	   744#	   744	   748#	   748	   756#	   756	  1473#	  1473	  1496#	  1496	  1505#	  1505
S$XCT	    17	   342	   373	   428	   569	   597	   623	   688	   689	   745	   749	   757	  1474	  1497
	  1505	  1506
SATONC	    42%	  1316
SAVBST	   999	  1279	  1296#
SAVEPG	   564	   569	   572#	   576
SAXN	    22#	    66	   137	   220	   221	   316	   322	  1014	  1034	  1365	  1366
SCOD	   146	   338#	  1328#
SD	  1250
SEKFIN	   338	   339	   385#
SEKFN1	   354#	   378
SEKFN2	   387	   392#
SEKFN3	   388	   393#
SEKPT1	   196	   202	   214#
SEKPTR	   118	   167#
SEKPTS	   170	   200#
SETFCT	  1155	  1181	  1196	  1203#
SETID2	   291	   512#
SETIDL	   523#	   540
SETOF1	   290	   294#
SETOFL	   272	   286#
SETTIM	   227	   243	   497	   815	   951	  1052	  1064	  1302#	  1345	  1360	  1372
SID.N	    70%	   631
SMSTA1	  1251	  1259#
SMSTAT	  1247#
SOD.N	    70%	   629
SPR.N	    70%	   759
SQENT	   787#	   796
SQLP	   771#	   776
SRCOH1	  1564#	  1580
SRCOH2	  1568	  1574#
SRCOHT	  1447	  1495	  1555#
SRPNDS	   164%	   594
STATES	  1205%	  1205
STRBTS	   164%	   595
STRDDB	   164%	   206	   595
STRPPU	   164%	   208
STRTIO	   802#	   985
STRTIU	   985#	  1087
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

STRUNI	   164%	   210
STSHUT	  1204
STSUPR	  1204
SWCOD	   142	   337#	   943	   948	  1327#
SWPCSV	   879	   885#
SWPEN0	   767	   793#
SWPENQ	   742#
SWPFI0	   626	   629#
SWPFI1	   668	   684#
SWPFI2	   686#	   695
SWPFIE	   560	   606#
SWPFIN	   545#
SWPFNP	   563	   570	   594#
SWPGL1	   816#	   858
SWPGLP	   825#	   848
SWPNDP	   748#
SWPNIO	   427#
SWPOOR	   688	   744#
SWPPLD	   619#	   703
SWPPPL	   617	   699#
SWPPST	   819	   900#
SWPQFD	   773	   777#
SWPST1	   832	   835	   839	   860#
SWPST2	   864#	   905
SWPSTD	   857	   869	   871#
SWPSTR	   804#
SWPSTX	   846	   849#
SWPUOR	   756#	   758
SWPZER	   622#
SYSUNI	    42%	  1307
T1	   121	   124	   142	   143	   146	   147	   174	   175	   203	   204	   208	   212	   225	   226
	   232	   233	   239	   240	   241	   270	   271	   273	   275	   277	   279	   281	   292	   293
	   297	   304	   317	   329	   330	   351	   355	   356	   357	   359	   360	   367	   369	   374
	   375	   376	   377	   392	   393	   432	   457	   458	   460	   461	   462	   463	   464	   465
	   466	   467	   469	   470	   471	   472	   473	   475	   480	   485	   487	   489	   492	   493
	   494	   495	   501	   502	   503	   504	   505	   510	   513	   515	   517	   518	   523	   524
	   526	   532	   535	   536	   549	   581	   585	   589	   594	   595	   598	   599	   600	   601
	   606	   609	   611	   612	   666	   667	   746	   747	   759	   760	   761	   762	   763	   764
	   769	   772	   807	   808	   811	   812	   813	   823	   847	   848	   849	   851	   860	   862
	   881	   886	   901	   902	   940	   941	   943	   944	   948	   966	   967	   969	   971	   979
	   980	   982	   983	   984	   993	   998	  1000	  1006	  1007	  1008	  1020	  1022	  1023	  1028
	  1031	  1040	  1041	  1048	  1049	  1051	  1057	  1059	  1063	  1076	  1077	  1079	  1085	  1086
	  1132	  1133	  1134	  1144	  1146	  1147	  1152	  1153	  1154	  1156	  1158	  1159	  1169	  1170
	  1173	  1179	  1180	  1233	  1234	  1256	  1262	  1273	  1274	  1278	  1286	  1288	  1289	  1298
	  1301	  1302	  1303	  1309	  1310	  1311	  1312	  1319	  1320	  1340	  1341	  1346	  1354	  1355
	  1361	  1376	  1377	  1402	  1403	  1417	  1418	  1452	  1453	  1454	  1456	  1458	  1498	  1501
	  1502	  1504	  1507	  1513	  1514	  1564	  1565	  1566	  1567	  1571	  1574	  1575	  1579	  1584
	  1585
T2	   126	   134	   135	   172	   173	   184	   185	   188	   189	   193	   194	   200	   209	   269
	   282	   286	   287	   289	   294	   295	   296	   298	   299	   300	   302	   303	   382	   399
	   400	   401	   402	   403	   407	   408	   410	   411	   412	   414	   415	   434	   436	   444
	   445	   446	   448	   449	   455	   456	   533	   534	   561	   565	   699	   700	   705	   706
	   707	   708	   709	   712	   713	   771	   772	   818	   819	   822	   849	   852	   860	   863
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

	   900	   902	   904	  1142	  1143	  1185	  1186	  1199	  1200	  1204	  1205	  1207	  1208	  1209	  1212
	  1214	  1215	  1221	  1223	  1224	  1384	  1385	  1389	  1390	  1391	  1425	  1426	  1458	  1459
	  1460	  1555	  1564
T3	   127	   134	   268	   283	   516	   517	   525	   526	   643	   646	   649	   650	   653	   658
	   660	   675	   677	   768	   774	   781	   782	   783	   785	   786	   821	   837	   838	   873
	   876	   879	  1127	  1152	  1169	  1174	  1203	  1207	  1249	  1250	  1253	  1255	  1256	  1259
	  1261	  1262	  1456	  1457	  1498	  1501	  1507	  1508	  1514	  1555	  1556	  1557	  1558	  1559
	  1560	  1563	  1569	  1570	  1576	  1578
T4	   601	   827	   828	   829	   833	   834	   836	   838	   874	   875	  1451	  1452	  1457	  1459
	  1462	  1463	  1464	  1466	  1468	  1469	  1472	  1502	  1513	  1515	  1557	  1559	  1560	  1561
	  1565	  1578	  1579
TCOD	   289	   344#	   979	  1085	  1334#
TELOP4	  1392	  1395#
TWCOD	   342#	   971	  1028	  1332#
TWFCOD	   343#	   356	   369	   393	   487	   712	   969	  1022	  1079	  1333#	  1361
U	   121	   126	   135	   138	   139	   143	   147	   148	   191	   192	   201	   202	   206	   208
	   210	   211	   214	   223	   226	   233	   239	   241	   242	   286	   295	   299	   301	   309
	   310	   313	   327	   329	   334	   335	   337	   340	   344	   350	   354	   357	   362	   366
	   375	   382	   397	   400	   402	   408	   412	   415	   436	   452	   454	   456	   458	   459
	   461	   468	   470	   472	   480	   481	   486	   510	   518	   530	   534	   536	   541	   542
	   543	   549	   708	   713	   754	   755	   757	   758	   788	   928	   929	   940	   947	   949
	   950	   953	   954	   966	   973	   974	   976	   978	   980	   986	   987	   992	   993	  1000
	  1005	  1008	  1023	  1031	  1041	  1045	  1046	  1049	  1051	  1058	  1059	  1063	  1066	  1067
	  1068	  1076	  1086	  1131	  1143	  1147	  1153	  1160	  1170	  1179	  1182	  1186	  1191	  1194
	  1200	  1203	  1209	  1215	  1224	  1226	  1247	  1248	  1253	  1255	  1259	  1261	  1270	  1289
	  1297	  1307	  1313	  1314	  1319	  1342	  1346	  1347	  1355	  1357	  1367	  1369	  1378	  1401
	  1419
UNIBLK	    64%	   126	   518	   708	   993	  1147	  1215	  1289
UNIBRC	    59%	  1253
UNIBWC	    59%	  1255
UNICDA	    63%
UNICHN	    55%	   973
UNICYL	    60%	   135	   334	   335	   337	   340	   344	   354	   366	  1153	  1170	  1179
UNIDES	    58%	   233	   239	   299	   375	  1041	  1390
UNIDIR	    62%	  1131	  1143	  1160	  1182	  1186	  1194	  1200	  1224
UNIDRC	    59%	  1259
UNIDWC	    59%	  1261
UNIECT	    61%	   459	   486
UNIERR	    56%	   470
UNIFCT	    62%	  1191	  1203	  1209	  1226
UNIHBN	    58%	   468	   481
UNIHCT	    60%	   480
UNIHDI	    62%	   472
UNIHNG	    61%	  1347	  1355	  1367
UNIICT	    59%	   549
UNIKON	    57%	   214	   242	   788	   953	   978	   987	   992	  1068	  1270	  1342	  1357	  1369
UNIMSC	    59%	   950
UNINAM	    58%	   382	  1385	  1426
UNIOLV	    66%	   138	   139	  1045	  1046	  1049	  1058	  1059	  1066
UNIONC	    60%	   309
UNIONL	   346	   372#
UNIRC1	    61%	   543
UNIRCT	    61%	   436	   452	   461	   530	   534	   542
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Symbol cross reference

UNISBN	    59%	   408	   412	   415	   454
UNISCT	    60%	   397	   536
UNISDI	    61%	   402	   458
UNISEC	  1307#
UNISOF	    58%	   400	   456
UNISTR	    57%	   210	   211
UNISTS	    55%	   121	   143	   147	   223	   226	   241	   286	   295	   310	   329	   357	   510	   541
	   713	   929	   940	   947	   966	   980	  1000	  1005	  1008	  1023	  1031	  1051	  1063	  1067
	  1076	  1086	  1319	  1346
UNISTT	    56%
UNISYS	    57%	  1313
UNITAL	    57%
UNIUSC	    59%	   148	   949
UNLFIL	   162%	   187
UNPDEV	    63%	   434	   533
UNPFUS	    62%	   298	   374	  1391
UNPOFL	    55%	   296	   374
UNPRRS	    66%	   232	  1040
UNTLEN	   755%	   755
UNTTBL	    42%	   192	   757	  1248
UNYBPY	    64%	   127	  1127
UNYLUN	    58%
UNYOCV	    63%	   466	   501
UNYPAC	    56%	   124	   376	   409	   424	   512	   619	   641	   704	   804	  1157	  1285
UNYPGL	    56%	   646	   766	   783	   795	  1029	  1129	  1271
UNYPPL	    64%	   414	   448	   516	   699	   701	   818
UNYRCL	    63%	   464	   492	   505
UNYRCO	    63%	   504
UNYRRT	    63%	   493
UNYRTO	    63%	   502
UNYRTY	    63%	   462	   485	   494	   503
UNYTIM	    62%	   303	  1303	  1309	  1312	  1403
UPSTAT	   550	  1232#
USCLP	  1309#	  1314
USCLP1	  1310	  1319#
USCLP2	  1313#	  1321
USETST	   162%	   181
USRSEK	   949#
UUOSEK	   118#
UUOSK1	   145	   153#
UXPOPJ	   245	   939	   962	   977	   986#	  1053	  1060	  1080	  1431
VWCOD	   347#	  1048	  1057	  1337#
WRTDSK	   596#
WRTSAT	   568#
WRTST1	   568	   575#
WRTST2	   576#	   596
ZERTIM	   311	   358	   511	   539	  1301#	  1324	  1325	  1327	  1330	  1331	  1332	  1349
ZZ	  1615#	  1619	  1620	  1620#	  1621	  1621#	  1622	  1622#	  1623	  1623#	  1624	  1624#	  1625	  1625#
%SAT.C	    75%	   567
%UPT	    70%
FILIO	DISK SERVICE ROUTINE	MACRO 12.5-46.0 14:27 13-JAN-88
FILIO.MAC	19-NOV-87 14:54		Macro/Opdef cross reference

CSHUNL	   880
CSHVAL	   885
DSKOFF	    35#	   123	   222	   749	  1308	  1497
DSKON	    36#	   150	   229	   234	   790	  1315	  1516
IFCPU	    22	    46	    77	   761	   806	   826	   872	   889	   895
IFNCPU	    23
ND	    19
PFALL	   577	   869
PJRST	   136	   311	   383	   591	   857	   877	   878	   883	   893	  1350	  1363	  1373	  1431
PRINTF	   205	   207	   593
STOPCD	    10	   342	   372	   427	   568	   596	   622	   688	   744	   748	   756	  1473	  1496	  1505
WRPI	   123	   150	   222	   229	   234	   628	   749	   790	  1308	  1315	  1497	  1516
XP	  1599	  1600	  1601
$END	  1629g@(
