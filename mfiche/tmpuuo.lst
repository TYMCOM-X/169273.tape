TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 1
S.MAC	13-JAN-88 11:55		S.MAC - with system parameter file for P035/D, January 1988

     1				SUBTTL	S.MAC - with system parameter file for P035/D, January 1988
     2
     3				IF2,<IFNDEF LISTSN,<TAPE>>	;Skip to PASS2 in all but COMMON.LST
     4				;THIS MODULE ASSEMBLED WITH KL-10 PARAMETER FILE - KLSYM.MAC
     5
     6					IF2,<IFNDEF LISTSN,<		;LIST KLSYM.MAC IN COMMON ONLY
     7								TAPE>>
     8				TITLE	TMPUUO -- TEMPORARY FILE STORAGE M - V001
     9				SUBTTL	TONY LAUCK  25 APR 69
    10
    11					STOPCD(,ENTRY,TMPUUO)^
    12					ENTRY	TMPUUO		;For library searches
    13	000000'	260040	000000*	TMPUUO::PUSHJ	P,DIE		;**** Default stopcode for "TMPUUO" ****
    14	000001'	645560	656557		SIXBIT	/TMPUUO/  	;Title of module
    15	000002'	000000	000000		S$NONAME,,0		;?NONAME stopcode "TMPUUO+nnn(nnnnnn)"
    16			000000'	S$NAME==TMPUUO			;For STOPCDs with no arguments
    17					SALL>
    18				^
    19
    20				REPEAT 0,<
    21				
    22						TEMPORARY FILE STORAGE FOR JOB UUO.
    23				
    24				   THE "TMPCOR" M IS USED TO ENABLE A JOB TO LEAVE SEVERAL SHORT
    25				FILES IN CORE FROM THE RUNNING OF ONE USER PROGRAM OR CUSP TO THE
    26				NEXT. THESE FILES MAY BE REFERRED TO BY A THREE CHARACTER FILE NAME,
    27				AND ARE UNIQUE TO EACH JOB, I.E. A JOB CAN ONLY REFERENCE ITS OWN
    28				FILES. ALL FILES ARE ALWAYS DELETED WHEN A JOB IS KILLED.
    29				
    30				   EACH FILE APPEARS TO THE USER AS ONE DUMP MODE BUFFER. THE ACTUAL SIZE OF A
    31				TEMPORARY FILE, THE NUMBER OF TEMPORARY FILES A USER CAN HAVE,
    32				AND THE TOTAL CORE SPACE A USER CAN TIE UP ARE PARAMETERS DETER-
    33				MINED AT MONGEN TIME. ALL TEMPARARY FILES RESIDE IN A FIXED AREA
    34				IN THE MONITOR, BUT THE SPACE IS DYNAMICALLY ALLOCATED AMOUNG
    35				DIFFERENT JOBS AND THE SEVERAL DIFFERENT FILES OF ANY GIVEN JOB.
    36				
    37				   THE PRIMARY PURPOSE OF THE TEMPORARY STORAGE SYSTEM IS FOR SHORT
    38				CONTROL FILES, E.G. CCL FILES, TO LIVE IN CORE, THEREBY SPEEDING
    39				UP RESPONSE TIMES AND REDUCING DISK OPERATIONS. ACCORDINGLY,
    40				SHOULD A PROGRAM ATTEMPT TO WRITE A FILE WHEN THERE IS
    41				INSUFFICIENT SPACE, EITHER IN THE ENTIRE BUFFER AREA OR BECAUSE
    42				THE USER HAS EXCEEDED HIS QUOTA, THE M GIVES AN ERROR RETURN.
    43				THE CUSP CAN THEN WRITE THE DATA AS A SHORT DISK FILE.
    44				SIMILARLY, SHOULD A PROGRAM FAIL TO FIND A FILE UPON READING IT,
    45				IT WILL GET AN ERROR RETURN AND CAN THEN LOOKUP A SHORT DISK FILE.
    46				
    47				   IT IS VERY IMPORTANT TO REALIZE THE TEMPORARY NATURE OF THESE
    48				FILES. FOR EXAMPLE, UPON WRITING, THE OLD FILE IS DELETED BEFORE
    49				CHECKING FOR SPACE FOR A NEW VERSION. THE OLD FILE COULD BE LOST WITHOUT
    50				A NEW ONE REPLACING IT. ALSO, THERE CAN BE NO GUARANTEE THAT FILES
    51				WILL FIT IN CORE.
    52				
    53				   THE TMPCOR M IS NOT INTENDED TO REPLACE A FUTURE, MORE
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 1
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

    54				GENERAL, DEVICE INDEPENDENT SERVICE ROUTINE FOR "CORE". HOWEVER,
    55				THE SPACE TAKEN UP BY DEVICE DATA BLOCKS, ETC., IN THAT MORE
    56				GENERAL ROUTINE WOULD REPRESENT UNNECESSARY OVERHEAD FOR EXTREMELY
    57				SHORT DATA, SUCH AS CCL COMMAND FILES.
    58				>
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 2
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

    59					REPEAT 0,<
    60					FORMAT OF TEMPORARY FILE STORAGE UUO.
    61				
    62					CALL AC, [SIXBIT /TMPCOR/]	;CALLI INDEX=44
    63					;ERROR RETURN
    64					;NORMAL RETURN
    65				
    66				   C(AC) MUST ALWAYS BE SET UP BY THE USER PROGRAM PRIOR TO EXECUTING
    67				THE UUO. IT IS CHANGED BY THE M AND RETURNS A VALUE THAT DEPENDS
    68				ON THE PARTICULAR FUNCTION PERFORMED.
    69				
    70					C(AC) = XWD CODE,BLOCK
    71				
    72				BLOCK:	XWD	NAME,0		;NAME IS FILE NAME
    73					IOWD	BUFLEN,BUFFER	;USER BUFFER AREA (ZERO  FOR NO BUFFER)
    74				>
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 3
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

    75					REPEAT 0,<
    76						CODE-0	--  GET FREE SPACE
    77				
    78				   THE IS THE ONLY FORM OF THE TEMP M THAT DOES NOT USE A TWO
    79				WORD PARAMETER BLOCK. C(AC) WOULD ORDINARLY BE SET TO ZERO FOR THE
    80				GET FREE SPACE UUO. THE USER PROGRAM ALWAYS GETS A NORMAL RETURN
    81				(UNLESS THE SYSTEM DOES NOT HAVE THE TEMP M). C(AC) IS SET TO
    82				THE NUMBER OF WORDS OF FREE SPACE AVAILABLE TO THE USER.
    83				
    84						CODE=1	--  READ FILE
    85				
    86				   IF THE SPECIFIED FILE NAME IS NOT FOUND, C(AC) IS SET TO THE
    87				NUMBER OF FREE WORDS OF SPACE AVIALABLE FOR TEMP FILES, AND THE
    88				ERROR RETURN IS TAKEN.
    89				
    90				   IF THE FILE IS FOUND, C(AC) IS SET TO THE LENGTH OF THE
    91				FILE IN WORDS, AND AS MUCH OF THE FILE AS WILL FIT IS COPIED INTO
    92				THE USERS BUFFER. THE USER CAN CHECK FOR TRUNCATION BY COMPARING
    93				C(AC) WITH BUFLEN UPON SUCCESSFUL RETURN FROM THE TEMP UUO.
    94				
    95						CODE=2	--  READ AND DELETE FILE
    96				
    97				   THIS IS THE SAME AS CODE=1, EXCEPT THAT IF A FILE WAS FOUND
    98				IT IS ALSO DELETED AND ITS SPACE RECLAIMED.
    99				>
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 4
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   100					REPEAT 0,<
   101						CODE=3	--  WRITE FILE
   102				
   103				   IF THERE IS ALREADY A FILE OF THE SPECIFIED NAME, IT IS
   104				DELETED AND ITS SPACE IS RECLAIMED.
   105				
   106				   THE REQUESTED SIZE OF THE FILE IS SPECIFIED BY BUFLEN.
   107				IF THERE IS NOT ENOUGH SPACE TO WRITE THE ENTIRE FILE, NOTHING
   108				IS WRITTEN, C(AC) IS SET TO THE NUMBER OF FREE WORDS OF SPACE
   109				AVAILABLE TO THE USER, AND THE ERROR RETURN IS TAKEN.
   110				
   111				   IF THERE IS ENOUGH SPACE, THE FILE IS WRITTEN. C(AC) IS SET TO
   112				THE AMOUNT OF SPACE LEFT AFTER THE FILE HAS BEEN WRITTEN AND THE
   113				NORMAL RETURN IS TAKEN. FILES ARE ALWAYS FILLED UP WITH ZEROS TO THE
   114				NEXT EVEN MULTIPLE OF THE BLOCK LENGTH (TMPBL).
   115				 THIS EVEN LENGTH IS READ BACK IN.
   116				
   117						CODE=4	--  READ DIRECTORY
   118				
   119				   THE ERROR RETURN IS NEVER TAKEN.
   120				
   121				   C(AC) IS SET TO THE NUMBER OF DIFFERENT FILES IN THE JOB'S
   122				TEMPORARY FILE AREA. IN ADDITION, AN ENTRY IS MADE FOR EACH FILE
   123				IN THE USER BUFFER AREA UNTIL THERE IS NO MORE SPACE OR ALL FILES HAVE
   124				BEEN LISTED. THE USER PROGRAM CAN CHECK FOR TRUNCATION BY COMPARING
   125				C(AC) UPON RETURN WITH BUFLEN.
   126				
   127				   DIRECTORY ENTRY FORMAT
   128					XWD  NAME,SIZE	;NAME=FILE NAME, SIZE =FILE LENGTH IN WORDS.
   129				
   130						CODE=5	--  READ AND CLEAR DIRECTORY
   131				
   132				   THIS IS THE SAME AS CODE=4 EXCEPT THAT ANY FILES IN THE JOB'S
   133				TEMPORARY STORAGE AREA ARE ALSO DELETED AND THEIR SPACE RECLAIMED.
   134				
   135				   THIS M IS EXECUTED BY THE LOGOUT CUSP.
   136				>
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 5
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   137					REPEAT 0,<
   138						IMPLEMENTATION
   139				
   140					MASTER DIRECTORY
   141				
   142				  THIS IS A TABLE JOBN+1 ENTRIES LONG.
   143				
   144				JBTTMP:	XWD FREE,IDLE
   145				JBTTM1: XWD SPACE,LINK
   146					   .
   147					   .
   148					   .
   149				
   150				MREE = NO. OF FREE BLOCKS IN MONITOR BUFFER AREA
   151				IDLE  =  LINK TO FIRST FREE BLOCK OR 0 IF NO FREE BLOCKS
   152				SPACE  =  NO OF FREE BLOCKS REMAINING IN JOBS QUOTA
   153				LINK  =  LINK TO FIRST BLOCK OF FIRST FILE OF JOB, 0 IF NONE.
   154				
   155					IDLE BLOCK FORMAT
   156				
   157					XWD 0,LINK
   158					REPEAT TMPBL, <0
   159							>
   160				
   161				   LINK  = LINK TO NEXT BLOCK ON IDLE CHAIN, 0 IF NO MORE.
   162				
   163					USER BLOCK FORMAT
   164				
   165					XWD NAME,LINK
   166					BLOCK TMPBL	;USER DATA OR ZERO FILL.
   167				
   168				   NAME = USER FILE NAME.
   169				   LINK = LINK TO NEXT BLOCK IN THIS FILE OR NEXT FILE OF THIS USER
   170				
   171				   IF A FILE IS SEVERAL BLOCKS LONG, EACH BLOCK HAS THE FILE NAME.
   172				   A LINK OF 0 INDICATES NO MORE DATA IN THE FILE, AND NO MORE FILES
   173				FOR THIS USER.
   174				
   175				   THEREFORE, A FILE ENDS WHEN ITS LAST BLOCK HAS A ZERO LINK, OR
   176				WHEN IT LINKS TO A FILE OF DIFFERENT NAME.
   177				
   178					MONITOR BUFFER AND PARAMETERS
   179				
   180				TMPBUF:	BLOCK TMPBKS*<TMPBL+1>	;BUFFER AREA FOR ALL FILES.
   181				
   182					TMPBKS IS THE NUMBER OF BLOCKS THE STORAGE AREA IS COMPUTED.
   183					IT IS COMPUTED BY MACRO DURING THE ASSEMBLY OF COMMON.
   184					TMPBL IS A PARAMETER IN S.MAC.
   185				>
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 6
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   186					REPEAT 0,<
   187					FACTORS AFFECTING SYSTEM
   188				
   189				   1. MONITOR MUST INITALIZE THE TEMP FILES ON RESTART.
   190					A) CLEAR ENTIRE BUFFER AREA
   191					B) SET FREE COUNT TO TOTAL NUMBER OF 5 WORD BLOCKS
   192					C) LINK ALL BLOCKS ON IDLE CHAIN
   193					D) SET ALL USERS SPACE TO THEIR QUOTA AND LINKS TO 0
   194				
   195				   2.  LOGOUT MUST DO A CLEAR OF USERS DIRECTORY
   196				
   197				   3. PIP SHOULD CLEAR USERS DIRECTORY ON A DEL *.TMP COMMAND
   198				
   199				   4.  PIP SHOULD READ AND WRITE TEMP FILES. DEVICE TMP:?
   200				
   201				   5.  ALL CCL CUSPS MUST BE CHANGED TO DO TEMP UUO.
   202				>
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 7
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   203					INTERN	TMPINI,TMPTAB
   204					EXTERN	MJOBN,JBTTMP
   205					EXTERN	CPOPJ,CPOPJ1,UUOERR
   206
   207	000003'	000000	000000	TMPTAB:	0			;FREE DATA SPACE,ADDRESS OF TABLE
   208	000004'	000000	000000		0			;USER QUOTA,NUMBER OF BLOCKS
   209
   210	000005'	510340	000004'	TMPINI:	HLLZ	T2,TMPTAB+1	;LIMIT OF TEMP FILES PER USER
   211	000006'	205300	000000*		MOVSI	T1,MJOBN
   212	000007'	202346	000000*		MOVEM	T2,JBTTMP(T1)
   213	000010'	253300	000007'		AOBJN	T1,.-1
   214
   215	000011'	200300	000003'		MOVE	T1,TMPTAB	;FREE DATA SPACE,ADDRESS OF TABLE
   216	000012'	202300	000007*		MOVEM	T1,JBTTMP	;SET UP SPACE, ADDR OF NULL LIST
   217	000013'	550340	000004'		HRRZ	T2,TMPTAB+1	;COUNT OF BLOCKS
   218	000014'	271300	000005	TMPIN1:	ADDI	T1,TMPBL+1	;LINK ALL BLOCKS TO NULL LIST
   219	000015'	552306	777773		HRRZM	T1,-TMPBL-1(T1)
   220	000016'	367340	000014'		SOJG	T2,TMPIN1
   221
   222	000017'	513006	777773		HLLZS	-TMPBL-1(T1)	;DONT LINK LAST BLOCK
   223	000020'	263040	000000		POPJ	P,
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 8
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   224				;Entry point from UUOCON
   225
   226	000021'	350001	000000	TMP.UU::AOS	(P)		;SET FOR GOOD RETURN
   227	000022'	256200	000203'		UMOVE	W,(M)	;GET USERS AC
   228	000023'	607500	777777		TLNN	W,-1		;IS CODE = 0?
   229	000024'	254000	000161'		JRST	TMPSP		;YES, SO JUST RETURN SPACE LEFT
   230	000025'	250500	000013		EXCH	W,M	;SAVE AC ADR, GET C(AC)
   231	000026'	256200	000204'		UMOVE T1,(M)
   232	000027'	510000	000006		HLLZ	S,T1		;SAVE FILE NAME
   233	000030'	541553	000001		HRRI	M,1(M)	;GET SECOND WORD OF BLOCK
   234	000031'	256200	000204'		UMOVE T1,(M)
   235	000032'	574200	000006		HLRE	F,T1	;GET USERS BUFFER LENGTH
   236	000033'	213000	000004		MOVNS	F
   237	000034'	550440	000006		HRRZ	T4,T1	;USERS BUFFER ADDRESS
   238	000035'	200540	000012		MOVE	M,W	;GET AC BACK
   239	000036'	256200	000205'		XCTBU <HLRZ	W,(M)>	;GET CODE
   240	000037'	303500	000005		CAILE	W,TMPDL	;CHECK IF IT IS LEGAL
   241	000040'	254000	000000*		JRST	UUOERR		;NO
   242	000041'	254032	000041'		JRST	@TMPDIS-1(W)	;DISPATCH TO APPROPRIATE ROUTINE
   243
   244	000042'	254000	000047'	TMPDIS:	JRST	TMPREA
   245	000043'	254000	000047'		JRST	TMPREA
   246	000044'	254000	000116'		JRST	TMPWR
   247	000045'	254000	000164'		JRST	TMPDIR
   248	000046'	254000	000164'		JRST	TMPDIR
   249
   250			000005		TMPDL== .-TMPDIS
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 9
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   251					;ROUTINE TO READ, OR READ AND DELETE A TEMPORARY FILE
   252
   253	000047'	260040	000074'	TMPREA:	PUSHJ	P,TMPSRC	;FIND FILE
   254	000050'	254000	000160'		JRST	TMPSPB		;NONE, SO RETURN SPACE
   255	000051'	400300	000000		SETZ	T1,		;ZERO USER COUNT
   256	000052'	505600	777774	TMPRE1:	HRLI	P1,-TMPBL	;SET COUNT TO NO WORDS IN BLOCK
   257	000053'	371000	000004	TMPRE2:	SOSL	F		;COUNT DOWN USER BUFFER SPACE
   258	000054'	256040	000206'		XCTTU <PUSH	T4,1(P1)>	;IF SPACE, COPY 1 WORD
   259	000055'	271300	000001		ADDI	T1,1		;ADD TO USER COUNT
   260	000056'	253600	000053'		AOBJN	P1,TMPRE2	;GO ON WITH BUFFER IF MORE WORDS
   261	000057'	275600	000004		SUBI	P1,TMPBL	;GET BACK TO START OF BLOCK
   262	000060'	606500	000001		TRNN	W,1		;SHOULD WE DELETE?
   263	000061'	260040	000104'		PUSHJ	P,TMPDEL	;DELETE THIS BLOCK
   264	000062'	260040	000067'		PUSHJ	P,TMPCHA	;CHAIN TO NEXT BLOCK IN FILE
   265	000063'	254000	000052'		JRST	TMPRE1		;FOUND, GO HANDLE IT
   266				TMPFLL:	SOJL	F,[UMOVEM T1,(M)	;FILL REST OF USERS BUFFER
   267	000064'	361200	000210'			   POPJ P,	]	;AND RETURN.
   268	000065'	256200	000212'		XCTBU <SETZM	1(T4)>	;WITH ZEROS, THEN GIVE HIM COUNT
   269	000066'	344440	000064'		AOJA	T4,TMPFLL
   270
   271					;ROUTINE TO CHAIN TO NEXT BLOCK OF A FILE
   272
   273	000067'	550614	000000	TMPCHA:	HRRZ	P1,(P1)	;CHAIN TO NEXT BLOCK
   274	000070'	510714	000000		HLLZ	P3,(P1)	;GET FILE NAME
   275	000071'	316700	000000		CAMN	P3,S		;MATCH?
   276	000072'	326600	000000*		JUMPN	P1,CPOPJ	;YES, IS THERE A BLOCK?
   277	000073'	254000	000000*		JRST	CPOPJ1		;NO, SKIP RETURN
   278
   279					;ROUTINE TO FIND A FILE
   280
   281	000074'	201642	000012*	TMPSRC:	MOVEI	P2,JBTTMP(J) ;GET ADDRESS OF FIRST LINK
   282	000075'	550615	000000	TMPSR1:	HRRZ	P1,(P2)	;CHAIN FORWARD
   283	000076'	322600	000072*		JUMPE	P1,CPOPJ	;NONE, FILE NOT FOUND
   284	000077'	510354	000000		HLLZ	T2,(P1)	;GET FILE NAME
   285	000100'	316340	000000		CAMN	T2,S	;MATCH?
   286	000101'	254000	000073*		JRST	CPOPJ1		;YES, SKIP RETURN
   287	000102'	550640	000014		HRRZ	P2,P1		;SAVE OLD POINTER
   288	000103'	254000	000075'		JRST	TMPSR1		;AND KEEP ON LOOKING
   289
   290					;ROUTINE TO DELETE A BLOCK
   291
   292	000104'	550714	000000	TMPDEL:	HRRZ	P3,(P1)	;LINK AROUND BLOCK
   293	000105'	542715	000000		HRRM	P3,(P2)
   294	000106'	550700	000074*		HRRZ	P3,JBTTMP	;LINK OLD BLOCK TO IDLE
   295	000107'	202714	000000		MOVEM	P3,(P1)
   296	000110'	542600	000106*		HRRM	P1,JBTTMP	;LINK START OF IDLE CHAIN TO BLOCK
   297	000111'	550600	000015		HRRZ	P1,P2		;RESTORE P1 FOR TMPCHA
   298	000112'	205700	000004		MOVSI	P3,TMPBL	;UPDATE FREE COUNTERS
   299	000113'	272700	000110*		ADDM	P3,JBTTMP
   300	000114'	272702	000113*		ADDM	P3,JBTTMP(J)
   301	000115'	263040	000000		POPJ	P,
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 10
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   302					;ROUTINE TO WRITE A FILE FOR USER
   303
   304	000116'	260040	000074'	TMPWR:	PUSHJ	P,TMPSRC	;SEE IF THERE WAS AN OLD FILE
   305	000117'	254000	000123'		JRST	TMPWR2		;NO
   306	000120'	260040	000104'	TMPWR1:	PUSHJ	P,TMPDEL	;DELETE A BLOCK
   307	000121'	260040	000067'		PUSHJ	P,TMPCHA	;CHAIN TO NEXT BLOCK
   308	000122'	254000	000120'		JRST	TMPWR1		;THERE WAS ONE, GO ON
   309
   310	000123'	260040	000153'	TMPWR2:	PUSHJ	P,TMPSPC	;GET SPACE FOR USER
   311	000124'	332000	000006		SKIPE	T1
   312	000125'	313200	000006		CAMLE	F,T1	;DOES HE WANT MORE?
   313	000126'	254000	000160'		JRST	TMPSPB		;YES, SO TELL HIM HE LOST
   314
   315	000127'	550702	000114*		HRRZ	P3,JBTTMP(J) ;SAVE LINK TO FIRST FILE
   316	000130'	201642	000127*		MOVEI	P2,JBTTMP(J) ;SET OLD BLOCK ADDRESS
   317
   318	000131'	550600	000130*	TMPWR3:	HRRZ	P1,JBTTMP	;GET ADDRESS OF FIRST IDLE BLOCK
   319	000132'	550354	000000		HRRZ	T2,(P1)	;GET ITS SUCCESSOR
   320	000133'	542340	000131*		HRRM	T2,JBTTMP	;LINK THAT BLOCK TO IDLE CHAIN
   321	000134'	542615	000000		HRRM	P1,(P2)	;LINK LAST BLOCK OF USER TO NEW BLOCK
   322	000135'	550640	000014		HRRZ	P2,P1		;SAVE OLD BLOCK ADDRESS
   323	000136'	205340	777774		MOVSI	T2,-TMPBL	;DECREASE JOB AND TOTAL SPACE
   324	000137'	272340	000133*		ADDM	T2,JBTTMP
   325	000140'	272342	000137*		ADDM	T2,JBTTMP(J)
   326
   327	000141'	502014	000000		HLLM	S,(P1)	;INSERT FILE NAME
   328	000142'	505440	777774		HRLI	T4,-TMPBL	;SET FOR NO WORDS/BLOCK
   329	000143'	361200	000151'	TMPWR4:	SOJL	F,TMPWR6	;DOES HE WANT TO WRITE MORE?
   330	000144'	256200	000213'		XCTFU <PUSH	P1,1(T4)> ;YES, SO STICK IN HIS WORD
   331	000145'	253440	000143'	TMPWR5:	AOBJN	T4,TMPWR4	;UPDATE USER ADDR, IS BLOCK DONE?
   332	000146'	327200	000131'		JUMPG	F,TMPWR3	;YES, DOES HE HAVE MORE?
   333
   334	000147'	542714	777774		HRRM	P3,-TMPBL(P1)	;NO, LINK LAST BLOCK TO HIS FILES
   335	000150'	254000	000161'		JRST	TMPSP		;GET SPACE AND RETURN
   336
   337	000151'	402014	000001	TMPWR6:	SETZM	1(P1)		;FILL FINAL BLOCK WITH ZERO
   338	000152'	344600	000145'		AOJA	P1,TMPWR5	;AND GO ON UNTIL BLOCK DONE
   339
   340					;ROUTINE TO COMPUTE SPACE FOR USERS TMP FILES
   341
   342	000153'	554300	000140*	TMPSPC:	HLRZ	T1,JBTTMP	;TOTAL FREE SPACE
   343	000154'	554342	000153*		HLRZ	T2,JBTTMP(J) ;USER LIMIT
   344	000155'	313300	000007		CAMLE	T1,T2	;SPACE IS MINIMUM OF THE TWO
   345	000156'	200300	000007		MOVE	T1,T2
   346	000157'	263040	00	POPJ	P,
   347
   348					;ROUTINE TO GET SPACE AND RETURN TO USER (SKIP AND NO SKIP)
   349
   350	000160'	370001	000000	TMPSPB:	SOS	(P)		;NO SKIP RETURN
   351	000161'	260040	000153'	TMPSP:	PUSHJ	P,TMPSPC	;GET SPACE
   352	000162'	256200	000207'	UMOVEM T1,(M)		;RETURN ARGUMENT TO USER SPACE.
   353	000163'	263040	000000		POPJ P,			;AND RETURN.
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 11
TMPUUO.MAC	20-SEP-87 13:57		TONY LAUCK  25 APR 69

   354					;READ DIRECTORY, READ AND CLEAR DIRECTORY
   355
   356	000164'	400300	000000	TMPDIR:	SETZ	T1,		;ZERO COUNT OF FILES
   357	000165'	201642	000154*		MOVEI	P2,JBTTMP(J) ;SET LINK TO DELETE
   358	000166'	550615	000000		HRRZ	P1,(P2)	;LINK TO FIRST BLOCK
   359	000167'	322600	000064'	TMPDI1:	JUMPE	P1,TMPFLL	;IF NONE, ZERO REST OF USERS BUFFER
   360	000170'	510014	000000		HLLZ	S,(P1)	;GET FILE NAME
   361	000171'	201340	000001		MOVEI	T2,1		;SET LENGTH TO 1
   362	000172'	602500	000001	TMPDI2:	TRNE	W,1		;DELETE?
   363	000173'	260040	000104'		PUSHJ	P,TMPDEL	;YES, DELETE BLOCK
   364	000174'	260040	000067'		PUSHJ	P,TMPCHA	;GET NEXT BLOCK OF FILE
   365	000175'	344340	000172'		AOJA	T2,TMPDI2	;THERE IS ONE, SO COUNT BLOCKS
   366	000176'	221340	000004		IMULI	T2,TMPBL	;GET LENGTH IN WORDS
   367	000177'	500340	000000		HLL	T2,S	;DONE, GET LENGTH, NAME OF OLD ONE
   368	000200'	371000	000004		SOSL	F		;IS THERE SPACE LEFT IN USER AREA?
   369	000201'	256040	000214'		XCTTU <PUSH	T4,T2>	;YES, STOW ENTRY
   370	000202'	344300	000167'		AOJA	T1,TMPDI1	;COUNT FILES, GO ON FOR NEXT ONE
   371
   372	000203'	200513	000000		$END	(TMP)

   373	000204'	200313	000000

   374	000205'	554513	000000

   375	000206'	261454	000001

   376	000207'	202313	000000

   377	000210'	256200	000207'

   378	000211'	263040	000000

   379	000212'	402011	000001

   380	000213'	261611	000001

   381	000214'	261440	000007

   382						;End of TMPUUO (TMPLIT: TMPEND:)
   383
NO ERRORS DETECTED
PROGRAM BREAK IS 000215
6K CORE USED
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88 PAGE 12
TMPUUO.MAC	20-SEP-87 13:57		SYMBOL TABLE

CPOPJ		000076'	EXT	TMPWR3		000131'		
CPOPJ1		000101'	EXT	TMPWR4		000143'		
DIE		000000'	EXT	TMPWR5		000145'		
F		000004	INT	TMPWR6		000151'		
J		000002	INT	UUOERR		000040'	EXT	
JBTTMP		000165'	EXT	W		000012	INT	
M		000013	INT	ZZ	000060	656350	SPD	
MJOBN		000006'	EXT	
NODIE		000000	EXT	
P		000001	INT	
P1		000014	INT	
P2		000015	INT	
P3		000016	INT	
PX.MEM		000004	SPD	
PX.SRC		000001	SPD	
PXCT	256000	000000		
S		000000	INT	
S$ENTR	777777	777775	SIN	
S$HALT	777777	777777	SIN	
S$NAME		000000'	SPD	
S$NONA		000000	SIN	
S$TEMP	777775	000000	SPD	
S$XCT	777777	777776	SIN	
T1		000006	INT	
T2		000007	INT	
T4		000011	INT	
TMP.UU		000021'	INT	
TMPBL		000004	SIN	
TMPCHA		000067'		
TMPDEL		000104'		
TMPDI1		000167'		
TMPDI2		000172'		
TMPDIR		000164'		
TMPDIS		000042'		
TMPDL		000005	SPD	
TMPEND		000214'	INT	
TMPFLL		000064'		
TMPIN1		000014'		
TMPINI		000005'	INT	
TMPLIT		000203'	INT	
TMPRE1		000052'		
TMPRE2		000053'		
TMPREA		000047'		
TMPSP		000161'		
TMPSPB		000160'		
TMPSPC		000153'		
TMPSR1		000075'		
TMPSRC		000074'		
TMPTAB		000003'	INT	
TMPUUO		000000'	ENT	
TMPWR		000116'		
TMPWR1		000120'		

TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88
TMPUUO.MAC	20-SEP-87 13:57		Symbol cross reference

CPOPJ	   205%	   276	   283
CPOPJ1	   205%	   277	   286
DIE	    12	    12%	    13
F	   235	   236	   257	   266	   312	   329	   332	   368
GINST	   227#	   227	   228	   231#	   231	   232	   234#	   234	   235	   239#	   239	   240	   258#	   258
	   259	   266#	   266	   268#	   268	   269	   330#	   330	   331	   352#	   352	   353	   369#	   369
	   370
J	   281	   300	   315	   316	   325	   343	   357
JBTTMP	   204%	   212	   216	   281	   294	   296	   299	   300	   315	   316	   318	   320	   324	   325
	   342	   343	   357
LISTSN	     3	     6
M	   227	   230	   231	   233	   234	   238	   239	   266	   352
MJOBN	   204%	   211
NODIE	    12%
P	    13	   223	   226	   253	   263	   264	   267	   301	   304	   306	   307	   310	   346	   350
	   351	   353	   363	   364
P1	   256	   258	   260	   261	   273	   274	   276	   282	   283	   284	   287	   292	   295	   296
	   297	   318	   319	   321	   322	   327	   330	   334	   337	   338	   358	   359	   360
P2	   281	   282	   287	   293	   297	   316	   321	   322	   357	   358
P3	   274	   275	   292	   293	   294	   295	   298	   299	   300	   315	   334
PX.MEM	   227	   231	   234	   239	   258	   266	   268	   330	   352	   369
PX.SRC	   258	   369
S	   232	   275	   285	   327	   360	   367
S$ENTR	    12	    18
S$HALT	    12
S$NAME	    16#
S$NONA	    15	    18
S$TEMP	    12#	    12
S$XCT	    18
T1	   211	   212	   213	   215	   216	   218	   219	   222	   231	   232	   234	   235	   237	   255
	   259	   266	   311	   312	   342	   344	   345	   352	   356	   370
T2	   210	   212	   217	   220	   284	   285	   319	   320	   323	   324	   325	   343	   344	   345
	   361	   365	   366	   367	   369
T4	   237	   258	   268	   269	   328	   330	   331	   369
TMP.UU	   226#
TMPBL	   218	   219	   222	   256	   261	   298	   323	   328	   334	   366
TMPCHA	   264	   273#	   307	   364
TMPDEL	   263	   292#	   306	   363
TMPDI1	   359#	   370
TMPDI2	   362#	   365
TMPDIR	   247	   248	   356#
TMPDIS	   242	   244#	   250
TMPDL	   240	   250#
TMPEND	   382#
TMPFLL	   266#	   269	   359
TMPIN1	   218#	   220
TMPINI	   203	   210#
TMPLIT	   372#
TMPRE1	   256#	   265
TMPRE2	   257#	   260
TMPREA	   244	   245	   253#
TMPSP	   229	   335	   351#
TMPSPB	   254	   313	   350#
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88
TMPUUO.MAC	20-SEP-87 13:57		Symbol cross reference

TMPSPC	   310	   342#	   351
TMPSR1	   282#	   288
TMPSRC	   253	   281#	   304
TMPTAB	   203	   207#	   210	   215	   217
TMPUUO	    12	    13#	    16
TMPWR	   246	   304#
TMPWR1	   306#	   308
TMPWR2	   305	   310#
TMPWR3	   318#	   332
TMPWR4	   329#	   331
TMPWR5	   331#	   338
TMPWR6	   329	   337#
UUOERR	   205%	   241
W	   227	   228	   230	   238	   239	   240	   242	   262	   362
ZZ	   227#	   227	   231#	   231	   234#	   234	   239#	   239	   258#	   258	   266#	   266	   268#	   268
	   330#	   330	   352#	   352	   369#	   369
ZZ1	   227#	   227	   231#	   231	   234#	   234	   239#	   239	   258#	   258	   266#	   266	   268#	   268
	   330#	   330	   352#	   352	   369#	   369
TMPUUO -- TEMPORARY FILE STORAGE M - V001	MACRO 12.5-46.0 14:38 13-JAN-88
TMPUUO.MAC	20-SEP-87 13:57		Macro/Opdef cross reference

PXCT	   227	   231	   234	   239	   258	   266	   268	   330	   352	   369
PXGEN	   227	   231	   234	   239	   258	   266	   268	   330	   352	   369
STOPCD	    11
UMOVE	   227	   231	   234
UMOVEM	   266	   352
XCTBU	   239	   268
XCTFU	   227	   231	   234	   330
XCTTU	   258	   266	   352	   369
$END	   372   @+zu`