
TYMVER=8
SUBVER=6

;TSALDR AUTOMATICALLY LOADS KLMON IF IT RUNNING ON AN KL10.
;TSALDR NOW WILL ASK YOU WHICH UNIT YOU WANT TO USE.
;	NOTE:WHEN RESPONDING TO UNIT REQUEST,IF ALL YOU TYPE IS 0-7 "CR"
;	THE CONTROLLER # WILL REMAIN THE DEFAULT.IF YOU TYPE SAY "300" THIS
;	WILL BE USED FOR THE CONTROLLER # AND UNIT #.
	DEFINE	NAME(X,Y)<
	TITLE	TSALDR BOOT FOR MAGTAPE ON AN KI10 AND KL10 WITH AN SA-10 CHANNEL   VER X,Y>

		LALL
	NAME	\TYMVER,\SUBVER

LOC     137
TYMVER,,SUBVER

SUBTTL  PARAMETERS

;ACCUMULATORS
A=1
B=2
C=3
W=4				;WORD RETURNED BY RWORD
Q=5				;COUNTER, DATA WORD BUFFER
M=6				;MEMORY AOBJN POINTER, DATA TO CORE
T=7				;TEMP--USE AT ANY TIME
BP=10				;BYTE POINTER AC
CHAR=11				;CHARACTER BEING TYPED
CLR=12				;CORE CLR AC
P=17				;PUSHDOWN POINTER

;COMMAND DEFINITIONS
OPDEF   GO      [PUSHJ  P,0]
OPDEF   RTN     [POPJ   P,]
OPDEF	TIC	[200000,,0]	;"TRANSFER IN CHANNEL" TO SA10

;PROCESSOR CONTROL BITS
IOCLR=200000    		;APR, I/O CLEAR

;SA10 PARAMETERS
SA=274

GO=1440
CLRFLG=600
TSADON=100
SACLR=600000
SAPAR=200000
SANXM=100000
TSABAS=300
	PAGE
	;DTE AND KL10 PROG DEFS
	DTE=200	;DEVICE CODE FOR DTE20
	 TO11DB=1B22	;WAKE UP PDP11-RING DOORBELL
	DTEFLG=444	;DONE FLAG FOR CMDS TO PDP11
	DTEF11=450	;DATA COMING FROM PDP11
	DTECMD=451	;LOC FOR CMDS TO PDP11
	 .DTDDT=7B27	;DDT MODE INPUT


SUBTTL	PROGRAM SECTION
	LOC 	4000
TSALDR:	CONO	APR,IOCLR
	MOVE	P,[-20,,PLIST]
	SETZ	Q,			;CLEAR DATA WORD COUNTER

;NOW CLEAR CORE FOR TAPMON (1000-3777)

	MOVSI	CLR,-4000+1000
	SETZM	1000(CLR)
	AOBJN	CLR,.-1
	MOVNI	A,1
	HRLOI	-2
	AOBJP	.+3			;JUMP IF KA10
	SETZB	A
	BLT
	SETOM 	CPT			;CPT=-1 FOR KI10
	JUMPE	SELECT

	;MAKE SURE WE HAVE PAGE TABLE SETUP FOR THE KL10.
	MOVE	[540000,,540001]	;PAGE TABLE ENTRY
	MOVSI	1,-160
	MOVEM	600(1)			;PUT ENTRY INTO PAGE TABLE
	ADD	[2,,2]			;ADD 2 TO EACH PAGE TABLE ENTRY
	AOBJN	1,.-2			;DONE?
	MOVSI	CLR,-10000
	SETZM	20000(CLR)		;CLEAR MEMORY FOR TAPHGH
	AOBJN	CLR,.-1
	CONO	PAG,0			;TURN OFF TRAPS AND SET EPT=0
	MOVEI	3000			;CLEAR DTE
	GO	DTEXX
	SETZM	CPT
SELECT:	JRST	UNIT			;GO GET UNIT #
	TRNN	A,360			;SKIP IF CU ADRS SPECIFIED
	IORI	A,200			;CU NOT SPECIFIED - USE 200(16)
	DPB	A,[POINT 8,REWCMD,23]	;PUT DEV CODE IN CMD'S
	DPB	A,[POINT 8,REDCMD,23]	;  "
	DPB	A,[POINT 8,REDCMD+1,23]	;  "
	DPB	A,[POINT 8,SENCMD,23]	;  "

	;SEE IF 7 OR 9 CHANNEL FOR MODE SET CMD
NEXT:	MOVE	A,[TIC SENCMD]		;GET TIC TO SENSE CMD
	MOVEM	A,TSABAS		;PUT IT IN BASE ADRS
	GO	TSAXCT			;GO EXECUTE IT
	TLNE	A,100000		;TEST FOR SELECT ERROR
	JRST	SELERR			;  YES - JUMP
	TLNE	A,4010			;TEST STS (IN A) FOR UNICHK OR LENERR
	JRST	SENERR			;  **ERROR ON SENSE
	MOVE	T,TSASEN		;GET FIRST 4 SENSE BYTES
	MOVEI	A,123			;MODE SET FOR 7CH,ODD,DC ON,XLATE OFF
	TLNN	T,100			;SKIP IF 7CH BIT SET
	MOVEI	A,303			;MODE SET FOR 9CH,1600 BPI
	DPB	A,[POINT 8,REDCMD,15]	;PUT IN CMD LIST
	MOVE	A,REDCMD+1		;GET READ COMMAND
	TLZ	A,20000			;SET FOR NATURAL MODE
	TLNN	T,100			;SKIP IF 7CH DRIVE
	TLO	A,20000			;9CH - USE TC MODE
	MOVEM	A,REDCMD+1		;STORE BACK IN CMD LIST

	;FIRST REWIND THE DRIVE

REWIND:	MOVE	T,[TIC REWCMD]		;GET TIC TO REWIND LIST
	MOVEM	T,TSABAS		;PUT IT IN BASE LOC
REWXCT:	GO	TSAXCT			;GO EXECUTE IT
	MOVE	T,TSABAS+1		;GET SA10 STATUS
	TLNN	T,20			;TEST DEVICE END
	JRST	REWXCT			;LOOP UNTIL DEVICE END
	MOVE	T,[TIC REDCMD]		;NOW GET TIC TO READ LIST
	MOVEM	T,TSABAS		;PUT IN BASE LOC
	PAGE

		;READ TAPE TO FIRST EOF TO SKIP TM-10 LOADER

	MOVEI	C,^D13			;GET LOOP COUNT JUST INCASE IT IS AN KL10
KLLOOP:   GO      READBL			;READ A BLOCK
        SKIPA				;EOF RETURN--SKIP
        JRST    .-2             	;LOOP TILL EOF, SKIP 1ST FILE
	SKIPE	CPT			;SKIP IF KL10 TO KLMON.SAV
	JRST	FILIN			;GO TO READ IN TAPMON
	SOJG	C,KLLOOP		;KEEP SPACING UNTIL KLMON

	;NOW READ TAPMON INTO CORE

FILIN:	GO      RWORD           	;READ POINTER OR TRANSFER WORD
        SKIPL   M,W             	;WHICH IS IT ?
        JRST    GETEOF          	;TRANSFER WORD
FILIN1: GO      RWORD           	;READ DATA WORD
        MOVEM   W,1(M)          	;STORE IN CORE
        AOBJN   M,.-2           	;COUNT CORE POINTER
        JRST    FILIN           	;IT RAN OUT, GET ANOTHER

	;TAPMON NOW LOADED - POSITION TAPE AFTER EOF

GETEOF: GO      READBL          	;LOOK FOR EOF
        SKIPA				;EOF RETURN - SKIP
        JRST    .-2			;LOOP UNTIL EOF

	;NOW START TAPMON

        TRNN    W,-1            	;ANY STARTING ADDRESS ?
	GO      STADER           	;**START ADDRESS ERROR
        JRST    (W)             	;YES, START 'MAGMON'

	;GET DATA WORDS FROM A RECORD

RWORD1: MOVE    Q,[-200,,MBUF]  	;PREPARE TO COUNT DATA WORDS
RWORD:  JUMPGE  Q,RDNXT         	;NEED ANOTHER BLOCK
	MOVE	W,(Q)			;NO,GET A WORD
	AOBJN	Q,.+1			;COUNT IT
	RTN

RDNXT:  GO      READBL          	;READ DATA
        GO      EOFERR           	;**HERE FOR EOF OR ERROR
        JRST    RWORD1          	;NEW POINTER
	PAGE

	;READ TAPE RECORD

READBL:	GO	TSAXCT			;GO EXECUTE READ
	TLNE	A,10			;UNIT CHECK ?
	GO	UNCKER			;   ** YES - ERROR
	TLNN	A,60			;CHAN END/DEV END ?
	GO	RDSTER			;  I** NO - ERROR
	TLNE	A,4			;UNIT EXCEPTION ?  (EOF)
	RTN				; YES --NON-SKIP RETURN
	AOS	(P)
	RTN				;SKIP RETURN


TSAXCT:	CONO	SA,CLRFLG		;CLEAR CHN0 STATUS FLAG
	CONO	SA,GO			;START CHANNEL
WATDON:	CONSZ	SA,SANXM		;TEST FOR SA10 NXM
	JRST	NXM			;  ** NXM
	CONSZ	SA,SAPAR		;TEST FOR SA10 MEM PAR ERR
	JRST	PARERR			;  ** PAR ERR>
	CONSO	SA,TSADON		;TEST FOR CHAN 0 DONE FLAG
	JRST	WATDON			;  NOT DONE - LOOP
	MOVE	A,TSABAS+1		;GET ENDING STATUS
	TLNE	A,200			;TEST FOR BUSY
	JRST	TSAXCT			;  BUSY STS - GO RE-EXECUTE
	TLNN	A,100			;TEST C U END
	RTN				;  NO -- RETURN
	TLNN	A,20			;CU END SET - TEST DEVICE END
	JRST	TSAXCT			;  NO - RE-EXECUTE
	RTN				;  YES - RETURN

	PAGE

	;ERROR MESSAGE  HANDLER
NXM:	MOVEI	BP,[ASCIZ/
SA NXM/]
	JRST	ERROR			;SA10 NXM
PARERR:	MOVEI	BP,[ASCIZ/
SA PAR/]
	JRST	ERROR			;SA10 MEM PAR ERR
UNCKER:	MOVEI	BP,[ASCIZ/
UNIT CHECK/]
	JRST	ERROR			;UNIT CHECK
SENERR:	MOVEI	BP,[ASCIZ/
SENSE/]
	JRST	ERROR			;ERROR ON SENSE
STADER:	MOVEI	BP,[ASCIZ/
START ADR/]
	JRST	ERROR			;START ADDRESS ERROR
EOFERR:	MOVEI	BP,[ASCIZ/
EOFERR/]
	JRST	ERROR			;UNEXPECTED EOF IN FILE
RDSTER:	MOVEI	BP,[ASCIZ/
RD STATUS/]
	JRST	ERROR			;NOT CHAN END/DEV END ON READ
SELERR:	MOVEI	BP,[ASCIZ/
SELERR/]				;SELECT ERROR ON SENSE
ERROR:	CONO	SA,CLRFLG		;CLR STS FLG - ALLOW  FURTHER STS STORING
	HRLI	BP,440700		;INITIALIZE POINTER
ERRLUP:	ILDB	CHAR,BP			;GET A CHARACTER OF ERR MSG
	GO	TTYOUT			;GO TYPE IT
	SKIPE	CHAR			;SKIP IF NULL (END OF MSG)
	JRST	ERRLUP			;  LOOP UNTIL DONE
	HALT	TSALDR
	PAGE
TTYOUT:	SKIPE	CPT			;SKIP IF KL10
	JRST	KITYO
KLTYO:	ANDI	CHAR,177		;MAKE SURE THERE ARE NO UNWANTED BITS AROUND
	HRRZ	0,CHAR			;PUT IN AC0 FOR DTECMD
	JRST	DTEXX
KITYO:	MOVEI	6			;GET A 6 (FILL COUNTER)
	CONSZ	TTY,20			;TEST TTY BUSY
	JRST	.-1			;  YES - LOOP
	DATAO	TTY,CHAR		;TYPE A CHARACTER
	CAILE	CHAR,12			;SKIP IF  LF
	RTN				;  DATA CHARACTER - RETURN
	SETZ	CHAR,			;SET CHAR TO ZERO (NULL)
	SOJGE	KITYO+1			;LOOP UNTIL NULL COUNT EXPIRED
	AOS	P
	JRST	UNIT+3			;AND RETURN
DTEXX:	SETZM	DTEFLG			;CLEAR DONE FLAG
	MOVEM	DTECMD
	CONO	DTE,TO11DB
	SKIPN	DTEFLG			;WAIT UNTIL PDP11 RESPONDS
	JRST	.-1
	RTN

UNIT:	SETZM	A			;CLEAR MASK WORD
	MOVEI	BP,[ASCIZ/
UNIT-/]
	HRLI	BP,440700		;INIT ILDB POINTER
	ILDB	CHAR,BP			;GET A CHAR
	JUMPE	CHAR,.+3		;JUMP WHEN DONE
	GO	TTYOUT			;GO PRINT IT
	JRST	.-3
	SKIPE	CPT			;SKIP IF KL10
	JRST	KITYI
KLTYI:	MOVEI	.DTDDT			;DDT MODE INPUT
	GO	DTEXX
	HRRZ	CHAR,DTEF11		;PUT RIGHT HALF WORD IN CHAR
	ANDI	CHAR,177
	JUMPE	CHAR,KLTYI		;JUMP IF NO CHAR TYPED YET
	GO	LOOP
	JRST	KLTYI			;GO GET ANOTHER CHAR
KITYI:	CONSO	TTY,40			;INPUT DONE?
	JRST	.-1			;YES WAIT TILL DONE
	DATAI	TTY,CHAR		;GET THE CHARACTER
	GO	LOOP
	JRST	KITYI			;GO GET ANOTHER CHAR
LOOP:	ANDI	CHAR,177
	CAIN	CHAR,15			;"CR" TYPED YET?
	JRST	SELECT+1		;WE GOT THE UNIT # NOW RTN
	CAIL	CHAR,"0"
	CAILE	CHAR,"7"		;IS CHAR OCTAL?
	JRST	UNIT			;NO TRY AGAIN
	ANDI	CHAR,7			;MAKE IT OCTAL
	LSH	A,3			;SHIFT A LEFT 3 PLACES
	IOR	A,CHAR			;OR IN CHAR
	IORI	CHAR,60			;PUT IT BACK THE WAY YOU FOUND IT
	JRST	TTYOUT			;GO PRINT IT AND THEN BACK TO TTYI

CPT:Z
REWCMD:	BYTE(8)240,7,200		;NMT,EX,COM=07(16),DA=200(8)
	Z
REDCMD:	BYTE(8)360,123,200		;SET DENS 556,NAT,DC ON,ODD PAR
	BYTE(8)140,2,200		;NAT MODE,EX,CMD=2,DA=200
	XWD	-20000,MBUF		;WC=200,,MBUF
	Z
SENCMD:	BYTE(8)50,4,200			;EX,BYTE;04(16)-SENSE;DA=200
	XWD	775000,TSASEN		;24 BYTES TO TSASEN
	Z
CMDEND:					;FOR STORAGE ALLOCATION TEST
	LOC	4310
TSASEN:	BLOCK	6			;SENSE BYTE STORAGE
	IFG	CMDEND+1-TSASEN,<PRINTX TSASEN ALLOCATION ERROR>
MBUF:	BLOCK	200			;DATA BUFFER
PLIST:	BLOCK	20			;PUSHLIST
	LIT
	END	TSALDR
