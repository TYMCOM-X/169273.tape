


                    















                     FORTRAN-10 Library Extensions


                             April 23, 1981




















                      Systems Technology Division


                             Tymshare, Inc.



                  





           This document describes the functions and subroutines added
        to the FORTRAN-10 library by Tymshare.

           Functions are indicated by "... = name(argument list)".  Note
        that the use of a function requires that its name be specified
        in an EXTERNAL statement and that it have the correct type.  For
        example, the use of EQ, a function which returns a logical
        value, requires that the program include the following
        statements:

        EXTERNAL EQ
        LOGICAL EQ

           The standard functions and subroutines in the FORTRAN-10
        library are documented in Section 15 of the DECsystem-10
        Programmer's Reference Manual.


































                                   1



BENCHM         CALL BENCHM

          BENCHM types:

          TRUS CONSUMED SINCE LOGIN =aaaaaaa.aa
          TRUS CONSUMED SINCE LAST CALL TO BENCHM =bbbbbbb.bb
          NUMBER OF CONNECT SECONDS SINCE LOGIN =ccccccc.cc
          NUMBER OF CONNECT SECONDS SINCE LAST CALL TO BENCHM =
                                                            ddddddd.dd

          where aaaaaa.aa, bbbbbbb.bb, ccccccc.cc, and ddddddd.dd are as
          described in the message.  Note that detached time is not
          included in the number of seconds.


BYE            CALL BYE

          BYE logs out the user; due to I/O considerations, it may wait
          as long as two minutes before doing so.  The system does not
          type "EXIT" or any of the information that normally appears at
          logout time.


CONNEC         ... = CONNEC(X)

          X is an argument whose value is ignored and whose only purpose
          is to tell the compiler that CONNEC is a function call.

          CONNEC returns a real value equal to the number of seconds of
          connect time since login.  Note that detached time is not
          included in this value.


CSPOOL         CALL CSPOOL(INFILE, OUTFIL)

          INFILE and OUTFIL are file identifiers (as described in
          Appendix 1) or zero.

          CSPOOL runs the SPOOL program with the input file specified by
          INFILE and the output file specified by OUTFIL, and then logs
          out the user.  If INFILE is zero, the file identifier
          INPUT.SPL is assumed; if OUTFIL is zero, OUTPUT.SPL is
          assumed.  If the file identifier in INFILE or OUTFIL is bad,
          it is diagnosed via standard FORTRAN error processing.


DELET          CALL DELET(FILEID, IERROR)

          FILEID is a file identifier (as described in Appendix 1).
          IERROR is an integer variable.

          DELET tries to delete the specified file.  If successful,
          DELET sets IERROR to zero.  If unsuccessful, DELET sets IERROR
          as indicated in Appendix 2.


                                   3



DYNARY      CALL DYNARY(IERR, SUBR, S1, S2, ..., SN, 0, P1, P2, ..., PM)

          IERR is an integer variable.
          SUBR is the name of a subroutine.
          S1, S2, ..., SN are integer values.
          P1, P2, ..., PM are arguments of any type.

          DYNARY tries to allocate an array A1 with S1 words, an array
          A2 with S2 words, ..., and an array AN with SN words.  If
          successful, DYNARY calls SUBR(A1, A2, ..., AN, P1, P2, ...,
          PM) and then sets IERR to -1.  Note that SUBR may not call
          DYNARY, whether directly or indirectly.  If unsuccessful,
          DYNARY does not call SUBR and sets IERR to the number of words
          available in the largest available block when the largest
          available block is not large enough for all arrays.  Even if
          the arrays can be allocated by being split among several
          blocks (i.e., several calls to DYNARY), there is no guarantee
          that the largest available block will be large enough.


EQ             ... = EQ(A1, I1, A2, I2, L)

          A1 and A2 are arrays of 7-bit ASCII characters, packed 5 per
          word, left-justified (i.e., A5 format).
          I1, I2, and L are integer values.

          EQ returns a logical value that reflects whether one string is
          equal to another.  Consider string1 as the L characters in
          array A1 starting at position I1, and string2 as the L
          characters in A2 starting at position I2.  EQ returns .TRUE.
          if string1 is equal to string2, and .FALSE. otherwise.

          The leftmost character within an array is numbered 1.  If I1
          and/or I2 are zero, they are assumed to be 1 (although their
          values are not actually changed).  If I1, I2, or L is
          negative, an error message is typed and EQ returns .FALSE..


EXITPE         CALL EXITPE

          EXITPE terminates program execution and runs a PERFORM file,
          as described in the Tymshare Systems Bulletin Number 2.














                                   4



FILINF         CALL FILINF(FILEID, IPROTC, IERROR)

          FILEID is a file identifier (as described in Appendix 1).
          IPROTC is an integer array of at least four elements.
          IERROR is an integer variable.

          FILINF tries to determine information about the specified
          file.  If unsuccessful, FILINF sets IERROR as indicated in
          Appendix 2.  If successful, FILINF sets IERROR to zero and
          sets the array IPROTC as follows:  IPROTC(1) is set to the
          private protection code for the file, IPROTC(2) is set to the
          account protection code for the file, and IPROTC(3) is set to
          the public protection code for the file.  The meanings of the
          protection codes are:

                  PROTECTION
                     CODE       MEANING             SYMBOL
                  ----------    -------             ------
                     0          RENAME and DELETE   ALL
                     1          CHANGE PROTECTION   CP
                     2          UPDATE              UPD
                     3          APPEND              AP
                     4          READ                RD
                     5          RUN                 RUN
                     6          LOOKUP              LK
                     7          NOTHING             NO

          IPROTC(4) is set to the data mode for the file.  The meanings
          of the data modes are:

                  DATA MODE    MEANING
                  ---------    -------
                      0        SYMBOLIC
                      1        SYMBOLIC (for compatibility)
                     10        IMAGE
                     13        IMAGE BINARY
                     14        BINARY
                     16        DUMP RECORDS
                     17        DUMP


FSPOOL         CALL FSPOOL(INFILE, OUTFIL)

          INFILE and OUTFIL are file identifiers (as described in
          Appendix 1) or zero.

          FSPOOL runs the SPOOL program with the input file specified by
          INFILE and the output file specified by OUTFIL, and then
          terminates program execution.  If INFILE is zero, the file
          identifier INPUT.SPL is assumed; if OUTFIL is zero, OUTPUT.SPL
          is assumed.  If the file identifier in INFILE or OUTFIL is
          bad, it is diagnosed via standard FORTRAN error processing.




                                   5



GETBIT         CALL GETBIT(AWORD, IPOS, IWIDTH, ABYTE)

          AWORD is a one-word value.
          IPOS is an integer value between 0 and 35, inclusive.
          IWIDTH is an integer value between 1 and 36, inclusive.
          ABYTE is a one-word variable.

          Consider the field in AWORD whose leftmost bit is IPOS and
          which is IWIDTH bits long.  GETBIT puts this field in ABYTE
          right-justified with zero fill.  The leftmost bit of a word is
          numbered 0.  If IPOS or IWIDTH is not within the proper range
          or if a field is specified that is not wholly contained in
          AWORD, the results are undefined.

          Note:  This routine is completely compatible with the F40
          subroutine of the same name.  Even though the documentation
          for the F40 subroutine (i.e., TYMCOM-X Language Bulletin
          Number 27) says the bits in ABYTE to the left of the new bits
          are unchanged, the F40 GETBIT/GETBYT actually clears them to
          zero, as does this FORTRAN-10 subroutine.


GETBYT    Same as GETBIT.


GETC           CALL GETC(IPOS, CARRAY, CHVAR)

          IPOS is an integer value greater than zero.
          CARRAY is an array of 7-bit ASCII characters, packed 5 per
          word, left-justified (i.e., A5 format).
          CHVAR is a one-word variable.

          GETC gets the ASCII character in position IPOS within CARRAY
          and puts it in CHVAR right-justified with zero fill.  The
          leftmost character within an array is numbered 1.


GETKCM         CALL GETKCM(X)

          X is a real variable.

          GETKCM sets X to the number of kilocore microcycles consumed
          since login.


GETMCY         CALL GETMCY(X)

          X is a real variable.

          GETMCY sets X to the number of microcycles consumed since
          login.





                                   6



IINDEX         ... = IINDEX(A1, IPOS1, L1, A2, IPOS2, L2)

          A1 and A2 are arrays of 7-bit ASCII characters, packed 5 per
          word, left-justified (i.e., A5 format).
          IPOS1, L1, IPOS2, and L2 are integer values greater than zero.

          IINDEX returns an integer value that locates one string within
          another, as follows:  Consider string1 as the L1 characters in
          A1 starting at character number IPOS1, and string2 as the L2
          characters in A2 starting at character number IPOS2.  IINDEX
          searches string1 for an occurrence of string2.  If it finds an
          occurrence, it sets the value of IINDEX to the number of the
          first character in the first occurrence, otherwise it sets the
          value of IINDEX to zero.  The leftmost character within an
          array is numbered 1.


IROT           ... = IROT(AWORD, NBITS)

          AWORD is a one-word value.
          NBITS is an integer value between -35 and +35, inclusive.

          If NBITS is positive, IROT returns AWORD shifted left NBITS
          bits.  If NBITS is negative, IROT returns AWORD shifted right
          -NBITS bits.  If NBITS is zero, IROT returns AWORD.  Shifting
          here is circular; bits shifted off one end appear on the other
          end.


IROTAT    Same as IROT.


LSH            ... = LSH(AWORD, NBITS)

          AWORD is a one-word value.
          NBITS is an integer value between -35 and +35, inclusive.

          If NBITS is positive, LSH returns AWORD shifted left NBITS
          bits.  If NBITS is negative, LSH returns AWORD shifted right
          -NBITS bits.  If NBITS is zero, LSH returns AWORD.  Shifting
          here is not circular; bits shifted off one end are lost and
          zero bits come in the other end.














                                   7



NAMPPN         CALL NAMPPN(UNAME, VARNAM, IERROR)

          UNAME is a string of alphabetic or numeric 7-bit ASCII
          characters, packed 5 per word, left-justified (i.e., A5
          format).
          VARNAM is a one-word variable.
          IERROR is an integer variable.

          NAMPPN tries to convert the user name in UNAME to a project-
          programmer number (PPN).  The user name is terminated by a
          blank (40 octal) or NUL (00) character.  If successful, NAMPPN
          sets IERROR to zero and sets VARNAM to the value of the PPN.
          If unsuccessful, NAMPPN sets IERROR as indicated in Appendix
          2.


NEXIT          CALL NEXIT

          NEXIT terminates program execution without typing "EXIT".


OFFINT         CALL OFFINT

          OFFINT affects what happens when an escape character is typed.
          Instead of any action set up by a possible ONINT call, normal
          action will be taken when an escape character is typed.  (See
          ONINT below.)


ONECHR         CALL ONECHR(VALUE)

          VALUE is a one-word value.

          ONECHR interprets the right 8 bits of VALUE as an ASCII
          character and types it.


ONINT          CALL ONINT($label)

          $label is a statement label constant.

          ONINT causes control to be passed to the specified label
          whenever an escape character is typed.













                                   8



OVERLA         CALL OVERLA(NAME)

          NAME is an array of 7-bit ASCII characters, packed 5 per word,
          left-justified (i.e., A5 format).

          NAME contains a segment name.  If the segment name is not
          known, or if the location of the first subroutine in the
          segment is zero, OVERLA types an appropriate error message and
          terminates program execution.  If neither of these errors
          occurs, OVERLA ensures that the segment and any segments
          leading to it are loaded, and then calls the first subroutine
          in the segment (with no arguments).


POSITI         ... = POSITI(N)

          N is a FORTRAN-10 logical unit number.

          POSITI returns a real value equal to the current random record
          number for the file.


PROJEC         CALL PROJEC(ARRAY)

          ARRAY is an array containing at least three words.

          PROJEC sets the first three words of ARRAY to the user's
          project code in 7-bit ASCII characters, packed 5 per word,
          left-justified, blank filled (i.e., A5 format).


PUTC           CALL PUTC(IPOS, ARRAY, CHVAR)

          IPOS is an integer value greater than zero.
          ARRAY is an array of 7-bit ASCII characters, packed 5 per
          word, left-justified (i.e., A5 format).
          CHVAR is a one-word value whose right 7 bits are an ASCII
          character.

          The ASCII character in CHVAR is put in character position IPOS
          in ARRAY.  The leftmost character within an array is numbered
          1.














                                   9



RDTAPE         CALL RDTAPE(ARRAY, ERRLAB, IERR)

          ARRAY is an array containing at least five words.
          ERRLAB is a variable that has been assigned a label value by
          an ASSIGN statement.
          IERR is an integer variable.

          RDTAPE reads characters from paper tape to a file.  (Paper
          tape handling on the TYMCOM-X system is described in the
          Tymshare TYMCOM-X TAPE Reference Manual.) If the first
          character of ARRAY is blank or the first word of ARRAY is
          zero, the file is named "nnnTAP.TMP" (where nnn is the job
          number).  If the first character of ARRAY is nonblank and the
          first word of ARRAY is nonzero, the file name is determined by
          interpreting ARRAY according to Appendix 1.

          RDTAPE reads characters from the terminal and puts them in the
          specified file.  Characters are copied from the terminal to
          the file until a Control-G (BEL) character is read.  If
          another character is read within 10 seconds, whether from
          paper tape or from the keyboard, the Control-G character is
          included in the file and characters continue to be copied from
          the terminal to the file.  If another character is not read
          within 10 seconds after the Control-G character is read,
          whether from paper tape or from the keyboard, the Control-G
          character is not included in the file and the file is closed.

          If an error occurs, IERR is set to a value from the following
          table and control is passed to the label assigned to ERRLAB.

                    ERROR CODE    MEANING
                    ----------    -------
                        0         Illegal file name
                        1         No such user
                        2         File protected
                        3         File already open


RENAM          CALL RENAM(OLDNAM, NEWNAM, IERROR)

          OLDNAM and NEWNAM are file identifiers (as described in
          Appendix 1).
          IERROR is an integer variable.

          RENAM renames the file identified by OLDNAM as a file
          identified by NEWNAM.  If successful, RENAM sets IERROR to
          zero.  If unsuccessful, RENAM sets IERROR as indicated in
          Appendix 2.








                                   10



RENAME         CALL RENAME(OLDNAM, OLDEXT, NEWNAM, NEWEXT, PC, IERROR)

          OLDNAM and NEWNAM are strings of five or fewer 7-bit ASCII
          characters, packed 5 per word, left-justified (i.e., A5
          format).
          OLDEXT and NEWEXT are strings of three or fewer 7-bit ASCII
          characters, characters, packed 5 per word, left-justified.
          PC is the integer value of the new protection code, or zero.
          IERROR is an integer variable.

          RENAME renames the file named OLDNAM with extension OLDEXT as
          a file named NEWNAM with extension NEWEXT.  If PC is nonzero,
          the new protection code is PC.  If PC is zero, the old
          protection code is used.  If successful, RENAME sets IERROR to
          zero.  If unsuccessful, RENAME sets IERROR as indicated in
          Appendix 2.


RESUME         CALL RESUME

          If aape character has been typed and control passed to a
          label specified in an ONINT call, RESUME causes execution to
          resume from the point where the escape character was typed.
          If RESUME is called without an escape character having been
          typed, it returns normally.

          Note:  The program may not always execute as expected.  User
          code to process escapes must be careful of the variables they
          change.  Non-escape code must be coded with the awareness that
          such variables may be changed between the time they are set
          and the time they are used.  This can happen (among other
          times) when a subroutine is interrupted and then itself is
          called by escape code.  When normal execution is resumed,
          variables originally set before the interrupt will have had
          their values changed.  This problem has been avoided for the
          FORTRAN-10 object time system, so code in both places may call
          the same object time function and work as expected.


RTC            CALL RTC(CHARL, ARRAY, IPOS)

          CHARL is a one-word variable.
          ARRAY is an array of 7-bit ASCII characters, packed 5 per
          word, left-justified (i.e., A5 format).
          IPOS is an integer value greater than zero.

          RTC retrieves the 7-bit ASCII character in position IPOS in
          ARRAY and inserts it in CHARL, left-justified and blank
          filled.  The leftmost character within an array is numbered 1.
          Variable CHARL is ready for comparison with literals of the
          form 1Hx.





                                   11



RUN            CALL RUN(DEVNAM, FILNAM, UNAME, IENTNO)

          DEVNAM, FILNAM, and UNAME are strings of 7-bit ASCII
          characters packed 5 per word, left-justified (i.e., A5
          format).
          IENTNO is an integer value greater than or equal to zero.

          RUN transfers control to the program in file FILNAM in
          directory UNAME on device DEVNAM.  If the called program has
          "/ENTRY" statements, control is passed according to the
          IENTNOth "/ENTRY" statement.  If the called program has no
          "/ENTRY" statements, IENTNO should be zero and control is
          passed to the normal entry point.  If errors are encountered,
          an error message is typed and program execution is terminated.


SETBIT         CALL SETBIT(AWORD, IPOS, IWIDTH, ABYTE)

          AWORD is a one-word variable.
          IPOS is an integer value between 0 and 35, inclusive.
          IWIDTH is an integer value between 1 and 36, inclusive.
          ABYTE is a one-word value.

          Consider the field in AWORD whose leftmost bit is IPOS and is
          IWIDTH bits long.  This field is set to the rightmost IWIDTH
          bits from ABYTE.  The leftmost bit of a word is numbered 0.
          If IPOS or IWIDTH is not within the proper range or a field is
          specified that is not wholly contained in AWORD, the results
          are undefined.


SETBYT    Same as SETBIT.


SHIFTR    Same as LSH.


SIMTTY         CALL SIMTTY(N)

          N is a FORTRAN-10 logical unit number.

          SIMTTY causes output to be written to the specified file in
          the same way that it would appear at the terminal.  (Carriage
          control characters are handled correctly.)


SIZE           ... = SIZE(N)

          N is a FORTRAN-10 logical unit number.

          SIZE returns a real value equal to the number of records in
          the file.




                                   12



STC            CALL STC(CHARL, ARRAY, IPOS)

          CHARL is a one-word value.
          ARRAY is an array of 7-bit ASCII characters, packed 5 per
          word, left-justified (i.e., A5 format).
          IPOS is an integer value greater than zero.

          The 7-bit ASCII character in the leftmost position of CHARL is
          stored in character position IPOS in array ARRAY.  The
          leftmost character within an array is numbered 1.


TIMER          CALL TIMER(IVALUE)

          IVALUE is an integer value.

          TIMER causes program execution to be terminated IVALUE seconds
          from the time it is called.  If IVALUE is less than or equal
          to zero, program execution will be immediately terminated.
          The message "MAXIMUM RUN TIME EXCEEDED" will be typed when
          execution is terminated.


TRU            ... = TRU(X)

          X is an argument whose value is ignored and whose only purpose
          is to tell the FORTRAN compiler that TRU is a function call.

          TRU returns a real value equal to the number of TRUs consumed
          by the user since login.


TRULIM         CALL TRULIM(NTRUS, $label)

          $label is a statement label constant.

          TRULIM causes a jump to the statement at the specified label
          when NTRUS additional TRUs have been consumed.  If NTRUS is
          less than or equal to zero, TRULIM will immediately jump to
          the statement at the specified label.


USERNA         CALL USERNA(ARRAY)

          ARRAY is an array containing at least three words.

          USERNA sets the first three words of ARRAY to the user's user
          name in 7-bit ASCII characters, packed 5 per word, left-
          justified, blank filled (i.e., A5 format).







                                   13



WAIT           CALL WAIT(X)

          X is a real value.

          Consider X as a number of seconds.  If X is between 1 second
          and 20 minutes (1200 seconds), WAIT will hibernate for X
          seconds and then return.  If X is not between 1 second and 20
          minutes, WAIT will simply return.
















































                                   14



                               APPENDIX 1

                            FILE IDENTIFIERS


           A file identifier is a string of 7-bit ASCII characters,
        packed 5 per word, left-justified (i.e., A5 format), consisting
        of the following (where the optional parts are enclosed in
        square brackets []):

           [(user-name)][device-name:]file-name[.[extension]]

             The user name consists of one or more letters or digits.
             Characters after the twelfth are ignored without a
             message.  Blanks may precede or follow the user name.

             The device name consists of one or more letters or
             digits and is followed by a colon.  Characters after the
             third are ignored without a message.  Blanks may precede
             or follow the user name.

             The file name consists of one or more letters or digits.
             Characters after the sixth are ignored without a
             message.  Blanks may precede the file name.

             The extension is separated from the file name by a
             period and consists of one or more letters or digits.
             Characters after the third are ignored without a
             message.

           Actually, the file name is optional.  If the file name is not
        specified the device must be specified, and the file name is
        assumed to be "DSK".

           The maximum length possible for the file identifier is:

             literal           infinite
             array             array size in characters
             complex           10
             double precision  10
             integer           5
             real              5
             logical           5

           The file identifier is terminated when:

             a) the string length is exceeded, or
             b) a NUL character (00) is found, or
             c) a blank character is found after the file identifier,
                whichever comes first.

           Control characters (i.e., 01 through 37 octal) are ignored
        except in counting the string length.



                                   15



           A blank in the middle of a user name will terminate the user
        name (but not the file identifier) and cause the remaining
        characters until the ")" to be skipped.

           If the period and extension are omitted, and FOROTS variable
        DEBFN. has been set nonzero (via DDT), the FORTRAN object time
        system will type:

        UNIT n, FILE file-name OPENED AS file-name. INSTEAD OF
                                                          file-name.DAT

           Note the following incompatibilities:

             Existing FORTRAN-10 programs omitting the period and the
             extension so as to get an extension of "DAT" will not
             get any extension or warning.  They can get a message
             under the conditions described in the preceding
             paragraph.

             Blanks immediately before and in the middle of the user
             name will no longer be diagnosed.



































                                   16



                               APPENDIX 2

                              ERROR CODES


           The possible values of IERROR that can be returned for DELET,
        FILINF, NAMPPN, RENAM, or RENAME are:

        ERROR CODE     MEANING
        ----------     -------
            0          No error
            1          Illegal file name construction
            2          System error
            3          File not found
            4          File not renamed
            5          File not deleted because of protection
            8          File busy
            9          File already exists






































                                   17
zt"`