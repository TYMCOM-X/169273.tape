PCOM - Periodic Command File Processor for TYMCOM-X               Page 1
INTRODUCTION


     1.0  INTRODUCTION

          The PCOM program provides  a  mechanism  within  the  TYMCOM-X
     system  environment for a user to execute a list of commands from a
     file.  The file may contain XEXEC commands, input to user  programs
     and special commands to PCOM.

          PCOM reads the specified file of  commands  (hereafter  called
     the  command file) and passes those commands to another frame which
     processes them.  PCOM then records the output from  the  processing
     frame  in  a  log  file.   Any  response  from  the job which would
     normally  be  printed  on  the  terminal  during   an   interactive
     timesharing session is written in the PCOM log file.

          When the PCOM job is completed, the  PCOM  program  terminates
     the  processing  frame,  closes  the  log  file  and exits.  A more
     detailed explanation of  the  options  and  commands  available  is
     listed below.



     2.0  NOTATIONAL CONVENTIONS AND DEFINITIONS

          The terms JOB and FRAME tend to be used interchangeably on the
     TYMCOM-X  environment.  However, in this document they refer to two
     distinct concepts.  JOB is used to refer to each single  invocation
     of  the  PCOM  program.   FRAME  is used to describe the processing
     frame, that is:   the  frame  that  actually  executes  the  user's
     commands from the PCOM file.

          Square brackets "[" and "]" are used to enclose optional items
     or optional syntax and are not part of the actual PCOM syntax.

          Angle brackets "<" and ">"  are  used  to  enclose  conceptual
     ideas and entities and are not part of the PCOM syntax.

          In  the  examples  used  in  this  document,  lines  preceeded
     immediately  with  a  dash (-) are usually commands typed to XEXEC.
     These commands work both in PDP10 mode and in XEXEC mode.  However,
     for convenience, XEXEC mode is used in this document.
PCOM - Periodic Command File Processor for TYMCOM-X               Page 2
GETTING STARTED


     3.0  GETTING STARTED

          To use PCOM, the user must  first  create  a  "command"  file.
     This  is  a  file  which  contains commands which would normally be
     typed at the terminal during a timesharing session.   For  example,
     if the terminal session looks like:

        -RUN PROGRM
        Overlap period: DAILY
        Separate divisions: YES
        Selection criteria: COLLECT ALL
        Output file name: REPORT.LST

     then, the PCOM command file would contain the following:

        RUN PROGRM
        DAILY
        YES
        COLLECT ALL
        REPORT.LST

          The PCOM command file is a  normal  text  file  which  may  be
     created  using  any  text  editor available, (EDITOR, TECO, EDIT10,
     etc.), or by any program which writes  normal  text  (for  example,
     output from a SAIL or FORTRAN program).

          To execute the commands in an existing PCOM command file,  the
     user would type one of the following commands:

        -R PCOM [; [ logfile = ] commandfile [param] [/switches] ]

            or 

        -R PCOM
        PCOM version 1.60
        (Type ? for help)
        Command file: [ logfile = ] commandfile [param] [/switches]

     where logfile is the filename for the PCOM log file, commandfile is
     the filename of the command file, param is an optional list of user
     definable parameters and /switches is one or  more  of  the  option
     switches available.

          In TYMCOM-X monitors version  P034/L  and  later  two  monitor
     commands  are provided for convenience to run PCOM directly.  These
     are:  PCOM and DCOM.  their formats are as follows:

        -PCOM [ logfile = ] commandfile [param] [/switches]
        -DCOM [ logfile = ] commandfile [param] [/switches]

     The DCOM command works identically to typing "R PCOM ;" followed by
     the  appropriate  command-line  syntax.  The PCOM command, however,
     tells the PCOM program to process the job in NODETACH  mode.   (See
     the section on OPTION SWITCHES below for further information).
PCOM - Periodic Command File Processor for TYMCOM-X               Page 3
GETTING STARTED


          If the logfile is not specified  on  the  command  line,  PCOM
     reads  the first line of the input command file to search for a log
     file specification in the form:

        :LOGFILE logfilename

     where "logfilename" is the name of the file into which PCOM  writes
     logging information.  For a limited time the TYMCOM-IX PERP format:

        :logfilename

     will also be accepted.  However, a warning message will be  printed
     as a reminder to convert PERP command files to use PCOM format.  If
     a logfile has not been specified either on the command line or  the
     first  line of the commandfile, PCOM will generate a logfilename of
     the form ###PCO.LOG where "###" is the frame  number  of  the  PCOM
     processor.



     4.0  OPTION SWITCHES

          PCOM allows the user to specify the following option  switches
     on the initial command line, or on the command-file prompt line.

        /APPEND     - If logging, append to the specified log file
        /DETACH     - Run the job in DETACHED mode  (Default)
        /HELP[:arg] - Prints a helpful message
                      /HELP or ?     prints a helpful message
                      /HELP:TEXT     same as /HELP
                      /HELP:SWITCHES prints a brief list of switches
        /LICENSE    - Pass user's current license to the processing
     frame
        /LOG[:arg]  - Specify log file creation and deletion criteria
                      /LOG:NONE   - do not create a logfile (/NOLOG)
                      /LOG:ON     - always create a logfile (/LOG)
                      /LOG:DELETE - create a log, delete it when done
                      /LOG:ERROR  - create a log, delete if no errors
        /MAIL       - Send mail when the PCOM job completes
        /NEWS       - Prints the latest enhancements, if any
        /SUPERSEDE  - Overwite existing logfile, if any  (Default)
        /TIME:n     - Set the time limit for processing to n minutes
        /TRULIMIT:n - Set the TRU limit for processing to n TRUs
        /WATCH      - Watch the progress of the detached PCOM process


          If no switches are specified, the normal  default  values  for
     the  option  switches  are:   /DETACH,  /LOG,  /MAIL,  /TIME:60 and
     /SUPERSEDE.  Of course, these defaults may be overridden simply  by
     specifying  the  desired  option  with  the appropriate switch.  As
     mentioned above,  the  PCOM  command  changes  the  default  option
     switches to /NODETACH, /NOMAIL and /LOG:DELETE.
PCOM - Periodic Command File Processor for TYMCOM-X               Page 4
OTHER PCOM FEATURES


     5.0  OTHER PCOM FEATURES

          As mentioned earlier, PCOM command  files  may  contain  XEXEC
     commands,  input  to  programs and various commands to PCOM itself.
     These imbedded PCOM commands are similar to those available in  the
     TYMCOM-IX  PERP system and have the same format.  Each PCOM command
     must begin in column 1 with a colon (:), followed immediately  with
     the command.

      :COM <file>         - Begins taking commands from the named  file.
                            Command  files may be nested approximately 5
                            deep with this command.  An optional  syntax
                            includes  specifying  parameters on the same
                            line after the filename.  For example,
                                :COM <file> parameter,parameter,...
      :<par>=<val> [,...] - Assigns value "val" to parameter "par".
      :DEFINE <par>=<val> - Assigns value  "val"  to  parameter-variable
                            "par".    This   command  is  identical  to,
                            :<par>=<val> above and  is  included  to  be
                            compatible with TYMCOM-IX PERP.  Note:  both
                            forms  of  this   command   allow   multiple
                            assignments.
      :ESCAPE             - Forces the processing frame to EXEC level.
      :GOTO label         - Transfers control to label.
      :LOGFILE <file>     - Used on the first line of the  command  file
                            to  default  the  log-file  name  to "file".
                            This  command  supersedes   the   PERP-style
                            convention  of  ":logfilename"  on the first
                            line of the PERP command file.
      :PARAMETERS <parameter-name-list>
                          - Define a list of parameter names.
      :QUIT               - Cause  normal  termination  of  the  running
                            frame.
      :REMARK             - This line is a comment to PCOM.
      :SEND key arg       - Transmits unformatted text to the processing
                            frame.   Normally,  PCOM  removes line-feeds
                            and other end of line  characters  from  the
                            command  file.   In some instances, the user
                            will  need  to   send   special   characters
                            directly.
      :SEND CHARACTER nn  - Transmits the character represented  by  the
                            octal number nn.
      :SEND STRING "text" - Transmits the literal string "text".
      :SEND FILE <file>   - Transmits the contents of <file>.  Line-feed
                            characters     immediately    following    a
                            carriage-return are  removed.   However,  no
                            other data interpretation occurs.
      :STOP               - Cause abnormal termination  of  the  running
                            frame.   If  the option switch /LOG:ERROR is
                            specified, then :STOP will cause the logfile
                            to be saved.
      :TIME n             - Changes the time limit to  n  minutes.   The
                            default  time  limit for job execution is 60
                            minutes.
PCOM - Periodic Command File Processor for TYMCOM-X               Page 5
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


     6.0  ADVANCED FEATURES - SUBSTITUTION PARAMETERS

          PCOM has the capability  to  pass  parameters  into  the  PCOM
     command  file  from  command  level.   This  is  done  through  the
     introduction of ordered keywords defined by the user.  To  use  the
     parameter  substitution  mechanism,  the user must either specify a
     list of parameters on the command  line,  or  provide  a  parameter
     declaration inside the command file.

          Each of the following command lines, will enable the parameter
     substitution  mechanism.  The first two lines are entered to XEXEC,
     and the remaining two lines would be part of a PCOM  command  file.
     If  neither  of  the  parameter-list  or the parameter-name-list is
     specified, PCOM initially disables parameter substitution.

         -R PCOM ; commandfile parameter-list /switches
         -PCOM logfile=commandfile parameter-list /switches
         :COM commandfile parameter-list
         :PARAMETERS parameter-name-list


     parameter-list      is the list of values, separated by  commas  or
                         spaces,  which  the  user  wants  to substitute
                         inside the PCOM command file.  Imbedded  spaces
                         and special characters may be used by enclosing
                         the substitution string  in  single  or  double
                         quotes, (') or (").

     parameter-name-list is the list of parameter names which  the  user
                         wants to have replaced with the values from the
                         parameter-list.  Parameter  names  may  contain
                         any  alphabetic  character (A-Z and a-z), where
                         "A" is the same as  "a",  and  the  punctuation
                         characters dash (-) and underscore (_).



     6.1  Parameters Types

          There are three distinct types of parameters:  ordered,  named
     and  pre-declared.   The  "ordered"  parameters  are taken from the
     parameter-list  in  the  order  they  are  specified  and   matched
     one-by-one  against the names specified in the parameter-name-list.
     For example:

         -R PCOM ; filename sub1,sub2,sub3,...,subN
         :PARAMETERS  A,B,C,...,N

     will match the string "sub1" with parameter name "A",  "sub2"  with
     "B", "sub3" with "C", and so on.  "Named" parameters allow the user
     to specify the default value of a declared parameter  name,  or  to
     declare new parameters by name.  For example:

PCOM - Periodic Command File Processor for TYMCOM-X               Page 6
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


         -R PCOM ; filename file=test,new=wanted,old="a formality"
         :PARAMETERS  USER,FILE,SYSTEM

     will assign the string "test" to parameter FILE and the null string
     to  parameters  USER  and  SYSTEM.   It  will  also  define two new
     parameter names:  NEW and OLD, and  will  assign  them  the  values
     specified "wanted" and "a formality".

          The interaction between "ordered" and  "named"  parameters  is
     very  important to understand.  In the previous example, there were
     three parameters specified:  FILE, NEW and OLD, and three "ordered"
     parameters declared:  USER, FILE and SYSTEM.  Both of the "ordered"
     parameters not specified:  USER and SYSTEM were assigned  the  null
     string.  The "ordered" parameter FILE was also "named", and thereby
     was assigned the string value "test".  If  instead,  the  following
     was specified:


         -R PCOM ; filename SYS,PROG,20,file=FOO
         :PARAMETERS USER,FILE,SYSTEM

     then the values "SYS",  "PROG"  and  "20"  would  be  matched  with
     parameter  names  USER,  FILE  and SYSTEM respectively.  FILE would
     also be assigned the value "FOO".  As might be guessed, FILE cannot
     contain both "FOO" and "PROG".  Thus, some form of arbitration must
     occur.  This is done by having "named" parameters provide "default"
     values  to  parameter  names.   The  parameter FILE is assigned the
     default value "FOO" from the command line.  When the  ":PARAMETERS"
     statement  is  encountered within the command file, this default is
     then overridden with the specified value "PROG".   If  the  default
     value  is  constant,  then  it  may be specified inside the command
     file:

         :PARAMETERS  USER, FILE="PROG", SYSTEM="20"

     To allow the default value to be used, the user simply  omits  that
     parameter from the command line.  For example:

         -R PCOM ; filename SYS,PROG,20
         -R PCOM ; filename SYS
         -R PCOM ; filename SYS,,20
         -R PCOM ; filename USER=SYS

     would all produce the same results  using  the  ":PARAMETERS"  line
     from  above.   An  important  note:   all "ordered" parameters must
     appear prior to any "named" parameters on the  command  line.   For
     example,

         -R PCOM ; filename SYS, SYSTEM=20, PROG

     is illegal, and an error will result.  As mentioned  above,  it  is
     reasonable  to have default values specified for various parameters
     in the command file.  However, a user familiar with the contents of
     a  particular  command file may prefer to specify a different value
PCOM - Periodic Command File Processor for TYMCOM-X               Page 7
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


     on the command line.  Thus the order of precedence for defaults  is
     as follows:

         (1) - A specified "ordered" parameter on the command line.
         (2) - A specified "named" parameter on the command line.
         (3) - A specified default value in the command file.



     6.2  Pre-Declared Parameters

          The third type of parameter is  the  "pre-declared"  parameter
     variable.   These  parameters are pre-declared by PCOM and are used
     to examine or change the user environment.   PCOM  currently  knows
     about the following system variables:

     $DAYTIME      - is a string containing the current time of  day  in
                     the  form HH:MM:SS using the 24-hour clock 00:00:00
                     to 23:59:59.  (Read-Only)
     $DELIMITER    - is a character variable which contains the value of
                     the  character  used  to  delimit  substitution  of
                     parameters.  Initially the value is back-slash (\).
     $FALSE        - is a boolean variable equal to 0.  (Read-Only)
     $LOGGING      - is a boolean variable for  controlling  the  output
                     sent  to the log file (if one exists).  If there is
                     no log file, then this variable  becomes  Read-Only
                     and is equal to 0.  (FALSE)
     $MAIL         - is a boolean variable which controlls whether  mail
                     is  to  be  sent to the user upon completion of the
                     PCOM job.  The initial value depends on  the  value
                     of the /MAIL switch.
     $SUBSTITUTION - is a boolean variable for controlling  the  in-line
                     substitution of parameters.  The initial value is 0
                     (FALSE) unless a  parameter  is  specified  on  the
                     command   line   or   a  :PARAMETERS  statement  is
                     encountered.
     $TIMELIMIT    - is a decimal value containing  the  remaining  time
                     limit  for  the processing frame.  This variable is
                     set initially to the value of the /TIME switch  and
                     may  be  reset  directly or by the :TIME n command.
                If this variable is set to 0, then there is no time
                     limit.
     $TRUE         - is a boolean variable equal to 1.  (Read-Only)
     $TRULIMIT     - is a decimal value containing  the  remaining  TRUs
                     for   the   processing  frame.   This  variable  is
                     initially set to 0 which means  that  there  is  no
                     initial  TRU  limit.   Setting  this variable means
                     that from the current point, that many TRUs may  be
                     accrued  before  the  job is stopped.  This is very
                     useful if the user expects a program to use a small
                     number of TRUs and something goes wrong.  PCOM will
                     prevent the program from running up too many TRUs.

PCOM - Periodic Command File Processor for TYMCOM-X               Page 8
ADVANCED FEATURES - SUBSTITUTION PARAMETERS


     6.3  Using Parameter Substitution

          Substitution parameters may be used anywhere within a  command
     file  after  they have been declared, including PCOM command lines.
     The way to invoke a substitution is to  precede  the  name  of  the
     parameter   with   the   parameter-delimiter  character.   This  is
     initially set to the character backslash (\) but may be changed  at
     the  discretion  of  the  user.   For example, to use the parameter
     named USER from the examples above:

         (\USER\)
            or
         copy (\USER\)file.ext to same

     would fill in the username from the parameter USER.  The  parameter
     name MUST be preceeded by the delimiter and MUST be terminated with
     a second delimiter.  For example, "\PAR-NAME\text" or "\PAR\\PAR\".

          The user  may  also  declare  "named"  parameters  inside  the
     command file via the ":DEFINE" command.  For example:

         :DEFINE RHYME="Mary had a little lamb.", SPEC="\NAME\.\EXT\"
           or
         :RHYME="Mary had a little lamb.", SPEC="\NAME\.\EXT\"

     declares the two parameter names:  RHYME and SPEC and assigns  them
     their  respective  values.   Note  that  this command is useful for
     combining previously defined parameters (e.g. NAME  and  EXT)  into
     new parameters.

          As mentioned elsewhere, the delimiter character may be changed
     at  the discretion of the user.  To change the delimiter to another
     character  (other  than  "\"),  simply  set  the   value   of   the
     pre-declared  parameter variable "$DELIMITER" to another character.
     For example,

         :$DELIMITER="<char>"

     where "char" is the new  desired  delimiter  character.   The  user
     should  note  and  understand  that  the  setting  of the delimiter
     follows the scope  rules  of  ALGOL-like  languages.   A  delimiter
     declared  in  an  outer  level command file is passed down to inner
     level command files.  However, a delimiter declared inside an inner
     level  command  file  reverts  back  to  the previous delimiter set
     outside that file when the inner level file is completed.

     Important:  the delimiter must be a character which is not valid in
     a  parameter  name,  otherwise  PCOM  will not be able to determine
     where your parameter name "really" ends.
      
gY7I