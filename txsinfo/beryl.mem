From: Dennis Coffey <DENCOFF@C26.Tymnet> 
Date: Mon, 28 Oct 85 13:19:13 PST 
To: TYMOPS.B/AGUA@ONTYME, TYMOPS.D/STEIN.ONTYME
Cc: TYMOPS.J/SNAVELY@ONTYME, Craig Fletcher <FLETCHERC@X930.Tymnet>
Subject: Node Code Control 



                               MEMORANDUM


                                                       TYMCOM-X SUPPORT

DATE:  28-Oct-85

  TO:  Beryl Agua, David Stein

  CC:  Jack Snavely, Craig Fletcher

FROM:  Dennis Coffey  (Tymcom-X Support)

SUBJ:  Idea to Control Disk Space Used by Node Code Files on Tymcom-X
	Hosts (25 & 70).

-----------------------------------------------------------------------

Beryl,

Last week's meeting with you and the Code Generators was fruitful.  I
believe we have worked out a means of deleting only unneeded files, such
as old "BK ..."  files for nodes which have stable current "ND ..."
files.  The solution I provided the staff in the meeting was only
temporary -- a means of getting the job done until a more effective,
efficient solution is found.

I've discussed your problem with the manager and staff of the Tymcom-X
Operating System Unit, and we would like to offer a suggestion or two,
for a potential solution which might offer multiple advantages over the
current method of storing the information contained in the .TYM, .CMD
and .Cnn files.


1.)  Since this information all appears to be pretty much the same type,
it appears to be a good candidate for a data base system.

The data base system could be designed to hold all the variable parts of
the source code needed to generate the node code.  It could have for
each node all the variable information needed in a .CMD file, and all
the parameter values needed for a .TYM file.  Thus, instead of 2 pages
of PDP-10 memory for a .CMD file and 2 pages of memory for a .TYM file,
all the variable information could be stored in one record in the data
base's data file.

Procedures would be included in this data base system to generate the
.TYM file and the .CMD file for a node and for each of its slots.  These
procedures need be stored on the PDP-10 only once, saving much space.

This proposed data base system could save the "old" information for the
node code in such a way as to keep it as backup.  The system could
include the ability to automatically delete backup data more than one
generation old, and could even allow choice of backup files for deletion
based on last access date.

In addition to the savings of disk pages provided, the proposed data
base system would provide the additional advantage of greatly reducing
the number of files in the directory.  This would greatly improve access
time to each node's data, and improve the operating system's access time
to individual files (e.g., for deletion), and allow the code generators
better control over the files and data sotred in the directory.

The proposed data base system would have some disadvantages:  it would
require some time to develop, and some change of procedure for code
generators; the data for a .TYM file or a .CMD file would no longer be
in the source code file with the expanatory comments; generating the
.TYM and the .CMD files would depend on procedures of the data base
system; immediate access to the .TYM files and their comments would not
be so available.


2.)  A much simpler way of keeping the files organized and of keeping
the number of files in the directory restricted would consist of placing
the files for each node in different directories:  the developmental
files in one directory, the current files in another directory, and the
backup files in another directory.  When a file is to change status,
such as go from 'current' to 'backup' status, the renaming would consist
of renaming from one directory to another directory, which can be done
with license set.

This would make each directory smaller, making access and deletions
quicker and more reliable, and would make it easier to maintain the
directories.  When the new Tymcom-X hosts are available for node code,
this might be worth considering.

3.)  Another system that has been suggested in our meeting, that I am
beginning to investigate, is a Code Management System.  Proprietary
software packages are available to manage source code for different
generations of code for a variety of systems.  These packages provide
efficient use of disk space, easy access to the code, and efficient
management of the information.

Information about these Code Management Systems for PDP-10s is available
from the DEC user community.  that is where I will look.
