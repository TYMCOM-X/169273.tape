SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOARY	MAC	11-Nov-66 00:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76

     1						SUBTTL	Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76
     2
     3					; COPYRIGHTS 1972,1973,1976,1977  STEVENS INSTITUTE OF TECHNOLOGY
     4					; HOBOKEN, NEW JERSEY, 07030
     5					; ALL RIGHTS RESERVED.
     6
     7					  ;UNIVERSALS
     8
     9						SEARCH	JOBDAT		;JOB DATA AREA DEFINITIONS
    10						SEARCH	MACTEN		;DEC-10 COMMON MACROS
    11						SEARCH	UUOSYM		;TOPS10 UUO SYMBOL DEFINITIONS
    12						SEARCH	SNOPRM		;SITBOL PARAMETER FILE
    13
    14					  ;DIRECTIVES
    15
    16						.DIRECT	.XTABM		;EXCLUDE TABS FROM MACRO CALLS
    17						SALL			;SUPPRESS MACRO EXPANSIONS
    18	400000'					TWOSEG	400K		;TWOSEGMENT CODE
    19
    20					  ;VERSION NUMBER
    21
    22			000005			ARYVER==5		;MAJOR VERSION NUMBER
    23			000000			ARYMIN==0		;MINOR VERSION NUMBER
    24			000263			ARYEDT==263		;EDIT LEVEL
    25			000000			ARYWHO==0		;CUSTOMER ARGUMENT
    26
    27					  ;TITLE
    28
    29						TITLE.	ARY,SNOARY,<Arrays>
    30		416271	000000			ARYSIX==SIXBIT /ARY/	; SNOARY ABBREVIATION IN SIXBIT
    31		406453	100000			ARYASC==ASCIZ /ARY/	; SNOARY ABBREVIATION IN ASCII
    32						SALL
    33
    34
    35					  ;SHOW UNIVERSAL VERSION NUMBERS
    36
    37	400000'	043100	000450			SHOW.	%%JOBD		;VERSION NUMBER OF JOBDAT
    38	400000'	000200	000025			SHOW.	%%MACT		;VERSION NUMBER OF MACTEN
    39	400000'	001400	000457			SHOW.	%%UUOS		;VERSION NUMBER OF UUOSYM
    40	400000'	000500	000305			SHOW.	%%SNOP		;VERSION NUMBER OF SNOPRM
    41
    42						ARYTTL			; Title
    43						ARYPTX			; PASS2 assembly message
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 2
SNOARY	MAC	11-Nov-66 00:09		Table of Contents

    44						SUBTTL	Table of Contents
    45
    46					;		Table of Contents for Arrays
    47					;
    48					;
    49					;			   Section			      Page
    50					;   1. Table of Contents. . . . . . . . . . . . . . . . . . .    2
    51					;   2. REVISION HISTORY . . . . . . . . . . . . . . . . . . .    3
    52					;   3. ARRAY(P,V) . . . . . . . . . . . . . . . . . . . . . .    4
    53					;   4. ARY - SECONDARY ROUTINE TO ALLOCATE THE ARRAY. . . . .    5
    54					;   5. ITEM - THE ARRAY REFERENCE . . . . . . . . . . . . . .    6
    55					;   6. PROTOTYPE. . . . . . . . . . . . . . . . . . . . . . .    7
    56					;   7. COPY . . . . . . . . . . . . . . . . . . . . . . . . .    8
    57					;   8. SORTING ROUTINES . . . . . . . . . . . . . . . . . . .    9
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 3
SNOARY	MAC	11-Nov-66 00:09		REVISION HISTORY

    58						SUBTTL	REVISION HISTORY
    59
    60					COMMENT	\
    61
    62					START OF VERSION 5.
    63					122	RENAME MODULES & CLEAN UP.
    64					147	Clean up how Y.???? and X.???? are used (use TX?? instead or
    65						TD?? OR MOVX instead of MOVE)
    66					262	Fix a HALT when sorting an array with defined data types, a key
    67						and the array was not full, so it contained null strings.
    68					263	Use XWD22 instead of [2,,2]
    69					\
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 4
SNOARY	MAC	11-Nov-66 00:09		ARRAY(P,V)

    70						SUBTTL	ARRAY(P,V)
    71
    72	400000'	262 01 0 00 000000#	ARRAY::	POP	STACK,FLAP##+1	; SAVE ...
    73	400001'	262 01 0 00 000000*		POP	STACK,FLAP##	; 2ND ARGUMENT
    74
    75	400002'	265 06 0 00 400023'		JSP	SLINK,ARY	; ALLOCATE THE ARRAY
    76
    77	400003'	200 05 0 01 777777 		MOVE	P2,-1(STACK)	; ADDRESS OF ARRAY
    78	400004'	550 06 0 05 000004 		HRRZ	S1,NSUBS(P2)	; BUMP
    79	400005'	242 06 0 00 000001 		LSH	S1,1		; OVER DIM ...
    80	400006'	270 05 0 00 000006 		ADD	P2,S1		; INFO
    81
    82	400007'	200 11 0 00 400001*		MOVE	T1,FLAP##	; RELOAD ...
    83	400010'	200 12 0 00 000000#		MOVE	T2,FLAP##+1	; 2ND ARG.
    84	400011'	202 11 0 05 000005 		MOVEM	T1,SUBFAC(P2)	; AND PLUNK INTO ...
    85	400012'	202 12 0 05 000006 		MOVEM	T2,SUBFAC+1(P2) ; FIRST ARRAY ELEMENT
    86
    87	400013'	551 15 0 05 000007 		HRRZI	Q1,SUBFAC+2(P2)	; POINT TO 2ND ELEMENT
    88	400014'	550 16 0 01 777777 		HRRZ	Q2,-1(STACK)	; ADDRESS OF ABLOK
    89	400015'	270 16 0 16 000000 		ADD	Q2,BLENG(Q2)	; ADDRESS JUST BEYOND ABLOK
    90	400016'	303 15 0 16 777777 		CAILE	Q1,-1(Q2)	; IS THERE A 2ND ELEMENT?
    91	400017'	254 00 0 04 000001 		JRST	1(PLINK)	; NO
    92
    93	400020'	505 15 0 05 000005 		HRLI	Q1,SUBFAC(P2)	; 'FROM' ADDRESS
    94	400021'	251 15 0 16 000000 		BLT	Q1,0(Q2)	; SPRAY DESCRIPTOR
    95	400022'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
    96

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 5
SNOARY	MAC	11-Nov-66 00:09		ARY - SECONDARY ROUTINE TO ALLOCATE THE ARRAY

    97						SUBTTL	ARY - SECONDARY ROUTINE TO ALLOCATE THE ARRAY
    98
    99						 ; ARY - A TYPE S UTILITY TO ALLOCATE AN ARRAY
   100						 ; CALLING SEQUENCE:
   101						 ;	PUSH PROTOTYPE ONTO STACK
   102						 ; 	JSP	SLINK,ARY
   103						 ;	RETURN	; ARRAY DESCRIPTOR REPLACES PROTOTYPE
   104
   105	400023'	262 01 0 00 000000#	ARY::	POP	STACK,FLAS##+1	; SAVE ...
   106	400024'	262 01 0 00 000000*		POP	STACK,FLAS##	; PROTOTYPE	
   107
   108	400025'	265 00 0 00 000000*		PUSHR	PS		; FREE UP SOME REGISTERS
   109	400026'	000006	000004
   110
   111	400027'	261 01 0 00 400024*		PUSH	STACK,FLAS##	; RESTORE ...
   112	400030'	261 01 0 00 000000#		PUSH	STACK,FLAS##+1	; PROTOTYPE
   113
   114			000004			NS==P1			; NUMBER OF SUBSCRIPTS
   115			000005			SZ==P2			; SIZE OF ARRAY
   116			000006			LB==S1			; LOWER BOUND
   117
   118						 ; INITIALIZE PARAMETERS
   119
   120	400031'	400 04 0 00 000000 		CLEAR	NS,		; NO SUBSCRIPTS SO FAR
   121	400032'	201 05 0 00 000002 		MOVEI	SZ,2		; INITIAL SIZE
   122	400033'	201 06 0 00 000001 		MOVEI	LB,1		; TENTATIVE LOWER BOUND
   123	400034'	402 00 0 00 000000*		CLEARM	CURSOR##	; TEST FOR DONENESS
   124
   125						 ; TEST TUPE OF PROTOTYPE
   126
   127	400035'	200 00 0 01 777777 		MOVE	Z,-1(STACK)	; IS IT ...
   128	400036'	603 00 0 00 002000 		TLNE	Z,NUMDC	; NUIMERIC?
   129	400037'	254 00 0 00 400066'		JRST	ARY2		; YES - SKIP THE HJORSE PLAY
   130
   131						 ; INITIALIZE FOR SCANNING THE STRING
   132
   133	400040'	265 11 0 00 000000*		JSP	TLINK,CVTSTR##	; ENSURE A STRING
   134	400041'	003 01 0 00 000066 		ERROR.	1,54		; NO?
   135	400042'	265 11 0 00 000000*		JSP	TLINK,STINIT##	; PREPARE T;O STREAM
   136	400043'	001 15 0 00 000026 		ERROR	13,22		; NULL STRING
   137
   138						 ; SCAN FOR LOWER BOUND
   139
   140	400044'	201 06 0 00 000001 	ARY1:	MOVEI	LB,1		; DEFAULT LOWER BOUND
   141
   142	400045'	200 07 0 00 000000*		MOVE	S2,SYSCT##	; STREAM ...
   143	400046'	205 10 0 00 001020 		MOVX	S3,Y.CM!Y.COL	; FOR ...
   144	400047'	265 11 0 00 000000*		JSP	TLINK,STRM##	; COMMA OR COLON
   145	400050'	254 00 0 00 400066'		JRST	ARY2		; RUNNOUT!
   146
   147	400051'	370 00 0 00 400034*		SOS	CURSOR##	; INCREMENT PAST
   148	400052'	133 00 0 00 000000*		IBP	STPTR##		; BREAK CHAR.
   149
   150	400053'	302 16 0 00 000072 		CAIE	Q2,":"		; WAS IT COLON
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 5-1
SNOARY	MAC	11-Nov-66 00:09		ARY - SECONDARY ROUTINE TO ALLOCATE THE ARRAY

   151	400054'	254 00 0 00 400066'		JRST	ARY2		; NO - WAS UPPER BOUND
   152
   153	400055'	265 11 0 00 000000*		JSP	TLINK,CVTINT##	; GET INTEGER
   154	400056'	001 15 0 00 000030 		ERROR	13,24		; HE'S GIVING US JUNK
   155	400057'	200 06 0 01 000000 		MOVE	LB,0(STACK)	; LOAD THE LOWER BOUND
   156	400060'	274 01 0 00 000000*		SUB	STACK,XWD22##	;[263] POP THE STACK
   157
   158						 ; PROCESS THE UPER BOUND
   159
   160	400061'	205 10 0 00 001000 		MOVX	S3,Y.CM		; SCAN FOR ...
   161	400062'	265 11 0 00 400047*		JSP	TLINK,STRM	; COMMA
   162	400063'	254 00 0 00 400066'		JRST	ARY2		; RUNNOUT
   163
   164	400064'	370 00 0 00 400051*		SOS	CURSOR		; GET PAST ...
   165	400065'	133 00 0 00 400052*		IBP	STPTR		; THE COMMA
   166
   167						 ; HERE FROM NO COLON CASE & RUNNOUTS
   168
   169	400066'	265 11 0 00 400055*	ARY2:	JSP	TLINK,CVTINT	; GET THE INTEGER
   170	400067'	001 15 0 00 000030 		ERROR	13,24		; BAD VALUE
   171
   172						 ; COMPUTE DIMENSIONALITY
   173
   174	400070'	350 11 0 01 000000 		AOS	T1,0(STACK)	; LOAD THE UPPER BOUND + 1
   175	400071'	274 11 0 00 000006 		SUB	T1,LB		; DETERMINE EXTENT
   176	400072'	307 11 0 00 777777 		CAIG	T1,777777	; GREATER THAN 2**18
   177	400073'	307 11 0 00 000000 		CAIG	T1,0		; OR LESS THAN 1
   178	400074'	001 15 0 00 000033 		ERROR	13,27		; GIVE A MESSAGE
   179
   180	400075'	220 05 0 00 000011 		IMUL	SZ,T1		; ACCUMULATE TOTAL SIZE
   181	400076'	340 04 0 00 000000 		AOJ	NS,		; ADD 1 FOR SUBSCRIPT
   182
   183	400077'	504 11 0 00 000006 		HRL	T1,LB		; PACK IN THE LOWER BOUND
   184	400100'	202 11 0 01 000000 		MOVEM	T1,0(STACK)	; AND PUT IT ON THE STACK
   185
   186	400101'	332 00 0 00 400064*		SKIPE	CURSOR		; TEST FOR COMPLETION
   187	400102'	254 00 0 00 400044'		JRST	ARY1		; NOT DONE YET
   188						 ; PASS II TO ARY
   189						 ; THE DIMENSION INFORMATION HAS BEEN GATHWRED
   190
   191						 ; COMPUTE SIZE OF ARRAY AND ENSURE STORAE
   192
   193	400103'	200 00 0 00 000004 		MOVE	Z,NS		; TWICE THE ...
   194	400104'	242 00 0 00 000001 		LSH	Z,1		; NUMBER OF SUBSCRIPTS
   195	400105'	271 00 0 05 000005 		ADDI	Z,SUBFAC(SZ)	; PLUS THE REST
   196
   197	400106'	332 00 0 00 000000*		SKIPE	GRFLAG		; DOES HE WANT GR?
   198	400107'	265 15 0 00 000000*		JSP	QLINK,GCOLG##	; YES, BUT ALSO GIVE HIM
   199	400110'	265 15 0 00 000000*		JSP	QLINK,GCOLF##	; ENSURE THIS MUCH STORAGE
   200	400111'	202 00 0 00 000014 		MOVEM	Z,T4		; SAVE SIZE
   201
   202	400112'	332 00 0 00 400106*		SKIPE	GRFLAG		; INTO GROWING STORE?
   203	400113'	250 02 0 00 000000*		EXCH	SURF,GSURF##	; YES
   204
   205						 ; FILL IN THE TOP OF THE ARRAY
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 5-2
SNOARY	MAC	11-Nov-66 00:09		ARY - SECONDARY ROUTINE TO ALLOCATE THE ARRAY

   206
   207	400114'	505 00 0 00 000405 		HRLI	Z,ABLOK		; PREPARE
   208	400115'	202 00 0 02 000000 		MOVEM	Z,BTCODE&BLENG(SURF)	; FIRST WORD
   209	400116'	402 00 0 02 000001 		CLEARM	GCFLD(SURF)	; ZERO GC WORD
   210
   211	400117'	350 13 0 00 000000*		AOS	T3,ARYID##	; TRANSFER NEXT ID #
   212	400120'	504 13 0 00 000004 		HRL	T3,NS		; AND NUMBER OF SUBSCRIPTS
   213	400121'	206 13 0 02 000004 		MOVSM	T3,AHASH&NSUBS(SURF) ; INTO ABLOK
   214
   215	400122'	505 00 0 00 400027*		HRLI	Z,FLAS		; MOVE ...
   216	400123'	541 00 0 02 000002 		HRRI	Z,APROTO(SURF)	; PROTO;TYPE
   217	400124'	251 00 0 02 000003 		BLT	Z,APROTO+1(SURF)	; IN ABLOK
   218
   219	400125'	270 02 0 00 000004 		ADD	SURF,NS		; BUMP SURF BY TWICE THE ...
   220	400126'	270 02 0 00 000004 		ADD	SURF,NS		; SUBSCRIPT COUNT (-1)
   221	400127'	201 10 0 00 000002 		MOVEI	S3,2		; MULTIPLIER HELD HERE
   222
   223						 ; TOP OF LOOP FOR INSERTING BUNDS
   224
   225	400130'	275 02 0 00 000002 	ARY4:	SUBI	SURF,2		; READY FOR NEXT SUBSCRIPT
   226	400131'	200 15 0 01 000000 		MOVE	Q1,0(STACK)	; GET LB - DIM
   227	400132'	202 15 0 02 000006 		MOVEM	Q1,SUBLBD&SUBDIM(SURF) ; WORD
   228	400133'	274 01 0 00 400060*		SUB	STACK,XWD22##	;[263] AND POP STACK
   229
   230	400134'	202 10 0 02 000005 		MOVEM	S3,SUBFAC(SURF)	; INSERT THE FACTOR
   231	400135'	221 10 0 15 000000 		IMULI	S3,0(Q1)	; COMPUTE THE NEXT FACTOR
   232	400136'	367 04 0 00 400130'		SOJG	NS,ARY4		; LOOP ON SUBSCRIPT COUNT
   233
   234						 ; FALL THRU TO RETURN
   235
   236	400137'	265 00 0 00 000000*		POPR	PS		; RESTORE REGISTERS
   237	400140'	000005	000004
   238
   239	400141'	200 13 0 00 000002 		MOVE	T3,SURF		; CREATE
   240	400142'	505 13 0 00 004005 		HRLI	T3,ADT		; AN ...
   241	400143'	261 01 0 00 000013 		PUSH	STACK,T3	; ARRAY
   242	400144'	261 01 0 00 400643'		PUSH	STACK,[0]	; DESCRIPTOR
   243
   244	400145'	550 13 0 13 000000 		HRRZ	T3,BLENG(T3) 	; GET LENGTH OF ABLOK
   245	400146'	270 02 0 00 000013 		ADD	SURF,T3		; INCREMENT PAST BLOK
   246
   247	400147'	332 00 0 00 400112*		SKIPE	GRFLAG##	; WENT INTO GROWING?
   248	400150'	250 02 0 00 400113*		EXCH	SURF,GSURF	; YES, RESTORE
   249	400151'	254 00 0 06 000000 		JRST	0(SLINK)	; AND RETURN
   250

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 6
SNOARY	MAC	11-Nov-66 00:09		ITEM - THE ARRAY REFERENCE

   251						SUBTTL	ITEM - THE ARRAY REFERENCE
   252
   253
   254						 ; TEST FOR ARRAY
   255
   256	400152'	200 07 0 00 000000 	ITEM::	MOVE	S2,Z		; # OF ...
   257	400153'	275 07 0 00 000001 		SUBI	S2,1		; SUBSCRIPTS-1 ...
   258	400154'	242 07 0 00 000001 		LSH	S2,1		; DOUBLED TO S2
   259
   260	400155'	550 05 0 00 000001 		HRRZ	P2,STACK	; POINT TO TOP STACK ITEM
   261	400156'	274 05 0 00 000007 		SUB	P2,S2		; POINT TOFIRST ARG
   262
   263	400157'	554 06 0 05 777777 		HLRZ	S1,-1(P2)	; GET DT
   264	400160'	302 06 0 00 004005 		CAIE	S1,ADT		; ARRAY?
   265	400161'	254 00 0 00 000000*		JRST	TITEM##		; NO
   266
   267						 ; CHECK FOR CORRECT # OF SUBSCRIPTS
   268
   269	400162'	200 05 0 05 777777 		MOVE	P2,-1(P2)	; POINT TO ARRAY
   270	400163'	550 10 0 05 000004 		HRRZ	S3,NSUBS(P2)	; LOAD SUBSCRIPT COUNT
   271	400164'	302 00 0 10 000001 		CAIE	Z,1(S3)		; 1 LESS THAN ARG COUNT
   272	400165'	001 03 0 00 000003 		ERROR	3,3		; NO - BAD NUMBER
   273
   274	400166'	201 06 0 07 000005 		MOVEI	S1,SUBFAC(S2)	; JCOMPUTING OFFSET IN S1
   275
   276	400167'	270 05 0 00 000007 		ADD	P2,S2		; POINT JUST ABOVE DIM INFO
   277
   278						 ; LOP FOR FIGURING ADDRESS
   279
   280	400170'	265 11 0 00 400066*	ITEM1:	JSP	TLINK,CVTINT##	; ENSURE AN INTEGER
   281	400171'	001 03 0 00 000004 		ERROR	3,4		; MUST BE INTEGER
   282
   283	400172'	275 05 0 00 000002 		SUBI	P2,2		; POINT TO NEXT DIM. INFO
   284	400173'	200 11 0 05 000006 		MOVE	T1,SUBLBD&SUBDIM(P2) ; LOAD LBD & DIM
   285	400174'	574 12 0 00 000011 		HLRE	T2,T1		; (POSS. NEG.) LBD TO T2
   286	400175'	200 13 0 01 000000 		MOVE	T3,0(STACK)	; RETRIEVE SUBSCRIPT
   287	400176'	274 01 0 00 400133*		SUB	STACK,XWD22##	;[263] POP SUBSCRIPT
   288	400177'	274 13 0 00 000012 		SUB	T3,T2		; I - LBD
   289
   290	400200'	301 13 0 00 000000 		CAIL	T3,0		; CANNOT BE LESS THAN 0
   291	400201'	301 13 0 11 000000 		CAIL	T3,0(T1)	; NOR AS LARGE AS DIM.
   292	400202'	254 00 0 00 400212'		JRST	ITEMF		; GO FAIL
   293
   294	400203'	220 13 0 05 000005 		IMUL	T3,SUBFAC(P2)	; ASSERT MULTIPLIER
   295	400204'	270 06 0 00 000013 		ADD	S1,T3		; ADD THIS TO TOTAL
   296
   297	400205'	367 10 0 00 400170'		SOJG	S3,ITEM1	; LOOP ON # OF SUBSCRIPTS
   298
   299						 ; FINAL WRAP-UP
   300
   301	400206'	201 05 0 00 064000 		MOVEI	P2,VAR		; INSERT VAR
   302	400207'	506 05 0 01 777777 		HRLM	P2,-1(STACK)	; AS DESCR TYPE
   303
   304	400210'	202 06 0 01 000000 		MOVEM	S1,0(STACK)	; INSERT COMPUTED OFFSET
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 6-1
SNOARY	MAC	11-Nov-66 00:09		ITEM - THE ARRAY REFERENCE

   305
   306	400211'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
   307
   308						 ; HERE ON FAILURE
   309
   310	400212'	242 10 0 00 000001 	ITEMF:	LSH	S3,1		; POP ...
   311	400213'	504 10 0 00 000010 		HRL	S3,S3		; STACK ...
   312	400214'	274 01 0 00 000010 		SUB	STACK,S3	; BY # OF REMAINING ...
   313	400215'	254 00 0 04 000000 		JRST	0(PLINK)	; SUBSCRIPTS (PLUS ONE).
   314
   315

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 7
SNOARY	MAC	11-Nov-66 00:09		PROTOTYPE

   316						SUBTTL	PROTOTYPE
   317
   318	400216'	554 06 0 01 777777 	PROTO::	HLRZ	S1,-1(STACK)	; GET DATATYPE
   319	400217'	200 05 0 01 777777 		MOVE	P2,-1(STACK)	; LOAD ADDR OF OBJECT
   320	400220'	302 06 0 00 004005 		CAIE	S1,ADT		;  ARRAY?
   321	400221'	254 00 0 00 400226'		JRST	PROTO1		; NO
   322
   323	400222'	274 01 0 00 400176*		SUB	STACK,XWD22##	;[263] POP ARGUMENT
   324	400223'	261 01 0 05 000002 		PUSH	STACK,APROTO(P2)	; PUSH ...
   325	400224'	261 01 0 05 000003 		PUSH	STACK,APROTO+1(P2)	; PROTOTYUPE
   326	400225'	254 00 0 04 000001 		JRST	1(PLINK)		; AND RETURN
   327
   328	400226'	302 06 0 00 004010 	PROTO1:	CAIE	S1,TDT		; TABLE?
   329	400227'	003 01 0 00 000123 		ERROR.	1,83		; NO - ERROR
   330
   331	400230'	274 01 0 00 400222*		SUB	STACK,XWD22##	;[263] POP ITEM
   332	400231'	205 07 0 00 002001 		MOVSI	S2,IDT		; RETURN THE ...
   333	400232'	261 01 0 00 000007 		PUSH	STACK,S2	; NUMBER OF ...
   334	400233'	550 11 0 05 000002 		HRRZ	T1,TNBUCK(P2)	; PUSH NUMBER
   335	400234'	261 01 0 00 000011 		PUSH	STACK,T1	; OF BUCKETS.
   336	400235'	254 00 0 04 000001 		JRST	1(PLINK)	; AS PROTOTYPE
   337

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 8
SNOARY	MAC	11-Nov-66 00:09		COPY

   338						SUBTTL	COPY
   339
   340	400236'	201 11 0 04 000001 	COPY0::	MOVEI	TLINK,1(PLINK)
   341
   342						 ; TYPE T ROUTINE TO DO THE COPYING
   343						 ;	(NO ERROR EXIT)
   344
   345	400237'	554 13 0 01 777777 	COPY::	HLRZ	T3,-1(STACK)	; GET DATA TYPE
   346	400240'	306 13 0 00 004005 		CAIN	T3,ADT		; ARRAY?
   347	400241'	254 00 0 00 400247'		JRST	COPYA		; YES
   348
   349	400242'	302 13 0 00 004012 		CAIE	T3,DDT		; DEFINED DATA
   350	400243'	254 00 0 11 000000 		JRST	0(TLINK)	; NO - RETURN ELEMENT
   351
   352	400244'	350 14 0 00 000000*		AOS	T4,DFDID##	; NEXT ID NUMBER
   353	400245'	201 12 0 00 000002 		MOVEI	T2,DHASH	; POINT TO ID FIELD
   354	400246'	254 00 0 00 400251'		JRST	COPYC		; JOIN COMMON PROCESSING
   355
   356	400247'	350 14 0 00 400117*	COPYA:	AOS	T4,ARYID	; GET ID NUMBER FOR ARRAY
   357	400250'	201 12 0 00 000004 		MOVEI	T2,AHASH	; POINT TO HASH FIELD
   358
   359	400251'	550 13 0 01 777777 	COPYC:	HRRZ	T3,-1(STACK)	; LOAD ADDR OF OBJECT
   360	400252'	550 00 0 13 000000 		HRRZ	Z,BLENG(T3)	; LOAD LENGTH OF BLOK
   361	400253'	265 15 0 00 400110*		JSP	QLINK,GCOLF##	; ENSURE THIS MUCH SPACE
   362
   363	400254'	550 13 0 01 777777RZ	T3,-1(STACK)	; LOAD ADDR OF OBJECT AGAIN
   364	400255'	514 00 0 00 000013 		HRLZ	Z,T3		; 'FROM' ADDRESS
   365	400256'	540 00 0 00 000002 		HRR	Z,SURF		; 'TO' ADDRESS
   366	400257'	550 13 0 13 000000 		HRRZ	T3,BLENG(T3)	; GET THE LENGTH
   367	400260'	270 13 0 00 000002 		ADD	T3,SURF		; POINT BEYOND BLOK
   368	400261'	251 00 0 13 777777 		BLT	Z,-1(T3)	; DO THE MOVE
   369
   370	400262'	542 02 0 01 777777 		HRRM	SURF,-1(STACK)	; STORE NEW BASE ADDRESS
   371	400263'	402 00 0 02 000001 		CLEARM	GCFLD(SURF)	; CLEAR THIS IN CASE
   372	400264'	270 02 0 00 000012 		ADD	SURF,T2		; POINT TO ID FIELD
   373	400265'	506 14 0 02 000000 		HRLM	T4,0(SURF)	; INSERT ID #
   374
   375	400266'	550 02 0 00 000013 		HRRZ	SURF,T3		; UPDATE SURF
   376	400267'	254 00 0 11 000000 		JRST	0(TLINK)	; AND RETURN
   377
   378

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 9
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   379						SUBTTL	SORTING ROUTINES
   380
   381						 ;	SORT
   382						 ; PRIMARY ROUTINE TO SORT AN ARRAY OR TABLE
   383
   384	400270'	402 00 0 00 000000*	SORT::	CLEARM	IGNOP##		; FLAG ENTRY
   385	400271'	254 00 0 00 400273'		JRST	SORTC		; JOIN COMMON PROCESSING
   386
   387						 ; RSORT
   388
   389						 ; PRIMARY ROUTINE TO DO A REVERSE SORT
   390
   391	400272'	476 00 0 00 400270*	RSORT::	SETOM	IGNOP##
   392
   393	400273'	554 11 0 01 777775 	SORTC:	HLRZ	T1,-3(STACK)	; IS FIRT ARG ...
   394	400274'	302 11 0 00 004010 		CAIE	T1,TDT		; A TABLE?
   395	400275'	254 00 0 00 400310'		JRST	SORTA		; NO
   396
   397	400276'	265 11 0 00 400170*		JSP	TLINK,CVTINT	; GET THE INTEGER
   398	400277'	003 01 0 00 000135 		ERROR.	1,93		; CAN'T BE OTHERWISE
   399
   400	400300'	336 05 0 01 000000 		SKIPN	P2,0(STACK)	; LOAD INTEGER
   401	400301'	201 05 0 00 000001 		MOVEI	P2,1		; DEFAULT IS 1
   402
   403	400302'	274 01 0 00 400230*		SUB	STACK,XWD22##	;[263] POP STACK
   404	400303'	265 06 0 00 000000*		JSP	SLINK,CVTARY##	; CONVERT TO ARRAY
   405	400304'	254 00 0 00 000000*		JRST	FRET1##		; FAIL IF NULL TABLE
   406
   407	400305'	261 01 0 00 400644'		PUSH	STACK,[IDT,,0]	; REPLACE ORIGINAL ...
   408	400306'	261 01 0 00 000005 		PUSH	STACK,P2	; ARGUMENT
   409	400307'	254 00 0 00 400273'		JRST	SORTC		; AND GO BACK TO START
   410
   411	400310'	201 17 0 01 777775 	SORTA:	MOVEI	Q3,-3(STACK)	; POINT TO BADNESS
   412	400311'	302 11 0 00 004005 		CAIE	T1,ADT		; AN ARRAY?
   413	400312'	005 01 0 00 000134 		ERROR%	1,92		; NO - BAD TYPE
   414
   415	400313'	200 12 0 01 777775 		MOVE	T2,-3(STACK)	; DETERMINE
   416	400314'	550 05 0 12 000004 		HRRZ	P2,NSUBS(T2)	; NUMBER OF DIMENSIONS
   417	400315'	275 05 0 00 000002 		SUBI	P2,2		; MAKE NUMBER TESTABLE
   418	400316'	240 05 0 00 000001 		ASH	P2,1		; DOUBLE IT
   419	400317'	333 00 0 00 000005 		SKIPLE	P2		; IS NUMBER GT 2?
   420	400320'	001 15 0 00 000052 		ERROR	13,42		; YES, ERROR
   421
   422	400321'	403 06 0 00 000010 		SETZB	S1,S3		;[262] Set the offset to zero tentatively
   423									;[262]  and signal no field function
   424
   425	400322'	265 11 0 00 400276*		JSP	TLINK,CVTINT	; 2ND ARG INTEGER
   426	400323'	254 00 0 00 400340'		 JRST	SORTA1		; NO, TRY FIELD REF
   427
   428	400324'	274 01 0 00 400302*		SUB	STACK,XWD22##	;[263] POP STACK
   429	400325'	321 05 0 00 400354'		JUMPL	P2,SORTB	; JUMP IF DIMENSION IS 1
   430
   431	400326'	200 06 0 01 000002 		MOVE	S1,2(STACK)	; LOAD 2ND ARG
   432	400327'	200 12 0 01 777777 		MOVE	T2,-1(STACK)	; LOAD ARRAY ADDR
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 9-1
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   433	400330'	554 15 0 12 000010 		HLRZ	Q1,SUBLBD+2(T2)	; LOAD LOWER BOUND
   434	400331'	274 06 0 00 000015 		SUB	S1,Q1		; SUBTRACT FROM ARGUMENT
   435	400332'	550 16 0 12 000010 		HRRZ	Q2,SUBDIM+2(T2)	; LOAD RANGE SIZE
   436	400333'	315 06 0 00 000016 		CAMGE	S1,Q2		; SKIP IF TOO BIG
   437	400334'	335 00 0 00 000006 		SKIPGE	S1		; FALL THRU IF TOO SMALL
   438	400335'	001 15 0 00 000053 		ERROR	13,43		; AND GIVE THIS ERROR
   439
   440	400336'	240 06 0 00 000001 		ASH	S1,1		; DOUBLE IT TO GIVE OFFSET
   441	400337'	254 00 0 00 400354'		JRST	SORTB		; JOIN OTHER PROCESSING
   442
   443						 ; HERE IF 2ND ARG WAS NOT INTEGER
   444
   445	400340'	331 00 0 00 000005 	SORTA1:	SKIPL	P2		; IF THE # OF DIMS. IS 2, WE ...
   446	400341'	003 01 0 00 000143 		ERROR.	1,99		; CAN'T USE A FIELD NAME
   447	400342'	265 11 0 00 000000*		JSP	TLINK,CVTNAM##	; GET THE NAME
   448	400343'	003 01 0 00 000144 		ERROR.	1,100		; BAD DATATYPE
   449	400344'	332 00 0 01 000000 		SKIPE	0(STACK)	; NATURAL VARIABLE?
   450	400345'	001 15 0 00 000054 		ERROR	13,44		; NO - GIVE ERROR
   451
   452	400346'	550 10 0 01 777777 		HRRZ	S3,-1(STACK)	; GET VB ADDR
   453	400347'	274 01 0 00 400324*		SUB	STACK,XWD22##	;[263] AND POP STACK
   454	400350'	550 15 0 10 000003 		HRRZ	Q1,VFUNC(S3)	; CHECK TO MAKE ...
   455	400351'	554 16 0 15 000000 		HLRZ	Q2,BTCODE(Q1)	; SURE THAT THE NAME
   456	400352'	302 16 0 00 000422 		CAIE	Q2,FFBLOK	; IS THE NAME OF
   457	400353'	001 15 0 00 000054 		ERROR	13,44		; A FIELD FUNCTION
   458
   459						 ; RESUME COMMON PROCESSING
   460
   461	400354'	200 00 0 01 777777 	SORTB:	MOVE	Z,-1(STACK)	; SAVE ORIGINAL
   462	400355'	202 00 0 00 400007*		MOVEM	Z,FLAP		; ARRAY
   463	400356'	265 11 0 00 400237'		JSP	TLINK,COPY	; AND COPY IT
   464
   465	400357'	200 12 0 00 400355*		MOVE	T2,FLAP		; DETERMINE ...
   466	400360'	200 07 0 12 000005 		MOVE	S2,SUBFAC(T2)	; ADDRESSING WIDTH OF ...
   467	400361'	202 07 0 00 000000#		MOVEM	S2,IGNOP+1	; ARRAY AND SAVE IT.
   468
   469	400362'	550 00 0 12 000006 		HRRZ	Z,SUBDIM(T2)	; DETERMINE # OF DESCRIPTORS
   470	400363'	265 11 0 00 400470'		JSP	TLINK,IMSORT	; INITIALIZE THE SORT
   471
   472	400364'	550 13 0 00 400122*		HRRZ	T3,FLAS		; TABLE POINTER
   473	400365'	550 12 0 00 400357*		HRRZ	T2,FLAP		; ARRAY POINTER
   474	400366'	331 00 0 00 000005 		SKIPL	P2		; INCREMENT IF TWO ...
   475	400367'	271 12 0 00 000002 		ADDI	T2,2		; DIMENSIONS.
   476	400370'	200 11 0 00 000000*		MOVE	T1,IGNOS##	; # OF ITEMS
   477
   478						 ; LOOP TO FILL TABLE WITH OFFSET,POINTER PAIRS
   479
   480	400371'	201 16 0 12 000007 	SORTAL:	MOVEI	Q2,SUBDIM+1(T2)	; POINT TO DESCRIPTOR
   481	400372'	322 10 0 00 400412'		JUMPE	S3,SORTA3	; JUMP IF NO FIELD NAME
   482	400373'	265 15 0 00 000000*		JSP	QLINK,LOCVAL##	; ADJUST IF NECESSARY
   483
   484	400374'	554 17 0 16 000000 		HLRZ	Q3,0(Q2)	; GET DATATYPE
   485	400375'	302 17 0 00 004012 		CAIE	Q3,DDT		; DEFINED TYPE?
   486	400376'	254 00 0 00 400412'		JRST	SORTA3		; NO - USE THIS
   487
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 9-2
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   488	400377'	550 15 0 16 000000 		HRRZ	Q1,0(Q2)	; LOAD DBLOK ADDR
   489	400400'	550 17 0 15 000002 		HRRZ	Q3,ADFBLK(Q1)	; LOAD DFBLOK ADDR
   490	400401'	201 14 0 10 777776 		MOVEI	T4,VFUNC-FFLINK(S3)	; POINT NEAR VALUE
   491
   492						 ; LOOP TO FIND THE CORRECT OFFSET
   493
   494	400402'	550 14 0 14 000005 	SORTA2:	HRRZ	T4,FFLINK(T4)	; GET NEXT FFLBOK ADDR
   495	400403'	322 14 0 00 400412'		JUMPE	T4,SORTA3	; NONE LEFT
   496	400404'	550 00 0 14 000004 		HRRZ	Z,FFDFBL(T4)	; LOAD DFBLOK ADDR
   497	400405'	312 00 0 00 000017 		CAME	Z,Q3		; IS THIS THE ONE?
   498	400406'	254 00 0 00 400402'		JRST	SORTA2		; NO, TRY NEXT ONE
   499
   500	400407'	500 16 0 14 000004 		HLL	Q2,FFOFFS(T4)	; PICK UP OFFSET
   501	400410'	540 16 0 00 000015 		HRR	Q2,Q1		; COMPLETE THE ADDRESS
   502	400411'	334 00 0 00 000000 		SKIPA			; SKIP INTO THE PROCESSSING
   503
   504						 ; MERGE HERE FROM NORMAL CASE
   505
   506	400412'	504 16 0 00 000006 	SORTA3:	HRL	Q2,S1		; INSERT OFFSET
   507	400413'	202 16 0 13 000003 		MOVEM	Q2,TBUCK(T3)	; PLUG TABLE
   508	400414'	270 12 0 00 000000#		ADD	T2,IGNOP+1	; BUMP ARRAY
   509	400415'	271 13 0 00 000001 		ADDI	T3,1		; BUMP TABLE POINTER
   510	400416'	367 11 0 00 400371'		SOJG	T1,SORTAL	; LOOP ON BUCKET COUNT
   511
   512						 ; END OF LOOP TO FILL TABLE
   513
   514	400417'	200 00 0 00 400272*		MOVE	Z,IGNOP		; LOAD DIRECTION FLAG
   515	400420'	265 06 0 00 400513'		JSP	SLINK,MSORT	; DO THE SORT
   516
   517	400421'	550 10 0 00 400364*		HRRZ	S3,FLAS		; LOAD TABLE ADDRESS
   518	400422'	550 07 0 01 777777 		HRRZ	S2,-1(STACK)	; RELOAD NEW ARRAY
   519	400423'	271 07 0 05 000010 		ADDI	S2,SUBDIM+2(P2)	; POINT TO FIRST DESCR
   520	400424'	200 06 0 00 400370*		MOVE	S1,IGNOS##	; RELOAD COUNT
   521	400425'	400 13 0 00 000000 		CLEAR	T3,		; CLEAR DESCR 2ND WORD
   522
   523						 ; LOOP TO TRANSFER DESCR FROM OLD TO NEW ARRAY
   524
   525	400426'	550 11 0 10 000003 	SORTA5:	HRRZ	T1,TBUCK(S3)	; GET ADDR OF DESCR
   526	400427'	554 12 0 11 000000 		HLRZ	T2,0(T1)	; GET TYPE OF DESCR
   527	400430'	302 12 0 00 000412 		CAIE	T2,DBLOK	; IS IT REALLY A DBLOK
   528	400431'	254 00 0 00 400435'		JRST	SORTA6		; MUST BE A DESCRIPTOR
   529
   530	400432'	540 12 0 00 000011 		HRR	T2,T1		; MANUFACTURE A DESCR
   531	400433'	505 12 0 00 004012 		HRLI	T2,DDT		; FOR A DEFINED TYPE
   532	400434'	201 11 0 00 000012 		MOVEI	T1,T2		; AND POINT TO IT
   533
   534	400435'	200 14 0 00 000000#	SORTA6:	MOVE	T4,IGNOP+1	; LOAD WIDTH
   535	400436'	240 14 0 00 777777 		ASH	T4,-1		; IN DESCRIPTORS
   536	400437'	200 16 0 00 000011 	SORTB6:	MOVE	Q2,T1		; POINT ...
   537	400440'	265 15 0 00 400373*		JSP	QLINK,LOCVAL	; TO REAL DESCRIPTOR
   538	400441'	261 07 0 16 000000 		PUSH	S2,0(Q2)	; PUSH DESCRIPTOR ...
   539	400442'	261 07 0 16 000001 		PUSH	S2,1(Q2)	; INTO THE ARRAY
   540	400443'	271 11 0 00 000002 		ADDI	T1,2		; POINT TO NEXT DESCR
   541	400444'	367 14 0 00 400437'		SOJG	T4,SORTB6	; COUNT DOWN ON T4
   542
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 9-3
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   543	400445'	271 10 0 00 000001 		ADDI	S3,1		; INCR THE TABLE
   544	400446'	367 06 0 00 400426'		SOJG	S1,SORTA5	; COUNT DOWN
   545
   546						 ; NOTHING TO DO BUT RETURN
   547
   548	400447'	265 15 0 00 400504'		JSP	QLINK,NSRT1	; NULL OUT THE TABLE
   549	400450'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
   550

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 10
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   551						 ; TSORT - A ROUTINE TO SORT A TABLE
   552
   553						 ; CALLING SEQUENCE:
   554						 ;	PUSH TABLE DESCR
   555						 ;	LOAD Z WITH FLAG,,OFFSET
   556						 ;	JSP	P2,TSORT
   557						 ;	RETURN WITH IGNOS## EQUAL TO # OF NON-NULL ITEMS 
   558						 ;	AND WITH FLAS EQUAL TO A TABLE OF
   559						 ;	ELEMENTS IN SORTED ORDER.
   560
   561	400451'	334 06 0 00 400645'	TSORT::	SKIPA	S1,[TSEQ##]	; LOAD SEQ ROUTINE
   562
   563						 ; ENTRY POINT TO SORT A VARIABLE TABLE
   564
   565	400452'	201 06 0 00 000000*	VTSORT::MOVEI	S1,VTSEQ##	; POINT TO SEQ ROUTINE
   566
   567	400453'	202 00 0 00 000000#		MOVEM	 Z,IGNOS+1	; SAVE FLAG,,OFFSET
   568
   569	400454'	400 10 0 00 000000 		CLEAR	S3,		; COUNT ...
   570	400455'	265 11 0 06 000000 		JSP	TLINK,0(S1)	; # OF ITEMS ...
   571	400456'	340 10 0 00 000000 		AOJ	S3,		; IN THE TABLE
   572
   573	400457'	200 00 0 00 000010 		MOVE	Z,S3		; LOAD THE COUNT
   574	400460'	265 11 0 00 400470'		JSP	TLINK,IMSORT	; INITIALIZE THE SORT
   575
   576	400461'	504 10 0 00 000000#		HRL	S3,IGNOS+1	; OFFSET
   577	400462'	200 07 0 00 400421*		MOVE	S2,FLAS##	; ADDR OF NEW TBLOK
   578	400463'	265 11 0 06 000000 		JSP	TLINK,0(S1)	; SEQUENCE THRU TABLE AGAIN
   579						JSP	QLINK,[HRR	S3,T4	; LOAD TEBLOK ADDR
   580							MOVEM	S3,TBUCK(S2)	; STORE IT
   581	400464'	265 15 0 00 400646'			AOJA	S2,0(QLINK)]	; INCR S2 AND RETURN
   582
   583	400465'	574 00 0 00 000000#		HLRE	Z,IGNOS+1	; LOAD FLAG
   584	400466'	265 06 0 00 400513'		JSP	SLINK,MSORT	; DO THE SORT
   585
   586	400467'	254 00 0 05 000000 		JRST	0(P2)		; AND RETURN
   587

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 11
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   588						 ; IMSORT - INITIALIZE MSORT
   589						 ; CALLING SEQUENCE:
   590						 ;	LOAD Z WITH # OF ITEMS TO BE SORTED
   591						 ;	JSP	TLINK,IMSORT
   592						 ;	RETURN	 ; FLAS AND IGNOS ARE SETUP
   593
   594	400470'	202 00 0 00 400424*	IMSORT:	MOVEM	Z,IGNOS		; SAVE #
   595	400471'	202 11 0 00 000000#		MOVEM	TLINK,FLAS+1	; SAVE RETURN
   596	400472'	402 00 0 00 400462*		CLEARM	FLAS		; PROTECT GC
   597
   598	400473'	265 11 0 00 000000*		JSP	TLINK,TBL##	; ALLOCATE A TABLE
   599
   600	400474'	200 00 0 00 400470*		MOVE	Z,IGNOS		; ALLOCATE ...
   601	400475'	265 11 0 00 400473*		JSP	TLINK,TBL	; ANOTHER ONE
   602
   603	400476'	200 11 0 00 000000#		MOVE	TLINK,FLAS+1	; RESTORE LINK
   604
   605	400477'	262 01 0 00 000000#		POP	STACK,FLAS+3	; POP
   606	400500'	262 01 0 00 000000#		POP	STACK,FLAS+2	; THE
   607	400501'	262 01 0 00 000000#		POP	STACK,FLAS+1	; RES
   608	400502'	262 01 0 00 400472*		POP	STACK,FLAS	; ULTS
   609
   610	400503'	254 00 0 11 000000 		JRST	0(TLINK)
   611
   612
   613						 ; NSRT(I) - NULL OUT SORTING TABLE
   614
   615	400504'	334 16 0 00 400651'	NSRT1::	SKIPA	Q2,[FLAS]	; LOAD ADDR OF DESCR
   616	400505'	201 16 0 00 000000#	NSRT2::	MOVEI	Q2,FLAS+2	; DITTO
   617	400506'	200 17 0 16 000000 		MOVE	Q3,0(Q2)	; LOAD ADDR OF TBLOK
   618	400507'	201 00 0 00 000417 		MOVEI	Z,JKBLOK	; INDICATE ...
   619	400510'	506 00 0 17 000000 		HRLM	Z,0(Q3)		; THAT IT'S JUNK
   620	400511'	402 00 0 16 000000 		CLEARM	0(Q2)		; THEN DESTROY THE DESCRIPTOR
   621	400512'	254 00 0 15 000000 		JRST	0(QLINK)	; AND RETURN
   622

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 12
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   623						 ; MSORT - A MERGE SORTING ROUTINE
   624
   625						 ; CALLING SEQUENCE:
   626						 ;	SET FLAS WITH TABLE OF DESIGNATORS
   627						 ; (A DESIGNATOR CONSISTS OF AN ADDRESS (RIGHT SIDE)	
   628						 ; AND AN OFFSET (LEFT SIDE). THEIR SUM POINTS TO A
   629						 ; DESCRIPTOR.
   630						 ;	SET FLAS+2 WITH EQUI-SIZE TABLE
   631						 ;	LOAD Z WITH FLAG (0 MEANS ASCENDING)
   632						 ;	JSP	SLINK,MSORT
   633						 ;	RETURN WITH FLAS CONTAINING ORDERED DESIGNATORS.
   634
   635		000000000000#			GT12==FLAS##+1	; ADDRESS IF LOW STREAM GT UPPER STREAM
   636		000000000000#			GT21==FLAS##+3	; ADDRESS IF UPPER STREAM GT LOW STREAM
   637
   638	400513'	201 15 0 00 400615'	MSORT: MOVEI	Q1,TAKE.1	; DECISION ...
   639	400514'	201 16 0 00 400620'		MOVEI	Q2,TAKE.2	; ADDRESSES
   640	400515'	332 00 0 00 000000 		SKIPE	Z		; REVERSE ...
   641	400516'	250 15 0 00 000016 		EXCH	Q1,Q2		; IF FLAGGED
   642	400517'	202 15 0 00 000000#		MOVEM	Q1,GT21		; SAVE ...
   643	400520'	202 16 0 00 000000#		MOVEM	Q2,GT12		; ADDRESSES
   644
   645	400521'	265 00 0 00 400025*		PUSHR	PS		; WE NEED THESE
   646	400522'	000006	000004
   647
   648	400523'	201 04 0 00 000001 		MOVEI	P1,1		; GROUP SIZE
   649
   650						 ; OUTER LOOP - HERE AFTER GROUP SIZE HAS BEEN DOUBLED
   651
   652	400524'	311 04 0 00 400474*	MSORT1:	CAML	P1,IGNOS	; EQUAL TO SIZE OF LIST?
   653	400525'	254 00 0 00 400637'		JRST	MSORT9		; YES - ALL DONE
   654	400526'	212 04 0 00 000000#		MOVNM	P1,IGNOS+2	; SAVE NEGATIVE OF GROUP SIZE
   655
   656	400527'	550 05 0 00 400502*		HRRZ	P2,FLAS		; COMPUTE UPPER LIMIT
   657	400530'	270 05 0 00 400524*		ADD	P2,IGNOS	; OF SOURCE TABLE
   658	400531'	202 05 0 00 000000#		MOVEM	P2,IGNOS+1	; FOR MIDDLE LOOP
   659
   660	400532'	550 10 0 00 000000#		HRRZ	S3,FLAS+2	; SET UP S3 FOR...
   661	400533'	271 10 0 00 000002 		ADDI	S3,TBUCK-1	; PUSHING ONTO DESTINATION TABLE.
   662	400534'	550 05 0 00 400527*		HRRZ	P2,FLAS		; RELOAD SOURCE TABLE
   663
   664						 ; MIDDLE LOOP - MERGE UPPER AND LOWER LISTS EACH OF
   665						 ; LENGTH P1 (MAYBE).	S1 AND S2 REPRESENT THE 2 LISTS
   666						 ; AND ARE FORMATTED (-COUNT,,ADDR).
   667
   668	400535'	311 05 0 00 000000#	MSORT2:	CAML	P2,IGNOS+1	; ANY LEFT?
   669	400536'	254 00 0 00 400632'		JRST	MSORT8		; NO
   670
   671	400537'	540 06 0 00 000005 		HRR	S1,P2		; PREPARE LOWER ...
   672	400540'	504 06 0 00 000000#		HRL	S1,IGNOS+2	; LIST DESIGNATOR
   673	400541'	271 05 0 04 000000 		ADDI	P2,0(P1)	; BUMP SOURCE
   674	400542'	311 05 0 00 000000#		CAML	P2,IGNOS+1	; IS THERE ANY UPPER LIST?
   675	400543'	254 00 0 00 400626'		JRST	MSORT7		; NO
   676
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 12-1
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   677	400544'	200 07 0 00 000005 		MOVE	S2,P2		; PREPARE UPPER ...
   678	400545'	504 07 0 00 000000#		HRL	S2,IGNOS+2	; LIST DESIGNATOR
   679	400546'	271 05 0 04 000000 		ADDI	P2,0(P1)	; BUMP SOURCE
   680	400547'	317 05 0 00 000000#		CAMG	P2,IGNOS+1	; IS IT BEYOND
   681	400550'	254 00 0 00 400554'		JRST	COMP1		; NO - TO INNER LOOP
   682
   683	400551'	550 11 0 00 000007 		HRRZ	T1,S2		; COMPUTE NEGATIVE ...
   684	400552'	274 11 0 00 000000#		SUB	T1,IGNOS+1	; OF AMOUNT REMAINING ...
   685	400553'	504 07 0 00 000011 		HRL	S2,T1		; INTO UPPER DESIGNATOR
   686
   687						 ; INNER LOOP - HERE TO COMPARE TWO DESCRIPTORS
   688						 ; ONE DESIGNATED BY S1, THE OTHER BY S2
   689
   690	400554'	554 16 0 06 000003 	COMP1:	HLRZ	Q2,TBUCK(S1)	; SET T4 ...
   691	400555'	270 16 0 06 000003 		ADD Q2,TBUCK(S1)	; TO POINT TO ...
   692	400556'	265 15 0 00 400440*		JSP	QLINK,LOCVAL	; FIRST ...
   693	400557'	200 14 0 00 000016 		MOVE	T4,Q2		; DESCRIPTOR
   694
   695	400560'	554 16 0 07 000003 		HLRZ	Q2,TBUCK(S2)	; SET Q2 ...
   696	400561'	270 16 0 07 000003 		ADD	Q2,TBUCK(S2)	; TO POINT TO ...
   697	400562'	265 15 0 00 400556*		JSP	QLINK,LOCVAL	; SECOND DESCRIPTOR
   698
   699	400563'	554 11 0 14 000000 		HLRZ	T1,0(T4)	; LOAD FIRST DATATYPE
   700	400564'	306 11 0 00 004003 		CAIN	T1,SDT		 ; IS IT STRING?
   701	400565'	254 00 0 00 400576'		JRST	COMPS		; YES - LOOK AT NEXT
   702
   703	400566'	200 11 0 14 000000 	COMP2:	MOVE	T1,0(T4)	; LOAD FIRST WORD OF FIRST
   704	400567'	274 11 0 16 000000 		SUB	T1,0(Q2)	; SUBTRACT SECOND
   705	400570'	326 11 0 00 400573'		JUMPN	T1,COMP3	; JUMP IF DIFFERENT
   706
   707	400571'	200 11 0 14 000001 		MOVE	T1,1(T4)	; COMPARE ...
   708	400572'	274 11 0 16 000001 		SUB	T1,1(Q2)	; SECOND WORDS
   709	400573'	327 11 1 00 000000#	COMP3:	JUMPG	T1,@GT12	; FIRST GT 2ND
   710	400574'	321 11 1 00 000000#		JUMPL	T1,@GT21	; 2ND GT 1ST
   711	400575'	254 00 0 00 400615'		JRST	TAKE.1		; EQUAL - DONE'T INVERT
   712
   713						 ; FIRST IS STRING, 2ND IS IN DOUBT
   714
   715	400576'	554 12 0 16 000000 	COMPS:	HLRZ	T2,0(Q2)	; IS THE SECOND ...
   716	400577'	302 12 0 00 004003 		CAIE	T2,SDT		; A STRING?
   717	400600'	254 00 0 00 400566'		JRST	COMP2		; NO - COMPARE DESCRIPTORS
   718	400601'	550 12 0 16 000000 		HRRZ	T2,0(Q2)	; ALSO JUMP IF
   719	400602'	322 12 0 00 400566'		JUMPE	T2,COMP2	; ITS A NULL STRING
   720
   721	400603'	261 01 0 14 000000 		PUSH	STACK,0(T4)	; PUSH FIRST
   722	400604'	261 01 0 14 000001 		PUSH	STACK,1(T4)	; DESCRIPTOR
   723	400605'	261 01 0 16 000000 		PUSH	STACK,0(Q2)	; PUSH 2ND ...
   724	400606'	261 01 0 16 000001 		PUSH	STACK,1(Q2)	; DESCRIPTOR
   725
   726	400607'	265 11 0 00 000000*		JSP	TLINK,EQINIT##	; INITIALIZE
   727	400610'	001 17 0 00 000000 		ERROR	15		; CAN'T FAIL
   728
   729	400611'	265 11 0 00 000000*		JSP	TLINK,LEQUAL##	; COMPARE FIRST WITH 2ND
   730	400612'	254 00 1 00 000000#		JRST	@GT21		; FIRST WINS
   731	400613'	254 00 0 00 400615'		JRST	TAKE.1		; EQUALITY
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 12-2
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   732	400614'	254 00 1 00 000000#		JRST	@GT12		; SECOND WINS
   733
   734						 ; MERGING S1 & S2 INTO S3
   735
   736	400615'	261 10 0 06 000003 	TAKE.1:	PUSH	S3,TBUCK(S1)	; SELECT S1
   737	400616'	253 06 0 00 400554'		AOBJN	S1,COMP1	; BACK TO COMPARE ...
   738	400617'	254 00 0 00 400623'		JRST	FL.S2		; UNLESS RUNNOUT
   739
   740	400620'	261 10 0 07 000003 	TAKE.2:	PUSH	S3,TBUCK(S2)	; SELECT S2
   741	400621'	253 07 0 00 400554'		AOBJN	S2,COMP1	; LOOP BACK UNLESS RUNNOUT
   742
   743						 ; FALL THRU TO FLUSH OUT S1
   744
   745	400622'	200 07 0 00 000006 	FL.S1:	MOVE	S2,S1		; COPY INDEX ITEM
   746	400623'	261 10 0 07 000003 	FL.S2:	PUSH	S3,TBUCK(S2)	; TRANSFER TOKEN
   747	400624'	253 07 0 00 400623'		AOBJN	S2,FL.S2	; KEEP MOVING UNTIL S2 RUNS OUT
   748	400625'	254 00 0 00 400535'		JRST	MSORT2		; BACK TO MIDDLE LOOP
   749 
   750						 ; HERE IF ONLY LOWER LIST EXISTS
   751
   752	400626'	550 11 0 00 000006 	MSORT7:	HRRZ	T1,S1		; COMPUTE ...
   753	400627'	274 11 0 00 000000#		SUB	T1,IGNOS+1	; NEG. OF AMOUNT LEFT
   754	400630'	504 06 0 00 000011 		HRL	S1,T1		; INTO S1-LEFT
   755	400631'	254 00 0 00 400622'		JRST	FL.S1		; AND FLUSH OUT S1
   756
   757						 ; HERE ON COMPLETION OF A MERGE
   758
   759	400632'	200 00 0 00 400534*	MSORT8:	MOVE	Z,FLAS		; EXCHANGE ...
   760	400633'	250 00 0 00 000000#		EXCH	Z,FLAS+2	; SOURCE ARRAY ...
   761	400634'	202 00 0 00 400632*		MOVEM	Z,FLAS		; WITH DESTINATION
   762
   763	400635'	221 04 0 00 000002 		IMULI	P1,2		; SIZE OF SEGMENT IS DOUBLED
   764	400636'	254 00 0 00 400524'		JRST	MSORT1		; LOOP BACK
   765
   766						 ; HERE ON COMPLETION OF THE SORT
   767
   768	400637'	265 00 0 00 400137*	MSORT9:	POPR	PS		; RESTORE REGS
   769	400640'	000005	000004
   770	400641'	265 15 0 00 400505'		JSP	QLINK,NSRT2	; NULL OUT 2ND TABLE
   771	400642'	254 00 0 06 000000 		JRST	0(SLINK)	; AND RETURN
   772

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 13
SNOARY	MAC	11-Nov-66 00:09		SORTING ROUTINES

   773						END

NO ERRORS DETECTED

HI-SEG. BREAK IS 400652
PROGRAM BREAK IS 000000
CPU TIME USED 05:22.996

44P CORE USED
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page S-1
SNOARY	MAC	11-Nov-66 00:09		SYMBOL TABLE

ABLOK		000405	sin	FFBLOK		000422	sin	S1		000006		
ADFBLK		000002	sin	FFDFBL		000004	sin	S2		000007		
ADT		004005	sin	FFLINK		000005	sin	S3		000010		
AHASH		000004	sin	FFOFFS		000004	sin	SDT		004003	sin	
APROTO		000002	sin	FL.S1		400622'		SLINK		000006		
ARRAY		400000'	int	FL.S2		400623'		SORT		400270'	int	
ARY		400023'	int	FLAP		400365'	ext	SORTA		400310'		
ARY1		400044'		FLAS		400634'	ext	SORTA1		400340'		
ARY2		400066'		FRET1		400304'	ext	SORTA2		400402'		
ARY4		400130'		FTDEBU		000000	spd	SORTA3		400412'		
ARYASC	406453	100000	spd	GCFLD		000001	sin	SORTA5		400426'		
ARYEDT		000263	spd	GCOLF		400253'	ext	SORTA6		400435'		
ARYID		400247'	ext	GCOLG		400107'	ext	SORTAL		400371'		
ARYMIN		000000	spd	GRFLAG		400147'	ext	SORTB		400354'		
ARYSIX	416271	000000	spd	GSURF		400150'	ext	SORTB6		400437'		
ARYVER		000005	spd	GT12	000000000000#	pol	SORTC		400273'		
ARYWHO		000000	spd	GT21	000000000000#	pol	STACK		000001		
BLENG		000000	sin	IDT		002001	sin	STINIT		400042'	ext	
BTCODE		000000	sin	IGNOP		400417'	ext	STPTR		400065'	ext	
COMP1		400554'		IGNOS		400530'	ext	STRM		400062'	ext	
COMP2		400566'		IMSORT		400470'		SUBDIM		000006	sin	
COMP3		400573'		ITEM		400152'	int	SUBFAC		000005	sin	
COMPS		400576'		ITEM1		400170'		SUBLBD		000006	sin	
COPY		400237'	int	ITEMF		400212'		SURF		000002		
COPY0		400236'	int	JKBLOK		000417	sin	SYSCT		400045'	ext	
COPYA		400247'		LB		000006	spd	SZ		000005	spd	
COPYC		400251'		LEQUAL		400611'	ext	T1		000011		
CURSOR		400101'	ext	LOCVAL		400562'	ext	T2		000012		
CVTARY		400303'	ext	LREGP		000002	spd	T3		000013		
CVTINT		400322'	ext	LREGS		000003	spd	T4		000014		
CVTNAM		400342'	ext	MSORT		400513'		TAKE.1		400615'		
CVTSTR		400040'	ext	MSORT1		400524'		TAKE.2		400620'		
DBLOK		000412	sin	MSORT2		400535'		TBL		400475'	ext	
DDT		004012	spd	MSORT7		400626'		TBUCK		000003	sin	
DFDID		400244'	ext	MSORT8		400632'		TDT		004010	sin	
DHASH		000002	sin	MSORT9		400637'		TITEM		400161'	ext	
E1$100		000000	sin	NS		000004	spd	TLINK		000011		
E1$54		000000	sin	NSRT1		400504'	int	TNBUCK		000002	sin	
E1$83		000000	sin	NSRT2		400505'	int	TSEQ		000000	ext	
E1$92		000000	sin	NSUBS		000004	sin	TSORT		400451'	int	
E1$93		000000	sin	NUMDC		002000	sin	VAR		064000	sin	
E1$99		000000	sin	P1		000004		VFUNC		000003	sin	
E13$22		000000	sin	P2		000005		VTSEQ		400452'	ext	
E13$24		000000	sin	PLINK		000004		VTSORT		400452'	int	
E13$27		000000	sin	PPL		000005	spd	XWD22		400347'	ext	
E13$42		000000	sin	PPR		400637'	ext	Y.CM	001000	000000	spd	
E13$43		000000	sin	PROTO		400216'	int	Y.COL	000020	000000	spd	
E13$44		000000	sin	PROTO1		400226'		Z		000000		
E15$		000000	sin	PSHR		400521'	ext	%%JOBD	043100	000450	spd	
E3$3		000000	sin	Q1		000015		%%MACT	000200	000025	spd	
E3$4		000000	sin	Q2		000016		%%SNOP	000500	000305	spd	
EQINIT		400607'	ext	Q3		000017		%%UUOS	001400	000457	spd	
ERR	001000	000000		QLINK		000015		
ERR%	005000	000000		REGP		000004	spd	
ERR.	003000	000000		RSORT		400272'	int	

SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOARY	MAC	11-Nov-66 00:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

ABLOK	   207
ADFBLK	   489
ADT	   240	   264	   320	   346	   412
AHASH	   213	   357
APROTO	   216	   217	   324	   325
ARRAY	    72#
ARY	    75	   105#
ARY1	   140#	   187
ARY2	   129	   145	   151	   162	   169#
ARY4	   225#	   232
ARYASC	    31#
ARYEDT	    24#
ARYID	   211	   356
ARYMIN	    23#
ARYSIX	    30#
ARYVER	    22#
ARYWHO	    25#
BLENG	    89	   208	   244	   360	   366
BTCODE	   208	   455
COMP1	   681	   690#	   737	   741
COMP2	   703#	   717	   719
COMP3	   705	   709#
COMPS	   701	   715#
COPY	   345#	   463
COPY0	   340#
COPYA	   347	   356#
COPYC	   354	   359#
CURSOR	   123	   147	   164	   186
CVTARY	   404
CVTINT	   153	   169	   280	   397	   425
CVTNAM	   447
CVTSTR	   133
DBLOK	   527
DDT	   349	   485	   531
DFDID	   352
DHASH	   353
E1$100	   448#
E1$54	   134#
E1$83	   329#
E1$92	   413#
E1$93	   398#
E1$99	   446#
E13$22	   136#
E13$24	   154#	   170#
E13$27	   178#
E13$42	   420#
E13$43	   438#
E13$44	   450#	   457#
E15$	   727#
E3$3	   272#
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOARY	MAC	11-Nov-66 00:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

E3$4	   281#
EQINIT	   726
FFBLOK	   456
FFDFBL	   496
FFLINK	   490	   494
FFOFFS	   500
FL.S1	   745#	   755
FL.S2	   738	   746#	   747
FLAP	    72	    73	    82	    83	   462	   465	   473
FLAS	   105	   106	   111	   112	   215	   472	   517	   577	   595	   596	   603	   605	   606	   607
	   608	   615	   616	   635	   636	   656	   660	   662	   759	   760	   761
FRET1	   405
FTDEBU	   108	   236	   645	   768
GCFLD	   209	   371
GCOLF	   199	   361
GCOLG	   198
GRFLAG	   197	   202	   247
GSURF	   203	   248
GT12	   635#	   643	   709	   732
GT21	   636#	   642	   710	   730
IDT	   332	   407
IGNOP	   384	   391	   467	   508	   514	   534
IGNOS	   476	   520	   567	   576	   583	   594	   600	   652	   654	   657	   658	   668	   672	   674
	   678	   680	   684	   753
IMSORT	   470	   574	   594#
ITEM	   256#
ITEM1	   280#	   297
ITEMF	   292	   310#
JKBLOK	   618
LB	   116#	   122	   140	   155	   175	   183
LEQUAL	   729
LOCVAL	   482	   537	   692	   697
LREGP	   108	   236	   645	   768
LREGS	   108	   236	   645	   768
MSORT	   515	   584	   638#
MSORT1	   652#	   764
MSORT2	   668#	   748
MSORT7	   675	   752#
MSORT8	   669	   759#
MSORT9	   653	   768#
NS	   114#	   120	   181	   193	   212	   219	   220	   232
NSRT1	   548	   615#
NSRT2	   616#	   770
NSUBS	    78	   213	   270	   416
NUMDC	   128
P1	   114	   648	   652	   654	   673	   679	   763
P2	    77	    78	    80	    84	    85	    87	    93	   115	   260	   261	   263	   269	   270	   276
	   283	   284	   294	   301	   302	   319	   324	   325	   334	   400	   401	   408	   416	   417
	   418	   419	   429	   445	   474	   519	   586	   656	   657	   658	   662	   668	   671	   673
	   674	   677	   679	   680
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOARY	MAC	11-Nov-66 00:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

PLINK	    91	    95	   306	   313	   326	   336	   340	   549
PPL	   108#	   108	   109	   236#	   236	   237	   645#	   645	   646	   768#	   768	   769
PPR	   236	   768
PROTO	   318#
PROTO1	   321	   328#
PSHR	   108	   645
Q1	    87	    90	    93	    94	   226	   227	   231	   433	   434	   454	   455	   488	   489	   501
	   638	   641	   642
Q2	    88	    89	    90	    94	   150	   435	   436	   455	   456	   480	   484	   488	   500	   501
	   506	   507	   536	   538	   539	   615	   616	   617	   620	   639	   641	   643	   690	   691
	   693	   695	   696	   704	   708	   715	   718	   723	   724
Q3	   411	   484	   485	   489	   497	   617	   619
QLINK	   198	   199	   361	   482	   537	   548	   579	   581	   621	   692	   697	   770
REGP	   108	   109	   236	   237	   645	   646	   768	   769
RSORT	   391#
S1	    78	    79	    80	   116	   263	   264	   274	   295	   304	   318	   320	   328	   422	   431
	   434	   436	   437	   440	   506	   520	   544	   561	   565	   570	   578	   671	   672	   690
	   691	   736	   737	   745	   752	   754
S2	   142	   256	   257	   258	   261	   274	   276	   332	   333	   466	   467	   518	   519	   538
	   539	   577	   580	   581	   677	   678	   683	   685	   695	   696	   740	   741	   745	   746
	   747
S3	   143	   160	   221	   230	   231	   270	   271	   297	   310	   311	   312	   422	   452	   454
	   481	   490	   517	   525	   543	   569	   571	   573	   576	   579	   580	   660	   661	   736
	   740	   746
SDT	   700	   716
SLINK	    75	   249	   404	   515	   584	   771
SORT	   384#
SORTA	   395	   411#
SORTA1	   426	   445#
SORTA2	   494#	   498
SORTA3	   481	   486	   495	   506#
SORTA5	   525#	   544
SORTA6	   528	   534#
SORTAL	   480#	   510
SORTB	   429	   441	   461#
SORTB6	   536#	   541
SORTC	   385	   393#	   409
STACK	    72	    73	    77	    88	   105	   106	   111	   112	   127	   155	   156	   174	   184	   226
	   228	   241	   242	   260	   286	   287	   302	   304	   312	   318	   319	   323	   324	   325
	   331	   333	   335	   345	   359	   363	   370	   393	   400	   403	   407	   408	   411	   415
	   428	   431	   432	   449	   452	   453	   461	   518	   605	   606	   607	   608	   721	   722
	   723	   724
STINIT	   135
STPTR	   148	   165
STRM	   144	   161
SUBDIM	   227	   284	   435	   469	   480	   519
SUBFAC	    84	    85	    87	    93	   195	   230	   274	   294	   466
SUBLBD	   227	   284	   433
SURF	   203	   208	   209	   213	   216	   217	   219	   220	   225	   227	   230	   239	   245	   248
	   365	   367	   370	   371	   372	   373	   375
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOARY	MAC	11-Nov-66 00:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

SYSCT	   142
SZ	   115#	   121	   180	   195
T1	    82	    84	   174	   175	   176	   177	   180	   183	   184	   284	   285	   291	   334	   335
	   393	   394	   412	   476	   510	   525	   526	   530	   532	   536	   540	   683	   684	   685
	   699	   700	   703	   704	   705	   707	   708	   709	   710	   752	   753	   754
T2	    83	    85	   285	   288	   353	   357	   372	   415	   416	   432	   433	   435	   465	   466
	   469	   473	   475	   480	   508	   526	   527	   530	   531	   532	   715	   716	   718	   719
T3	   211	   212	   213	   239	   240	   241	   244	   245	   286	   288	   290	   291	   294	   295
	   345	   346	   349	   359	   360	   363	   364	   366	   367	   368	   375	   472	   507	   509
	   521
T4	   200	   352	   356	   373	   490	   494	   495	   496	   500	   534	   535	   541	   579	   693
	   699	   703	   707	   721	   722
TAKE.1	   638	   711	   731	   736#
TAKE.2	   639	   740#
TBL	   598	   601
TBUCK	   507	   525	   580	   661	   690	   691	   695	   696	   736	   740	   746
TDT	   328	   394
TITEM	   265
TLINK	   133	   135	   144	   153	   161	   169	   280	   340	   350	   376	   397	   425	   447	   463
	   470	   570	   574	   578	   595	   598	   601	   603	   610	   726	   729
TNBUCK	   334
TSEQ	   561
TSORT	   561#
VAR	   301
VFUNC	   454	   490
VTSEQ	   565
VTSORT	   565#
XWD22	   156	   228	   287	   323	   331	   403	   428	   453
Y.CM	   143	   160
Y.COL	   143
Z	   108	   127	   128	   193	   194	   195	   200	   207	   208	   215	   216	   217	   236	   256
	   271	   360	   364	   365	   368	   461	   462	   469	   496	   497	   514	   567	   573	   583
	   594	   600	   618	   619	   640	   645	   759	   760	   761	   768
SNOARY - Arrays  %5(263)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOARY	MAC	11-Nov-66 00:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Macro/Opdef cross reference

ARYPTX	    43
ARYTTL	    42
ERR	   136	   154	   170	   178	   272	   281	   420	   438	   450	   457	   727
ERR%	   413
ERR.	   134	   329	   398	   446	   448
ERROR	   136	   154	   170	   178	   272	   281	   420	   438	   450	   457	   727
ERROR%	   413
ERROR.	   134	   329	   398	   446	   448
MIDENT	   109	   237	   646	   769
MOVX	   143	   160
POPR	   236	   768
PPADDR	   108#	   109	   236#	   237	   645#	   646	   768#	   769
PPINIT	   108	   236	   645	   768
PPLENG	   108#	   109	   236#	   237	   645#	   646	   768#	   769
PUSHR	   108	   645
SHOW.	    37	    38	    39	    40
TITLE.	    29"j~~y