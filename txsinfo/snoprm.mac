	SUBTTL	Gimpel--Ma355/JDS/DRH/MP/RCM/VB		5-Aug-77

;COPYRIGHT (C) 1972,1973,1977 STEVENS INSTITUTE OF TECHNOLOGY,
; HOBOKEN, NEW JERSEY, 07030
; ALL RIGHTS RESERVED.

	; Directives

	SALL			;SUPPRESS MACRO EXPANSIONS
	.DIRECT	.XTABM		;EXCLUDE TABS FROM MACRO ARGUMENTS
	.DIRECT	.NOBINARY	;DIRECT NO BINARY OUTPUT

	; Universals

	SEARCH	MACTEN		;SEARCH STANDARD MACROS
	SEARCH	UUOSYM		;STANDARD TOPS-10 SYMBOL DEFS

	; Version Number

	SNOVER==5		;MAJOR VERSION NUMBER
	SNOMIN==0		;MINOR VERSION NUMBER
	SNOEDT==305		;EDIT LEVEL
	SNOWHO==0		;WHO LAST EDITED THIS FILE

	; Title

	TITLE.	SNO,SNOPRM,<SITBOL Parameter File>

	%%SNOPRM==<VRSN. (SNO)>	;PARAMETER FILE VERSION NUMBER

	VERSION==<VRSN. (SNO)>	;THE SYMBOL WITH THE VERSION NUMBER

	SNOUNV			; Title
	SNOPTX			; PASS2 assembly message

	; Low Segment Version Number

	LOWVER==6
	SUBTTL	Table of Contents


;		Table of Contents for SNOPRM - SITBOL Parameter File
;
;
;			   Section			      Page
;   1. Table of Contents. . . . . . . . . . . . . . . . . . .    2
;   2. Revision History . . . . . . . . . . . . . . . . . . .    3
;   3. Feature tests. . . . . . . . . . . . . . . . . . . . .    4
;   4. Macro Definitions
;        4.1.   XPS.. . . . . . . . . . . . . . . . . . . . .    5
;   5. DEFAULT DEFINITIONS. . . . . . . . . . . . . . . . . .    6
;   6. Registers. . . . . . . . . . . . . . . . . . . . . . .    7
;   7. DESCRIPTOR SYMBOLS . . . . . . . . . . . . . . . . . .    8
;   8. DATA STRUCTURE SYMBOLS . . . . . . . . . . . . . . . .    9
;   9. BLOK Definitions
;        9.1.   TYPES . . . . . . . . . . . . . . . . . . . .   10
;        9.2.   String Block (SBLOK). . . . . . . . . . . . .   11
;        9.3.   Pattern Block (PBLOK) . . . . . . . . . . . .   12
;        9.4.   Pattern Node Fields . . . . . . . . . . . . .   13
;        9.5.   Array Block (ABLOK) . . . . . . . . . . . . .   14
;        9.6.   Code Block (CBLOK). . . . . . . . . . . . . .   15
;        9.7.   Table Block (TBLOK) . . . . . . . . . . . . .   16
;        9.8.   Data Objects (DBLOK). . . . . . . . . . . . .   17
;        9.9.   Table Block (TBLOK) . . . . . . . . . . . . .   18
;        9.10.  Association Variable (VABLOK) . . . . . . . .   19
;        9.11.  Table Element Block (TEBLOK). . . . . . . . .   20
;        9.12.  Function Block (FBLOK). . . . . . . . . . . .   21
;        9.13.  Defined Datatype FBLOK (DFBLOK) . . . . . . .   22
;        9.14.  Field of a FBLOK (FFBLOK) . . . . . . . . . .   23
;        9.15.  External Function Block (EFBLOK). . . . . . .   24
;        9.16.  Traced Function Block (TFBLOK). . . . . . . .   25
;        9.17.  Trace Block (TRBLOK). . . . . . . . . . . . .   26
;        9.18.  I/O Block (IOBLOK). . . . . . . . . . . . . .   27
;        9.19.  Association Blocks (IABLOK & OABLOK). . . . .   28
;        9.20.  Buffer Block (BUBLOK) . . . . . . . . . . . .   29
;        9.21.  Stream Block (STBLOK) . . . . . . . . . . . .   30
;  10. CHARACTER TABLE POSITIONS. . . . . . . . . . . . . . .   31
;  11. SAVE AREA LENGTHS. . . . . . . . . . . . . . . . . . .   32
;  12. Definitions
;       12.1.   miscellany. . . . . . . . . . . . . . . . . .   33
;       12.2.   CVTFMT bit definitions. . . . . . . . . . . .   34
;  13. Macro Definitions
;       13.1.   MIDENT & FUNC . . . . . . . . . . . . . . . .   35
;       13.2.   ERROR, ERROR. & ERROR%. . . . . . . . . . . .   36
;       13.3.   PPINIT - PUSH/POP MACRO INITIALIZATION. . . .   37
;       13.4.   PUSHSA, POPSA - PUSH/POP MACROS . . . . . . .   38
;       13.5.   PUSHR, POPR - PUSHJ/POP MACROS. . . . . . . .   39
;       13.6.   $PUSH & $POP. . . . . . . . . . . . . . . . .   39
	SUBTTL	Revision History

COMMENT	\
Edits before this time were lost in the dark ages.

Start of version 5.
122	Clearup the files. (The way they look) and add revision history
	and tables of contents that are useful.
123	Define a symbol for each error so they can be found in a CREF
	listing.
124	ADD DEFINITIONS FOR EXTERNAL FUNCTIONS AS WELL AS THE CODE.
125	Remove patching space from SNOLEX.  LINK-10 will add its own
	for debugging.
126	Remove EXDATA macro.
127	(A) ADD PROCESSOR FEATURE TESTS.
	(B) MOVE DMOVE AND DMOVEM MACROS TO SNOPRM.
	(C) FIX DMOVE AND DMOVEM MACROS.
130	(a) Add another argument to the FUNC macro
	    to allow the creation of the dispatch table.
	(b) Remove unnessecary code from SNOEXT.
	(c) Delete the TMP file from disk when done with it.
	(d) Make the PPINIT macro external any symbols it
	    needs.
131	Start addition of process associated variables and the
	additional facilities for debugging.
132	(Removed)
133	Fix conversion of numbers with just '-' or '+'.
134	Add the entries in the dispatch table for the SNOEXT, SNOPAV
	and SNODEB modules.
135	Move definitions from SNOPAV to SNOPRM.
136	Add the reset of the dispatch table.
137	Fix problem with external functions, Y.PER should have
	been Y.PCNT.
140	FIX PROBLEMS WITH FILE SPECIFICATION SCANNER.
141	REMEMBER WERE WE CAME FROM (SAVE .SGNAM, .SGPPN, .SGDEV)
	ALSO FIXES PROBLEM OF ATTEMPTING TO RUN PROGRAM AFTER
	IT HAD EXITED.
142	Add a third argument to the EXIT function.
	It is the name to change to before EXITing.
		EXIT(-1,,'CONTEN')
	This will have SITBOL change to CONTEN and then exit, so
	that if you SAVE the program will it be called CONTEN not
	SITBOL.
143	Fix the deletation of nnnSNO.TMP correctly.
144	Start work on SFDs.
145	FIX THE GENERATATION OF THE VERSION NUMBER FOR
	THE TITLE.
146	Removed by edit 162.
147	Dont't do so many memory references.  Many of the TDN?
	reference X.????, but there is only one bit in the
	location.  Use TX?? macros and the Y.????
150	Prevent labels from becoming undefined.  The wrong Ac
	was used. 
151	The expression INTEGER(3.0) should fail, fix it.
152	Save more information during a trace.  Some strange person
	may do pattern matching during a trace (use defined).
153	Tracing of &STFCOUNT doesn't work, fix it.
154	Give the correct error number in SNOTBL (6.1 not 6.0)
155	Major work on SNOPRM, add diagrams, XPS. symbols, and
	other minor work.
156	Fix a bug in edit 124.
157	Fix a mistake in the dispatch table.
160	Fix a mistake in edit 143.
161	Removed by edit 162.
162	Remove edit 146.
163	The correct fix to edit 161 was in the pattern matching, fix
	it correctly.
164	Do not compile unevaluated expressions inline.
165	Start work on new error processing.
166	Finish work on SFDs.
167	Finish new error processing.
170	Add new keywords.  (&ERRNAME, &ERRMSG, &ERRLEVEL)
171	Fix problem with &ASSOCIATE.
172	Fix slight bug in command scanner.
173	Change strings in SNODAT to upper and lower case.
174	Fix problem in real to string conversion of zero.
175	Remove SETDDT UUO for EXIT2 in SNOFIO.   So that it is not a
	problem for VMDDT users.
176	Fix problem with SEGDEV & SEGNAM in SNOFIO.
177	Fix SNOFIO so ^Z's work correctly.
200	Touch up slight bug with SFD's.
201	Change CVTPTR so that it doesn't do unnessecary divides.
202	Add Append mode I/O to SNOFIO.  (i.e. INPUT(.fil,'fil.ext','A') )
203	Place all of the lowseg in SNODAT, in addition to some other
	further cleaning up.
204	Add &VERSION keyword to set version number of lowseg for EXIT,
	and to return the version of SITBOL's highseg.
205	Add a title to each page of the output listing.
206	Number every line of the output listing for easier editing and
	better looking outputs.
207	Clean up some of the code in SNOPL, SNOPG and SNOSMR, both
	for effeciency and readability.
210	Fix a fix to the file spec. scanner
211	GET RID OF EXTRA PAGE ON LISTING FILE.
212	CLEAN SOME OF THE CODE IN SNOLEX.
213	FIX A PROBLEM WITH OUTPUT ASSOCIATION'S FILE.
214	Removed by edit 220.
215	Add FTSINGLE feature test.
216	STBERR assembles in too much core, redo macro expansions.
217	Make Enn$mm symbols be global.
220	Remove edit 214
221	Make opsyn check for natural variables in the first two arguments.
222	LABEL("") and FUNCTION("") should fail, make them do that.
223	Don't REWIND a magtape at CLS.
224	Third argument to TRACE should not be converted to
	a string until later.
225	'JRST (STACK)' should be 'JRST (SLINK)'.
226	REPLACE with unequal second and third arguments should
	fail, not give an error.
227	TSEQ missuses floating addresses in registers, fix that.
230	Don't bomb if the TMP: file doesn't contain a line feed.
	RELEASE channel 17 all the time.
231	Table referencing is too slow, speed it up.
232	Make absolute errors work (not give ILL MEM REF).
233	Fix edit 226, so that REPLACE will work always.
234	Fix a problem with EVAL when it fails with &ERRTYPE set to > 1.
235	Use correct defaults for proj. and prog. no. if not specified in
	the angle brackets.
236	Revise the format of the listing's output. (again).
237	Add FTDEBUG to add some debugging features.
240	Redefine FMT.A so that it does not conflict with others.
241	GETSEG the correct segment back from STBERR.
242	Don't use PUSHR and POPR for just the P or the Q registers.
243	Give more errors for loading external functions.
244	Add FTOPS20 and FTOPS10 feature tests.
245	Add missing PORTAL in SNODFD
246	Move some definitions from different modules to SNOPRM.
	Definitions include FMT.xx and CSTACK.
247	Allow D to signify an exponent.
250	Fix mistakes in edit 243 dealing with external functions.
251	add another missing portal
252	FIX EVAL (AGAIN) SO THAT IT WORKS CORRECTLY WITH A FAILING STATEMENT.
253	ERROR SNOSSO SHOULD BE ABLE TO WORK (I.E. DON'T USE STACK WHEN YOU
	DON'T HAVE ANY.)
254	CHANGE OUTPUT LISTING PAGE NUMBERS (ALLOW A MINOR PAGE NO.)
255	Add a low segment version number, so that only low seg changes will
	create a conflict with EXITed files.
256	Fix some fixes to SNOEXT and start work on LNKENT & LNKHSG.
257	Allow a comment to follow after a semi-colon. (SNOLEX)
260	Fix a problem which occured where ENDFILE wouldn't close files.
261	Fix the position of the pointer for the compilation error
	message so that it points to the correct item on the listing.
262	Fix a HALT when sorting an ARRAY which contained defined data types
	and the array was not full.  Clear the offset into the items
	sooner, so not to confuse it with that of a key into the defined
	data type.
263	In SNOARY use XWD22 instead of [2,,2].
264	Add defaults for SITBOL's name, prefix and extension to SNOPRM.
265	Change error 15's to something other that just a HALT,
	so that it seems that a SITBOL system error occured.
266	Put a JSP in .JB41 instead of a JRST, so that
	we can see where the error occured.
267	Change the text of the errors in STBERR to ASCII from ASCIZ.
	(SITBOL stirngs are ASCII)
270	Do some misc. cleaning to SNOGC.
271	Fix a typo in STBERR's error test (?SNOPNP).
272	Fix a bad return after printing an error message with
	a &ERRPARM argument (SNOERR).
273	Don't do HALT  if a error occurs on DEVNAM, it is detected later
	(and should be).
274	In STRIO (SNOFIO) a reference to IOPPN should be to IOSFD (this PPN
	is kept in IOSFD).
275	Append to the listing file after requesting a listing of a file
	containing an EXIT().
276	Don't die if the nnnSNO.TMP file is protected when deleting it.
277	Fix a ridiculous problem where TIME(1) would return
	1 instead a the mstime.  A silly typo.
300	Allow EXIT(-1) to work on a KI-KL with EXO SITBOL.
301	In STRIO also check for identical PATH against other files.  This
	lack of a check caused two files with different PATH's but the same
	name to be treated as one.
302	Add a missing PORTAL where we return from an external function
	in SNOEXT.
303	Fix another bug in STRIO (SNOFIO), which causes the FILE primitive not
	to check file duplication correctly.
304	The error message for incompatible high segements should not rely
	upon using the low segment.  Have it simply do a OUTSTR.  Also
	delete the error messages which are no longer used in STBERR.
305	CORE UUO in SNOGC should use ADDI, not an IORI to calculate how much
	core is needed.
\
	SUBTTL	Feature tests

	;	The following are the feature tests for
	;	SNODDT, and to Process Associated Variables

	NDS.	FTDDT,	-1		;DEFAULT IS SNODDT
	NDS.	FTPAV,	-1		;DEFAULT IS PROCESS ASSICATED VARIABLES
	NDS.	FTSINGL, 0		;[215] Single segment SNOBOL
	NDS.	FTDEBUG, 0		;[237] Debugging features
	NDS.	FTOPS10, -1		;[244] TOPS-10 version
	NDS.	FTOPS20, 0		;[244] TOPS-20 version

IFN FTOPS20,<				;[244]
	FTSINGL==-1			;[244] Force single segment
	FTKL10==-1			;[244] Only runs on a KL-20

;** TEMP **

	PRINTX	? TOPS-20 version not supported
	PASS2
	END
>;[244] End of IFN FTOPS20

	;	THE FOLLOWING ARE THE PROCESSOR FEATURE TESTS.
	;	TO SPECIFY THE PROCESSOR JUST DEFINE EITHER FTKA, FTKI,
	;	OR FTKL TO BE MINUS ONE.
	;	IF NO FEATURE TEST IS SPECIFIED IT WILL ASSUME
	;	KA-10 AS THE PROCESSOR.

IFNDEF FTKA,<IFNDEF FTKI,<IFNDEF FTKL,<FTKA==-1>>>

	; NOW DEFINE THE UNDEFINED FEATURE TESTS TO BE ZERO.

	NDS.	FTKA,	0		;KA-10
	NDS.	FTKI,	0		;KI-10
	NDS.	FTKL,	0		;KL-10


	;CHECK THAT AT LEAST ONE FEATURE TEST IS ON

IFN FTKA+FTKI+FTKL+1,<
	PRINTX	?FEATURE TESTS MESSED UP (FTKA,FTKI,FTKL)
	PASS2
	END
>
	SUBTTL	Macro Definitions -- XPS.

; This macro will do the same thing that XP does, except it will
; show the value of the assignment by a SHOW.

	DEFINE	XPS.(A,B,C),<
	XP	(A,B,C)
	SHOW.	(A)
>
	SUBTTL	DEFAULT DEFINITIONS

;  THE FOLLWOING ARE DEFAULT DEFINITIONS FOR SITBOL

	NDS.	XGRID,	^D500	;[264] EXTRA GRID
IFN FTOPS10,<
	NDS.	D$EXT,	'SNO'	;[264] DEFAULT EXTENSION
	NDS.	D$NAME,	'SNOBOL'	;[264] DEFAULT NAME
	>
	NDS.	D$PRE,	'SNO'	;[264] DEFAULT PREFIX
	SUBTTL	Registers

	STACK=1			; SYSTEM STACK
	SURF=2			; SEPARATES SEA AND AIR
	HSR=3			; HISTORY STACK REG FOR PATT MATCH

	P1=4			; 1ST PRIMARY REG.
	P2=P1+1			; 2ND PRIMARY REG.
	PLINK=P1		; PRIMARY LINKING REGISTER
	CSTACK=P1		;[246] CODE STACK REGISTER

	S1=P2+1			; 1ST SECONDARY REGISTER
	S2=S1+1			; 2ND SECONDARY
	S3=S2+1			; 3RD SECONDARY
	SLINK=S1		; SECONDARY LINKING REGISTER

	T1=S3+1			; 1ST TERTIARY REGISTER
	T2=T1+1			; 2ND TERTIARY
	T3=T2+1			; 3RD TERTIARY
	T4=T3+1			; 4TH TERTIARY
	TLINK=T1		; TERTIARY LINKING REG.

	Q1=T4+1			; 1ST QUATERNARY REG.
	Q2=Q1+1			; 2ND QUATERNARY
	Q3=Q2+1			; 3RD QUATERNARY
	QLINK=Q1		; QUATERNARY LINKING REG.

	Z=0			; GENERAL USAGE REGISTER
	SUBTTL	DESCRIPTOR SYMBOLS


; 	1.2.1 FLAGS

XPS.	CDIFF,	400000	; CODE INTERPRETER FUNCTION 
XPS.	CDFF,	200000	; CODE FUNCTION
XPS.	PDC,	100000	; PROTECTED DATA CLASS
XPS.	INDC,	040000	; INDIRECT DATA CLASS
XPS.	NONDC,	020000	; NON-DATA CLASS
XPS.	TVDC,	010000	; TRAPPED VARIABLE DATA CLASS
XPS.	FLDC,	004000	; FLOATING DATA CLASS
XPS.	NUMDC,	002000	; NUMERIC DATA CLASS
XPS.	SJUNKF,	001000	; STACK JUNK FLAG
XPS.	BLOKF,	000400	; BLOK FLAG
XPS.	CDAF,	NONDC	; CODE ARGUMENT FLAG

; 	1.2.2 DATATYPES

XPS.	IDT,	1+NUMDC	; INTEGER
XPS.	RDT,	2+NUMDC	; REAL
XPS.	SDT,	3+FLDC	; STRING
XPS.	PDT,	4+FLDC	; PATTERN
XPS.	ADT,	5+FLDC	; ARRAY
XPS.	EDT,	6+FLDC	; EXPRESSION
XPS.	CDT,	7+FLDC	; CODE
XPS.	TDT,	10+FLDC	; TABLE
XPS.	NDT,	11+FLDC	; NAME
	DDT==	12+FLDC		; Defined datatype
XPS.	CSDT,	13+FLDC	; CHARACTER SET
XPS.	UTDT,	14+FLDC	; UTILITY
XPS.	IODT,	15+FLDC	; I/O

; 	1.2.3 OTHER VALUES FOR THE DT FIELD

XPS.	VAR,	NONDC+INDC+FLDC	; VARIABLE
XPS.	TVAR,	NONDC+TVDC+FLDC	; TRAPPED VARIABLE
XPS.	CONST,	NONDC+INDC+PDC	; CONSTANT
XPS.	JUNK,	NONDC+SJUNKF	; DENOTES JUNK ON STACK
XPS.	CDF,	CDFF		; CODE FUNCTION - # OF ARGS
XPS.	CDIF,	CDFF+CDIFF	; CODE INTERPRETER FUNCTION

; 	1.2.4 FIELDS

XPS.	DTFLGS,	777700	; MASK FOR DT FLAGS
XPS.	DTNUM,	000077	; MASK FOR DT NUMBER
XPS.	MAXDTN,	12	; MAXIMUM USER DATATYPE NUMBER
XPS.	CDARGS,	007777	; MASK FOR ARG COUNT OF CDF
XPS.	CDFLGS,	770000	; MASK FOR CODE FLAGS

	SUBTTL	DATA STRUCTURE SYMBOLS
;
;                                 Variable Block
;
;
;    =========================================================================
;    !                                 Value                                 !
;    -------------------------------------------------------------------------
;    !                        Garbage collector word                         !
;    -------------------------------------------------------------------------
;    !         Offset into CBLOK         !   Address of CBLOK (for label)    !
;    -------------------------------------------------------------------------
;    !         Datatype (if any)         !         Address of FBLOK          !
;    -------------------------------------------------------------------------
;    !                        Name of variable block                         !
;    -------------------------------------------------------------------------
;    !                            Name continued                             !
;    -------------------------------------------------------------------------
;    !               Flags               !       Address of next VBLOK       !
;    =========================================================================
;
;


XPS.	VALUE,	0	; VALUE OF VARIABLE
XPS.	VLABEL,	2	; RIGHT SIDE POINTS TO SOME CBLOK
			; LEFT SIDE IS OFFSET
XPS.	VFUNC,	3	; (RIGHT) ADDRESS OF FUNCTION BLOK
XPS.	VBDT,	3	; (LEFT) DATATYPE IF ANY
XPS.	VNAME,	4	; NAME OF VARIABLE BLOCK
XPS.	VFLAGS,	6	; FLAGS FOR VARIABLE BLOCK
XPS.	VKEY,	6	; NUMBER OF KEYWORD OR 0 IF NOT
XPS.	VLINK,	6	; (RIGHT) ADDRESS OF NEXT VARIABLE BLOCK
XPS.	VARSIZ,	7	; VARIABLE BLOCK SIZE

XPS.	OPFLAG,	400000	; VARIABLE IS AN OPERATOR
XPS.	LTFLAG,	200000	; LABEL IS BEING TRACED
XPS.	VCTFL,	100000	; CALL TRACE FLAG
XPS.	VRTFL,	040000	; RETURN TRACE FLAG
XPS.	KYMASK,	000077	; MASK FOR KEYWORD

;  IN ADDITION TO THESE FIELDS, FOR OPERATORS THE FOLLOWING FIELDS
;  HAVE SIGNIFICANCE.

XPS.	LPREC,	2	; (LEFT) LEFT PRECEDENCE
XPS.	RPREC,	3	; (LEFT) RIGHT PRECEDENCE 
XPS.	VUNARY,	2	; UNARY OPERATOR FBLOC ADDRESS
XPS.	VBINRY,	3	; BINARY OPERATOR FBLOK ADDRESS


	SUBTTL	BLOK Definitions -- TYPES
;
;                                  BLOCK HEADER
;
;    =========================================================================
;    !            BLOCK TYPE             !      BLOCK LENGTH            !
;    -------------------------------------------------------------------------
;    !                       GARBAGE COLLECTION FIELD                        !
;    =========================================================================
;

XPS.	BTCODE,	0	; (LEFT) CODE FOR BLOK TYPE
XPS.	BLENG,	0	; (RIGHT) BLOK LENGTH
XPS.	GCFLD,	1	; GARBAGE COLLECTION FIELD
XPS.	LHDR,	2	; LENGTH OF BLOK HEADER

;    BLOK TYPE CODES

XPS.	SBLOK,	3+BLOKF		; STRING BLOK
XPS.	PBLOK,	SBLOK+1		; PATTERN BLOK
XPS.	ABLOK,	PBLOK+1		; ARRAY BLOK
XPS.	EBLOK,	ABLOK+1		; EXPRESSION BLOK
XPS.	CBLOK,	EBLOK+1		; CODE BLOK
XPS.	TBLOK,	CBLOK+1		; TABLE BLOK
XPS.	DBLOK,	TBLOK+2		; DEFINED DATA BLOK

;   INTERNAL BLOK'S

XPS.	CTBLOK,	DBLOK+1		; CHARACTER TABLE
XPS.	UTBLOK,	CTBLOK+1	; UTILITY BLOK
XPS.	IOBLOK,	UTBLOK+1	; I/O BLOK
XPS.	TEBLOK,	IOBLOK+1	; TABLE ELEMENT BLOK
XPS.	JKBLOK,	TEBLOK+1	; JUNK BLOK

;   FUNCTON BLOK'S

XPS.	FBLOK,	JKBLOK+1	; DEFINED FUNCTION
XPS.	DFBLOK,	FBLOK+1		; DEFINED DATATYPE FBLOK
XPS.	FFBLOK,	DFBLOK+1	; FIELD OF DEF. DATA FBLOK
XPS.	EFBLOK,	FFBLOK+1	; EXTERNAL FUNCTION FBLOK
XPS.	TFBLOK,	EFBLOK+1	; TRACED FBLOK

;   TRAPPING BLOK'S

XPS.	TRBLOK,	TFBLOK+1	; TRACE BLOK
XPS.	IABLOK,	TRBLOK+1	; INPUT-ASSOCIATED VARIBLE
XPS.	OABLOK,	IABLOK+1	; OUTPUT-ASSOCIATED VARIBLE

;    OTHER MISC. BLOKS

XPS.	BUBLOK,	OABLOK+1	; BUFFER BLOK
XPS.	OBBLOK,	BUBLOK+1	; OLD BUFFER BLOK
XPS.	STBLOK,	OBBLOK+1	; Stream Block
	SUBTTL	BLOK Definitions -- String Block (SBLOK)
;
;                              STRING BLOCK (SBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             BLOCK HEADER                              /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                         CHARACTER INFORMATION                         /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	SCHARS,	LHDR	; START OF CHARACTER INFORMATION
	SUBTTL	BLOK Definitions -- Pattern Block (PBLOK)
;
;                              PATTERN HEADER BLOCK
;
;
;    =========================================================================
;    /                                                                       /
;    /                             HEADER BLOCK                              /
;    /                                                                       /
;    =========================================================================
;    !                        RAPID SCAN INFORMATION                         !
;    -------------------------------------------------------------------------
;    !                        RAPID SCAN INFORMATION                         !
;    -------------------------------------------------------------------------
;    !                    NUMBER OF CHARS FOR ENTIRE PAT                     !
;    =========================================================================
;    /                                                                       /
;    /                           PATTERN NODE BLOK                           /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	PSTART,	LHDR	; USED FOR RAPID SCAN AT MATCH START
XPS.	PMIN,	LHDR+2	; MINIMUM NUMBER OF CHARACTERS FOR ENTIRE PATT.
XPS.	LPHDR,	LHDR+3	; LENGTH OF PATTERN HEADER
	SUBTTL	BLOK Definitions -- Pattern Node Fields
;
;                              PATTERN NODE FIELDS
;
;
;    =========================================================================
;    !          RESIDUAL FIELD           !     PRIMITIVE ROUTINE ADDRESS     !
;    -------------------------------------------------------------------------
;    !    ALTERNATE (REL. TO PBLOK)      !     SUBSEQUENT (REL TO PBLOK)     !
;    -------------------------------------------------------------------------
;    !                              ARGUMENT #1                              !
;    -------------------------------------------------------------------------
;    !                              ARGUEMENT #2                              !
;    =========================================================================
;
;

XPS.	PPROG,	0	; (RIGHT) ADDRESS OF PROGRAM TO HANDLE PRIMITIVE
XPS.	PRESID,	0	; (LEFT) RESIDUAL FIELD 
XPS.	PALT,	1	; (LEFT) ALTERNATE (REL. TO PBLOK HEAD)
XPS.	PSUBS,	1	; (RIGHT) SUBSEQUENT (REL. TO PBLOK HEAD)
XPS.	PARG,	2	; ARGUMENT (TWO WORD DESCRIPTOR)
XPS.	PNDSZ,	4	; PATTERN NODE SIZE
	SUBTTL	BLOK Definitions -- Array Block (ABLOK)
;
;                               ARRAY BLOK (ABLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                              BLOK HEADER                              /
;    /                                                                       /
;    =========================================================================
;    !                            ARRAY PROTOTYPE                            !
;    -------------------------------------------------------------------------
;    !                            ARRAY PROTOTYPE                            !
;    -------------------------------------------------------------------------
;    !       NUMBER OF SUBSCRIPTS        !            HASH NUMBER            !
;    -------------------------------------------------------------------------
;    !                         MULTIPLICATION FACTOR                         !
;    -------------------------------------------------------------------------
;    !       SUBSCRIPT LOWER BOUND       !        SUBSCRIPT DIMENSION        !
;    =========================================================================
;
;

XPS.	APROTO,	LHDR		; ARRAY PROTOTYPE
XPS.	NSUBS,	APROTO+2	; NUMBER OF SUBSCRIPTS
XPS.	AHASH,	NSUBS		; HASH NUMBER
XPS.	SUBFAC,	NSUBS+1		; MULTIPLICATION FACTOR
XPS.	SUBLBD,	SUBFAC+1	; SUBSCRIPT LOWER BOUND
XPS.	SUBDIM,	SUBLBD		; SUBSCRIPT DIMENSION

	SUBTTL	BLOK Definitions -- Code Block (CBLOK)
;
;                               CODE BLOK (CBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             BLOCK HEADER                              /
;    /                                                                       /
;    =========================================================================
;    !                            LAST CODE BLOK                             !
;    -------------------------------------------------------------------------
;    !                            NEXT CODE BLOCK                            !
;    =========================================================================
;    /                                                                       /
;    /                            GENERATED CODE                             /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	LCLINK,	LHDR		; LAST CODE BLOK
XPS.	NCLINK,	LHDR+1		; NEXT CODE BLOK
XPS.	CCODE,	NCLINK+1	; BEGINNING OF COMPILED CODE


;
;                             GENERATED CODE OFFSETS
;
;
;    =========================================================================
;    !      INTERPRETER FUNC (CDIF)      !  ADDR IN THE INTERPRETER (BGST)   !
;    -------------------------------------------------------------------------
;    !         STATEMENT NUMBER          !      OFFSET TO FAILURE GOTO       !
;    -------------------------------------------------------------------------
;    !          LAST STATEMENT           !          NEXT STATEMENT           !
;    -------------------------------------------------------------------------
;    !                            OFFSET OF RULE                             !
;    =========================================================================
;
;

XPS.	CHEAD,	0		; LEFT HALF DENOTES INTERPRETER
			; FUNCTION (CDIF) AND THE RIGHT HALF 
			; DENOTES AN ADDRESS IN THE INT. (BGST)
XPS.	CSTNO,	1	; (LEFT) STATEMENT NUMBER FOR STATEMENT
XPS.	CFGOTO,	1	; (RIGHT) OFFSET (FROM CBLOK HEAD) TO 
			; LOCATION WE CAN GO TO UPON FAILURE.
XPS.	CLAST,	2		; OFFSET OF LAST PREVIOUS STATEMENT
XPS.	CNEXT,	2		; OFFSET OF NEXT STATEMENT
XPS.	CRULE,	3		; OFFSET OF RULE FROM ST HEAD
	SUBTTL	BLOK Definitions -- Table Block (TBLOK)
;
;                              TABLE BLOCK (TBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             BLOCK HEADER                              /
;    /                                                                       /
;    =========================================================================
;    !            HASH NUMBER            !           # OF BUCKETS            !
;    =========================================================================
;    /                                                                       /
;    /                         BUCKETS (HASH TABLE)                          /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	THASH,	LHDR		; HASHNO FOR TABLES
XPS.	TNBUCK,	LHDR		; # OF BUCKETS
XPS.	TBUCK,	LHDR+1		; START OF BUCKETS
	SUBTTL	BLOK Definitions -- Data Objects (DBLOK)
;
;                          DEFINED DATA OBJECTS (DBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             BLOCK HEADER                              /
;    /                                                                       /
;    =========================================================================
;    !            HASH NUMBER            !         ADDRESS OF DFBLOK         !
;    =========================================================================
;    /                                                                       /
;    /                                FIELDS                                 /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	ADFBLK,	LHDR	; (RIGHT) ADDRESS OF DFBLOK (INDICATES THE 
			; DATATYPE)
XPS.	DHASH,	LHDR	; (LEFT) A UNIQUE NUMBER ASSIGNED FOR HASHING
			; PURPOSES
XPS.	DFLDS,	LHDR+1	; START OF FIELDS. ONE DESRIPTOR PER FIELD.
	SUBTTL	BLOK Definitions -- Table Block (TBLOK)
;
;                         CHARACTER TABLE BLOCK (CTBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             BLOCK HEADER                              /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                            128 WORD TABLE                             /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	CTBITS,	LHDR	; OFFSET FOR 128-WORD TABLE
	SUBTTL	BLOK Definitions -- Association Variable (VABLOK)

;
;                       Associated Variable block (VABLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header block                              /
;    /                                                                       /
;    =========================================================================
;    !                               Old Value                               !
;    -------------------------------------------------------------------------
;    !                         Old Value (Continued)                         !
;    -------------------------------------------------------------------------
;    !                             Variable Name                             !
;    -------------------------------------------------------------------------
;    !                           Name (Continued)                            !
;    -------------------------------------------------------------------------
;    !                Defined Datatype describing the process                !
;    -------------------------------------------------------------------------
;    !                     Defined Datatype (continued)                      !
;    -------------------------------------------------------------------------
;    !                  Flag (to prevent infinite trapping)                  !
;    -------------------------------------------------------------------------
;    !                           (Flag (Continued)                           !
;    =========================================================================
;
;

XPS.	VABLOK,	UTBLOK		; same format as a utility block
XPS.	VAVAL,	LHDR		; the old value
XPS.	VANAME,	VAVAL+2	; the name of the associated variable
XPS.	VAPROC,	VANAME+2	; the defined datatype describing the process
XPS.	VAFLG,	VAPROC+2	; flag to prevent infinite trapping
XPS.	VALEN,	VAFLG+2	; length of the VABLOK

; The fields of the programmer-defined process datatype
; defined by DATA('PROCESS(TYPE,FUNCTION,LEVEL,ACTIVE)')

XPS.	PRTYP,	DFLDS		; type of process (FETCH or STORE)
XPS.	PRFCT,	PRTYP+2		; name of associated function
XPS.	PRACT,	PRFCT+2		; active flag
XPS.	PRLVL,	PRACT+2		; association level
XPS.	PRLEN,	PRACT+2		; minimum length of datatype

; Default levels for currently existing trapping blocks.

XPS.	TRLVL,	^D100		; value tracing
XPS.	IALVL,	^D200		; input association
XPS.	OALVL,	^D300		; output association
	SUBTTL	BLOK Definitions -- Table Element Block (TEBLOK)

;
;                          Table Element Block (TEBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    !                  Descriptor of the reference element                  !
;    -------------------------------------------------------------------------
;    !                        Descriptor (Continued)                         !
;    -------------------------------------------------------------------------
;    !                      Value of the Table Element                       !
;    -------------------------------------------------------------------------
;    !                      Value of the Table Element                       !
;    -------------------------------------------------------------------------
;    !             0 (Zero)              !    Address of the next TEBLOK     !
;    =========================================================================
;
;

XPS.	TEREF,	LHDR	; FIELD TO PUT DESCRIPTOR OF THE REFERENCE 
			; ELEMENT (I.E. THE 'ABC' OF T<'ABC'>)
XPS.	TEVAL,	TEREF+2		; VALUE OF THE TABLE ELEMENT
XPS.	TELINK,	TEVAL+2		; NEXT TEBLOK ON CHAIN
XPS.	LTEBLK,	TELINK+1	; LENGTH OF TEBLOK


	SUBTTL	BLOK Definitions -- Function Block (FBLOK)

;
;                             Function Block (FBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    !               Flags               !        Number of Arguments        !
;    -------------------------------------------------------------------------
;    !                        Instruction to execute                         !
;    -------------------------------------------------------------------------
;    !          Number of Temps          !    Natural Variable (Function)    !
;    -------------------------------------------------------------------------
;    !             0 (Zero)              !     Natural Variable (Label)      !
;    =========================================================================
;    /                                                                       /
;    /                   Formal Paramenter and Temp names                    /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	FFLAGS,	LHDR		; (LEFT) FUNCTION FLAGS (SEE BELOW)
XPS.	FNARGS,	LHDR		; (RIGHT) NUMBER OF ARGUMENTS
XPS.	FCODE,	LHDR+1		; INSTRUCTION TO BE EXECUTED

XPS.	FNTMPS,	FCODE+1		; (LEFT) NUMBER OF TEMPORARIES
XPS.	FNAME,	FCODE+1		; (RIGHT) ADDRESS OF NATURAL VARIABLE
				; INDICATING NAME OF FUNCTION
XPS.	FLABEL,	FNAME+1		; (RIGHT) ADDRESS OF NATURAL VARIABLE
				; INDICATING NAME OF LABEL.
XPS.	FARGS,	FLABEL+1		; BEGINNING OF LIST OF FORMAL 
				; PARAMETER AND TEMPORARY NAMES
;   (FLAGS)

XPS.	FEAFL,	1		; EVALUATE ARGUMENTS FLAG
XPS.	FSAFL,	2	; SUPPLEMENT (OR SUPPLY) ARGUMENTS FLAG
XPS.	FAAFL,	4	; ANY (NUMBER OF) ARGUMENTS FLAG.
XPS.	FCTFL,	10	; FUNCTION IS CALL TRACED
XPS.	FRTFL,	20	; FUNCTION IS RETURN TRACED

	SUBTTL	BLOK Definitions -- Defined Datatype FBLOK (DFBLOK)
;
;                        DFBLOK - Defined Datatype FBLOK
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    !              FFLAGS               !              FNARGS               !
;    -------------------------------------------------------------------------
;    !                                 FCODE                                 !
;    -------------------------------------------------------------------------
;    !             0 (zero)              !              DFNAME               !
;    -------------------------------------------------------------------------
;    !                     DFFLDS (Address of 1st field)                     !
;    =========================================================================
;    /                                                                       /
;    /                        (Address of last field)                        /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	DFNAME,	4	; NAME OF DATATYPE (ADDRESS OF VAR. BLOCK)
XPS.	DFFLDS,	5	; START OF FIELD NAMES
			; THESE ARE VARIABLE BLOCK ADDRESSES

	SUBTTL	BLOK Definitions -- Field of a FBLOK (FFBLOK)
;
;                     FFBLOK - An FBLOK for a Field Function
;
;
;    =========================================================================
;    !              FFBLOK               !                 6                 !
;    -------------------------------------------------------------------------
;    !                               0 (zero)                                !
;    -------------------------------------------------------------------------
;    !              FFLAGS               !              FNARGS               !
;    -------------------------------------------------------------------------
;    !                                 FCODE                                 !
;    -------------------------------------------------------------------------
;    !              FFOFFS               !              FFDFBL               !
;    -------------------------------------------------------------------------
;    !             0 (zero)              !              FFLINK               !
;    =========================================================================
;
;

XPS.	FFOFFS,	FCODE+1		; (LEFT) OFFSET WITHIN DATA OBJECT ASSOC
				; IATED WITH THIS FIELD
XPS.	FFDFBL,	FCODE+1		; (RIGHT) ASSOCIATED DFBLOK
XPS.	FFLINK,	FCODE+2		; (RIGHT) ADDRESS OF NEXT FFBLOK
				; OR 0 IF NONE.


	SUBTTL	BLOK Definitions -- External Function Block (EFBLOK)

;	THE EFBLOK
;
;                 EFBLOK - Layout of the External Function Block
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    !              FFLAGS               !              FNARGS               !
;    -------------------------------------------------------------------------
;    !                         FCODE (JSP P2,EFCALL)                         !
;    -------------------------------------------------------------------------
;    !                 0                 !               x.RET               !
;    -------------------------------------------------------------------------
;    !                 0                 !              EFFUNC               !
;    -------------------------------------------------------------------------
;    !                -n                 !                 0                 !
;    -------------------------------------------------------------------------
;    !              arg1 DT              !           arg1 ADDRESS            !
;    -------------------------------------------------------------------------
;    !              arg2 DT              !           arg2 ADDRESS            !
;    -------------------------------------------------------------------------
;    !                                (cont)                                 !
;    -------------------------------------------------------------------------
;    !                       Descriptor pair for arg1                        !
;    =========================================================================
;    /                                                                       /
;    /                   Descriptor pair for arg1 ... argn                   /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	EFRET,	FCODE+1		;POINTS TO CODE FOR RETURNING FROM
				; EXTERNAL FUNCTIONS
XPS.	EFFUNC,	EFRET+1		;POINTS TO ENTRY POINT OF EXTERNAL FUNCTION
XPS.	EFARGS,	EFFUNC+2	;START OF ARGUMENT LIST
XPS.	LFFBL,	FFLINK+1		; LENGTH OF FFBLOK

	SUBTTL	BLOK Definitions -- Traced Function Block (TFBLOK)

;   THE TFBLOK
;
;                             TFBLOK - Traced FBLOK
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    !              FFLAGS               !              FNARGS               !
;    -------------------------------------------------------------------------
;    !                                 FCODE                                 !
;    -------------------------------------------------------------------------
;    !                 0                 !               TFOLD               !
;    -------------------------------------------------------------------------
;    !                 0                 !               TFCT                !
;    -------------------------------------------------------------------------
;    !                 0                 !               TFRT                !
;    -------------------------------------------------------------------------
;    !                 0                 !               TFVB                !
;    =========================================================================
;
;

XPS. 	TFOLD,	4
XPS.	TFRT,	5		; RETURN TRACE FBLOK
XPS.	TFCT,	6		; CALL TRACE FBLOK
XPS.	TFVB,	7		; ADDR OF VB.
	SUBTTL	BLOK Definitions -- Trace Block (TRBLOK)

;
;                    TRBLOCK - Trace Block for Value Tracing
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                                 TRVAL                                 /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                                TRNAME                                 /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                                 TRTAG                                 /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                                TRFUNC                                 /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	TRVAL,	LHDR		; VALUE OF VARIABLE BEING TRACED
XPS.	TRNAME,	LHDR+2		; NAME OF VARIABLE BEING TRACED
XPS.	TRTAG,	LHDR+4		; TAG (3RD ARG. TO TRACE)
XPS.	TRFUNC,	LHDR+6		; FUNCTION (POINTER TO VAR. BLOCK)
	SUBTTL	BLOK Definitions -- I/O Block (IOBLOK)

IFN FTOPS10,<		;[244]

XPS.	IOMODE,	LHDR	; MODE UNDER WHICH FILE WAS OPENED
XPS.	IODEV,	3	; DEVICE NAME IS SIXBIT
XPS.	IOBUFS,	4	; 3RD WORD OF OPEN BLOCK
XPS.	IONAME,	5	; NAME IN SIXBIT
XPS.	IOEXT,	6	; EXTENSION IN SIXBIT
XPS.	IOPRIV,	7	; PRIVILEGE IF SPECIFIED
XPS.	IOPPN,	10	; PROJECT-PROGRAMMER IF SPECIFIED
XPS.	IOSFD,	11	; SFD PATH
XPS.	IOCHAN,	21	; CHANNEL # IN BITS (9-12)
XPS.	IOIBHD,	22	; INPUT BUFFER HEADER (3 WORDS)
XPS.	IOOBHD,	25	; OUTPUT BUFFER HEADER (3 WORDS)
XPS.	IOLAST,	30	; LAST CHARACTER READ ON INPUT (OR 0)
XPS.	IOTTY,	IOLAST	; FLAG (VIA BIT 0) TO IND. TTY
XPS.	IOFLGS,	31	; FLAGS AS FOLLOWS
XPS.	 IOINFL,	400000	; BUFFERED FOR INPUT
XPS.	 IOOUFL,	200000	; BUFFERED FOR OUTPUT
XPS.	IOBUBL,	31	; ADDRESS OF BUBLOK
XPS.	IONEXT,	32	; NEXT IOBLOK
XPS.	IOLENG,	33	; JUST THE LENGTH OF THE IOBLOK

>;[244] End of IFN FTOPS10

IFN FTOPS20,<

XPS.	$IOJFN,	LHDR		;[244] JOB FILE NUMBER
XPS.	$IOFIL,	$IOJFN+1	;[244] ASCII FILE SPECIFICATION
XPS.	IONEXT,	$IOFIL+^D8	;[244] Pointer to the next
XPS.	IOLENG,	IONEXT+1	;[244] Length of the block

>;[244] End of IFN FTOPS20
	SUBTTL	BLOK Definitions -- Association Blocks (IABLOK & OABLOK)

;
;                      Association Blocks (IABLOK & OABLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    !                                 Value                                 !
;    -------------------------------------------------------------------------
;    !                           Value (continued)                           !
;    -------------------------------------------------------------------------
;    !                            File Descriptor                            !
;    -------------------------------------------------------------------------
;    !                      File Descriptor (Contined)                       !
;    =========================================================================
;
;

XPS.	AVAL,	2		; VALUE (LIFTED FROM ASSOC. VARIABLE)
XPS.	AFILE,	4	; FILE DESCRIPTOR
XPS.	ALENG,	6	; THE LENGTH OF AN ABLOK
	SUBTTL BLOK Definitions -- Buffer Block (BUBLOK)

;
;                                  Buffer Block
;
;
;    =========================================================================
;    /                                                                       /
;    /                          This is the Buffer                           /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                                  ...                                  /
;    /                                                                       /
;    =========================================================================
;    /                                                                       /
;    /                                  ...                                  /
;    /                                                                       /
;    =========================================================================
;
;
;

XPS.	BUBITS,	2	; The meat of the BUBLOK
	SUBTTL	BLOK Definitions -- Stream Block (STBLOK)

;
;                             Stream Block (STBLOK)
;
;
;    =========================================================================
;    /                                                                       /
;    /                             Header Block                              /
;    /                                                                       /
;    =========================================================================
;    !                              Next Stream                              !
;    -------------------------------------------------------------------------
;    !                             Current File                              !
;    =========================================================================
;    /                                                                       /
;    /                                IOBLOKs                                /
;    /                                                                       /
;    =========================================================================
;
;

XPS.	STNXT,	2	; NEXT STREAM
XPS.	STCF,	3		; CURRENT FILE
XPS.	STIOBL,	4	; IOBLOKS

	SUBTTL	CHARACTER TABLE POSITIONS


;	THE FOLLOWING SYMBOLS DEFINE COLUMNS IN THE SYSTEM
;	CHARACTER TABLE DEDICATED TO THE INDICATED CATEGORY.
;	SEE DATA SECTION (PURE DATA).

	Y.TAB==1B0	; POSITION FOR TAB
	Y.BL==1B1	; POSITION FOR BLANK
	Y.OP==1B2	; OPERATOR
	Y.QQ==1B3	; DOUBLE QUOTE
	Y.Q==1B4	; SINGLE QUOTE
	Y.LP==1B5	; LEFT PAREN
	Y.RP==1B6	; RIGHT PAREN
	Y.PLUS==1B7	; PLUS
	Y.CM==1B8	; COMMA
	Y.MNS==1B9	; MINUS
	Y.STAR==1B10	; ASTERISK
	Y.PER==1B11	; PERIOD
	Y.NUM==1B12	; NUMERICS
	Y.COL==1B13	; COLON
	Y.SEMI==1B14	; SEMICOLON
	Y.LB==1B15	; LEFT BRACKET
	Y.RB==1B16	; RIGHT BRACKET
	Y.UN==1B17	; UNDERSCORE
	Y.UPS==1B18	; UPPER CASE
	Y.LOWS==1B19	; LOWER CASE
	Y.E==1B20	; EXPONENTIAL
	Y.EQ==1B21	; EQUAL SIGN
	Y.LA==Y.UN	; LEFT ARROW
	Y.VM==1B22	; VERTICAL MOTION
	Y.CR==1B23	; CARRIAGE RETURN
	Y.ALT==1B24	; ALT-MODE
	Y.SLSH==1B25	; SLASH
	Y.VB==1B26	; VERTICAL BAR
	Y.CZ==1B27	; ^Z
	Y.DOLR==1B28	;DOLLAR SYMBOL
	Y.PCNT==1B29	;PERCENT SYMBOL

	SUBTTL	SAVE AREA LENGTHS


;	THESE LENGTHS MUST AGREE WITH THE VALUES COMPUTED
;	IN THE DATA REGON.  IF LSAVEI OR LSAVEM IS INCORRECT
;	AN ERROR MESSAGE WILL BE PRODUCED.  HOWEVER IF THE 
;	LENGTH OF THE AUXILIARY SAVE AREAS ARE CHANGED NO
;	SUCH WARNING MESSAGE IS GIVEN.

;	PATTERN MATCHING SAVE AREA

	LIGNOM==7	; LENGTH OF IGNORED REGION 
	LFLAM==4	; LENGTH OF FLOATING ADDR REG 
	LSAVEM==LIGNOM+LFLAM+1	; LENGTH OF SAVE AREA

;	INTERPRETER SAVE AREA

	LIGNOI==3	; LENGTH OF IGNORED REGION

	LFLAI==4	; LENGTH OF FLOATING ADDRESS REGION
	LSAVEI==LIGNOI+LFLAI+1	; LENGTH OF INTERPRETER SAVE AREA

;	UTILITY SAVE AREAS

	LFLA==4		; LENGTH OF FLOATING ADDR REGION
			; (COMMON FOR EACH UTILITY SAVE AREA)
	LIGNO==4	; LENGTH OF IGNORED REGION (ALSO COMMON)
	LSAVE==LIGNO+LFLA+1	; LENGTH OF SAVE AREA FOR UTILITIES
	LSAVEP==LSAVE	; LENGTH OF SAVE REGION FOR PRIMARY ROUTINES
	LSAVES==LSAVE	;		"	    SECONDARY   "
	LSAVET==LSAVE	;  		"	    TERTIARY    "
	LSAVEQ==LSAVE	;		"	    QUATERNARY  "
	SUBTTL	Definitions -- miscellany


	MARGIN==100	; DISTANCE BETWEEN AIR AND SKY
	LDPREC==20	; LEFT DEFAULT PRECEDENCE
	RDPREC==21	; RIGHT DEFAULT PRECEDENCE
	BYTESZ==7	; BYTE SIZE
	NBYTES==^D36/BYTESZ	; NUMBER OF BYTES PER WORD

	SUBTTL	Definitions -- CVTFMT bit definitions


;[246] The following are the bits for CVTFMT calls
;[246] see CVTFMT in SNOFIO for how to call it.

	FMT.B==	1,,0		;[246] binary format
	FMT.O==	2,,0		;[246] OCTAL FORMAT
	FMT.S==	<3,,0>!FMT.LJ	;[246] SIXBIT FORMAT
	FMT.U==	<4,,0>!FMT.LJ	;[246] UNSPECIFIED FORMAT


	FMT.D==	10,,0		;[246] DIRECT FORMATS (WORD FORMAT)
	FMT.T==	100,,0		;[246] TERMINAL CHARACTER FORMAT
	FMT.C==	200,,0		;[246] SINGLE CHARACTER FORMAT
	FMT.N==	400,,0		;[246] SEQUENCE NUMBERED FILE
	FMT.WM==1000,,0		;[246] WORD MODE
	FMT.AM==FMT.T!FMT.C!FMT.N	;[246] ASCII MODE
	FMT.LJ==2000,,0		;[246] LEFT JUSTIFIED ON OUTPUT
	FMT.CP==4000,,0		;[246] CHARACTER PREFIX
	FMT.AP==10000,,0	;[246] APPEND MODE
	SUBTTL	Macro Definitions -- MIDENT & FUNC


;	 MIDENT - USED FOR CONVERTING

	DEFINE	MIDENT(X)<X>

;	 FUNC - USED AS PREFIX FOR PRIMARY ROUTINES

	DEFINE	FUNC($$NAM,NARGS,FLAGS,ROUT)<
	INTERN	$$NAM
	$$NAM=.-2	;; NO NEED FOR A PHONEY HEADER
	FUNCF==0	;; WILL CONTAIN COMPUTED FLAGS
	IRPC	FLAGS<IFIDN<FLAGS><E><FUNCF==FUNCF!FEAFL> >
			;;IF E INSERT FEAFL
	IRPC	FLAGS<IFIDN<FLAGS><S><FUNCF==FUNCF!FSAFL> >
			;; IF S INSERT FSAFL
	IFN	NARGS,<NARGSA==NARGS>	
			;;USE GIVEN VALUE FOR NARGS IF NONZERO
	IFE	NARGS,<NARGSA==377777>	
			;; OTHERWISE USE INFINITY
	XWD	MIDENT(\FUNCF),MIDENT(\NARGSA)	
			;; ASSEMBLE FFLAGS,FNARGS WORD
	IFB <ROUT>,<PORTAL   .+1>
	IFNB <ROUT>,<PORTAL	ROUT>>
			;; FOR EXECUTE ONLY ON A KI-10
	SUBTTL	Macro Definitions -- ERROR, ERROR. & ERROR%

	 ; ERROR SIGNALLING

	ERRSFL==2000		; ERROR STACK FLAG
	ERRPFL==4000		; ERROR POINT FLAG
	OPDEF	ERR [1000,,0]	; USER UUO FOR ERRORS
	OPDEF	ERR. [<1000+ERRSFL>,,0]
	OPDEF	ERR% [<1000+ERRPFL>,,0]
			; USER UUO FOR PARAMETERIZED ERRORS

;	 ERROR - ASSEMBLES A WORD TO HANDLE AN EXECUTION 
; 	TIME ERROR.

	DEFINE	ERROR(N,M)
<	RADIX	10
E'N'$'M==:
	ERR	N,M	;[265] Don't just HALT anymore.
	RADIX	8>

	 ; ERROR. IS A PARAMETERIZED ERROR
	 ; PARAMETER IS ON THE STACK

	DEFINE	ERROR.(N,M)
<	RADIX	10
	E'N'$'M==:
	ERR.	N,M
	RADIX	8>

	 ; ERROR% IS A PARAMETERIZED ERROR
	 ; PARAMETER IS POINTED TO BY Q3

	DEFINE	ERROR%(N,M)
<	RADIX	10
	E'N'$'M==:
	ERR%	N,M
	RADIX	8>

	SUBTTL	Macro Definitions -- PPINIT - PUSH/POP MACRO INITIALIZATION


;   PPINIT IS CALLED BY EACH OF PUSHSA, PUSHR, POPSA & POPR
;	IT ESTABLISHES 2 MACROS.  PPADDR RETURNS THE ADDRESS
;	OF THE AREA THAT IS TO BE PUSHED OR POPPED.
;	PPLENG RETURNS THE LENGTH OF THIS AREA.
;	TO MAKE THIS EASY THE FOLLOWING EQUATED SYMBOLS ARE DEFINED.

;	REGI==IREG
;	LREGI==1
	REGP==P1
	LREGP==2
	REGS==S1
	LREGS==3
	REGT==T1
	LREGT==4
	REGQ==Q1
	LREGQ==3

	DEFINE	PPINIT(TYPE,CODE)<	
			;; TYPE MUST BE EITHER REG OR SAVE
			;; CODE IS ARG PASSED FROM ORIGINAL CALL
			;; MAY CONTAIN LEADING BLANKS
	IRPC	CODE<
		IF2,<
		   IFNDEF TYPE'CODE,<EXTERNAL TYPE'CODE>>
		IFNB <CODE><DEFINE PPADDR<TYPE'CODE>
			STOPI>>	
			;; SO MUCH FOR THE DEF. OF PPADDR
	PPL==0		;; WE WILL COMPUTE HERE THE LENGTH OF THE AREA
	IRPC	CODE<
		IFNB	<CODE><PPL==PPL+L'TYPE'CODE>>
	DEFINE	PPLENG<MIDENT(\PPL)>	>

	SUBTTL	Macro Definitions -- PUSHSA, POPSA - PUSH/POP MACROS

;   PUSHSA - PUSH ONE OR MORE CONTIGUOUS SAVE AREAS

  	DEFINE	PUSHSA(CODE)
<	IF2,<IFN FTDEBUG,<PRINTX PUSHSA CALL -- CODE >>
	PPINIT(SAVE,CODE)	;; INITIALIZE THINGS
  JSP  Z,PSHSA##  ;; CALL SUBROUTINE
  XWD  PPLENG,PPADDR >

;   POPSA - POP ONE OR MORE CONTIGUOUS SAVE AREAS

	DEFINE	POPSA(CODE)
<	IF2,<IFN FTDEBUG,<PRINTX POPSA CALL -- CODE>>
	PPINIT(SAVE,CODE)	;; INITIALIZE THINGS
  JSP  Z,PPSA##
  XWD  PPLENG,PPADDR >


	SUBTTL	Macro Definitions -- PUSHR, POPR - PUSHJ/POP MACROS


;   PUSHR - PUSH A COLLECTION OF REGISTERS

	DEFINE	PUSHR(CODE)
<	IF2,< IFN FTDEBUG,<PRINTX PUSHR CALL -- CODE>>
	PPINIT(REG,CODE)	;; INITIALIZE THINGS
  JSP  Z,PSHR##
  XWD  PPLENG+1,PPADDR >

;   POPR - POP A COLLECTION OF REGISTERS

	DEFINE	POPR(CODE)
<	IF2,< IFN FTDEBUG,<PRINTX POPR CALL -- CODE>>
	PPINIT(REG,CODE)
  JSP  Z,PPR##
  XWD  PPLENG,PPADDR >




	SUBTTL	Macro Definitions -- $PUSH & $POP

; The following macros will PUSH and POP a list of
; items to and from the STACK.

DEFINE	$PUSH(ITEMS),<
	IRP	<ITEMS>,<PUSH	STACK,ITEMS>
	>

DEFINE	$POP(ITEMS),<
	IRP	<ITEMS>,<POP	STACK,ITEMS>
	>


	SUBTTL	Macro Definitions -- DMOVE & DMOVEM

;THESE MACROS ARE IN THE KA-10 VERSION ONLY, SINCE THE INSTRUCTIONS
;ARE IN THE KI-10 AND KL-10 PROCESSORS.

	IFN FTKA,<		;KA-10 VERSION

DEFINE	DMOVE(AC,M),<
	MOVE	AC+1,1+M
	MOVE	AC,M
>


DEFINE	DMOVEM(AC,M),<
	MOVEM	AC,M
	MOVEM	AC+1,1+M
>
>;END OF IFN FTKA

	END
 RU(/X