SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76

     1						SUBTTL	MA355/JDS/DRH/MP/RCM/VB		15-JUN-76
     2
     3					; COPYRIGHTS 1972,1973,1976,1977  STEVENS INSTITUTE OF TECHNOLOGY
     4					; HOBOKEN, NEW JERSEY, 07030
     5					; ALL RIGHTS RESERVED.
     6
     7					  ;UNIVERSALS
     8
     9						SEARCH	JOBDAT		;JOB DATA AREA DEFINITIONS
    10						SEARCH	MACTEN		;DEC-10 COMMON MACROS
    11						SEARCH	SNOPRM		;SITBOL PARAMETER FILE
    12
    13					  ;DIRECTIVES
    14
    15						.DIRECT	.XTABM		;EXCLUDE TABS FROM MACRO CALLS
    16						SALL			;SUPPRESS MACRO EXPANSIONS
    17	400000'					TWOSEG	400K		;TWOSEGMENT CODE
    18
    19					  ;VERSION NUMBER
    20
    21			000005			INTVER==5		;MAJOR VERSION NUMBER
    22			000000			INTMIN==0		;MINOR VERSION NUMBER
    23			000257			INTEDT==257		;EDIT LEVEL
    24			000000			INTWHO==0		;CUSTOMER ARGUMENT
    25
    26					  ;TITLE
    27
    28						TITLE.	INT,SNOINT,<The Interpreter>
    29		515664	000000			INTSIX==SIXBIT /INT/	; SNOINT ABBREVIATION IN SIXBIT
    30		446352	400000			INTASC==ASCIZ /INT/	; SNOINT ABBREVIATION IN ASCII
    31						SALL
    32
    33
    34					  ;SHOW UNIVERSAL VERSION NUMBERS
    35
    36	400000'	043100	000450			SHOW.	%%JOBD		;VERSION NUMBER OF JOBDAT
    37	400000'	000200	000025			SHOW.	%%MACT		;VERSION NUMBER OF MACTEN
    38	400000'	000500	000305			SHOW.	%%SNOP		;VERSION NUMBER OF SNOPRM
    39
    40						INTTTL			; Title
    41						INTPTX			; PASS2 assembly message
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 2
SNOINT	MAC	13-Oct-66 22:04		Table of Contents

    42						SUBTTL	Table of Contents
    43
    44					;		Table of Contents for The Interpreter
    45					;
    46					;
    47					;			   Section			      Page
    48					;   1. Table of Contents. . . . . . . . . . . . . . . . . . .    2
    49					;   2. REVISION HISTORY . . . . . . . . . . . . . . . . . . .    3
    50					;   3. PROGRAM INITIALIZATION . . . . . . . . . . . . . . . .    4
    51					;   4. NORMAL STATEMENT PROCESSING. . . . . . . . . . . . . .    5
    52					;   5. FAILURE PROCESSING . . . . . . . . . . . . . . . . . .    8
    53					;   6. GOTO'S . . . . . . . . . . . . . . . . . . . . . . . .   10
    54					;   7. TERMINATIONS (ERRST, ETERM, EOP, END, STAT). . . . . .   13
    55					;   8. SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)  14
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 3
SNOINT	MAC	13-Oct-66 22:04		REVISION HISTORY

    56						SUBTTL	REVISION HISTORY
    57
    58					COMMENT	\
    59
    60					START OF VERSION 5.
    61					122	RENAME MODULES & CLEAN UP.
    62					131	ADD SUPPORT FOR SNODDT & PAV.
    63					153	Fix tracing of &STFCOUNT, it did not work.
    64					164	Unevaluated expressions are now compiled out of line.
    65					205	Add a title to every page of the output listing.
    66					211	GET RID OF EXTRA PAGE ON LISTING FILE.
    67					234	Fix  a problem with EVAL when it fails with &ERRTYPE set to > 1.
    68					236	ReVISE THE FORMAT OF THE LISTING OUTPUT.
    69					252	FIX EVAL (AGAIN) SO IT WORKS WHEN IT FAILS
    70					257	Allow comment to follow semi-colon.
    71					\
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 4
SNOINT	MAC	13-Oct-66 22:04		REVISION HISTORY

    72
    73						SUBTTL	PROGRAM INITIALIZATION
    74
    75					;	CONTROL ARRIVES HERE FROM SYSTEM INTERFACE.
    76					;	THE DATA AREA HAS BEEN INITIALIZED.
    77
    78	400000'				ISTART::
    79	400000'	200 13 0 00 000000#		DMOVE	T2,LISTF##	; THIS IS THE LISTING FILE.
    80	400001'	200 12 0 00 000000*
    81	400002'	265 10 0 00 000000*		JSP	S3,PRINTF##	; Give title
    82	400003'	001 17 0 00 000000 		ERROR	15,		; Can't fail here.
    83
    84	400004'	265 15 0 00 000000*		JSP	QLINK,MSTIME##	; GET TIME
    85	400005'	202 00 0 00 000000*		MOVEM	Z,TIME.S##	; LOG STARTING TIME
    86	400006'	265 04 0 00 000000*		JSP	PLINK,CODE##	; CALL COMPILER (NO ARGS.)
    87	400007'	001 17 0 00 000000 		ERROR	15		; HE CAN'T FAIL HERE
    88
    89	400010'	265 15 0 00 400004*		JSP	QLINK,MSTIME	; OBTAIN COMPILATION OUT ...
    90	400011'	202 00 0 00 000000*		MOVEM	Z,TIME.C##	; TIME AND SAVE IT
    91
    92	400012'	265 00 0 00 000000*		PUSHR	PST		; SAVE PST'S
    93	400013'	000012	000004
    94	400014'	200 13 0 00 000000#		DMOVE	T2,LISTF	; GET LISTING FILE
    95	400015'	200 12 0 00 400001*
    96	400016'	326 13 0 00 400024'		JUMPN	T3,ISTAF	; SKIP THIS IF NO LISTING FILE
    97
    98	400017'	265 06 0 00 400723'		JSP	SLINK,LINE	; PRINT OUT END OF COMP. MESS
    99	400020'	000000*	000001			XWD	LISTF##,1	; ..
   100	400021'	004003	000000*			XWD	SDT,S.EOC##
   101	400022'	265 00 0 00 000000*		POPR	PST		; GET BACK P'S
   102	400023'	000011	000004
   103	400024'	262 01 0 00 000012 	ISTAF:	POP	STACK,T2	; STARTING POINT OFFSET TO T2...
   104	400025'	262 01 0 00 000011 		POP	STACK,T1	; AND LOCATION TO T1
   105	400026'	202 01 0 00 000000*		MOVEM	STACK,GROUND##	; THIS IS GROUND LEVEL FOR ALL 
   106									; STATEMENTS AT THIS LEVEL.
   107	400027'	402 00 0 00 000000*		CLEARM	PREX##		; CLEAR PRE-EXECUTION FLAG
   108
   109	400030'	606 11 0 00 777777 		TRNN	T1,-1		; IS STARTING POINT A SYSTEM LABEL ?
   110	400031'	254 00 0 12 000000 		JRST	0(T2)		; YES, JUMP RIGHT TO IT
   111	400032'	202 11 0 00 000000*		dmovem	T1,ILOC##	; NO, STORE CBLOK LOCATION AND...
   112	400033'	202 12 0 00 000000#
   113									; OFFSET IN ILOC BLOCK
   114
   115	400034'	336 00 0 00 000000*		SKIPN	AUTOHS##	; AUTOMATIC HISTOGRAM?
   116	400035'	254 00 0 00 400042'		JRST	IBEGIN		; BEGIN STATEMENT PROCESSING 
   117
   118	400036'	261 01 0 00 401210'		PUSH	STACK,[IDT,,0]	; GIVE ARGUMENT OF
   119	400037'	261 01 0 00 401211'		PUSH	STACK,[1]	; 1
   120	400040'	265 06 0 00 000000#		JSP	SLINK,KWHIST##+2 ; CALL HISTOGRAM MAKER
   121	400041'	001 17 0 00 000000 		ERROR	15		; ERROR RETURN
   122					;	JRST	IBEGIN		; BEGIN PROCESSING
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 5
SNOINT	MAC	13-Oct-66 22:04		PROGRAM INITIALIZATION

   123
   124						SUBTTL	NORMAL STATEMENT PROCESSING
   125
   126					;	STATEMENT INITIALIZATION -
   127					;
   128					;	CONTROL ARRIVES HERE WHEN ANYONE WANTS TO BEGIN
   129					;	EXECUTING A NEW STATEMENT.	ILOC CONTAINS THE LABEL
   130					;	OF THE NEW STATEMENT.	ILABEL CONTAINS THE LABEL OF THE
   131					;	STATEMENT THAT HAD BEEN EXECUTING.
   132
   133	400042'				IBEGIN::
   134					IFN FTDDT,<
   135	400042'	200 04 0 00 400032*		MOVE	P1,ILOC		;GET CBLOCK ADDRESS
   136	400043'	270 04 0 00 000000#		ADD	P1,ILOC+1	;POINT TO STATEMENT
   137	400044'	550 05 0 04 000000 		HRRZ	P2,CHEAD(P1)	;GET CODE INTERPRETER FUNCTION ADDRESS
   138	400045'	254 00 0 05 000000 		JRST	(P2)		;GO
   139					>;END OF IFN FTDDT
   140	400046'				BGST::
   141	400046'	200 01 0 00 400026*		MOVE	STACK,GROUND##	; LOAD STACK FROM GROUND
   142	400047'	200 00 0 00 000000*		MOVE	Z,$STNO##	; PICK UP OLD STATEMENT NUMBER ...
   143	400050'	202 00 0 00 000000*		MOVEM	Z,$LASTN##	; FROM &STNO AND PLUG &LASTNO
   144	400051'	200 05 0 00 000000#		dmove	P1,ILOC##	; PICK UP NEW ...
   145	400052'	200 04 0 00 400042*
   146									; LABEL FROM ILOC
   147	400053'	202 04 0 00 000000*		dmovem	P1,ILABEL##	; STORE INTO ...
   148	400054'	202 05 0 00 000000#
   149									; ILABEL
   150
   151	400055'	270 04 0 00 000005 		ADD	P1,P2		; ADDRESS OF NEW STATEMENT TO P1
   152	400056'	554 00 0 04 000001 		HLRZ	Z,CSTNO(P1)	; EXTRACT THE NEW STATEMENT NUMBER
   153	400057'	202 00 0 00 400047*		MOVEM	Z,$STNO##	; INSERT IT INTO &STNO KEYWORD
   154
   155	400060'	350 06 0 00 000000*		AOS	S1,$STCNT##	; INCREMENT &STCOUNT.
   156	400061'	313 06 0 00 000000*		CAMLE	S1,$STLIM##	; SKIP IF &STCOUNT NOT ABOVE &STLIMIT
   157	400062'	001 13 0 00 000006 		ERROR	11,6		; EXCEEDED &STLIMIT
   158	400063'	332 00 0 00 000000#		SKIPE	$STCNT##+1	; IS &STCOUNT BEING TRACED?
   159	400064'	265 06 0 00 000000*		JSP	SLINK,STCTRC##	; CALL TRACE IF SO
   160	400065'	271 05 0 00 000003 		ADDI	P2,CRULE	; ADD OFFSET TO OBTAIN FIRST ...
   161									; ELEMENT WITHIN STATEMENT.
   162	
   163	400066'	202 05 0 00 000000#		MOVEM	P2,ILOC##+1	; UPDATE ILOC##
   164
   165
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 6
SNOINT	MAC	13-Oct-66 22:04		NORMAL STATEMENT PROCESSING

   166
   167					;	***** BASIC INTERPRETER LOOP *****
   168					;
   169					;	COME HERE TO PROCESS AN ELEMENT IN COMPILED CODE.
   170
   171	400067'	334 04 0 00 000000#	I.LOOP::SKIPA	P1,ILOC##+1	; LOAD P1 FROM ILOC##+1 AND SKIP
   172									; OVER INCREMENTING INSTRUCTION.
   173	400070'	350 04 0 00 000000#	I.BUMP::AOS	P1,ILOC+1	; ADD ONE TO ILOC AND LOAD
   174									 ; RESULT INTO P1
   175	400071'	270 04 0 00 400052*		ADD	P1,ILOC		; ADD IN ADDRESS OF CBLOK
   176	400072'	200 05 0 04 000000 		MOVE	P2,0(P1)	; OBTAIN ELEMENT FROM CBLOK
   177
   178	400073'	623 05 0 00 200000 		TLZE	P2,CDFF		; SKIP IF NOT A FUNCTION
   179	400074'	254 00 0 00 400100'		JRST	I.FN		; PROCESS FUNCTON AT I.FN
   180
   181	400075'	261 01 0 00 000005 		PUSH	STACK,P2	; PUSH ARG ONTO STACK
   182	400076'	261 01 0 00 401212'		PUSH	STACK,[0]	; AS WELL AS ZERO WORD
   183
   184					IFE FTDDT,<
   185						JRST	I.BUMP		; GO BACK AND DO IT AGAIN.
   186					>
   187					IFN FTDDT,<
   188	400077'	254 00 1 00 000000*		JRST	@I.JRST##	; Continue loop if DDT event has not
   189									; occurred otherwise process the event
   190					>;END OF IFN FTDDT
   191
   192					;	BRANCH TO I.FN IF A FUNCTION WAS ENCOUNTERED
   193					;	IN THE COMPILED CODE. THIS COULD BE AN INTERPRETER
   194					;	FUNCTION OR A USER FUNCTION. P2 CONTAINS THE ELEMENT
   195
   196	400100'	202 01 0 00 000000*	I.FN::	MOVEM	STACK,STSAVE##	; SAVE STACK IN CASE OF ERROR RECOVERY
   197
   198						 ; HERE FROM APPLY
   199
   200	400101'	623 05 0 00 400000 		TLZE	P2,CDIFF	; SKIP IF NOT AN INTERPRETER FUNCTION
   201	400102'	254 00 0 05 000000 		JRST	0(P2)		; BRANCH DIRECTLY TO INTERPRETER FUNCTION
   202	400103'	621 05 0 00 770000 		TLZ	P2,CDFLGS	; CLEAR ALL REMAINING FLAGS
   203	400104'	556 05 0 00 000000*		HLRZM	P2,IGNOP##	; SAVE NUMBER OF ACTUAL ARGUMENTS
   204	400105'	552 05 0 00 000000#		HRRZM	P2,IGNOP##+2	; SAVE FOR &ERRPARM
   205	400106'	540 05 0 05 000000 		HRR	P2,0(P2)	; GET ADDRESS OF FBLOK
   206	400107'	200 04 0 05 000002 		MOVE	P1,FFLAGS&FNARGS(P2)	; RETRIEVE FLAGS
   207	400110'	607 04 0 00 000001 		TLNN	P1,FEAFL	; SKIP TO EVALUATE ARGS
   208	400111'	254 00 0 00 400151'		JRST	I.SA		; JUMP TO SUPPLY ARGUMENTS
   209
   210					;	ENTER HERE TO EVALUATE ARGUMENTS.
   211
   212	400112'	201 07 0 01 000001 	I.EA:	MOVEI	S2,1(STACK)	; ADDRESS OF LAST DESCR +2 TO S2
   213	400113'	274 07 0 00 400104*		SUB	S2,IGNOP##	; POINT TO FIRST ...
   214	400114'	274 07 0 00 400113*		SUB	S2,IGNOP##	; ACTUAL ARGUMENT
   215
   216					;	TOP OF LOOP - EVALUATE DESCRIPTOR CURRENTLY
   217					;	AT THE STACK POSITION DENOTED BY S2
   218
   219	400115'	200 10 0 07 000000 	I.EA1:	MOVE	S3,0(S2)	; DESCRIPTOR'S FIRST WORD TO S3
   220	400116'	607 10 0 00 020000 	I.EA2:	TLNN	S3,NONDC	; SKIP IF NON DATA
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 6-1
SNOINT	MAC	13-Oct-66 22:04		NORMAL STATEMENT PROCESSING

   221	400117'	254 00 0 00 400130'		JRST	I.EA3		; IF DATA, BRANCH TO END OF LOOP
   222
   223	400120'	603 10 0 00 010000 		TLNE	S3,TVDC		; SKIP IF NOT A TRAPPED VARIABLE
   224	400121'	254 00 0 00 400134'		JRST	I.ETV		; BRANCH TO EVALUATE TRAPPED VARIABLE
   225
   226	400122'	270 10 0 07 000001 		ADD	S3,1(S2)	; ADD OFFSET TO VARIABLE
   227
   228	400123'	200 11 0 10 000001 		MOVE	T1,1(S3)	; LOAD 2ND DESCRIPTOR WORD
   229	400124'	202 11 0 07 000001 		MOVEM	T1,1(S2)	; STORE INTO STACK
   230	400125'	200 10 0 10 000000 		MOVE	S3,0(S3)	; LOAD FIRST DESCRIPTOR WORD
   231	400126'	202 10 0 07 000000 		MOVEM	S3,0(S2)	; STORE INTO STACK
   232
   233	400127'	254 00 0 00 400116'		JRST	I.EA2		; GO BACK AND EXAMINE DESCRIPTOR
   234
   235					;	HERE IF THE DESCRIPTOR IS A VALUE (NONDC = 0)
   236					;	NOTHING TO DO BUT LOOP.
   237	400130'	271 07 0 00 000002 	I.EA3:	ADDI	S2,2		; BUMP STACK CURSOR BY 2
   238	400131'	307 07 0 01 000000 	I.EA4:	CAIG	S2,0(STACK)	; ARE WE PAST STACK TOP, SKIP IF SO
   239	400132'	254 00 0 00 400115'		JRST	I.EA1		; BACK FOR MORE PROCESSING
   240	400133'	254 00 0 00 400151'		JRST	I.SA
   241
   242
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 7
SNOINT	MAC	13-Oct-66 22:04		NORMAL STATEMENT PROCESSING

   243
   244					;	***** TRAPPED VARIABLE EVALUATION *****
   245					;
   246					;	HERE TO EVALUATE A TVAR; S2 POINTS TO DESCRIPTOR
   247					;	BEARING THE TRAPPED VARIABLE.
   248
   249	400134'	261 01 0 07 000000 	I.ETV:	PUSH	STACK,0(S2)	; PUSH TRAPPED VARIABLE
   250	400135'	261 01 0 07 000001 		PUSH	STACK,1(S2)	; INTO TOP OF STACK
   251	400136'	202 07 0 00 000000#		MOVEM	S2,IGNOP##+1	; SAVE STACK POSITION
   252
   253	400137'	505 05 0 00 004000 		HRLI	P2,FLDC		; SAFE STORE ...
   254	400140'	202 05 0 00 000000#		MOVEM	P2,FLAP##+2	; FLOATING ADDRESS
   255
   256	400141'	200 06 0 07 000001 		MOVE	SLINK,1(S2)	; LOAD ENTRY POINT
   257	400142'	265 06 0 06 000000 		JSP	SLINK,0(SLINK)	; EVALUATE THE VARIABLE
   258	400143'	254 00 0 00 400173'		JRST	IFAIL		; JUMP ON FAILURE
   259
   260	400144'	200 05 0 00 000000#		MOVE	P2,FLAP##+2	; RESTORE ADDRESS
   261	400145'	200 07 0 00 000000#		MOVE	S2,IGNOP##+1	; RESTORE S2
   262	400146'	262 01 0 07 000001 		POP	STACK,1(S2)	; POP INTO ...
   263	400147'	262 01 0 07 000000 		POP	STACK,0(S2)	; THE STACK
   264	400150'	254 00 0 00 400115'		JRST	I.EA1		; JUMP BACK TO EVALUATE ARGS LOOP
   265
   266					;	***** SUPPLYING MISSING ARGUMENTS AND MAKING THE CALL*****
   267
   268					;	CONTROL GOES TO I.SA AFTER EVALUATION OF ARGUMENTS.
   269					;	FIRST COMPARE THE NUMBER OF PARAMETERS (P1-RIGHT) WITH
   270					;	THE NUMBER OF ARGUMENTS ON STACK (IN IGNOP).	IF THESE
   271					;	ARE THE SAME WE NEEDN'T CHECK FSAFL FLAG.
   272
   273	400151'	200 00 0 00 400114*	I.SA:	MOVE	Z,IGNOP##		; LOAD # OF ARGUMENTS
   274	400152'	302 00 0 04 000000 		CAIE	Z,0(P1)		; SKIP IF # OF ARGS = # OF PARAMS
   275	400153'	254 00 0 00 400157'		JRST	I.SA1		; BRANCH TO SUPPLY ARGUMENTS
   276
   277					;	HERE WHEN READY TO MAKE CALL
   278	400154'	265 04 0 05 000003 	I.CALL:	JSP	PLINK,FCODE(P2)	; MAKE CALL
   279	400155'	254 00 0 00 400173'		JRST	IFAIL		; BRANCH OFF TO HANDLE FAILURE
   280	400156'	254 00 0 00 400070'		JRST	I.BUMP		; GO BACK AND REPEAT
   281
   282					; HERE IF THERE IS A DISCREPANCY BETWEEN THE # OF ARGS 
   283					; AND THE NUMBER OF PARAMS.
   284	400157'	603 04 0 00 000004 	I.SA1:	TLNE	P1,FAAFL	; SKIP IF ANY-ARGS FLAG IS OFF
   285	400160'	254 00 0 00 400154'		JRST	I.CALL		; ANY NUMBER CAN PLAY
   286	400161'	301 00 0 04 000000 		CAIL	Z,0(P1)		; SKIP IF # OF ARGS LT # OF PARAMS
   287	400162'	001 15 0 00 000000 		ERROR	13,0		; TOO MANY ARGUMENTS
   288	400163'	607 04 0 00 000002 		TLNN	P1,FSAFL	; SKIP IF SUPPLY-ARGS FLAG IS ON
   289	400164'	254 00 0 00 400154'		JRST	I.CALL		; OK, JUST MAKE CALL
   290	400165'	200 06 0 00 000000 		MOVE	S1,Z		; LOAD S1 WITH NUMBER ...
   291	400166'	275 06 0 04 000000 		SUBI	S1,0(P1)	; OF ARGUMENTS TO BE SUPPLIED
   292
   293	400167'	261 01 0 00 000000*	I.SALP:	PUSH	STACK,NULLST##	; PUSH NULL STRING ...
   294	400170'	261 01 0 00 000000#		PUSH	STACK,NULLST+1	; ONTO STACK
   295	400171'	341 06 0 00 400167'		AOJL	S1,I.SALP	; KEEP LOOPING UNTIL COUNT HAS BEEN...
   296	400172'	254 00 0 00 400154'		JRST	I.CALL		; REDUCED, THEN MAKE CALL
   297
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 8
SNOINT	MAC	13-Oct-66 22:04		NORMAL STATEMENT PROCESSING

   298
   299						SUBTTL	FAILURE PROCESSING
   300
   301					;	POINTS OF ENTRY:
   302					;		IFAIL - ENTRY FROM ERROR HANDLER IN
   303					;			AN ATTEMPT TO RECOVER FROM ERROR
   304					;		I.FLA - FAILURE FROM TRAPPED VARIABLE
   305
   306	400173'	200 01 0 00 400100*	IFAIL::	MOVE	STACK,STSAVE##	; REESTABLISH STACK
   307								 ; THIS WAS SAVED PREVIOUSLY AT I.FN
   308
   309	
   310	400174'	200 06 0 00 400071*	I.FLA:	MOVE	S1,ILOC##		; S1 WILL POINT TO ...
   311	400175'	270 06 0 00 000000#		ADD	S1,ILOC##+1	; CURRENT FUNCTION
   312	400176'	554 07 0 06 000000 		HLRZ	S2,0(S1)	; PUT NUMBER OF ACTUAL ...
   313	400177'	405 07 0 00 007777 		ANDI	S2,CDARGS	; ARGS IN S2 RIGHT
   314
   315					;	REMOVE S2 DESCRIPTORS FROM THE STACK
   316	400200'	240 07 0 00 000001 	I.FL1:	ASH	S2,1		; DOUBLE S2
   317	400201'	504 07 0 00 000007 		HRL	S2,S2		; MAKE BOTH HALVES SAME
   318	400202'	274 01 0 00 000007 		SUB	STACK,S2	; DECREMENT STACK
   319	400203'	400 07 0 00 000000 		CLEAR	S2,		; ZERO OUT S2
   320
   321					; LOOP TO FIND THE NEGATE FUNCTION.
   322					;	IF A NEGATE FUNCTION IS FOUND WHOSE SCOPE INCLUDES
   323					;	THE ITEM OR FUNCTION WHICH FAILED, THEN WE SHOULD
   324					;	RETURN THE NULL STRING FOR THAT NEGATE.
   325					;	S2 IS AN INTEGER USED TO DETERMINE WHETHER A FUNCTION
   326					;	CONTAINS THE FAILED ITEM IN ITS SCOPE. 
   327					;	IF S2 IS NEGATIVE THE FUNCTION DOES NOT 
   328					;	CONTAIN THE FAILED ITEM.
   329					;
   330	400204'	340 06 0 00 000000 	I.FL2:	AOJ	S1,		; BUMP S1
   331	400205'	204 10 0 06 000000 		MOVS	S3,0(S1)	; LOAD S3 WITH ELEMENT (SWAPPED)
   332	400206'	602 10 0 00 400000 		TRNE	S3,CDIFF	; SKIP IF NOT INTERPRETER FUNC.
   333	400207'	254 00 0 00 400227'		JRST	I.FLIN		; GO HANDLE INT. FUNC.
   334	
   335					;	GET NUMBER OF ARGS IN S3 OR 0 IF NOT A FUNC.
   336	400210'	606 10 0 00 200000 		TRNN	S3,CDFF		; SKIP IF A FUNCTION
   337	400211'	400 10 0 00 000000 		CLEAR	S3,		; NOT A FUNCTION
   338	400212'	405 10 0 00 007777 		ANDI	S3,CDARGS	; OBTAIN # OF ARGS
   339
   340	400213'	271 07 0 10 000000 		ADDI	S2,0(S3)	; ADD THIS #  TO S2
   341	400214 07 0 00 400204'		SOJL	S2,I.FL2	; AND SOJ BACK IF RESULT NEGATIVE
   342	400215'	327 07 0 00 400200'		JUMPG	S2,I.FL1	; IF GT 0 WE HAVE DESCRIPTORS TO 
   343									; REMOVE, ALSO CAN'T BE NEGATE FUNC.
   344	400216'	550 16 0 06 000000 		HRRZ	Q2,0(S1)	; POINT TO VFUNC FIELD
   345	400217'	265 15 0 00 000000*		JSP	QLINK,LFBLOK##	; GET POINTER TO FBLOK
   346	400220'	302 16 0 00 000000*		CAIE	Q2,NEG$##	; DO WE HAVE NEGATE FUNCTION?
   347	400221'	254 00 0 00 400204'		JRST	I.FL2		; NO , JUST LOOP BACK
   348	400222'	274 06 0 00 400174*		SUB	S1,ILOC##		; YES, UPDATE ...
   349	400223'	202 06 0 00 000000#		MOVEM	S1,ILOC##+1	; ILOC+1
   350	400224'	261 01 0 00 400167*		PUSH	STACK,NULLST	; PUSH NULL STRING ONTO ...
   351	400225'	261 01 0 00 000000#		PUSH	STACK,NULLST+1	; STACK. THIS IS NEG'S RET. VAL.
   352	400226'	254 00 0 00 400070'		JRST	I.BUMP		; GO BACK FOR MORE.
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 8-1
SNOINT	MAC	13-Oct-66 22:04		FAILURE PROCESSING

   353
   354
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 9
SNOINT	MAC	13-Oct-66 22:04		FAILURE PROCESSING

   355
   356					;	***** HALT OF NEGATE SEARCH *****
   357					;
   358					;	IF AN INTERPRETER FUNCTION WAS ENCOUNTERED WE STOP 
   359					;	THE SCAN FOR NEGATE. IF THE SCAN POINT IS ALREADY
   360					;	BEYOND THE FAIL GOTO FOR THIS STATEMENT, WE CAN'T TAKE THE 
   361					;	FAIL GO TO FOR THIS WOULD IMPLY A LOOP.	IN THIS CASE WE 
   362					;	GO ON TO THE NEXT STATEMENT.
   363					;	IF WE ARE IN AN EBLOK, ENCOUNTERING AN INT. FUNCTION 
   364					;	MEANS THAT WE ARE AT THE END OF THE EBLOK AND THAT 
   365					;	EVAL MUST REPORT FAILURE.
   366
   367	400227'	554 00 0 00 000010 	I.FLIN:	HLRZ	Z,S3		; LOAD INTERPRETER FUNCTION ADDRESS
   368
   369	400230'	306 00 0 00 400707'		CAIN	Z,EOE		; END OF EXPRESSION?
   370	400231'	254 00 0 00 400705'		JRST	EOEF		; YES - FAIL RETURN OF EVAL
   371
   372	400232'	350 00 0 00 000000*		AOS	$STFCT##	; HERE MEANS STATEMENT FAILED
   373	400233'	332 00 0 00 000000#		SKIPE	$STFCT##+1	;[153] Test for &STFCOUNT being traced
   374	400234'	265 06 0 00 000000*		JSP	SLINK,STFTRC##	; YES - GO TRACE IT
   375
   376	400235'	200 04 0 00 400053*	I.FAIL::MOVE	P1,ILABEL##	; PICK UP CURRENT CBLOK POINTER
   377	400236'	270 04 0 00 000000#		ADD	P1,ILABEL##+1	; P1 POINTS TO CURRENT STATEMENT HDR.
   378	400237'	550 05 0 04 000001 		HRRZ	P2,CFGOTO(P1)	; OBTAIN FAIL GO TO OFFSET.
   379	400240'	317 05 0 00 000000#		CAMG	P2,ILOC##+1	; BEYOND LOC? THEN SKIP
   380	400241'	254 00 0 00 400245'		JRST	I.NEXT		; ELSE GO ON TO NEXT STATEMENT
   381	400242'	202 05 0 00 000000#		MOVEM	P2,ILOC##+1	; STORE FAIL OFFSET AS CURRENT
   382	400243'	200 01 0 00 400046*		MOVE	STACK,GROUND	; RE-ESTABLISH STACK BASE.
   383	400244'	254 00 0 00 400067'		JRST	I.LOOP		; GO BACK AND PROCESS FAIL GO TO
   384
   385					;	HERE TO GO TO NEXT STATEMENT.
   386
   387	400245'	200 04 0 00 400235*	I.NEXT:	MOVE	P1,ILABEL	; ESTABLISH POINTER ...
   388	400246'	270 04 0 00 000000#		ADD	P1,ILABEL+1	; TO THIS STATEMENT
   389	400247'	550 06 0 04 000002 		HRRZ	S1,CNEXT(P1)	; OFFSET FOR NEXT STATEMENT
   390	400250'	202 06 0 00 000000#		MOVEM	S1,ILOC+1	; THIS ESTABLISHES LOC. COUNTER
   391	400251'	313 06 0 00 000000#		CAMLE	S1,ILABEL+1	; NEW OFFSET IS NORMALLY GR. THAN OLD
   392
   393	400252'	254 00 0 00 400042'		JRST	IBEGIN		; SO WE TAKE THIS BRANCH NORMALLY
   394
   395					;	NEW CBLOK
   396	400253'	200 04 0 00 400245*		MOVE	P1,ILABEL	; LOAD ADDR OF CURR. CBLOK
   397	400254'	540 04 0 04 000003 		HRR	P1,NCLINK(P1)	; LOAD ADDR OF NEXT CBLOK
   398	400255'	202 04 0 00 400222*		MOVEM	P1,ILOC		; INSTALL AS NEW LOCATION
   399	400256'	254 00 0 00 400042'		JRST	IBEGIN		; PROCESS NEW STATEMENT.
   400
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 10
SNOINT	MAC	13-Oct-66 22:04		FAILURE PROCESSING

   401
   402						SUBTTL	GOTO'S	(GOTO, DGOTO, IGOTO, LRGOTO)
   403
   404					;	GOTO - INTERPRETER FUNCTION - INSERTED INTO THE CBLOK
   405					;	BY A NORMAL (PARENTHETICAL) GO TO.
   406
   407	400257'				GOTO::
   408	400257'	554 06 0 01 777777 		HLRZ	S1,-1(STACK)	; EXTRACT DATATYPE FROM VAL. ON STACK
   409	400260'	302 06 0 00 064000 		CAIE	S1,VAR		; NORMAL CASE IS VAR
   410	400261'	254 00 0 00 400316'		JRST	GOTONU		; NOT VAR - MUST BE NUMERIC
   411	400262'	332 00 0 01 000000 		SKIPE	0(STACK)	; IS VARIABLE NATURAL?
   412	400263'	001 10 0 00 000005 		ERROR	8,5		; UNNATURAL
   413	400264'	201 17 0 00 004011 		MOVEI	Q3,NDT		; TRANSFORM VAR TO NAME
   414	400265'	506 17 0 01 777777 		HRLM	Q3,-1(STACK)	; FOR &ERRPARM PURPOSES
   415
   416	400266'	200 07 0 01 777777 		MOVE	S2,-1(STACK)	; LOAD POINTER TO VAR BLOCK
   417	400267'	200 10 0 07 000006 		MOVE	S3,VFLAGS(S2)	; PICK UP THE FLGS FIELD
   418	400270'	603 10 0 00 200000 		TLNE	S3,LTFLAG	; IS LABEL TRACED
   419	400271'	254 00 0 00 400304'		JRST	GOTO2		; YES - GO TRACE LABEL
   420
   421					;	MERGE HERE IF HE STOPS TRACING DURING THE TRACE
   422	400272'				GOTO3:
   423	400272'	607 10 0 00 400000 		TLNN	S3,OPFLAG	; OPERATOR TEST
   424	400273'	336 06 0 07 000002 		SKIPN	S1,VLABEL(S2)	; LOAD S1 WITH LABEL AND TEST
   425	400274'	003 10 0 00 000002 		ERROR.	8,2		; UNDEFINED LABEL
   426	
   427	400275'	554 10 0 00 000006 	GOTO3A:	HLRZ	S3,S1		; PICK UP LEFT HALF OF LABEL
   428	400276'	606 06 0 00 777777 		TRNN	S1,-1		; TEST FOR SYSTEM LABEL
   429	400277'	254 00 0 10 000000 		JRST	0(S3)		; YES - BRANCH OUT
   430
   431	400300'	505 06 0 00 004007 		HRLI	S1,CDT		; FORM DESCRIPTOR TOP
   432	400301'	202 06 0 00 400255*		MOVEM	S1,ILOC		; STORE IT
   433	400302'	202 10 0 00 000000#		MOVEM	S3,ILOC+1	; STORE DESCRIPTOR BOTTOM
   434
   435	400303'	254 00 0 00 400042'		JRST	IBEGIN		; BEGIN NEW STATEMENT
   436
   437	400304'	265 06 0 00 000000*	GOTO2:	JSP	SLINK,LTRC##	; TRACE THE LABEL
   438	400305'	200 07 0 01 777777 		MOVE	S2,-1(STACK)	; REESTABLISH POINTER TO VAR BL
   439	400306'	200 10 0 07 000006 		MOVE	S3,VFLAGS(S2)	; PICK UP TRACE FLAG AGAIN
   440	400307'	607 10 0 00 200000 		TLNN	S3,LTFLAG	; CHECK FOR TRACING AGAIN
   441	400310'	254 00 0 00 400272'		JRST	GOTO3		; JOIN NORMAL PROCESSING IF ITS OFF
   442
   443	400311'	200 07 0 07 000002 		MOVE	S2,VLABEL(S2)	; POINT TO TRBLOK
   444	400312'	540 06 0 07 000002 		HRR	S1,TRVAL(S2)	; GET CBLOK ADDR
   445	400313'	504 06 0 07 000003 		HRL	S1,TRVAL+1(S2)	; GET OFFSET
   446	400314'	326 06 0 00 400275'		JUMPN	S1,GOTO3A	; JOIN REG. PROC.
   447	400315'	003 10 0 00 000002 		ERROR.	8,2		; UNDEFINED LABEL
   448
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 11
SNOINT	MAC	13-Oct-66 22:04		GOTO'S	(GOTO, DGOTO, IGOTO, LRGOTO)

   449
   450					;	***** NUMERIC GOTO *****
   451	400316'				GOTONU:
   452	400316'	265 11 0 00 401127'		JSP	TLINK,CVTVAL	; MAKE IT A VALUE
   453	400317'	001 17 0 00 000000 		ERROR	15		; CAN'T FAIL
   454	400320'	265 11 0 00 000000*		JSP	TLINK,CVTINT##	; INSURE INTEGER
   455	400321'	003 10 0 00 000002 		ERROR.	8,2		; NO? - REALLY BAD
   456
   457	400322'	200 05 0 01 000000 		MOVE	P2,0(STACK)	; GET INTEGER
   458	400323'	200 07 0 00 000000#		dmove	S1,ILABEL	; KEEP CBLOK ADDR IN S1
   459	400324'	200 06 0 00 400253*
   460									; KEEP OFFSET IN S2
   461
   462	400325'	200 10 0 00 000006 	GOTON1:	MOVE	S3,S1		; KEEP SUM ...
   463	400326'	271 10 0 07 000000 		ADDI	S3,0(S2)	; IN S3
   464
   465	400327'	321 05 0 00 400340'		JUMPL	P2,GOTOB	; GO BACKWARDS IF P2 IS NEGATIVE
   466	400330'	361 05 0 00 400351'		SOJL	P2,GOTONE	; END SEARCH IF P2 IS 0
   467
   468	400331'	550 11 0 10 000002 		HRRZ	T1,CNEXT(S3)	; LOAD NEXT OFFSET
   469	400332'	313 11 0 00 000007 		CAMLE	T1,S2		; SHOULD COMPARE HIGH
   470	400333'	254 00 0 00 400347'		JRST	GOTOLP		; BRANCH IF SO
   471
   472	400334'	540 06 0 06 000003 		HRR	S1,NCLINK(S1)	; ESTABLISH NEW CBLOK
   473	400335'	606 06 0 00 777777 		TRNN	S1,-1		; CHECK ADDRESS FOR 0
   474	400336'	001 10 0 00 000007 		ERROR	8,7		; 0 - END OF LINE
   475	400337'	254 00 0 00 400347'		JRST	GOTOLP		; GO LOOP IF OK
   476
   477					;	HERE FOR A NEGATIVE (BACKWARD) GO TO.
   478	400340'	271 05 0 00 000001 	GOTOB:	ADDI	P2,1		; KEEP BUMPING P2
   479	400341'	554 11 0 10 000002 		HLRZ	T1,CLAST(S3)	; PICK UP LAST OFFSET
   480	400342'	315 11 0 00 000007 		CAMGE	T1,S2		; SHOULD BE LESS THAN BEFORE
   481	400343'	254 00 0 00 400347'		JRST	GOTOLP		; IT IS - LOOP
   482
   483	400344'	540 06 0 06 000002 		HRR	S1,LCLINK(S1)	; GET LAST CBLOK
   484	400345'	606 06 0 00 777777 		TRNN	S1,-1		; TEST FOR 0 ADDRESS
   485	400346'	001 10 0 00 000007 		ERROR	8,7		; 0 - END OF THE LINE
   486
   487					;	END OF NUMERIC GOTO LOOP
   488	400347'				GOTOLP:
   489	400347'	200 07 0 00 000011 		MOVE	S2,T1		; TRANSFER OFFSET TO S2
   490	400350'	254 00 0 00 400325'		JRST	GOTON1		; SEEK ANOTHER INCREMENT
   491
   492					;	END OF NUMERIC GO TO
   493	400351'				GOTONE:
   494	400351'	202 06 0 00 400301*		dmoveM	S1,ILOC		; NEW LOCATION IS GIVEN ...
   495	400352'	202 07 0 00 000000#
   496									; BY S1 & S2
   497	400353'	254 00 0 00 400042'		JRST	IBEGIN		; START NEW STATEMENT
   498
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 12
SNOINT	MAC	13-Oct-66 22:04		GOTO'S	(GOTO, DGOTO, IGOTO, LRGOTO)

   499
   500					;	***** THE DIRECT GO TO *****
   501					;	I.E. GOTO 'S WITH ANGULAR BRACKETS
   502	400354'				DGOTO::
   503	400354'	265 11 0 00 401127'		JSP	TLINK,CVTVAL	; MAKE IT A VALUE
   504	400355'	001 10 0 00 000006 		ERROR	8,6		; BAD ARGUMENT
   505	400356'	554 05 0 01 777777 		HLRZ	P2,-1(STACK)	; GET DATATYPE
   506	400357'	302 05 0 00 004007 		CAIE	P2,CDT		; MUST BE TYPE CODE.
   507	400360'	254 00 0 00 400316'		JRST	GOTONU		; TRY NUMERIC GOTO
   508	400361'	262 01 0 00 000000#		POP	STACK,ILOC+1	; INSERT AS
   509	400362'	262 01 0 00 400351*		POP	STACK,ILOC	; NEW LABEL
   510	400363'	254 00 0 00 400042'		JRST	IBEGIN		; AND GO THERE
   511
   512					;	IMMEDIATE GOTO - THIS IS AN INTERPRETER FUNCTION USED
   513					;	FOR HOPPING AROUND CODE.
   514	400364'				IGOTO::
   515	400364'	200 05 0 00 000000#		MOVE	P2,ILOC+1	; PICK UP CURRENT CODE OFFSET
   516	400365'	270 05 0 00 400362*		ADD	P2,ILOC		; ADD IN BASE OF CBLOK
   517	400366'	200 04 0 05 000001 		MOVE	P1,1(P2)	; PICK UP NEXT ITEM IN CBLOK
   518	400367'	552 04 0 00 000000#		HRRZM	P1,ILOC+1	; THIS IS NEW VALUE FOR ILOC
   519	400370'	254 00 0 00 400067'		JRST	I.LOOP		; BEGIN AGAIN.
   520
   521					;	LONG RANGE GO TO - THIS IS AN INTERPRETER FUNCTION FOR 
   522					;	SKIPPING TO THE NEXT CBLOK
   523	400371'				LRGOTO::
   524	400371'	200 05 0 00 400324*		MOVE	P2,ILABEL	; POINT TO CBLOK HEAD
   525	400372'	540 05 0 05 000003 		HRR	P2,NCLINK(P2)	; INSERT IN P2 THE NEXT ADDR.
   526	400373'	202 05 0 00 400365*		MOVEM	P2,ILOC		; ESTABLISH THIS AS ILOC
   527	400374'	201 05 0 00 000004 		MOVEI	P2,CCODE	; LOAD OFFSET TO CODE IN NEW CBLOK
   528	400375'	202 05 0 00 000000#		MOVEM	P2,ILOC+1	; PLACE INTO OFFSET
   529
   530	400376'	254 00 0 00 400042'		JRST	IBEGIN		; BEGIN WITH ILOC AS NEW
   531
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 13
SNOINT	MAC	13-Oct-66 22:04		GOTO'S	(GOTO, DGOTO, IGOTO, LRGOTO)

   532
   533						SUBTTL	TERMINATIONS (ERRST, ETERM, EOP, END, STAT)
   534
   535					;	HERE IF AN ERRONEOUS STATEMENT IS EXECUTED.
   536	400377'	001 04 0 00 000002 	ERRST::	ERROR	4,2		; NOTHING SUBTLE HERE
   537
   538					;	HERE WHEN END OF PROGRAM IS REACHED
   539	400400'				EOP::
   540
   541					;	HERE WHEN END OF PROGRAM IS BRANCHED TO
   542	400400'				END::
   543	400400'	333 00 0 00 400034*		SKIPLE	AUTOHS		; WAS END FROM AUTO-HISTOGRAM?
   544	400401'	254 00 0 00 000000*		JRST	CLOSIO		; YES
   545
   546	400402'	265 15 0 00 400010*		JSP	QLINK,MSTIME##	; GET CURRENT TIME
   547	400403'	202 00 0 00 000000*		MOVEM	Z,TIME.E##	; INDICATE AS ENDING TIME
   548
   549	400404'	265 06 0 00 400723'		JSP	SLINK,LINE	; PRINT NORM-TERM MESSAGE
   550	400405'	000000	000006			6
   551	400406'	004003	401213'			XWD	SDT,[12,,1]
   552	400407'	004003	000000*			XWD	SDT,S.NORM##
   553	400410'	002001	000000*			XWD	IDT,$FNCLV##	; INDICATE FUNCTION LEVEL
   554	400411'	004003	000000*			XWD	SDT,S.SMNT##
   555	400412'	002001	400057*			XWD	IDT,$STNO##	; INDICATE LAST ST. EXEC.
   556	400413'	004003	401214'			XWD	SDT,[135,,1]
   557
   558	400414'	254 00 0 00 400424'		JRST	STAT		; GO GIVE STATISTICS
   559
   560					;	HERE FROM ERR FOR FATAL TERM.
   561	400415'				ETERM::
   562	400415'	265 06 0 00 400723'		JSP	SLINK,LINE	; PRINT ERROR-TERM MESSAGE
   563	400416'	000000	000004			4
   564	400417'	004003	401213'			XWD	SDT,[12,,1]
   565	400420'	004003	000000*			XWD	SDT,S.LAST##
   566	400421'	002001	400412*			XWD	IDT,$STNO##	; LAST STMT NO.
   567	400422'	004003	401214'			XWD	SDT,[135,,1]	; END BRACKET
   568
   569	400423'	254 00 0 00 400424'		JRST	STAT		; GO GIVE STATISTICS
   570
   571					;	HERE TO PUT OUT STATISTICS SUMMARY
   572	400424'				STAT:
   573	400424'	200 06 0 00 000000*		MOVE	S1,$DUMP##	; &DUMP ON?
   574	400425'	323 06 0 00 400441'		JUMPLE	S1,STAT2	; NO
   575
   576	400426'	265 06 0 00 400723'		JSP	SLINK,LINE	; WARN
   577	400427'	000000*	000003			XWD	XERRF##,3		; USER
   578	400430'	004003	401215'			XWD	SDT,[14,,1]	; THAT
   579	400431'	004003	000000*			XWD	SDT,S.DMP##	; A DUMP
   580	400432'	004003	401213'			XWD	SDT,[12,,1]	; IS COMMING
   581
   582	400433'	261 01 0 00 401210'		PUSH	STACK,[IDT,,0]	; PUSH ARGUMENT
   583	400434'	261 01 0 00 400424*		PUSH	STACK,$DUMP##	; FOR DUMP
   584	400435'	402 00 0 00 400434*		CLEARM	$DUMP##		; ROUTINE
   585	400436'	265 04 0 00 000000#		JSP	PLINK,DUMP$##+FCODE ; CALL DUMP
   586	400437'	001 17 0 00 000000 		ERROR	15		; CAN'T FAIL
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 13-1
SNOINT	MAC	13-Oct-66 22:04		TERMINATIONS (ERRST, ETERM, EOP, END, STAT)

   587	400440'	274 01 0 00 000000*		SUB	STACK,XWD22##	; POP OFF RETURN VALUE
   588
   589	400441'				STAT2:	 ;
   590
   591	400441'	336 00 0 00 400015*		SKIPN	LISTF##		; SKIP STAT IF NO 
   592	400442'	254 00 0 00 400401*		JRST	CLOSIO		; LIST FILE
   593
   594	400443'	201 00 0 00 000001 		MOVEI	Z,1		; ARGUMENT FOR PRINTE
   595	400444'	202 00 0 00 000000*		MOVEM	Z,NLMPGN##	; ..
   596	400445'	402 00 0 00 000000*		SETZM	NLPGNO##	; ..
   597	400446'	265 10 0 00 000000*		JSP	S3,PRINTE##	; PRINT TITLE.
   598	400447'	001 14 0 00 000002 		 ERROR	12,2		;  SHOULDN'T HAPPEN.
   599
   600	400450'	265 06 0 00 400723'		JSP	SLINK,LINE	; STATISTICS HEADER
   601	400451'	000000	000001			1
   602	400452'	004003	000000*			XWD	SDT,S.STAT##
   603
   604	400453'	200 05 0 00 400011*		MOVE	P2,TIME.C	; GET TIME OUT OF COMPILER
   605	400454'	274 05 0 00 400005*		SUB	P2,TIME.S	; SUBTRACT STARTING TIME
   606	400455'	265 06 0 00 400723'		JSP	SLINK,LINE	; PRINT COMPILATION TIME
   607	400456'	000000	000002			2
   608	400457'	002011	000005			XWD	IDT+10,P2
   609	400460'	004003	000000*			XWD	SDT,S.CMTM##
   610
   611	400461'	200 05 0 00 400403*		MOVE	P2,TIME.E	; GET ENDING TIME
   612	400462'	274 05 0 00 400453*		SUB	P2,TIME.C	; SUBTRACT TIME OUT OF COMP.
   613	400463'	265 06 0 00 400723'		JSP	SLINK,LINE	; PRINT EXECUTION TIME
   614	400464'	000000	000002			2
   615	400465'	002011	000005			XWD	IDT+10,P2
   616	400466'	004003	000000*			XWD	SDT,S.EXTM##
   617
   618	400467'	221 05 0 00 001750 		IMULI	P2,^D1000	; MULTIPLY TO GET MICROSEC.
   619	400470'	336 00 0 00 400060*		SKIPN	$STCNT##		; TEST THE STATEMENT COUNT FOR 0
   620	400471'	254 00 0 00 400505'		JRST	STAT1		; 0 - AVOID DIVISION BY
   621	400472'	230 05 0 00 400470*		IDIV	P2,$STCNT##	; FIND AVERAGE
   622	400473'	265 06 0 00 400723'		JSP	SLINK,LINE	; PRINT AVE. TIME
   623	400474'	000000	000002			2
   624	400475'	002011	000005			XWD	IDT+10,P2
   625	400476'	004003	000000*			XWD	SDT,S.AVE##
   626
   627	400477'	265 06 0 00 400723'		JSP	SLINK,LINE	; INDICATE ...
   628	400500'	000000	000004			4
   629	400501'	002011	400472*			XWD	IDT+10,$STCNT	; NUMBER OF ...
   630	400502'	004003	000000*			XWD	SDT,S.STEX##	; STATEMENTS EXECUTED
   631	400503'	002011	400232*			XWD	IDT+10,$STFCT	; NUMBER OF ...
   632	400504'	004003	000000*			XWD	SDT,S.FLD##	; STATEMENTS FAILED
   633
   634	400505'	265 06 0 00 400723'	STAT1:	JSP	SLINK,LINE	; NO OF GC'S
   635	400506'	000000	000002			2
   636	400507'	002011	000000*			XWD	IDT+10,NGCS##
   637	400510'	004003	000000*			XWD	SDT,S.GC##
   638
   639	400511'	265 06 0 00 400723'		JSP	SLINK,LINE	; NO OF READS
   640	400512'	000000	000002			2
   641	400513'	002011	000000*			XWD	IDT+10,NINS##
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 13-2
SNOINT	MAC	13-Oct-66 22:04		TERMINATIONS (ERRST, ETERM, EOP, END, STAT)

   642	400514'	004003	000000*			XWD	SDT,S.NINS##
   643
   644	400515'	265 06 0 00 400723'		JSP	SLINK,LINE	; NO. OF WRITES
   645	400516'	000000	000002			2
   646	400517'	002011	000000*			XWD	IDT+10,NOUTS##
   647	400520'	004003	000000*			XWD	SDT,S.NOUT##
   648	
   649						 ; STORAGE STATISTICS
   650
   651	400521'	265 04 0 00 400642'		JSP	PLINK,KSTAT	; PUT OUT HIGH SEG
   652	400522'	000115	000000*			XWD	.JBHRL,S.HGH##	 ; GIVE ARGS
   653
   654	400523'	200 05 0 00 000000*		MOVE	P2,CEIL##		; GET CURRENT
   655	400524'	271 05 0 00 000100 		ADDI	P2,MARGIN	; HIGH
   656	400525'	336 00 0 00 000000*		SKIPN	HIWATR		; WAS THIS FILLED?
   657	400526'	202 05 0 00 400525*		MOVEM	P2,HIWATR##	; NO FILL IT
   658
   659	400527'	202 05 0 00 400151*		MOVEM	P2,IGNOP##	; SAVE CEIL
   660
   661	400530'	265 04 0 00 400642'		JSP	PLINK,KSTAT	; HIGH WATER MARK
   662	400531'	000000*	000000*			XWD	HIWATR,S.MLOW## ;
   663
   664	400532'	265 04 0 00 400642'		JSP	PLINK,KSTAT	; LOW SEGMENT
   665	400533'	000000*	000000*			XWD	IGNOP##,S.LOW##	; MESSAGE
   666	400534'	200 05 0 00 400527*		MOVE	P2,IGNOP##	; LOAD CEIL
   667	400535'	274 05 0 00 000000*		SUB	P2,FLOOR##	; SUBTRACT OFF FLOOR
   668
   669	400536'	265 06 0 00 400723'		JSP	SLINK,LINE	; FLOATING STORAGE
   670	400537'	000000	000002			XWD	0,2
   671	400540'	002017	000005			XWD	IDT+16,P2
   672	400541'	004003	000000*			XWD	SDT,S.FLID##
   673
   674	400542'	200 05 0 00 400535*		MOVE	P2,FLOOR	; COMPUTE SIZE OF
   675	400543'	274 05 0 00 000000*		SUB	P2,GRID##	; GRID
   676
   677	400544'	265 06 0 00 400723'		JSP	SLINK,LINE	; GROWING STORAGE
   678	400545'	000000	000002			XWD	0,2
   679	400546'	002017	000005			XWD	IDT+16,P2
   680	400547'	004003	000000*			XWD	SDT,S.GRID##
   681
   682	400550'	200 05 0 00 400543*		MOVE	P2,GRID		; COMPUTE
   683	400551'	550 06 0 00 000000*		HRRZ	S1,NSBASE##	; TOTAL LENGTH OF 
   684	400552'	275 05 0 06 000001 		SUBI	P2,1(S1)	; STACKS
   685
   686	400553'	265 06 0 00 400723'		JSP	SLINK,LINE	; TOTAL STACKS
   687	400554'	000000	000002			XWD	0,2
   688	400555'	002017	000005			XWD	IDT+16,P2
   689	400556'	004003	000000*			XWD	SDT,S.STKS##
   690
   691	400557'	265 04 0 00 400613'		JSP	PLINK,STKST	; NAME STACK
   692	400560'	000000*	000000*			XWD	NSBASE,HSBASE##
   693	400561'	000000	000000*			XWD	0,S.NST##
   694
   695	400562'	265 04 0 00 400613'		JSP	PLINK,STKST	; HISTORY (ALTERNATES) STACK
   696	400563'	000000*	000000*			XWD	HSBASE,STBASE##
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 13-3
SNOINT	MAC	13-Oct-66 22:04		TERMINATIONS (ERRST, ETERM, EOP, END, STAT)

   697	400564'	000000	000000*			XWD	0,S.HST##
   698
   699	400565'	200 05 0 00 400550*		MOVE	P2,GRID		; NEED GRID
   700	400566'	275 05 0 00 000001 		SUBI	P2,1		; MINUS 1
   701	400567'	202 05 0 00 400534*		MOVEM	P2,IGNOP##	; IN A LOCATION
   702
   703	400570'	265 04 0 00 400613'		JSP	PLINK,STKST	; SYSTEM STACK
   704	400571'	000000*	400567*			XWD	STBASE,IGNOP##
   705	400572'	000000	000000*			XWD	0,S.SST##
   706
   707	400573'	265 06 0 00 400723'		JSP	SLINK,LINE	; VARIABLE TABLE
   708	400574'	000000	000002			XWD	0,2
   709	400575'	002017	000000*			XWD	IDT+16,LVTBL##
   710	400576'	004003	000000*			XWD	SDT,S.VTBL##
   711
   712
   713						 ; HERE TO PREPARE AUTOMATIC HISTOGRAM
   714
   715	400577'	331 00 0 00 400400*		SKIPL	AUTOHS##	; TEST FLAG FIRST
   716	400600'	254 00 0 00 400442*		JRST	CLOSIO		; JUST RETURN
   717
   718	400601'	261 01 0 00 000000*		PUSH	STACK,SYSTR##	; SNOBOL4 PROGRAM
   719	400602'	261 01 0 00 000000*		PUSH	STACK,S.HIST##	; TO MAKE A HISTOGRAM
   720	400603'	265 04 0 00 400006*		JSP	PLINK,CODE	; COMPILE IT
   721	400604'	001 17 0 00 000000 		ERROR	15
   722
   723	400605'	262 01 0 00 000000#		POP	STACK,ILOC+1	; AND GO
   724	400606'	262 01 0 00 400373*		POP	STACK,ILOC	; EXECUTE
   725
   726	400607'	201 15 0 00 000001 		MOVEI	Q1,1		; NOW
   727	400610'	202 15 0 00 400577*		MOVEM	Q1,AUTOHS	; SET FLAG TO AVOID THIS PLACE.
   728
   729	400611'	254 00 0 00 400042'		JRST	IBEGIN		; OFF TO EXECUTE NEW CODE
   730	400612'	254 00 0 00 400600*		JRST	CLOSIO##	; RETURN TO GOD
   731
   732						 ; STKST - SUBROUTINE USED BY THE ABOVE STACK 
   733						 ; STATISTICS PRINTOUT.
   734						 ; CALLING SEQUENCE:
   735						 ;	JSP	PLINK,STKST
   736						 ; 	XWD	BASE,TOP
   737						 ;	XWD	0,S.ID
   738
   739	400613'	550 05 0 04 000000 	STKST:	HRRZ	P2,0(PLINK)	; POINT TO 
   740	400614'	550 05 0 05 000000 		HRRZ	P2,0(P2)	; TOP OF STACK
   741
   742	400615'	554 06 0 04 000000 		HLRZ	S1,0(PLINK)	; POINT TO
   743	400616'	550 06 0 06 000000 		HRRZ	S1,0(S1)	; BOTTOM
   744
   745	400617'	200 07 0 00 000005 		MOVE	S2,P2		; SAVE TOP
   746	400620'	274 05 0 00 000006 		SUB	P2,S1		; COMPUTE LENGTH
   747
   748	400621'	332 00 0 07 000000 	STKST2:	SKIPE	0(S2)		; FOUND A NON-ZERO?
   749	400622'	254 00 0 00 400626'		JRST	STKST1		; YES
   750
   751	400623'	370 00 0 00 000007 		SOS	S2		; DEDUCT 1
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 13-4
SNOINT	MAC	13-Oct-66 22:04		TERMINATIONS (ERRST, ETERM, EOP, END, STAT)

   752	400624'	313 07 0 00 000006 		CAMLE	S2,S1		; END REACHED YET?
   753	400625'	254 00 0 00 400621'		JRST	STKST2		; NO - JUST LOOP
   754
   755	400626'	275 07 0 06 000000 	STKST1:	SUBI	S2,0(S1)	; FIND NET
   756	400627'	202 07 0 00 400571*		MOVEM	S2,IGNOP##	; SAVE
   757
   758	400630'	261 01 0 00 400601*		PUSH	STACK,SYSTR	; PUSH
   759	400631'	200 10 0 04 000001 		MOVE	S3,1(PLINK)	; ID 
   760	400632'	261 01 0 10 000000 		PUSH	STACK,0(S3)	; FOR STACK
   761
   762	400633'	265 06 0 00 400723'		JSP	SLINK,LINE	; WRITE LINE
   763	400634'	000000	000004			XWD	0,4		; # ARGS
   764	400635'	002024	000005			XWD	IDT+23,P2	; LENGTH
   765	400636'	000001	000001			XWD	STACK,1		; ID STRING
   766	400637'	004003	000000*			XWD	SDT,S.USED##	; AMOUNT ACUALLY USED
   767	400640'	002001	400627*			XWD	IDT,IGNOP##	; AND THE VALUE
   768
   769	400641'	254 00 0 04 000002 		JRST	2(PLINK)	; RETURN
   770
   771						 ; KSTAT - WRITES OUT STORAGE STATISTIC IN TERMS OF K
   772						 ; CALLING SEQUENCE:
   773						 ;	JSP PLINK,KSTAT
   774						 ;	EXP LOC1,S.ID
   775						 ; PUTS OUT MESSAGE AT S.ID OF CONTENTS OF LOC1
   776
   777	400642'	554 06 0 04 000000 	KSTAT:	HLRZ	S1,0(PLINK)	; LOAD ADDRESS OF LOC1
   778	400643'	200 05 0 06 000000 		MOVE	P2,0(S1)	; PICK UP VALUE
   779	400644'	405 05 0 00 377777 		ANDI	P2,377777	; MASK OUT LEFT AND HIGHBIT
   780	400645'	242 05 0 00 777766 		LSH	P2,-^D10	; DIVIDE BY K
   781	400646'	271 05 0 00 000001 		ADDI	P2,1		; USE CEILING
   782	400647'	261 01 0 00 400630*		PUSH	STACK,SYSTR	; START PUSHING THE STRING
   783	400650'	200 06 0 04 000000 		MOVE	S1,0(PLINK)	; GET ADDR OF S.ID
   784	400651'	261 01 0 06 000000 		PUSH	STACK,0(S1)	; PUSH 2ND HALF
   785
   786	400652'	265 06 0 00 400723'		JSP	SLINK,LINE	; PRODUCE THE WRITE-OUT
   787	400653'	000000	000002			XWD	0,2
   788	400654'	002010	000005			XWD	IDT+7,P2
   789	400655'	000001	000001			XWD	STACK,1
   790
   791	400656'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
   792
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 14
SNOINT	MAC	13-Oct-66 22:04		TERMINATIONS (ERRST, ETERM, EOP, END, STAT)

   793
   794						SUBTTL	SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)
   795
   796					;	THE PRIMARY FUNCTION EVAL
   797					;	MAKE SURE VALUE IS AN EXPRESSION
   798					;	ALSO PUSH THE CURRENT 'STATE'.
   799	400657'	200 00 0 01 777777 	EVAL::	MOVE	Z,-1(STACK)	; GET FIRST DESCR. WORD
   800	400660'	312 00 0 00 400224*		CAME	Z,NULLST	; IS IT THE NULL STRING?
   801	400661'	603 00 0 00 002000 		TLNE	Z,NUMDC		; OR IS IT A NUMBER?
   802	400662'	254 00 0 04 000001 		JRST	1(PLINK)	; RETURN IF EITHER
   803
   804	400663'	554 00 0 01 777777 		HLRZ	Z,-1(STACK)	; GET DATATYPE
   805	400664'	306 00 0 00 004006 		CAIN	Z,EDT		; IF ALREADY EXPRESSION ...
   806	400665'	254 00 0 00 400670'		JRST	EVAL1		; AVOID CONVERT
   807	400666'	265 11 0 00 000000*		JSP	TLINK,CVTSTR	; TO STRING
   808	400667'	003 01 0 00 000102 		ERROR.	1,66		; BAD ARGUMENT
   809
   810	400670'	201 05 0 01 777777 	EVAL1:	MOVEI	P2,-1(STACK)	; POINT TO ARG
   811	400671'	261 01 0 00 000004 		$PUSH	<P1,P2>		;[242] Save the P registers
   812	400672'	261 01 0 00 000005 
   813	400673'	265 00 0 00 000000*		PUSHSA	MI		; SAVE INTERP. AND PATT. MTCH. STATE
   814	400674'	000024	000000*
   815	400675'	261 01 0 05 000000 		PUSH	STACK,0(P2)	; PUSH ...
   816	400676'	261 01 0 05 000001 		PUSH	STACK,1(P2)	; ARGUMENT
   817	400677'	265 04 0 00 000000*		JSP	PLINK,CVTEXP##	; CONVERT
   818	400700'	254 00 0 00 400704'		JRST	EVAL2		; BAD SYNTAX - GO FAIL
   819	400701'	262 01 0 00 000000#		POP	STACK,ILOC+1	; RETRIEVE ...
   820	400702'	262 01 0 00 400606*		POP	STACK,ILOC	; EXPRESSION
   821	400703'	254 00 0 00 400067'		JRST	I.LOOP		; GO 'EXECUTE' EXPRESSION
   822
   823
   824
   825					;	SUCCESS RETURN TO EOE - FAIL RETURN TO EVAL2
   826	400704'	274 01 0 00 400440*	EVAL2:	SUB	STACK,XWD22	;POP STACK
   827	400705'	201 06 0 00 000001 	EOEF:	MOVEI	S1,1			; SIGNAL A FAIL
   828	400706'	254 00 0 00 400712'		JRST	EOEG	;COMMON MERGE
   829	400707'	262 01 0 00 000000#	EOE::	POP	STACK,FLAP##+1	; POP ...
   830	400710'	262 01 0 00 000000*		POP	STACK,FLAP##	; RETURNED VALUE.
   831	400711'	400 06 0 00 000000 		SETZ	S1,		; 0 IN S1 MEANS SUCCESS
   832	400712'	265 00 0 00 000000*	EOEG:	POPSA	MI		; RESTORE ...
   833	400713'	000024	400674*
   834	400714'	262 01 0 00 000005 		$POP	<P2,P1>		;[242] Restore the P registers
   835	400715'	262 01 0 00 000004 
   836	400716'	274 01 0 00 400704*		SUB	STACK,XWD22##	; POP ORIGINAL ARG
   837	400717'	326 06 0 04 000000 		JUMPN	S1,0(PLINK)	; FAIL EXIT
   838	400720'	261 01 0 00 400710*		PUSH	STACK,FLAP	; GOTTEN VALUE IS ...
   839	400721'	261 01 0 00 000000#		PUSH	STACK,FLAP+1	; PUSHED BACK ON STACK
   840	400722'	254 00 0 04 000001 		JRST	1(PLINK)	; TAKE SUCCESS EXIT
   841
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 15
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

   842
   843					;	***** THE UTILITIES - LINE & LINE. *****
   844					;
   845					;	CALLING SEQUENCE:
   846					;	JSP	SLINK,LINE
   847					;	XWD	FILE,N	; IO-DESCRIPTOR,# OF ARGS
   848					;	XWD	TYPE1,LOC1
   849					;	XWD	TYPE2,LOC2
   850					;	...
   851					;	XWD	TYPEN,LOCN
   852					;
   853					;	TYPE= SDT, IDT+K OR STACK
   854					;	LOC=	(FOR SDT) LOCATION OF 2ND WORD OF STRING
   855					;		DESCRIPTOR. FIRST WORD IS $ALPHA OR SYSTR
   856					;	 =	(FOR IDT+K) LOCATION OF INTEGER.
   857					;		INTEGER IS PRINTED IN IK FORMAT.
   858					;	 =	(FOR STACK) 1,2,3 ... INDICATING 1ST, 2ND,
   859					;		3RD ... DESCRIPTOR ON STACK (STACK POPPED).
   860					;
   861					;	JSP	SLINK,LINE.	DOES THE SAME THING EXCEPT A 
   862					;	WRITE IS AVOIDED AND THE STRING IS RETURNED.
   863					;
   864					;	ROLES PLAYED BY VARIOUS S-TYPE LOCATIONS.
   865					;
   866					;	S1 - MEANDERS OVER THE ARGUMENT LIST
   867					;	S2 - KEEPS TRACK OF THE # OF ARGS TO LINE
   868					;	S3 - GENERAL UTILITY
   869					;	IGNOS - ARG. COUNT FOR CONCAT
   870					;	IGNOS+1 - HOLDS INITIAL VALUE OF STACK
   871					;	IGNOS+2 - FLAG (0 OR -1) INDICATING ENTRY
   872					;	IGNOS+3 - MAX. STACK REFERENCE
   873
   874	400723'				LINE::
   875	400723'	402 00 0 00 000000#		CLEARM	IGNOS##+2		; ENTRY POINT FLAG
   876	400724'	334 00 0 00 000000 		SKIPA
   877	400725'				LINE.::
   878	400725'	476 00 0 00 000000#		SETOM	IGNOS##+2	; ENTRY POINT FLAG
   879	400726'	402 00 0 00 000000*		CLEARM	IGNOS##		; INITIALIZE ARG COUNT (CONCAT)
   880	400727'	402 00 0 00 000000#		CLEARM	IGNOS##+3		; MAX. STACK REF.
   881	400730'	202 01 0 00 000000#		MOVEM	STACK,IGNOS##+1   ; SAVE STACK
   882	400731'	550 07 0 06 000000 		HRRZ	S2,0(SLINK)	; ARG COUNT FOR LINE
   883	400732'	271 06 0 07 000001 		ADDI	S1,1(S2)	; S1 WILL POINT TO ARGS.
   884
   885
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 16
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

   886
   887					;	TOP OF LOOP - HERE TO GET NEXT ARG
   888	400733'	360 06 0 00 000000 	LINE1:	SOJ	S1,		; COUNTING DOWN
   889	400734'	554 00 0 06 000000 		HLRZ	Z,0(S1)		; PICK UP TYPE
   890	400735'	302 00 0 00 004003 		CAIE	Z,SDT		; SKIP IF STRING
   891	400736'	254 00 0 00 400751'		JRST	LINE2		; TRY SOMETHING ELSE
   892
   893					;	FALL THROUGH FOR STRINGS
   894	400737'	200 10 0 06 000000 		MOVE	S3,0(S1)	; PICK UP LOC
   895	400740'	550 11 0 10 000000 		HRRZ	T1,0(S3)	; GET LENGTH
   896	400741'	201 12 0 00 000000*		MOVEI	T2,$ALPHA##	; USE $ALPHA
   897	400742'	302 11 0 00 000001 		CAIE	T1,1		; IF LENGTH = 1
   898	400743'	201 12 0 00 400647*		MOVEI	T2,SYSTR	; ELSE USE SYSTR
   899	400744'	261 01 0 12 000000 		PUSH	STACK,0(T2)	; PUSH FIRST WORD
   900	400745'	261 01 0 10 000000 		PUSH	STACK,0(S3)	; PUSH 2ND WORD
   901
   902	400746'	350 00 0 00 400726*		AOS	IGNOS		; INCREASE CONCAT ARG COUNT
   903	400747'	367 07 0 00 400733'		SOJG	S2,LINE1	; LOOP ON S2
   904	400750'	254 00 0 00 401014'		JRST	LINE3		; END OF PROCESSING
   905
   906					;	HERE IF NOT SDT
   907	400751'	606 00 0 00 002000 	LINE2:	TRNN	Z,NUMDC		; SKIP IF IDT
   908	400752'	254 00 0 00 400776'		JRST	LINE2A		; NOT IDT - BRANCH
   909
   910	400753'	275 00 0 00 002001 		SUBI	Z,IDT		; DETERMINE FORMAT LENGTH
   911
   912	400754'	205 10 0 00 002001 		MOVSI	S3,IDT		; FOR 1ST DESCRIPTOR WORD
   913	400755'	261 01 0 00 000010 		PUSH	STACK,S3	; AND PUSH ONTO STACK
   914	400756'	200 10 0 06 000000 		MOVE	S3,0(S1)	; PICK UP LOC
   915	400757'	261 01 0 10 000000 		PUSH	STACK,0(S3)	; PUSH ACTUAL INTEGER
   916
   917	400760'	200 10 0 00 000000 		MOVE	S3,Z		; SAVE FORMAT LENGTH
   918
   919	400761'	265 11 0 00 400666*		JSP	TLINK,CVTSTR##	; CONVERT INTEGER TO STRING
   920	400762'	001 17 0 00 000000 		ERROR	15		; CAN'T FAIL
   921
   922	400763'	350 00 0 00 400746*		AOS	IGNOS		; INCR. ARG COUNT FOR CONCAT
   923	400764'	550 00 0 01 000000 		HRRZ	Z,0(STACK)	; EXTRACT LENGTH OF STRING
   924	400765'	276 10 0 00 000000 		SUBM	S3,Z		; DEDUCT LENGTH FROM FORMAT
   925									; (RESULT TO Z)
   926	400766'	323 00 0 00 400774'		JUMPLE	Z,LINE4		; AVOID PREFIX IF NOT NEEDED
   927
   928	400767'	261 01 0 00 400741*		PUSH	STACK,$ALPHA	; PUSH BLANK
   929	400770'	261 01 0 00 401216'		PUSH	STACK,[" ",,1]	; ONTO STACK
   930	400771'	265 11 0 00 000000*		JSP	TLINK,DUPLI##	; OBTAIN PAD CHAR.
   931	400772'	001 17 0 00 000000 		ERROR	15		; BAD FORMAT
   932
   933	400773'	350 00 0 00 400763*		AOS	IGNOS		; INCREMENT CONCAT ARG CNT
   934
   935					;	MERGE HERE IF BLANKS NOT NEEDED
   936	400774'				LINE4:
   937	400774'	367 07 0 00 400733'		SOJG	S2,LINE1	; LOOP ON S2
   938	400775'	254 00 0 00 401014'		JRST	LINE3		; FINAL WRAP-UP
   939
   940					;	DRIFT HERE FROM NO SDT, NO IDT CASE
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 16-1
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

   941	400776'				LINE2A:
   942	400776'	302 00 0 00 000001 		CAIE	Z,STACK		; IS IT STACK
   943	400777'	001 17 0 00 000000 		ERROR	15		; CAN'T BE OTHERWISE
   944
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 17
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

   945
   946	401000'	550 10 0 06 000000 		HRRZ	S3,0(S1)	; GET INDEX OF STACK ELEMENT
   947	401001'	313 10 0 00 000000#		CAMLE	S3,IGNOS+3	; GREATER THAN ANY PREV.?
   948	401002'	202 10 0 00 000000#		MOVEM	S3,IGNOS+3	; YES - NEW HIGH
   949	401003'	550 11 0 00 000000#		HRRZ	T1,IGNOS+1	; RETRIEVE STACK POINTER
   950	401004'	275 11 0 10 000000 		SUBI	T1,0(S3)	; ADJUST TO POINT TO ...
   951	401005'	275 11 0 10 000000 		SUBI	T1,0(S3)	; DESCRIPTOR - 1
   952
   953	401006'	261 01 0 11 000001 		PUSH	STACK,1(T1)	; PUSH FIRST WORD
   954	401007'	261 01 0 11 000002 		PUSH	STACK,2(T1)	; AND SECOND WORD
   955	401010'	265 11 0 00 400761*		JSP	TLINK,CVTSTR	; ENSURE ...
   956	401011'	001 17 0 00 000000 		ERROR	15		; STRING
   957
   958	401012'	350 00 0 00 400773*		AOS	IGNOS		; INCREASE ARG COUNT (CONCAT)
   959	401013'	367 07 0 00 400733'		SOJG	S2,LINE1	; LOOP ON S2
   960
   961					;	HERE IF NO ARGS ARE LEFT
   962	401014'	200 00 0 00 401012*	LINE3:	MOVE	Z,IGNOS		; ARG COUNT FOR CONCAT
   963	401015'	307 00 0 00 000001 		CAIG	Z,1		; MORE THAN 1 ARG
   964	401016'	254 00 0 00 401021'		JRST	LINE6		; NO - DON'T CONCAT
   965	401017'	265 11 0 00 000000*		JSP	TLINK,CONCAT##	; CONCATENATE ALL
   966	401020'	001 17 0 00 000000 		ERROR	15
   967
   968					;	JUMP HERE FROM NO CONCAT
   969	401021'				LINE6:
   970	401021'	332 00 0 00 000000#		SKIPE	IGNOS+2		; SKIP IF ENTRY WAS LINE
   971	401022'	254 00 0 00 401045'		JRST	LINE5		; AVOID WRITE
   972
   973					; DETERMINE AND LOAD FILE
   974	401023'	554 07 0 06 777777 		HLRZ	S2,-1(S1)	; PICK UP FILE DESCR
   975	401024'	336 00 0 00 000007 		SKIPN	S2		; DEFAULT IS ...
   976	401025'	201 07 0 00 400441*		MOVEI	S2,LISTF	; LISTF
   977	401026'	200 13 0 07 000001 		DMOVE	T2,0(S2)	; MOVE FILE
   978	401027'	200 12 0 07 000000 
   979									; DESCR INTO REGS.
   980
   981	401030'	265 11 0 00 000000*		JSP	TLINK,WRITE##	; WRITE THE RECORD
   982	401031'	001 14 0 00 000005 		ERROR	12,5	
   983
   984					;	MERGE HERE FROM NO WRITE CASE
   985	401032'				LINE7:
   986					; POP STACK BY MAX STACK ARG
   987	401032'	540 10 0 00 000000#		HRR	S3,IGNOS+3	; MAX STACK ARG
   988	401033'	242 10 0 00 000001 		LSH	S3,1		; DOUBLED
   989	401034'	504 10 0 00 000010 		HRL	S3,S3		; BOTH HALVES
   990	401035'	274 01 0 00 000010 		SUB	STACK,S3	; POP STACK
   991
   992					; RETURN TO SENDER
   993	401036'	550 07 0 06 777777 		HRRZ	S2,-1(S1)	; LOAD # OF ARGS
   994	401037'	271 06 0 07 000000 		ADDI	S1,0(S2)	; FIND RETURN LOC
   995	401040'	336 00 0 00 000000#		SKIPN	IGNOS+2		; SKIP IF ENTRY WAS LINE.
   996	401041'	254 00 0 06 000000 		JRST	0(S1)		; RETURN FROM LINE
   997	401042'	261 01 0 00 000000*		PUSH	STACK,FLAS##	; PUSH STRING
   998	401043'	261 01 0 00 000000#		PUSH	STACK,FLAS##+1	; BACK ONTO STACK
   999	401044'	254 00 0 06 000000 		JRST	0(S1)		; RETURN FROM LINE.
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 17-1
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

  1000
  1001					; HERE IF NO WRITE 
  1002	401045'	262 01 0 00 000000#	LINE5:	POP	STACK,FLAS##+1	; SIMULATE WRITE
  1003	401046'	262 01 0 00 401042*		POP	STACK,FLAS	; BY POPPING STACK
  1004	401047'	254 00 0 00 401032'		 JRST	LINE7		; JOIN NORMAL PROCESSING
  1005
  1006
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 18
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

  1007
  1008					;	***** THE PRIMARY FUNCTION NEGATE (\) *****
  1009
  1010
  1011						 ; THE ARGUMENT IS NOT EVALUATED BECAUSE FAILURE
  1012						 ; DURING EVALUATION BY THE INTERPRETER WOULD NOT
  1013						 ; WORK FOR INPUT-ASSOCIATED VARIABLES
  1014
  1015	401050'	265 11 0 00 401127'	NEG::	JSP	TLINK,CVTVAL	; MAKE A VALUE OUT OF IT
  1016	401051'	254 00 0 00 000000*		JRST	RETNL1##	; TURN FAILURE INTO SUCCESS
  1017	401052'	254 00 0 00 000000*		JRST	FRET1##		; TURN SUCCESS INTO FAILURE
  1018
  1019
  1020					;	***** THE PRIMARY FUNCTION - INTEROGATION (?) *****
  1021
  1022					;	FUNC	QUEST$,1,E
  1023					;	JRST	RETNL1##	; JUST RETURN NULL
  1024
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 19
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

  1025
  1026					;	***** THE UTILITY ASGNVL *****
  1027					; CALLING SEQUENCE:
  1028					;	JSP	TLINK,ASGNVL
  1029					;	FAIL		; STACK CLEARED
  1030					;	SUCCESS	; VARIABLE REMAINS, VALUE IS POPPED
  1031
  1032	401053'				ASGNVL::
  1033	401053'	554 00 0 01 777775 		HLRZ	Z,-3(STACK)	; PICK UP DATATYPE OF 1ST ARG
  1034	401054'	302 00 0 00 064000 		CAIE	Z,VAR		; IF VARIABLE, SKIP
  1035	401055'	254 00 0 00 401073'		JRST	ASGN1		; ASSIGN TO THE TRAPPED VARIABLE
  1036
  1037	401056'	200 12 0 01 777775 		MOVE	T2,-3(STACK)	; GET POINTER ...
  1038	401057'	270 12 0 01 777776 		ADD	T2,-2(STACK)	; TO CURRENT DESCRIPTOR VALUE
  1039
  1040	401060'	554 00 0 12 000000 		HLRZ	Z,0(T2)		; LOAD DATATYPE
  1041	401061'	306 00 0 00 034000 		CAIN	Z,TVAR		; CHECK FOR TRAPPED VARIABLE
  1042	401062'	254 00 0 00 401066'		JRST	ASGN2		; JUMP IF ITS A TRAP
  1043
  1044	401063'	262 01 0 12 000001 		POP	STACK,1(T2)	; POP VALUE ...
  1045	401064'	262 01 0 12 000000 		POP	STACK,0(T2)	; INTO VARIABLE
  1046	401065'	254 00 0 11 000001 		JRST	1(TLINK)	; AND RETURN
  1047
  1048					;	HERE IF VARIABLE POINTS TO TRAPPED VARIABLE
  1049	401066'	200 00 0 12 000000 	ASGN2:	MOVE	Z,0(T2)		; PICK UP TRAPPED VARIABLE
  1050	401067'	202 00 0 01 777775 		MOVEM	Z,-3(STACK)	; PLACE INTO STACK
  1051	401070'	200 00 0 12 000001 		MOVE	Z,1(T2)		; PICK UP 2ND WORD OF TV
  1052	401071'	202 00 0 01 777776 		MOVEM	Z,-2(STACK)	; PLACE IT IN STACK
  1053	401072'	254 00 0 00 401075'		JRST	ASGN3		; FLOW AROUND OBSTACLE
  1054
  1055					;	HERE IF NOT A VARIABLE
  1056	401073'	302 00 0 00 034000 	ASGN1:	CAIE	Z,TVAR		; BETTER BE A TRAPPED V.
  1057	401074'	001 16 0 00 000011 		ERROR	14,9		; NO - ILLEGAL ACT
  1058
  1059					;	MERGE HERE FROM ABOVE
  1060	401075'				ASGN3:
  1061	401075'	200 13 0 00 000001 		MOVE	T3,STACK	; SAVE CURRENT STACK POSITION
  1062	401076'	265 00 0 00 400673*		PUSHSA	S		; ELEVATE PRIVILEGE
  1063	401077'	000011	000000*
  1064	401100'	265 00 0 00 400012*		PUSHR	ST		; TO THAT OF TYPE S
  1065	401101'	000010	000006
  1066	401102'	261 01 0 13 777775 		PUSH	STACK,-3(T3)	; BRING ...
  1067	401103'	261 01 0 13 777776 		PUSH	STACK,-2(T3)	; UP VALUES ...
  1068	401104'	261 01 0 13 777777 		PUSH	STACK,-1(T3)	; FROM ...
  1069	401105'	261 01 0 13 000000 		PUSH	STACK,0(T3)	; DOWN BELOW
  1070
  1071	401106'	200 06 0 01 777776 		MOVE	SLINK,-2(STACK)	; POINT TO TV LOC
  1072	401107'	265 06 0 06 000002 		JSP	SLINK,2(SLINK)	; SPRING OFF TO DO ASSIGN.
  1073	401110'	634 15 0 00 000015 		TDZA	Q1,Q1		; ON FAIL SET Q1 TO 0
  1074	401111'	201 15 0 00 000001 		MOVEI	Q1,1		; ON SUCCESS SET Q1 TO 1
  1075
  1076	401112'	262 01 0 00 000000#		POP	STACK,FLAT##+1	; POP THE TRAPPED VARIABLE
  1077	401113'	262 01 0 00 000000*		POP	STACK,FLAT##
  1078	401114'	265 00 0 00 400022*		POPR	ST		; RESTORE ...
  1079	401115'	000007	000006
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 19-1
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

  1080	401116'	265 00 0 00 400712*		POPSA	S		; THE STACK
  1081	401117'	000011	401077*
  1082	
  1083	401120'	312 13 0 00 000001 		CAME	T3,STACK	; A LITTLE CHECK
  1084	401121'	001 17 0 00 000000 		ERROR	15		; ON STACK CORRECTEDNESS
  1085
  1086	401122'	274 01 0 00 000000*		SUB	STACK,XWD44##	; REMOVE BOTH VALUES 
  1087	401123'	322 15 0 11 000000 		JUMPE	Q1,0(TLINK)	; FAIL IF Q1 = 0
  1088	401124'	261 01 0 00 401113*		PUSH	STACK,FLAT	; RESTORE TRAPPED VARIABLE
  1089	401125'	261 01 0 00 000000#		PUSH	STACK,FLAT+1
  1090	401126'	254 00 0 11 000001 		JRST	1(TLINK)	; TAKE SUCCESS EXIT
  1091
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 20
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

  1092
  1093					;	***** THE UTILITY CVTVAL *****
  1094
  1095					;	CONVERTS AN ARBITRARY DESCRIPTOR TO A VALUE
  1096					; CALLING SEQUENCE:
  1097					;	PUSH A DESCRIPTOR ONTO STACK
  1098					;	JSP	TLINK,CVTVAL
  1099					;	FAIL	; THE ORIGINAL DESCRIPTOR IS LEFT ON STACK
  1100					;	SUCCESS	; A VALUE DESCRIPTOR REPLACES THE DESCR. 
  1101
  1102	401127'				CVTVAL::
  1103	401127'	554 00 0 01 777777 		HLRZ	Z,-1(STACK)	; GET DATATYPE TO Z
  1104	401130'	606 00 0 00 020000 		TRNN	Z,NONDC		; SKIP IF NOT ALREADY A VALUE
  1105	401131'	254 00 0 11 000001 		JRST	1(TLINK)	; IMMEDIATE SUCCESSFUL RETURN
  1106
  1107	401132'	606 00 0 00 040000 		TRNN	Z,INDC		; SKIP IF A VARIABLE OR CONSTANT
  1108	401133'	254 00 0 00 401142'		JRST	CVTVL1		; BRANCH IF OTHER
  1109
  1110	401134'	200 12 0 01 777777 		MOVE	T2,-1(STACK)	; GET ADDRESS OF
  1111	401135'	270 12 0 01 000000 		ADD	T2,0(STACK)	; NEW DESCRIPTOR
  1112
  1113	401136'	274 01 0 00 400716*		SUB	STACK,XWD22##	; POP OLD VALUE
  1114	401137'	261 01 0 12 000000 		PUSH	STACK,0(T2)	; PUSH THIS ...
  1115	401140'	261 01 0 12 000001 		PUSH	STACK,1(T2)	; DESCRIPTOR AND
  1116	401141'	254 00 0 00 401127'		JRST	CVTVAL		; DO IT AGAIN
  1117
  1118					;	HERE FOR TRAPPED VARIABLES
  1119	401142'	302 00 0 00 034000 	CVTVL1:	CAIE	Z,TVAR		; CHECK IF TRAPPED
  1120	401143'	001 17 0 00 000000 		ERROR	15		; REAL TROUBLE
  1121	401144'	201 12 0 01 777777 		MOVEI	T2,-1(STACK)	; POINT TO TRAPPED VARIABLE
  1122	401145'	265 00 0 00 401076*		PUSHSA	S		; ELEVATE PRIV TO 
  1123	401146'	000011	401117*
  1124	401147'	265 00 0 00 401100*		PUSHR	ST		; THAT OF TYPE S
  1125	401150'	000010	000006
  1126	401151'	261 01 0 12 000000 		PUSH	STACK,0(T2)	; PUSH ...
  1127	401152'	261 01 0 12 000001 		PUSH	STACK,1(T2)	; TV
  1128	401153'	200 06 0 01 000000 		MOVE	SLINK,0(STACK)	; POINT TO LOC
  1129	401154'	265 06 0 06 000000 		JSP	SLINK,0(SLINK)	; MAKE CALL TO GET VALUE
  1130	401155'	634 16 0 00 000016 		TDZA	Q2,Q2		; SET Q2 TO 0 FOR FAIL
  1131	401156'	201 16 0 00 000001 		MOVEI	Q2,1		; OTHERWISE TO 1
  1132	401157'	262 01 0 00 000000#		POP	STACK,FLAQ##+1	; RETRIEVE ...
  1133	401160'	262 01 0 00 000000*		POP	STACK,FLAQ##	; VALUE
  1134	401161'	265 00 0 00 401114*		POPR	ST		; RETORE CONDI-
  1135	401162'	000007	000006
  1136	401163'	265 00 0 00 401116*		POPSA	S		; TIONS
  1137	401164'	000011	401146*
  1138	401165'	274 01 0 00 401136*		SUB	STACK,XWD22##	; REMOVE OLD VALUE
  1139	401166'	261 01 0 00 401160*		PUSH	STACK,FLAQ	; PUT
  1140	401167'	261 01 0 00 000000#		PUSH	STACK,FLAQ+1	; RETURNED VALUE BACK ON STACK
  1141	401170'	322 16 0 11 000000 		JUMPE	Q2,0(TLINK)	; AND TAKE APPROPRIATE ...
  1142	401171'	254 00 0 00 401127'		JRST	CVTVAL		; TRY AGAIN
  1143
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 21
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

  1144
  1145					;	***** THE UTILITY, LOCVAL *****
  1146
  1147					; CALLING SEQUENCE:
  1148					;	LOAD	Q2 WITH ADDRESS OF DESCRIPTOR
  1149					;	JSP	QLINK,LOCVAL
  1150					;	RETURN		; Q2 IS ADJUSTED TO POINT TO VALUE
  1151
  1152	401172'				LOCVAL::
  1153	401172'	554 00 0 16 000000 		HLRZ	Z,0(Q2)		; PICK UP DATATYPE
  1154	401173'	606 00 0 00 020000 		TRNN	Z,NONDC		; SKIP IF NOT DATA
  1155	401174'	254 00 0 15 000000 		JRST	0(QLINK)	; RET IMM. IF ALREADY DATA
  1156
  1157	401175'	606 00 0 00 040000 		TRNN	Z,INDC		; TEST FOR INDIRECT DATA
  1158	401176'	254 00 0 00 401203'		JRST	LOCVL1		; NO - MUST BE TVAR
  1159
  1160	401177'	200 17 0 16 000000 		MOVE	Q3,0(Q2)	; PICK UP FIRST DESCR. WORD
  1161	401200'	270 17 0 16 000001 		ADD	Q3,1(Q2)		; ADD IN OFFSET
  1162	401201'	540 16 0 00 000017 		HRR	Q2,Q3		; MAKE Q2 POINT THERE
  1163	401202'	254 00 0 00 401172'		JRST	LOCVAL		; ONCE AROUND AGAIN.
  1164
  1165					;	HERE IF TRAPPED VARIABLE
  1166	401203'	302 00 0 00 034000 	LOCVL1:	CAIE	Z,TVAR		; MIGHT AS WELL CHECK
  1167	401204'	001 17 0 00 000000 		ERROR	15		; OUR ERROR
  1168
  1169	401205'	200 16 0 16 000000 		MOVE	Q2,0(Q2)	; POINT TO UTBLOK
  1170	401206'	201 16 0 16 000002 		MOVEI	Q2,LHDR(Q2)	; VALUE IS HERE
  1171	401207'	254 00 0 00 401172'		JRST	LOCVAL		; CHECK AGAIN
  1172
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 22
SNOINT	MAC	13-Oct-66 22:04		SP. FUNCS. (EVAL LINE NEG$ QUEST$ CVTVAL ASGNVL LOCVAL)

  1173
  1174						END

NO ERRORS DETECTED

HI-SEG. BREAK IS 401217
PROGRAM BREAK IS 000000
CPU TIME USED 08:25.920

44P CORE USED
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page S-1
SNOINT	MAC	13-Oct-66 22:04		SYMBOL TABLE

ASGN1		401073'		FAAFL		000004	sin	ILOC		400702'	ext	P2		000005		
ASGN2		401066'		FCODE		000003	sin	INDC		040000	sin	PLINK		000004		
ASGN3		401075'		FEAFL		000001	sin	INTASC	446352	400000	spd	PPL		000011	spd	
ASGNVL		401053'	int	FFLAGS		000002	sin	INTEDT		000257	spd	PPR		401161'	ext	
AUTOHS		400610'	ext	FLAP		400720'	ext	INTMIN		000000	spd	PPSA		401163'	ext	
BGST		400046'	int	FLAQ		401166'	ext	INTSIX	515664	000000	spd	PREX		400027'	ext	
CCODE		000004	sin	FLAS		401046'	ext	INTVER		000005	spd	PRINTE		400446'	ext	
CDARGS		007777	sin	FLAT		401124'	ext	INTWHO		000000	spd	PRINTF		400002'	ext	
CDFF		200000	sin	FLDC		004000	sin	ISTAF		400024'		PSHR		401147'	ext	
CDFLGS		770000	sin	FLOOR		400542'	ext	ISTART		400000'	int	PSHSA		401145'	ext	
CDIFF		400000	sin	FNARGS		000002	sin	KSTAT		400642'		Q1		000015		
CDT		004007	sin	FRET1		401052'	ext	KWHIST		000000	ext	Q2		000016		
CEIL		400523'	ext	FSAFL		000002	sin	LCLINK		000002	sin	Q3		000017		
CFGOTO		000001	sin	FTDDT	777777	777777	spd	LFBLOK		400217'	ext	QLINK		000015		
CHEAD		000000	sin	FTDEBU		000000	spd	LHDR		000002	sin	REGP		000004	spd	
CLAST		000002	sin	GOTO		400257'	int	LINE		400723'	int	REGS		000006	spd	
CLOSIO		400612'	ext	GOTO2		400304'		LINE.		400725'	int	RETNL1		401051'	ext	
CNEXT		000002	sin	GOTO3		400272'		LINE1		400733'		S.AVE		400476'	ext	
CODE		400603'	ext	GOTO3A		400275'		LINE2		400751'		S.CMTM		400460'	ext	
CONCAT		401017'	ext	GOTOB		400340'		LINE2A		400776'		S.DMP		400431'	ext	
CRULE		000003	sin	GOTOLP		400347'		LINE3		401014'		S.EOC		400021'	ext	
CSTNO		000001	sin	GOTON1		400325'		LINE4		400774'		S.EXTM		400466'	ext	
CVTEXP		400677'	ext	GOTONE		400351'		LINE5		401045'		S.FLD		400504'	ext	
CVTINT		400320'	ext	GOTONU		400316'		LINE6		401021'		S.FLID		400541'	ext	
CVTSTR		401010'	ext	GRID		400565'	ext	LINE7		401032'		S.GC		400510'	ext	
CVTVAL		401127'	int	GROUND		400243'	ext	LISTF		401025'	ext	S.GRID		400547'	ext	
CVTVL1		401142'		HIWATR		400526'	ext	LOCVAL		401172'	int	S.HGH		400522'	ext	
DGOTO		400354'	int	HSBASE		400560'	ext	LOCVL1		401203'		S.HIST		400602'	ext	
DUMP$		000000	ext	I.BUMP		400070'	int	LREGP		000002	spd	S.HST		400564'	ext	
DUPLI		400771'	ext	I.CALL		400154'		LREGS		000003	spd	S.LAST		400420'	ext	
E1$66		000000	sin	I.EA		400112'		LREGT		000004	spd	S.LOW		400533'	ext	
E11$6		000000	sin	I.EA1		400115'		LRGOTO		400371'	int	S.MLOW		400531'	ext	
E12$2		000000	sin	I.EA2		400116'		LSAVEI		000010	spd	S.NINS		400514'	ext	
E12$5		000000	sin	I.EA3		400130'		LSAVEM		000014	spd	S.NORM		400407'	ext	
E13$0		000000	sin	I.EA4		400131'		LSAVES		000011	spd	S.NOUT		400520'	ext	
E14$9		000000	sin	I.ETV		400134'		LTFLAG		200000	sin	S.NST		400561'	ext	
E15$		000000	sin	I.FAIL		400235'	int	LTRC		400304'	ext	S.SMNT		400411'	ext	
E4$2		000000	sin	I.FL1		400200'		LVTBL		400575'	ext	S.SST		400572'	ext	
E8$2		000000	sin	I.FL2		400204'		MARGIN		000100	spd	S.STAT		400452'	ext	
E8$5		000000	sin	I.FLA		400174'		MSTIME		400402'	ext	S.STEX		400502'	ext	
E8$6		000000	sin	I.FLIN		400227'		NCLINK		000003	sin	S.STKS		400556'	ext	
E8$7		000000	sin	I.FN		400100'	int	NDT		004011	sin	S.USED		400637'	ext	
EDT		004006	sin	I.JRST		400077'	ext	NEG		401050'	int	S.VTBL		400576'	ext	
END		400400'	int	I.LOOP		400067'	int	NEG$		400220'	ext	S1		000006		
EOE		400707'	int	I.NEXT		400245'		NGCS		400507'	ext	S2		000007		
EOEF		400705'		I.SA		400151'		NINS		400513'	ext	S3		000010		
EOEG		400712'		I.SA1		400157'		NLMPGN		400444'	ext	SAVEM		400713'	ext	
EOP		400400'	int	I.SALP		400167'		NLPGNO		400445'	ext	SAVES		401164'	ext	
ERR	001000	000000		IBEGIN		400042'	int	NONDC		020000	sin	SDT		004003	sin	
ERR.	003000	000000		IDT		002001	sin	NOUTS		400517'	ext	SLINK		000006		
ERRST		400377'	int	IFAIL		400173'	int	NSBASE		400551'	ext	STACK		000001		
ETERM		400415'	int	IGNOP		400640'	ext	NULLST		400660'	ext	STAT		400424'		
EVAL		400657'	int	IGNOS		401014'	ext	NUMDC		002000	sin	STAT1		400505'		
EVAL1		400670'		IGOTO		400364'	int	OPFLAG		400000	sin	STAT2		400441'		
EVAL2		400704'		ILABEL		400371'	ext	P1		000004		STBASE		400563'	ext	
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page S-2
SNOINT	MAC	13-Oct-66 22:04		SYMBOL TABLE

STCTRC		400064'	ext	
STFTRC		400234'	ext	
STKST		400613'		
STKST1		400626'		
STKST2		400621'		
STSAVE		400173'	ext	
SYSTR		400743'	ext	
T1		000011		
T2		000012		
T3		000013		
TIME.C		400462'	ext	
TIME.E		400461'	ext	
TIME.S		400454'	ext	
TLINK		000011		
TRVAL		000002	sin	
TVAR		034000	sin	
TVDC		010000	sin	
VAR		064000	sin	
VFLAGS		000006	sin	
VLABEL		000002	sin	
WRITE		401030'	ext	
XERRF		000000	ext	
XWD22		401165'	ext	
XWD44		401122'	ext	
Z		000000		
$ALPHA		400767'	ext	
$DUMP		400435'	ext	
$FNCLV		400410'	ext	
$LASTN		400050'	ext	
$STCNT		400501'	ext	
$STFCT		400503'	ext	
$STLIM		400061'	ext	
$STNO		400421'	ext	
%%JOBD	043100	000450	spd	
%%MACT	000200	000025	spd	
%%SNOP	000500	000305	spd	
.JBHRL		000115		


SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

ASGN1	  1035	  1056#
ASGN2	  1042	  1049#
ASGN3	  1053	  1060#
ASGNVL	  1032#
AUTOHS	   115	   543	   715	   727
BGST	   140#
CCODE	   527
CDARGS	   313	   338
CDFF	   178	   336
CDFLGS	   202
CDIFF	   200	   332
CDT	   431	   506
CEIL	   654
CFGOTO	   378
CHEAD	   137
CLAST	   479
CLOSIO	   544	   592	   716	   730
CNEXT	   389	   468
CODE	    86	   720
CONCAT	   965
CRULE	   160
CSTNO	   152
CVTEXP	   817
CVTINT	   454
CVTSTR	   807	   919	   955
CVTVAL	   452	   503	  1015	  1102#	  1116	  1142
CVTVL1	  1108	  1119#
DGOTO	   502#
DUMP$	   585
DUPLI	   930
E1$66	   808#
E11$6	   157#
E12$2	   598#
E12$5	   982#
E13$0	   287#
E14$9	  1057#
E15$	    82#	    87#	   121#	   453#	   586#	   721#	   920#	   931#	   943#	   956#	   966#	  1084#	  1120#	  1167#
E4$2	   536#
E8$2	   425#	   447#	   455#
E8$5	   412#
E8$6	   504#
E8$7	   474#	   485#
EDT	   805
END	   542#
EOE	   369	   829#
EOEF	   370	   827#
EOEG	   828	   832#
EOP	   539#
ERRST	   536#
ETERM	   561#
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

EVAL	   799#
EVAL1	   806	   810#
EVAL2	   818	   826#
FAAFL	   284
FCODE	   278	   585
FEAFL	   207
FFLAGS	   206
FLAP	   254	   260	   829	   830	   838	   839
FLAQ	  1132	  1133	  1139	  1140
FLAS	   997	   998	  1002	  1003
FLAT	  1076	  1077	  1088	  1089
FLDC	   253
FLOOR	   667	   674
FNARGS	   206
FRET1	  1017
FSAFL	   288
FTDDT	   134	   184	   187
FTDEBU	    92	   101	   813	   832	  1062	  1064	  1078	  1080	  1122	  1124	  1134	  1136
GOTO	   407#
GOTO2	   419	   437#
GOTO3	   422#	   441
GOTO3A	   427#	   446
GOTOB	   465	   478#
GOTOLP	   470	   475	   481	   488#
GOTON1	   462#	   490
GOTONE	   466	   493#
GOTONU	   410	   451#	   507
GRID	   675	   682	   699
GROUND	   105	   141	   382
HIWATR	   656	   657	   662
HSBASE	   692	   696
I.BUMP	   173#	   280	   352
I.CALL	   278#	   285	   289	   296
I.EA	   212#
I.EA1	   219#	   239	   264
I.EA2	   220#	   233
I.EA3	   221	   237#
I.EA4	   238#
I.ETV	   224	   249#
I.FAIL	   376#
I.FL1	   316#	   342
I.FL2	   330#	   341	   347
I.FLA	   310#
I.FLIN	   333	   367#
I.FN	   179	   196#
I.JRST	   188
I.LOOP	   171#	   383	   519	   821
I.NEXT	   380	   387#
I.SA	   208	   240	   273#
I.SA1	   275	   284#
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

I.SALP	   293#	   295
IBEGIN	   116	   133#	   393	   399	   435	   497	   510	   530	   729
IDT	   118	   553	   555	   566	   582	   608	   615	   624	   629	   631	   636	   641	   646	   671
	   679	   688	   709	   764	   767	   788	   910	   912
IFAIL	   258	   279	   306#
IGNOP	   203	   204	   213	   214	   251	   261	   273	   659	   665	   666	   701	   704	   756	   767
IGNOS	   875	   878	   879	   880	   881	   902	   922	   933	   947	   948	   949	   958	   962	   970
	   987	   995
IGOTO	   514#
ILABEL	   147	   148	   376	   377	   387	   388	   391	   396	   458	   459	   524
ILOC	   111	   112	   135	   136	   144	   145	   163	   171	   173	   175	   310	   311	   348	   349
	   379	   381	   390	   398	   432	   433	   494	   495	   508	   509	   515	   516	   518	   526
	   528	   723	   724	   819	   820
INDC	  1107	  1157
INTASC	    30#
INTEDT	    23#
INTMIN	    22#
INTSIX	    29#
INTVER	    21#
INTWHO	    24#
ISTAF	    96	   103#
ISTART	    78#
KSTAT	   651	   661	   664	   777#
KWHIST	   120
LCLINK	   483
LFBLOK	   345
LHDR	  1170
LINE	    98	   549	   562	   576	   600	   606	   613	   622	   627	   634	   639	   644	   669	   677
	   686	   707	   762	   786	   874#
LINE.	   877#
LINE1	   888#	   903	   937	   959
LINE2	   891	   907#
LINE2A	   908	   941#
LINE3	   904	   938	   962#
LINE4	   926	   936#
LINE5	   971	  1002#
LINE6	   964	   969#
LINE7	   985#	  1004
LISTF	    79	    80	    94	    95	    99	   591	   976
LOCVAL	  1152#	  1163	  1171
LOCVL1	  1158	  1166#
LREGP	    92	   101
LREGS	    92	   101	  1064	  1078	  1124	  1134
LREGT	    92	   101	  1064	  1078	  1124	  1134
LRGOTO	   523#
LSAVEI	   813	   832
LSAVEM	   813	   832
LSAVES	  1062	  1080	  1122	  1136
LTFLAG	   418	   440
LTRC	   437
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

LVTBL	   709
MARGIN	   655
MSTIME	    84	    89	   546
NCLINK	   397	   472	   525
NDT	   413
NEG	  1015#
NEG$	   346
NGCS	   636
NINS	   641
NLMPGN	   595
NLPGNO	   596
NONDC	   220	  1104	  1154
NOUTS	   646
NSBASE	   683	   692
NULLST	   293	   294	   350	   351	   800
NUMDC	   801	   907
OPFLAG	   423
P1	   135	   136	   137	   144	   145	   147	   148	   151	   152	   171	   173	   175	   176	   206
	   207	   274	   284	   286	   288	   291	   376	   377	   378	   387	   388	   389	   396	   397
	   398	   517	   518	   811	   835
P2	   137	   138	   151	   160	   163	   176	   178	   181	   200	   201	   202	   203	   204	   205
	   206	   253	   254	   260	   278	   378	   379	   381	   457	   465	   466	   478	   505	   506
	   515	   516	   517	   524	   525	   526	   527	   528	   604	   605	   608	   611	   612	   615
	   618	   621	   624	   654	   655	   657	   659	   666	   667	   671	   674	   675	   679	   682
	   684	   688	   699	   700	   701	   739	   740	   745	   746	   764	   778	   779	   780	   781
	   788	   810	   812	   815	   816	   834
PLINK	    86	   278	   585	   651	   661	   664	   691	   695	   703	   720	   739	   742	   759	   769
	   777	   783	   791	   802	   817	   837	   840
PPL	    92#	    92	    93	   101#	   101	   102	   813#	   813	   814	   832#	   832	   833	  1062#	  1062
	  1063	  1064#	  1064	  1065	  1078#	  1078	  1079	  1080#	  1080	  1081	  1122#	  1122	  1123	  1124#
	  1124	  1125	  1134#	  1134	  1135	  1136#	  1136	  1137
PPR	   101	  1078	  1134
PPSA	   832	  1080	  1136
PREX	   107
PRINTE	   597
PRINTF	    81
PSHR	    92	  1064	  1124
PSHSA	   813	  1062	  1122
Q1	   726	   727	  1073	  1074	  1087
Q2	   344	   346	  1130	  1131	  1141	  1153	  1160	  1161	  1162	  1169	  1170
Q3	   413	   414	  1160	  1161	  1162
QLINK	    84	    89	   345	   546	  1155
REGP	    92	    93	   101	   102
REGS	  1064	  1065	  1078	  1079	  1124	  1125	  1134	  1135
RETNL1	  1016
S.AVE	   625
S.CMTM	   609
S.DMP	   579
S.EOC	   100
S.EXTM	   616
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

S.FLD	   632
S.FLID	   672
S.GC	   637
S.GRID	   680
S.HGH	   652
S.HIST	   719
S.HST	   697
S.LAST	   565
S.LOW	   665
S.MLOW	   662
S.NINS	   642
S.NORM	   552
S.NOUT	   647
S.NST	   693
S.SMNT	   554
S.SST	   705
S.STAT	   602
S.STEX	   630
S.STKS	   689
S.USED	   766
S.VTBL	   710
S1	   155	   156	   290	   291	   295	   310	   311	   312	   330	   331	   344	   348	   349	   389
	   390	   391	   408	   409	   424	   427	   428	   431	   432	   444	   445	   446	   458	   459
	   462	   472	   473	   483	   484	   494	   495	   573	   574	   683	   684	   742	   743	   746
	   752	   755	   777	   778	   783	   784	   827	   831	   837	   883	   888	   889	   894	   914
	   946	   974	   993	   994	   996	   999
S2	   212	   213	   214	   219	   226	   229	   231	   237	   238	   249	   250	   251	   256	   261
	   262	   263	   312	   313	   316	   317	   318	   319	   340	   341	   342	   416	   417	   424
	   438	   439	   443	   444	   445	   463	   469	   480	   489	   745	   748	   751	   752	   755
	   756	   882	   883	   903	   937	   959	   974	   975	   976	   977	   978	   993	   994
S3	    81	   219	   220	   223	   226	   228	   230	   231	   331	   332	   336	   337	   338	   340
	   367	   417	   418	   423	   427	   429	   433	   439	   440	   462	   463	   468	   479	   597
	   759	   760	   894	   895	   900	   912	   913	   914	   915	   917	   924	   946	   947	   948
	   950	   951	   987	   988	   989	   990
SAVEM	   813	   813#	   814	   832	   833
SAVES	  1062	  1062#	  1063	  1080	  1081	  1122	  1123	  1136	  1137
SDT	   100	   551	   552	   554	   556	   564	   565	   567	   578	   579	   580	   602	   609	   616
	   625	   630	   632	   637	   642	   647	   672	   680	   689	   710	   766	   890
SLINK	    98	   120	   159	   256	   257	   374	   437	   549	   562	   576	   600	   606	   613	   622
	   627	   634	   639	   644	   669	   677	   686	   707	   762	   786	   882	  1071	  1072	  1128
	  1129
STACK	   103	   104	   105	   118	   119	   141	   181	   182	   196	   212	   238	   249	   250	   262
	   263	   293	   294	   306	   318	   350	   351	   382	   408	   411	   414	   416	   438	   457
	   505	   508	   509	   582	   583	   587	   718	   719	   723	   724	   758	   760	   765	   782
	   784	   789	   799	   804	   810	   811	   812	   815	   816	   819	   820	   826	   829	   830
	   834	   835	   836	   838	   839	   881	   899	   900	   913	   915	   923	   928	   929	   942
	   953	   954	   990	   997	   998	  1002	  1003	  1033	  1037	  1038	  1044	  1045	  1050	  1052
	  1061	  1066	  1067	  1068	  1069	  1071	  1076	  1077	  1083	  1086	  1088	  1089	  1103	  1110
	  1111	  1113	  1114	  1115	  1121	  1126	  1127	  1128	  1132	  1133	  1138	  1139	  1140
STAT	   558	   569	   572#
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

STAT1	   620	   634#
STAT2	   574	   589#
STBASE	   696	   704
STCTRC	   159
STFTRC	   374
STKST	   691	   695	   703	   739#
STKST1	   749	   755#
STKST2	   748#	   753
STSAVE	   196	   306
SYSTR	   718	   758	   782	   898
T1	   104	   109	   111	   112	   228	   229	   468	   469	   479	   480	   489	   895	   897	   949
	   950	   951	   953	   954
T2	    79	    80	    94	    95	   103	   110	   896	   898	   899	   977	   978	  1037	  1038	  1040
	  1044	  1045	  1049	  1051	  1110	  1111	  1114	  1115	  1121	  1126	  1127
T3	    96	  1061	  1066	  1067	  1068	  1069	  1083
TIME.C	    90	   604	   612
TIME.E	   547	   611
TIME.S	    85	   605
TLINK	   452	   454	   503	   807	   919	   930	   955	   965	   981	  1015	  1046	  1087	  1090	  1105
	  1141
TRVAL	   444	   445
TVAR	  1041	  1056	  1119	  1166
TVDC	   223
VAR	   409	  1034
VFLAGS	   417	   439
VLABEL	   424	   443
WRITE	   981
XERRF	   577
XWD22	   587	   826	   836	  1113	  1138
XWD44	  1086
Z	    85	    90	    92	   101	   142	   143	   152	   153	   273	   274	   286	   290	   367	   369
	   547	   594	   595	   799	   800	   801	   804	   805	   813	   832	   889	   890	   907	   910
	   917	   923	   924	   926	   942	   962	   963	  1033	  1034	  1040	  1041	  1049	  1050	  1051
	  1052	  1056	  1062	  1064	  1078	  1080	  1103	  1104	  1107	  1119	  1122	  1124	  1134	  1136
	  1153	  1154	  1157	  1166
$ALPHA	   896	   928
$DUMP	   573	   583	   584
$FNCLV	   553
$LASTN	   143
$STCNT	   155	   158	   619	   621	   629
$STFCT	   372	   373	   631
$STLIM	   156
$STNO	   142	   153	   555	   566
.JBHRL	   652
SNOINT - The Interpreter  %5(257)	MACRO %53B(1156)-1 21:47 14-Mar-88 Page 1
SNOINT	MAC	13-Oct-66 22:04		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Macro/Opdef cross reference

DMOVE	    79	    94	   144	   458	   977
DMOVEM	   111	   147	   494
ERR	    82	    87	   121	   157	   287	   412	   453	   474	   485	   504	   536	   586	   598	   721
	   920	   931	   943	   956	   966	   982	  1057	  1084	  1120	  1167
ERR.	   425	   447	   455	   808
ERROR	    82	    87	   121	   157	   287	   412	   453	   474	   485	   504	   536	   586	   598	   721
	   920	   931	   943	   956	   966	   982	  1057	  1084	  1120	  1167
ERROR.	   425	   447	   455	   808
INTPTX	    41
INTTTL	    40
MIDENT	    93	   102	   814	   833	  1063	  1065	  1079	  1081	  1123	  1125	  1135	  1137
POPR	   101	  1078	  1134
POPSA	   832	  1080	  1136
PPADDR	    92#	    93	   101#	   102	   813#	   814	   832#	   833	  1062#	  1063	  1064#	  1065	  1078#	  1079
	  1080#	  1081	  1122#	  1123	  1124#	  1125	  1134#	  1135	  1136#	  1137
PPINIT	    92	   101	   813	   832	  1062	  1064	  1078	  1080	  1122	  1124	  1134	  1136
PPLENG	    92#	    93	   101#	   102	   813#	   814	   832#	   833	  1062#	  1063	  1064#	  1065	  1078#	  1079
	  1080#	  1081	  1122#	  1123	  1124#	  1125	  1134#	  1135	  1136#	  1137
PUSHR	    92	  1064	  1124
PUSHSA	   813	  1062	  1122
SHOW.	    36	    37	    38
TITLE.	    28
$POP	   834
$PUSH	   811 	 t