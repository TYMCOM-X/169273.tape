SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76

     1						SUBTTL	MA355/JDS/DRH/MP/RCM/VB		15-JUN-76
     2
     3					; COPYRIGHT 1972,1973,1976,1977  STEVENS INSTITUTE OF TECHNOLOGY
     4					; HOBOKEN, NEW JERSEY, 07030
     5					; ALL RIGHTS RESERVED.
     6
     7					  ;UNIVERSALS
     8
     9						SEARCH	MACTEN		;DEC-10 COMMON MACROS
    10						SEARCH	SNOPRM		;SITBOL PARAMETERS
    11
    12					  ;DIRECTIVES
    13
    14						.DIRECT	.XTABM		;EXCLUDE TABS FROM MACRO CALLS
    15						SALL			;SUPPRESS MACRO EXPANSIONS
    16	400000'					TWOSEG	400K		;TWO SEGMENT CODE
    17
    18					  ;VERSION NUMBER
    19
    20			000005			LEXVER==5		;MAJOR VERSION NUMBER
    21			000000			LEXMIN==0		;MINOR VERSION NUMBER
    22			000254			LEXEDT==254		;EDIT LEVEL
    23			000000			LEXWHO==0		;CUSTOMER ARGUMENT
    24
    25					  ;TITLE
    26
    27						TITLE.	LEX,SNOLEX,<Lexical Analyzer>
    28		544570	000000			LEXSIX==SIXBIT /LEX/	; SNOLEX ABBREVIATION IN SIXBIT
    29		462133	000000			LEXASC==ASCIZ /LEX/	; SNOLEX ABBREVIATION IN ASCII
    30						SALL
    31
    32
    33					  ;SHOW UNIVERSAL VERSION NUMBER
    34
    35	400000'	000200	000025			SHOW.	%%MACT		;VERSION NUMBER OF MACTEN
    36	400000'	000500	000305			SHOW.	%%SNOP		;VERSION NUMBER OF SNOPRM
    37
    38						LEXTTL			; Title
    39						LEXPTX			; PASS2 message
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 2
SNOLEX	MAC	13-Oct-66 22:23		Table of Contents

    40						SUBTTL	Table of Contents
    41
    42					;		Table of Contents for Lexical Analyzer
    43					;
    44					;
    45					;			   Section			      Page
    46					;   1. Table of Contents. . . . . . . . . . . . . . . . . . .    2
    47					;   2. REVISION HISTORY . . . . . . . . . . . . . . . . . . .    3
    48					;   3. DEFINITIONS. . . . . . . . . . . . . . . . . . . . . .    4
    49					;   4. Lexical Routines . . . . . . . . . . . . . . . . . . .    5
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 3
SNOLEX	MAC	13-Oct-66 22:23		REVISION HISTORY

    50						SUBTTL	REVISION HISTORY
    51
    52					COMMENT	\
    53					START OF VERSION 5.
    54					122	RENAME MODULES & REORGANIZE.
    55					125	REMOVE PATCHING SPACE.  LINK WILL TAKE CARE OF THINGS LIKE
    56						that.
    57					147	Use the TX?? macros instead of the TD?? instructions,
    58						and use the Y.???? instead of the  X.????
    59					205	Place a title on every page of the output listing.
    60					206	Line number all coments, blank lines, etc. on the
    61						output listing
    62					212	Code clean up.
    63					246	Change references to FMT.xx.
    64					254	CHANGE OUTPUT LISTING PAGE NUMBERS (ALLOW A MINOR PAGE NO.)
    65					\
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 4
SNOLEX	MAC	13-Oct-66 22:23		DEFINITIONS

    66						SUBTTL	DEFINITIONS
    67
    68
    69	400000'	000011	000001		S.TAB:	XWD	11,1
    70
    71			000414		UBLOK==UTBLOK
    72					 INTERN UBENTR
    73			000026		UBSIZE= ^D22
    74
    75
    76		172440	600000		Y.OPND==Y.OP!Y.UPS!Y.LOWS!Y.LP!Y.Q!Y.QQ!Y.PLUS!Y.MNS!Y.NUM	; OPER. FOR UNARY OPER.
    77
    78
    79
    80			000001		N.FLG==1	; SEQUENCE #'ED FLAG
    81			000002		F.FLG==2	; FORM FEED FLAG
    82
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 5
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

    83						SUBTTL	Lexical Routines
    84
    85
    86					;	TKINIT & EXINIT --- TOKEN INITIALIZATION ROUTINES
    87					;	-------------------------------------------------
    88					;
    89					;
    90					;	TOKEN INITIALIZATION FOR EXPRESSIONS
    91					;
    92	400001'	201 00 0 00 400350'	EXINIT::MOVEI	Z,ST2	; IGNORE LABEL SEARCH
    93	400002'	402 00 0 00 000000*		CLEARM	GTFLAG##		; NON GOTO SYNTAX
    94	400003'	334 00 0 00 000000 		SKIPA			; MERGE WITH TKINIT
    95
    96					;	TOKEN INITIALIZATION FOR PROGRAMS
    97					;
    98	400004'	201 00 0 00 400317'	TKINIT::	MOVEI	Z,ST1	; INITIALIZE STATE
    99	400005'	202 00 0 00 000000*		MOVEM	Z,STATE		; STATE=ST1
   100	400006'	332 00 0 00 000000*		SKIPE	PREX##		; IN PREX STAGE?
   101	400007'	254 00 0 00 400013'		JRST	INPREX		; JUMP IF YES
   102	400010'	265 11 0 00 000000*		JSP	TLINK,STINIT##	; SET UP FOR STREAMING
   103	400011'	254 00 0 06 000000 		JRST	0(SLINK)	; ERROR RETURN
   104	400012'	254 00 0 06 000001 		JRST	1(SLINK)	; SUCCESS RETURN
   105					;
   106	400013'	402 00 0 00 000000*	INPREX:	SETZM	LINES##		; INITIALIZE LINE COUNTER
   107	400014'	265 11 0 00 400017'		JSP 	TLINK,GETREC	; FETCH A RECORD
   108	400015'	254 00 0 06 000000 		JRST	0(SLINK)	; ERROR RETURN
   109	400016'	254 00 0 06 000001 		JRST	1(SLINK)	; SUCCESS RETURN
   110
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 6
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   111
   112					;
   113					;	GETREC --- INTERNAL ROUTINE TO FETCH AN INPUT RECORD
   114					;	----------------------------------------------------
   115					;
   116					;
   117					;
   118	400017'	200 07 0 00 000011 	GETREC:	MOVE	S2,TLINK	; SAVE RETURN ADR IN S2
   119	400020'	265 00 0 00 000000*	READ1:	PUSHR	PST		; SAVE SOME AC'S
   120	400021'	000012	000004
   121	400022'	265 00 0 00 000000*		PUSHSA	PST		; SAVE SOME AREA'S
   122	400023'	000033	000000*
   123
   124	400024'	200 12 0 00 000000*	READ1A:	MOVE	T2,NLPGNO##	; SET ...
   125	400025'	202 12 0 00 000000*		MOVEM	T2,PAGENO##	; PAGE NUMBER
   126	400026'	200 12 0 00 000000*		MOVE	T2,COMPIN##	; SET UP FOR READ
   127	400027'	200 13 0 00 000000#		MOVE 	T3,COMPIN+1
   128	400030'	265 11 0 00 000000*		JSP	TLINK,READ##	; READ 1 SOURCE RECORD
   129	400031'	001 14 0 00 000004 		ERROR	12,4		; BAD READ
   130	400032'	254 00 0 00 400145'		JRST	GTERTN		; End of File
   131
   132	400033'	402 00 0 00 000000*		SETZM	RDFLGS##		; CLEAR THESE FLAGS
   133
   134	400034'	602 00 0 00 000002 		TRNE	Z,F.FLG		; FORM FEED?
   135	400035'	350 00 0 00 400024*		AOS	NLPGNO		; YES, INCREMENT NEXT PG. NO.
   136
   137	400036'	602 00 0 00 000001 		TRNE	Z,N.FLG		; SEQUENCE NUMBERING?
   138	400037'	254 00 0 00 400065'		JRST	RDSQA		; YES, DON'T SEQ
   139
   140	400040'	332 00 0 00 000000*		SKIPE	AUTOHS##	; IS IT TO BE HISTOGRAMED?
   141	400041'	254 00 0 00 400115'		 JRST	LREAD1		; DO IT THE OLD WAY.
   142
   143	400042'	350 00 0 00 000000*		AOS	LINENO##	; INC THE FAKED LINE NUMBER
   144
   145	400043'	261 01 0 00 401025'		PUSH	STACK,[XWD IDT,0]	; MAKE UP ARGS FOR LPAD
   146	400044'	261 01 0 00 400042*		PUSH	STACK,LINENO
   147
   148	400045'	261 01 0 00 401025'		PUSH	STACK,[XWD IDT,0]	; NO. OF CHARS
   149	400046'	261 01 0 00 401026'		PUSH	STACK,[5]
   150
   151	400047'	261 01 0 00 000000*		PUSH	STACK,$ALPHA##	; PAD WITH '0'
   152	400050'	261 01 0 00 401027'		PUSH	STACK,[" ",,1]
   153
   154	400051'	201 00 0 00 000003 		MOVEI	Z,3		; THREE ARGS FOR LPAD
   155	400052'	265 04 0 00 000000*		JSP	PLINK,LPAD##	; GO DO IT.
   156	400053'	001 17 0 00 000000 		 ERROR	15		; SOMETHING WRONG.
   157
   158	400054'	262 01 0 00 000000*		POP	STACK,STKSAV##
   159	400055'	262 01 0 00 000000#		POP	STACK,STKSAV##+1
   160
   161	400056'	261 01 0 00 400047*		PUSH	STACK,$ALPHA	; ADD A TAB
   162	400057'	261 01 0 00 400000'		PUSH	STACK,S.TAB	; ..
   163
   164	400060'	261 01 0 00 000000#		PUSH	STACK,STKSAV##+1	; GET BACK THE LINE NO.
   165	400061'	261 01 0 00 400054*		PUSH	STACK,STKSAV	; ..
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 6-1
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   166
   167	400062'	201 00 0 00 000003 		MOVEI	Z,3		; 3 ARGS FOR CONCAT
   168	400063'	265 11 0 00 000000*		JSP	TLINK,CONCAT##	; DO IT.
   169	400064'	001 17 0 00 000000 		 ERROR	15		; TOO BAD.
   170
   171
   172	400065'	201 10 0 00 000001 	RDSQA:	MOVEI	S3,1		; ONE ARG FOR CONCAT
   173
   174	400066'	550 11 0 01 000000 		HRRZ	T1,0(STACK)	; LOAD LENGTH OF STRING
   175	400067'	275 11 0 00 000006 		SUBI	T1,6		; SUBTRACT OFF # OF PERIFS.
   176
   177	400070'	332 00 0 00 400040*		SKIPE	AUTOHS##	; HISTOGRAMMING?
   178	400071'	254 00 0 00 400106'		JRST	IGREAD		; YES, JUMP
   179
   180	400072'	323 11 0 00 400155'		JUMPLE	T1,COMENT	; IF NULL , TREAT AS COMMENT
   181
   182	400073'	261 01 0 01 777777 		PUSH	STACK,-1(STACK)	; PUSH REDUCED STRING ...
   183	400074'	505 11 0 00 000006 		HRLI	T1,6		; ONTO ...
   184	400075'	261 01 0 00 000011 		PUSH	STACK,T1	; STACK
   185
   186	400076'	261 01 0 01 777777 		PUSH	STACK,-1(STACK)	; CONVERT
   187	400077'	261 01 0 00 401026'		PUSH	STACK,[5]	; THE FIRST
   188	400100'	265 11 0 00 000000*		JSP	TLINK,CVTINT##	; 5
   189	400101'	334 11 0 00 000000*		SKIPA	T1,CMPNO##	; CHARACTERS TO 
   190	400102'	200 11 0 01 000000 		MOVE	T1,0(STACK)	; INTEGER (IF POSSIBLE)
   191	400103'	274 01 0 00 000000*		SUB	STACK,XWD22##	; USE COMPNO IF NOT
   192	400104'	202 11 0 00 400101*		MOVEM	T1,CMPNO	; MAKE NEW CMPNO
   193
   194	400105'	254 00 0 00 400122'		JRST	LREAD2		; JOIN PROCESSING
   195
   196						 ; HERE IF WE ARE TO IGNORE AN EXISTING SEQ. NUMBER
   197
   198	400106'	327 11 0 00 400113'	IGREAD:	JUMPG	T1,IGRD1	; INSURE A NON-NULL STRING
   199	400107'	274 01 0 00 400103*		SUB	STACK,XWD22	; NULL STRING, PRUNE STACK...
   200	400110'	261 01 0 00 000000*		PUSH	STACK,NULLST##	; AND PUSH ON A...
   201	400111'	261 01 0 00 000000#		PUSH	STACK,NULLST+1	; NULL STRING
   202	400112'	254 00 0 00 400155'		JRST	COMENT		; TREAT THIS AS A COMMENT
   203
   204	400113'	505 11 0 00 000006 	IGRD1:	HRLI	T1,6		; DIMINISH LENGTH OF NON-NULL STRING
   205	400114'	202 11 0 01 000000 		MOVEM	T1,0(STACK)	; BY 6
   206
   207						 ; HERE IF LINE IS NOT SEQUENCED NUMBERED
   208
   209	400115'	201 10 0 00 000002 	LREAD1:	MOVEI	S3,2		; TWO STRINGS TO BE CONCATED
   210	400116'	261 01 0 00 400056*		PUSH	STACK,$ALPHA##	; TAB IS ...
   211	400117'	261 01 0 00 400000'		PUSH	STACK,S.TAB	; THE OTHER STRING
   212
   213	400120'	261 01 0 01 777775 		PUSH	STACK,-3(STACK)	; REPEAT ...
   214	400121'	261 01 0 01 777775 		PUSH	STACK,-3(STACK)	; SUBJCT
   215
   216						 ; MERGE HERE FROM SEQUENCE #'ED FILES
   217
   218	400122'	265 11 0 00 400010*	LREAD2:	JSP	TLINK,STINIT	; SET UP FOR STREAMING
   219	400123'	344 10 0 00 400155'		AOJA	S3,COMENT	; TREAT NULL STRING AS A COMMENT
   220
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 6-2
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   221						 ; NOW CHECK THE FIRST CHARACTER 
   222
   223	400124'	200 17 0 00 000000*		MOVE	Q3,SUBJ##		; FETCH 1ST CHAR BASED ON Q3
   224	400125'	135 16 0 00 000000*		LDB	Q2,STPTR	; INTO Q2
   225	400126'	200 12 0 16 000000*		MOVE	T2,SYSCTB##(Q2)	; CHAR SET FOR CHAR TO T2
   226	400127'	612 12 0 00 401030'		TXNE	T2,Y.STAR!Y.VB!Y.SEMI	; COMMENT CARD
   227	400130'	254 00 0 00 400155'		JRST	COMENT		; JUMP IF YES
   228	400131'	603 12 0 00 000400 		TXNE	T2,Y.MNS	; CONTROL CARD
   229	400132'	254 00 0 00 400155'		JRST	CONTRL		; JUMP TO PROCESS CONTROL CARD
   230	400133'	603 12 0 00 002100 		TXNE	T2,Y.PER!Y.PLUS	; CONTINUE CARD?
   231	400134'	254 00 0 00 400144'		JRST	NONUMB		; SKIP STMT NUMBER IF SO
   232
   233	400135'	302 10 0 00 000002 		CAIE	S3,2		; ALSO IF ALREADY SEQUENCED ...
   234	400136'	254 00 0 00 400144'		JRST	NONUMB		; WE SHOULD ALSO SKIP
   235
   236	400137'	201 10 0 00 000003 		MOVEI	S3,3		; FOR CONCAT LATER
   237	400140'	261 01 0 00 401025'		PUSH	STACK,[XWD IDT,0]	; FOR CONVERSION
   238	400141'	261 01 0 00 400104*		PUSH	STACK,CMPNO##	; STMT NUMBER
   239	400142'	265 11 0 00 000000*		JSP	TLINK,CVTSTR##	; STMT NO. TO STRING
   240	400143'	001 17 0 00 000000 		ERROR	15
   241	400144'	265 11 0 00 400160'	NONUMB:	JSP	TLINK,PRINT	; TO PRINT OUT LISTING
   242
   243	400145'	634 16 0 00 000016 	GTERTN:	TDZA	Q2,Q2		;[212] SIGNAL AN ERROR
   244	400146'	201 16 0 00 000001 	GTRRTN:	MOVEI	Q2,1		;[212] SKIP RETURN
   245
   246	400147'	265 00 0 00 000000*		POPSA	PST		; GET BACK SOME SAVE AREA'S
   247	400150'	000033	400023*
   248	400151'	265 00 0 00 000000*		POPR	PST		; GET BACK SOME REGISTERS
   249	400152'	000011	000004
   250
   251	400153'	270 16 0 00 000007 		ADD	Q2,S2		; Set return addr
   252	400154'	254 00 0 16 000000 		JRST	0(Q2)		; Return.
   253
   254	400155'				CONTRL:		; CODE TO PROCESS CONTROL CARDS
   255	400155'	265 11 0 00 400160'	COMENT:	JSP	TLINK,PRINT	; OUTPUT TO LISTING FILE
   256	400156'	254 00 0 00 400145'		JRST	GTERTN		; Error return
   257	400157'	254 00 0 00 400024'		JRST	READ1A		; Get another record.
   258
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 7
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   259
   260					;
   261					;	PRINT --- ROUTINE TO SEND DATA TO LISTING FILE
   262					;	-----------------------------------------------
   263					;
   264					;
   265					;
   266	400160'	200 00 0 00 000010 	PRINT:	MOVE	Z,S3		; NO. OF STRINGS TO CONCATENATE
   267	400161'	200 10 0 00 000011 		MOVE	S3,TLINK	; SAVE RETURN ADR
   268	400162'	306 00 0 00 000001 		CAIN	Z,1		; ONLY ONE ARG?
   269	400163'	254 00 0 00 400166'		JRST	PRINT1		; YES, AVOID CONCAT
   270	400164'	265 11 0 00 400063*		JSP	TLINK,CONCAT##	; CONCATENATE FOR OUTPUT
   271	400165'	001 17 0 00 000000 		ERROR	15		; ERROR--RETURN
   272
   273	400166'	200 13 0 00 000000#	PRINT1:	DMOVE 	T2,LISTF##	; DENOTES LISTING FILE
   274	400167'	200 12 0 00 000000*
   275
   276	400170'	262 01 0 00 000000#		POP	STACK,LSUBJ+1	; SAVE THE LAST STRING ...
   277	400171'	262 01 0 00 000000*		POP	STACK,LSUBJ##	; PRINTED FOR 
   278	400172'	270 01 0 00 400107*		ADD	STACK,XWD22	; DIAGNOSTIC PURPOSES
   279
   280	400173'	265 11 0 00 000000*		JSP	TLINK,WRITE##	; OUTPUT TO LISTING FILE
   281	400174'	001 14 0 00 000032 		ERROR	12,26		; ERROR DETECTED
   282
   283						 ; TEST FOR PAGE EJECT
   284
   285	400175'	200 16 0 00 400025*	PRINT2:	MOVE	Q2,PAGENO	; SEE IF A FORM-FEED WAS
   286	400176'	316 16 0 00 400035*		CAMN	Q2,NLPGNO	; ENCOUNTERED
   287	400177'	254 00 0 00 400202'		 JRST	PRINT3		; CHECK FOR ANOTHER PAGE
   288
   289	400200'	402 00 0 00 000000*		SETZM	NLMPGN		; START A NEW PAGE
   290	400201'	254 00 0 00 400206'		JRST	PRINTE		; PRINT IT
   291
   292	400202'	350 16 0 00 400013*	PRINT3:	AOS	Q2,LINES	;[254] INCREMENT LINE COUNT
   293	400203'	315 16 0 00 000000*		CAMGE	Q2,NLINES##	;[254] TIME FOR A PAGE EJECT & TITLE?
   294	400204'	254 00 0 10 000001 		 JRST	1(S3)		;[254] YES ..
   295	400205'	350 00 0 00 400200*		AOS	NLMPGN##	;[254] NEW MINOR PAGE
   296
   297	400206'	200 13 0 00 000000#	PRINTE::	DMOVE 	T2,LISTF	; INDICATE LISTING FILE
   298	400207'	200 12 0 00 400167*
   299	400210'	265 11 0 00 000000*		JSP	TLINK,PEJECT##	; EJECT PAGE
   300	400211'	254 00 0 10 000000 		JRST	0(S3)		; ERROR DETECTED BY PEJECT
   301	400212'	402 00 0 00 400202*	PRINTF::	SETZM	LINES		; RESET LINE COUNTER
   302
   303	400213'	265 00 0 00 400020*		PUSHR	PS		; SAVE SOME AC'S
   304	400214'	000006	000004
   305	400215'	265 00 0 00 400022*		PUSHSA	PS		; SAVE SOME AREA'S
   306	400216'	000022	400150*
   307
   308	400217'	265 04 0 00 000000*		JSP	PLINK,DATEE##	; GET THE DATE FOR TITLE
   309	400220'	001 17 0 00 000000 		 ERROR	15
   310
   311	400221'	201 10 0 00 000001 		MOVEI	S3,1			;[254] ARGUMENT FOR CONCAT
   312	400222'	336 00 0 00 400205*		SKIPN	NLMPGN		;[254] DO WE NEED A MINOR PAGNO?
   313	400223'	254 00 0 00 400240'		 JRST	PRINOM			;[254] NOPE - JUST MAJOR.
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 7-1
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   314
   315	400224'	261 01 0 00 401025'		PUSH	STACK,[XWD IDT,0]	;[254] Make MINOR page no.
   316	400225'	261 01 0 00 400222*		PUSH	STACK,NLMPGN##		;[254]  ..
   317
   318	400226'	265 11 0 00 400142*		JSP	TLINK,CVTSTR##		;[254] MAKE THIS A STRING
   319	400227'	001 17 0 00 000000 		 ERROR	15			;[254] PROBLEM ENCOUNTERED.
   320
   321	400230'	201 10 0 00 000003 		MOVEI	S3,3			;[254] THREE THINGS FOR CONCAT
   322
   323	400231'	261 01 0 00 400116*		push	stack,$alpha		;[254] Yes we do.
   324	400232'	261 01 0 00 401031'		push	stack,["-",,1]
   325
   326	400233'	332 00 0 00 400176*		SKIPE	NLPGNO		;[254] IS THERE A SUMMARY?
   327	400234'	254 00 0 00 400240'		 JRST	PRINOM		;[254] NO.
   328
   329	400235'	261 01 0 00 400231*		PUSH	STACK,$ALPHA	;[254] DESC. FOR 'S'
   330	400236'	261 01 0 00 401032'		PUSH	STACK,["S",,1]	;[254] ..
   331
   332	400237'	254 00 0 00 400246'		JRST	PRIEXT		;[254] GO CONCAT.
   333
   334	400240'	261 01 0 00 401025'	PRINOM:	push	stack,[XWD IDT,0]	;[254] this is the MAJOR page no.
   335	400241'	261 01 0 00 400233*		push	stack,NLPGNO##		;[254] this is the MAJOR page no.
   336
   337	400242'	265 11 0 00 400226*		JSP	TLINK,CVTSTR##	;[254] CONVERT TO A STRING.
   338	400243'	001 17 0 00 000000 		 ERROR	15		;[254] ..
   339
   340	400244'	306 10 0 00 000001 		CAIN	S3,1			;[254] SHOULD WE AVOID CONCAT
   341	400245'	254 00 0 00 400251'		 JRST	PRINO2			;[254] YES.
   342
   343	400246'	200 00 0 00 000010 	PRIEXT:	MOVE	Z,S3			;[254] GET THE ARGUMENT
   344	400247'	265 11 0 00 400164*		jsp	tlink,concat##		;[254] concatenate this mess
   345	400250'	001 17 0 00 000000 		 error	15			;[254] hope not
   346
   347	400251'	205 00 0 00 003003 	PRINO2:	MOVX	Z,FMT.S!FMT.WM	;[246] SIXBIT FORMAT FOR CVTWD
   348	400252'	200 16 0 00 400026*		MOVE	Q2,COMPIN	; GET DESCRIPTOR
   349	400253'	200 16 0 16 000004 		MOVE	Q2,4(Q2)	; GET FOR TITLE
   350
   351	400254'	200 12 0 16 000006 		MOVE	T2,IOEXT(Q2)	; MAKE UP EXT.
   352	400255'	265 11 0 00 000000*		JSP	TLINK,CVTWD##	; INTO A STRING
   353	400256'	001 17 0 00 000000 		 ERROR	15		; HOPE NOT.
   354
   355	400257'	205 00 0 00 003003 		MOVX	Z,FMT.S!FMT.WM	;[246] ALL OVER AGIN.
   356	400260'	200 16 0 00 400252*		MOVE	Q2,COMPIN	; ..
   357	400261'	200 16 0 16 000004 		MOVE	Q2,4(Q2)	; EASIEST WAY.
   358
   359	400262'	200 12 0 16 000005 		MOVE	T2,IONAME(Q2)	; MAKE UP NAME (FILE)
   36063'	265 11 0 00 400255*		JSP	TLINK,CVTWD	; MAKE A STRING
   361	400264'	001 17 0 00 000000 		 ERROR	15		; SERIOUS PROBLEM.
   362	400265'	265 04 0 00 000000*		jsp	plink,trim##	;[254] lose some spaces.
   363	400266'	255 00 0 00 000000 		JFCL			;[254] WE DON'T CARE
   364
   365	400267'	265 06 0 00 000000*		JSP	SLINK,LINE##	; MAKE UP A LINE
   366	400270'	000000*	000016			XWD	LISTF##,^D14	; ON THE LISTING FILE AS FOLLOWS:
   367	400271'	004003	000000*			XWD	SDT,S.ID##	; 'SITBOL '
   368	400272'	004003	000000*			XWD	SDT,S.VER##	; '%X(XXX)'
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 7-2
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   369	400273'	004003	000000*			XWD	SDT,S.BLNK##	; '        '
   370	400274'	004003	000000*			XWD	SDT,S.FIL##	; 'FILE: '
   371	400275'	000001	000001			XWD	STACK,1		; FILE
   372	400276'	004003	401033'			XWD	SDT,[".",,1]	; '.'
   373	400277'	000001	000002			XWD	STACK,2		; EXT
   374	400300'	004003	400273*			XWD	SDT,S.BLNK	; '        '
   375	400301'	000001	000004			XWD	STACK,4		; 'XX/XX/XX' (DATE)
   376	400302'	004003	400300*			XWD	SDT,S.BLNK	; '        '
   377	400303'	004003	000000*			XWD	SDT,S.PAG##	; 'PAGE: '
   378	400304'	000001	000003			XWD	STACK,3		; MAJOR-MINOR PAGE
   379	400305'	004003	401034'			XWD	SDT,[15,,1]	; CR
   380	400306'	004003	401035'			XWD	SDT,[12,,1]	; LF
   381
   382	400307'	201 00 0 00 000002 		MOVEI	Z,2		; MAKE IT THINK IT ..
   383	400310'	202 00 0 00 400212*		MOVEM	Z,LINES		; HAD TWO LINES
   384
   385	400311'	265 00 0 00 400147*		POPSA	PS		; GET BACK SOME AREA'S
   386	400312'	000022	400216*
   387	400313'	265 00 0 00 400151*		POPR	PS		; GET BACK THOSE AC'S
   388	400314'	000005	000004
   389
   390	400315'	254 00 0 10 000001 		JRST	1(S3)		; RETURN.
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 8
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   391
   392					;	TOKEN --- ROUTINE TO BREAK OUT 1 TOKEN
   393					;	--------------------------------------
   394					;
   395					;
   396	400316'	254 00 1 00 400005*	TOKEN::	JRST	@STATE		; JUMP TO APPROPRIATE STATE
   397					;
   398					;	STATE 1 ---- LOOK FOR A LABEL
   399					;	-----------------------------
   400
   401	400317'	402 00 0 00 400002*	ST1:	CLEARM	GTFLAG		; STATE 1 - CHECK FOR A LABEL.
   402									; NEXT STATE IS 2.
   403					;
   404	400320'	201 00 0 00 400350'		MOVEI	Z,ST2		; SET UP NEXT STATE (2)
   405	400321'	202 00 0 00 400316*		MOVEM	Z,STATE##
   406	400322'	200 07 0 00 000000*		MOVE	S2,SYSCT##	; SET UP TO STREAM FOR BLANKS
   407	400323'	200 10 0 00 401036'		MOVX	S3,Y.BL!Y.TAB!Y.SEMI!Y.CR	; CHAR SET FOR BLANKS
   408	400324'	265 11 0 00 000000*		JSP	TLINK,STRM##	; STREAM
   409	400325'	255 00 0 00 000000 		JFCL	Z,		; FASTEST NO-OP
   410	400326'	265 11 0 00 000000*		JSP	TLINK,INSTAL##	; INSTAL ANY LABEL IF ANY
   411	400327'	254 00 0 00 400346'		JRST	NOLABL		; FAILURE MEANS NO LABEL
   412	400330'	200 16 0 00 000000 		MOVE	Q2,Z		; SAVE POINTER
   413	400331'	505 00 0 00 000000*		HRLI	Z,SY.ID##	; For return
   414	400332'	204 17 0 16 000002 		MOVS	Q3,VLABEL(Q2)	; VLABEL=END?
   415	400333'	302 17 0 00 000000*		CAIE	Q3,END##		; COMPARE
   416	400334'	254 00 0 06 000002 		JRST	2(SLINK)	; LABEL FOUND--NOT END
   417	400335'	200 10 0 00 401037'		MOVX	S3,Y.UPS!Y.LOWS!Y.NUM	; BREAK ON ALPHANUMERIC
   418	400336'	265 11 0 00 000000*		JSP	TLINK,STR.##	; STREAM
   419	400337'	254 00 0 00 400344'		JRST	ENOLAB		; END WITH NO STARTING LABEL
   420	400340'	205 10 0 00 600000 		MOVX	S3,Y.BL!Y.TAB
   421	400341'	265 11 0 00 400324*		JSP	TLINK,STRM	; STREAM FOR BLANK
   422	400342'	255 00 0 00 000000 		JFCL	Z,		; FASTEST NO-OP
   423	400343'	265 11 0 00 400326*		JSP	TLINK,INSTAL##	; INSTALL START LABEL
   424
   425	400344'	400 00 0 00 000000 	ENOLAB:	CLEAR	Z,		; TO INDICATE NO STARTING LABEL
   426	400345'	254 00 0 06 000001 		JRST	1(SLINK)	; EOS RETURN
   427	400346'	400 00 0 00 000000 	NOLABL:	CLEAR	Z,		; NULL LABEL RETURN
   428	400347'	254 00 0 06 000002 		JRST	2(SLINK)	; RETURN TO CLIENT
   429
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 9
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   430
   431					;
   432					;	STATE 2 --- REQUIRES NON-EXISTANCE OF A BINARY OPERATOR
   433					;	-------------------------------------------------------
   434					;
   435					;
   436	400350'				ST2:
   437	400350'	200 07 0 00 400322*		MOVE	S2,SYSCT	; SET UP TO SPAN BLANKS
   438	400351'	205 10 0 00 600000 		MOVX	S3,Y.BL!Y.TAB	; CHAR SET FOR BLANKS
   439	400352'	265 11 0 00 000000*		JSP	TLINK,STR.C##	; LAST CHAR IN Q2 ON RETURN.
   440	400353'	254 00 0 00 400670'		JRST	EOR		; RUNOUT MEANS END OF RECORD
   441	400354'	200 17 0 16 400126*		MOVE	Q3,SYSCTB##(Q2)	; CHAR SET MASK TO Q3
   442
   443	400355'	603 17 0 00 100000 	ST2.1:	TXNE	Q3,Y.OP		; CHECK FOR OPERATOR
   444	400356'	254 00 0 00 400400'		JRST	LEX.UO		; OFF TO PROCESS UNARY OPERATOR
   445	400357'	602 17 0 00 600000 		TXNE	Q3,Y.UPS!Y.LOWS	; CHECK FOR A LETTER
   446	400360'	254 00 0 00 400446'		JRST	LEX.ID		; PROCESS IDENTIFIER,ARY,FUN
   447	400361'	612 17 0 00 401040'		TXNE	Q3,Y.PLUS!Y.MNS!Y.NUM!Y.UPS!Y.LOWS!Y.PER	; CHECK FOR NUMERIC
   448	400362'	254 00 0 00 400524'		JRST	LEX.NM		; PROCESS NUMERIC CONSTANT
   449	400363'	603 17 0 00 060000 		TXNE	Q3,Y.Q!Y.QQ	; Q2 CONTAINS QUOTE TYPE
   450	400364'	254 00 0 00 400500'		JRST	LEX.QL		; IF A QUOTED LITERAL
   451	400365'	603 17 0 00 001000 		TXNE	Q3,Y.CM		; CHECK FOR A COMMA
   452	400366'	254 00 0 00 400426'		JRST	LEX.CM		; GO PROCESS COMMA
   453	400367'	603 17 0 00 004002 		TXNE	Q3,Y.RB!Y.RP	; CHECK FOR RIGHT DELIMITOR 
   454	400370'	254 00 0 00 400421'		JRST 	LEX.SR		; WILL CHECK FOR STEREOTYPES
   455	400371'	603 17 0 00 010024 		TXNE	Q3,Y.LB!Y.LP!Y.COL	; CHECK FOR OTHER SPEC CHARS
   456	400372'	254 00 0 00 400435'		JRST	LEX.SL		; PROCESS SPECIAL LEFT CHAR
   457	400373'	603 17 0 00 000010 		TXNE	Q3,Y.SEMI	; CHECK FOR STMT END
   458	400374'	254 00 0 00 400720'		JRST	EOS		; END OF STMT
   459	400375'	602 17 0 00 010000 		TXNE	Q3,Y.CR		; CHECK FOR <CR>
   460	400376'	254 00 0 00 400712'		JRST	EOS2		; END OF STMT
   461	400377'	254 00 0 00 400476'		JRST	ERR.S		; ILLEGAL CHAR DETECTED
   462					;
   463					;
   464	400400'				LEX.UO:				; PROCESS A UNARY OPERATOR
   465	400400'	200 17 0 00 400124*		MOVE	Q3,SUBJ		; BASE STPTR
   466	400401'	134 12 0 00 400125*		ILDB	T2,STPTR	; UPDATE STPTR (& GET CHAR) ...
   467	400402'	377 00 0 00 000000*		SOSG	CURSOR##	; AND CURSOR
   468	400403'	254 00 0 00 400476'		JRST	ERR.S		; INVALID CHAR AFTER UNARY OP
   469	400404'	200 12 0 12 400354*		MOVE	T2,SYSCTB(T2)	; GET CS MASK
   470	400405'	616 12 0 00 401041'		TXNN	T2,Y.OPND	; SEE IF VALID CHAR FOLLOWS U-OP
   471	400406'	254 00 0 00 400476'		JRST	ERR.S		; YES, INVALID
   472	400407'	261 01 0 00 400235*		PUSH	STACK,$ALPHA	; DESCRIPTOR TOP FOR &ALPHABET
   473	400410'	204 13 0 00 000016 		MOVS	T3,Q2		; CHAR TO T3 LEFT
   474	400411'	271 13 0 00 000001 		ADDI	T3,1		; LENGTH=1
   475	400412'	261 01 0 00 000013 		PUSH	STACK,T3	; DESCRIPTOR BOTTOM
   476	400413'	265 11 0 00 400343*		JSP	TLINK,INSTAL
   477	400414'	001 17 0 00 000000 		ERROR	15		; SYSTEM ERROR IN INSTALL
   478	400415'	505 00 0 00 000000*		HRLI	Z,SY.UNY##	; RETURN SY.UNY,(PTR)
   479	400416'	254 00 0 06 000002 		JRST	2(SLINK)	; RETURN TO CLIENT
   480					;
   481					;
   482					;
   483	400417'	201 00 0 00 000000*	ISYSER:	MOVEI	Z,CE.SYS##	; SYSTEM ERROR
   484	400420'	254 00 0 00 400750'		JRST	ERR
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 9-1
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   485
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 10
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   486
   487					;
   488	400421'	201 16 0 00 000000*	LEX.SR:	MOVEI	Q2,SY$RP##	;[212] ASSUME ..
   489	400422'	603 17 0 00 000002 		TXNE	Q3,Y.RB		;[212] RIGHT BRACKET?
   490	400423'	201 16 0 00 000000*		 MOVEI	Q2,SY$RB##	;[212] YES.
   491					;
   492	400424'	201 00 0 00 400536'	LEX.S3:	MOVEI	Z,ST3		; STATE=ST3
   493	400425'	254 00 0 00 400430'		JRST	SPCHAR
   494					;
   495	400426'	201 16 0 00 000000*	LEX.CM:	MOVEI	Q2,SY$COM##	; COMMA PROCESSING IN SYN
   496
   497	400427'	201 00 0 00 400603'	LEX.S4:	MOVEI	Z,ST4		; STATE=ST4
   498					;
   499	400430'	202 00 0 00 400321*	SPCHAR:	MOVEM	Z,STATE		; SPEC CHAR PROCESSING
   500					;
   501	400431'	133 00 0 00 400401*	LEX.SP:	IBP	STPTR		; UPDATE STPTR ...
   502	400432'	370 00 0 00 400402*		SOS	CURSOR		; AND CURSOR
   503	400433'	514 00 0 00 000016 		HRLZ	Z,Q2		; MOVE PROCESSING ADDRESS ...
   504	400434'	254 00 0 06 000002 		JRST	2(SLINK)	; INTO Z-LEFT AND RETURN
   505					;
   506	400435'	603 17 0 00 000020 	LEX.SL:	TXNE	Q3,Y.COL	; TEST FOR COLON
   507	400436'	254 00 0 00 400443'		JRST	LEX.CL		; YES, IT IS COLON
   508
   509	400437'	201 16 0 00 000000*		MOVEI	Q2,SY$LP##	;[212] ASSUME L.P.
   510	400440'	603 17 0 00 000004 		TXNE	Q3,Y.LB		; WAS IT LEFT BRACKET?
   511	400441'	201 16 0 00 000000*		MOVEI	Q2,SY$LB##	; YES
   512	400442'	254 00 0 00 400427'		JRST	LEX.S4		;[212] STATE 4
   513	400443'	201 16 0 00 000000*	LEX.CL:	MOVEI	Q2,SY$COL##	; YES
   514	400444'	476 00 0 00 400317*		SETOM	GTFLAG		; FREE UP SUBSEQUENT SYNTAX
   515	400445'	254 00 0 00 400431'		JRST	LEX.SP
   516					;
   517	400446'	200 07 0 00 400350*	LEX.ID:	MOVE	S2,SYSCT	; IDENTIFIER PROCESSING
   518	400447'	200 10 0 00 401042'		MOVX	S3,Y.UN!Y.UPS!Y.LOWS!Y.NUM!Y.PER ; Character set
   519	400450'	265 11 0 00 000000*		JSP	TLINK,STRMC##	; BREAK OUT IDENTIFIER
   520	400451'	255 00 0 00 000000 		JFCL	Z,		; INSTALL ID EVEN ON RUNOUT
   521	400452'	200 07 0 16 400404*		MOVE	S2,SYSCTB(Q2)	; SAVE CHAR SET MASK
   522	400453'	265 11 0 00 400413*		JSP 	TLINK,INSTAL	; INSTAL
   523	400454'	001 17 0 00 000000 		ERROR	15		; SYSTEM ERROR IF INSTAL FAILS
   524	400455'	603 07 0 00 010004 		TXNE	S2,Y.LB!Y.LP	; SKIP IF IDENT.
   525	400456'	254 00 0 00 400463'		JRST	F.OR.A		;	JUMP IF FUN OR ARY
   526	400457'	505 00 0 00 400331*	REGID:	HRLI	Z,SY.ID##	; RETURN SY.ID,(PTR)
   527	400460'	201 16 0 00 400536'		MOVEI	Q2,ST3		; STATE=ST3
   528	400461'	202 16 0 00 400430*		MOVEM	Q2,STATE
   529	400462'	254 00 0 06 000002 		JRST	2(SLINK)	; RETURN TO CLIENT
   530					;
   531	400463'	505 00 0 00 000000*	F.OR.A:	HRLI	Z,SY.FUN##	; PREPARE FOR SY.FUN
   532	400464'	603 07 0 00 010000 		TXNE	S2,Y.LP		; CHECK IF FUNCTION TYPE
   533	400465'	254 00 0 00 400471'		JRST	AF.RET		; JUMP IF SO
   534	400466'	607 07 0 00 000004 		TXNN	S2,Y.LB		; CHECK FOR ARRAY TYPE
   535	400467'	001 17 0 00 000000 		ERROR	15		; ERROR IF NEITHER
   536	400470'	505 00 0 00 000000*		HRLI	Z,SY.ARY##	; PREPARE FOR SY.ARY RETURN
   537
   538	400471'	201 10 0 00 400603'	AF.RET:	MOVEI	S3,ST4		; STATE=ST4
   539	400472'	202 10 0 00 400461*		MOVEM	S3,STATE
   540	400473'	133 00 0 00 400431*		IBP	STPTR		; UPDATE CURSOR & STPTR
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 10-1
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   541	400474'	370 00 0 00 400432*		SOS	CURSOR
   542	400475'	254 00 0 06 000002 		JRST	2(SLINK)
   543					;
   544					;
   545	400476'	201 00 0 00 000000*	ERR.S:	MOVEI	Z,CE.IC##	; ILLEGAL CHAR ERROR
   546	400477'	254 00 0 00 400750'		JRST	ERR
   547
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 11
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   548
   549					;
   550	400500'	133 00 0 00 400473*	LEX.QL:	IBP	STPTR##		; QUOTED LITERAL PROCESSING
   551	400501'	370 00 0 00 400474*		SOS	CURSOR##	; UPDATE CURSOR & STPTR
   552	400502'	200 07 0 00 400446*		MOVE	S2,SYSCT	; SET UP FOR STRM
   553	400503'	205 10 0 00 020000 		MOVX	S3,Y.Q		; SPECIFY CHAR SET FOR SINGLE QUOTE
   554	400504'	306 16 0 00 000042 		CAIN	Q2,42		; IF LITERAL BEGAN WITH DOUBLE QUOTE
   555	400505'	205 10 0 00 040000 		MOVX	S3,Y.QQ		; THEN SPECIFY ITS CHAR SET
   556	400506'	265 11 0 00 400341*		JSP	TLINK,STRM	; SPAN QUOTED LITERAL
   557	400507'	254 00 0 00 400521'		JRST	UNBAL		; UNBALANCED QUOTE FOUND
   558	400510'	133 00 0 00 400500*		IBP	STPTR		; BUMP CURSOR & STPTR
   559	400511'	370 00 0 00 400501*		SOS	CURSOR
   560	400512'	265 11 0 00 000000*		JSP	TLINK,STCON##	; ENTER INTO CONSTANT AREA
   561	400513'	265 11 0 00 400774'	UBSTOR:	JSP	TLINK,UBENTR	; CREATE UBLOK ENTRY
   562	400514'	255 00 0 00 000000 		JFCL	Z,		; NO-OP
   563	400515'	505 00 0 00 000000*		HRLI	Z,SY.CON##	; RETURN SY.CON,(PTR)
   564	400516'	201 16 0 00 400536'		MOVEI	Q2,ST3		; STATE=ST3
   565	400517'	202 16 0 00 400472*		MOVEM	Q2,STATE
   566	400520'	254 00 0 06 000002 		JRST	2(SLINK)	; RETURN TO CLIENT
   567	400521'	201 00 0 00 000000*	UNBAL:	MOVEI	Z,CE.QT##	; UNMATCHED QUOTE ERROR
   568	400522'	274 01 0 00 400172*		SUB	STACK,XWD22	; POP ARG FROM STACK
   569	400523'	254 00 0 00 400750'		JRST	ERR
   570					;
   571	400524'	200 07 0 00 400502*	LEX.NM:	MOVE	S2,SYSCT	; SET UP TO SPAN NUMERIC TYPE
   572	400525'	200 10 0 00 401040'		MOVX	S3,Y.PLUS!Y.MNS!Y.NUM!Y.UPS!Y.LOWS!Y.PER	
   573	400526'	265 11 0 00 400450*		JSP	TLINK,STRMC	; STREAM
   574	400527'	255 00 0 00 000000 		JFCL	Z,		; NO ERROR FOR RUNOUT
   575	400530'	265 11 0 00 000000*		JSP	TLINK,CVTNUM##	; CONVERT TO NUMERIC
   576	400531'	254 00 0 00 400533'		JRST	BADNUM		; ILLEGAL NUMERIC ERROR
   577	400532'	254 00 0 00 400513'		JRST	UBSTOR		; STORE VALUE IN UBLOK
   578	400533'	274 01 0 00 400522*	BADNUM:	SUB	STACK,XWD22##	; POP STACK
   579	400534'	201 00 0 00 000000*		MOVEI	Z,CE.NI##	; ERROR IN NUMERIC ITEM
   580	400535'	254 00 0 00 400750'		JRST	ERR
   581
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 12
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   582
   583					;
   584					;	STATE 3 --- THIS STATE IS USED TO DETECT ANY BINARY OPERATORS
   585					;	-------------------------------------------------------------
   586					;
   587					;
   588					;
   589	400536'	200 14 0 00 400511*	ST3:	MOVE	T4,CURSOR##	; SAVE CURSOR VALUE
   590	400537'	202 14 0 00 000000*		MOVEM	T4,IGNOS##	; IN TEMP LOCATION
   591	400540'	200 07 0 00 400524*	ST3.1:	MOVE	S2,SYSCT##	; PREPARE TO SPAN BLANKS
   592	400541'	205 10 0 00 600000 		MOVX	S3,Y.BL!Y.TAB	; CHAR SET FOR BLANKS
   593	400542'	265 11 0 00 400352*		JSP	TLINK,STR.C	; SPAN BLANKS
   594	400543'	254 00 0 00 400670'		JRST	EOR		; END OF RECORD DETECTED
   595	400544'	200 17 0 16 400452*		MOVE	Q3,SYSCTB(Q2)	; CS MASK OF CHAR IN Q2
   596	400545'	603 17 0 00 004002 		TXNE	Q3,Y.RB!Y.RP	; CHECK FOR RIGHT SPECIAL CHAR
   597	400546'	254 00 0 00 400421'		JRST	LEX.SR		; JUMP IF YES
   598	400547'	201 12 0 00 400603'		MOVEI	T2,ST4		; STATE=ST4
   599	400550'	202 12 0 00 400517*		MOVEM	T2,STATE
   600	400551'	603 17 0 00 100000 		TXNE	Q3,Y.OP		; CHECK FOR BINARY OPERATOR
   601	400552'	254 00 0 00 400576'		JRST	ST3.BO		; JUMP IF OPERATOR
   602	400553'	603 17 0 00 001000 		TXNE	Q3,Y.CM		; CHECK FOR COMMA
   603	400554'	254 00 0 00 400426'		JRST	LEX.CM		; JUMP IF COMMA
   604	400555'	603 17 0 00 000010 		TXNE	Q3,Y.SEMI	; CHECK FOR SEMI-COLON
   605	400556'	254 00 0 00 400720'		JRST	EOS		; END OF RECORD
   606	400557'	602 17 0 00 010000 		TXNE	Q3,Y.CR		; <CR>?
   607	400560'	254 00 0 00 400712'		JRST	EOS2		; YES
   608	400561'	603 17 0 00 000004 		TXNE	Q3,Y.LB		; LEFT BRACKET?
   609	400562'	254 00 0 00 400435'		JRST	LEX.SL		; YES
   610	400563'	201 12 0 00 400350'		MOVEI	T2,ST2		; STATE=ST2
   611	400564'	202 12 0 00 400550*		MOVEM	T2,STATE
   612	400565'	603 17 0 00 000020 		TXNE	Q3,Y.COL	; CHECK FOR COLON
   613	400566'	254 00 0 00 400443'		JRST	LEX.CL		; JUMP IF COLON
   614	400567'	200 14 0 00 400537*		MOVE	T4,IGNOS	; FETCH PREVIOUS CURSOR VALUE
   615	400570'	312 14 0 00 400536*		CAME	T4,CURSOR	; DID CURSOR MOVE?
   616	400571'	254 00 0 00 400661'		JRST	LEX.IC		; IMPLICIT CONCATENATION DETECTED
   617	400572'	332 00 0 00 400444*		SKIPE	GTFLAG		; GOTO ZONE?
   618	400573'	254 00 0 00 400350'		JRST	ST2		; YES, ALLOW THIS
   619
   620	400574'	201 00 0 00 400476*		MOVEI	Z,CE.IC##	; ERROR - ILLEGAL CHARACTER
   621	400575'	254 00 0 00 400750'		JRST	ERR		; GO PROCESS ERROR
   622
   623						 ; HERE IF BINARY OP WAS DETECTED
   624
   625	400576'	200 14 0 00 400567*	ST3.BO:	MOVE	T4,IGNOS	; LOAD FORMER CURSOR
   626	400577'	312 14 0 00 400570*		CAME	T4,CURSOR	; SAME AS PRESENT VALUE?
   627	400600'	254 00 0 00 400623'		JRST	LEX.BO		; NO, OFF TO PROCESS BO
   628
   629	400601'	201 00 0 00 000000*		MOVEI	Z,CE.MB##	; MISSING BLANK
   630	400602'	254 00 0 00 400750'		JRST	ERR		; ERROR
   631
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 13
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   632
   633					;
   634					;	STATE 4 --- THIS STATE IS USED TO DETECT IMPLICIT NULL STRINGS
   635					;	--------------------------------------------------------------
   636					;
   637					;
   638					;
   639	400603'	200 07 0 00 400540*	ST4:	MOVE	S2,SYSCT	; PREPARE TO SPAN BLANKS
   640	400604'	205 10 0 00 600000 		MOVX	S3,Y.BL!Y.TAB	; CS FOR BLANKS
   641	400605'	265 11 0 00 400542*		JSP	TLINK,STR.C	; SPAN BLANKS
   642	400606'	254 00 0 00 400616'		JRST	EOR4		; END OF RECORD DETECTED
   643	400607'	201 12 0 00 400350'		MOVEI	T2,ST2		; STATE=ST2
   644	400610'	202 12 0 00 400564*		MOVEM	T2,STATE
   645	400611'	200 17 0 16 400544*		MOVE	Q3,SYSCTB(Q2)	; CHAR SET MASK TO Q3
   646	400612'	616 17 0 00 401043'		TXNN	Q3,Y.RP!Y.RB!Y.COL!Y.CM!Y.SEMI!Y.CR	; CHECK FOR STATE 4 DELIMITORS
   647	400613'	254 00 0 00 400355'		JRST	ST2.1		; JUMP IF NONE OF THESE
   648	400614'	200 00 0 00 401044'	IMPNUL:	MOVE	Z,[XWD SY.CON,NULLST]	; IMPLICIT NULL
   649	400615'	254 00 0 06 000002 		JRST	2(SLINK)	; RETURN TO CLIENT
   650
   651						 ; HERE IF NO CHARACTERS ARE LEFT
   652
   653	400616'	332 00 0 00 400006*	EOR4:	SKIPE	PREX		; RUNTIME?
   654	400617'	254 00 0 00 400675'		JRST	EOR1		; NO - COMPILE TIME
   655
   656	400620'	201 12 0 00 400670'		MOVEI	T2,EOR		; INSERT ...
   657	400621'	202 12 0 00 400610*		MOVEM	T2,STATE	; NEXT STATE
   658	400622'	254 00 0 00 400614'		JRST	IMPNUL		; AND RETURN NULL
   659
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 14
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   660
   661					;
   662	400623'	200 00 0 00 400577*	LEX.BO:	MOVE	Z,CURSOR	; SAVE CURSOR
   663	400624'	202 00 0 00 400576*		MOVEM	Z,IGNOS	
   664	400625'	200 00 0 00 400510*		MOVE	Z,STPTR
   665	400626'	202 00 0 00 000000#		MOVEM	Z,IGNOS+1
   666	400627'	200 07 0 00 400603*		MOVE	S2,SYSCT	; PREPARE TO SPAN OPERATORS
   667	400630'	205 10 0 00 100000 		MOVX	S3,Y.OP		; CHAR SET FOR OPERATORS
   668	400631'	265 11 0 00 400526*		JSP	TLINK,STRMC	; SPAN OPERATORS
   669	400632'	254 00 0 00 400636'		JRST	INBOP		; BIN OP AT END OF RECORD
   670	400633'	200 17 0 16 400611*		MOVE	Q3,SYSCTB(Q2)	; CHAR SET MASK
   671	400634'	607 17 0 00 604012 		TXNN	Q3,Y.BL!Y.TAB!Y.RB!Y.RP!Y.SEMI ; IS IT A BINARY OP. ?
   672	400635'	254 00 0 00 400654'		JRST	NOTBO		; JUMP IF NOT
   673	400636'	265 11 0 00 400453*	INBOP:	JSP	TLINK,INSTAL	; INSTALL BINARY OPERATOR
   674	400637'	001 17 0 00 000000 		ERROR 	15		; ERROR IN INSTAL
   675	400640'	200 14 0 00 000000 		MOVE	T4,Z		; POINTER TO T4
   676	400641'	331 13 0 14 000006 		SKIPL	T3,VKEY(T4)	; OPFLAG SET?
   677	400642'	254 00 0 00 400645'		JRST	INSERT		; NO GO INSERT DEFAULT PRECEDENCES
   678	400643'	505 00 0 00 000000*	BINARY:	HRLI	Z,SY.BIN##	; RETURN BINTYP,PTR
   679	400644'	254 00 0 06 000002 		JRST	2(SLINK)	; RETURN TO CLIENT
   680					;
   681	400645'	515 13 0 00 400000 	INSERT:	HRLZI	T3,OPFLAG	; SET OPFLAG
   682	400646'	436 13 0 14 000006 		IORM	T3,VKEY(T4)
   683	400647'	515 13 0 00 000020 		HRLZI	T3,LDPREC	; INSERT LEFT DEFAULT PRECEDENCE
   684	400650'	502 13 0 14 000002 		HLLM	T3,LPREC(T4)
   685	400651'	515 13 0 00 000021 		HRLZI	T3,RDPREC	; INSERT RIGHT DEFAULT PRECEDENCE
   686	400652'	502 13 0 14 000003 		HLLM	T3,RPREC(T4)
   687	400653'	254 00 0 00 400643'		JRST	BINARY	
   688					;
   689					;
   690	400654'	274 01 0 00 401045'	NOTBO:	SUB	STACK,[XWD 2,2]	; BINARY OPER IS CONCATENATION
   691	400655'	200 00 0 00 400624*		MOVE	Z,IGNOS		; RESTORE CURSOR
   692	400656'	202 00 0 00 400623*		MOVEM	Z,CURSOR
   693	400657'	200 00 0 00 000000#		MOVE	Z,IGNOS+1
   694	400660'	202 00 0 00 400625*		MOVEM	Z,STPTR
   695
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 15
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   696
   697					;
   698	400661'	261 01 0 00 400407*	LEX.IC:	PUSH	STACK,$ALPHA	; DESCRIPTOR TOP FOR & ALPHABET
   699	400662'	261 01 0 00 401027'		PUSH	STACK,[XWD " ",1]	; BLANK
   700	400663'	201 00 0 00 400350'		MOVEI	Z,ST2		; STATE=ST2
   701	400664'	202 00 0 00 400621*		MOVEM	Z,STATE
   702	400665'	265 11 0 00 400636*		JSP	TLINK,INSTAL	; INSTALL BLANK
   703	400666'	001 17 0 00 000000 		ERROR	15		; ERROR IN INSTALL
   704	400667'	254 00 0 00 400643'		JRST	BINARY		; JUMP TO RETURN BINTYP,PTR
   705					;
   706					;
   707	400670'				EOR:		; ENTRY POINT UPON REACHING END OF RECORD
   708	400670'	332 00 0 00 400616*		SKIPE	PREX		; TEST FOR PRE-EXECUTION
   709	400671'	254 00 0 00 400675'		JRST	EOR1		; YES - JUMP
   710	400672'	201 07 0 00 400344'		MOVEI	S2,ENOLAB	; NEXT STATE BEGINS AT ...
   711	400673'	202 07 0 00 400664*		MOVEM	S2,STATE	; ENOLAB
   712	400674'	254 00 0 06 000001 		JRST	1(SLINK)	; TAKE EOS RETURN
   713
   714	400675'	265 11 0 00 400017'	EOR1:	JSP	TLINK,GETREC	; FETCH A NEW RECORD
   715	400676'	254 00 0 00 400763'		JRST	MISEND		; NO END CARD
   716	400677'	200 17 0 00 400400*		MOVE	Q3,SUBJ		; FETCH 1ST CHAR BASED ON Q3...
   717	400700'	135 16 0 00 400660*		LDB	Q2,STPTR	; INTO Q2
   718	400701'	200 12 0 16 400633*		MOVE	T2,SYSCTB(Q2)	; CHAR SET MASK
   719	400702'	603 12 0 00 002100 		TXNE	T2,Y.PER!Y.PLUS	; CONTINUE CARD?
   720	400703'	254 00 0 00 400740'		JRST	REZUM		; JUMP IF YES
   721	400704'	200 14 0 00 400673*		MOVE	T4,STATE	; STATE=ST4
   722	400705'	302 14 0 00 400603'		CAIE	T4,ST4		;IS STATE ST4?
   723	400706'	254 00 0 00 400735'		JRST	ST5		; JUMP IF NOT
   724	400707'	201 14 0 00 400735'		MOVEI	T4,ST5
   725	400710'	202 14 0 00 400704*		MOVEM	T4,STATE	; SET STATE=ST5
   726	400711'	254 00 0 00 400614'		JRST	IMPNUL		; IMPLICIT NULL
   727
   728						 ; HERE FOR <CR> <LF>
   729						 ; 
   730	400712'	133 00 0 00 400700*	EOS2:	IBP	STPTR		; INCREMENT PAST
   731	400713'	370 00 0 00 400656*		SOS	CURSOR		; THE CARRIAGE RETURN
   732	400714'	133 00 0 00 400712*		IBP	STPTR		; BUMP CURSOR AND ...
   733	400715'	377 00 0 00 400713*		SOSG	CURSOR		; SKIP IF NOT AT END
   734	400716'	254 00 0 00 400670'		JRST	EOR		; END OF STRING - JUST LIKE PL/I
   735	400717'	254 00 0 00 400735'		JRST	ST5		;[257] STATE 1
   736
   737						 ; HERE FOR SEMICOLON
   738
   739	400720'	133 00 0 00 400714*	EOS:	IBP	STPTR		;[257] BUMP CURSOR
   740	400721'	377 00 0 00 400715*		SOSG	CURSOR		;[257] SKIP IF NOT AT END
   741	400722'	254 00 0 00 400670'		 JRST	EOR		;[257] END OF STRING
   742	400723'	200 17 0 00 400677*		MOVE	Q3,SUBJ		;[257] PREPARE FOR TEST
   743	400724'	135 16 0 00 400720*		LDB	Q2,STPTR	;[257] LOAD BYTE
   744	400725'	200 12 0 16 400701*		MOVE	T2,SYSCTB(Q2)	;[257] LOAD FROM CHARACTER TABLE
   745	400726'	616 12 0 00 401030'		TXNN	T2,Y.STAR!Y.VB!Y.SEMI	;[257] COMMENT CHAR.?
   746	400727'	254 00 0 00 400735'		JRST	ST5		;[257] STATE 1
   747
   748	400730'	200 07 0 00 400627*		MOVE	S2,SYSCT##	;[257] SET UP FOR STREAM
   749	400731'	200 10 0 00 401046'		MOVX	S3,Y.SEMI!Y.CR	;[257] LOOK FOR NEXT LINE.
   750	400732'	265 11 0 00 400506*		JSP	TLINK,STRM##	;[257] ..
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 15-1
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   751	400733'	255 00 0 00 000000 		JFCL			;[257] NO PROBLEM.
   752	400734'	274 01 0 00 400533*		SUB	STACK,XWD22##	;[257] NDON'T NEED WHATS ON THE STACK
   753
   754	400735'	201 14 0 00 400317'	ST5:	MOVEI	T4,ST1		; STATE=ST1
   755	400736'	202 14 0 00 400710*		MOVEM	T4,STATE
   756	400737'	254 00 0 06 000001 		JRST	1(SLINK)	; END OF STMT RETURN TO CLIENT
   757					;
   758	400740'	133 00 0 00 400724*	REZUM:	IBP	STPTR		; UPDATE STPTR & CURSOR
   759	400741'	370 00 0 00 400721*		SOS	CURSOR	
   760	400742'	200 17 0 00 400736*		MOVE	Q3,STATE	; IS STATE=ST3
   761	400743'	302 17 0 00 400536'		CAIE	Q3,ST3
   762	400744'	254 00 0 00 400316'		JRST	TOKEN		; GO FETCH THE NEXT TOKEN
   763	400745'	201 17 0 00 007777 		MOVEI	Q3,7777		; LARGE VALUE FOR COMPARISON WITH CURSOR
   764	400746'	202 17 0 00 400655*		MOVEM	Q3,IGNOS	; SAVE VALUE
   765	400747'	254 00 0 00 400540'		JRST	ST3.1		; PROCEED TO FETCH A TOKEN
   766	400750'				ERR:		; ENTER WITH NUMBER IN ACC 0
   767	400750'	201 07 0 00 400753'		MOVEI	S2,NEXT1	; SET STATE TO ...
   768	400751'	202 07 0 00 400742*		MOVEM	S2,STATE	; NEXT1
   769	400752'	254 00 0 06 000000 		JRST	0(SLINK)	; AND GIVE THE ERROR RETURN
   770
   771	400753'	265 11 0 00 400017'	NEXT1:	JSP	TLINK,GETREC	; READ 1 SOURCE RECORD
   772	400754'	001 14 0 00 000004 		ERROR	12,4		; INCORRECTIBLE READ ERROR
   773	400755'	200 17 0 00 400723*		MOVE	Q3,SUBJ		; FETCH 1ST CHAR BASED ON Q3 ...
   774	400756'	135 16 0 00 400740*		LDB	Q2,STPTR	; INTO Q2
   775	400757'	200 12 0 16 400725*		MOVE	T2,SYSCTB(Q2)	; CHAR SET MASK
   776	400760'	603 12 0 00 002100 		TXNE	T2,Y.PER!Y.PLUS	; CONTINUE CARD
   777	400761'	254 00 0 00 400753'		JRST	NEXT1		; FETCH ANOTHER RECORD IF YES
   778	400762'	254 00 0 00 400317'		JRST	ST1		; GO GIVE LABEL
   779
   780						 ; HERE IF NO MORE SOURCE COULD BE FOUND
   781
   782	400763'	201 14 0 00 400766'	MISEND:	MOVEI	T4,MISEN1	; SET UP LOCATION...
   783	400764'	202 14 0 00 400751*		MOVEM	T4,STATE	; FOR NEXT TIME
   784	400765'	254 00 0 06 000001 		JRST	1(SLINK)	; JUST INDICATE END OF STATE.
   785	
   786	400766'	201 00 0 00 000000*	MISEN1:	MOVEI	Z,CE.ME##	; ERROR MESSAGE
   787	400767'	202 06 0 00 400764*		MOVEM	SLINK,STATE	; SAVE LINK
   788	400770'	265 06 0 00 000000*		JSP	SLINK,CERROR##	; GIVE MESSAGE
   789	400771'	200 06 0 00 400767*		MOVE	SLINK,STATE	; RESTORE STATE
   790	400772'	400 00 0 00 000000 		CLEAR	Z,		; NO END LABEL
   791	400773'	254 00 0 06 000001 		JRST	1(SLINK)	; END OF PROGRAM
   792
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 16
SNOLEX	MAC	13-Oct-66 22:23		Lexical Routines

   793
   794					;
   795					;	UBENTR --- ROUTINE TO INSERT 1 ENTRY INTO A UBLOK
   796					;	-------------------------------------------------
   797					;
   798					;
   799					;
   800	400774'	200 16 0 00 000000*	UBENTR:	MOVE	Q2,NXTUBE##	; GET POINTER TO NEXT UBLOK SLOT
   801	400775'	311 16 0 00 000000*		CAML	Q2,LASLOT##	; IS THERE ROOM IN THE CURRENT UBLOK?
   802	400776'	254 00 0 00 401005'		JRST	GETSOM		; NO, ALLOCATE A NEW UBLO
   803	400777'	262 01 0 16 000001 	ENTRY:	POP	STACK,1(Q2)	; CREATE THE UBLOK ENTRY
   804	401000'	262 01 0 16 000000 		POP	STACK,0(Q2)
   805	401001'	200 00 0 00 000016 		MOVE	Z,Q2		; UBLOK ENTRY POINTER INTO ACC 0
   806	401002'	271 16 0 00 000002 		ADDI	Q2,2		; UPDATE UBLOK POINTER
   807	401003'	202 16 0 00 400774*		MOVEM	Q2,NXTUBE	; SAVE VALUE
   808	401004'	254 00 0 11 000000 		JRST	0(TLINK)	; RETURN
   809	401005'	201 00 0 00 000026 	GETSOM:	MOVEI	Z,UBSIZE	; ARGUMENT TO GCOLG
   810	401006'	265 15 0 00 000000*		JSP	QLINK,GCOLG##	; CALL GARBAGE COLLECTOR
   811	401007'	200 17 0 00 000000*		MOVE	Q3,GSURF##	; GET POINTER TO AVAILABLE CORE
   812	401010'	201 16 0 17 000001 		MOVEI	Q2,1(Q3)
   813	401011'	504 16 0 00 000017 		HRL	Q2,Q3		; SET UP FOR BLT COMMAND
   814	401012'	402 00 0 17 000000 		SETZM	0(Q3)		; ZERO 1ST WORD
   815	401013'	251 16 0 17 000025 		BLT	Q2,UBSIZE-1(Q3)	; ZERO A BLOCK OF WORDS
   816	401014'	200 00 0 00 401047'		MOVE	Z,[XWD UBLOK,UBSIZE]	; BLOK HEADER WORD
   817	401015'	202 00 1 00 000017 		MOVEM	Z,@Q3		; INSERT HEADER
   818	401016'	201 00 0 17 000026 		MOVEI	Z,UBSIZE(Q3)	; SET UP END-OF-BLOK POINTER
   819	401017'	202 00 0 00 401007*		MOVEM	Z,GSURF
   820	401020'	202 00 0 00 400775*		MOVEM	Z,LASLOT	; SAVE IN MEMORY
   821	401021'	201 16 0 17 000002 		MOVEI	Q2,2(Q3)	; SET UP POINTER FOR INITIAL ENTRY
   822	401022'	202 16 0 00 401003*		MOVEM	Q2,NXTUBE
   823	401023'	202 00 0 00 401017*		MOVEM	Z,GSURF
   824	401024'	254 00 0 00 400777'		JRST	ENTRY		; PROCEED TO MAKE ENTRY
   825					;
   826						END

NO ERRORS DETECTED

HI-SEG. BREAK IS 401050
PROGRAM BREAK IS 000000
CPU TIME USED 09:14.650

44P CORE USED
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page S-1
SNOLEX	MAC	13-Oct-66 22:23		SYMBOL TABLE

AF.RET		400471'		INPREX		400013'		PAGENO		400175'	ext	STKSAV		400061'	ext	
AUTOHS		400070'	ext	INSERT		400645'		PEJECT		400210'	ext	STPTR		400756'	ext	
BADNUM		400533'		INSTAL		400665'	ext	PLINK		000004		STR.		400336'	ext	
BINARY		400643'		IOEXT		000006	sin	PPL		000005	spd	STR.C		400605'	ext	
CE.IC		400574'	ext	IONAME		000005	sin	PPR		400313'	ext	STRM		400732'	ext	
CE.MB		400601'	ext	ISYSER		400417'		PPSA		400311'	ext	STRMC		400631'	ext	
CE.ME		400766'	ext	LASLOT		401020'	ext	PREX		400670'	ext	SUBJ		400755'	ext	
CE.NI		400534'	ext	LDPREC		000020	spd	PRIEXT		400246'		SY$COL		400443'	ext	
CE.QT		400521'	ext	LEX.BO		400623'		PRINO2		400251'		SY$COM		400426'	ext	
CE.SYS		400417'	ext	LEX.CL		400443'		PRINOM		400240'		SY$LB		400441'	ext	
CERROR		400770'	ext	LEX.CM		400426'		PRINT		400160'		SY$LP		400437'	ext	
CMPNO		400141'	ext	LEX.IC		400661'		PRINT1		400166'		SY$RB		400423'	ext	
COMENT		400155'		LEX.ID		400446'		PRINT2		400175'		SY$RP		400421'	ext	
COMPIN		400260'	ext	LEX.NM		400524'		PRINT3		400202'		SY.ARY		400470'	ext	
CONCAT		400247'	ext	LEX.QL		400500'		PRINTE		400206'	int	SY.BIN		400643'	ext	
CONTRL		400155'		LEX.S3		400424'		PRINTF		400212'	int	SY.CON		400515'	ext	
CURSOR		400741'	ext	LEX.S4		400427'		PSHR		400213'	ext	SY.FUN		400463'	ext	
CVTINT		400100'	ext	LEX.SL		400435'		PSHSA		400215'	ext	SY.ID		400457'	ext	
CVTNUM		400530'	ext	LEX.SP		400431'		Q2		000016		SY.UNY		400415'	ext	
CVTSTR		400242'	ext	LEX.SR		400421'		Q3		000017		SYSCT		400730'	ext	
CVTWD		400263'	ext	LEX.UO		400400'		QLINK		000015		SYSCTB		400757'	ext	
DATEE		400217'	ext	LEXASC	462133	000000	spd	RDFLGS		400033'	ext	T1		000011		
E12$26		000000	sin	LEXEDT		000254	spd	RDPREC		000021	spd	T2		000012		
E12$4		000000	sin	LEXMIN		000000	spd	RDSQA		400065'		T3		000013		
E15$		000000	sin	LEXSIX	544570	000000	spd	READ		400030'	ext	T4		000014		
END		400333'	ext	LEXVER		000005	spd	READ1		400020'		TKINIT		400004'	int	
ENOLAB		400344'		LEXWHO		000000	spd	READ1A		400024'		TLINK		000011		
ENTRY		400777'		LINE		400267'	ext	REGID		400457'		TOKEN		400316'	int	
EOR		400670'		LINENO		400044'	ext	REGP		000004	spd	TRIM		400265'	ext	
EOR1		400675'		LINES		400310'	ext	REZUM		400740'		UBENTR		400774'	int	
EOR4		400616'		LISTF		400207'	ext	RPREC		000003	sin	UBLOK		000414	spd	
EOS		400720'		LPAD		400052'	ext	S.BLNK		400302'	ext	UBSIZE		000026		
EOS2		400712'		LPREC		000002	sin	S.FIL		400274'	ext	UBSTOR		400513'		
ERR		400750'		LREAD1		400115'		S.ID		400271'	ext	UNBAL		400521'		
ERR	001000	000000		LREAD2		400122'		S.PAG		400303'	ext	UTBLOK		000414	sin	
ERR.S		400476'		LREGP		000002	spd	S.TAB		400000'		VKEY		000006	sin	
EXINIT		400001'	int	LREGS		000003	spd	S.VER		400272'	ext	VLABEL		000002	sin	
F.FLG		000002	spd	LREGT		000004	spd	S2		000007		WRITE		400173'	ext	
F.OR.A		400463'		LSAVEP		000011	spd	S3		000010		XWD22		400734'	ext	
FMT.S	002003	000000	spd	LSAVES		000011	spd	SAVEP		400312'	ext	Y.BL	200000	000000	spd	
FMT.WM	001000	000000	spd	LSAVET		000011	spd	SDT		004003	sin	Y.CM	001000	000000	spd	
FTDEBU		000000	spd	LSUBJ		400171'	ext	SLINK		000006		Y.COL	000020	000000	spd	
GCOLG		401006'	ext	MISEN1		400766'		SPCHAR		400430'		Y.CR		010000	spd	
GETREC		400017'		MISEND		400763'		ST1		400317'		Y.LB	000004	000000	spd	
GETSOM		401005'		N.FLG		000001	spd	ST2		400350'		Y.LOWS		200000	spd	
GSURF		401023'	ext	NEXT1		400753'		ST2.1		400355'		Y.LP	010000	000000	spd	
GTERTN		400145'		NLINES		400203'	ext	ST3		400536'		Y.MNS	000400	000000	spd	
GTFLAG		400572'	ext	NLMPGN		400225'	ext	ST3.1		400540'		Y.NUM	000040	000000	spd	
GTRRTN		400146'		NLPGNO		400241'	ext	ST3.BO		400576'		Y.OP	100000	000000	spd	
IDT		002001	sin	NOLABL		400346'		ST4		400603'		Y.OPND	172440	600000	spd	
IGNOS		400746'	ext	NONUMB		400144'		ST5		400735'		Y.PER	000100	000000	spd	
IGRD1		400113'		NOTBO		400654'		STACK		000001		Y.PLUS	002000	000000	spd	
IGREAD		400106'		NULLST		401044'	ext	STATE		400771'	ext	Y.Q	020000	000000	spd	
IMPNUL		400614'		NXTUBE		401022'	ext	STCON		400512'	ext	Y.QQ	040000	000000	spd	
INBOP		400636'		OPFLAG		400000	sin	STINIT		400122'	ext	Y.RB	000002	000000	spd	
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page S-2
SNOLEX	MAC	13-Oct-66 22:23		SYMBOL TABLE

Y.RP	004000	000000	spd	
Y.SEMI	000010	000000	spd	
Y.STAR	000200	000000	spd	
Y.TAB	400000	000000	spd	
Y.UN	000001	000000	spd	
Y.UPS		400000	spd	
Y.VB		001000	spd	
Z		000000		
$ALPHA		400661'	ext	
%%MACT	000200	000025	spd	
%%SNOP	000500	000305	spd	


SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

AF.RET	   533	   538#
AUTOHS	   140	   177
BADNUM	   576	   578#
BINARY	   678#	   687	   704
CE.IC	   545	   620
CE.MB	   629
CE.ME	   786
CE.NI	   579
CE.QT	   567
CE.SYS	   483
CERROR	   788
CMPNO	   189	   192	   238
COMENT	   180	   202	   219	   227	   255#
COMPIN	   126	   127	   348	   356
CONCAT	   168	   270	   344
CONTRL	   229	   254#
CURSOR	   467	   502	   541	   551	   559	   589	   615	   626	   662	   692	   731	   733	   740	   759
CVTINT	   188
CVTNUM	   575
CVTSTR	   239	   318	   337
CVTWD	   352	   360
DATEE	   308
E12$26	   281#
E12$4	   129#	   772#
E15$	   156#	   169#	   240#	   271#	   309#	   319#	   338#	   345#	   353#	   361#	   477#	   523#	   535#	   674#
	   703#
END	   415
ENOLAB	   419	   425#	   710
ENTRY	   803#	   824
EOR	   440	   594	   656	   707#	   734	   741
EOR1	   654	   709	   714#
EOR4	   642	   653#
EOS	   458	   605	   739#
EOS2	   460	   607	   730#
ERR	   484	   546	   569	   580	   621	   630	   766#
ERR.S	   461	   468	   471	   545#
EXINIT	    92#
F.FLG	    81#	   134
F.OR.A	   525	   531#
FMT.S	   347	   355
FMT.WM	   347	   355
FTDEBU	   119	   121	   246	   248	   303	   305	   385	   387
GCOLG	   810
GETREC	   107	   118#	   714	   771
GETSOM	   802	   809#
GSURF	   811	   819	   823
GTERTN	   130	   243#	   256
GTFLAG	    93	   401	   514	   617
GTRRTN	   244#
IDT	   145	   148	   237	   315	   334
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

IGNOS	   590	   614	   625	   663	   665	   691	   693	   764
IGRD1	   198	   204#
IGREAD	   178	   198#
IMPNUL	   648#	   658	   726
INBOP	   669	   673#
INPREX	   101	   106#
INSERT	   677	   681#
INSTAL	   410	   423	   476	   522	   673	   702
IOEXT	   351
IONAME	   359
ISYSER	   483#
LASLOT	   801	   820
LDPREC	   683
LEX.BO	   627	   662#
LEX.CL	   507	   513#	   613
LEX.CM	   452	   495#	   603
LEX.IC	   616	   698#
LEX.ID	   446	   517#
LEX.NM	   448	   571#
LEX.QL	   450	   550#
LEX.S3	   492#
LEX.S4	   497#	   512
LEX.SL	   456	   506#	   609
LEX.SP	   501#	   515
LEX.SR	   454	   488#	   597
LEX.UO	   444	   464#
LEXASC	    29#
LEXEDT	    22#
LEXMIN	    21#
LEXSIX	    28#
LEXVER	    20#
LEXWHO	    23#
LINE	   365
LINENO	   143	   146
LINES	   106	   292	   301	   383
LISTF	   273	   274	   297	   298	   366
LPAD	   155
LPREC	   684
LREAD1	   141	   209#
LREAD2	   194	   218#
LREGP	   119	   248	   303	   387
LREGS	   119	   248	   303	   387
LREGT	   119	   248
LSAVEP	   121	   246	   305	   385
LSAVES	   121	   246	   305	   385
LSAVET	   121	   246
LSUBJ	   276	   277
MISEN1	   782	   786#
MISEND	   715	   782#
N.FLG	    80#	   137
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

NEXT1	   767	   771#	   777
NLINES	   293
NLMPGN	   289	   295	   312	   316
NLPGNO	   124	   135	   286	   326	   335
NOLABL	   411	   427#
NONUMB	   231	   234	   241#
NOTBO	   672	   690#
NULLST	   200	   201	   648
NXTUBE	   800	   807	   822
OPFLAG	   681
PAGENO	   125	   285
PEJECT	   299
PLINK	   155	   308	   362
PPL	   119#	   119	   120	   121#	   121	   122	   246#	   246	   247	   248#	   248	   249	   303#	   303
	   304	   305#	   305	   306	   385#	   385	   386	   387#	   387	   388
PPR	   248	   387
PPSA	   246	   385
PREX	   100	   653	   708
PRIEXT	   332	   343#
PRINO2	   341	   347#
PRINOM	   313	   327	   334#
PRINT	   241	   255	   266#
PRINT1	   269	   273#
PRINT2	   285#
PRINT3	   287	   292#
PRINTE	   290	   297#
PRINTF	   301#
PSHR	   119	   303
PSHSA	   121	   305
Q2	   224	   225	   243	   244	   251	   252	   285	   286	   292	   293	   348	   349	   351	   356
	   357	   359	   412	   414	   441	   473	   488	   490	   495	   503	   509	   511	   513	   521
	   527	   528	   554	   564	   565	   595	   645	   670	   717	   718	   743	   744	   774	   775
	   800	   801	   803	   804	   805	   806	   807	   812	   813	   815	   821	   822
Q3	   223	   414	   415	   441	   443	   445	   447	   449	   451	   453	   455	   457	   459	   465
	   489	   506	   510	   595	   596	   600	   602	   604	   606	   608	   612	   645	   646	   670
	   671	   716	   742	   760	   761	   763	   764	   773	   811	   812	   813	   814	   815	   817
	   818	   821
QLINK	   810
RDFLGS	   132
RDPREC	   685
RDSQA	   138	   172#
READ	   128
READ1	   119#
READ1A	   124#	   257
REGID	   526#
REGP	   119	   120	   248	   249	   303	   304	   387	   388
REZUM	   720	   758#
RPREC	   686
S.BLNK	   369	   374	   376
S.FIL	   370
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

S.ID	   367
S.PAG	   377
S.TAB	    69#	   162	   211
S.VER	   368
S2	   118	   251	   406	   437	   517	   521	   524	   532	   534	   552	   571	   591	   639	   666
	   710	   711	   748	   767	   768
S3	   172	   209	   219	   233	   236	   266	   267	   294	   300	   311	   321	   340	   343	   390
	   407	   417	   420	   438	   518	   538	   539	   553	   555	   572	   592	   640	   667	   749
SAVEP	   121	   121#	   122	   246	   247	   305	   306	   385	   386
SDT	   367	   368	   369	   370	   372	   374	   376	   377	   379	   380
SLINK	   103	   104	   108	   109	   365	   416	   426	   428	   479	   504	   529	   542	   566	   649
	   679	   712	   756	   769	   784	   787	   788	   789	   791
SPCHAR	   493	   499#
ST1	    98	   401#	   754	   778
ST2	    92	   404	   436#	   610	   618	   643	   700
ST2.1	   443#	   647
ST3	   492	   527	   564	   589#	   761
ST3.1	   591#	   765
ST3.BO	   601	   625#
ST4	   497	   538	   598	   639#	   722
ST5	   723	   724	   735	   746	   754#
STACK	   145	   146	   148	   149	   151	   152	   158	   159	   161	   162	   164	   165	   174	   182
	   184	   186	   187	   190	   191	   199	   200	   201	   205	   210	   211	   213	   214	   237
	   238	   276	   277	   278	   315	   316	   323	   324	   329	   330	   334	   335	   371	   373
	   375	   378	   472	   475	   568	   578	   690	   698	   699	   752	   803	   804
STATE	    99	   396	   405	   499	   528	   539	   565	   599	   611	   644	   657	   701	   711	   721
	   725	   755	   760	   768	   783	   787	   789
STCON	   560
STINIT	   102	   218
STKSAV	   158	   159	   164	   165
STPTR	   224	   466	   501	   540	   550	   558	   664	   694	   717	   730	   732	   739	   743	   758
	   774
STR.	   418
STR.C	   439	   593	   641
STRM	   408	   421	   556	   750
STRMC	   519	   573	   668
SUBJ	   223	   465	   716	   742	   773
SY$COL	   513
SY$COM	   495
SY$LB	   511
SY$LP	   509
SY$RB	   490
SY$RP	   488
SY.ARY	   536
SY.BIN	   678
SY.CON	   563	   648
SY.FUN	   531
SY.ID	   413	   526
SY.UNY	   478
SYSCT	   406	   437	   517	   552	   571	   591	   639	   666	   748
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

SYSCTB	   225	   441	   469	   521	   595	   645	   670	   718	   744	   775
T1	   174	   175	   180	   183	   184	   189	   190	   192	   198	   204	   205
T2	   124	   125	   126	   225	   226	   228	   230	   273	   274	   297	   298	   351	   359	   466
	   469	   470	   598	   599	   610	   611	   643	   644	   656	   657	   718	   719	   744	   745
	   775	   776
T3	   127	   473	   474	   475	   676	   681	   682	   683	   684	   685	   686
T4	   589	   590	   614	   615	   625	   626	   675	   676	   682	   684	   686	   721	   722	   724
	   725	   754	   755	   782	   783
TEMP%%	   227	   448	   471	   647	   746
TEST%%	   408	   418	   519	   573	   750
TKINIT	    98#
TLINK	   102	   107	   118	   128	   168	   188	   218	   239	   241	   255	   267	   270	   280	   299
	   318	   337	   344	   352	   360	   408	   410	   418	   421	   423	   439	   476	   519	   522
	   556	   560	   561	   573	   575	   593	   641	   668	   673	   702	   714	   750	   771	   808
TOKEN	   396#	   762
TRIM	   362
UBENTR	    72	   561	   800#
UBLOK	    71#	   816
UBSIZE	    73#	   809	   815	   816	   818
UBSTOR	   561#	   577
UNBAL	   557	   567#
UTBLOK	    71
VKEY	   676	   682
VLABEL	   414
WRITE	   280
XWD22	   191	   199	   278	   568	   578	   752
Y.BL	   407	   420	   438	   592	   640	   671
Y.CM	   451	   602	   646
Y.COL	   455	   506	   612	   646
Y.CR	   407	   459	   606	   646	   749
Y.LB	   455	   510	   524	   534	   608
Y.LOWS	    76	   417	   445	   447	   518	   572
Y.LP	    76	   455	   524	   532
Y.MNS	    76	   228	   447	   572
Y.NUM	    76	   417	   447	   518	   572
Y.OP	    76	   443	   600	   667
Y.OPND	    76#	   470
Y.PER	   230	   447	   518	   572	   719	   776
Y.PLUS	    76	   230	   447	   572	   719	   776
Y.Q	    76	   449	   553
Y.QQ	    76	   449	   555
Y.RB	   453	   489	   596	   646	   671
Y.RP	   453	   596	   646	   671
Y.SEMI	   226	   407	   457	   604	   646	   671	   745	   749
Y.STAR	   226	   745
Y.TAB	   407	   420	   438	   592	   640	   671
Y.UN	   518
Y.UPS	    76	   417	   445	   447	   518	   572
Y.VB	   226	   745
Z	    92	    98	    99	   119	   121	   134	   137	   154	   167	   246	   248	   266	   268	   303
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Symbol cross reference

	   305	   343	   347	   355	   382	   383	   385	   387	   404	   405	   409	   412	   413	   422	   425
	   427	   478	   483	   492	   497	   499	   503	   520	   526	   531	   536	   545	   562	   563
	   567	   574	   579	   620	   629	   648	   662	   663	   664	   665	   675	   678	   691	   692
	   693	   694	   700	   701	   786	   790	   805	   809	   816	   817	   818	   819	   820	   823
$ALPHA	   151	   161	   210	   323	   329	   472	   698
SNOLEX - Lexical Analyzer  %5(254)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNOLEX	MAC	13-Oct-66 22:23		MA355/JDS/DRH/MP/RCM/VB		15-JUN-76


Macro/Opdef cross reference

DMOVE	   273	   297
ERR	   129	   156	   169	   240	   271	   281	   309	   319	   338	   345	   353	   361	   477	   523
	   535	   674	   703	   772
ERROR	   129	   156	   169	   240	   271	   281	   309	   319	   338	   345	   353	   361	   477	   523
	   535	   674	   703	   772
LEXPTX	    39
LEXTTL	    38
MIDENT	   120	   122	   247	   249	   304	   306	   386	   388
MOVX	   347	   355	   407	   417	   420	   438	   518	   553	   555	   572	   592	   640	   667	   749
POPR	   248	   387
POPSA	   246	   385
PPADDR	   119#	   120	   121#	   122	   246#	   247	   248#	   249	   303#	   304	   305#	   306	   385#	   386
	   387#	   388
PPINIT	   119	   121	   246	   248	   303	   305	   385	   387
PPLENG	   119#	   120	   121#	   122	   246#	   247	   248#	   249	   303#	   304	   305#	   306	   385#	   386
	   387#	   388
PUSHR	   119	   303
PUSHSA	   121	   305
SHOW.	    35	    36
TITLE.	    27
TXNE	   226	   228	   230	   443	   445	   447	   449	   451	   453	   455	   457	   459	   489	   506
	   510	   524	   532	   596	   600	   602	   604	   606	   608	   612	   719	   776
TXNN	   470	   534	   646	   671	   745t dr