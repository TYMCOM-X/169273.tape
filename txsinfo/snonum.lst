SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNONUM	MAC	13-Oct-66 22:22		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76

     1						SUBTTL	Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76
     2
     3					; COPYRIGHTS 1972,1973,1976,1977  STEVENS INSTITUTE OF TECHNOLOGY
     4					; HOBOKEN, NEW JERSEY, 07030
     5					; ALL RIGHTS RESERVED.
     6
     7					  ;UNIVERSALS
     8
     9						SEARCH	JOBDAT		;JOB DATA AREA DEFINITIONS
    10						SEARCH	MACTEN		;DEC-10 COMMON MACROS
    11						SEARCH	UUOSYM		;TOPS10 UUO SYMBOL DEFINITIONS
    12						SEARCH	SNOPRM		;SITBOL PARAMETER FILE
    13
    14					  ;DIRECTIVES
    15
    16						.DIRECT	.XTABM		;EXCLUDE TABS FROM MACRO CALLS
    17						SALL			;SUPPRESS MACRO EXPANSIONS
    18	400000'					TWOSEG	400K		;TWOSEGMENT CODE
    19
    20					  ;VERSION NUMBER
    21
    22			000005			NUMVER==5		;MAJOR VERSION NUMBER
    23			000000			NUMMIN==0		;MINOR VERSION NUMBER
    24			000151			NUMEDT==151		;EDIT LEVEL
    25			000000			NUMWHO==0		;CUSTOMER ARGUMENT
    26
    27					  ;TITLE
    28
    29						TITLE.	NUM,SNONUM,<Numeric Routines>
    30		566555	000000			NUMSIX==SIXBIT /NUM/	; SNONUM ABBREVIATION IN SIXBIT
    31		472531	500000			NUMASC==ASCIZ /NUM/	; SNONUM ABBREVIATION IN ASCII
    32						SALL
    33
    34
    35					  ;SHOW UNIVERSAL VERSION NUMBERS
    36
    37	400000'	043100	000450			SHOW.	%%JOBD		;VERSION NUMBER OF JOBDAT
    38	400000'	000200	000025			SHOW.	%%MACT		;VERSION NUMBER OF MACTEN
    39	400000'	001400	000457			SHOW.	%%UUOS		;VERSION NUMBER OF UUOSYM
    40	400000'	000500	000305			SHOW.	%%SNOP		;VERSION NUMBER OF SNOPRM
    41
    42						NUMTTL			; Title
    43						NUMPTX			; PASS2 assembly message
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 2
SNONUM	MAC	13-Oct-66 22:22		Table of Contents

    44						SUBTTL	Table of Contents
    45
    46					;		Table of Contents for Numeric Routines
    47					;
    48					;
    49					;			   Section			      Page
    50					;   1. Table of Contents. . . . . . . . . . . . . . . . . . .    2
    51					;   2. REVISION HISTORY . . . . . . . . . . . . . . . . . . .    3
    52					;   3. INTRODUCTION . . . . . . . . . . . . . . . . . . . . .    4
    53					;   4. NUMCOM . . . . . . . . . . . . . . . . . . . . . . . .    5
    54					;   5. NUMOP. . . . . . . . . . . . . . . . . . . . . . . . .    9
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 3
SNONUM	MAC	13-Oct-66 22:22		REVISION HISTORY

    55						SUBTTL	REVISION HISTORY
    56
    57					COMMENT	\
    58
    59					START OF VERSION 5.
    60					122	RENAME MODULES & CLEAN UP.
    61					151	INTEGER(3.0) doesn't fail, make it.
    62					\
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 4
SNONUM	MAC	13-Oct-66 22:22		INTRODUCTION

    63						SUBTTL	INTRODUCTION
    64					;THIS MODULES CONTAINS ALL ARITHMETIC ROUTINES FOR SITBOL.  IT
    65					;IS BROKEN UP INTO TWO PARTS:
    66					;	1)NUMCOM -- NUMERIC COMPARISON ROUTINES
    67					;		 -- EQ,NE,GE,LE,GT,LT
    68					;		-- REMDR, INTEGER, RANDOM
    69
    70					;	2)NUMOP  -- NUMERIC AND ARITHMETIC OPERATIONS
    71					;		 -- PLUS,MINUS,EXP,MUL,DIV,SUM,DIFF
    72
    73					;THE TWO BUILT-IN FUNCTIONS 'REMDR' AND 'INTEGER' ARE IN
    74					;NUMCOM.
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 5
SNONUM	MAC	13-Oct-66 22:22		NUMCOM	--NUMERIC COMPARISON ROUTINES

    75					SUBTTL	NUMCOM	--NUMERIC COMPARISON ROUTINES
    76
    77	400000'	205 06 0 00 315240 	GE::	MOVSI	S1,(CAMGE P2,)	;SETUP CORRECT COMPARE.
    78	400001'	254 00 0 00 400014'		JRST	DOCOM		;AND GO DO COMPARE
    79
    80	400002'	205 06 0 00 313240 	LE::	MOVSI	S1,(CAMLE P2,)	;COMPARE LESS THAN
    81	400003'	254 00 0 00 400014'		JRST	DOCOM		;AND GO TO COMPARE ROUTINE
    82
    83	400004'	205 06 0 00 317240 	GT::	MOVSI	S1,(CAMG P2,)	;COMPARE GT
    84	400005'	254 00 0 00 400014'		JRST	DOCOM
    85
    86	400006'	205 06 0 00 311240 	LT::	MOVSI	S1,(CAML P2,)	;LESS THAN
    87	400007'	254 00 0 00 400014'		JRST	DOCOM
    88
    89
    90	400010'	205 06 0 00 312240 	EQ::	MOVSI	S1,(CAME P2,)	;CHECK FOR EQUALITY
    91	400011'	254 00 0 00 400014'		JRST	DOCOM		;AND TO COMPARE
    92
    93	400012'	205 06 0 00 316240 	NE::	MOVSI	S1,(CAMN P2,)	;CHECK FOR INEQUALITY
    94	400013'	254 00 0 00 400014'		JRST	DOCOM
    95

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 6
SNONUM	MAC	13-Oct-66 22:22		NUMCOM	--NUMERIC COMPARISON ROUTINES

    96					;DOCOM IS THE ROUTINE THAT DOES THE ACTUALLY CONDITION CHECKING
    97					;ON THE COMPARISON PREDICATES.  IT CALLS 'GTSAM2', JUST TO GET 
    98					;LIKE DATA-TYPES WITHOUT REGARD FOR WHAT THEY ARE.
    99
   100	400014'	265 15 0 00 400022'	DOCOM:	JSP	QLINK,GTSAM2	;GET LIKE DATA TYPES
   101	400015'	001 17 0 00 000000 		ERROR	15		; CAN'T HAPPEN
   102	400016'	255 00 0 00 000000 		JFCL			;IGNORE INTEGER RETURN
   103	400017'	256 00 0 00 000006 		XCT	S1		;DO THE COMPARISON
   104	400020'	254 00 0 04 000000 		JRST	0(PLINK)	;CONDITION NOT SATISFIED
   105	400021'	254 00 0 00 000000*		JRST	RETNUL##	;CONDITION SATISFIED--
   106									; RETURN A NULL
   107
   108					;GTSAM2--ROUTINE TO CONVERT TWO ARGS ON THE STACK TO THE
   109					;SAME NUMERIC FORM.  AN ATTEMPT IS MADE TO CONVERT TO NUMERIC
   110					;OHTERWISE THEY WILL BE CONVERTED TO REAL.
   111
   112					;CALLING SEQUENCE:	JSP QLINK,GTSAM2
   113					;			  ERROR RETURN
   114					;			  INTEGER RETURN
   115					;			  REAL RETURN
   116
   117					;ON RETURN:	P2 CONTAINS FIRST ARGUMENT
   118					;		Z  CONTAINS SECOND ARGUMENT
   119					;		S2 CONTAINS A DESCRIPTOR HEADER FOR THE RESULT.
   120					;	     ***STACK IS POP'ED***
   121
   122	400022'	400 00 0 00 000000 	GTSAM2:	CLEAR	Z,		;A LOOP FLAG
   123	400023'	200 07 0 01 777777 		MOVE	S2,-1(STACK)	;GET TYPE OF SECOND ARG
   124	400024'	404 07 0 01 777775 	GTSAM3:	AND	S2,-3(STACK)	;AND IT WITH FIRST TYPE
   125	400025'	202 15 0 00 000000*		MOVEM	QLINK,IGNOP##	;SAVE THIS
   126	400026'	607 07 0 00 002000 		TLNN	S2,NUMDC	;BOTH NUMERIC?
   127	400027'	254 00 0 00 400036'		JRST	GTSM2A		;NO--MAKE THEM BOTH REAL
   128	400030'	603 07 0 00 000001 		TLNE	S2,IDT-NUMDC	;BOTH INTEGERS?
   129	400031'	254 00 0 00 400064'		JRST	GOTINT		;YES
   130	400032'	603 07 0 00 000002 		TLNE	S2,RDT-NUMDC	;BOTH REAL?
   131	400033'	254 00 0 00 400063'		JRST	GOTRL		;YES GO HANDLE IT
   132	400034'	332 00 0 00 000000 		SKIPE	Z		;FIRST TIME THRU
   133	400035'	254 00 0 00 400051'		JRST	GTSAM4		;NO, GO TO REAL
   134	400036'	265 11 0 00 000000*	GTSM2A:	JSP	TLINK,CVTNUM##	;CONVERT SECOND ARG TO NUMERIC
   135	400037'	003 01 0 00 000034 		ERROR.	1,28		; BAD 2ND ARG
   136	400040'	262 01 0 00 000010 		POP	STACK,S3	;POP OFF SECOND ARG
   137	400041'	262 01 0 00 000007 		POP	STACK,S2	;GET THE DESCRIPTOR
   138	400042'	265 11 0 00 400036*		JSP	TLINK,CVTNUM	;CONVERT FIRST ARG TO NUMERIC
   139	400043'	003 01 0 00 000033 		ERROR.	1,27		; BAD 1ST ARG
   140	400044'	261 01 0 00 000007 		PUSH	STACK,S2	;PUT SECOND ARG BACK ON
   141	400045'	261 01 0 00 000010 		PUSH	STACK,S3	;STACK, AND
   142	400046'	474 00 0 00 000000 		SETO	Z,		;SET SECOND TIME AROUND
   143	400047'	200 15 0 00 400025*		MOVE	QLINK,IGNOP##	;RESTORE QLINK
   144	400050'	254 00 0 00 400024'		JRST	GTSAM3		;AND TRY AGAIN
   145
   146

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 7
SNONUM	MAC	13-Oct-66 22:22		NUMCOM	--NUMERIC COMPARISON ROUTINES

   147	400051'	265 11 0 00 000000*	GTSAM4:	JSP	TLINK,CVTRL##	;TRY TO GO TO REAL
   148	400052'	254 00 0 15 000000 		  JRST	0(QLINK)	;NO CONVERSION
   149	400053'	262 01 0 00 000010 		POP	STACK,S3	;POP OFF SEC ARG
   150	400054'	262 01 0 00 000007 		POP	STACK,S2
   151	400055'	265 11 0 00 400051*		JSP	TLINK,CVTRL	;AND CONVERT FIRST ARG
   152	400056'	254 00 0 15 000000 		  JRST	0(QLINK)	;CAN'T CONVERT
   153	400057'	200 00 0 00 000010 		MOVE	Z,S3		;SECOND ARG IN Z
   154	400060'	200 15 0 00 400047*		MOVE	QLINK,IGNOP##	;RESTORE QLINK
   155	400061'	340 15 0 00 000000 		AOJ	QLINK,		;DOUBLE SKIP MEANS AOS ONCE AND THEN
   156	400062'	344 15 0 00 400067'		AOJA	QLINK,GOTFST	;AOS QLINK AND FINISH THE JOB
   157
   158	400063'	340 15 0 00 000000 	GOTRL:	AOJ	QLINK,		;SKIP RETURN
   159	400064'	340 15 0 00 000000 	GOTINT:	AOJ	QLINK,		;FOR INTEGER RETUNR
   160	400065'	262 01 0 00 000000 		POP	STACK,Z		;SECOND ARG IN Z
   161	400066'	262 01 0 00 000007 		POP	STACK,S2	;DESCRIPTOR IN S2
   162	400067'	262 01 0 00 000005 	GOTFST:	POP	STACK,P2	;FIRST ARG IN P2
   163	400070'	262 01 0 01 000000 		POP	STACK,(STACK)	;CLEAR THE STACK
   164	400071'	254 00 0 15 000000 		JRST	0(QLINK)	;AND TAKE INTEGER RETURN
   165

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 8
SNONUM	MAC	13-Oct-66 22:22		NUMCOM	--NUMERIC COMPARISON ROUTINES

   166					;HERE ARE THE 'REMDR' AND 'INTEGER' BUILT INS
   167					; AND ALSO 'RANDOM'
   168
   169	400072'	265 11 0 00 000000*	REMDR::	JSP	TLINK,CVTINT##	;CONVERT SEC ARG TO INT
   170	400073'	003 01 0 00 000124 		ERROR.	1,84		;CAN'T DO
   171	400074'	262 01 0 00 000005 		POP	STACK,P2	;GET SEC ARG IN P2
   172	400075'	262 01 0 01 000000 		POP	STACK,(STACK)	;AND FORGET THIS
   173	400076'	265 11 0 00 400072*		JSP	TLINK,CVTINT	;CONVERT FIRST ARG TO INT
   174	400077'	003 01 0 00 000125 		ERROR.	1,85
   175	400100'	262 01 0 00 000007 		POP	STACK,S2	;GET FIRST ARG IN S2
   176	400101'	336 00 0 00 000005 		SKIPN	P2		;CANT DIV BY ZERO
   177	400102'	001 12 0 00 000017 		ERROR	10,15
   178	400103'	230 07 0 00 000005 		IDIV	S2,P2		;DO THE DIVIDE
   179	400104'	205 07 0 00 002001 		MOVSI	S2,IDT		;INTEGER
   180	400105'	202 07 0 01 000000 		MOVEM	S2,(STACK)	;PUT ON STACK
   181	400106'	261 01 0 00 000010 		PUSH	STACK,S2+1	;STACK THE REMAINDER
   182	400107'	254 00 0 04 000001 		JRST	1(PLINK)	;AND RETURN
   183
   184	400110'	265 11 0 00 400042*	INTGR::	JSP	TLINK,CVTNUM##	;[151] Make sure its integral
   185	400111'	254 00 0 00 000000*		  JRST	FRET1		;[151] Its not -- Fail
   186	400112'	554 15 0 01 777777 		HLRZ	Q1,-1(STACK)	;[151] Get the datatype
   187	400113'	302 15 0 00 002001 		CAIE	Q1,IDT		;[151] Must be integer
   188	400114'	254 00 0 00 400111*		JRST	FRET1##		;ITS NOT -- FAIL
   189	400115'	254 00 0 00 000000*		JRST	RETNL1##	;RETURN THE NULL
   190
   191
   192	400116'	265 11 0 00 400076*	RAND::	JSP	TLINK,CVTINT	; ENSURE AN
   193	400117'	003 01 0 00 000122 		ERROR.	1,82		; INTEGER
   194
   195						 ; GENERATOR OBTAINED FROM JACM 14:1,110
   196
   197	400120'	357 07 0 00 000000*		AOSG	S2,$RAND##	; PICK UP OLD...
   198	400121'	201 07 0 00 000001 		MOVEI	S2,1		; + 1
   199	400122'	220 07 0 00 400333'		IMUL	S2,[273673163155]	; APPLY MULTIPLIER
   200	400123'	202 07 0 00 400120*		MOVEM	S2,$RAND	; SAVE RESULT
   201
   202	400124'	242 07 0 00 000001 		LSH	S2,1		; REMOVE SIGN
   203	400125'	201 06 0 00 000200 		MOVEI	S1,200		; NO POWER OF 2
   204	400126'	246 06 0 00 777767 		LSHC	S1,-9		; SHIFT EXPONENT IN
   205	400127'	132 07 0 00 000000 		FSC	S2,0		; AND NORMALIZE
   206
   207	400130'	332 00 0 01 000000 		SKIPE	0(STACK)	; REQUESTED REAL?
   208	400131'	254 00 0 00 400136'		JRST	RANDI		; NO, INTEGER
   209
   210	400132'	205 15 0 00 002002 		MOVSI	Q1,RDT		; INDICATE ...
   211	400133'	202 15 0 01 777777 		MOVEM	Q1,-1(STACK)	; DATATYPE
   212	400134'	202 07 0 01 000000 		MOVEM	S2,0(STACK)	; SET VALUE
   213	400135'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
   214
   215	400136'				RANDI:	 ; HERE TO PRODUCE AN INTEGER
   216
   217	400136'	331 00 0 01 000000 		SKIPL	0(STACK)	; TEST FOR NEG ARG
   218	400137'	265 11 0 00 400055*		JSP	TLINK,CVTRL	; MAKE A REAL
   219	400140'	001 15 0 00 000057 		ERROR	13,47		; FAIL RET CAN'T HAPPEN
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 8-1
SNONUM	MAC	13-Oct-66 22:22		NUMCOM	--NUMERIC COMPARISON ROUTINES

   220
   221	400141'	161 07 0 01 000000 		FMPL	S2,0(STACK)	; DO THE MULTIPLY
   222	400142'	202 07 0 01 000000 		MOVEM	S2,0(STACK)	; STORE RESULT ON STACK
   223	400143'	265 11 0 00 400116*		JSP	TLINK,CVTINT	; MAKE AN INTEGER
   224	400144'	001 15 0 00 000057 		ERROR	13,47		; THIS WON'T HAPPEN
   225
   226	400145'	350 00 0 01 000000 		AOS	0(STACK)	; NEED 1 MORE
   227	400146'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
   228

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 9
SNONUM	MAC	13-Oct-66 22:22		NUMOP	ARITHMETIC OPERATIONS

   229					SUBTTL	NUMOP	ARITHMETIC OPERATIONS
   230
   231
   232					;FIRST THE BINARY OPERATIONS
   233
   234					;SUM,DIFF,MUL,DIV,EXP
   235
   236
   237					;ADDITION
   238	400147'	265 15 0 00 400022'	SUM::	JSP	QLINK,GTSAM2	;GET LIKE DATA TYPES
   239	400150'	001 17 0 00 000000 		ERROR	15		; CAN'T HAPPEN
   240	400151'	254 00 0 00 400156'		JRST	SUMINT		;AND TWO INTEGER
   241
   242	400152'	255 17 0 00 400153'	SUMRL:	JFCL	17,.+1		;CLEAR ALL FLAGS
   243	400153'	200 11 0 00 400334'		MOVE	T1,[ERROR (10,2)]
   244	400154'	144 05 0 00 000000 		FADR	P2,Z		;DO THE ADD
   245	400155'	254 00 0 00 400325'		JRST	BINRET		;COMMON BIN OP RETURN
   246
   247	400156'	255 17 0 00 400157'	SUMINT:	JFCL	17,.+1		;CLEAR ALL FLAGS
   248	400157'	200 11 0 00 400335'		MOVE	T1,[ERROR (10,7)]
   249	400160'	270 05 0 00 000000 		ADD	P2,Z		;AND THEM
   250	400161'	254 00 0 00 400325'		JRST	BINRET		;AND RETURN
   251
   252
   253					;SUBTRACTION
   254	400162'	265 15 0 00 400022'	DIFF::	JSP	QLINK,GTSAM2	;GET A MATCHED SET
   255	400163'	001 17 0 00 000000 		ERROR	15		; CAN'T HAPPEN
   256	400164'	254 00 0 00 400171'		JRST	DIFINT		;INTEGERS
   257
   258	400165'	255 17 0 00 400166'	DIFRL:	JFCL	17,.+1		;CLEAR ALL FLAGS
   259	400166'	200 11 0 00 400334'		MOVE	T1,[ERROR (10,2)]
   260	400167'	154 05 0 00 000000 		FSBR	P2,Z		;SUBTACT THEM
   261	400170'	254 00 0 00 400325'		JRST	BINRET		;AND RETURN
   262
   263	400171'	255 17 0 00 400172'	DIFINT:	JFCL	17,.+1		;CLEAR ALL FLAGS
   264	400172'	200 11 0 00 400336'		MOVE	T1,[ERROR (10,8)]
   265	400173'	274 05 0 00 000000 		SUB	P2,Z		;SUBTRACT THEM
   266	400174'	254 00 0 00 400325'		JRST	BINRET
   267

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 10
SNONUM	MAC	13-Oct-66 22:22		NUMOP	ARITHMETIC OPERATIONS

   268					;MULTIPLICATION
   269	400175'	265 15 0 00 400022'	MUL::	JSP	QLINK,GTSAM2	;GET LIKE DATA TYPES
   270	400176'	001 17 0 00 000000 		ERROR	15		; CAN'T HAPPEN
   271	400177'	254 00 0 00 400204'		JRST	MULINT		;INTEGERS
   272
   273	400200'	255 17 0 00 400201'	MULRL:	JFCL	17,.+1	;CLEAR ALL FLAGS
   274	400201'	200 11 0 00 400334'		MOVE	T1,[ERROR (10,2)]
   275	400202'	164 05 0 00 000000 		FMPR	P2,Z		;DO THE MULTIPLY
   276	400203'	254 00 0 00 400325'		JRST	BINRET		;AND RETURN
   277
   278	400204'	255 17 0 00 400205'	MULINT:	JFCL	17,.+1		;CLEAR FLAGS
   279	400205'	200 11 0 00 400337'		MOVE	T1,[ERROR (10,9)]
   280	400206'	220 05 0 00 000000 		IMUL	P2,Z		;DO THE MULTIPLY
   281	400207'	254 00 0 00 400325'		JRST	BINRET
   282
   283
   284					;DIVISION
   285	400210'	265 15 0 00 400022'	DIV::	JSP	QLINK,GTSAM2	;GET LIKE DATATYPES
   286	400211'	001 17 0 00 000000 		ERROR	15		; CAN'T HAPPEN
   287	400212'	254 00 0 00 400221'		JRST	DIVINT
   288
   289	400213'	336 00 0 00 000000 	DIVRL:	SKIPN	Z		;IS  DIVISOR ZERO?
   290	400214'	001 12 0 00 000003 		ERROR	10,3		;YES
   291	400215'	255 17 0 00 400216'		JFCL	17,.+1
   292	400216'	200 11 0 00 400334'		MOVE	T1,[ERROR (10,2)]
   293	400217'	174 05 0 00 000000 		FDVR	P2,Z		;DO THE DIVIDE
   294	400220'	254 00 0 00 400325'		JRST	BINRET
   295
   296	400221'	336 00 0 00 000000 	DIVINT:	SKIPN	Z		;IS DIVISOR ZERO?
   297	400222'	001 12 0 00 000006 		ERROR	10,6		;YES
   298	400223'	255 17 0 00 400224'		JFCL	17,.+1
   299	400224'	200 11 0 00 400340'		MOVE	T1,[ERROR (10,6)]	;THIS SHOULDN'T HAPPEN
   300	400225'	230 05 0 00 000000 		IDIV	P2,Z		;DIVIDE
   301	400226'	254 00 0 00 400325'		JRST	BINRET
   302

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 11
SNONUM	MAC	13-Oct-66 22:22		NUMOP	ARITHMETIC OPERATIONS

   303					;NOW THE EXPONENTIATION ROUTINE
   304					;COMMENTS REFER TO  A ** B
   305					;USING THIS ALGORITHM, THE NUMBER OF MULTIPLICATIONS
   306					;IS LESS THAN 2LOG(2) B
   307
   308
   309	400227'	265 11 0 00 400143*	EXP::	JSP	TLINK,CVTINT	;CONVERT B TO INTEGER
   310	400230'	003 01 0 00 000036 		ERROR.	1,30		; BAD ARG
   311	400231'	262 01 0 00 000000*		POP	STACK,NUMSTR##	;GET B
   312	400232'	262 01 0 01 000000 		POP	STACK,(STACK)	;IGNORE THIS
   313
   314	400233'	265 11 0 00 400110*	EXP1:	JSP	TLINK,CVTNUM	;CONVERT A TO NUMERIC
   315	400234'	003 01 0 00 000035 		ERROR.	1,29		;HE LOSES
   316	400235'	262 01 0 00 000006 		POP	STACK,S1	;A GOES IN S1
   317	400236'	262 01 0 00 000010 		POP	STACK,S3	;ITS DESCRIPTOR IN S3
   318	400237'	201 07 0 00 000001 		MOVEI	S2,1		;SETUP FOR MULTIPLY
   319	400240'	603 10 0 00 000002 		TLNE	S3,RDT-NUMDC	;REAL?
   320	400241'	205 07 0 00 201400 		MOVSI	S2,201400	;YES MAKE IT 1.0
   321
   322	400242'	200 15 0 00 400231*	EXP2:	MOVE	Q1,NUMSTR	;GET B BACK
   323	400243'	243 15 0 00 400245'		JFFO	Q1,EXP2A	;GET HIGH ORDER BIT OF B
   324	400244'	254 00 0 00 400307'		JRST	EXPZR		;A ** 0 = 1
   325	400245'	603 10 0 00 000002 	EXP2A:	TLNE	S3,RDT-NUMDC	;IS A REAL?
   326	400246'	312 06 0 00 400341'		CAME	S1,[201400,,0]	;YES COMPARE AGAINST 1.0
   327	400247'	306 06 0 00 000001 		CAIN	S1,1		;IF INTEGER COMPARE AGAINST 1
   328	400250'	254 00 0 00 400307'		JRST	EXPZR		;1 ** X = 1
   329	400251'	201 05 0 00 000001 		MOVEI	P2,1		;SETUP A MARKER
   330	400252'	213 00 0 00 000016 		MOVNS	Q2		;NEG NUMBER OF LEADING ZEROES
   331	400253'	271 16 0 00 000043 		ADDI	Q2,^D35		;PLUS 35
   332	400254'	242 05 0 16 000000 		LSH	P2,(Q2)		;SETUP A MARKER
   333	400255'	201 16 0 00 000001 		MOVEI	Q2,1		;AND A CURSOR
   334
   335	400256'	255 17 0 00 400257'	EXP3:	JFCL	17,.+1		;CLEAR ALL FLAGS
   336	400257'	316 05 0 00 00001P30:	CAMN	P2,Q2		;DONE YET?
   337	400260'	254 00 0 00 400275'		JRST	EXPDON		;YES FINISH UP
   338	400261'	603 10 0 00 000002 		TLNE	S3,RDT-NUMDC	;A REAL?
   339	400262'	254 00 0 00 400267'		JRST	EXP4		;YES! USE FMPR'S
   340	400263'	612 15 0 00 000016 		TDNE	Q1,Q2		;IS CURRENT BIT 1?
   341	400264'	220 07 0 00 000006 		IMUL	S2,S1		;YES! SAVE THIS ONE
   342	400265'	220 06 0 00 000006 		IMUL	S1,S1		;AND SQUARE THIS
   343	400266'	254 00 0 00 400272'		JRST	EXP3A		;SETUP FOR NEXT LOOP
   344
   345	400267'	612 15 0 00 000016 	EXP4:	TDNE	Q1,Q2		;IS CURRENT BIT A 1?
   346	400270'	164 07 0 00 000006 		FMPR	S2,S1		;YES SAVE THIS MUL
   347	400271'	164 06 0 00 000006 		FMPR	S1,S1		;AND SQUARE THIS
   348
   349	400272'	242 16 0 00 000001 	EXP3A:	LSH	Q2,1		;SETUP CURSOR FOR NEXT BIT
   350	400273'	255 10 0 00 400342'		JOV	[ERROR (10,5)]	;OVERFLOW?
   351	400274'	254 00 0 00 400257'		JRST	EXP30		;GO BACK FOR MORE
   352

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 12
SNONUM	MAC	13-Oct-66 22:22		NUMOP	ARITHMETIC OPERATIONS

   353					;MORE EXPONENTIATION
   354
   355	400275'	255 17 0 00 400276'	EXPDON:	JFCL	17,.+1		;CLEAR ALL FLAGS
   356	400276'	603 10 0 00 000002 		TLNE	S3,RDT-NUMDC	;IS A REAL?
   357	400277'	254 00 0 00 400302'		JRST	EXPDN1		;YES
   358	400300'	220 07 0 00 000006 		IMUL	S2,S1		;FINAL PRODUCT
   359	400301'	254 00 0 00 400303'		JRST	EXPRET		;STACK AND RETURN
   360
   361	400302'	164 07 0 00 000006 	EXPDN1:	FMPR	S2,S1		;FINAL REAL PRODUCT
   362
   363	400303'	255 10 0 00 400342'	EXPRET:	JOV	[ERROR (10,5)]	;OVERFLOW?
   364	400304'	261 01 0 00 000010 		PUSH	STACK,S3	;PUSH THE DESCRIPTOR
   365	400305'	261 01 0 00 000007 		PUSH	STACK,S2	;AND THE ANSWER
   366	400306'	254 00 0 04 000001 		JRST	1(PLINK)	;AND RETURN
   367
   368	400307'	201 07 0 00 000001 	EXPZR:	MOVEI	S2,1		;ANSWER IS 1
   369	400310'	603 10 0 00 000002 		TLNE	S3,RDT-NUMDC	;IF A IS REAL,
   370	400311'	205 07 0 00 201400 		MOVSI	S2,201400	;ITS 1.0
   371	400312'	254 00 0 00 400304'		JRST	EXPRET+1	;AND RETURN
   372

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 13
SNONUM	MAC	13-Oct-66 22:22		NUMOP	ARITHMETIC OPERATIONS

   373					;HERE ARE THE TWO UNARY ROUTINES PLUS AND MINUS
   374
   375	400313'	265 11 0 00 400233*	PLUS::	JSP	TLINK,CVTNUM	;CONVERT ARG TO NUMERIC
   376	400314'	003 01 0 00 000041 		ERROR.	1,33		;CONVERSION FAILED
   377	400315'	254 00 0 04 000001 		JRST	1(PLINK)	;RETURN
   378
   379
   380	400316'	265 11 0 00 400313*	MINUS::	JSP	TLINK,CVTNUM	;CONVERT TO NUMERIC
   381	400317'	003 01 0 00 000042 		ERROR.	1,34		;CAN'T CONVERT
   382	400320'	200 05 0 01 000000 		MOVE	P2,0(STACK)	;GET THE VALUE
   383	400321'	316 05 0 00 400343'		CAMN	P2,[400000,,0]	;IF LARGEST NEGATIVE NUMBER,
   384	400322'	001 12 0 00 000016 		ERROR	10,14		;THEN WE CAN'T CONVERT
   385	400323'	212 05 0 01 000000 		MOVNM	P2,0(STACK)	;TAKE THE NEGATIVE
   386	400324'	254 00 0 04 000001 		JRST	1(PLINK)	;AND RETURN
   387

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 14
SNONUM	MAC	13-Oct-66 22:22		NUMOP	ARITHMETIC OPERATIONS

   388					;COMMON RETURN FOR ALL BINARY OPERATIONS
   389
   390	400325'	255 10 0 00 400327'	BINRET:	JOV	.+2		;SKIP IF OVERFLOW SET
   391	400326'	334 00 0 00 000000 		SKIPA			;SKIP ERROR JUMP
   392	400327'	254 00 0 00 000011 		JRST	T1		;JUMP TO ERROR ALREADY SETUP IN T1
   393
   394	400330'	261 01 0 00 000007 		PUSH	STACK,S2	;PUT THE DESCRIPTOR ON THE STACK
   395	400331'	261 01 0 00 000005 		PUSH	STACK,P2	;PUT RESULT ON STACK
   396	400332'	254 00 0 04 000001 		JRST	1(PLINK)	;AND RETURN NORMALLY
   397
   398
   399	400333'				NUMEND:	END

NO ERRORS DETECTED

HI-SEG. BREAK IS 400344
PROGRAM BREAK IS 000000
CPU TIME USED 03:07.767

42P CORE USED
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page S-1
SNONUM	MAC	13-Oct-66 22:22		SYMBOL TABLE

BINRET		400325'		GTSM2A		400036'		
CVTINT		400227'	ext	IDT		002001	sin	
CVTNUM		400316'	ext	IGNOP		400060'	ext	
CVTRL		400137'	ext	INTGR		400110'	int	
DIFF		400162'	int	LE		400002'	int	
DIFINT		400171'		LT		400006'	int	
DIFRL		400165'		MINUS		400316'	int	
DIV		400210'	int	MUL		400175'	int	
DIVINT		400221'		MULINT		400204'		
DIVRL		400213'		MULRL		400200'		
DOCOM		400014'		NE		400012'	int	
E1$27		000000	sin	NUMASC	472531	500000	spd	
E1$28		000000	sin	NUMDC		002000	sin	
E1$29		000000	sin	NUMEDT		000151	spd	
E1$30		000000	sin	NUMEND		400333'		
E1$33		000000	sin	NUMMIN		000000	spd	
E1$34		000000	sin	NUMSIX	566555	000000	spd	
E1$82		000000	sin	NUMSTR		400242'	ext	
E1$84		000000	sin	NUMVER		000005	spd	
E1$85		000000	sin	NUMWHO		000000	spd	
E10$14		000000	sin	P2		000005		
E10$15		000000	sin	PLINK		000004		
E10$2		000000	sin	PLUS		400313'	int	
E10$3		000000	sin	Q1		000015		
E10$5		000000	sin	Q2		000016		
E10$6		000000	sin	QLINK		000015		
E10$7		000000	sin	RAND		400116'	int	
E10$8		000000	sin	RANDI		400136'		
E10$9		000000	sin	RDT		002002	sin	
E13$47		000000	sin	REMDR		400072'	int	
E15$		000000	sin	RETNL1		400115'	ext	
EQ		400010'	int	RETNUL		400021'	ext	
ERR	001000	000000		S1		000006		
ERR.	003000	000000		S2		000007		
EXP		400227'	int	S3		000010		
EXP1		400233'		STACK		000001		
EXP2		400242'		SUM		400147'	int	
EXP2A		400245'		SUMINT		400156'		
EXP3		400256'		SUMRL		400152'		
EXP30		400257'		T1		000011		
EXP3A		400272'		TLINK		000011		
EXP4		400267'		Z		000000		
EXPDN1		400302'		$RAND		400123'	ext	
EXPDON		400275'		%%JOBD	043100	000450	spd	
EXPRET		400303'		%%MACT	000200	000025	spd	
EXPZR		400307'		%%SNOP	000500	000305	spd	
FRET1		400114'	ext	%%UUOS	001400	000457	spd	
GE		400000'	int	
GOTFST		400067'		
GOTINT		400064'		
GOTRL		400063'		
GT		400004'	int	
GTSAM2		400022'		
GTSAM3		400024'		
GTSAM4		400051'		

SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNONUM	MAC	13-Oct-66 22:22		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

BINRET	   245	   250	   261	   266	   276	   281	   294	   301	   390#
CVTINT	   169	   173	   192	   223	   309
CVTNUM	   134	   138	   184	   314	   375	   380
CVTRL	   147	   151	   218
DIFF	   254#
DIFINT	   256	   263#
DIFRL	   258#
DIV	   285#
DIVINT	   287	   296#
DIVRL	   289#
DOCOM	    78	    81	    84	    87	    91	    94	   100#
E1$27	   139#
E1$28	   135#
E1$29	   315#
E1$30	   310#
E1$33	   376#
E1$34	   381#
E1$82	   193#
E1$84	   170#
E1$85	   174#
E10$14	   384#
E10$15	   177#
E10$2	   243#	   259#	   274#	   292#
E10$3	   290#
E10$5	   350#	   363#
E10$6	   297#	   299#
E10$7	   248#
E10$8	   264#
E10$9	   279#
E13$47	   219#	   224#
E15$	   101#	   239#	   255#	   270#	   286#
EQ	    90#
EXP	   309#
EXP1	   314#
EXP2	   322#
EXP2A	   323	   325#
EXP3	   335#
EXP30	   336#	   351
EXP3A	   343	   349#
EXP4	   339	   345#
EXPDN1	   357	   361#
EXPDON	   337	   355#
EXPRET	   359	   363#	   371
EXPZR	   324	   328	   368#
FRET1	   185	   188
GE	    77#
GOTFST	   156	   162#
GOTINT	   129	   159#
GOTRL	   131	   158#
GT	    83#
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNONUM	MAC	13-Oct-66 22:22		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

GTSAM2	   100	   122#	   238	   254	   269	   285
GTSAM3	   124#	   144
GTSAM4	   133	   147#
GTSM2A	   127	   134#
IDT	   128	   179	   187
IGNOP	   125	   143	   154
INTGR	   184#
LE	    80#
LT	    86#
MINUS	   380#
MUL	   269#
MULINT	   271	   278#
MULRL	   273#
NE	    93#
NUMASC	    31#
NUMDC	   126	   128	   130	   319	   325	   338	   356	   369
NUMEDT	    24#
NUMEND	   399#
NUMMIN	    23#
NUMSIX	    30#
NUMSTR	   311	   322
NUMVER	    22#
NUMWHO	    25#
P2	    77	    80	    83	    86	    90	    93	   162	   171	   176	   178	   244	   249	   260	   265
	   275	   280	   293	   300	   329	   332	   336	   382	   383	   385	   395
PLINK	   104	   182	   213	   227	   366	   377	   386	   396
PLUS	   375#
Q1	   186	   187	   210	   211	   322	   323	   340	   345
Q2	   330	   331	   332	   333	   336	   340	   345	   349
QLINK	   100	   125	   143	   148	   152	   154	   155	   156	   158	   159	   164	   238	   254	   269
	   285
RAND	   192#
RANDI	   208	   215#
RDT	   130	   210	   319	   325	   338	   356	   369
REMDR	   169#
RETNL1	   189
RETNUL	   105
S1	    77	    80	    83	    86	    90	    93	   103	   203	   204	   316	   326	   327	   341	   342
	   346	   347	   358	   361
S2	   123	   124	   126	   128	   130	   137	   140	   150	   161	   175	   178	   179	   180	   181
	   197	   198	   199	   200	   202	   205	   212	   221	   222	   318	   320	   341	   346	   358
	   361	   365	   368	   370	   394
S3	   136	   141	   149	   153	   317	   319	   325	   338	   356	   364	   369
STACK	   123	   124	   136	   137	   140	   141	   149	   150	   160	   161	   162	   163	   171	   172
	   175	   180	   181	   186	   207	   211	   212	   217	   221	   222	   226	   311	   312	   316
	   317	   364	   365	   382	   385	   394	   395
SUM	   238#
SUMINT	   240	   247#
SUMRL	   242#
T1	   243	   248	   259	   264	   274	   279	   292	   299	   392
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNONUM	MAC	13-Oct-66 22:22		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

TLINK	   134	   138	   147	   151	   169	   173	   184	   192	   218	   223	   309	   314	   375	   380
Z	   122	   132	   142	   153	   160	   244	   249	   260	   265	   275	   280	   289	   293	   296
	   300
$RAND	   197	   200
SNONUM - Numeric Routines  %5(151)	MACRO %53B(1156)-1 21:52 14-Mar-88 Page 1
SNONUM	MAC	13-Oct-66 22:22		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Macro/Opdef cross reference

ERR	   101	   177	   219	   224	   239	   243	   248	   255	   259	   264	   270	   274	   279	   286
	   290	   292	   297	   299	   350	   363	   384
ERR.	   135	   139	   170	   174	   193	   310	   315	   376	   381
ERROR	   101	   177	   219	   224	   239	   243	   248	   255	   259	   264	   270	   274	   279	   286
	   290	   292	   297	   299	   350	   363	   384
ERROR.	   135	   139	   170	   174	   193	   310	   315	   376	   381
NUMPTX	    43
NUMTTL	    42
SHOW.	    37	    38	    39	    40
TITLE.	    29   wx-v