SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOSMR	MAC	13-Oct-66 22:06		Gimpel--Ma355/JDS/DRH/RCM/VB		13-April-1977

     1						SUBTTL	Gimpel--Ma355/JDS/DRH/RCM/VB		13-April-1977
     2
     3					; COPYRIGHTS 1972,1973,1976,1977  STEVENS INSTITUTE OF TECHNOLOGY
     4					; HOBOKEN, NEW JERSEY, 07030
     5					; ALL RIGHTS RESERVED.
     6
     7					  ;UNIVERSALS
     8
     9						SEARCH	JOBDAT		;JOB DATA AREA DEFINITIONS
    10						SEARCH	MACTEN		;DEC-10 COMMON MACROS
    11						SEARCH	UUOSYM		;TOPS10 UUO SYMBOL DEFINITIONS
    12						SEARCH	SNOPRM		;SITBOL PARAMETER FILE
    13
    14					  ;DIRECTIVES
    15
    16						.DIRECT	.XTABM		;EXCLUDE TABS FROM MACRO CALLS
    17						SALL			;SUPPRESS MACRO EXPANSIONS
    18	400000'					TWOSEG	400K		;TWOSEGMENT CODE
    19
    20					  ;VERSION NUMBER
    21
    22			000005			SMRVER==5		;MAJOR VERSION NUMBER
    23			000000			SMRMIN==0		;MINOR VERSION NUMBER
    24			000207			SMREDT==207		;EDIT LEVEL
    25			000000			SMRWHO==0		;CUSTOMER ARGUMENT
    26
    27					  ;TITLE
    28
    29						TITLE.	SMR,SNOSMR,<The Streamer>
    30		635562	000000			SMRSIX==SIXBIT /SMR/	; SNOSMR ABBREVIATION IN SIXBIT
    31		516332	200000			SMRASC==ASCIZ /SMR/	; SNOSMR ABBREVIATION IN ASCII
    32						SALL
    33
    34
    35					  ;SHOW UNIVERSAL VERSION NUMBERS
    36
    37	400000'	043100	000450			SHOW.	%%JOBD		;VERSION NUMBER OF JOBDAT
    38	400000'	000200	000025			SHOW.	%%MACT		;VERSION NUMBER OF MACTEN
    39	400000'	001400	000457			SHOW.	%%UUOS		;VERSION NUMBER OF UUOSYM
    40	400000'	000500	000305			SHOW.	%%SNOP		;VERSION NUMBER OF SNOPRM
    41
    42						SMRTTL			; Title
    43						SMRPTX			; PASS2 assembly message
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 2
SNOSMR	MAC	13-Oct-66 22:06		Table of Contents

    44						SUBTTL	Table of Contents
    45
    46					;		Table of Contents for The Streamer
    47					;
    48					;
    49					;			   Section			      Page
    50					;   1. Table of Contents. . . . . . . . . . . . . . . . . . .    2
    51					;   2. REVISION HISTORY . . . . . . . . . . . . . . . . . . .    3
    52					;   3. 1.1 STINIT - INITIALIZE STREAMING. . . . . . . . . . .    4
    53					;   4. 1.2 STRM - STREAM FOR A SET MEMBER . . . . . . . . . .    5
    54					;   5. 1.3 STRMC  1.4 STR.  1.5 STR.C . . . . . . . . . . . .    6
    55					;   6. 1.6 CHECK. . . . . . . . . . . . . . . . . . . . . . .    7
    56					;   7. 1.99 AUXILIARY CODE FOR STREAMING. . . . . . . . . . .    8
    57					;   8. 2.1 CVTCS - CONVERT TO CHAR. SET . . . . . . . . . . .    9
    58					;   9. 2.2 CVTCSC - CONVERT TO CHAR SET COMPLEMENTED. . . . .   10
    59					;  10. 2.3 ORCSET - OR TWO CHAR. SETS . . . . . . . . . . . .   11
    60					;  11. 2.99 AUXILIARY ROUTINES FOR CHARACTER SETS . . . . . .   12
    61					;  12. 3.1 CVTPTR . . . . . . . . . . . . . . . . . . . . . .   13
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 3
SNOSMR	MAC	13-Oct-66 22:06		REVISION HISTORY

    62						SUBTTL	REVISION HISTORY
    63
    64					COMMENT	\
    65
    66					START OF VERSION 5.
    67					122	RENAME MODULES & CLEAN UP.
    68					161	Removed by edit 163.
    69					163	Remove edit 163, Fix the problem in the pattern matcher.
    70					201	Change CVTPTR so that it skips unnessecary divide. (For speed)
    71					207	Cleanup some of the code in SNOPL, SNOPG & SNOSMR.
    72					\
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 4
SNOSMR	MAC	13-Oct-66 22:06		1.1 STINIT - INITIALIZE STREAMING

    73						SUBTTL	1.1 STINIT - INITIALIZE STREAMING
    74
    75					;	CALLING SEQUENCE:
    76					;		PUSH STRING DESCRIPTOR
    77					;		JSP	TLINK,STINIT
    78					;		ERROR	; ARG LEFT ON STACK
    79					;		NORMAL	; STACK POPPED 
    80
    81	400000'	200 12 0 01 777777 	STINIT::MOVE	T2,-1(STACK)	; GET FIRST DESCRIPTOR WORD
    82	400001'	202 12 0 00 000000*		MOVEM	T2,SUBJ##		; STORE INTO SUBJECT
    83	400002'	200 13 0 01 000000 		MOVE	T3,0(STACK)	; GET 2ND DESCRIPTOR
    84	400003'	202 13 0 00 000000#		MOVEM	T3,SUBJ##+1	; IS 2ND WORD OF SUBJECT
    85	400004'	552 13 0 00 000000*		HRRZM	T3,CURSOR##	; ALSO SET CURSOR
    86	400005'	265 15 0 00 400261'		JSP	QLINK,CVTPTR	; CONVERT TO POINTER
    87	400006'	000000	000017			Q3			; BASE ON Q3
    88	400007'	254 00 0 11 000000 		JRST	0(TLINK)	; TAKE ERROR EXIT
    89	400010'	133 00 0 00 000000 		IBP	Z		; INCREMENT THE POINTER
    90	400011'	202 00 0 00 000000*		MOVEM	Z,STPTR##	; ESTABLISH THE POINTER
    91	400012'	254 00 0 11 000001 		JRST	1(TLINK)	; NORMAL RETURN
    92

SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 5
SNOSMR	MAC	13-Oct-66 22:06		1.2 STRM - STREAM FOR A SET MEMBER

    93						SUBTTL	1.2 STRM - STREAM FOR A SET MEMBER
    94
    95					;	CALLING SEQUENCE
    96					;	MOVE	S2, 1ST WORD &
    97					;	MOVE	S3, 2ND WORD OF CHARACTER SET
    98					;	JSP	TLINK, STRM
    99					;	RUNNOUT -
   100					;	NORMAL -
   101					;		DESCRIPTOR RETURNED ON STACK
   102					;		IN BOTH CASES
   103
   104	400013'	476 00 0 00 000000#	STRM::	SETOM	IGNOT##+1	; PUT FLAG IN T2 INDICATING THAT
   105									; THAT A VALUE IS TO BE RETURNED.
   106	400014'	337 00 0 00 400004*		SKIPG	CURSOR##	; TEST CURSOR FOR 0
   107	400015'	254 00 0 00 400136'		JRST	NULOUT		; RETURN A NULL STRING & RUNNOUT
   108	400016'	265 15 0 00 400127'		JSP	QLINK,CHECKQ	; IS A SET CHARACTER THERE?
   109	400017'	254 00 0 00 400021'		JRST	STRM1		; GO LOOK FOR A CHARACTER IN THE SET
   110	400020'	254 00 0 00 400137'		JRST	NULNRM		; RETURN A NULL STRING AND
   111									; INDICATE NORMAL RETURN
   112					;	MERGE HERE FROM STR.
   113	400021'	200 12 0 00 400314'	STRM1:	MOVE	T2,[TDNN S3,.-.(Q2)]	; LOAD TESTING INSTRUCTION
   114					;	MERGE HERE FROM STRMC AND STR.C
   115	400022'	202 11 0 00 000000*	STRM1A:	MOVEM	TLINK,IGNOT##	; SAVE LINKING REGISTER
   116	400023'	331 00 0 00 000000#		SKIPL	IGNOT##+1	; SKIP IF VALUE IS TO BE RETURNED
   117	400024'	254 00 0 00 400033'		JRST	STRM2		; IF NO VALUE IS BEING RETURNED ...
   118									; TAKE JUMP
   119	400025'	261 01 0 00 400001*		PUSH	STACK,SUBJ##	; PUSH FIRST WORD OF RETURNED VALUE
   120	400026'	200 00 0 00 000000#		MOVE	Z,SUBJ##+1	; LOAD OFFSET-LENGTH
   121	400027'	274 00 0 00 400014*		SUB	Z,CURSOR	; DETERMINE LOC. WITHIN STRING
   122	400030'	514 16 0 00 000000 		HRLZ	Q2,Z		; PUT RESULT IN LEFT HALF OF Q2
   123	400031'	270 00 0 00 000016 		ADD	Z,Q2		; ADD THIS TO ORIGINAL OFFSET
   124	400032'	261 01 0 00 000000 		PUSH	STACK,Z		; AND PUSH ONTO STACK
   125	400033'	200 00 0 00 400011*	STRM2:	MOVE	Z,STPTR##	;[161] Get the byte pointer
   126	400034'	200 15 0 00 400027*		MOVE	Q1,CURSOR##	;[161] Load the cursor
   127	400035'	363 15 0 00 400050'		SOJLE	Q1,STRM4	;[163] Decrement & check for run out
   128	400036'	200 11 0 00 400043'		MOVE 	T1,REGLP	; LOAD THE REST OF THE ...
   129	400037'	200 14 0 00 400046'		DMOVE	T3,REGLP+2	;[161] Instructions into ...
   130	400040'	200 13 0 00 400045'
   131									;[161] the T registers. 
   132	400041'	541 12 0 07 000002 		HRRI	T2,CTBITS(S2)	; PLUG ADDRESS PART OF T2
   133	400042'	254 00 0 00 000011 		JRST	T1		; JUMP INTO THE REGISTERS
   134
   135					;	THE FOLLOWING 4 LINES ARE NOT EXECUTED IN SITU 
   136					;	BUT ARE LOADED INTO REGISTERS T1-T4
   137
   138	400043'	134 16 0 00 000000 	REGLP:	ILDB	Q2,Z		; GET THE NEXT BYTE
   139	400044'	616 10 0 16 000000 		TDNN	S3,.-.(Q2)	; SKIP IF ANY MASKED BITS ARE ON
   140									; THIS BECOMES A TDNE FOR COMPLEMENT SEARCHING.
   141	400045'	367 15 0 00 000011 		SOJG	Q1,T1		;[163] IF CURSOR IS STILL POSITIVE, GO BACK TO T1
   142	400046'	254 00 0 00 400047'		JRST	STRM3		; EXECUTE A RETURN TO SANITY
   143
   144					;	NOTE: THIS LOOP TAKES ABOUT 6.36 MICROSECONDS
   145					;	NOT OPERATING OUT OF REGISTERS FORCES ANOTHER 
   146					;	INSTRUCTION INTO THE LOOP (AN ADDI).  THE RESULT
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 5-1
SNOSMR	MAC	13-Oct-66 22:06		1.2 STRM - STREAM FOR A SET MEMBER

   147					;	IS 9.84 MICROSEC. OR 55% SLOWER.
   148
   149
   150
   151	400047'	202 00 0 00 400033*	STRM3:	MOVEM	Z,STPTR		; ESTABLISH NEW POINTER
   152
   153					;	MERGE HERE FROM 1 CHARACTER SITUATION.
   154	400050'	250 15 0 00 400034*	STRM4:	EXCH	Q1,CURSOR	; EXCHANGE OLD CURSOR AND THE NEW
   155	400051'	274 15 0 00 400050*		SUB	Q1,CURSOR	; DETERMINE AMOUNT CURSOR HAS ...
   156									; BEEN MOVED.
   157	400052'	335 00 0 00 000000#		SKIPGE	IGNOT##+1	; SKIP IF VALUE IS NOT REQUIRED.
   158	400053'	542 15 0 01 000000 		HRRM	Q1,0(STACK)	; STORE THIS AS THE NEW LENGTH
   159
   160	400054'	306 15 0 00 000001 		CAIN	Q1,1		; IS THE LENGTH = 1
   161	400055'	254 00 0 00 400062'		JRST	STRM6		; YES - TREAT SPECIAL
   162
   163	400056'	200 11 0 00 400022*	STRM5:	MOVE	TLINK,IGNOT##	; RESTORE LINKING REGISTER
   164	400057'	333 00 0 00 400051*		SKIPLE	CURSOR		; SKIP ON RUNNOUT
   165	400060'	254 00 0 11 000001 		JRST	1(TLINK)	; NORMAL RETURN
   166	400061'	254 00 0 11 000000 		JRST	0(TLINK)	; RUNNOUT
   167
   168						 ; HERE TO TREAT THE SPECIAL CASE OF THE SINGLE CHAR.
   169
   170	400062'	331 00 0 00 000000#	STRM6:	SKIPL	IGNOT##+1	; SKIP IF VALUE IS REQUIRED
   171	400063'	254 00 0 00 400056'		JRST	STRM5		; NO - JUST GO BACK
   172
   173	400064'	265 15 0 00 400261'		JSP	QLINK,CVTPTR	; POINT TO CHAR
   174	400065'	000000	000000			0			; NO BASING
   175	400066'	001 17 0 00 000000 		ERROR	15		; CAN'T FAIL
   176
   177	400067'	134 15 0 00 000000 		ILDB	Q1,Z		; GET THE CHAR
   178	400070'	205 15 0 15 000000 		MOVSI	Q1,0(Q1)	; USE AS OFFSET
   179	400071'	541 15 0 00 000001 		HRRI	Q1,1		; LENGTH
   180	400072'	261 01 0 00 000000*		PUSH	STACK,$ALPHA##	; &ALPHABET HEADER
   181	400073'	261 01 0 00 000015 		PUSH	STACK,Q1	; 2ND DESCR WORD
   182
   183	400074'	200 17 0 00 400025*		MOVE	Q3,SUBJ##	; RESTORE THINGS ...
   184	400075'	135 16 0 00 400047*		LDB	Q2,STPTR	; FOR CALLER
   185	400076'	254 00 0 00 400056'		JRST	STRM5		; REJOIN PROCESSING
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 6
SNOSMR	MAC	13-Oct-66 22:06		1.2 STRM - STREAM FOR A SET MEMBER

   186					;	THE CALLING SEQUENCE FOR THESE 3 ROUTINES IS THE
   187					;	SAME AS FOR STRM EXCEPT THAT NO VALUE IS RETURNED
   188					;	IN THE CASE OF STR. AND STR.C
   189					;	THAT'S THEIR PURPOSE IN FACT.
   190
   191						SUBTTL	1.3 STRMC  1.4 STR.  1.5 STR.C
   192	400077'	476 00 0 00 000000#	STRMC::	SETOM	IGNOT##+1	; INDICATE VALUE IS WANTED
   193	400100'	337 00 0 00 400057*		SKIPG	CURSOR		; TEST CURSOR FOR 0
   194	400101'	254 00 0 00 400136'		JRST	NULOUT		; RETURN A NULL STRING IF SO
   195	400102'	265 15 0 00 400127'		JSP	QLINK,CHECKQ	; IS CHAR. IN CHAR. SET?
   196	400103'	254 00 0 00 400137'		JRST	NULNRM		; NO - RETURN SUCCESS
   197	400104'	200 12 0 00 400315'	STRMC1:	MOVE	T2,[TDNE S3,.-.(Q2)]	; YES - LOAD TEST WORD
   198	400105'	254 00 0 00 400022'		JRST	STRM1A		; AND OFF TO JOIN STRM
   199
   200	400106'	402 00 0 00 000000#	STR.::	SETZM	IGNOT##+1	; ZERO OUT FLAG (NOT RETURNING A VALUE)
   201	400107'	337 00 0 00 400100*		SKIPG	CURSOR		; TEST CURSOR FOR 0
   202	400110'	254 00 0 11 000000 		JRST	0(TLINK)	; TAKE RUNNOUT IF SO
   203	400111'	265 15 0 00 400127'		JSP	QLINK,CHECKQ	; IS CHAR IN CHAR. SET
   204	400112'	254 00 0 00 400021'		JRST	STRM1		; NO - KEEP LOOKING
   205	400113'	254 00 0 11 000001 		JRST	1(TLINK)	; YES - RETURN SUCCESS
   206
   207	400114'	402 00 0 00 000000#	STR.C::	SETZM	IGNOT##+1	; ZERO OUT RETURNING-VALUE FLAG
   208	400115'	337 00 0 00 400107*		SKIPG	CURSOR		; TEST CURSOR FOR 0
   209	400116'	254 00 0 11 000000 		JRST	0(TLINK)	; TAKE RUNNOUT IF SO
   210	400117'	265 15 0 00 400127'		JSP	QLINK,CHECKQ	; IS CHAR IN CHAR SET
   211	400120'	254 00 0 11 000001 		JRST	1(TLINK)	; NO - RETURN SUCCESSFULLY
   212	400121'	254 00 0 00 400104'		JRST	STRMC1		; GO JOIN STRMC
   213

SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 7
SNOSMR	MAC	13-Oct-66 22:06		1.6 CHECK

   214						SUBTTL	1.6 CHECK
   215
   216					;  CALLING SEQUENCE:
   217					;	LOAD S2 AND S3 WITH CHAR. SET DESCRIPTOR.
   218					;	JSP	TLINK,CHECK
   219					;	FAIL - NOT IN SET
   220					;	SUCCESS - IS IN SET
   221					;	
   222					;	CHECKS NEXT CHARACTER FOR BEING A MEMBER OF THE SET IN 
   223					;	S2 & S3
   224
   225	400122'	337 00 0 00 400115*	CHECK::	SKIPG	CURSOR		; IF CURSOR IS 0 ...
   226	400123'	254 00 0 11 000000 		JRST	0(TLINK)	; RETURN IMMEDIATELY (FAILING)
   227	400124'	265 15 0 00 400127'		JSP	QLINK,CHECKQ	; USE INTERNAL FORM OF CHECK
   228	400125'	254 00 0 11 000000 		JRST	0(TLINK)	; FAIL
   229	400126'	254 00 0 11 000001 		JRST	1(TLINK)	; SUCCESS
   230

SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 8
SNOSMR	MAC	13-Oct-66 22:06		1.99 AUXILIARY CODE FOR STREAMING

   231						SUBTTL	1.99 AUXILIARY CODE FOR STREAMING
   232
   233					;	TYPE Q VERSION OF CHECK
   234
   235	400127'	200 17 0 00 400074*	CHECKQ:	MOVE	Q3,SUBJ##	; BASE THE POINTER
   236	400130'	135 16 0 00 400075*		LDB	Q2,STPTR	; LOAD FIRST CHARACTER
   237	400131'	200 14 0 00 000007 		MOVE	T4,S2		; GET BASE OF CHARACTER TABLE
   238	400132'	271 14 0 16 000000 		ADDI	T4,0(Q2)	; ADD IN THE CHRACTER
   239	400133'	616 10 0 14 000002 		TDNN	S3,CTBITS(T4)	; SKIP IF CHAR IS IN SET
   240	400134'	254 00 0 15 000000 		JRST	0(QLINK)	; ALL ZEROS - FAIL EXIT
   241	400135'	254 00 0 15 000001 		JRST	1(QLINK)	; TAKE SUCCESS EXIT
   242
   243					;	SPECIAL RETURNS
   244
   245	400136'	275 11 0 00 000001 	NULOUT:	SUBI	TLINK,1		; RETURN A NULL STRING AND RUNNOUT
   246	400137'	261 01 0 00 000000*	NULNRM:	PUSH	STACK,NULLST##	; RETURN A NULL STRING AND NORMAL RETURN
   247	400140'	261 01 0 00 000000#		PUSH	STACK,NULLST+1
   248	400141'	254 00 0 11 000001 		JRST	1(TLINK)
   249

SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 9
SNOSMR	MAC	13-Oct-66 22:06		2.1 CVTCS - CONVERT TO CHAR. SET

   250						SUBTTL	2.1 CVTCS - CONVERT TO CHAR. SET
   251
   252					;   CALLING SEQUENCE:
   253					;	PUSH DESCRIPTOR ONTO STACK
   254					;	JSP	TLINK,CVTCS
   255					;	FAIL	COULDN'T CONVERT, DESCRIPTOR LEFT ON STACK
   256					;	NORMAL RETURN - VALUE IS ON STACK TOP
   257
   258	400142'	554 00 0 01 777777 	CVTCS::	HLRZ	Z,-1(STACK)	; PICK UP DATATYPE
   259	400143'	306 00 0 00 004013 		CAIN	Z,CSDT		; SKIP IF NOT A CHAR. SET ALREADY
   260	400144'	254 00 0 11 000001 		JRST	1(TLINK)	; SUCCESSFUL RETURN
   261	400145'	302 00 0 00 004003 		CAIE	Z,SDT		; SKIP IF A STRING (NORMAL CASE)
   262	400146'	254 00 0 00 400166'		JRST	CCS1		; OTHERWISE TRY TO HANDLE STRANGE DT
   263	400147'	336 12 0 00 000000#	CCS4:	SKIPN	T2,CCTBL##+1	; LOAD AND TEST CURRENT MASK
   264	400150'	254 00 0 00 400175'		JRST	CCS3		; MASK IS 0 - TAKE BRANCH
   265	400151'	550 13 0 01 000000 		HRRZ	T3,0(STACK)	; LOAD LENGTH OF STRING
   266	400152'	265 15 0 00 400261'		JSP	QLINK,CVTPTR	; CONVERT STRING TO POINTER
   267	400153'	000000	000000			0			; NO BASING
   268	400154'	254 00 0 00 400173'		JRST	CCS2		; NULL STRING EXIT
   269	400155'	134 16 0 00 000000 	CVTLP:	ILDB	Q2,Z		; LOAD A BYTE
   270	400156'	270 16 0 00 000000*		ADD	Q2,CCTBL##	; ADD IN THE ADDRESS OF THE TABLE
   271	400157'	436 12 0 16 000002 		IORM	T2,CTBITS(Q2)	; PLUG WITH A ONE
   272	400160'	367 13 0 00 400155'		SOJG	T3,CVTLP	; IF MORE CHARACTERS, GO BACK
   273
   274					;	ENTER HERE FROM NULL STRING PROCESSING
   275	400161'	261 01 0 00 400156*	CCS5:	PUSH	STACK,CCTBL##	; PUSH FIRST WORD
   276	400162'	261 01 0 00 000012 		PUSH	STACK,T2	; PUSH 2ND WORD OF DESCRIPTOR
   277	400163'	242 12 0 00 777777 		LSH	T2,-1		; SHIFT THE MASK
   278	400164'	202 12 0 00 000000#		MOVEM	T2,CCTBL##+1	; AND SET UP NEW MASK
   279	400165'	254 00 0 11 000001 		JRST	1(TLINK)	; AND RETURN
   280
   281	400166'	202 11 0 00 000000*	CCS1:	MOVEM	TLINK,CVTSAV##	; SAVE TLINK
   282	400167'	265 11 0 00 000000*		JSP	TLINK,CVTSTR##	; CONVERT OUR ARGUMENT IF POSSIBLE
   283	400170'	254 00 1 00 400166*		JRST	@CVTSAV		; ERROR - NO CONVERT
   284	400171'	200 11 0 00 400170*		MOVE	TLINK,CVTSAV	; RESTORE TLINK
   285	400172'	254 00 0 00 400147'		JRST	CCS4		; AND JOIN REGULAR PROCESSING
   286
   287	400173'	274 01 0 00 400316'	CCS2:	SUB	STACK,[XWD 2,2]	; REMOVE THE DESCRIPTOR
   288									; FROM THE STACK
   289	400174'	254 00 0 00 400161'		JRST	CCS5		; JOIN MAIN PROCESSING
   290
   291	400175'	265 14 0 00 400251'	CCS3:	JSP	T4,INITCT	; GO INITIALIZE CHAR. TABLE
   292	400176'	254 00 0 00 400147'		JRST	CCS4		; JOIN EARLY PROCESSING.
   293

SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 10
SNOSMR	MAC	13-Oct-66 22:06		2.2 CVTCSC - CONVERT TO CHAR SET COMPLEMENTED

   294						SUBTTL	2.2 CVTCSC - CONVERT TO CHAR SET COMPLEMENTED
   295
   296					; CALLING SEQUENCE:
   297					;	PUSH DESCRIPTOR ONTO THE STACK
   298					;	JSP	TLINK,CVTCSC
   299					;	FAIL	NO CONVERSION - ARG LEFT ON STACK
   300					;	SUCCESS - CONVERTED VALUE IS LEFT ON STACK
   301
   302	400177'	554 00 0 01 777777 	CVTCSC::HLRZ	Z,-1(STACK)	; LOAD DT
   303	400200'	306 00 0 00 004013 		CAIN	Z,CSDT		; IS IT CHAR. SET?
   304	400201'	254 00 0 11 000000 		JRST	0(TLINK)	; NO-GO
   305
   306	400202'	202 11 0 00 000000*		MOVEM	TLINK,CCSCSV##	; SAVE LINKING REGISTER
   307	400203'	265 11 0 00 400142'		JSP	TLINK,CVTCS	; CONVERT ARG TO CHARACTER SET
   308	400204'	254 00 1 00 400202*		JRST	@CCSCSV		; NO GO
   309
   310	400205'	200 12 0 01 000000 		MOVE	T2,0(STACK)	; LOAD MASK
   311	400206'	205 13 0 00 777600 		MOVSI	T3,-^D128	; LOAD NUMBER OF BITS TO PLUG
   312	400207'	540 13 0 01 777777 		HRR	T3,-1(STACK)	; ALSO LOAD ADDRESS OF TABLE
   313
   314	400210'	432 12 0 13 000002 		XORM	T2,CTBITS(T3)	; OR IN A 1 FOR ...
   315	400211'	253 13 0 00 400210'		AOBJN	T3,.-1		; EACH WORD IN THE TABLE
   316
   317	400212'	200 11 0 00 400204*		MOVE	TLINK,CCSCSV	; RELOAD LINKING REGISTER
   318	400213'	254 00 0 11 000001 		JRST	1(TLINK)	; SUCCESSFUL RETURNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 11
SNOSMR	MAC	13-Oct-66 22:06		2.3 ORCSET - OR TWO CHAR. SETS

   319						SUBTTL	2.3 ORCSET - OR TWO CHAR. SETS
   320
   321					;  CALLING SEQUENCE:
   322					;	PUSH 2 CHAR. SETS ONTO THE STACK
   323					;	JSP	TLINK,ORCSET
   324					;	RETURN - VALUE IS AT TOP OF STACK
   325	400214'				ORCSET::
   326	400214'	200 12 0 01 777777 		MOVE	T2,-1(STACK)	; PICK UP HEAD OF 2ND
   327	400215'	312 12 0 01 777775 		CAME	T2,-3(STACK)	; COMPARE WITH HEAD OF 1ST
   328	400216'	254 00 0 00 400223'		JRST	ORCS1		; TAKE JUMP IF UNEQUAL
   329	400217'	200 13 0 01 000000 		MOVE	T3,0(STACK)	; LOAD MASK OF 2ND
   330	400220'	436 13 0 01 000002 		ORM	T3,2(STACK)	; OR IT INTO MASK OF FIRST
   331	400221'	274 01 0 00 400316'		SUB	STACK,[XWD 2,2]	; POP STACK
   332	400222'	254 00 0 11 000000 		JRST	0(TLINK)	; AND EXIT
   333
   334					;	IF THE 2 TABLES ARE DIFFERENT WE MUST MAKE A 
   335					;	NEW ENTRY IN TE
   336					;	NEW ENTRY IN THE CURRENT CHARACTER TABLE (CCTBL).
   337					;	DURING THIS CONSTRUCTION THE FOLLOWING REGISTERS WILL 
   338					;	HAVE SIGNIFICANCE.
   339					;	T1, Q1 = TABLE AND MASK OF 1ST ARGUMENT
   340					;	T2, Q2 = TABLE AND MASK OF 2ND ARGUMENT
   341					;	T3, Q3 = TABLE AND MASK OF 3RD ARGUMENT
   342					;	T3(LEFT) = A COUNT
   343
   344	400223'	202 11 0 00 000014 	ORCS1:	MOVEM	TLINK,T4	; SAVE LINKING REG
   345	400224'	336 17 0 00 000000#		SKIPN	Q3,CCTBL+1	; LOAD AND TEST NEW MASK
   346	400225'	254 00 0 00 400247'		JRST	ORCS3		; GO MAKE NEW TABLE
   347	400226'	200 13 0 00 400161*		MOVE	T3,CCTBL##	; LOAD NEW TABLE
   348	400227'	505 13 0 00 777600 		HRLI	T3,-^D128	; PUT NEG. COUNT INTO T3 LEFT
   349	400230'	262 01 0 00 000016 		POP	STACK,Q2	; PUT ...
   350	400231'	262 01 0 00 000012 		POP	STACK,T2	; CHARACTER ...
   351	400232'	262 01 0 00 000015 		POP	STACK,Q1	; SETS ...
   352	400233'	262 01 0 00 000011 		POP	STACK,T1	; INTO REGISTERS
   353	400234'				ORCS2:
   354	400234'	616 15 0 11 000002 		TDNN	Q1,CTBITS(T1)	; SKIP IF FIRST CHAR. SET IS YES
   355	400235'	612 16 0 12 000002 		TDNE	Q2,CTBITS(T2)	; TAKE NEXT IF 2ND CHAR. SET IS YES
   356	400236'	436 17 0 13 000002 		IORM	Q3,CTBITS(T3)	; PLUG NEW SET IF EITHER ARE YES
   357	400237'	340 11 0 00 000000 		AOJ	T1,		; INCREMENT FIRST TABLE
   358	400240'	340 12 0 00 000000 		AOJ	T2, 		; INCREMENT 2ND TABLE
   359	400241'	253 13 0 00 400234'		AOBJN	T3,ORCS2	; INCREMENT 3RD TABLE, TEST AND LOOP
   360
   361						  ; 	UPDATE MASK AND RETURN
   362	400242'	261 01 0 00 400226*		PUSH	STACK,CCTBL##	; PUSH FIRST WORD
   363	400243'	261 01 0 00 000017 		PUSH	STACK,Q3	; AND MASK
   364	400244'	242 17 0 00 777777 		LSH	Q3,-1		; SHIFT RIGHT
   365	400245'	202 17 0 00 000000#		MOVEM	Q3,CCTBL##+1	; STORE EVEN IF 0
   366	400246'	254 00 0 14 000000 		JRST	0(T4)		; TAKE SUCCESSFUL EXIT
   367
   368						  ;	HERE IF THE MASK WAS 0
   369	400247'	265 14 0 00 400251'	ORCS3::	JSP	T4,INITCT	; INITIALIZE A NEW TABLE
   370	400250'	254 00 0 00 400223'		JRST	ORCS1		; JOIN MAIN PROCESSING
   371

SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 12
SNOSMR	MAC	13-Oct-66 22:06		2.99 AUXILIARY ROUTINES FOR CHARACTER SETS

   372						SUBTTL	2.99 AUXILIARY ROUTINES FOR CHARACTER SETS
   373
   374					;	INITCT - INITIALIZE THE CURRENT CHARACTER TABLE
   375					;	(CALLED ONCE FOR EVERY 36 CHARACTER SETS)
   376					;  CALLING SEQUENCE:
   377					;	JSP	T4,INITCT
   378
   379	400251'				INITCT:
   380	400251'	200 00 0 00 400317'		MOVE	Z,[XWD  CTBLOK,^D128+LHDR]  ; LOAD 1ST WORD
   381	400252'	265 15 0 00 000000*		JSP	QLINK,BLOK##	; MAKE CALL TO ALLOCATE STORAGE
   382	400253'	001 17 0 00 000000 		ERROR	15		; IMPOSSIBLE ERROR
   383	400254'	262 01 0 00 000000 		POP	STACK,Z		; REMOVE WORD
   384	400255'	262 01 0 00 400242*		POP	STACK,CCTBL##	; GET FIRST DESCRIPTOR WORD
   385	400256'	205 00 0 00 400000 		MOVSI	Z,400000	; SET BIT 0 IN REG. 0
   386	400257'	202 00 0 00 000000#		MOVEM	Z,CCTBL##+1	; SET BIT 0 OF MASK WORD
   387	400260'	254 00 0 14 000000 		JRST	0(T4)		; RETURN
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 13
SNOSMR	MAC	13-Oct-66 22:06		3.1 CVTPTR

   388						SUBTTL	3.1 CVTPTR
   389
   390					;  CALLING SEQUENCE:
   391					;	PUSH STRING DESCRIPTOR ONTO STACK
   392					;	JSP	QLINK,CVTPTR
   393					;	REG	; BASING REGISTER FOR POINTER (MAYBE 0)
   394					;	FAIL - NULL STRING OR NONSTRING - STACK UNPOPPED
   395					;	SUCCESS - STACK POPPED, Z CONTAINS POINTER, REG SET
   396
   397	400261'				CVTPTR::
   398	400261'	200 00 0 01 777777 		MOVE	Z,-1(STACK)	; GET TYPE AND ADDRESS
   399	400262'	554 16 0 00 000000 		HLRZ	Q2,Z		; GET DATATYPE IN RIGHT OF Q2
   400	400263'	306 16 0 00 004003 		CAIN	Q2,SDT		; SKIP IF NOT A STRING
   401	400264'	606 00 0 00 777777 		TRNN	Z,-1		; SKIP IF ADDRESS IS NONZERO
   402	400265'	254 00 0 15 000001 		JRST	1(QLINK)	; ERROR - NONSTRING OR NULL STRING
   403	400266'	554 16 0 01 000000 		HLRZ	Q2,(STACK)	; PICK UP BYTE OFFSET
   404	400267'	326 16 0 00 400274'		JUMPN	Q2,CVTPT0	; DO WE WANT TO AVOID,
   405	400270'	504 00 0 15 000000 		HRL	Z,0(QLINK)	; THE TERRIBLE DIVIDE INSTRUCTION?
   406	400271'	434 00 0 00 400307'		IOR	Z,PTR		;  YES.
   407	400272'	271 00 0 00 000002 		ADDI	Z,2
   408	400273'	254 00 0 00 400300'		JRST	CVTPT1
   409	400274'	231 16 0 00 000005 	CVTPT0:	IDIVI	Q2,5		; CONVERT TO WORD OFFSET
   410	400275'	271 00 0 16 000002 		ADDI	Z,2(Q2)		; ADD IN THE WORD OFFSET TO Z
   411	400276'	504 00 0 15 000000 		HRL	Z,0(QLINK)	; INSERT THE AC
   412	400277'	434 00 0 17 400307'		IOR	Z,PTR(Q3)	; OR IN THE POINTER PART
   413	400300'	274 01 0 00 400316'	CVTPT1:	SUB	STACK,[XWD 2,2]	; POP STACK
   414	400301'	336 00 0 15 000000 		SKIPN	0(QLINK)	; SKIP IF AC IS GIVEN
   415	400302'	254 00 0 15 000002 		JRST	2(QLINK)	; TAKE NORMAL RETURN
   416	400303'	200 16 0 01 000001 		MOVE	Q2,1(STACK)	; PICK UP FIRST DESCR. WORD
   417	400304'	275 00 0 16 000000 		SUBI	Z,0(Q2)		; DEDUCT ADDRESS FROM Z
   418	400305'	202 16 1 15 000000 		MOVEM	Q2,@(QLINK)	; INSERT ADDRESS INTO REG.
   419	400306'	254 00 0 15 000002 		JRST	2(QLINK)	; TAKE NORMAL RETURN
   420
   421	400307'	44 07 0 00 000000 	PTR:	POINT	7,0
   422	400310'	35 07 0 00 000000 		POINT	7,0,6
   423	400311'	26 07 0 00 000000 		POINT	7,0,13
   424	400312'	17 07 0 00 000000 		POINT	7,0,20
   425	400313'	10 07 0 00 000000 		POINT	7,0,27
   426
   427
   428						END

NO ERRORS DETECTED

HI-SEG. BREAK IS 400320
PROGRAM BREAK IS 000000
CPU TIME USED 03:10.956

42P CORE USED
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page S-1
SNOSMR	MAC	13-Oct-66 22:06		SYMBOL TABLE

BLOK		400252'	ext	STRM1		400021'		
CCS1		400166'		STRM1A		400022'		
CCS2		400173'		STRM2		400033'		
CCS3		400175'		STRM3		400047'		
CCS4		400147'		STRM4		400050'		
CCS5		400161'		STRM5		400056'		
CCSCSV		400212'	ext	STRM6		400062'		
CCTBL		400255'	ext	STRMC		400077'	int	
CHECK		400122'	int	STRMC1		400104'		
CHECKQ		400127'		SUBJ		400127'	ext	
CSDT		004013	sin	T1		000011		
CTBITS		000002	sin	T2		000012		
CTBLOK		000413	sin	T3		000013		
CURSOR		400122'	ext	T4		000014		
CVTCS		400142'	int	TLINK		000011		
CVTCSC		400177'	int	Z		000000		
CVTLP		400155'		$ALPHA		400072'	ext	
CVTPT0		400274'		%%JOBD	043100	000450	spd	
CVTPT1		400300'		%%MACT	000200	000025	spd	
CVTPTR		400261'	int	%%SNOP	000500	000305	spd	
CVTSAV		400171'	ext	%%UUOS	001400	000457	spd	
CVTSTR		400167'	ext	
E15$		000000	sin	
ERR	001000	000000		
IGNOT		400056'	ext	
INITCT		400251'		
LHDR		000002	sin	
NULLST		400137'	ext	
NULNRM		400137'		
NULOUT		400136'		
ORCS1		400223'		
ORCS2		400234'		
ORCS3		400247'	int	
ORCSET		400214'	int	
PTR		400307'		
Q1		000015		
Q2		000016		
Q3		000017		
QLINK		000015		
REGLP		400043'		
S2		000007		
S3		000010		
SDT		004003	sin	
SMRASC	516332	200000	spd	
SMREDT		000207	spd	
SMRMIN		000000	spd	
SMRSIX	635562	000000	spd	
SMRVER		000005	spd	
SMRWHO		000000	spd	
STACK		000001		
STINIT		400000'	int	
STPTR		400130'	ext	
STR.		400106'	int	
STR.C		400114'	int	
STRM		400013'	int	

SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOSMR	MAC	13-Oct-66 22:06		Gimpel--Ma355/JDS/DRH/RCM/VB		13-April-1977


Symbol cross reference

BLOK	   381
CCS1	   262	   281#
CCS2	   268	   287#
CCS3	   264	   291#
CCS4	   263#	   285	   292
CCS5	   275#	   289
CCSCSV	   306	   308	   317
CCTBL	   263	   270	   275	   278	   345	   347	   362	   365	   384	   386
CHECK	   225#
CHECKQ	   108	   195	   203	   210	   227	   235#
CSDT	   259	   303
CTBITS	   132	   239	   271	   314	   354	   355	   356
CTBLOK	   380
CURSOR	    85	   106	   121	   126	   154	   155	   164	   193	   201	   208	   225
CVTCS	   258#	   307
CVTCSC	   302#
CVTLP	   269#	   272
CVTPT0	   404	   409#
CVTPT1	   408	   413#
CVTPTR	    86	   173	   266	   397#
CVTSAV	   281	   283	   284
CVTSTR	   282
E15$	   175#	   382#
IGNOT	   104	   115	   116	   157	   163	   170	   192	   200	   207
INITCT	   291	   369	   379#
LHDR	   380
NULLST	   246	   247
NULNRM	   110	   196	   246#
NULOUT	   107	   194	   245#
ORCS1	   328	   344#	   370
ORCS2	   353#	   359
ORCS3	   346	   369#
ORCSET	   325#
PTR	   406	   412	   421#
Q1	   126	   127	   141	   154	   155	   158	   160	   177	   178	   179	   181	   351	   354
Q2	   113	   122	   123	   138	   139	   184	   197	   236	   238	   269	   270	   271	   349	   355
	   399	   400	   403	   404	   409	   410	   416	   417	   418
Q3	    87	   183	   235	   345	   356	   363	   364	   365	   412
QLINK	    86	   108	   173	   195	   203	   210	   227	   240	   241	   266	   381	   402	   405	   411
	   414	   415	   418	   419
REGLP	   128	   129	   130	   138#
S2	   132	   237
S3	   113	   139	   197	   239
SDT	   261	   400
SMRASC	    31#
SMREDT	    24#
SMRMIN	    23#
SMRSIX	    30#
SMRVER	    22#
SMRWHO	    25#
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOSMR	MAC	13-Oct-66 22:06		Gimpel--Ma355/JDS/DRH/RCM/VB		13-April-1977


Symbol cross reference

STACK	    81	    83	   119	   124	   158	   180	   181	   246	   247	   258	   265	   275	   276	   287
	   302	   310	   312	   326	   327	   329	   330	   331	   349	   350	   351	   352	   362	   363
	   383	   384	   398	   403	   413	   416
STINIT	    81#
STPTR	    90	   125	   151	   184	   236
STR.	   200#
STR.C	   207#
STRM	   104#
STRM1	   109	   113#	   204
STRM1A	   115#	   198
STRM2	   117	   125#
STRM3	   142	   151#
STRM4	   127	   154#
STRM5	   163#	   171	   185
STRM6	   161	   170#
STRMC	   192#
STRMC1	   197#	   212
SUBJ	    82	    84	   119	   120	   183	   235
T1	   128	   133	   141	   352	   354	   357
T2	    81	    82	   113	   132	   197	   263	   271	   276	   277	   278	   310	   314	   326	   327
	   350	   355	   358
T3	    83	    84	    85	   129	   130	   265	   272	   311	   312	   314	   315	   329	   330	   347
	   348	   356	   359
T4	   237	   238	   239	   291	   344	   366	   369	   387
TLINK	    88	    91	   115	   163	   165	   166	   202	   205	   209	   211	   226	   228	   229	   245
	   248	   260	   279	   281	   282	   284	   304	   306	   307	   317	   318	   332	   344
Z	    89	    90	   120	   121	   122	   123	   124	   125	   138	   151	   177	   258	   259	   261
	   269	   302	   303	   380	   383	   385	   386	   398	   399	   401	   405	   406	   407	   410
	   411	   412	   417
$ALPHA	   180
SNOSMR - The Streamer  %5(207)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNOSMR	MAC	13-Oct-66 22:06		Gimpel--Ma355/JDS/DRH/RCM/VB		13-April-1977


Macro/Opdef cross reference

DMOVE	   129
ERR	   175	   382
ERROR	   175	   382
SHOW.	    37	    38	    39	    40
SMRPTX	    43
SMRTTL	    42
TITLE.	    29  '@R