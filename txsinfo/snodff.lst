SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNODFF	MAC	13-Oct-66 22:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76

     1						SUBTTL	Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76
     2
     3					; COPYRIGHTS 1972,1973,1976,1977 STEVENS INSTITUTE OF TECHNOLOGY
     4					; HOBOKEN, NEW JERSEY, 07030
     5					; ALL RIGHTS RESERVED.
     6
     7					  ;UNIVERSALS
     8
     9						SEARCH	JOBDAT		;JOB DATA AREA DEFINITIONS
    10						SEARCH	MACTEN		;DEC-10 COMMON MACROS
    11						SEARCH	UUOSYM		;TOPS10 UUO SYMBOL DEFINITIONS
    12						SEARCH	SNOPRM		;SITBOL PARAMETER FILE
    13
    14					  ;DIRECTIVES
    15
    16						.DIRECT	.XTABM		;EXCLUDE TABS FROM MACRO CALLS
    17						SALL			;SUPPRESS MACRO EXPANSIONS
    18	400000'					TWOSEG	400K		;TWOSEGMENT CODE
    19
    20					  ;VERSION NUMBER
    21
    22			000005			DFFVER==5		;MAJOR VERSION NUMBER
    23			000000			DFFMIN==0		;MINOR VERSION NUMBER
    24			000147			DFFEDT==147		;EDIT LEVEL
    25			000000			DFFWHO==0		;CUSTOMER ARGUMENT
    26
    27					  ;TITLE
    28
    29						TITLE.	DFF,SNODFF,<User Defined Functions>
    30		444646	000000			DFFSIX==SIXBIT /DFF/	; SNODFF ABBREVIATION IN SIXBIT
    31		422150	600000			DFFASC==ASCIZ /DFF/	; SNODFF ABBREVIATION IN ASCII
    32						SALL
    33
    34
    35					  ;SHOW UNIVERSAL VERSION NUMBERS
    36
    37	400000'	043100	000450			SHOW.	%%JOBD		;VERSION NUMBER OF JOBDAT
    38	400000'	000200	000025			SHOW.	%%MACT		;VERSION NUMBER OF MACTEN
    39	400000'	001400	000457			SHOW.	%%UUOS		;VERSION NUMBER OF UUOSYM
    40	400000'	000500	000305			SHOW.	%%SNOP		;VERSION NUMBER OF SNOPRM
    41
    42						DFFTTL				; Title
    43						DFFPTX				; PASS2 assembly message
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 2
SNODFF	MAC	13-Oct-66 22:09		Table of Contents

    44						SUBTTL	Table of Contents
    45
    46					;		Table of Contents for User Defined Functions
    47					;
    48					;
    49					;			   Section			      Page
    50					;   1. Table of Contents. . . . . . . . . . . . . . . . . . .    2
    51					;   2. REVISION HISTORY . . . . . . . . . . . . . . . . . . .    3
    52					;   3. PRIMARY FUNCTION
    53					;        3.1.   DEFINE. . . . . . . . . . . . . . . . . . . .    4
    54					;        3.2.   APPLY . . . . . . . . . . . . . . . . . . . .    8
    55					;        3.3.   ARG . . . . . . . . . . . . . . . . . . . . .    9
    56					;        3.4.   LOCAL . . . . . . . . . . . . . . . . . . . .    9
    57					;   4. - CALL TO DEFINED FUNCTION . . . . . . . . . . . . . .   10
    58					;   5. RET, FRET, NRET - RETURN FROM DEFINED FUNCTION . . . .   14
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 3
SNODFF	MAC	13-Oct-66 22:09		REVISION HISTORY

    59						SUBTTL	REVISION HISTORY
    60
    61					COMMENT	\
    62
    63					START OF VERSION 5.
    64					122	RENAME MODULES & CLEAN UP.
    65					147	Use Y.???? instead of X.????, then use the correct macro for
    66						the instructions.
    67					\
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 4
SNODFF	MAC	13-Oct-66 22:09		PRIMARY FUNCTION -- DEFINE

    68						SUBTTL	PRIMARY FUNCTION -- DEFINE
    69					;	DEFINE	F.BROPHY
    70					;	I AM ASSUMING THAT ON TOP OF THE STACK IS THE STRING
    71					;	DESCRIPTOR OF AN ALTERNATE LABEL OR A NULL DESCRIPTOR
    72					;	IF THE FUNCTION NAME IS TO SERVE AS A LABEL.
    73					;	BELOW THIS ON THE STACK IS THE STRING DESCRIPTOR OF
    74					;	THE ARGUMENT TO DEFINE.
    75					;	UPON RETURN THE TWO DESCRIPTORS WILL BE REMOVED FROM
    76					;	THE STACK AND A NULL DESCRIPTOR REPLACED ON THE STACK.
    77					;
    78	400000'	200 00 0 01 777777 	DFN::	MOVE	Z,-1(STACK)	; SEE IF ALTERNATE IS NULL
    79	400001'	316 00 0 00 000000*		CAMN	Z,NULLST##
    80	400002'	254 00 0 00 400005'		JRST	DFN9
    81	400003'	265 11 0 00 000000*		JSP	TLINK,CVTNAM##	; CONVERT TO NAME
    82	400004'	003 01 0 00 000075 		ERROR.	1,61
    83	400005'	262 01 0 00 000000#	DFN9:	POP	STACK,IGNOP##+2	; SAVE THIS DESCRIPTOR
    84	400006'	262 01 0 00 000000#		POP	STACK,IGNOP##+1
    85					;
    86	400007'	265 11 0 00 000000*	DFN10:	JSP	TLINK,STINIT##	; INITIALIZE TO STREAM FOR
    87	400010'	003 01 0 00 000074 		ERROR.	1,60		; THE FUNCTION NAME,
    88									; VARIABLES AND TEMPORARIES
    89	400011'	200 07 0 00 000000*	 	MOVE	S2,SYSCT##	; LOAD CHARACTER SET FOR LEFT
    90	400012'	205 10 0 00 010000 		MOVX	S3,Y.LP		; Parenthesis.
    91	400013'	265 11 0 00 000000*		JSP	TLINK,STRM##	; STREAM FOR LEFT PARENTHESIS
    92	400014'	001 15 0 00 000046 		ERROR	13,38		; LEFT PARENTHESIS NOT FOUND
    93

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 5
SNODFF	MAC	13-Oct-66 22:09		PRIMARY FUNCTION -- DEFINE

    94					; AT THIS POINT THE STACK CONTAINS, AS FAR AS THIS SUBROUTINE IS
    95					; CONCERNED, ONLY THE STRING DESCRIPTOR FOR THE FUNCTION NAME.
    96					; THE CURSOR AND THE POINTER REFER TO THE LEFT PARENTHESIS. Q2
    97					; CONTAINS THE LEFT PARENTHESIS.
    98					; WE SHOULD NOW INSTALL THIS FUNCTION NAME.
    99					;
   100	400015'	265 11 0 00 000000*		JSP	TLINK,INSTAL##
   101	400016'	001 15 0 00 000045 		ERROR	13,37
   102					;
   103					; INSTAL PRESUMABLY POPS THE STACK OF THE STRING DESCRIPTOR AND
   104					; RETURNS THE ADDRESS OF THE INSTALLED VARIABLE INTO REGISTER 0.
   105					;
   106	400017'	202 00 0 00 000000*		MOVEM	Z,IGNOP		; SAVE THIS ADDRESS
   107					;
   108					; WE MUST NOW SCAN THE LIST OF VARIABLES, MINDFUL THAT
   109					; THERE MIGHT NOT BE ANY
   110					;
   111	400020'	205 10 0 00 005000 		MOVX	S3,Y.CM!Y.RP	; WE ARE NOW STREAMING FOR A 
   112									; RIGHT PARENTHESIS OR A COMMA
   113	400021'	402 00 0 00 000005 		SETZM	P2		; P2 WILL CONTAIN THE NUMBER OF 
   114									; VARIABLES
   115	400022'	370 00 0 00 000000*	DFN1:	SOS	CURSOR##		; MOVE PAST THE CHARACTER FOUND
   116	400023'	133 00 0 00 000000*		IBP	STPTR##
   117	400024'	265 11 0 00 400013*		JSP	TLINK,STRM	; STREAM FOR THE NEXT VARIABLE
   118	400025'	001 15 0 00 000050 		ERROR	13,40		; LOOKING FOR A COMMA OR A RIGHT
   119									; PARENTHESIS
   120	400026'	202 16 0 00 000000#		MOVEM	Q2,IGNOP+3	; SAVE THE CHARACTER FOUND
   121	400027'	265 11 0 00 400015*		JSP	TLINK,INSTAL	; INSTALL THIS INTO THE SYMBOL
   122									; TABLE
   123	400030'	254 00 0 00 400034'		JRST	DFN2		; THE ERROR RETURN CAN ONLY OCCUR ON
   124									; A NULL ARGUMENT WHICH WE IGNORE
   125	400031'	261 01 0 00 400502'		PUSH	STACK,[0]	; PUSH THIS ADDRESS ONTO THE STACK
   126	400032'	261 01 0 00 000000 		PUSH	STACK,Z
   127					;
   128	400033'	340 05 0 00 000000 		AOJ	P2,		; INCREMENT THE VARIABLE COUNT
   129				 
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 6
SNODFF	MAC	13-Oct-66 22:09		PRIMARY FUNCTION -- DEFINE

   130	400034'	200 16 0 00 000000#	DFN2:	MOVE	Q2,IGNOP+3
   131	400035'	306 16 0 00 000054 		CAIN	Q2,","		; IF THE CHARACTER WAS COMMA RETURN
   132	400036'	254 00 0 00 400022'		JRST	DFN1		; TO LOOK FOR ANOTHER VARIABLE
   133					;
   134					; IF THE BREAK CHARACTER WAS NOT A COMMA THEN IT WAS A RIGHT PARENTHESIS
   135					; THUS ALL THE VARIABLES ARE FOUND, WE CAN NOW SCAN FOR THE TEMPORARIES,
   136					; VIA A BREAK ON COMMA.
   137					;
   138	400037'	402 00 0 00 000006 	DFN3:	SETZM	S1		; S1 WILL CONTAIN THE NUMBER OF
   139									; TEMPORARIES.
   140	400040'	205 10 0 00 001000 		MOVX	S3,Y.CM		; LOAD FOR A BREAK ON COMMA
   141					;
   142					;
   143	400041'	370 00 0 00 400022*	DFN4:	SOS	CURSOR##		; MOVE PAST THE LAST CHARACTER FOUND
   144	400042'	133 00 0 00 400023*		IBP	STPTR	
   145	400043'	337 00 0 00 400041*		SKIPG	CURSOR		; THERE MIGHT NOT BE ANY
   146									; TEMPORARIES REMAINING
   147	400044'	254 00 0 00 400054'		JRST	DFN5
   148	400045'	265 11 0 00 400024*		JSP	TLINK,STRM	; STREAM FOR COMMA
   149	400046'	320 00 0 00 000000 		JUMP			; NO-OP
   150					;
   151	400047'	265 11 0 00 400027*		JSP	TLINK,INSTAL	; INSTALL THE TEMPORARY
   152	400050'	254 00 0 00 400041'		JRST	DFN4		; DISREGARD ANY EXTRA COMMAS
   153	400051'	261 01 0 00 400502'		PUSH	STACK,[0]	; PUSH THE ADDRESS ONTO THE STACK
   154	400052'	261 01 0 00 000000 		PUSH	STACK,Z
   155					;
   156	400053'	344 06 0 00 400041'		AOJA	S1,DFN4
   157					;
   158

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 7
SNODFF	MAC	13-Oct-66 22:09		PRIMARY FUNCTION -- DEFINE

   159					;	AT THIS POINT ALL THE TEMPORARIES ARE ON THE STACK. WE MUST CALL 
   160					;	THE GARBAGE COLLECTOR TO ENSURE THE SPACE TO CREATE THE FBLOK
   161					;
   162	400054'	550 00 0 00 000006 	DFN5:	HRRZ	Z,S1		; CALCULATE THE TOTAL AMOUNT OF
   163	400055'	271 00 0 05 000006 		ADDI	Z,FARGS(P2)	; STORAGE NEEDED
   164	400056'	265 15 0 00 000000*		JSP	QLINK,GCOLF##
   165					;
   166					;	WE CAN NOW FILL IN THE FBLOK
   167					;
   168	400057'	202 00 0 00 000000#		MOVEM	Z,IGNOP+3
   169	400060'	505 16 0 00 000420 		HRLI	Q2,FBLOK
   170	400061'	540 16 0 00 000000#		HRR	Q2,IGNOP+3
   171	400062'	202 16 0 02 000000 		MOVEM	Q2,BTCODE&BLENG(SURF)
   172	400063'	402 00 0 02 000001 		CLEARM	GCFLD(SURF)
   173	400064'	505 16 0 00 000005 		HRLI	Q2,FEAFL!FAAFL
   174	400065'	540 16 0 00 000005 		HRR	Q2,P2
   175	400066'	202 16 0 02 000002 		MOVEM	Q2,FFLAGS&FNARGS(SURF)
   176	400067'	200 16 0 00 400503'		MOVE	Q2,[JSP P2,DFF$##]	;INSTRUCTION TO CALL DEFINED FUNCTION
   177	400070'	202 16 0 02 000003 		MOVEM	Q2,FCODE(SURF)
   178	400071'	504 16 0 00 000006 		HRL	Q2,S1
   179	400072'	540 16 0 00 400017*		HRR	Q2,IGNOP
   180	400073'	202 16 0 02 000004 		MOVEM	Q2,FNTMPS&FNAME(SURF)
   181					;
   182					;	WE MUST NOW PUT THE VALUE OF SURF INTO THE VFUNC FIELD OF THE
   183					;	VARIABLE BLOCK ASSOCIATED WITH THE FUNCTION
   184					;
   185	400074'	200 07 0 00 400072*		MOVE	S2,IGNOP
   186	400075'	201 16 0 07 000003 		MOVEI	Q2,VFUNC(S2)
   187	400076'	200 17 0 00 000002 		MOVE	Q3,SURF
   188	400077'	265 15 0 00 000000*		JSP	QLINK,IFBLOK##
   189	400100'	200 00 0 00 000000#		MOVE	Z,IGNOP+3	; RELOAD NO OF ITEMS
   190					;
   191					;	THE FLABEL FIELD IS NOT YET FILLED
   192					;
   193	400101'	270 02 0 00 000000 		ADD	SURF,Z		; SURF IS UPDATED
   194	400102'	200 05 0 00 000002 		MOVE	P2,SURF
   195	400103'	275 00 0 00 000006 		SUBI	Z,FARGS
   196					;
   197					;	NOW SURF IS UPDATED, Z CONTAINS THE NUMBER OF ITEMS REMAINING
   198					;	TO BE POPED OFF THE STACK AND P2 CONTAINS THE ADDRESS TO PUT
   199					;	THESE IN, BACKWARDS
   200					;
   201	400104'	361 00 0 00 400111'	DFN6:	SOJL	Z,DFN7
   202	400105'	360 05 0 00 000000 		SOJ	P2,
   203	400106'	262 01 0 05 000000 		POP	STACK,0(P2)
   204	400107'	262 01 0 00 000000#		POP	STACK,IGNOP+3
   205	400110'	254 00 0 00 400104'		JRST	DFN6
   206					;
   207					; AT THIS POINT ALL THE TEMPORARIES AND VARIABLES ARE OFF THE STACK
   208					; AND WE NEED ONLY FILL IN THE FLABEL FIELD. WE MUST ALSO MAKE SURE 
   209					; THAT A NULL STRING IS PUSHED ONTO THE STACK.
   210					;
   211	400111'	550 16 0 00 000000#	DFN7:	HRRZ	Q2,IGNOP+1	; GET ALTERNATE
   212	400112'	336 00 0 00 000016 		SKIPN	Q2		; BUT IF NULL
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 7-1
SNODFF	MAC	13-Oct-66 22:09		PRIMARY FUNCTION -- DEFINE

   213	400113'	200 16 0 00 400074*		MOVE	Q2,IGNOP	; USE FUNCTION NAME
   214	400114'	552 16 0 05 777777 	 	HRRZM	Q2,-1(P2)
   215	400115'	254 00 0 00 000000*		JRST	RETNUL##		; RETURN NULL STRING
   216

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 8
SNODFF	MAC	13-Oct-66 22:09		PRIMARY FUNCTION -- APPLY

   217						SUBTTL	PRIMARY FUNCTION -- APPLY
   218	400116'	200 10 0 00 000001 	APPLY::	MOVE	S3,STACK	; FIND ADDRESS ...
   219	400117'	274 10 0 00 000000 		SUB	S3,Z		; OF FIRST ...
   220	400120'	274 10 0 00 000000 		SUB	S3,Z		; ARGUMENT
   221	400121'	261 01 0 10 000001 		PUSH	STACK,1(S3)	; AND
   222	400122'	261 01 0 10 000002 		PUSH	STACK,2(S3)	; PUSH IT
   223
   224	400123'	505 06 0 10 000003 		HRLI	S1,3(S3)	; 'FROM' ADDRESS
   225	400124'	541 06 0 10 000001 		HRRI	S1,1(S3)	; 'TO' ADDRESS
   226	400125'	251 06 0 01 777776 		BLT	S1,-2(STACK)	; SLIDE EVERYTHING UP BY 2
   227	400126'	274 01 0 00 400504'		SUB	STACK,[2,,2]	; ADJUST STACK
   228
   229	400127'	200 05 0 00 000000 		MOVE	P2,Z		; SAVE ARG COUNT
   230
   231	400130'	265 11 0 00 000000*		JSP	TLINK,CVTVAL##	; GET THE VALUE 
   232	400131'	003 01 0 00 000063 		ERROR.	1,51		; SOMETHING'S WRONG
   233
   234	400132'	265 11 0 00 400003*		JSP	TLINK,CVTNAM##	; ENSURE FIRST ARG A NAME
   235	400133'	003 01 0 00 000063 		ERROR.	1,51		; BAD FIRST
   236	400134'	332 00 0 01 000000 		SKIPE	0(STACK)	; NATURAL?
   237	400135'	003 01 0 00 000063 		ERROR.	1,51		; NO
   238
   239	400136'	274 01 0 00 400504'		SUB	STACK,[2,,2]	; POP RETURNED VALUE
   240	400137'	505 05 0 05 777777 		HRLI	P2,-1(P2)	; MOVE ARGS-1 TO LEFT
   241	400140'	540 05 0 01 000001 		HRR	P2,1(STACK)	; LOAD ADDRESS OF VB
   242	400141'	271 05 0 00 000003 		ADDI	P2,VFUNC	; POINT TO FUNCTION FIELD
   243	400142'	254 00 0 00 000000#		JRST	I.FN##+1	; JOIN INTERPRETER
   244
   245

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 9
SNODFF	MAC	13-Oct-66 22:09		PRIMARY FUNCTION -- ARG

   246						SUBTTL	PRIMARY FUNCTION -- ARG
   247
   248	400143'	634 05 0 00 000000 	ARG::	TDZA	P2,		; FLAG ENTRY
   249
   250						SUBTTL	PRIMARY FUNCTION -- LOCAL
   251
   252	400144'	201 05 0 00 000001 	LOCAL::	MOVEI	P2,1		; FLAG ENTRY
   253
   254						 ; HERE FROM ARG
   255
   256	400145'	265 11 0 00 000000*	ARGLOC:	JSP	TLINK,CVTINT##	; ENSURE AN INTEGER
   257	400146'	003 01 0 00 000065 		ERROR.	1,53		; BAD 2ND
   258	400147'	274 01 0 00 400504'		SUB	STACK,[2,,2]	; POP STACK
   259	400150'	200 06 0 01 000002 		MOVE	S1,2(STACK)	; SAVE VALUE
   260
   261	400151'	265 11 0 00 400132*		JSP	TLINK,CVTNAM	; ENSURE A NAME
   262	400152'	003 01 0 00 000064 		ERROR.	1,52		; BAD FIRST ARG
   263	400153'	332 00 0 01 000000 		SKIPE	0(STACK)	; NATURAL?
   264	400154'	003 01 0 00 000064 		ERROR.	1,52		; NO
   265
   266	400155'	200 07 0 01 777777 		MOVE	S2,-1(STACK)	; LOAD ADDRESS OF VB
   267	400156'	540 07 0 07 000003 		HRR	S2,VFUNC(S2)	; LOAD ADDRESS OF FBLOK
   268	400157'	554 10 0 07 000000 	ARGLC3:	HLRZ	S3,BTCODE(S2)	; EXTRACT TYPE OF BLOK
   269	400160'	306 10 0 00 000420 		CAIN	S3,FBLOK	; FBLOK?
   270	400161'	254 00 0 00 400166'		JRST	ARGLC2		; YES
   271
   272	400162'	302 10 0 00 000424 		CAIE	S3,TFBLOK	; TRACED?
   273	400163'	001 15 0 00 000103 		ERROR	13,67		; NO - JUST BAD
   274
   275	400164'	200 07 0 07 000004 		MOVE	S2,TFOLD(S2)	; GET OLD ONE
   276	400165'	254 00 0 00 400157'		JRST	ARGLC3		; AND TRY AGAIN
   277
   278						 ; HERE WHEN WE CONFIRM AN FBLOK
   279
   280	400166'	550 10 0 07 000002 	ARGLC2:	HRRZ	S3,FNARGS(S2)	; LOAD # OF ARGS
   281	400167'	322 05 0 00 400173'		JUMPE	P2,ARGLC1	; JUMP IF ENTRY WAS ARG
   282
   283	400170'	554 11 0 07 000004 		HLRZ	T1,FNTMPS(S2)	; LOAD NUMBER OF TEMPS
   284	400171'	270 07 0 00 000010 		ADD	S2,S3		; ADJUST POINTER
   285	400172'	200 10 0 00 000011 		MOVE	S3,T1		; NUMBER GOES TO S3
   286
   287	400173'	375 00 0 00 000006 	ARGLC1:	SOSGE	S1		; NORMALIZEW 2ND ARG
   288	400174'	254 00 0 00 000000*		JRST	FRET1##		; 0 OR LESS - FAIL
   289	400175'	311 06 0 00 000010 		CAML	S1,S3		; COMPARE ARG WITH ACTUAL #
   290	400176'	254 00 0 00 400174*		JRST	FRET1		; FAIL IF TOO HIGH
   291
   292	400177'	270 07 0 00 000006 		ADD	S2,S1		; ADJUST ADDRESS
   293	400200'	200 00 0 07 000006 		MOVE	Z,FARGS(S2)	; LOAD VARIABLE
   294	400201'	542 00 0 01 777777 		HRRM	Z,-1(STACK)	; INSERT INTO STACK
   295	400202'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
   296

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 10
SNODFF	MAC	13-Oct-66 22:09		- CALL TO DEFINED FUNCTION

   297						SUBTTL - CALL TO DEFINED FUNCTION
   298
   299						 ; DFF IS ENTERED WITH A JSP P2,DFF 
   300						 ; EXECUTED FROM WITHIN THE FBLOK
   301
   302	400203'	201 05 0 05 777774 	DFF::	MOVEI	P2,-FCODE-1(P2)	; POINT TO FBLOK
   303	400204'	505 05 0 00 004000 		HRLI	P2,FLDC		; INSERT FLOAT FLAG
   304	400205'	202 05 0 00 000000*		MOVEM	P2,FLAP##		; SAVE IN CASE OF GC
   305
   306						 ; CHECKING FOR AND BRANCHING OFF TO F TRACING
   307
   308	400206'	402 00 0 00 000000#		CLEARM	IGNOP+3		; FLAG TO TRACE LATER
   309	400207'	332 00 0 00 000000*		SKIPE	$TRACE##	; &TRACE ON
   310	400210'	254 00 0 00 400333'		JRST	DFF.T1		; CHECK 'C' TRACING
   311
   312	400211'	332 00 0 00 000000*	DFF.T5:	SKIPE	$FTRC##		; &FTRACE?
   313	400212'	254 00 0 00 400344'		JRST	DFF.T2		; YES, PUT SOMETHING OUT
   314
   315	400213'				DFF.T6:	 ; RETURN FROM &FTRACE TYPE MESSAGE
   316
   317
   318						 ; HERE TO ADJUST ARGUMENTS
   319
   320			000012			NA==T2			; REGISTER TO HOLD # OF ARGS
   321	400213'	550 12 0 05 000002 	DFF0:	HRRZ	NA,FNARGS(P2)	; # OF FORMAL PARAMETERS
   322	400214'	202 12 0 00 000000#		MOVEM	NA,IGNOP+2	; SAVE THIS NUMBER
   323	400215'	274 00 0 00 000012 		SUB	Z,NA		; COMPUTE # OF ARGS TO BE REMOVED
   324	400216'	322 00 0 00 400227'		JUMPE	Z,DFF3		; EQUAL - AVOID ADJUSTMENTS
   325	400217'	327 00 0 00 400224'		JUMPG	Z,DFF2		; TOO MANY - GO REMOVE
   326
   327						 ; HERE TO ADD ADDITIONAL ARGUMENTS
   328
   329	400220'	261 01 0 00 400001*	DFF1:	PUSH	STACK,NULLST	; ADD ...
   330	400221'	261 01 0 00 000000#		PUSH	STACK,NULLST+1	; A DUMMY ARGUMENT
   331	400222'	341 00 0 00 400220'		AOJL	Z,DFF1		; LOOP ON NEGATIVE Z
   332
   333	400223'	254 00 0 00 400227'		JRST	DFF3		; AND JUMP IF DONE
   334
   335						 ; HERE TO REMOVE EXCESS ARGS
   336
   337	400224'	504 00 0 00 000000 	DFF2:	HRL	Z,Z		; REPRODUCE COUNT IN LEFT
   338	400225'	274 01 0 00 000000 		SUB	STACK,Z		; AND DROP BY ...
   339	400226'	274 01 0 00 000000 		SUB	STACK,Z		; SO MANY DESCRIPTORS
  
   341

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 11
SNODFF	MAC	13-Oct-66 22:09		- CALL TO DEFINED FUNCTION

   342						 ; HERE WHEN ACTUAL ARGUMENTS EQUAL IN NUMBER THE
   343						 ; FORMAL PARAMETERS. NA CONTAINS THIS NUMBER
   344
   345						 ; SAVE ALL VALUES ON STACK
   346
   347	400227'	202 01 0 00 400113*	DFF3:	MOVEM	STACK,IGNOP	; SAVE STACK POSITION
   348	400230'	201 07 0 05 000006 		MOVEI	S2,FARGS(P2)	; POINT TO FIRST ARGUMENT
   349	400231'	554 10 0 05 000004 		HLRZ	S3,FNTMPS(P2)	; COMPUTE # OF ITEMS ...
   350	400232'	270 10 0 00 000012 		ADD	S3,NA		; ITEMS TO BE PUSHED
   351	400233'	202 10 0 00 000000#		MOVEM	S3,IGNOP+1	; SAVE THIS VALUE
   352	400234'	200 16 0 05 000004 		MOVE	Q2,FNAME(P2)	; LOAD ADDR OF VAR BL
   353
   354	400235'	265 15 0 00 000000*	DFF3A:	JSP	QLINK,LOCVAL##	; POINT TO REAL VALUE
   355	400236'	261 01 0 16 000000 		PUSH	STACK,0(Q2)	; PUSH ...
   356	400237'	261 01 0 16 000001 		PUSH	STACK,1(Q2)	; D3ESCRIPTOR
   357	400240'	361 10 0 00 400243'		SOJL	S3,DFF4		; SKIP OUT IF DONE
   358	400241'	200 16 0 07 000000 		MOVE	Q2,0(S2)	; LOAD NEXT VB ADDR
   359	400242'	344 07 0 00 400235'		AOJA	S2,DFF3A	; INCREMENT POINTER AND LOOP
   360
   361						 ; NULL OUT FUNCTION NAME & TEMPS
   362
   363	400243'	200 13 0 00 400220*	DFF4:	MOVE	T3,NULLST	; POISE NULL STRING ...
   364	400244'	200 14 0 00 000000#		MOVE	T4,NULLST+1	; IN REGISTERS
   365	400245'	554 10 0 05 000004 		HLRZ	S3,FNTMPS(P2)	; LOAD # OF TEMPS
   366	400246'	201 07 0 05 000006 		MOVEI	S2,FARGS(P2)	; POINT TO ...
   367	400247'	270 07 0 00 000012 		ADD	S2,NA		; FIRST TEMP
   368	400250'	200 16 0 05 000004 		MOVE	Q2,FNAME(P2)	; LOAD FUNCTION NAME
   369
   370	400251'	265 15 0 00 400235*	DFF4A:	JSP	QLINK,LOCVAL	; ADJUST POINTER
   371	400252'	202 13 0 16 000000 		MOVEM	T3,0(Q2)	; NULL OUT ...
   372	400253'	202 14 0 16 000001 		MOVEM	T4,1(Q2)	; DESCRIPTOR
   373
   374	400254'	361 10 0 00 400257'		SOJL	S3,DFF5		; EXIT IF COUNT DROPS TO 0
   375	400255'	200 16 0 07 000000 		MOVE	Q2,0(S2)	; LOAD NEXT VB ADDR
   376	400256'	344 07 0 00 400251'		AOJA	S2,DFF4A	; INCREMENT FOR NEXT TIME
   377
   378						 ; INSERT NEW VALUES INTO FORMAL PARAMETERS
   379
   380	400257'	270 05 0 00 000012 	DFF5:	ADD	P2,NA		; ADJUST FBLOK POINTER
   381	400260'	200 14 0 00 400227*		MOVE	T4,IGNOP	; LOAD OLD STACK
   382
   383	400261'	361 12 0 00 400267'	DFF5A:	SOJL	NA,DFF6		; LOOP ON COUNT IN NA
   384	400262'	200 16 0 05 000005 		MOVE	Q2,FARGS-1(P2)	; LOAD	ADDR OF VB
   385	400263'	265 15 0 00 400251*		JSP	QLINK,LOCVAL	; ADJUST ADDR
   386	400264'	262 14 0 16 000001 		POP	T4,1(Q2)	; 2ND WORD
   387	400265'	262 14 0 16 000000 		POP	T4,0(Q2)	; 1ST WORD
   388	400266'	364 05 0 00 400261'		SOJA	P2,DFF5A	; DECREMENT POINTER AND LOOP
   389
   390						 ; OVERWRITE ARGUMENTS
   391
   392	400267'	200 06 0 00 000000#	DFF6:	MOVE	S1,IGNOP+2	; NUMBER OF FORMAL PARAMS
   393	400270'	242 06 0 00 000001 		LSH	S1,1		; DOUBLED
   394	400271'	504 06 0 00 000006 		HRL	S1,S1		; ADJUST ...
   395	400272'	274 01 0 00 000006 		SUB	STACK,S1	; STACK
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 11-1
SNODFF	MAC	13-Oct-66 22:09		- CALL TO DEFINED FUNCTION

   396
   397	400273'	200 13 0 00 400260*		MOVE	T3,IGNOP	; COMPUTE ...
   398	400274'	505 00 0 13 000001 		HRLI	Z,1(T3)		; 'FROM' ADDRESS
   399	400275'	541 00 0 14 000001 		HRRI	Z,1(T4)		; INSERT 'TO' ADDRESS
   400	400276'	251 00 0 01 000000 		BLT	Z,0(STACK)	; OVERWRITE GIVEN ARGS
   401
   402

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 12
SNODFF	MAC	13-Oct-66 22:09		- CALL TO DEFINED FUNCTION

   403						 ; ARGS TAKEN CARE OF - SAVE ALL AND MAKE CALL
   404
   405						 ; PUSH FBLOK AND THE RETURN ADDRESS
   406						 ; 
   407	400277'	261 01 0 00 400205*		PUSH	STACK,FLAP	; WORDS WOULD BE ...
   408	400300'	261 01 0 00 000004 		PUSH	STACK,PLINK	; SUPERFLUOUS HERE
   409
   410						 ; BUMP LEVEL
   411
   412	400301'	265 00 0 00 000000*	DFF7:	PUSHSA	I		; SAVE THE INTERPRETER STATE
   413	400302'	000010	000000*
   414	400303'	201 15 0 00 000001 		MOVEI	Q1,1		; INDICATE TYPE OF ...
   415	400304'	202 15 0 00 000000*		MOVEM	Q1,PUSHTP##	; STACK FRAME (NORMAL)
   416	400305'	202 01 0 00 000000*		MOVEM	STACK,GROUND##	; AND ESTABLISH GROUND
   417	400306'	350 00 0 00 000000*		AOS	$FNCLV##	; INCREMENT LEVEL
   418
   419						 ; GET LABEL TO ILOC
   420
   421	400307'	200 05 0 00 400277*		MOVE	P2,FLAP		; RESTORE ADDR OF FBLOK
   422	400310'	200 06 0 05 000005 		MOVE	S1,FLABEL(P2)	; POINTER TO LABEL VB
   423	400311'	201 17 0 06 000004 	  MOVEI  Q3,VNAME(S1)  ; POINT TO NAME IN CASE
   424	400312'	336 07 0 06 000002 		SKIPN	S2,VLABEL(S1)	; PICK UP LABEL FIELD
   425	400313'	005 11 0 00 000003 		ERROR%	9,3		; UNDEF. LABEL
   426	400314'	554 10 0 00 000007 		HLRZ	S3,S2		; GET BUILT-IN ADDR (IN CASE)
   427	400315'	606 07 0 00 777777 		TRNN	S2,-1		; BUILT-IN LABEL?
   428	400316'	254 00 0 10 000000 		JRST	0(S3)		; GO TO BUILT-IN
   429
   430	400317'	200 10 0 06 000006 		MOVE	S3,VFLAGS(S1)	; LOAD FLAGS OF LABEL VB
   431	400320'	607 10 0 00 200000 		TLNN	S3,LTFLAG	; IS LABEL BEING TRACED
   432	400321'	254 00 0 00 400324'		JRST	DFF7A		; NO
   433
   434	400322'	504 07 0 07 000003 		HRL	S2,TRVAL+1(S2)	; PICK UP OFFSET FROM TRBLOK
   435	400323'	540 07 0 07 000002 		HRR	S2,TRVAL(S2)	; PICK UP ADDRESS OF CBLOK
   436
   437	400324'	542 07 0 00 000000*	DFF7A:	HRRM	S2,ILOC##	; PLUG CBLOK ADDR
   438	400325'	546 07 0 00 000000#		HLRM	S2,ILOC##+1	; PLUG OFFSET
   439
   440						 ; CHECK FOR TRACING AND GO
   441
   442	400326'	332 06 0 00 000000#		SKIPE	S1,IGNOP+3	; WAS CALL TRACED?
   443	400327'	254 00 0 00 400353'		JRST	DFF.T8		; YES!
   444	400330'				DFF7B:	 ;
   445	400330'	332 00 0 00 000000#		SKIPE	$FNCLVL+1	; &FNCLEVEL TRACED?
   446						JSP	SLINK,[SETOM BARINC   ; ONE LESS BAR
   447	400331'	265 06 0 00 400505'			       JRST FNCTRC##]   ; GO TRACE &FNCLEVEL
   448	400332'	254 00 0 00 000000*		JRST	IBEGIN##	; GO
   449

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 13
SNODFF	MAC	13-Oct-66 22:09		- CALL TO DEFINED FUNCTION

   450						 ; CALL TYPE TRACING IS DONE HERE
   451
   452						 ; &TRACE ON
   453
   454	400333'	550 06 0 05 000004 	DFF.T1:	HRRZ	S1,FNAME(P2)	; GET VB
   455	400334'	200 07 0 06 000006 		MOVE	S2,VFLAGS(S1)	; GET ITS FLAGS
   456	400335'	607 07 0 00 100000 		TLNN	S2,VCTFL	; CALL TRACED?
   457	400336'	254 00 0 00 400211'		JRST	DFF.T5		; NO, RETURN
   458
   459	400337'	202 06 0 00 000000#		MOVEM	S1,IGNOP+3	; SET FLAG
   460	400340'	550 11 0 06 000003 		HRRZ	T1,VFUNC(S1)	; LOAD TFBLOK
   461	400341'	332 00 0 11 000006 		SKIPE	TFCT(T1)	; PR. DEF. FUNC.?
   462	400342'	254 00 0 00 400211'		JRST	DFF.T5		; YES, COME AROUND LATER
   463
   464	400343'	254 00 0 00 400345'		JRST	DFF.T3		; JOIN COMMON OUT
   465
   466						 ; &FTRACE ON
   467
   468	400344'	370 00 0 00 400211*	DFF.T2:	SOS	$FTRC##		; DECREMENT COUNT
   469
   470	400345'	200 06 0 05 000004 	DFF.T3:	MOVE	S1,FNAME(P2)	; GET NAME
   471	400346'	261 01 0 06 000004 		PUSH	STACK,VNAME(S1)	; ONTO
   472	400347'	261 01 0 06 000005 		PUSH	STACK,VNAME+1(S1) ; STACK
   473	400350'	265 06 0 00 000000*		JSP	SLINK,CLMESS##	; PRINT MESSAGE
   474	400351'	200 05 0 00 400307*		MOVE	P2,FLAP		; RELOAD P2
   475	400352'	254 00 0 00 400213'		JRST	DFF.T6		; GO BACK FOR MORE
   476
   477						 ; HERE JUST BEFORE THE CALL IF &TRACE WAS ON
   478
   479	400353'	200 07 0 06 000003 	DFF.T8:	MOVE	S2,VFUNC(S1)	; LOAD FBLOK
   480	400354'	550 12 0 07 000006 		HRRZ	T2,TFCT(S2)	; LOAD TRBOK
   481	400355'	265 11 0 00 000000*		JSP	TLINK,TRCALL	; MAKE PD FUNCTION CALL
   482	400356'	255 00 0 00 000000 		JFCL
   483	400357'	255 00 0 00 000000 		JFCL
   484	400360'	254 00 0 00 400330'		JRST	DFF7B		; RETURN
   485

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 14
SNODFF	MAC	13-Oct-66 22:09		RET, FRET, NRET - RETURN FROM DEFINED FUNCTION

   486						SUBTTL	RET, FRET, NRET - RETURN FROM DEFINED FUNCTION
   487
   488						 ; RETURN
   489
   490	400361'	201 06 0 00 000000*	RET::	MOVEI	S1,S.RET##	; POINT TO STRING
   491	400362'	254 00 0 00 400366'		JRST	CRET		; JOIN COMMON PROCESSING
   492
   493						 ; FRETURN
   494
   495	400363'	201 06 0 00 000000*	FRET::	MOVEI	S1,S.FRET##	; POINT TO STRING
   496	400364'	254 00 0 00 400366'		JRST	CRET		; JOIN COMMON PROCESSING
   497
   498						 ; NRETURN
   499
   500	400365'	201 06 0 00 000000*	NRET::	MOVEI	S1,S.NRET##	; POINT TO 'NRETURN'
   501
   502	400366'	202 06 0 00 000000*	CRET:	MOVEM	S1,$RTNTP##	; ESTABLISH &RTNTYPE
   503
   504	400367'	336 07 0 00 400304*	CRET1:	SKIPN	S2,PUSHTP	; LOAD TYPE
   505	400370'	001 10 0 00 000001 		ERROR	8,1		; CAN'T BE 0
   506
   507	400371'	200 01 0 00 400305*		MOVE	STACK,GROUND	; DROP TO THE GROUND
   508	400372'	265 00 0 00 000000*		POPSA	I		; AND RETRIEVE LAST UNIVERSE
   509	400373'	000010	400302*
   510	400374'	321 07 0 00 400367'		JUMPL	S2,CRET1	; REPEAT IF THIS WAS AN ERROR UNIVERSE
   511
   512	400375'	262 01 0 00 000004 		POP	STACK,PLINK	; OLD RETURN ADDRESS
   513	400376'	262 01 0 00 400351*		POP	STACK,FLAP	; FBLOK
   514
   515						 ; RETRIEVE RETURNED VALUE
   516
   517	400377'	200 05 0 00 400376*	RET2:	MOVE	P2,FLAP		; ADDR OF FBLOK
   518	400400'	200 16 0 05 000004 		MOVE	Q2,FNAME(P2)	; ADDRESS OF VARIABLE BLOCK
   519	400401'	265 15 0 00 400263*		JSP	QLINK,LOCVAL	; LOCATE THE VALUE
   520	400402'	200 00 0 16 000000 		MOVE	Z,0(Q2)		; SAVE ...
   521	400403'	202 00 0 00 000000#		MOVEM	Z,FLAP+2	; RETURNED ...
   522	400404'	200 00 0 16 000001 		MOVE	Z,1(Q2)		; VALUE ...
   523	400405'	202 00 0 00 000000#		MOVEM	Z,FLAP+3	; IN FLAP
   524
   525						 ; CHECKS FOR RETURN TRACING
   526
   527	400406'	332 00 0 00 400207*		SKIPE	$TRACE		; &TRACE?
   528	400407'	254 00 0 00 400454'		JRST	RET.T1		; YES
   529	400410'				RET.T5:	 ;
   530	400410'	332 00 0 00 400344*		SKIPE	$FTRC##		; &FTRACE?
   531	400411'	254 00 0 00 400466'		JRST	RET.T2		; YES
   532	400412'				RET.T6:	 ;
   533	400412'	375 00 0 00 400306*		SOSGE	$FNCLV		; DECREMENT &FNCLEVEL
   534	400413'	001 10 0 00 000001 		ERROR	8,1		; RETURN FROM LEVEL 0
   535
   536	400414'	332 00 0 00 000000#		SKIPE	$FNCLV+1	; IS IT TRACED?
   537	400415'	265 06 0 00 000000*		JSP	SLINK,FNCTRC	; APPARENTLY.
   538
   539						 ; HERE TO RESTORE OLD VALUES OF TEMPS & PARAMS
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 14-1
SNODFF	MAC	13-Oct-66 22:09		RET, FRET, NRET - RETURN FROM DEFINED FUNCTION

   540
   541	400416'	200 05 0 00 400377*	RET3:	MOVE	P2,FLAP			; RESTORE P2
   542	400417'	550 12 0 05 000002 		HRRZ	NA,FNARGS(P2)	; SET NUMBER OF ARGS
   543	400420'	554 13 0 05 000004 		HLRZ	T3,FNTMPS(P2)	; LOAD NUMBER OF TEMPS
   544	400421'	270 13 0 00 000012 		ADD	T3,NA		; TOTAL NUMBER
   545	400422'	270 05 0 00 000013 		ADD	P2,T3		; POINT TO END OF BLOK
   546
   547	400423'	361 13 0 00 400431'	RET3A:	SOJL	T3,RET3C	; DECREMENT COUNT
   548	400424'	200 16 0 05 000005 	RET3B:	MOVE	Q2,FARGS-1(P2)	; POINT TO ...
   549	400425'	265 15 0 00 400401*		JSP	QLINK,LOCVAL	; VALUE
   550	400426'	262 01 0 16 000001 		POP	STACK,1(Q2)	; RESTORE ...
   551	400427'	262 01 0 16 000000 		POP	STACK,0(Q2)	; VALUE
   552	400430'	364 05 0 00 400423'		SOJA	P2,RET3A	; DECREMENT AND LOOP
   553
   554	400431'	341 13 0 00 400434'	RET3C:	AOJL	T3,RET4		; IF -2 QUIT
   555	400432'	360 13 0 00 000000 		SOJ	T3,		; IF -1, GO BACK AND ...
   556	400433'	364 05 0 00 400424'		SOJA	P2,RET3B	; DO IT TO FNAME
   557
   558

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 15
SNODFF	MAC	13-Oct-66 22:09		RET, FRET, NRET - RETURN FROM DEFINED FUNCTION

   559						 ; UPDATE &STNO
   560
   561	400434'	200 11 0 00 000000*	RET4:	MOVE	T1,ILABEL##	; GET ADDRESS
   562	400435'	270 11 0 00 000000#		ADD	T1,ILABEL+1	; OF STATEMENT
   563	400436'	554 11 0 11 000001 		HLRZ	T1,CSTNO(T1)	; PICK UP &STNO
   564	400437'	202 11 0 00 000000*		MOVEM	T1,$STNO##	; AND STORE IT.
   565
   566						 ; AND NOW RETURN
   567
   568	400440'	200 06 0 00 400366*	RET5:	MOVE	S1,$RTNTP	; WAS IT A ...
   569	400441'	306 06 0 00 400363*		CAIN	S1,S.FRET	; FAIL ?
   570	400442'	254 00 0 04 000000 		JRST	0(PLINK)	; YES
   571
   572	400443'	261 01 0 00 000000#		PUSH	STACK,FLAP+2	; PUSH ...
   573	400444'	261 01 0 00 000000#		PUSH	STACK,FLAP+3	; VALUE
   574	400445'	306 06 0 00 400361*		CAIN	S1,S.RET	; NORMAL RETURN?
   575	400446'	254 00 0 04 000001 		JRST	1(PLINK)	; YES
   576
   577	400447'	265 11 0 00 400151*		JSP	TLINK,CVTNAM##	; ENSURE A NAME
   578	400450'	001 16 0 00 000003 		ERROR	14,3		; NOT A NAME
   579
   580	400451'	201 06 0 00 064000 		MOVEI	S1,VAR		; SET TYPE ...
   581	400452'	506 06 0 01 777777 		HRLM	S1,-1(STACK)	; TO VARIABLE
   582	400453'	254 00 0 04 000001 		JRST	1(PLINK)	; AND RETURN
   583

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 16
SNODFF	MAC	13-Oct-66 22:09		RET, FRET, NRET - RETURN FROM DEFINED FUNCTION

   584						 ; TRACING OF A RETURN NATURE
   585
   586						 ; HERE IF &TRACE IS ON
   587
   588	400454'	200 06 0 05 000004 	RET.T1:	MOVE	S1,FNAME(P2)	; GET VB ADDR
   589	400455'	200 07 0 06 000006 		MOVE	S2,VFLAGS(S1)	; IS FUNCTION ...
   590	400456'	607 07 0 00 040000 		TLNN	S2,VRTFL	; RETURN TRACED?
   591	400457'	254 00 0 00 400410'		JRST	RET.T5		; NO
   592
   593	400460'	200 11 0 06 000003 		MOVE	T1,VFUNC(S1)	; LOAD FBLOK
   594	400461'	200 12 0 11 000005 		MOVE	T2,TFRT(T1)	; GET TRBLOK FOR RET TRCING
   595	400462'	265 11 0 00 400355*		JSP	TLINK,TRCALL##	; CALL DEF FUNC. IF THERE
   596	400463'	001 17 0 00 000000 		ERROR	15		; &TRACE CAN'T BE OFF
   597	400464'	254 00 0 00 400467'		JRST	RET.T3		; JOIN &FTRACE DISPLAY
   598	400465'	254 00 0 00 400410'		JRST	RET.T5		; GO BACK
   599
   600						 ; HERE IF &FTRACE IS ON
   601
   602	400466'	370 00 0 00 400410*	RET.T2:	SOS	$FTRC##		; FIRST DECREMENT &FTRACE
   603
   604	400467'	476 00 0 00 000000*	RET.T3:	SETOM	BARINC##	; ONE LESS BAR ON OUTPUT
   605
   606	400470'	201 07 0 00 000000#		MOVEI	S2,FLAP+2	; POINT TO RETURN VALUE
   607	400471'	200 10 0 00 400440*		MOVE	S3,$RTNTP	; WAS IT AN ...
   608	400472'	306 10 0 00 400441*		CAIN	S3,S.FRET	; FRETURN?
   609	400473'	400 07 0 00 000000 		CLEAR	S2,		; YES, CLEAR RETURN VALUE
   610
   611	400474'	200 05 0 00 400416*		MOVE	P2,FLAP		; LOAD FBLOK
   612	400475'	200 06 0 05 000004 		MOVE	S1,FNAME(P2)	; GET VB
   613	400476'	261 01 0 06 000004 		PUSH	STACK,VNAME(S1)	; PUSH NAME OF VAR
   614	400477'	261 01 0 06 000005 		PUSH	STACK,VNAME+1(S1)
   615	400500'	265 06 0 00 000000*		JSP	SLINK,RTMESS##	; PRODUCE MESSAGE
   616	400501'	254 00 0 00 400412'		JRST	RET.T6		; AND GO BACK
   617

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 17
SNODFF	MAC	13-Oct-66 22:09		RET, FRET, NRET - RETURN FROM DEFINED FUNCTION

   618						END

NO ERRORS DETECTED

HI-SEG. BREAK IS 400507
PROGRAM BREAK IS 000000
CPU TIME USED 04:32.180

44P CORE USED
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page S-1
SNODFF	MAC	13-Oct-66 22:09		SYMBOL TABLE

APPLY		400116'	int	E1$52		000000	sin	Q2		000016		$FTRC		400466'	ext	
ARG		400143'	int	E1$53		000000	sin	Q3		000017		$RTNTP		400471'	ext	
ARGLC1		400173'		E1$60		000000	sin	QLINK		000015		$STNO		400437'	ext	
ARGLC2		400166'		E1$61		000000	sin	RET		400361'	int	$TRACE		400406'	ext	
ARGLC3		400157'		E13$37		000000	sin	RET.T1		400454'		%%JOBD	043100	000450	spd	
ARGLOC		400145'		E13$38		000000	sin	RET.T2		400466'		%%MACT	000200	000025	spd	
BARINC		400505'	ext	E13$40		000000	sin	RET.T3		400467'		%%SNOP	000500	000305	spd	
BLENG		000000	sin	E13$67		000000	sin	RET.T5		400410'		%%UUOS	001400	000457	spd	
BTCODE		000000	sin	E14$3		000000	sin	RET.T6		400412'		
CLMESS		400350'	ext	E15$		000000	sin	RET2		400377'		
CRET		400366'		E8$1		000000	sin	RET3		400416'		
CRET1		400367'		E9$3		000000	sin	RET3A		400423'		
CSTNO		000001	sin	ERR	001000	000000		RET3B		400424'		
CURSOR		400043'	ext	ERR%	005000	000000		RET3C		400431'		
CVTINT		400145'	ext	ERR.	003000	000000		RET4		400434'		
CVTNAM		400447'	ext	FAAFL		000004	sin	RET5		400440'		
CVTVAL		400130'	ext	FARGS		000006	sin	RETNUL		400115'	ext	
DFF		400203'	int	FBLOK		000420	sin	RTMESS		400500'	ext	
DFF$		400503'	ext	FCODE		000003	sin	S.FRET		400472'	ext	
DFF.T1		400333'		FEAFL		000001	sin	S.NRET		400365'	ext	
DFF.T2		400344'		FFLAGS		000002	sin	S.RET		400445'	ext	
DFF.T3		400345'		FLABEL		000005	sin	S1		000006		
DFF.T5		400211'		FLAP		400474'	ext	S2		000007		
DFF.T6		400213'		FLDC		004000	sin	S3		000010		
DFF.T8		400353'		FNAME		000004	sin	SAVEI		400373'	ext	
DFF0		400213'		FNARGS		000002	sin	SLINK		000006		
DFF1		400220'		FNCTRC		400506'	ext	STACK		000001		
DFF2		400224'		FNTMPS		000004	sin	STINIT		400007'	ext	
DFF3		400227'		FRET		400363'	int	STPTR		400042'	ext	
DFF3A		400235'		FRET1		400176'	ext	STRM		400045'	ext	
DFF4		400243'		FTDEBU		000000	spd	SURF		000002		
DFF4A		400251'		GCFLD		000001	sin	SYSCT		400011'	ext	
DFF5		400257'		GCOLF		400056'	ext	T1		000011		
DFF5A		400261'		GROUND		400371'	ext	T2		000012		
DFF6		400267'		I.FN		000000	ext	T3		000013		
DFF7		400301'		IBEGIN		400332'	ext	T4		000014		
DFF7A		400324'		IFBLOK		400077'	ext	TFBLOK		000424	sin	
DFF7B		400330'		IGNOP		400273'	ext	TFCT		000006	sin	
DFFASC	422150	600000	spd	ILABEL		400434'	ext	TFOLD		000004	sin	
DFFEDT		000147	spd	ILOC		400324'	ext	TFRT		000005	sin	
DFFMIN		000000	spd	INSTAL		400047'	ext	TLINK		000011		
DFFSIX	444646	000000	spd	LOCAL		400144'	int	TRCALL		400462'	ext	
DFFVER		000005	spd	LOCVAL		400425'	ext	TRVAL		000002	sin	
DFFWHO		000000	spd	LSAVEI		000010	spd	VAR		064000	sin	
DFN		400000'	int	LTFLAG		200000	sin	VCTFL		100000	sin	
DFN1		400022'		NA		000012	spd	VFLAGS		000006	sin	
DFN10		400007'		NRET		400365'	int	VFUNC		000003	sin	
DFN2		400034'		NULLST		400243'	ext	VLABEL		000002	sin	
DFN3		400037'		P2		000005		VNAME		000004	sin	
DFN4		400041'		PLINK		000004		VRTFL		040000	sin	
DFN5		400054'		PPL		000010	spd	Y.CM	001000	000000	spd	
DFN6		400104'		PPSA		400372'	ext	Y.LP	010000	000000	spd	
DFN7		400111'		PSHSA		400301'	ext	Y.RP	004000	000000	spd	
DFN9		400005'		PUSHTP		400367'	ext	Z		000000		
E1$51		000000	sin	Q1		000015		$FNCLV		400412'	ext	

SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNODFF	MAC	13-Oct-66 22:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

APPLY	   218#
ARG	   248#
ARGLC1	   281	   287#
ARGLC2	   270	   280#
ARGLC3	   268#	   276
ARGLOC	   256#
BARINC	   446	   604
BLENG	   171
BTCODE	   171	   268
CLMESS	   473
CRET	   491	   496	   502#
CRET1	   504#	   510
CSTNO	   563
CURSOR	   115	   143	   145
CVTINT	   256
CVTNAM	    81	   234	   261	   577
CVTVAL	   231
DFF	   302#
DFF$	   176
DFF.T1	   310	   454#
DFF.T2	   313	   468#
DFF.T3	   464	   470#
DFF.T5	   312#	   457	   462
DFF.T6	   315#	   475
DFF.T8	   443	   479#
DFF0	   321#
DFF1	   329#	   331
DFF2	   325	   337#
DFF3	   324	   333	   347#
DFF3A	   354#	   359
DFF4	   357	   363#
DFF4A	   370#	   376
DFF5	   374	   380#
DFF5A	   383#	   388
DFF6	   383	   392#
DFF7	   412#
DFF7A	   432	   437#
DFF7B	   444#	   484
DFFASC	    31#
DFFEDT	    24#
DFFMIN	    23#
DFFSIX	    30#
DFFVER	    22#
DFFWHO	    25#
DFN	    78#
DFN1	   115#	   132
DFN10	    86#
DFN2	   123	   130#
DFN3	   138#
DFN4	   143#	   152	   156
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNODFF	MAC	13-Oct-66 22:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

DFN5	   147	   162#
DFN6	   201#	   205
DFN7	   201	   211#
DFN9	    80	    83#
E1$51	   232#	   235#	   237#
E1$52	   262#	   264#
E1$53	   257#
E1$60	    87#
E1$61	    82#
E13$37	   101#
E13$38	    92#
E13$40	   118#
E13$67	   273#
E14$3	   578#
E15$	   596#
E8$1	   505#	   534#
E9$3	   425#
FAAFL	   173
FARGS	   163	   195	   293	   348	   366	   384	   548
FBLOK	   169	   269
FCODE	   177	   302
FEAFL	   173
FFLAGS	   175
FLABEL	   422
FLAP	   304	   407	   421	   474	   513	   517	   521	   523	   541	   572	   573	   606	   611
FLDC	   303
FNAME	   180	   352	   368	   454	   470	   518	   588	   612
FNARGS	   175	   280	   321	   542
FNCTRC	   447	   537
FNTMPS	   180	   283	   349	   365	   543
FRET	   495#
FRET1	   288	   290
FTDEBU	   412	   508
GCFLD	   172
GCOLF	   164
GROUND	   416	   507
I.FN	   243
IBEGIN	   448
IFBLOK	   188
IGNOP	    83	    84	   106	   120	   130	   168	   170	   179	   185	   189	   204	   211	   213	   308
	   322	   347	   351	   381	   392	   397	   442	   459
ILABEL	   561	   562
ILOC	   437	   438
INSTAL	   100	   121	   151
LOCAL	   252#
LOCVAL	   354	   370	   385	   519	   549
LSAVEI	   412	   508
LTFLAG	   431
NA	   320#	   321	   322	   323	   350	   367	   380	   383	   542	   544
NRET	   500#
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNODFF	MAC	13-Oct-66 22:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

NULLST	    79	   329	   330	   363	   364
P2	   113	   128	   163	   174	   176	   194	   202	   203	   214	   229	   240	   241	   242	   248
	   252	   281	   302	   303	   304	   321	   348	   349	   352	   365	   366	   368	   380	   384
	   388	   421	   422	   454	   470	   474	   517	   518	   541	   542	   543	   545	   548	   552
	   556	   588	   611	   612
PLINK	   295	   408	   512	   570	   575	   582
PPL	   412#	   412	   413	   508#	   508	   509
PPSA	   508
PSHSA	   412
PUSHTP	   415	   504
Q1	   414	   415
Q2	   120	   130	   131	   169	   170	   171	   173	   174	   175	   176	   177	   178	   179	   180
	   186	   211	   212	   213	   214	   352	   355	   356	   358	   368	   371	   372	   375	   384
	   386	   387	   518	   520	   522	   548	   550	   551
Q3	   187	   423
QLINK	   164	   188	   354	   370	   385	   519	   549
RET	   490#
RET.T1	   528	   588#
RET.T2	   531	   602#
RET.T3	   597	   604#
RET.T5	   529#	   591	   598
RET.T6	   532#	   616
RET2	   517#
RET3	   541#
RET3A	   547#	   552
RET3B	   548#	   556
RET3C	   547	   554#
RET4	   554	   561#
RET5	   568#
RETNUL	   215
RTMESS	   615
S.FRET	   495	   569	   608
S.NRET	   500
S.RET	   490	   574
S1	   138	   156	   162	   178	   224	   225	   226	   259	   287	   289	   292	   392	   393	   394
	   395	   422	   423	   424	   430	   442	   454	   455	   459	   460	   470	   471	   472	   479
	   490	   495	   500	   502	   568	   569	   574	   580	   581	   588	   589	   593	   612	   613
	   614
S2	    89	   185	   186	   266	   267	   268	   275	   280	   283	   284	   292	   293	   348	   358
	   359	   366	   367	   375	   376	   424	   426	   427	   434	   435	   437	   438	   455	   456
	   479	   480	   504	   510	   589	   590	   606	   609
S3	    90	   111	   140	   218	   219	   220	   221	   222	   224	   225	   268	   269	   272	   280
	   284	   285	   289	   349	   350	   351	   357	   365	   374	   426	   428	   430	   431	   607
	   608
SAVEI	   412	   412#	   413	   508	   509
SLINK	   446	   473	   537	   615
STACK	    78	    83	    84	   125	   126	   153	   154	   203	   204	   218	   221	   222	   226	   227
	   236	   239	   241	   258	   259	   263	   266	   294	   329	   330	   338	   339	   347	   355
	   356	   395	   400	   407	   408	   416	   471	   472	   507	   512	   513	   550	   551	   572
	   573	   581	   613	   614
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNODFF	MAC	13-Oct-66 22:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Symbol cross reference

STINIT	    86
STPTR	   116	   144
STRM	    91	   117	   148
SURF	   171	   172	   175	   177	   180	   187	   193	   194
SYSCT	    89
T1	   283	   285	   460	   461	   561	   562	   563	   564	   593	   594
T2	   320	   480	   594
T3	   363	   371	   397	   398	   543	   544	   545	   547	   554	   555
T4	   364	   372	   381	   386	   387	   399
TFBLOK	   272
TFCT	   461	   480
TFOLD	   275
TFRT	   594
TLINK	    81	    86	    91	   100	   117	   121	   148	   151	   231	   234	   256	   261	   481	   577
	   595
TRCALL	   481	   595
TRVAL	   434	   435
VAR	   580
VCTFL	   456
VFLAGS	   430	   455	   589
VFUNC	   186	   242	   267	   460	   479	   593
VLABEL	   424
VNAME	   423	   471	   472	   613	   614
VRTFL	   590
Y.CM	   111	   140
Y.LP	    90
Y.RP	   111
Z	    78	    79	   106	   126	   154	   162	   163	   168	   189	   193	   195	   201	   219	   220
	   229	   293	   294	   323	   324	   325	   331	   337	   338	   339	   398	   399	   400	   412
	   508	   520	   521	   522	   523
$FNCLV	   417	   445	   533	   536
$FTRC	   312	   468	   530	   602
$RTNTP	   502	   568	   607
$STNO	   564
$TRACE	   309	   527
SNODFF - User Defined Functions  %5(147)	MACRO %53B(1156)-1 21:49 14-Mar-88 Page 1
SNODFF	MAC	13-Oct-66 22:09		Gimpel--Ma355/JDS/DRH/MP/RCM/VB		15-Jun-76


Macro/Opdef cross reference

DFFPTX	    43
DFFTTL	    42
ERR	    92	   101	   118	   273	   505	   534	   578	   596
ERR%	   425
ERR.	    82	    87	   232	   235	   237	   257	   262	   264
ERROR	    92	   101	   118	   273	   505	   534	   578	   596
ERROR%	   425
ERROR.	    82	    87	   232	   235	   237	   257	   262	   264
MIDENT	   413	   509
MOVX	    90	   111	   140
POPSA	   508
PPADDR	   412#	   413	   508#	   509
PPINIT	   412	   508
PPLENG	   412#	   413	   508#	   509
PUSHSA	   412
SHOW.	    37	    38	    39	    40
TITLE.	    29   J(