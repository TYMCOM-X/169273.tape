PROCEDURE SCHEMA.ANAL     % BY DENNIS L. ALLEN %
BEGIN
FIELDS
        ACCESS.DATE             AS DATE 'ZD-MMM-YY',
        ALL.PAGES               AS '6ZN',
        ALT.DATE                AS DATE 'ZD-MMM-YY',
        BEG.POS                 AS '2N',
        COMPILE.FLAG            AS '1C',
        CREATION.DATE           AS DATE 'ZD-MMM-YY',
        END.POS                 AS '2N',
        FIELD.NAME              AS '30C',
        FIELD.PICTURE           AS '20C',
        FIELD.TYPE              AS '1C',
        INSTANCE.COUNT          AS '4ZN',
        MAGNUM.NAME             AS '30C',
        MAGNUM.TYPE             AS '9C',
        PAGE.COUNT              AS '4ZN',
        REC                     AS '80C',
        REFERENCE.FLAG          AS '1C',
        RELATION.NAME           AS '30C',
        REPORT.ID               AS '26C',
        REPORT.TITLE            AS '10C',
        REPORT.TYPE             AS '1C',
        SCHEMA.NAME             AS '30C',
        SCHEMA.NUMBER           AS '1C',
        TOT.PAGES               AS '6ZN',
        USERS.NAME              AS '12C',
        XEXEC.EXT               AS '3C',
        XEXEC.FIL               AS '6C',
        XEXEC.NAME              AS '10C'


SOURCE XEXEC.FILE FROM 'XEXEC.TMP' FIXED FORM
  INPUT XEXEC.FIL, @TAB 2, XEXEC.EXT, @TAB 3, PAGE.COUNT, @TAB 2,
        CREATION.DATE, @TAB 22, ACCESS.DATE, @CR

SOURCE DIRALL.FILE FROM 'DIRALL.TMP' FIXED FORM
  INPUT REC, @CR

SOURCE DIRSCH.FILE FROM 'DIRSCH.TMP' FIXED FORM
  INPUT REC, @CR

SOURCE RELSIZ.FILE FROM 'RELSIZ.TMP' FIXED FORM
  INPUT REC, @CR

SOURCE FLDFUL.FILE FROM 'FLDFUL.TMP' FIXED FORM
  INPUT REC, @CR

SOURCE RELFLD.FILE FROM 'RELFLD.TMP' FIXED FORM
  INPUT REC, @CR

SOURCE PROFLD.FILE FROM 'PROFLD.TMP' FIXED FORM
  INPUT REC, @CR

SOURCE PRODAT.FILE FROM 'PRODAT.TMP' FIXED FORM
  INPUT REC, @CR
%%
RELATION XEXEC.INFO IS
    KEY
        XEXEC.NAME
    DATA
        REFERENCE.FLAG,
        PAGE.COUNT,
        CREATION.DATE,
        ACCESS.DATE

RELATION DIRALL.INFO IS
    KEY
        MAGNUM.TYPE,
        MAGNUM.NAME
    DATA
        XEXEC.NAME,
        ALT.DATE

RELATION DIRSCH.INFO IS
    KEY
        SCHEMA.NUMBER
    DATA
        SCHEMA.NAME

RELATION RELSIZ.INFO IS
    KEY
        RELATION.NAME
    DATA
        INSTANCE.COUNT

RELATION FLDFUL.INFO IS
    KEY
        FIELD.NAME
    DATA
        FIELD.PICTURE,
        REFERENCE.FLAG
%%
FORMAT STANDARD.HEAD
       USERS.NAME,@TAB 19,'MAGNUM HASH DIRECTORY',@TAB TO 72,
         TODAY AS DATE 'ZD-MMM-YY',@CR,
       SCHEMA.NAME,@TAB TO 38,REPORT.TITLE,@TAB TO 74,'Page ',
         PAGE.NUM AS 'ZN',@CR,@CR

FORMAT STANDARD.HL1
       '  MAGNUM NAME',@TAB TO 36,'XEXEC NAME  CREATION   LAST  '

FORMAT STANDARD.HL2
       @TAB TO 50,'DATE    ACCESS '

FORMAT STANDARD.LINE
       COMPILE.FLAG,' ',MAGNUM.NAME,'   ',XEXEC.NAME,'   '

FORMAT COMMON.LINE
       STANDARD.LINE,CREATION.DATE AS DATE 'MMDDYY','   ',
         ACCESS.DATE AS DATE 'MMDDYY','  '

FORMAT RELATION.DECLARED
       STANDARD.LINE,'** DECLARED RELATION **',@CR

FORMAT RELATION.PRESENT
       COMMON.LINE,' ',INSTANCE.COUNT,'   ',PAGE.COUNT,@CR

FORMAT PROCEDURE.TEXT
       COMMON.LINE,ALT.DATE AS DATE 'MMDDYY','   ',PAGE.COUNT,@CR

FORMAT PROCEDURE.WO.TEXT
       COMMON.LINE,'NO TEXT  ',PAGE.COUNT,@CR

FORMAT TEXT.WO.PROCEDURE
       COMMON.LINE,'NO PROC  ',PAGE.COUNT,@CR

FORMAT FILE.LINE
       '  ',XEXEC.NAME,'   ',CREATION.DATE AS DATE 'MMDDYY','  ',
         ACCESS.DATE AS DATE 'MMDDYY','   ',PAGE.COUNT,@CR
%%
REPORT TO REPORT.ID
    PAGE.TOP @FF
    TOP.MARGIN 3
    HEADING.SIZE 6
    BOTTOM.MARGIN 3
    PAGE.HEADING
     BEGIN
      CONDITIONAL ON REPORT.TYPE
       BEGIN
        'B': LET REPORT.TITLE = '  BACKUP  '
        'F': LET REPORT.TITLE = '  FIELDS  '
        'O': LET REPORT.TITLE = '  FILES   '
        'P': LET REPORT.TITLE = 'PROCEDURES'
        'R': LET REPORT.TITLE = 'RELATIONS '
        'T': LET REPORT.TITLE = '  TEXTS   '
       END
      PRINT STANDARD.HEAD
      CONDITIONAL ON REPORT.TYPE
       BEGIN
        'B': PRINT STANDARD.HL1,' CURRENT   DISK',@CR,
                   STANDARD.HL2,'RELATION  PAGES',@CR
        'F': PRINT '  UNREFERENCED FIELD NAME',@TAB TO 35,'PICTURE',@CR,@CR
        'O': PRINT '  XEXEC NAME  CREATION  LAST     DISK',@CR,
                   '                DATE   ACCESS   PAGES',@CR
        'P': PRINT STANDARD.HL1,'  TEXT     DISK',@CR,
                   STANDARD.HL2,' CREATED  PAGES',@CR
        'R': PRINT STANDARD.HL1,'INSTANCE   DISK',@CR,
                   STANDARD.HL2,'  COUNT   PAGES',@CR
        'T': PRINT STANDARD.HL1,'  LAST     DISK',@CR,
                   STANDARD.HL2,' COMPILE  PAGES',@CR
       END
     END


% PHASE 1 - LOAD RELATIONS FROM .TMP FILES %

TYPE TO TERMINAL 'BEGIN DATA LOAD',@CR
MOVE DEFAULT TO REFERENCE.FLAG, MAGNUM.TYPE, MAGNUM.NAME, ALT.DATE
FOR EACH XEXEC.FILE
 IF XEXEC.EXT NE 'TMP' THEN
  BEGIN
   IF XEXEC.EXT NE DEFAULT THEN
    LET XEXEC.NAME = (TRIM(XEXEC.FIL)+'.'+TRIM(XEXEC.EXT))
   ELSE
    LET XEXEC.NAME = XEXEC.FIL
   INSERT INTO XEXEC.INFO
  END

FOR EACH DIRALL.FILE
 IF SUBSTR(REC,1,1) NE '"' AND SUBSTR(REC,1,2) NE ' U' THEN
  IF SUBSTR(REC,1,1) NE ' ' THEN
   BEGIN   % FIRST LINE OF THE PAIR  SAVE NAME AND TYPE %
    LET MAGNUM.NAME = SUBSTR(REC,1,POSITION(REC,' ',1))
    LET MAGNUM.TYPE = SUBSTR(REC,POSITION(REC,'-',1)+1)
    CONDITIONAL ON MAGNUM.TYPE
     BEGIN
      'RELATION': LET MAGNUM.TYPE = 'DUMMY'
      'SCHEMA':  LET MAGNUM.TYPE = 'DUMMY'
      'RELDECL': LET MAGNUM.TYPE = 'RELATION'
      'SCHDECL': LET MAGNUM.TYPE = 'DUMMY'
     END
   END
  ELSE
   BEGIN   % SECOND LINE OF THE PAIR INSERT TIME %
    IF SUBSTR(REC,11,2) EQ '__' THEN
     LET SUBSTR(REC,11,2) = 'MB'
    LET XEXEC.NAME = SUBSTR(REC,4,10)
    IF MAGNUM.TYPE NE 'DUMMY' THEN
     INSERT INTO DIRALL.INFO
   END

FOR EACH FLDFUL.FILE
 INSERT INTO FLDFUL.INFO USING
  (SUBSTR(REC,1,POSITION(REC,' ')) FOR FIELD.NAME,
   SUBSTR(REC,POSITION(REC,'as')+3) FOR FIELD.PICTURE)

FOR EACH PROFLD.FILE
 IF POSITION(REC,'uses') EQ 0 THEN
  SELECT FLDFUL.INFO VIA (FIELD.NAME = SUBSTR(REC,2)) THEN
   IF REFERENCE.FLAG NE 'Y' THEN
    ALTER FLDFUL.INFO USING ('Y' FOR REFERENCE.FLAG)
%%
FOR EACH RELSIZ.FILE
 BEGIN
  LET RELATION.NAME = SUBSTR(REC,1,POSITION(REC,' '))
  IF POSITION(REC,'-Declared') EQ 0 THEN
   BEGIN
    LET BEG.POS = POSITION(REC,':') + 2
    LET END.POS = POSITION(REC,' ',BEG.POS) - BEG.POS
    LET INSTANCE.COUNT = SUBSTR(REC,BEG.POS,END.POS) AS '4ZN'
   END
  ELSE
   LET INSTANCE.COUNT = 0
  INSERT INTO RELSIZ.INFO
 END

FOR EACH RELFLD.FILE
 IF SUBSTR(REC,1,2) EQ ' K' OR ' D' OR '  ' THEN
  SELECT FLDFUL.INFO VIA (FIELD.NAME = SUBSTR(REC,7)) THEN
   IF REFERENCE.FLAG NE 'Y' THEN
    ALTER FLDFUL.INFO USING ('Y' FOR REFERENCE.FLAG)

FOR EACH DIRSCH.FILE
 IF SUBSTR(REC,2,1) EQ ':' THEN
  INSERT INTO DIRSCH.INFO USING
   (SUBSTR(REC,1,1) FOR SCHEMA.NUMBER,
    SUBSTR(REC,4,POSITION(REC,' ',4)-4) FOR SCHEMA.NAME)

LET MAGNUM.TYPE = 'PROCEDURE'
FOR EACH PRODAT.FILE
 BEGIN
  IF SUBSTR(REC,1,1) NE ' ' THEN
   LET MAGNUM.NAME = SUBSTR(REC,1,POSITION(REC,' ')-1)
  IF POSITION(REC,'Date:') NE 0 THEN
   SELECT DIRALL.INFO VIA KEY THEN
    SELECT XEXEC.INFO VIA KEY THEN
     ALTER XEXEC.INFO USING
      (SUBSTR(REC,POSITION(REC,':')+2,11) AS DATE 'ZD-MMM-YYYY' FOR CREATION.DATE)
 END

LET USERS.NAME = SUBSTR(WHO,25)
IF USERS.NAME EQ DEFAULT THEN
 LET USERS.NAME = USER.NAME

GET.SCHEMA:  % SET UP SCHEMA NAME FROM LAST DIGIT IN FILE EXTENSION %
 FOR EACH DIRALL.INFO
  SELECT DIRSCH.INFO VIA (SCHEMA.NUMBER=SUBSTR(XEXEC.NAME,-1)) THEN
   BEGIN
    MOVE SCHEMA.NAME TO SCHEMA.NAME OF SCHEMA.ANAL
    LET REPORT.ID = '('+TRIM(USER.NAME)+')'+
            'SCHMA'+SCHEMA.NUMBER+'.RPT-A'
    FINISH GET.SCHEMA
   END
%%
FOR EACH DIRALL.INFO
 BEGIN
  SELECT XEXEC.INFO VIA KEY THEN
   ALTER XEXEC.INFO USING ('Y' FOR REFERENCE.FLAG)
  CONDITIONAL ON MAGNUM.TYPE
   BEGIN
    'PROCEDURE': LET FIELD.TYPE = 'E'
    'TEXT     ': LET FIELD.TYPE = 'P'
    'BACKUP   ': LET FIELD.TYPE = 'R'
   END
  ELSE
   LET FIELD.TYPE = DEFAULT
  IF FIELD.TYPE NE DEFAULT THEN
   BEGIN
    MOVE XEXEC.NAME TO XEXEC.NAME OF SCHEMA.ANAL
    MOVE FIELD.TYPE TO SUBSTR(XEXEC.NAME,9,1)
    SELECT XEXEC.INFO VIA KEY THEN
     MOVE CREATION.DATE TO ALT.DATE
    LET XEXEC.NAME = XEXEC.NAME OF SCHEMA.ANAL
    ALTER DIRALL.INFO
   END
 END

% PHASE 2 - GENERATE REPORTS %

TYPE TO TERMINAL 'BEGIN REPORT GENERATION',@CR
WRITE REPORT
 BEGIN
  LET TOT.PAGES = 0
  LET ALL.PAGES = 0
  FOR EACH DIRALL.INFO    %  HASH REPORT - TEXTS, RELATIONS, & PROCEDURES  %
   BEGIN
    LET INSTANCE.COUNT = 0
    IF MAGNUM.TYPE EQ 'RELATION' THEN
     SELECT RELSIZ.INFO VIA (RELATION.NAME = MAGNUM.NAME) THEN
      MOVE INSTANCE.COUNT TO INSTANCE.COUNT OF SCHEMA.ANAL
    LET REPORT.TYPE = MAGNUM.TYPE
    SELECT XEXEC.INFO VIA KEY THEN
     BEGIN
      ADD PAGE.COUNT TO TOT.PAGES,ALL.PAGES
      LET COMPILE.FLAG = ' '
      CONDITIONAL ON REPORT.TYPE
       BEGIN
        'P': BEGIN
              IF ALT.DATE GT CREATION.DATE THEN
               LET COMPILE.FLAG = '*'
              IF ALT.DATE NE DEFAULT THEN
               PRINT PROCEDURE.TEXT
              ELSE
               PRINT PROCEDURE.WO.TEXT
             END
        'R': PRINT RELATION.PRESENT
        'B': BEGIN
              IF ALT.DATE GT CREATION.DATE THEN
               LET COMPILE.FLAG = '*'
              PRINT PROCEDURE.TEXT
             END
        'T': BEGIN
              IF ALT.DATE NE DEFAULT THEN
               BEGIN
                IF ALT.DATE LT CREATION.DATE THEN
                 LET COMPILE.FLAG = '*'
                PRINT PROCEDURE.TEXT
               END
              ELSE
               PRINT TEXT.WO.PROCEDURE
             END
       END
     END
    ELSE
     IF REPORT.TYPE EQ 'R' THEN
      PRINT RELATION.DECLARED
    IF MAGNUM.TYPE CHANGING THEN
     BEGIN
      PRINT @CR,@TAB TO 56,'TOTAL DISK PAGES ',TOT.PAGES,PAGE.TOP
      LET TOT.PAGES = 0
     END
   END
%%
  LET REPORT.TYPE = 'F'   %  UNREFERENCED FIELDS REPORT  %
  PRINT PAGE.TOP
  FOR EACH FLDFUL.INFO
   IF REFERENCE.FLAG EQ DEFAULT THEN
    PRINT '  ',FIELD.NAME,@TAB TO 35,TRIM(FIELD.PICTURE),@CR

  LET REPORT.TYPE = 'O'    %  OTHER FILES REPORT  %
  PRINT PAGE.TOP
  FOR EACH XEXEC.INFO
   IF REFERENCE.FLAG EQ DEFAULT THEN
    BEGIN
     ADD PAGE.COUNT TO TOT.PAGES,ALL.PAGES
     PRINT FILE.LINE
    END
  PRINT @CR,@TAB TO 14,'TOTAL DISK PAGES ',TOT.PAGES,@CR,@CR,
        @TAB TO 6,'ACCOUNT TOTAL DISK PAGES ',ALL.PAGES,@CR
 END  % OF WRITE REPORT %

TYPE TO TERMINAL 'REPORT IN ',SUBSTR(REPORT.ID,1,POSITION(REPORT.ID,'-')-1),@CR

END
 