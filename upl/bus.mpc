PROCEDURE NEW.BUSINESS
BEGIN

FIELDS
    CODE           AS        '      1C',
    LINENO         AS        '      4N',
    CUSTNO         AS        '      6N',
    CUSTNO.CKSUM   AS        '     10N',
    SAL.TYP        AS        '      1C',
    INV.NO         AS        '      5N',
    B.T            AS        '      2N',
    I.Q            AS        '      8Z',
    I.N            AS        '   7-.NN',
    I.P            AS        '   7-.NN',
    INVOICE.SUM    AS        '   7-.NN',
    INVNO.CKSUM    AS        '     10N',
    INVGROSS.CKSUM AS        '  10-.NN',
    INVOICE.GROSS  AS        '   7-.NN',
    T.RATE         AS        '    N.4N',
    TERM.FLG       AS        '      1N',
    ERROR.FLG      AS        '      1N',
    ABORT.FLG      AS        '      1C',
    H1             AS        '      6C',
    H2             AS        '      5C',
    STATUS         AS        '      1C',
    I.GROSS        AS        '  10-.NN',
    I.DISC         AS        '  10-.NN',
    I.NET          AS        '  10-.NN',
    S.GROSS        AS        '  10-.NN',
    S.DISC         AS        '  10-.NN',
    S.NET          AS        '  10-.NN',
    IQA            AS        '     4ZB',
    IQD            AS        '     4ZB',
    BLA            AS        '     3-B',
    BLD            AS        '     3-B',
    IPA            AS        '   5Z.BB',
    IPD            AS        '   5Z.BB',
    IGA            AS        '   7Z.BB',
    IGD            AS        '   7Z.BB',
    SUM.IPA        AS        '   7Z.BB',
    SUM.IPD        AS        '   7Z.BB',
    SUM.IGA        AS        '   7Z.BB',
    SUM.IGD        AS        '   7Z.BB',
    NET.IP         AS        '   7-.BB',
    NET.IG         AS        '   7-.BB'

RELATION TEMP.STMTS IS
   KEY  CUST.NO, INVOICE.NO
   DATA SALESMAN.NO, EXEMPT, STATE, PO.NUM, NO.ITEMS

RELATION TEMP.ITEMS IS
   KEY  CUST.NO, INVOICE.NO, SALE.TYPE, INVT.ACCT, INVT.NO.2C
   DATA BILL.TERM, BILL.LEFT, ITEM.QTY, ITEM.NET, ITEM.PYMT

RELATION NEW.ITEMS IS
    KEY  CUST.NO, INVOICE.NO, SALE.TYPE, LINENO
    DATA ITEM.QTY, ITEM.GROSS, ITEM.DISC, ITEM.NET, ITEM.TAX, ITEM.TOTAL,
         ITEM.PYMT, INVT.ACCT, INVT.NO.2C, INVT.NO, SALESMAN.NO, STATE, EXEMPT

RELATION ADJ.ITEMS IS
    KEY  CUST.NO, INVOICE.NO, SALE.TYPE, INVT.ACCT, INVT.NO.2C, STATUS
    DATA BILL.TERM, BILL.LEFT, ITEM.QTY, ITEM.NET, ITEM.PYMT, SALESMAN.NO






SOURCE NEW.BUSINESS.FILE FROM '*' FREE FORM
    INPUT CODE,
    CONDITIONAL ON CODE
         BEGIN
         'A': CUST.NO, INVOICE.NO, PO.NUM, SALESMAN.NO, SOURCE.CODE,
              STATE, EXEMPT, QTY.DISC
         'C': CUST.NO, INVOICE.NO, PO.NUM, SALESMAN.NO, SOURCE.CODE,
              STATE, EXEMPT, QTY.DISC
         'D': CUST.NO, INVOICE.NO, SALE.TYPE
         'H': INVT.NO, ITEM.PRICE, SALE.TYPE, BILL.TERM, INVT.SERIAL
         'F': INVT.NO, ITEM.PRICE, SALE.TYPE, BILL.TERM, ITEM.QTY
         'V': INVT.NO, ITEM.PRICE, SALE.TYPE, BILL.TERM, ITEM.QTY
         'P': INVT.NO, ITEM.PRICE, SALE.TYPE, BILL.TERM, ITEM.QTY
         'M': INVT.NO, ITEM.PRICE, SALE.TYPE, BILL.TERM, ITEM.QTY
         'T': INVOICE.GROSS
         END

SOURCE CUSTNO.TRUNCATED FROM 'CUSTNO.TMP' FIXED FORM
    INPUT @TAB 2, CUSTNO, INVOICE.NO






FORMAT FMT0   CUST.NO, " AT LINE ", LINENO
FORMAT FMT1   FMT0, "   NEW BUSINESS REFERENCES NON-EXISTENT CUST.NO", @CR
FORMAT FMT2   FMT0, "   TERMINATION CODE MISSING", @CR
FORMAT FMT3   FMT0, "   MAY NOT ADD NEW BUSINESS TO EXISTING INVOICE.NO", @CR
FORMAT FMT4   FMT0, "   CONTAINS INVALID STATE CODE : ", STATE, @CR
FORMAT FMT5   FMT0, "   TERMINATION CODE OUT OF SEQUENCE", @CR
FORMAT FMT6   FMT0, "   DOES NOT BALANCE.  INVOICE.SUM = ", INVOICE.SUM, @CR
FORMAT FMT7   FMT0, "   BILL.TERM IS INCONSISTENT AMONG SEVERAL ITEMS", @CR
FORMAT FMT8   @SKIP 5, "DUE TO ABOVE ERRORS, NEW BUSINESS HAS NOT BEEN ADDED",
              @CR, "ENTIRE REQUEST MUST BE RESUBMITTED", @SKIP 5
FORMAT FMT9   @SKIP 5, "THE NEW BUSINESS HAS BEEN ACCEPTED WITHOUT INTERNAL",
              @CR, "ERROR.  HOWEVER, IF THERE HAVE BEEN ANY 'INVALID CODE'",
              @CR, "ERRORS DETECTED, THE CORRESPONDING DELETE REQUESTS",
              @CR, "SHOULD BE RESUBMITTED", @SKIP 3,
              "CHECK-SUM VALUES:", @CR,
              "   CUST.NO    :", CUSTNO.CKSUM, @CR,
              "   INVOICE.NO :", INVNO.CKSUM, @CR,
              "   T-TOTALS   :", INVGROSS.CKSUM, @CR, @SKIP 5
FORMAT FMTA   @TAB TO 24, "-----   ----------   ----------   ----------", @CR
FORMAT FMTB   @TAB TO 24, "=====   ==========   ==========   ==========", @CR






REPORT TRUNCATE.CUSTNO TO 'CUSTNO.TMP-A'
    PAGE.SIZE  0






REPORT INVOICE.REGISTER TO 'INVOIC.REG-A'
    PAGE.SIZE  0

    REPORT.HEADING PRINT
         @SKIP 2, TODAY AS DATE 'MM/DD/YY',
         "  INVOICE REGISTER OF ACCEPTED STATEMENTS", @SKIP 2,
         " CUST.NO INVOIC#  INV.GROSS  -  DISCOUNT  =   INV.NET + ",
         " SALES.TAX == INV.TOTAL", " ::      MO.PYMT", @SKIP 1

    GROUP.FOOTING ON SALE.TYPE
         PRINT
         CUST.NO, " ", INVOICE.NO, "-", SALE.TYPE,
         SUM(ITEM.GROSS) AS ' 8-.NN',  SUM(ITEM.DISC ) AS '10-.NN',
         SUM(ITEM.NET  ) AS '10-.NN',  SUM(ITEM.TAX  ) AS '10-.NN',
         SUM(ITEM.TOTAL) AS '10-.NN', " ::", SUM(ITEM.PYMT ) AS '10-.NN', @CR

    REPORT.FOOTING PRINT
         @TAB TO 18, "----------   ----------   ----------   ----------",
         "   ----------      ----------", @SKIP 1, @TAB TO 17,
         SUM(ITEM.GROSS) AS ' 8-.NN',  SUM(ITEM.DISC ) AS '10-.NN',
         SUM(ITEM.NET  ) AS '10-.NN',  SUM(ITEM.TAX  ) AS '10-.NN',
         SUM(ITEM.TOTAL) AS '10-.NN', " ::", SUM(ITEM.PYMT ) AS '10-.NN', @CR






REPORT EXEMPT.REGISTER TO 'INVOIC.XMT-A'
    PAGE.SIZE  0

    REPORT.HEADING
         BEGIN
         MOVE 0 TO S.GROSS, S.DISC, S.NET
         PRINT
         @SKIP 2, TODAY AS DATE 'MM/DD/YY',
         "  INVOICE REGISTER OF EXEMPTED STATEMENTS", @SKIP 2,
         "INVOICE CODES :", @CR,
         "  1 = GOV'T EXEMPT", @CR,
         "  2 = FOREIGN EXEMPT", @CR,
         "  3 = OTHER EXEMPT", @SKIP 2,
         "STATE XMT     CUST.NO INVOIC#     INV.GROSS  -  DISCOUNT  =   ",
         "INV.NET", @SKIP 1
         END

    GROUP.FOOTING ON SALE.TYPE
         IF EXEMPT GE 1
              THEN BEGIN
                   MOVE SUM(ITEM.GROSS) TO I.GROSS
                   MOVE SUM(ITEM.DISC ) TO I.DISC
                   MOVE SUM(ITEM.NET  ) TO I.NET
                   ADD  I.GROSS TO S.GROSS
                   ADD  I.DISC  TO S.DISC
                   ADD  I.NET   TO S.NET
                   PRINT "  ", STATE, "   ", EXEMPT, "     ", CUST.NO, " ",
                   INVOICE.NO, "-", SALE.TYPE, " ",
                   I.GROSS, I.DISC, I.NET, @CR
                   END

    REPORT.FOOTING PRINT
         @TAB TO 34, "----------   ----------   ----------", @SKIP 1,
         @TAB TO 31, S.GROSS, S.DISC, S.NET, @CR






REPORT INVENTORY.REVENUE TO 'INVENT.RPT-A'
    PAGE.SIZE  0

    REPORT.HEADING PRINT
         @SKIP 2, TODAY AS DATE 'MM/DD/YY', "  INVENTORY/REVENUE REPORT", @SKIP 2

    GROUP.HEADING ON SALE.TYPE
         BEGIN
         IF SALE.TYPE EQ 'C'  THEN LET H1 = 'CASH'    ELSE
         IF SALE.TYPE EQ 'L'  THEN LET H1 = 'LEASE'   ELSE
         IF SALE.TYPE EQ 'R'  THEN LET H1 = 'RENTAL'  ELSE
         IF SALE.TYPE EQ 'X'  THEN LET H1 = 'OTHER'
         PRINT TRIM(H1), " SALES:", @SKIP 2
         END

    GROUP.HEADING ON INVT.ACCT
         BEGIN
         IF INVT.ACCT EQ 015  THEN LET H2 = 'HRDWR'  ELSE
         IF INVT.ACCT EQ 016  THEN LET H2 = 'FILMS'  ELSE
         IF INVT.ACCT EQ 017  THEN LET H2 = 'VIDEO'  ELSE
         IF INVT.ACCT EQ 130  THEN LET H2 = 'PARTS'  ELSE
         IF INVT.ACCT EQ 160  THEN LET H2 = 'MISC '
         PRINT @TAB TO 7, TRIM(H2), ":", @TAB TO 24,
              "UNITS  GROSS.SALES  -  QTY.DISC =  NET.SALES", @SKIP 1
         END

    GROUP.HEADING ON INVT.NO.2C
         PRINT @TAB TO 12, INVT.NO.2C, @CR

    GROUP.FOOTING ON INVT.NO
         PRINT @TAB TO 17, INVT.NO, @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @CR

    GROUP.FOOTING ON INVT.NO.2C
         PRINT FMTA, @TAB TO 12, INVT.NO.2C, "00 TOTAL:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 1

    GROUP.FOOTING ON INVT.ACCT
         PRINT FMTB, @TAB TO 7, TRIM(H2), " TOTAL:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 3

    GROUP.FOOTING ON SALE.TYPE
         PRINT FMTB, TRIM(H1), " SALES TOTAL:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 5

    REPORT.FOOTING
         PRINT FMTB, " TOTAL SALES:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 5






REPORT SALESMAN.REVENUE TO 'SALES.RPT-A'
    PAGE.SIZE  0

    REPORT.HEADING PRINT
         @SKIP 2, TODAY AS DATE 'MM/DD/YY', "  SALESMAN/REVENUE REPORT", @SKIP 2

    GROUP.HEADING ON SALESMAN.NO
         SELECT SALESMEN VIA KEY
              THEN PRINT "SALESMAN: ", SALESMAN.NO, "-", SALESMAN.NAME, @SKIP 2
              ELSE PRINT "SALESMAN: ", SALESMAN.NO, "-UNKNOWN", @SKIP 2

    GROUP.HEADING ON SALE.TYPE
         BEGIN
         IF SALE.TYPE EQ 'C'  THEN LET H1 = 'CASH'    ELSE
         IF SALE.TYPE EQ 'L'  THEN LET H1 = 'LEASE'   ELSE
         IF SALE.TYPE EQ 'R'  THEN LET H1 = 'RENTAL'  ELSE
         IF SALE.TYPE EQ 'X'  THEN LET H1 = 'OTHER'
         PRINT TRIM(H1), " SALES:", @SKIP 2
         END

    GROUP.HEADING ON INVT.ACCT
         BEGIN
         IF INVT.ACCT EQ 015  THEN LET H2 = 'HRDWR'  ELSE
         IF INVT.ACCT EQ 016  THEN LET H2 = 'FILMS'  ELSE
         IF INVT.ACCT EQ 017  THEN LET H2 = 'VIDEO'  ELSE
         IF INVT.ACCT EQ 130  THEN LET H2 = 'PARTS'  ELSE
         IF INVT.ACCT EQ 160  THEN LET H2 = 'MISC '
         PRINT @TAB TO 7, TRIM(H2), ":", @TAB TO 24,
              "UNITS  GROSS.SALES  -  QTY.DISC =  NET.SALES", @SKIP 1
         END

    GROUP.FOOTING ON INVT.NO.2C
         PRINT @TAB TO 12, INVT.NO.2C, "00 TOTAL:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 1

    GROUP.FOOTING ON INVT.ACCT
         PRINT FMTB, @TAB TO 6, TRIM(H2), " TOTAL:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 3

    GROUP.FOOTING ON SALE.TYPE
         PRINT FMTB, TRIM(H1), " SALES TOTAL:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 5

    GROUP.FOOTING ON SALESMAN.NO
         PRINT FMTB, "SALESMAN ", SALESMAN.NO, " TOTAL:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 5

    REPORT.FOOTING
         PRINT FMTB, " TOTAL SALES:", @TAB TO 23,
              SUM(ITEM.QTY  ) AS '    6Z', SUM(ITEM.GROSS) AS '10-.NN',
              SUM(ITEM.DISC ) AS '10-.NN', SUM(ITEM.NET  ) AS '10-.NN', @SKIP 5






REPORT INVOICE.ADJUSTMENTS TO 'INVOIC.ADJ-A'
    PAGE.SIZE  0

    REPORT.HEADING PRINT
         @SKIP 2, TODAY AS DATE 'MM/DD/YY', "  ADJUSTMENTS REGISTER", @SKIP 2,
         @TAB TO 31, "******* ADDITIONS *******  ******* DELETIONS *******",
         @CR, " CUST.NO INVC#-SM-T ACCT-CAT  QTY: MO*PAYMENT =   GROSS",
         "  QTY: MO*PAYMENT =   GROSS", @SKIP 1

    GROUP.HEADING ON INVT.NO.2C
         MOVE 0 TO IQA, BLA, IPA, IGA, IQD, BLD, IPD, IGD

    GROUP.FOOTING ON INVT.NO.2C
         PRINT
         CUST.NO, " ", INVOICE.NO, "-", SALESMAN.NO, "-", SALE.TYPE, "  ",
         INVT.ACCT, "-", INVT.NO.2C, " ", IQA, BLA, IPA, IGA, IQD, BLD,
         IPD, IGD, @CR

    REPORT.FOOTING
         BEGIN
         LET NET.IP = SUM.IPA - SUM.IPD
         LET NET.IG = SUM.IGA - SUM.IGD
         PRINT
         @TAB TO 35, "--------  --------         --------  --------", @CR,
         @TAB TO 33, SUM.IPA, SUM.IGA, @TAB TO 60, SUM.IPD, SUM.IGD, @SKIP 1,
         @TAB TO 35, "========  ========", @CR,
         @TAB 17, "NET ADDITIONS :", NET.IP, NET.IG, @SKIP 3,
         "NEITHER 'SUMS' NOR 'NETS' INCLUDE AMOUNTS FROM STATEMENTS", @CR,
         "WITH ZERO(0) BILLING REMAINING", @SKIP 5
         END







FOR EACH STATEMENTS
    INSERT INTO TEMP.STMTS
FOR EACH ITEMS
    INSERT INTO TEMP.ITEMS

TYPE "IS THIS MERELY A CHECKSUM DATA RUN (Y OR N) ? "
ACCEPT      ABORT.FLG

MOVE 0   TO TERM.FLG, CUSTNO.CKSUM, INVNO.CKSUM, INVGROSS.CKSUM, LINENO
MOVE 1   TO ERROR.FLG

FOR EACH NEW.BUSINESS.FILE WRITE REPORT TRUNCATE.CUSTNO
L1: BEGIN
    ADD 1 TO LINENO
    IF CODE EQ 'A' OR 'C' OR 'D'
         THEN BEGIN
              PRINT TO TRUNCATE.CUSTNO  CUST.NO, INVOICE.NO, @CR
              MOVE 0 TO NO.ITEMS, INVOICE.SUM
              IF TERM.FLG EQ 1
                   THEN BEGIN
                        LET ERROR.FLG = 1
                        TYPE FMT2
                        FINISH L1
                        END
              IF CODE EQ 'A' OR 'C'  THEN LET TERM.FLG = 1
              SELECT CUSTOMERS VIA KEY
                   THEN LET ERROR.FLG = 0
                   ELSE BEGIN
                        LET ERROR.FLG = 1
                        TYPE FMT1
                        FINISH L1
                        END
              IF CODE EQ 'C' OR 'D'
                   THEN BEGIN
                        MOVE 'D' TO STATUS
                        MOVE INVOICE.NO TO INV.NO
                        IF CODE EQ 'C'
                             THEN MOVE " "       TO SAL.TYP
                             ELSE MOVE SALE.TYPE TO SAL.TYP
                        FOR EACH STATEMENTS VIA CUST.NO
                             BEGIN
                             IF INV.NO EQ INVOICE.NO OR 0
                                  THEN FOR EACH ITEMS VIA (CUST.NO, INVOICE.NO)
                                            IF SAL.TYP EQ SALE.TYPE OR " "
                                                 THEN BEGIN
                                                      INSERT INTO ADJ.ITEMS
                                                      DELETE FROM ITEMS VIA KEY
                                                      SUBTRACT 1 FROM NO.ITEMS
                                                      END
                             IF NO.ITEMS EQ 0
                                  THEN DELETE FROM STATEMENTS VIA KEY
                                  ELSE ALTER STATEMENTS
                             END
                        IF CODE EQ 'D'  THEN FINISH L1
                        END
              IF CODE EQ 'A' OR 'C'
                   THEN BEGIN
                        MOVE CODE TO STATUS
                        IF CODE EQ 'A'
                             THEN SELECT STATEMENTS VIA KEY
                                       THEN BEGIN
                                            LET ERROR.FLG = 1
                                            TYPE FMT3
                                            FINISH L1
                                            END
                        IF EXEMPT LE 1
                             THEN SELECT TAXES VIA KEY
                                       THEN MOVE TAX.RATE TO T.RATE
                                       ELSE BEGIN
                                            LET ERROR.FLG = 1
                                            TYPE FMT4
                                            FINISH L1
                                            END
                        FINISH L1
                        END
              END
         ELSE
    IF CODE EQ 'T'
         THEN BEGIN
              ADD INVOICE.GROSS TO INVGROSS.CKSUM
              IF TERM.FLG EQ 0
                   THEN BEGIN
                        LET ERROR.FLG = 1
                        TYPE FMT5
                        END
                   ELSE MOVE 0 TO TERM.FLG
              IF INVOICE.SUM NE INVOICE.GROSS
                   THEN BEGIN
                        LET ERROR.FLG = 1
                        TYPE FMT6
                        END
              IF ERROR.FLG EQ 1
                   THEN LET ABORT.FLG = 'A'
                   ELSE INSERT INTO STATEMENTS
              FINISH L1
              END
         ELSE
    IF CODE EQ 'H'
         THEN BEGIN
              MOVE 1   TO ITEM.QTY
              MOVE 015 TO INVT.ACCT
              END
         ELSE
    IF CODE EQ 'F'  THEN MOVE 016 TO INVT.ACCT  ELSE
    IF CODE EQ 'V'  THEN MOVE 017 TO INVT.ACCT  ELSE
    IF CODE EQ 'P'  THEN MOVE 130 TO INVT.ACCT  ELSE
    IF CODE EQ 'M'  THEN MOVE 160 TO INVT.ACCT
                    ELSE MOVE 016 TO INVT.ACCT

    IF  (SALE.TYPE NE 'C')
    AND (SALE.TYPE NE 'L')
    AND (SALE.TYPE NE 'R')
    AND (SALE.TYPE NE 'X')
    THEN LET SALE.TYPE = 'X'

    IF BILL.TERM EQ 0  THEN LET BILL.TERM = 1
    LET BILL.LEFT = BILL.TERM
    MOVE INVT.NO    AS '4C' TO INVT.NO.4C
    MOVE INVT.NO.4C AS '2C' TO INVT.NO.2C
    LET ITEM.GROSS = ITEM.PRICE*BILL.TERM
    IF INVT.ACCT EQ 130
         THEN LET ITEM.DISC = 0.00
         ELSE LET ITEM.DISC = ITEM.GROSS*QTY.DISC
    LET ITEM.NET   = ITEM.GROSS - ITEM.DISC
    LET ITEM.PYMT  = ITEM.NET   / BILL.TERM
    IF EXEMPT EQ 0
         THEN LET ITEM.TAX = ITEM.NET * T.RATE
         ELSE LET ITEM.TAX = 0
    LET ITEM.TOTAL = ITEM.NET   + ITEM.TAX
    ADD ITEM.PRICE TO INVOICE.SUM

    MOVE BILL.TERM TO BILL.LEFT
    MOVE BILL.TERM TO B.T
    MOVE ITEM.QTY  TO I.Q
    MOVE ITEM.NET  TO I.N
    MOVE ITEM.PYMT TO I.P IF STATUS EQ 'A'
         THEN INSERT INTO NEW.ITEMS
         ELSE SELECT ADJ.ITEMS VIA KEY
                   THEN BEGIN
                        ADD I.Q TO ITEM.QTY
                        ADD I.N TO ITEM.NET
                        ADD I.P TO ITEM.PYMT
                        ALTER ADJ.ITEMS
                        END
                   ELSE INSERT INTO ADJ.ITEMS
    SELECT ITEMS VIA KEY
         THEN BEGIN
              IF B.T NE BILL.TERM
                   THEN BEGIN
                        MOVE 1 TO ERROR.FLG
                        TYPE FMT7
                        FINISH L1
                        END
              ADD I.Q TO ITEM.QTY
              ADD I.N TO ITEM.NET
              ADD I.P TO ITEM.PYMT
              ALTER ITEMS
              END
         ELSE BEGIN
              ADD 1 TO NO.ITEMS
              INSERT INTO ITEMS
              END
    END

IF ABORT.FLG EQ 'Y' OR 'A'
    THEN BEGIN
         DELETE FROM STATEMENTS ALL
         DELETE FROM ITEMS      ALL
         FOR EACH TEMP.STMTS
              INSERT INTO STATEMENTS
         FOR EACH TEMP.ITEMS
              INSERT INTO ITEMS
         IF ABORT.FLG EQ 'A'  THEN TYPE FMT8
         END
    ELSE BEGIN
         FOR EACH NEW.ITEMS
              WRITE REPORT INVOICE.REGISTER
              NOTHING
         FOR EACH NEW.ITEMS
              SORTED ON STATE, EXEMPT, CUST.NO, INVOICE.NO, SALE.TYPE
              WRITE REPORT EXEMPT.REGISTER
              NOTHING
         FOR EACH NEW.ITEMS
              SORTED ON SALE.TYPE, INVT.ACCT, INVT.NO.2C, INVT.NO
              WRITE REPORT INVENTORY.REVENUE
              NOTHING
         FOR EACH NEW.ITEMS
              SORTED ON SALESMAN.NO, SALE.TYPE, INVT.ACCT, INVT.NO.2C
              WRITE REPORT SALESMAN.REVENUE
         MOVE 0 TO SUM.IPA, SUM.IGA, SUM.IPD, SUM.IGD
         FOR EACH ADJ.ITEMS
              WRITE REPORT INVOICE.ADJUSTMENTS
              BEGIN
              IF STATUS EQ 'C'
                   THEN BEGIN
                        MOVE ITEM.QTY  TO IQA
                        MOVE BILL.LEFT TO BLA
                        MOVE ITEM.PYMT TO IPA
                        IF BILL.LEFT GT 0  THEN
                        MOVE ITEM.NET - ITEM.PYMT*(BILL.TERM-BILL.LEFT) TO IGA
                        END
                   ELSE BEGIN
                        MOVE ITEM.QTY  TO IQD
                        MOVE BILL.LEFT TO BLD
                        MOVE ITEM.PYMT TO IPD
                        IF BILL.LEFT GT 0  THEN
                        MOVE ITEM.NET - ITEM.PYMT*(BILL.TERM-BILL.LEFT) TO IGD
                        END
              IF BILL.LEFT GT 0
                   THEN BEGIN
                        ADD IPA TO SUM.IPA
                        ADD IGA TO SUM.IGA
                        ADD IPD TO SUM.IPD
                        ADD IGD TO SUM.IGD
                        END
              END

         FOR EACH CUSTNO.TRUNCATED
              BEGIN
              ADD CUSTNO     TO CUSTNO.CKSUM
              ADD INVOICE.NO TO INVNO.CKSUM
              END
         TYPE FMT9
         END

END
  gt}<,