
Functional specifications for REMIND system
Version 1.00    September 22, 1975

General description:

The REMIND system allows the user to 
        . have reminders typed on every login until cancelled
                manually by the user
        . have reminders typed according to a user entered date
                expression.  According to the expression, cancellation
                may or may not automatically occur.
        . have reminders stored in different "FILES" (which
                are kept in the "DSK:REMIND.DAT" data base),
                listable by user typed commands to REMIND

The REMIND system consists of two (2) programs,

        REMIND  maintains data base "DSK:REMIND.DAT" which contains
                all reminders and dates
        REMINI  Prepares INITIALIZATION program which, when run,
                will type out all reminders and dates which are
                found in "DSK:REMIND.DAT"

Description of REMINI:

The program "(SYS)REMINI" will prepare an INITIALIZATION program
which, when run, will read "DSK:REMIND.DAT" and type out all
(1) REMINDERS, and (2) DATES which are true using the current date
and time.

When first run, REMINI is in INITIALIZATION mode.  It will first ask

        REMINI - Version nn.mm

        Sets up a program to check and report on REMIND data base

        Do you want to run another program after REMINI? <YES or NO>
        ------------------------------------------------

Respond with "YES" if another program is to be run when REMINI
completes a run, or "NO" if REMINI should exit back to the monitor.
If the user responds with "YES", the following two questions will
be asked:

        User file belongs to (or CR if none): <user name>
        -------------------------------------

        File name: <file name>
        ----------

Where: <user name>::= The name of the user the file resides in
                        or a Carriage Return if its in the login
                        directory.
       <file name>::= The name of the file to run WITHOUT an extension

At this point, or if the user responded with "NO" to the first
question, REMINI will type out:

        Initialization done - give SAVE or SSAVE command

        EXIT

At this point, REMINI has initialized itself and is ready to be
saved as an INIT file.  The user should issue the monitor "SAVE"
command to save the new INIT program.  Normally, this INIT program
is the user's initialization program or part of a chain of 
initialization programs.  For details on how to set up an INIT
program on login, see the Tymshare documentation on "NONAME".

Example:

The user wants to set up an init program called "INIT" which
runs and then executes the program "INIT2" in the login directory.

        -R REMINI

        REMINI - Version 1.00

        Sets up a program to check and report on REMIND data base

        Do you want to run another program after REMINI? YES

                User file belongs to (or CR if none): 
                File name: INIT2

        Initialization done - give SAVE or SSAVE command

        EXIT

        -SAVE INIT
        JOB SAVED


Description of REMIND:

When called, REMIND will prompt with the standard front end
command level prompt.  All standard front end commands (HELP,
VERSION, CREDITS, etc) can be given.  In addition, HELP may
be given anywhere.  A list of valid options in place of HELP
are then listed.

There are two types of information which the REMIND system
handles, "REMINDERS" and "DATES".  REMINDERS are simply one line
reminders which have no date restrictions attached.  They are
always typed when REMINI is executed.  DATES are one line reminders
which have a "DATE EXPRESSION" attached.  The date expression 
is similar to that of "PERP" in that any number of different 
conditions can be specified for typing out the reminder.

Description of REMIND commands:

. INSERT REMINDER
  or
. ADD REMINDER

  This command enters a "REMINDER" into the "DSK:REMIND.DAT" data
  base.  It will prompt with:

        Reminder: <text>
        ---------

  <text> is the text of the reminder and may contain any printable
  characters.  The maximum length of the reminder is 60 characters.

  When REMINI is run, reminders entered in this way will be typed
  out always.  Each reminder typed is preceeded by it's number.
  The only way to remove a reminder of this type is via the "DELETE
  REMINDER" command.

  Each reminder is assigned a number.  This number is useful only
  when deleting a reminder (See "DELETE REMINDER" below).  These
  numbers may be gotten either from REMINI output or from "LIST
  REMINDERS".

. INSERT REMINDER <file name>
  or
. ADD REMINDER <file name>

  This command is identical to INSERT!ADD REMINDER except that the
  reminder entered goes into a "Sub-file" of the "DSK:REMIND.DAT" file
  with the name <file name>.  A "Sub-file" is created via "ADD FILE"
  and deleted via "DELETE FILE".  The only way to examine a "Sub-file"
  is via the "LIST REMINDER <file name>" command, which lists out all
  REMINDERS on the specified file.

. INSERT DATE
  or
. ADD DATE

  This command enters a "DATE" into the "DSK:REMIND.DAT" data base.
  It will prompt with the following:

        Date: <date>
        -----
        Time: <time>
        -----
        Days warning: <daywarn>
        -------------
        Text: <Text of DATE>
        -----

  <date> is a valid DATE expression as detailed at the end of this
  document.

  <time> is the time of day this date occurs on. A CR assumes 0000 hours.

  <daywarn> is the number of days in advance that this date will be
        typed out (normally, the date is typed out only when it
        occurs)

  <Text of DATE> is up to 60 characters of REMINDER that will be typed
        out when this date occurs.

  Dates will be removed from the "DSK:REMIND.DAT" data base as soon
  as one day has passed since a date will occur last.

. INSERT FILE
  or
. ADD FILE

  This command enters a "Sub-file" (See "INSERT!ADD REMINDER <file name>)
  into the "DSK:REMIND.DAT" data base.  It will prompt with:

        Name: <file name, up to 29 characters long>
        -----

  Once this is done, <file name> may be used in "INSERT!ADD REMINDER",
  "LIST REMINDER", "DELETE REMINDER" or "DELETE FILE" commands.  It will
  also appear in the "LIST FILES" command.

. DELETE DATE

  This command deletes a DATE from the data base.  It will prompt with:

        Number: <date number>
        -------

  <date number> is the number of the date (as typed by "LIST ALL DATES"
        or REMINI output)

. DELETE REMINDER

  This command deletes a REMINDER from the data base.  It will prompt with:

        Number: <reminder number>
        -------

  <reminder number> is the number of the reminder

. DELETE REMINDER <file name>

  This command deletes a REMINDER from Sub-file <file name> of the
  data base.  It will prompt with:

        Number: <reminder number>
        -------

  <reminder number> is the number of the reminder (as typed by "LIST FILE")

. DELETE FILE

  This command deletes a Sub-file from the data base.  It will prompt with:

        Name: <file name>
        -----

. LIST DATE

  This command will perform a DATE scan of the data base (such as
  done by REMINI) and type out all dates which are true given a specific
  date.  The command will prompt with:

        DATE: <date>
        -----

. LIST REMINDER

  This command will list all reminders in the data base.
  Each reminder will be preceeded by it's number.

. LIST REMINDER <file name>

  This command will list all reminders in the Sub-file <file name> in
  the data base.

. LIST FILES

  This command will list all Sub-file names currently defined.

. LIST INDIVIDUAL DATE

  This command will list a given DATE.  It will prompt with:

        Number: <date number>
        -------

  <date number> is from the "LIST ALL DATES", "ADD DATE" or REMINI
  output.

. LIST ALL DATES

  This command will list all dates in the data base.  Each date will
  be preceeded by it's number.

. LIST ALL FILES

  This is identical to LIST FILES.

. NEXT

  This command is equivalent to:

        LIST DATE
        Date: TODAY.

  It will do a DATE scan using TODAY as the date.

. CHANGE FILE

  This command will change the name of a Sub-file.  It will prompt:

        Old name: <old file name>
        ---------
        New name: <new file name>
        ---------

. CHANGE REMINDER

  This command will change a reminder.  It will prompt:

        Number: <reminder number to change>
        -------
        Reminder: <new text for reminder>
        ---------

. CHANGE DATE

  This command will change a date.  It will prompt:

        Number: <date number>
        -------

  It will then prompt:

        Change date also? <Yes or NO>
        -----------------

  If "YES", you will be prompted with:

        Date: <date>
        -----

  Then, if "YES" or "NO", you will be asked:

        Time: <time of day>
        -----
        Days warning: <daywarn>
        -------------
        Text: <text of date>
        -----

. CANCEL

  This command will cancel a given date UNTIL one day after it's
  next occurance.  It will prompt with:

        Number: <date number>
        -------

  The date will automatically be uncancelled one day after it's
  cancellation date.

. UNCANCEL

  This command will remove a cancellation date as imposed by the CANCEL
  command.  It will prompt with:

        Number: <date number>
        -------

. DISPLAY

  This command will take a date expression and type out what REMIND
  thinks your date expression is.  It will prompt with:

        Date: <date>
        -----

. TEST

  This command does a DISPLAY followed by future dates which a
  DATE will be.  It will prompt with:

        Date: <date>
        -----

  Note: To stop output of dates (for something like  EVERY FRIDAY)
  type either a shift-control-L ("FS") or control-o to stop tty
  output, or type an altmode/escape.


BNF for <DATE>:

notes:
1) Typing a carriage-return as the first character of a date expression
   assumes the last date expression typed to a "Date:" prompt.  So,
   if a DISPLAY command gives a date back which agrees with what you
   want, to enter the date in ADD DATE simply type a carriage return to
   the "Date:" prompt.
2) Typing #<integer> will assume the date that is contained in date
   number <integer> in the data base.



<date expression> ::= <date list> .

<date list> ::= <ranged date specification> |
                <date list> OR <ranged date specification>

<date specification> ::= <dow's> |
                         <dow's> <month of year> |
                         <day of month> <month of year> |
                         <month of year> |
                         <days> |
                         <day of month> <months> |
                         <months> |
                         <date> |
               <before-or-after clause> <date specification>

<ranged date specification> ::=
                        <domain> <date specification> <except> |
                        <domain> <between> <date specification> <except>

<except> ::= <null> |
             EXCEPT <date specification> |
             <except> OR <date specification>

<domain> ::= <null> |
             <starting> |
             <starting> <until> |
             <starting> <until> <reference> |
             <until> <reference> |
             <until> |
             <reference>

<dow's> ::= <dow> |
            <number> <dow>

<day of month> ::= <days> |
                   <end of month> |
                   LAST <dow>

<end of month> ::= END
                   LAST DAYS

<days> ::= DAYS |
           <number> DAYS


<months> ::= MONTHS |
             <number> MONTHS

<date> ::= TODAY |
           TOMORROW |
           YESTERDAY |
           <day of month> |
           <day of month> <year> |
           ( <date> )

<day of month> ::= <number<=31> <month of year> |
                   <month of year> <number<=31>

<before-or-after clause> ::= <displ> BEFORE |
                             <displ> AFTER

<displ> ::= <days> |
            <dow's>

<between> ::= 

BETWEEN <date specification> AND <date specification>

<until> ::= <until clause> |
            <date specification> <until clause>

<until clause> ::= UNTIL <explicit date> |
                   UNTIL FOREVER

<reference> ::= REFERENCE <date> |
                BASE <date>

<start> ::= STARTING <explicit date>

<explicit date> ::= <date> |
                    <before-or-after clause> <explicit date>

<number> ::= <integer> |
             <ordinal> |
             OTHER

<ordinal> ::= [FIRST] | SEC[OND] | THIRD | FOURTH | FIFTH |
              SIXTH | SEVENTH | EIGHTH | NINT[H] | TE[NTH] | 
              EL[EVENTH] | TWEL[FTH] | THIRTE[ENTH] |
              FOURTE[ENTH] | FIFTE[ENTH] | SIXTE[ENTH] |
              SEVENTE[ENTH] | EIGHTE[ENTH] | NINETE[ENTH] |
              TWENTYTH | TWENTYFIR[ST] | TWENTYSEC[OND] |
              TWENTYTHI[RD] | TWENTYFO[URTH] | TWENTYFIF[TH] |
              TWENTYSI[XTH] | TWENTYSEV[ENTH] | TWENTYE[IGHTH] |
              TWENTYN[INTH] |
              THIRTI[ETH] |
              THIRTY[FIRST]
              <integer>ST |
              <integer>TH |
              <integer>RD |

<month of year> ::= JA[NUARY] | FE[BRUARY] | MAR[CH] | AP[RIL] |
                    MAY | JUN[E] | JUL[Y] | AU[GUST] | SEP[TEMBER] |
                    OC[TOBER] | NO[VEMBER] | DE[CEMBER]

<dow> ::= MON[DAY] | TU[ESDAY] | W[EDNESDAY] | THU[RSDAY] |
          FR[IDAY] | SA[TURDAY] | SU[NDAY]



The following is a list of valid keywords in a date expresiion:

    TOD[AY]             Current date computed when entered
    TOM[ORROW]          One day after TODAY
    Y[ESTERDAY]         One day before TODAY
    BET[WEEN]           As  BETWEEN <date specification> and <date
                        specification>, the days between the two
                        <date specification>s.
    DA[YS]              As  EVERY OTHER DAY  or  3RD DAY IN MAY
    STA[RTING]          As  STARTING <explicit date>, date expression
                        not true until the <explicit date> is reached
    R[EFERENCE]         The date expression is computed as though
    U[NTIL]
    AN[D]
    BEF[ORE]
    AF[TER]
    MONT[H]
    BA[SE]
    OT[HER]
    EX[CEPT]
    FOR[EVER]
    L[AST]

          Dates start Jan 1 1964.

          Parentheses are allowed in date expressions.

          REMIND will accept lower case keywords.

          Any words which are not recognised are treated as noise words and so
          ignored.

          TODAY, YESTERDAY, and TOMORROW are computed when entered.

          Ordinal numbers are treated the same as cardinal numbers.

          Examples:                     MEANS:

          thur                     every thursday
          4 thur                   every 4th thursday
          4 thur jan               the 4th thursday in january
          1 day jan                1st day in january
          jan                      1st day in january
          15 jan                   15th day in january
          day                      every day
          day jan                  every day in january
          month                    1st day of every month
          4 day 3 month            the 4th day of every 3rd month
          the 4th of every month   the 1st day of every fourth month
          jan 71                   ILLEGAL! try 1 jan 71
          71 day                   every 71 days
          jan 31                   31 jan
