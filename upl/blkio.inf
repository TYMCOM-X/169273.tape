


                                                DECEMBER, 1975


                BLOCK INPUT / OUTPUT ON THE TYMCOM X
                ------------------------------------


DESIGN GOALS:
------------
A NEW FACILITY FOR HIGH-VOLUME TRANSFER OF FILES AND DATA OVER
TYMNET AT INCREASED EFFICIENCY AND DECREASED COST (IN TRU'S) HAS
BEEN IMPLEMENTED ON THE TYMCOM-X.  BLOCK-ORIENTED INPUT/OUTPUT 
("BLOCK I/O") IS DESIGNED TO GREATLY REDUCE THE AMOUNT OF CPU
TIME PER CHARACTER FOR THE HOST.  IT IS ALSO INTENDED AS A FOOLPROOF
WAY OF INPUTTING LARGE NUMBERS OF CHARACTERS WITHOUT LOSSES DUE TO THE
HOST'S INABILITY TO ABSORB THEM.  THE THREE PRIMARY AREAS OF APPLICATION
ARE AUXILIARY CIRCUITS, REMOTE BATCH, AND MAG TAPE CASSETTES.

COSTS:
-----

SINCE BLOCK I/O WAS DESIGNED FOR LARGE CHARCTER TRANSFERS OVER TYMNET,
CHARGING HAS BEEN ADJUSTED ACCORDINGLY.  PARITY WITH CONVENTIONAL
TELETYPE I/O HAS BEEN SET AT 80 CHARACTERS PER TRANSFER, WITH A
FIXED MINIMUM CHARGE OF 80 CHARACTERS ON OUTPUT.  THAT IS, FOR A BLOCK
OUTPUT OF 80 CHARACTERS OR LESS, THE USER WILL BE CHARGED FOR SENDING A
FULL 80 CHARACTERS AT ROUGHLY THE PRICE HE WOULD PAY FOR SENDING THEM
CONVENTIONALLY.  (THERE IS NO FIXED MINIMUM CHARGE ON INPUT, SINCE THE
USER HAS LESS CONTROL OVER BLOCK-SIZE.)  AT ANY NUMBER ABOVE 80
CHARACTERS ON BLOCK OUTPUT, THE USER WILL REALIZE PROGRESSIVELY MORE
SAVINGS UNTIL, AT THE MAXIMUM TRANSFER COUNT OF 400 (DECIMAL) CHARACTERS,
THE TRU CHARGES TO THE USER WILL BE WELL UNDER 50% OF A CONVENTIONAL
TRANSFER.   IN ADDITION TO THE PER-CHARACTER CHARGE (W/ FIXED MINIMUM
OUTPUT CHARGE), THERE WILL BE A CHARGE FOR ELAPSED TIME
IN BLOCK I/O MODE.   THIS CHARGE WILL BE A RELATIVELY SMALL
COMPONENT IN ANY LARGE DATA TRANSFER, BUT SHOULD ENCOURAGE USERS
TO FREE BLOCK I/O RESOURCES ONCE THEIR TRANSFER IS COMPLETE.

ACCOUNTING:
----------

USERS MAY MONITOR THEIR USE OF BLOCK I/O RESOURCES WITH TWO NEW
ADDITIONS TO THE 'GETTAB' UUO..

        GETTAB FUNCTION #       RETURNS IN AC

                '40             ELAPSED TIME (SECONDS) IN BLOCK I/O MODE

                '41             TOTAL COUNT OF CHARACTERS TRANSFERRED
                                IN BLOCK I/O MODE.

BOTH QUANTITIES REPRESENT THE ACCUMULATED TOTAL SINCE THE JOB LOGGED IN.


NEW AUXCALS:
-----------
BLOCK I/O IS INVOKED USING A SUBSET OF THE "AUXCAL" UUO'S WHICH 
ARE OF THE FOLLOWING FORMAT:

                AUXCAL AC,ADDRESS

WHERE ACCUMULATOR "AC" CONTAINS

                AC/  PORT NUMBER,,FUNCTION NUMBER

THE USER MAY SPECIFY HIS COMMAND-PORT (I.E., HIS TELETYPE) EITHER
BY PORT NUMBER OR WITH A "-1".  THE BLOCK I/O FUNCTION NUMBERS (IN OCTAL)
ARE AS FOLLOWS:


                NUMBER          FUNCTION
                ------          --------

                34              INITIATE BLOCK I/O MODE

                35              INPUT A BLOCK

                36              INPUT A BLOCK & SKIP IF DATA PRESENT

                37              OUTPUT A BLOCK

                40              REQUEST BLOCK INPUT TERMINATION

                41              REQUEST BLOCK OUTPUT TERMINATION

                42              TERMINATE BLOCK I/O MODE


AUXCALS 34, 35, 36, AND 37 TAKE A "SKIP RETURN" (I.E., INCREMENT THE
PROGRAM COUNTER) ON SUCCESSFUL COMPLETION OF THE REQUESTED FUNCTION.

PROTOCOL:
--------

THE CALLING PROCEDURE FOR INITIATING A BLOCK I/O TRANSFER IS AS FOLLOWS:

        1)  INITIALIZE BLOCK I/O MODE FOR THE PORT.  (FOR
            INPUT OPERATIONS, THE DATA MODE MUST ALSO BE SPECIFIED.)

        2)  ONCE THE PORT IS IN BLOCK I/O MODE, THE PROCESS MAY PERFORM
            EITHER BLOCK INPUT OR OUTPUT OPERATIONS (OR BOTH CONCURRENTLY)
            UNTIL SUCH TIME AS THE PORT LEAVES BLOCK I/O MODE.

        3)  THE PORT WILL REMAIN IN BLOCK I/O MODE UNTIL THE PROGRAM:

                A)  ISSUES A "TERMINATE BLOCK I/O MODE" AUXCAL,

                B)  EXECUTES EITHER THE "RESET" OR "HANG" UUO,

                C)  RECEIVES A CIRCUIT ZAPPER FOR THE PORT.


DATA FORMAT FOR INPUT AND OUTPUT:
--------------------------------

THERE IS A SINGLE DATA FORMAT FOR BOTH BLOCK INPUT AND OUTPUT.  AUXCALS
'35 THROUGH '37 EXPECT A POINTER TO A DATA BLOCK OF THIS FORMAT IN THEIR
EFFECTIVE ADDRESS FIELD.  THE BLOCK IS FORMATTED AS FOLLOWS:

        1) ONE WORD CONTAINING A BYTE COUNT OF DATA CHARACTERS TO BE
           TRANSFERRED (BETWEEN 1 AND 400 DECIMAL, INCLUSIVE).  
           BLOCK INPUTS RETURN A COUNT OF THE NUMBER OF DATA
           CHARACTERS SUCCESSFULLY INPUT, AND BLOCK OUTPUTS EXPECT A
           A COUNT OF DATA CHARACTERS TO TRANSMIT.

        2) THE ACTUAL DATA TO BE SENT OR RECEIVED IN 8-BIT BYTES,
            LEFT-JUSTIFIED, FOUR BYTES TO EACH WORD.  (THE VALUE
            OF THE LOW ORDER FOUR BITS IS UNDEFINED.)  THUS, THE DATA 
            BLOCK FOR A MAXIMUM-SIZED TRANSFER LOOKS AS FOLLOWS:

                                BITS
            0-7       8-15      16-23    24-31    32-35
        ***************************************************
WORD 0  *                       BYTE COUNT                *
        ***************************************************
WORD 1  *    N0   *    N1   *    N2   *    N3   *  4 BITS *
        ***************************************************
WORD 2  *    N4   *    N5   *    N6   *    N7   *  4 BITS *
        ***************************************************
        /
        /
        ***************************************************
WORD 99 *   N614  *   N615  *   N616  *   N617  *  4 BITS *
        ***************************************************

***WHERE NXXX IS THE BYTE NUMBER (IN OCTAL) OF THE DATA BYTE ADDRESSED,
AND THE VALUE OF THE LOW ORDER FOUR BITS OF EACH DATA WORD IS UNDEFINED.

AN ACTUAL BLOCK INPUT OR OUTPUT WOULD LOOK SOMETHING LIKE THIS:

        AUXCAL AC,ADR
         ERROR RETURN
        SUCCESSFUL RETURN

AC/     PORT,,FUNCTION

ADR:    COUNT OF CHARACTERS
        DATA CHARACTERS 8 BITS EACH, LEFT JUSTIFIED



DATA MODES ON INPUT:
-------------------

THERE IS NO SINGLE END-OF-FILE OR END-OF-TRANSMISSION
CONVENTION WHICH IS ADEQUATE FOR USE WITH ALL DEVICES WHICH ARE EXPECTED
TO INTERFACE WITH BLOCK I/O.  HENCE, THE USER IS ALLOWED TO SPECIFY
THE DATA MODE FOR THE PORT ON INPUT AS A MEANS OF SIGNALING WHICH OF
SEVERAL TERMINATION CONVENTIONS HE WISHES TO USE.  FOR THE COMMAND
PORT, THIS CAN BE DONE WITH EITHER A PARAMETER IN THE STATUS FIELD
OF THE INIT BLOCK OR WITH THE 'SETMOD' AUXCAL OR THE 'SETSTS' OR
'SETMOD' UUO'S.  FOR AUXILIARY CIRCUITS, IT CAN ONLY BE DONE WITH THE
'SETMOD' AUXCAL.  THERE ARE THREE DATA MODES WHICH ARE INTENDED
PRIMARILY AS FOLLOWS:

    MODE        NUMBER  DEVICE TYPE
    ----        ------  -----------

    IMAGE         '10   CASSETTE TERMINALS
    IMAGE BINARY  '13   REMOTE BATCH TERMINALS (E.G., 2780/3780)
    BINARY        '14   AUXILIARY CIRCUITS

TERMINATION (END-OF-FILE) PROTOCOLS:

    MODE          TERMINATE WITH
    ----          --------- ----

    IMAGE         TIMEOUT OR TERMINATE CHARACTER (EOT).
    IMAGE BINARY  TERMINATE CHARACTER (EOT) ONLY.
    BINARY        NEITHER.  PROGRAM MUST REQUEST INPUT TERMINATION.

THE BASE MAY SIGNAL THE END OF INPUT FOR ANY OF THREE REASONS:
1) BUFFER FULL, 2) TIMEOUT, AND 3) TERMINATE CHARACTER RECEIVED.
THE MONITOR WILL THEN WAKE THE JOB IF NEEDED AND INTERRUPT IF NEEDED,
AND THE FOLLOWING END-OF-FILE AND STATUS CONVENTIONS WILL BE OBSERVED:

  TERMINATE CHARACTER RECEIVED --
        1) IMAGE MODE -- 'IOEND' SET.
        2) IMAGE BINARY -- 'IOEND' SET.

  TIMEOUT (12 SECONDS ELAPSE W/O RECEIVING CHARACTERS) --
        1) IMAGE MODE -- 'IOBKTL' AND 'IOEND' SET.
        2) IMAGE BINARY -- 'IOBKTL' SET.

'BINARY' MODE ('14) WILL BE UNAFFECTED BY EITHER OF THE ABOVE CONDITONS
AND WILL OBSERVE END-OF-FILE STATUS ONLY AFTER A 'REQUEST BLOCK INPUT
TERMINATION' AUXCAL HAS BEEN EXECUTED.


TERMINATION BY PROGRAM:
----------------------

THREE SPECIAL AUXCALS ('40, '41 AND '42) HAVE BEEN PROVIDED FOR
TERMINATING EITHER A BLOCK INPUT OR OUTPUT IN PROGRESS, OR FOR CAUSING THE
PORT TO LEAVE BLOCK I/O MODE ALTOGETHER.   EXECUTING THE 'TERMINATE-INPUT'
AUXCAL DOES NOT AFFECT A BLOCK OUTPUT IN PROGRESS FOR THE PORT,
NOR DOES A 'TERMINATE-OUTPUT' AFFECT BLOCK INPUT.   HOWEVER,
EXECUTING THE 'TERMINATE-BLOCK I/O MODE' AUXCAL WILL CAUSE ANY BLOCK INPUT
(NOT OUTPUT) IN PROGRESS TO BE TERMINATED IMMEDIATELY.  TERMINATION OF
A BLOCK INPUT BY PROGRAM WILL CAUSE THE SETTING OF 'IOEND' (THE
END-OF-FILE FLAG) FOR THE DEVICE.  ANY OF THE ABOVE AUXCALS MAY BE CALLED
AT ANY TIME, AND NONE TAKE A SKIP RETURN.

TITLE BIOLIB -- A SAMPLE ROUTINE LIBRARY FOR BLOCK OUTPUT FUNCTIONS

T1=1
P=17

INTEGER BIOPTR

BIOBUF: BLOCK ^D101
ENTRY BIOMOD,BIOEND,BIOCHR,BIODMP

COMMENT @

HERE LIE SOME ROUTINES (IN MODULE FORM) TO DO GARDEN-VARIETY BLOCK OUTPUT
OVER TYMNET FROM THE USER'S COMMAND PORT.

        BIOMOD  --  SETS BLOCK I/O MODE FOR THE COMMAND PORT
                    (SKIPS ON SUCCESS).

        BIOCHR  --  BUFFERS UP THE CHARACTER IN T1 FOR TRANSMISSION
                    OVER TYMNET.  TRANSMITS BUFFER AS APPROPRIATE.

        BIODMP  --  FORCES TRANSMISSION OF THE CONTENTS OF THE BLOCK
                    OUTPUT BUFFER.  GENERALLY, THIS IS USEFUL FOR FLUSHING
                    THE LAST BUFFER TO BE SENT.

        BIOEND  --  TAKES THE PORT OUT OF BLOCK I/O MODE.

@


BIOMOD: PUSH P,T1       ;BE CAREFUL NOT TO STEP ON T1.
        HRROI T1,34     ;SET BLOCK I/O MODE FOR THIS PORT.
        AUXCAL T1,      ;THIS AUXCAL SKIPS ON SUCCESS.
         JRST [OUTSTR [ASCIZ @CANNOT SET BLOCK I/O MODE FOR PORT.@]
                POP P,T1 ;RESTORE T1
                POPJ P,] ;RETURN TO CALLING PROGRAM IN DISGRACE.
BIOINI: AOS -1(P)       ;INCREMENT PC FOR SUCCESSFUL RETURN.
BIOIN1: MOVEI T1,^D400  ;SET (OR RESET) BYTE COUNT IN BUFFER.
        MOVEM T1,BIOBUF
        MOVE T1,[POINT 8,BIOBUF+1]
        MOVEM T1,BIOPTR ;(RE)INITIALIZE BUFFER POINTER.
        POP P,T1        ;RESTORE T1.
        POPJ P,         ;SUCCESSFUL RETURN TO USER.

BIOEND: HRROI T1,42     ;LEAVE BLOCK I/O MODE
        AUXCAL T1,      ;ALSO FORCES TERMINATION OF BLOCK INPUT
        POPJ P,         ;THIS ONE ALWAYS WORKS!


BIOCHR: SOSGE BIOBUF    ;DECREMENT COUNT OF CHARS LEFT TO GO.
        PUSHJ P,BIODMP  ;BUFFER IS FULL -- DUMP IT.
        IDPB T1,BIOPTR  ;WRITE THIS CHAR INTO NEXT BUFFER SLOT.
        POPJ P,         ;AND RETURN.

BIODMP: PUSH P,T1       ;BE CAREFUL NOT TO CLOBBER T1
        MOVEI T1,^D400-1 ;PRESTO!  THIS GAMBIT STORES ACTUAL BYTE COUNT
        SUBB T1,BIOBUF   ; BYTE COUNT IN 'BIOBUF'.
        JUMPE T1,BIOIN1 ;IF COUNT IS 0, MERELY RE-INITIALIZE
        HRROI T1,37     ;OTHERWISE, SET UP FOR A BLOCK OUTPUT.
        AUXCAL T1,BIOBUF
         JRST   [OUTSTR [ASCIZ /BIO OUT ERROR/] ;COMPLAIN TO USER.
                EXIT]   ;AND DIE.
        JRST BIOIN1     ;ELSE GO RE-INITIALIZE FOR NEXT OUTPUT.


END

SPECIAL PROGRAMMING CONSIDERATIONS:
----------------------------------

EVERYTHING WORKS AS YOU MIGHT EXPECT, WITH THE FOLLOWING POSSIBLE
EXCEPTIONS:

        1) AFTER ISSUING THE TERMINATE BLOCK INPUT CALL, THE USER
           PROGRAM SHOULD DO INPUTS UNTIL EOF TO GET THE LAST
           CHARACTERS (OR 0) AND TO CLEAR THE TERMINATE FLAG.

        2) AFTER ISSUING THE TERMINATE BLOCK OUTPUT CALL, THE USER
           PROGRAM MUST CLEAR ITS OUTPUT BUFFER (USING 'CLRBFO')
           IF IT WANTS A CHARACTER GOBBLER SENT AFTER CHARACTERS
           ON THEIR WAY ACROSS TYMNET.



ERRORS:
------

ERRORS ARE POSSIBLE ON AUXCALS '34 THROUGH '37 AND ARE SIGNALLED BY
A NON-SKIP RETURN UPON EXIT FROM THE UUO.  THE ERRORS ARE, IN GENERAL,
ONE OF THE FOLLOWING:

  REQUEST BLOCK I/O MODE ('34):
        1)  USER CANNOT ACCESS PORT (E.G., WRONG PORT, OR CIRCUIT
            HAS BEEN DETACHED OR ZAPPED).
        2)  BASE REJECTED REQUEST FOR BLOCK I/O PORT.  IN GENERAL,
            THE BASE SHOULDN'T DO THIS.
        3)  HOST IS OUT OF BLOCK I/O PORTS.  THE MONITOR HAS BEEN
            CONFIGURED FOR A FIXED NUMBER OF BLOCK I/O PORTS,
            IN ORDER TO CONSERVE MONITOR FREE CORE.  THIS NUMBER IS
            BASED ON EXPECTED USAGE, BUT CAN BE CHANGED BY REDEFINING
            A PARAMETER AND RE-GENERATING THE MONITOR.
        4)  HOST IS OUT OF FREE CORE.  UNUSUALLY HIGH I/O ACTIVITY
            HAS EXHAUSTED THE POOL OF FREE CORE FROM WHICH BUFFER
            SPACE FOR THIS PORT WOULD BE TAKEN.

  REQUEST BLOCK INPUT ('35 AND '36):
        1)  PORT IS NOT IN BLOCK I/O MODE OR NOT ACCESSIBLE BY
            JOB (SEE ABOVE).
        2)  NO DATA PRESENT (FOR '36 ONLY).

  REQUEST BLOCK OUTPUT ('37):
        1)  PORT IS NOT IN BLOCK I/O MODE OR NOT ACCESSIBLE
            BY JOB (SEE ABOVE).
        2)  COUNT OF DATA CHARACTERS IS NOT BETWEEN 1 AND 400 DECIMAL,
            INCLUSIVE.

   