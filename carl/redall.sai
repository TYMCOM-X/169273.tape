
begin

require "(SAILIB)SAIL.DEF" source!file;
require "(SAILIB)UUOSYM.DEF" source!file;
require "(SAILIB)MFDSCN.REQ" source!file;
require "(CB-SAIL)MEMCHK.REQ" source!file;
require "(CB-SAIL)PRICHK.REQ" source!file;

Own string Text, UserName;
Own Integer Chk, File, Ext, UserPPN;


simple procedure check( integer chan, size );
begin
    own integer array page['0:'777];
    own integer chk;

    chk_ 0;
    while ( size > 0 )
     do begin "read page"

	Arryin( Chan, page[0], 512 min size );
	Memchk( chk, page[0], 512 min size );
	Outstr( "." );
	size_ size - 512;

     end "read page";

    outstr( Prichk( chk ) );

end;


boolean procedure WantUfd( Reference Integer Aun );
return( true );

procedure UfdProc( Reference Integer Chan; Integer array LKB );
begin
    Username_ "(" & cv6str( LKB[!rbUNM] ) & cv6str( LKB[!rbUNM+1] ) & ")";
end;

boolean procedure WantFile( Reference Integer Filename, Extension );
return( true );

procedure FileProc( Reference Integer Chan, Cnt, Brk, FileEof;
		    Integer Array LKB );
Begin "Each File"

    Outstr( Username );
    If ( lkb[!rbext] land ('7 lsh 33) )
     then Outstr( cvxstr(Lkb[!rbnam]) )
     else Outstr( "["& cvos(!lh(lkb[!rbnam])) & "," & cvos(!rh(lkb[!rbnam])) & "]" );
    Outstr( " " & cvxstr(lkb[!rbext] land (-1 lsh 18)) );
    Outstr( " " & cvos( lkb[!rbsts] & " " );

    Check( Chan, lkb[!rbsiz] );

    Outstr( crlf );
    Chnior( Chan, memory[ CL!ACS lor CL!RST ], !chCLS );

end "Each File";


MFDset( '17, 4, 0, 512 );		! dump, in, out, count;

MfdScn( -1, cvsix("*"), cvsix("*"), -1,
	    WantUfd, UFDProc, WantFile, FileProc );


end;
