TITLE INITIA - START INITIAL PROGRAMS

if1,<printx License required: OP SY ST JL>

	.JBVER==137
	INTERNAL .JBVER

	LOC .JBVER
	EXP 22 ; 5/29/85 Carl - global sweeping changes, .FOCFM, etc.
	;   21 ; 8/25/83 DLS - Add OPERATOR messages
	;   20 ; 8/19/82 Darren - if already logged in, run user's init file
	;   17 ; 7/30/80 WRS fixed to allow COPYCR to become CRSHID
	;   16 ; 7/2/80 WRS changed command string for XEXEC
	;   15 ; 2/2/80 WRS added call to XEXEC at end of job 3
	RELOC

	TWOSEG
	RELOC	400000

SUBTTL	DEFINITIONS

;Registers

	FL=0		;FLAG REGISTER

	T1=1		;TEMPORARY REGISTERS
	T2=2
	T3=3
	T4=4
	T5=5
	T6=6
	T7=7

	N=15		;FOR LOGIN
	N1=16		;THIS HAS USER NAME
	P=17		;PDL

;Device Channels

	SYS==1
	RST==2		;RESTRICTION FILE NUMBER

;Misc
	.FOCFM==1	; Create frame
	CF.LOG==(1B17)	; Run LOGINN in created frame
	.FORUN==33	; Run program in frame

	BLKSIZ==5	; SIZE OF (LOGIN) .FOCFM BLOCK

;LUD FORMAT
	LUDHSH==^D887	;HASH INTO LUD
	LPPN==0		;RELATIVE PPN LOC IN LUD
	LAUN==0		;AUN FOR USER IN LUD
	LLINK==2	;RELATIVE LINK LOCATION IN LUD
	LBITS==2	;BITS (RUN, NO LOGIN, ETC.)
	LCSPB==400	;CUSP BIT IN BITS WORDS
	LTRUB==(1B4)	;USER HAS A TRU RESTRICTION
	LNOLOG==400000	;CAN NOT LOGIN TO THIS DIRECTOR (BITS WORD)
	LPRV==3		;JBTPRV WORD
	LHUN==4		;RELATIVE HASHED USER NAME LOCATION IN LUD
	LCSN==5		;CUSP NAME TO RUN IF PRESENT
	LCSU==6		;User name of cusp owner

;flags
	FLNGMT==1	;FLAG THAT DATUUO FAILED, TIME NOT GMT
	FLWINI==2	;FLAG THAT WANT INIT CUSP


SUBTTL	Monitor GETTAB tables

	.GTUNM==-22		; first half of username
	.GTUN1==-21		; second half
	.GTLIC==-20		; JBTLIC gettab index
	    LICOP==(1B2)	; "OP" LICENSE BIT
	.GTNAM==3		; Program name [SETNAM]
	.GTSTS==0		; Frame status
	    JNA==(1B3)		; Job Number Assigned
	    JLOG==4		; Job LOGged in
	.GTPRV==6		; Frame privileges
	    JP.NAT==(1B1)	; Don't attach

	.GTCNF==11		; Config table
	    .CNTIM==10		; Jiffies since midnight
	    .CNDAT==11		; Days since 01-Jan-64 GMT
	    .CNNJB==15		; PLACE IN CONF TABLE FOR SEG PNTR
	    .CNSTS==17		; System states word
		STAUTO==(1B17)	; Auto restart mode
	    .CNJPS==26		; ITEM AND TABLE FOR JIFFIES/SEC

	.GTNSW==12		; Non-swapping data
	    .NSUPT==15		; System uptime
	    .NSHJB==20		; Highest current frame #

	SUUMSG==0		;SETUUO FOR CTY MSG
	SUUSCH==1		;SETUUO FOR SCHED ARGUMENT
	SUUTIM==3		;SETUUO FOR TIME
	SUUDAT==4		;SETUUO FOR DATE

SUBTTL	STORAGE LIST MACRO

;THIS MACRO GENERATES COMMAND DISPATCHES

DEFINE LINES<
;; DISP,PROG,RUNOFF,RUNLIC,NAME,KEEP,RUNAME
    X RUNCOM,DSKCLN,0,LICOP,DSKCLN,0,0
    X CHKPNT,CHKPNT,0,LICOP,CHKPNT,1,CHKPNT
    X RUNCOM,CPYCRA,0,LICOP,COPYCRASH,0,0
    X RUNCOM,XEXEC,1,-1,XEXEC SYSJOB,0,0
    X KMCLOD,KMCLOD,0,LICOP,KMC-11 LOADER,0,0
>

DEFINE CMDMAK (A,B,LINES)<

DEFINE X (D,P,OFF,LIC,N,KEEP,RUNNAM)<EXP D>
A'DSP:	LINES
A'LEN==.-A'DSP

DEFINE X (D,P,OFF,LIC,N,KEEP,RUNNAM)<<SIXBIT /P/>>
A'PRG:	LINES

DEFINE X (D,P,OFF,LIC,N,KEEP,RUNNAM)<XWD OFF,LIC>
A'LIC:	LINES

DEFINE X (D,P,OFF,LIC,N,KEEP,RUNNAM)<[ASCIZ /N/]>
A'NAM:	LINES

DEFINE X (D,P,N,OFF,LIC,KEEP,RUNNAM)<IFN KEEP,<<SIXBIT /RUNNAM/>>>
B'NAM:	LINES
B'LEN==.-B'NAM

	RELOC
B'TAB:	Block	B'LEN
	RELOC

DEFINE X (D,P,N,OFF,LIC,KEEP,RUNNAM)<
  IFN KEEP,<
    IFN KEEP-2,<0>
    IFE KEEP-2,<-1>
  > ; End IFN KEEP
>
B'TN2:	LINES

> ; End DEFINE CMDMAK

SUBTTL	TABLE STORAGE

CMDMAK (LIN,CHK,LINES)

	DEFINE DATIT (A)
<IRP A,<[ASCIZ /-A-/]>>

MONTAB:	DATIT <JAN,FEB,MAR,APR,MAY,JUN,JUL,AUG,SEP,OCT,NOV,DEC>

FAILTB:	[ASCIZ / NO SYS/]
	[ASCIZ / NO LUD/]
	[ASCIZ / NO USER/]
	[ASCIZ / CAN NOT LOGIN/]
	[ASCIZ / INTERLOCK/]
	[ASCIZ / NO FSN/]
	[ASCIZ / BAD UFD/]
	[ASCIZ / STRUUO/]
	[ASCIZ / GETTAB/]
	[ASCIZ / RUN/]
	[ASCIZ / TIMEOUT/]
	[ASCIZ / ACT DEVICE NOT INITTED BY CHKPNT/]   ;AAA DEC 76

DEFINE ZONEM<
	X PDT,50
	X MDT,51
	X CDT,52
	X EDT,53
	X PST,10
	X MST,11
	X CST,12
	X EST,13>

DEFINE X (A,B)<<ASCII /A/>>
ZONES:	ZONEM
	ZONUM==.-ZONES

DEFINE X (A,B)<400020,,400000+B>
ZONCNV:	ZONEM


OPRNAM:	SIXBIT /OPER/
	0
ACTNAM:	SIXBIT /UN1/
	0

SYSBLK:	16
	SIXBIT /SYS/
	0
RSTBLK:	0
	SIXBIT	/DSK/
	RSTBUF	

COM:	IOWD 200,BUF
	0

RSTCPY:	3
	1,,4
	SIXBIT /RSTRCT/
	SIXBIT /TIM/

LUDCPY:	3
	0
	SIXBIT /LUD/
	SIXBIT /SYS/

SUBTTL	LOW SEGMENT DATA

	RELOC

LUDNAM:	Block	4		; Extended lookup block for LUD.SYS
RSTNAM:	Block	4		; Extended lookup block for RSTRCT.TIM

RUNBLK:	Block	1		; Offset,,5 arguments
RUNDEV:	Block	1		; Device
RUNUUN:	Block	1		; PPN if device is DSK
RUNNAM:	Block	1		; Program
RUNEXT:	Block	1		; Extension
RUNLIC:	Block	1		; License,,Core
RUNLEN==.-RUNBLK-1

CUSBLK:
CUSDEV:	Block	1		; Device
CUSNAM:	Block	1		; Program
CUSEXT:	Block	2		; Extension, Dummy
CUSPPN:	Block	1		; PPN
CUSLIC:	Block	1		; License,Core

FRMBLK:	Block	1		; Run LOGINN,,5 arguments
INPPN:	Block	1		; GFD ppn
INPRV:	Block	1		; PRIV word
INAUN:	Block	1		; LOGIN ppn
INNAM:	Block	2		; USERNAME

JOBNUM:	Block	1
FAILNM:	Block	1
SRCBUF:	Block	1
CHRBUF:	Block	3
RSTBUF:	Block	3
TRMBUF:	Block	50
BUF:	Block	200
PDL:	Block	40

STRUPT:	Block	1		; Uptime at start
RSTDAT:	Block	1
RSTTIM:	Block	1
RSTZON:	Block	1
RSTLIN:	Block	1		;LINE WE ARE ON
RSTJIF:	Block	1
RSTRCT:	Block	1		;NOT RESTRICTED
RSTTDY:	Block	1		;CURRENT TIME IN USERS ZONE
RSTNOW:	Block	1		;BOTH DATE AN TIME
RSTCNT:	Block	1
RSTN1:	Block	1
RSTN2:	Block	1
HSHBLK:	Block	1		;LUD BLOCK NUMBER TO START ON
HSHNAM:	Block	1		;Hashed username to comare

	RELOC
SUBTTL	MAIN PROGRAM LOOP

STPT:	JFCL				; Ignore entry or entry+1
	RESET				; Reset all IO, etc.
	MOVEI	FL,0			; Clear flags
	MOVE	P,[IOWD 40,PDL]		; Setup PDL
	SETOM	JOBNUM			; NUMBER NOT FOUND YET
	MOVEI	T1,10			; SETUP FOR GETTAB FAILURE
	MOVEM	T1,FAILNM
	HRROI	T1,.GTSTS		; Read frame status word
	GETTAB	T1,			; From the monitor
	 JRST	INIFAL			;  Can't ??? No GETTABs
	TLNE	T1,JLOG			; Am I logged in already?
	  JRST	RUNINI			; Yes, Run init file
	MOVE	T1,[.CNSTS,,.GTCNF]	; Read the system states word
	GETTAB	T1,
	  SETZ	T1,			; Can't, so assume it's 0
	TLNN	T1,STAUTO		; Are we in auto restart
	  LOGOUT			; No, just logout for now
	MOVSI	T2,-LINLEN
DSPSRC:	MOVEM	T2,JOBNUM		; Save for anxious routines
	PUSHJ	P,INIUP			; Print "<pgm name> on Line <no>"
	MOVE	T1,LINPRG(T2)		; Get Program name
	MOVEM	T1,RUNNAM		; Store in run block
	PUSHJ	P,@LINDSP(T2)		; Dispatch for each
	 JFCL				; Ignore errors
	MOVE	T2,JOBNUM		; Restore index
DSPSR1:	AOBJN	T2,DSPSRC
	JRST	WAITP			; Wait for it all to end


SUBTTL	PROCESSING ROUTINES

CHKPNT:	MOVEI	T1,ACTNAM	; Setup UN1 pointer
	PUSHJ	P,LUDINF	; Get INFO about (UN1)
	  JRST	INIFAL		;  Error
	PUSH	P,INPPN		; Save UN1 ppn
	MOVEI	T1,OPRNAM	; Always use OPER login name
	PUSHJ	P,LUDINF	; Get proper info
	  JRST	INIFAL		; Hmmmmm.
	POP	P,INPPN		; Restore UN1 for GFD ppn
	JRST	RUNCM1		; Go to common code

KMCLOD:	; Add check here for KS-10 processor
	; If not a KS, simply return
	; If a KS, then fall into RUNCOM

RUNCOM:	MOVEI	T1,OPRNAM	; Always get OPER info
	PUSHJ	P,LUDINF	;  from the LUD
	  JRST	INIFAL		; Can't find it?
RUNCM1:	MOVE	T1,[CF.LOG,,BLKSIZ]
	MOVEM	T1,FRMBLK	; Block header LOGIN,,SIZE
	MOVSI	T1,.FOCFM	; New style create frame
	FRMOP	T1,FRMBLK	; Create frame
	  JRST	INIFAL		; Can't ??? Hmmmm.
	MOVE	T2,JOBNUM	; Get index
	MOVE	T2,LINLIC(T2)	; For run offset and license
	HRLZM	T2,RUNLIC	; Setup license,,core
	MOVEI	T2,RUNLEN	; Set block length
	MOVEM	T2,RUNBLK	; Completed RUN block
	MOVEI	T2,11
	MOVEM	T2,FAILNM	;RUN FAILURE
	HRLI	T1,.FORUN
	FRMOP	T1,RUNBLK	; Run program in other frame
	  JRST	INIFAL		; OOPS!
	JRST	CPOPJ1		; All done, go do next

SUBTTL	INIT FILE

RUNINI:	HRROI	T1,.GTUNM		; Get my username
	GETTAB	T1,
	  JRST	RUNXIT
	MOVEM	T1,INNAM
	HRROI	T1,.GTUN1		; and store it
	GETTAB	T1,
	  JRST	RUNXIT
	MOVEM	T1,INNAM+1		; for hash
	MOVEI	T1,INNAM
	MOVEI	FL,FLWINI		; Flag that we want INIT cusp
	PUSHJ	P,LUDINF		; Get LUD info
	  EXIT
	SKIPN	T1,BUF+LCSN(T3)		; Init name still there
	  JRST	RUNXIT			; No, ???
	MOVEM	T1,CUSNAM		; Setup run block
	DMOVE	T1,BUF+LCSU(T3)		; Get username
	DMOVEM	T1,INNAM
	MOVEI	T1,INNAM		; POINT AT USERNAME
	SKIPN	INNAM			; If null, use path
	  SETZ	T1,
	MOVEM	T1,CUSPPN		;USERNAME
	MOVSI	T1,(SIXBIT/DSK/)
	MOVEM	T1,CUSDEV		;DEV
	MOVEI	T1,CUSBLK		;RUN INIT FILE AT ENTRY+0
RUNIT:	RUN	T1,			;DO IT
	JFCL

RUNXIT:	OUTSTR	[ASCIZ/
can't run required program/]
	EXIT

SUBTTL	INITIA WAIT LOOP

WAITP:	MOVEI	T1,10
	MOVEM	T1,FAILNM
	MOVE	T1,[.NSUPT,,.GTNSW]
	GETTAB	T1,
	 JRST	INIFAL
	MOVEM	T1,STRUPT	;SAVE TIME FOR 5 MIN TIMEOUT
SRCLP:	MOVE	T1,[.NSHJB,,.GTNSW]
	GETTAB	T1,
	 JRST	INIFAL
	SETZM	CHKTAB
	MOVE	T2,[CHKTAB,,CHKTAB+1]
	BLT	T2,CHKTAB+CHKLEN-1	;CLEAR CHECK TABLE
SRCJOB:	MOVEI	T2,.GTSTS
	HRL	T2,T1
	GETTAB	T2,
	 JRST	NXTJOB	;NOT THERE, TRY NEXT JOB
	TLNN	T2,JNA
	JRST	NXTJOB	;JOB NOT ASSIGNED, IGNORE
	MOVEI	T2,.GTNAM
	HRL	T2,T1
	GETTAB	T2,
	 JRST	NXTJOB
	MOVSI	T3,-CHKLEN
MTCCHK:	CAMN	T2,CHKNAM(T3)	;LOOK FOR PROGRAM NAME
	JRST	MTCFND
MTCNXT:	AOBJN	T3,MTCCHK
	JRST	NXTJOB		;EXTRANIOUS JOB, KEEP GOING
MTCFND:	SKIPE	CHKTAB(T3)
	JRST	MTCNXT		;FOUND, GO IN CASE MORE OF SAME NAME
	SETOM	CHKTAB(T3)
NXTJOB:	SOJG	T1,SRCJOB		;SEARCH MORE JOBS
	MOVSI	T3,-CHKLEN
	SKIPE	CHKTN2(T3)	;THIS IS NON-ZERO FOR OPTIONAL PROGS
	SETOM	CHKTAB(T3)	;MARK THEM AS ALWAYS THERE
	AOBJN	T3,.-2
	MOVSI	T3,-CHKLEN	;ALL CHECKED
ALLCHK:	SKIPN	CHKTAB(T3)
	JRST	LOPWAT		;1 NOT FOUND
	AOBJN	T3,ALLCHK
	JRST	RSTLUK

LOPWAT:	MOVE	T1,[.NSUPT,,.GTNSW]
	GETTAB	T1,
	 JRST	INIFAL
	SUB	T1,STRUPT
	CAIG	T1,^D<5*60*60>	;5 MIN WAIT
	JRST	SRCLP		;CHECK AGAIN
	MOVEI	T1,12
	MOVEM	T1,FAILNM
	JRST	INIFAL

;CODE TO WAIT FOR CHKPNT TO INIT THE ACT DEVICE BEFORE
; UN-SHUTTING SYSTEM. AAA DEC 76

ACTTST:	EXP 6			;NUMBER OF TIMES TO DO ACT INITTED TEST
RSTLUK:	MOVSI T1,(SIXBIT/ACT/)
	DEVCHR T1,
	TRNN T1,200000		;BIT ON IF DEVICE BEEN INITTED
	JRST [MOVEI T1,^D30	;TRY AGAIN IN 30 SEC
		SLEEP T1,
		SOSLE ACTTST	;DONT DO THIS FOREVER
		JRST RSTLUK	;TEST ONCE AGAIN
		JRST .+1]	;AH,WELL, GO ON. CHKPNT PROBABLY
				;WAITING ON DATE .GT. 0
	MOVE T1,[.CNDAT,,.GTCNF]
	GETTAB T1,
	 JRST SCHSHT
	JUMPL T1,SCHSHT		;SET SCH 400000
	PUSHJ P,GETRST		;CHECK ON RSTRCT TIME
	 TDZA T1,T1		;NO FILE, NOT RESTRICTED
	MOVE T1,RSTRCT
SCHCOM:	HRLI T1,SUUSCH
	SETUUO T1,
	 JFCL
	JRST TELFIN

RSTNUM:	MOVEI T2,0
RSTNM1:	PUSHJ P,RDCHR
	CAIN T3,11
	JRST RSTNM1
	CAIGE T3,40
	POPJ P,
	CAIG T3,"9"
	CAIGE T3,"0"
	JRST RSTNM1
RSTNM2:	IMULI T2,^D10
	ADDI T2,-"0"(T3)
	PUSHJ P,RDCHR
	CAIG T3,"9"
	CAIGE T3,"0"
	SKIPA
	JRST RSTNM2
	IDIVI T2,^D100
	IMULI T2,^D60
	ADD T2,T3
	IMUL T2,RSTJIF
	AOS (P)
	POPJ P,

RDCHR:	SOSLE RSTBUF+2
	JRST RDCHR1
	INPUT RST,0
	STATZ RST,20000
	JRST [MOVEI T3,12
		POPJ P,]
RDCHR1:	IBP RSTBUF+1
	MOVEI T3,1
	TDNE T3,@RSTBUF+1
	JRST SKPLNM
	LDB T3,RSTBUF+1
	JUMPE T3,RDCHR
	CAIN T3,12
	AOS RSTLIN
	POPJ P,

SKPLNM:	MOVNI T3,4
	ADDM T3,RSTBUF+2
	REPEAT 4,<IBP RSTBUF+1>
	PUSHJ P,RDCHR
	JRST RDCHR

SCHSHT:	MOVEI T1,400000
	JRST SCHCOM


GETRST:	OPEN	RST,RSTBLK
	  POPJ	P,
	MOVE	N,[RSTCPY,,RSTNAM]
	BLT	N,RSTNAM+3	; Copy RST lookup block
	LOOKUP	RST,RSTNAM
	  JRST	LEVRST
	SETOM	RSTLIN		;LINE WE ARE ON
	MOVEI	T1,0
	MOVE	T2,[POINT 7,T1]
REPEAT	3,<
	PUSHJ P,RDCHR
	IDPB	T3,T2		;GET TIME ZONE
>
	MOVSI	T2,-ZONUM
	CAME	T1,ZONES(T2)
	AOBJN	T2,.-1
	JUMPGE	T2,LEVRST	;TIME ZONE NOT FOUND
	MOVE	T3,ZONCNV(T2)
	MOVSM	T3,RSTZON	;SAVE ZONE
	MOVE	T1,[.CNJPS,,.GTCNF]
	GETTAB	T1,
	 MOVEI	T1,^D60
	IMULI	T1,^D60
	MOVEM	T1,RSTJIF
	MOVE	T1,[.CNDAT,,.GTCNF]
	GETTAB	T1,
	 JRST	LEVRST
	MOVE	T2,[.CNTIM,,.GTCNF]
	GETTAB	T2,
	 JRST	LEVRST
	MOVEI	T4,T1
	DATUUO	T4,
	 JRST	LEVRST		;BAD TIME OF SOME KIND
	SETZM	RSTRCT		;NOT RESTRICTED
	MOVEM	T1,RSTTDY	;CURRENT TIME IN USERS ZONE
	MOVEM	T2,RSTNOW	;BOTH DATE AN TIME
	MOVEI	T2,10
	MOVEM	T2,RSTCNT
RSTNXD:	MOVEM	T1,RSTDAT	;TIME TO CHANGE RESTRICT
	ADDI	T1,2
	IDIVI	T1,7		;GET DAY OF WEEK
	CAMG	T2,RSTLIN
	  JRST	[USETI RST,1	;NEED TO BACK UP
		SETOM	RSTLIN
		SETZM	RSTBUF+2
		JRST	.+1]
RSTSKP:	PUSHJ	P,RDCHR
	CAIE	T3,12
	  JRST	RSTSKP
	CAMLE	T2,RSTLIN
	  JRST	RSTSKP

RSTNXE:	PUSHJ P,RSTNUM		;READ A NUMBE FROM LINE
	 JRST RSTFIN
	MOVEM T2,RSTN1
	PUSHJ P,RSTNUM
	 JRST LEVRST		;SHOULD BE IN PAIRS
	MOVEM T2,RSTN2
	MOVE T1,RSTDATT
	CAME T1,RSTTDY
	JRST RSTUN1		;USE N1
	MOVE T2,RSTN2
	CAMGE T2,RSTNOW
	JRST RSTNXE		;LOOK FOR MORE ON LINE
	MOVE T2,RSTN1
	CAMGE T2,RSTNOW
	JRST RSTUN2		;USE N2 AND RESTRICT ON
RSTUN1:	MOVE T1,RSTN1
RSTGOD:	MOVEM T1,RSTTIM
	MOVEI T1,RSTDAT
	DATUUO T1,
	 SKIPA
	AOS (P)
LEVRST:	RELEASE RST,0
	POPJ P,

RSTUN2:	MOVEI T1,100000
	MOVEM T1,RSTRCT
	MOVE T1,RSTN2
	JRST RSTGOD

RSTFIN:	AOS T1,RSTDAT
	SOSL RSTCNT
	JRST RSTNXD	;TRY NEXT DAY
	JRST LEVRST



TELFIN:	MOVE T1,[POINT 7,TRMBUF]
	MOVEI T2,[ASCIZ /
       Initialization completed /]
	PUSHJ P,ASCTRN
	MOVE T2,[.CNDAT,,.GTCNF]
	GETTAB T2,
	 JRST INIFAL
	SKIPGE T2			; <0 means date not set yet
	 PUSHJ	P,NODATE
	MOVE T3,[.CNTIM,,.GTCNF]
	GETTAB T3,
	 JRST INIFAL
	MOVE T4,[400020,,20]	;FROM DAY GMT TO STANDARD DEC GMT
	MOVEI T5,T2
	DATUUO T5,
	 TRO FL,FLNGMT	;TIME NOT IN GMT
	PUSH P,T3
	IDIVI T2,^D31
	PUSH P,T2
	MOVEI T2,1(T3)	;DAY IN T2
	PUSHJ P,DECTRN
	POP P,T2
	IDIVI T2,^D12
	PUSH P,T2
	MOVE T2,MONTAB(T3)
	PUSHJ P,ASCTRN
	POP P,T2
	ADDI T2,^D1964
	PUSHJ P,DECTRN
	MOVEI T2," "
	IDPB T2,T1
	POP P,T2	;TIME
	IDIVI T2,^D3600	;TO MINS
	IDIVI T2,^D60
	IMULI T2,^D100
	ADD T2,T3	;TO PRINTABLE FORM
	PUSHJ P,DECTRN
	MOVEI T2,[ASCIZ / GMT/]
	TRNN FL,FLNGMT
	PUSHJ P,ASCTRN
	PUSHJ P,CTYMSG
	LOGOUT

SUBTTL	INITIA FAILURE

INIFAL:	MOVE	T1,[POINT 7,TRMBUF]
	MOVEI	T2,[ASCIZ /
  ? Initialization failure/]
	PUSHJ	P,ASCTRN
	SKIPGE	JOBNUM
	  JRST	NOJOB
	MOVEI	T2,[ASCIZ / job /]
	PUSHJ	P,ASCTRN
	MOVE	T2,JOBNUM
	MOVE	T2,LINNAM(T2)
	PUSHJ	P,ASCTRN
NOJOB:	MOVE	T2,FAILNM
	MOVE	T2,FAILTB(T2)
	PUSHJ	P,ASCTRN
INIFIN:	MOVEI	T2,[BYTE (7)15,12,7,0]
	PUSHJ	P,ASCTRN
	PUSHJ	P,CTYMSG
	LOGOUT

SUBTTL	MESSAGE ROUTINES

INIUP:	MOVE	T1,[ POINT 7,TRMBUF ]	;KEEP OPERATOR INFORMED
	MOVEI	T2,[ ASCIZ /
INITIA starting / ]
	PUSHJ	P,ASCTRN
	MOVE	T2,JOBNUM
	MOVE	T2,LINNAM(T2)
	PUSHJ	P,ASCTRN
	MOVEI	T2,[ ASCIZ /
/ ]
	PUSHJ	P,ASCTRN
	PUSHJ	P,CTYMSG
	MOVE	T2,JOBNUM		; Get it back
	POPJ	P,

ASCTRN:	HRLI T2,(POINT 7,0)
ASCTR1:	ILDB T3,T2
	JUMPE T3,CPOPJ
	IDPB T3,T1
	JRST ASCTR1

DECTRN:	IDIVI T2,^D10
	HRLM T3,(P)
	SKIPE T2
	PUSHJ P,DECTRN
	HLRZ T2,(P)
	ADDI T2,"0"
	IDPB T2,T1
	POPJ P,


CTYMSG:	MOVEI T2,0			; insure that it's an ASCIZ
	IDPB T2,T1
	MOVE T1,[SUUMSG,,TRMBUF]
	SETUUO T1,			; output TRMBUF to CTY
	  JFCL
	MOVE T1,[POINT 7,TRMBUF]	; in case we do more output
	POPJ P,

SUBTTL	FUNCTIONS

NODATE:	MOVEI T2,[ASCIZ /
  ? Date and time not set /]
	PUSHJ P,ASCTRN
	PUSHJ P,CTYMSG
BELLP:	MOVE T1,[SUUMSG,,[BYTE (7) 7,7,0]]
	SETUUO T1,
	 JFCL
	MOVEI T1,1	;SEND BELLS EVERY SECOND
	SLEEP T1,
	MOVE T1,[.CNDAT,,.GTCNF]
	GETTAB T1,
	 MOVEI T1,0
	JUMPL T1,BELLP	;UNTIL TIME SET

	MOVEI T2,[ASCIZ /
       Data and time set at /]
	PUSHJ P,ASCTRN
	POPJ P,

; LUD Hash function
RND:	ADD T2,N	;RANDOMIZE FUNCTION
	ROTC N,-22
	MOVEI T5,5
RND1:	MOVE T6,T2(T4)
	MUL T6,[5*5*5*5*5*5*5*5*5*5*5*5*5*5*5]
	ADDM T7,T3(T4)
	AOJE T4,RND2
	MOVNI T4,1
	TRNE T2,1
	SKIPL T3
	MOVEI T4,0
	EXCH T1,T3
RND2:	SOJG T5,RND1
	POPJ P,

SUBTTL	FIND LUD INFO

LUDINF:	SETZM	FAILNM			;REASON FOR FAILURE
	OPEN	SYS,SYSBLK
	  POPJ	P,			;FAILURE REASON 0
	AOS	FAILNM
	MOVE	N,[LUDCPY,,LUDNAM]
	BLT	N,LUDNAM+3		; Copy LUD lookup blok
	LOOKUP	SYS,LUDNAM
	 POPJ	P,			;FAILURE REASON 1
	AOS	FAILNM
	MOVE	N,(T1)
	MOVEM	N,INNAM
	MOVE	N1,1(T1)
	MOVEM	N1,INNAM+1
	MOVE	T1,[555555555555]
	MOVE	T2,[361275431652]
	MOVE	T3,[612754316523]
	MOVEI	T4,0
	REPEAT	4,<PUSHJ P,RND>
	XOR	T3,T2
	MOVE	N,T3
	TLZ	N,400000
	IDIVI	N,LUDHSH
	MOVEM	N1,HSHBLK		;BLOCK NUMBER TO START ON
	XOR	T1,T3
	JUMPE	T1,CPOPJ		;FAILURE REASON 2 (NOT FOUND)
	MOVEM	T1,HSHNAM
	AOS	T2,HSHBLK		;BLOCK TO START ON
SRUS0:	USETI	SYS,(T2)
	INPUT	SYS,COM
	STATZ	SYS,760000
	  POPJ	P,			;ABORT ON ERRORS
	MOVEI	T3,0
SRUSR:	CAMN	T1,BUF+LHUN(T3)
	JRST	FNDUSR			;GOT HIM
NUSER:	SKIPG	T2,BUF+LPPN(T3)
	  JRST	BLKLNK			;LINK WORD
	MOVE	T2,BUF+LLINK(T3)	;LINK
	ANDI	T2,177
	ADD	T3,T2
	CAIL	T3,177
	  POPJ	P,
	JRST	SRUSR			;TRY NEXT

BLKLNK:	JUMPE	T2,CPOPJ		;END OF LINK
	 HRRZS	T2
	CAMG	T2,HSHBLK		;MUST ALWAYS GO UP
	  POPJ	P,
	MOVEM	T2,HSHBLK		;SAVE FOR NEXT TIME
	JRST	SRUS0
FNDUSR:	MOVE	T1,BUF+LPPN(T3)
	MOVEM	T1,INPPN
	MOVE	T1,BUF+LAUN(T3)
	MOVEM	T1,INAUN
	MOVE	T1,BUF+LPRV(T3)
	TLO	T1,JP.NAT		;don't ask to att this job at LOGINNs
	MOVEM	T1,INPRV		;NOW HAVE LOGIN ARGS SETUP
	MOVE	T2,BUF+LLINK(T3)
	ANDI	T2,177
	MOVE	T1,BUF+LBITS(T3)
	AOS	FAILNM			;CAN NOT LOGIN
	TLNE	T1,LNOLOG
	POPJ	P,
	TLNN	T1,LTRUB
	JRST	NOTRU			;WORRY ABOUT TRU CONTROL WORD
	ADDI	T3,1			;Yes, adjust count
	SUBI	T2,1
NOTRU:	CLOSE	SYS,0			;CLOSE FILE, DONE WITH LUD
	TRNN	FL,FLWINI		; Do we want to run INIT CUSP?
	  JRST	CPOPJ1			; No, don't care.
	TRNE	T1,LCSPB		; Yes, is there one?
CPOPJ1:	  AOS	(P)			; Yes, skip return
CPOPJ:	POPJ	P,			; No, all done

	LIT
	VAR

	END STPT
  