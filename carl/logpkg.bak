entry
	Talk,   CTYLog
,	SetLog, LogInfo
;

begin "LOGPKG"

require "(SAILIB)SAIL.DEF" source!file;
require "(MPL)UUOSYM.DEF"  source!file;
require "(CARL)VMFILE.REQ" source!file;
require "(CARL)DAYTIM.REQ" source!file;

Define LogTry  = 25;			! times to try logging to file ;
Define LogWait = 200;			! ms to wait while trying ;

Define Gettab(x,y) = { calli( !xwd( (x), (y) ), calli!GETTAB ) };
Define !Job(x) = { ( (x) land '7777 ) };

Define DayStamp  = { cvSDat( !lh( GetTDT ) ) };		! day  only ;
Define TimeStamp = { cvSTim( !rh( GetTDT ) ) };		! time only ;
Define DateStamp = { TymDay( GetTDT ) };		! date-time ;

Own integer OldZone, NewZone;		! Time Zone stuff  ;


Internal Simple procedure Talk( integer job; string text );
! ----------------------------------------------------------------------;
!									;
!	Talk( Job, Text )						;
!		Output the specified Text to the port connect to Job	;
!		by executing the SETUUO call to talk to a frame.	;
!									;
! ----------------------------------------------------------------------;
begin "Talk"
    Define T1=1, T2=2, !stTLK = '10;
    Label Talk, TalkOk;

    begin!code				! simulate OUTSTR to Job (CTY) ;
	Move	T2,Text;		! string byte pointer ;
	Movei	T1,Text;		! addr of byte pointer ;
	Hrlz	T1,-1(T1);		! setup size variable ;
	Hrr	T1,Job;			!  to job Job (0 = CTY ) ;
Talk:	Hrri	0,T1;			! pointer to block ;
	Hrli	0,!stTLK;		! function to talk ;
	uuo!SETUUO;			! doit ;
	  caia;				! error - skip ;
	 jrst	TalkOk;			! ok, so leave ;
	Hrrzi	0,200;			! 200 ms wait ;
	uuo!HIBER;			! then setup to ;
	  jfcl;				!  try it all ;
	jrst	Talk;			!  again ;
TalkOk:
    end;

end "Talk";


Internal Simple boolean procedure CTYLog( String Text; Boolean Date(false) );
! ----------------------------------------------------------------------;
!									;
!	CTYLog		Routine to print a string on the system CTY	;
!			stamped with the current GMT date and time.	;
!									;
! ----------------------------------------------------------------------;
begin

    Talk( 0, (if Date			! if date expected ;
	      then DateStamp		!  today's daytime ;
	      else TimeStamp		! else -time only- ;
	      ) &
	     " GMT " &			! mark it as GMT ;
	     Text &			! add the message ;
	     Crlf );			! and crlf ;

    if ( !lh(Gettab(-1,!gtLIN)) = !lh(cvsix("TTY")) )
     then Talk( calli(0,calli!PJOB), TimeStamp&" GMT "&Text&Crlf );

    return( false );

end;


own string  LogFile;
own boolean SystemCritical;

simple procedure LogAll( String Name, Text; Integer Tries(LogTry) );
! ----------------------------------------------------------------------;
!									;
!	LogAll		Routine to make an entry to the appropriate	;
!			job queue log file.  Automatically adds CRLF	;
!			to the end of the message.			;
!									;
! ----------------------------------------------------------------------;
begin "Log Job Info"
    Integer Chan, Timer;

    for Timer_ 1 upto Tries
     do begin "get file"			! get file in $Update ;
	if ( 0 < Chan_ VMFile(Name, VM$Append lor VM$Update) )
	 then done;
	calli( !Xwd(0,LogWait), calli!HIBER );	! sleep a bit ;
     end "get file";

    if ( Chan leq 0 )				! all ok? ;
     then if ( SystemCritical )
	   then CTYLog( "No access: "&Name )	! not exactly... ;
	   else
     else begin "setup file"			! yes! ;

	VMText( Chan, TimeStamp&Text&Crlf );	! write time info  ;
	VMFree( Chan );				! release  channel ;

     end "setup file";

    if ( !lh(Gettab(-1,!gtLIN)) = !lh(cvsix("TTY")) )
     then Talk( calli(0,calli!PJOB), TimeStamp&Text&Crlf );

end "Log Job Info";


own string  LogFile;
own boolean SystemCritical;

internal simple procedure SetLog( String File; Boolean Critical( false ) );
begin
    LogFile_ File;
    SystemCritical_ Critical;
end;


internal simple procedure LogInfo( String Text );
LogAll( LogFile, Text, LogTry );


internal simple boolean procedure RunSlf;
! ----------------------------------------------------------------------;
!									;
!	RunSlf		Routine to figure out where you are and run	;
!			the same program.  This assumes that we are	;
!			NOT using a funny extension or were run with	;
!			a load, start or execute command.		;
!									;
! ----------------------------------------------------------------------;
begin "run self"
    Own Safe Integer Array RunBlock[0:5];

    CtyLog( "Restarting by Feature-Test" );

    RunBlock[0]_ Gettab( -1, !gtRDV );
    RunBlock[1]_ Gettab( -1, !gtRFN );
    RunBlock[4]_ Gettab( -1, !gtRDI );

    Calli( location(RunBlock[0]), calli!RUN );
    if not( !Skip! )
     then return(false );

end "run self";


internal simple string procedure CvNAME( integer AUN );
! ----------------------------------------------------------------------;
!									;
!	CvName		Routine to get the username for a specific	;
!			AUN by looking up the UFD.  Uses the .chNXT	;
!			feature to get a channel and releases it to	;
!			preserve outside file/channel integrity.	;
!									;
! ----------------------------------------------------------------------;
begin
    integer NotEof, Chan;
    Preset!with '17, cvSIX( "DSK   " ), 0;
    Own safe integer array Dev[ 0 : 2 ];
    Own safe integer array Look[ 0 : !RBUNM+1 ];

    Look[ !RBCNT ]_ !RBUNM+1;		! PPN -> User;
    Look[ !RBPPN ]_ !Xwd( 1,1 );	! (UFD)  ;
    Look[ !RBNAM ]_ AUN;		! [user] ;
    Look[ !RBEXT ]_ cvSIX("UFD   ");	! .UFD   ;

    Chan_ VMCHan;			! channel to use ;
    Chnior( Chan, Dev[ 0 ], !chOPN );	! open DSK ;
    If ( NotEof_ !skip! )
     then begin
	Chnior( Chan, Look[!RBCNT], !chLK );
	NotEof_ !skip!;
	Chnior( Chan, memory[0], !chREL );
     end;

    If ( NotEof )
     then return( Cv6str(Look[!RBUNM])&Cv6str(Look[!RBUNM+1]) )
     else return( Cvos(!lh(aun))&","&Cvos(!rh(aun)) );
end;

end "LOGPKG";
