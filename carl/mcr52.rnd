.FLAG CAP
\\
.;9-FEB-77-GR
.LM0;.RM70;.F;.J;.SP1;.TS5
<MACRO.DOC -- ^CHANGES FROM ^<V50A(432) TO ^V52(551)
.BR
^FEBRUARY 1977
.FG30
^COPYRIGHT (^C) 1976,1977
.BR
^DIGITAL ^EQUIPMENT ^CORPORATION, ^MAYNARD, ^MASS.
.B 2
^THIS SOFTWARE IS FURNISHED UNDER A LICENSE FOR USE ONLY ON A
SINGLE COMPUTER SYSTEM AND MAY BE COPIED ONLY WITH THE INCLUSION
OF THE ABOVE COPYRIGHT NOTICE. ^THIS SOFTWARE, OR ANY OTHER
COPIES THEREOF, MAY NOT BE PROVIDED OR OTHERWISE MADE AVAILABLE
TO ANY OTHER PERSON EXCEPT FOR USE ON SUCH SYSTEM AND TO ONE WHO
AGREES TO THESE LICENSE TERMS. ^TITLE TO AND OWNERSHIP OF THE
SOFTWARE SHALL AT ALL TIMES REMAIN IN ^^DEC\\.
.B 1
^THE INFORMATION IN THIS SOFTWARE IS SUBJECT TO CHANGE WITHOUT
NOTICE AND SHOULD NOT BE CONSTRUED AS A COMMITMENT BY ^DIGITAL
^EQUIPMENT ^CORPORATION.
.B 1
^^DEC\\ ASSUMES NO RESPONSIBILITY FOR THE USE OR RELIABILITY OF ITS
SOFTWARE ON EQUIPMENT WHICH IS NOT SUPPLIED BY ^^DEC\\.
.T <MCR52.DOC
.PG
<MACRO.DOC -- ^CHANGES FROM <V50A(432) TO ^V52(551)
.BR
^FEBRUARY 1977
.B3.LM0
1.0##<SUMMARY
.b1
^The purpose for this release is to produce a single version of <MACRO for both
the <DEC<SYSTEM-20 and <DEC<SYSTEM-10 by merging versions 51 (from -20) and 50^A (from -10).
^The single version of <MACRO will reduce the current support exposure.
^The functional goals for <MACRO <V52 are as follows:
.B1.LM9.I-4
1.##^ENHANCE <MACRO PROCESSING CAPABILITIES
.B1.I-4
2.##^FIX BUGS
.B1.I-4
3.##^PROVIDE A SINGLE BASIS FOR COHERENT FUTURE DEVELOPMENT.
.B1.I-4
4.##^SUPPORT USE OF EXTERNAL SYMBOLS IN ARBITRARY EXPRESSIONS.
.B1.LM0
<MACRO VERSION 52 IS SUPPORTED BY ^DIGITAL ^EQUIPMENT ^CORPORATION, AND
RUNS ON ALL SUPPORTED MONITORS AS RELEASED.  ^VERSION 52 FULLY
SUPERSEDES ALL PREVIOUS VERSIONS, AND INCLUDES EDITS UP TO _#551.
.b1
<MACRO <V52 REQUIRES FIELD IMAGE <HELPER.REL TO BE ON <SYS: IN ORDER TO TYPE OUT
THE HELP FILE <MACRO.HLP, WHICH SHOULD BE PLACED ON <HLP: OR <SYS:.
.B2.C
***<WARNING***
.B1
<MACRO <V52 REQUIRES THAT THE <REL FILES IT GENERATES BE LOADED WITH <LINK <V3A, WHICH
SUPPORTS THE <POLISH FIXUP CAPABILITY WITH ONE PATCH REQUIRED (^SEE ^ITEM 7 OF 3.1).
.B3.LM0
2.0##<EXTERNAL <CHANGES
.lm9.b1.i-4
1.##^POLISH ^EXTERNALS
.b1
<MACRO GENERATES AND PASSES TO <LINK ^POLISH FIXUPS FOR EXTERNALS SYMBOLS APPEARING
IN ARBITRARY EXPRESSIONS.  ^THESE COMPLEX EXPRESSIONS ARE ALLOWED WHEREVER AN
EXTERNAL SYMBOL WAS ALLOWED PREVIOUSLY.
.b1.i-4
2.##<.IFN <^PSEUDO-OP ADDED, <.IF/.IFN BUGS FIXED.
.b1
^General format is:
.b1.i5
_.<IF symbol, qualifier, _<conditional assembly>
.b1
where qualifier is
.PG.b1.lm14.nj.nf
^^SYMNONYM
MACRO
OPDEF
EXTERNAL
ENTRY
INTERNAL
GLOBAL
LOCAL
LABEL
ASSIGNMENT
ABSOLUTE
RELOCATABLE
LRELOCATABLE
RRELOCATABLE
NUMERIC
OPCODE\\
.b1.lm9.f.j
^Differences from previous version:
.b1.lm13.i-4
A.##^There must be a comma "," after the qualifier and before the conditional assembly.
.b1.i-4
b.##^More qualifiers
.b1.i-4
c.##^Unique abbreviation allowed for qualifier.
.B1.LM9.I-4
3.##<MACRO CALL ARGUMENT HANDLING:
.lm13.b1.i-4
a.##^Tabs and spaces before AND AFTER EACH are eliminated unless
within parentheses or angle-brackets.
.b1
^DIRECTIVE <.ITABM AND <.XTABM ARE USED TO CONTROL THE TAB/SPACE TRIMMING.
.b1.i-4
b.##^Square-brackets are counted and act as quotation brackets when not in angle brackets.
^HENCE THE FOLLOWING <MACRO CALL MAY BE WRITTEN:
.b1.i5
<FOO [<MOVE 1,1
.i10
<MOVE 2,2]
.b1
also,
.b1.i5
<JRST [<FOO 123]
.b1
where <FOO is a defined <MACRO.
.b1
argument list will be terminated on unpaired right parenthesis, square-bracket, or angle bracket.
.b1
<_.DIRECTIVE <MACMPD (<MACRO match paired delimiters) causes the above
described delimiter handling and imply a <.XTABM also (<.ITABM has no effect with <MACMPD).
.PG.b1
^^_.DIRECTIVE NO MACMPD\\ disables the new delimiter handling.  ^Both <.ITABM and <.XTABM may be used
with ^^_.DIRECTIVE NO MACMPD. (_.DIRECTIVE NO MACMPD\\ and <.XTABM together correspond to default of ^V50 and before).
.b1
^Note:##(See ^Appendix for a more detailed write-up on the new <MACRO call handling.)
.lm9.b1.i-4
4.##^Use of "<NO" on a directive which has no logical negative produces an error.
.B1.I-4
5.##^Other new directives
.b1
^^_.DIRECTIVE LITLST--MACRO\\ lists binary in-line for all literals. The listing of literals at "<LIT" is not affected.
.b1
^^_.DIRECTIVE FLBLST\\(first-line binary listing)--causes only the first binary word to be listed for ^Pseudo-op (e.g., <ASCII)
which may generate many words.  ^This makes the listing appearance more like the source
and eliminates generally useless octal output.
.b1
^^_.DIRECTIVE MACPRF\\--Affects assembly when a symbol has both a value and a <MACRO definition.  ^Normally, the <MACRO
1efinition is taken if the symbol appears in the operator field of a statement, otherwise the value is taken.
^^".DIRECTIVE MACPRF\\" causes the <MACRO definition to be taken first always.  ^This is intended
to support programs which use <MACRO definitions as variables.  ^The default
setting is "^^NO MACPRF\\", i.e., compatible with <MACRO-50 and before.
.b1
^^_.DIRECTIVE SFCOND\\(suppress failing conditionals)--when in effect, this suppresses listing of source
lines within assembler conditionals which fail. ^This is intended for use with programs having many
feature test switches and allows listings to be produced which show only the code actually in use.
.b1.i-4
6.##^The <INTERNAL declaration is legal on a symbol declared <OPDEF.
.b1.i-4
7.##^Tags within literals now work properly, and any number may be used.
^Tags may also be used with nested literals.  ^Such tags may be referenced within the scope of a literal
or a group of nested literals.  ^However forward references from outside the literal
or another literal may not be made.  ^Tags defined in a literal, also, may not
appear in any arbitrary arithmetic expression.  <MACRO will interpret them as external
symbols instead and a polish fixup is generated.
.b1.i-4
8.##^The listing output when within literals is generally improved, e.g., the listing
mode (<SALL/LALL/XALL) is properly observed.
.PG.b1.i-4
9.##^The general error message of <LABEL+N has been improved,
where n is a decimal number representing the offset of lines of code
generated from the given label.
.B1.I-5
10.##^When a symbol normally used as an operator is encountered with an
arithmetical or a logical operator immediately following it instead of
a tab or a space as expected, the symbol is interpreted by <MACRO as
a part of an arithmetic or logical expression rather than
as an operator.  ^The opcode value is used in the evaluation of the expression.
.b1.i-5
11.##<MACRO<'s asterisk-level command scanner has been generally
improved.  ^Added features are that <SFD<s are now allowed on
output file specifications, comments are allowed, [<P,PN_<CRLF> no longer
generates a command error, and null extensions are allowed on input file specifications.
.b1.i-5
12.##<RIM, <RIM10 and <RIM10B are now cleared at <PRGEND.
.b1.i-5
13.##^The "<SYN" pseudo-op may be used in a <UNV file.
^The internal storage of a symbol that is declared to be synonymous to an operator
is changed to keep the sixbit operator name as its value.
.b1.i-5
14.##^New universal file format --
.b1.lm14.nj.nf
1st word/   777,,code
2nd word/   <MACRO version _#
.b1.lm9.f.j
where the code field indicates what type of data is contained in this <UNV file.
^It was previously referred as the <UNV version#_#, and has the following bit definitions:
.b1.lm24.ts24.i-10
000001	on, if default arguments specified in <macro definitions
.i-10
000002	on, if ^polish is included
.i-10
000004	must be on to be compatible with previous versions
.i-10
000010	on if new <SYN handling in <UNV
.i-10
000020	on if a <macro version number is written as the second word
.b1.lm9.f.j
<NOTE: <MACRO ^V52 will read <UNV file generated by all previous versions of <MACRO.
^However, a <UNV file generated by <MACRO#^V52(551) will not be read by previous <MACRO<s.
.b1.i-5
15.##^No check will be made with the types of symbols being <PURGE<d with "<PURGE" pseudo-op.
^All specified symbols including undefined and external will be removed from symbol table without error messages.
.b1.i-5
16.##^The coding format for the <MACRO source file <MACRO.MAC has been changed to conform to the <TOPS20 coding convention.
.B3.LM0
3.0##^^KNOWN BUGS AND DEFICIENCIES\\
.B2
3.1##^PROBLEMS FOR WHICH A ^SOLUTION IS ^KNOWN
.b1.lm9.i-4
1.##^For <ALGOL <V6A and ^V7: ^U- and ^Q-errors in ^^ALGDEC, ALGEXP, ALGUTL\\
because of different macro-call argument handling in ^^MACRO V52\\. ^The solution is to put _<#>
around those macro call arguments that contain "un-quoted" and un-matched [,], (or). ^See <FILCOM<s below:
^^
.b1.ts8,16,24,32,40,48,56.rm120.literal
File 1)	DSK:ALGUTL.MAC	created: 1541 14-OCT-1976
File 2)	DSK:ALGUTL.HLD	created: 1440 14-OCT-1976

1)15		    IF <NDEL ELEMENT [:_] OR (NDEL ELEMENT [;(] AND LOOK ELEMENT [NT PROC])>
1)					TEST(E,T,.COLON);$
****
2)15		    IF NDEL ELEMENT [:_] OR (NDEL ELEMENT [;(] AND LOOK ELEMENT [NT PROC])
2)					TEST(E,T,.COLON);$
**************
1)17		      IF <NOT ERRL AND (NDEL ELEMENT [: _] OR (NDEL ELEMENT [;(] AND LOOK EQ NONTYPE PROCEDURE))>
1)					TNGB(ERRL);$
****
2)17		      IF NOT ERRL AND (NDEL ELEMENT [: _] OR (NDEL ELEMENT [;(] AND LOOK EQ NONTYPE PROCEDURE))
2)					TNGB(ERRL);$
**************
1)19	 IF <DEL ELEMENT [BEGIN DO ( [ PROCEDURE]>
1)	EDIT (533)	; SPR # 10-15076  COMPILER LOOPS ON ERROR
****
2)19	 IF DEL ELEMENT [BEGIN DO ( [ PROCEDURE]
2)	EDIT (533)	; SPR # 10-15076  COMPILER LOOPS ON ERROR
**************
1)23			IF <NDEL ELEMENT [ SEMICOLON (  ]>
1)					MOVE	T,NDEL;$
****
2)23			IF NDEL ELEMENT [ SEMICOLON (  ]
2)					MOVE	T,NDEL;$
**************
.end literal
\\
.pg
^^
.literal
File 1)	DSK:ALGEXP.MAC	created: 1557 14-OCT-1976
File 2)	DSK:ALGEXP.HLD	created: 1558 14-OCT-1976

1)13	  IF <NDEL ELEMENT [NOT (]>
1)					MOVE	T,NDEL;$
****
2)13	  IF NDEL ELEMENT [NOT (]
2)					MOVE	T,NDEL;$
**************
1)19	 IF <DEL = ')'> 
1)					DELEL(.RPAR);$
****
2)19	 IF DEL = ')' 
2)					DELEL(.RPAR);$
**************
1)45			IF <NOT(OLDEL=ACTUAL AND DEL ELEM [COMMA )]) AND DEL NE '_'>
1)					CAMN	DEL,ZASS;$
****
2)45			IF NOT(OLDEL=ACTUAL AND DEL ELEM [COMMA )]) AND DEL NE '_'
2)					CAMN	DEL,ZASS;$
**************
1)47	 IF <DEL = ')'>
1)					DELEL(.RPAR);$
****
2)47	 IF DEL = ')'
2)					DELEL(.RPAR);$
**************
.end literal
\\
.b2
^^
.literal
File 1)	DSK:ALGDEC.MAC	created: 1629 14-OCT-1976
File 2)	DSK:ALGDEC.HLD	created: 1610 14-OCT-1976

1)22			IF LEXVAL<TYPE> = STRING
1)					T.S (LEXVAL);$
****
2)22			IF LEXVAL(TYPE> = STRING
2)					T.S (LEXVAL);$
**************
.end literal
\\
.PG.PS58,70.LM9.I-4
2.##<BASICH, a component of, <BASIC gets a ^Q-error when assembled with <MACRO 52 on a line where an error
message text is the argument of a <MACRO call.
.b1
<MACRO 52 terminates the <MACRO argument list upon seeing an unmatched >. ^If ignored, the message
will be truncated. ^Enclose the error message in (#) to indicate > and _< are regular characters. ^See <FILCoM below:
^^
.rm80.b2.literal
File 1) DSK:BASICH.MAC  created: 1210 12-OCT-1976
File 2) DSK:BASICH.BAK  created: 2128 15-OCT-1974

1)65	XFILER: FAIL	(%? STRING RECORD LENGTH > 132 OR < 1%)
1)	XFILR1: TLNN	C,F.QUOT
****
2)65	XFILER: FAIL	%? STRING RECORD LENGTH > 132 OR < 1%
2)	XFILR1: TLNN	C,F.QUOT
**************
.end literal
\\
.b1.lm9.rm70.ps58,70
<NOTE: ^Items 3, 4, and 5, apply only to monitor versions 6.02^A or earlier.
.b1.i-4
3.##<COMMON, a component of <TOPS10 (<V602A) gets 2 ^N-errors when assembled with <MACRO ^V52. ^The errors
occur in the following lines:
.lm22.NF.NJ.b1.i-13
^^
a.##AXXVER==_<BYTE(18) A00CLH(12) A00MVN-_<1- A00SVN/A00JVN>*_<A00DLN/A00DLN > (6) A00SVN+_<1- A00SVN/A00SVN>*A00DLN>
.lm13.b1.i-4
b.##REPEAT Z1/Z2, _<Z1==Z1-Z2>
\\
.b1.F.J
where ^Z2=0.
.lm9.b1
<MACRO ^V52 will give an ^N-error for divide checks. ^Both ^N-errors in <COMMON can be ignored, since the assembled code is correct.
.b1.i-4
4.##^In <FILUUO, a component of <TOPS10 (<V602A and previous versions only), the line
.b1.i5
<AOS-1(P)
.b1
will be assembled as 530000,,-1 since <AOS will be treated as a symbol
in an arithmetic expression. ^This is different from what is intended which is
.b1.i5
<AOS########-1(^P)
.b1
Correct the line so that a tab, rather than "-", immediately follows the
instruction <AOS.  ^The correct assembled code is 530#00#0#17#777777.
.PG.B1.I-4
5.##^When loading ^^TOPS10 REL\\ modules generated by ^^MACRO V52, LINK\\ gives error message:
.B1.I5
^^"MULTIPLY DEFIND GLOBAL SYMBOL WAKE, IN MODULE CLOCK1"\\.
.B1
<WAKE is a <UUO. <MACRO ^V52 makes it global and <WAKE is also defined as a global label in <CLOCK1.
^The solution to this problem is to change the label <WAKE to <WAKEJ
(<MCO 6318 for <TOPS10 6.03).  ^Changes are required in two modules:
.b1.i5
<CLOCK1 (near labels <CKLCH1 and <WAKE)
.b1.i5
<UUOCON (near label <MSLEEP)
.b1
^See <FILCOMS:
^^
.ts8,16,24,32,40,48,56.b2.rm90
.literal
FILE 1) DSK:CLOCK1.MAC  created: 1507 12-OCT-1976
File 2) DSK:CLOCK1.HlD  created: 0944 11-MAY-1976

1)34		CAIE	T3,WAKEJ	;IS THIS JOB SLEEPING?
1)		SOJA	T2,CLKCH2	;NO, LOOK AT NEXT ONE.
****
2)34		CAIE	T3,WAKE		;IS THIS JOB SLEEPING?
2)		SOJA	T2,CLKCH2	;NO, LOOK AT NEXT ONE.
**************
1)54	INTERNAL WAKEJ
1)	EXTERNAL PJBSTS,SSQ,SLPQ
1)	WAKEJ:   MOVE   T2,SSQ		;SLEEP SATISFIED QUEUE CODE
1)		MOVE	J,T1		;JOB NO.
****
2)54	INTERNAL WAKE
2)	EXTERNAL PJBSTS,SSQ,SLPQ
2)	WAKE:	MOVEI	T2,SSQ		;SLEEP SATISFIED QUEUE CODE
2)		MOVE	J,T1		;JOB NO.
**************

File 1) DSK:UUOCON.MAC  created: 1514 12-OCT-1976
File 2) DSK:UUOCON.HLD  created: 1057 27-JULY-1976

1)28		HRLI	T1,WAKEJ##	;ADR. IN RUNCSS WHEN JOB WAKES UP
1)		MOVEI	T2,CLKR
****
2)28		HRLI	T1,WAKE##	;ADR. IN RUNCSS WHEN JOB WAKES UP
2)		MOVEI	T2,CLKR
**************
.end literal
\\
.rm70.ps58,70.lm9.pg.i-4
6.##<LNKERR, a component of <LINK <V3A, gets a ^Q error when assembled with <MACRO ^V52. ^Q-error appears on a line which has an extra
">" at the end.  ^This ">" character was there so that the older versions of <MACRO will assemble the line
correctly. ^The extra ">" is no longer needed.  ^The ^Q-error can be ignored, since the assembled
code <LNKERR is correct.
.b1.i-4
7.##^Very large programs, such as the <TOPS-10 monitor, may not load correctly after being assembled with <MACRO#52.
^This is due to a bug in <LINK#3^A which is fixed by edit 572.  ^The file <LNK572.COR is a correction file for
<FED that will automatically install this edit in <LINK#3^A.  ^We recommend that this edit be installed in <LINK#3^A before
attempting to load monitors That have been assembled with <MACRO#52.
^Refer to <LNK572.MAC for information on how to verify that edit 572 has been installed correctly.
^For more information, see <LNK572.PCO.
.B1.I-4
8.##^FOR CORRECT ASSEMBLY OF <ALGOL ^V7:
.B1
^ADD <.DIRECTIVE <.OKOVL AT THE BEGINNING OF <ALGSTB.
.BR
^ADD <.DIRECTIVE <NO <MACMPD AT THE BEGINNING OF <ALGDEC.
.B1.I-4
9.##<MAKLIB<'S <REL FILE PATCHING FACILITY MAY BE USED WITH <REL FILES
PRODUCED BY <MACRO ^V52.  ^HOWEVER, INCORRECT RESULTS WILL OCCUR IF ANY LOCATION
WHOSE CONTENTS IS THE RESULT OF A POLISH FIXUP IS CHANGED BY <MAKLIB.  ^A FUTURE
RELEASE OF <MAKLIB WILL REMOVE THIS RESTRICTION.
.B1.I-5
10.##^A ONE LINE PATCH (EDIT 531) HAS ALTERED THE LISTINGS OF MACRO
EXPANSIONS UNDER <XALL.  ^THIS EDIT ALLOWS TWO MACRO CALLS ON THE SAME LINE
TO BE LISTED.  ^HOWEVER, IT HAS INTRODUCED THE PROBLEM OF A /80 LISTING
EMBEDDED MACRO CALLS.  ^IF THIS IS NOT DESIRED, REMOVE THE ONE LINE:
.B1.I5
<TLZ <IO,IOMAC
.B1
AT <MAC23: UNTIL A BETTER PATCH IS PUBLISHED FOR BOTH CASES.
.B3.LM0.F.J
3.2##^PROBLEMS TO BE ^FIXED IN THE ^NEAR ^FUTURE
.b1
^The following is a list of problems for which no solution is currently
known, but for which a solution is expected in the near future.  ^The
patches will be published in the <DEC<SYSTEM-10 ^Software ^Dispatch  as
they become known.
.lm9.b1.i-4
1.##^Code in an <IF1 conditional gets an extra line at the bottom
of each page in the list or cross reference of the program.
^The line that <MACRO puts out has a carriage return, but no line feed.
.b1.i-4
.PG.b1.i-4
2.##<MACRO<'s floating point input routines do not agree with those
of other compilers, <FORTRAN in particular.
.B2.LM0
3.3##^PROBLEMS WHICH SHOULD BE ^FIXED IN ^SOME ^FUTURE ^VERSION
.lm9.b1.i-4
1.##^Expressions of the type "<FOO-1(10)" cause <LINK to generate
different values depending on whether <FOO is <INTERNAL or
<EXTERNAL.  ^The reason is that, in the latter case, <LINK
thinks it is fixing up something like <JRST <FOO -1(10), not
<EXP_<FOO -1(10)>, and indeed cannot tell the difference.
^Future versions of <MACRO will have the capability to generate
sufficient information to <LINK to generate the needed fixup,
as well as maintain upward and downward compatibility with
user and system programs.
.b1.i-4
2.##^Handle polish block of greater than 17 words.
.b1.i-4
3.##^Universals are still searched on defining occurrences of
<INTERN and <EXTERN, leading to possibly conflicting
definitions for the symbols specified.  ^Several approaches to
or ways around this problem have been suggested.
.B3.LM0
4.0##<INSTALLATION <INSTRUCTIONS
.b1
^The <MACRO source file as distributed assembles and loads into a
sharable segment.  ^For this RELEASE, ONLY <MACRO.EXE is
being distributed, so that installations with <.EXE support
in their monitors (6.02 or later) can use the <.EXE format without
rebuilding <MACRO.  ^Installations with earlier monitors must build <MACRO from the source file <MACRO.MAC.
.b1
^To install <MACRO version 52 on your system, copy the file <MACRO.EXE to <SYS:.
.B1
^The distributed version of <MACRO.CTL was used to first build <MACRO
using field image (<MACRO <V50A) <MACRO, and then use this created version
to create itself.  ^The two versions of <MACRO ^V52 were then checked for
inconsistencies.  ^NONE WERE FOUND.  ^Customers who wish to rebuild
<MACRO after instg any changes can use <MACRO.CTL as a guide to the
building process.  ^It is unlikely, however, that the <.CTL file can be
executed without modification on most user systems.  ^In particular,
attention should be given to ersatz devices, structure names, <PPN<s and
other such system parameters.
.b1
<MACRO requires field image <HELPER, which is loaded implicitly via an
imbedded <.REQUIRE pseudo-op in the <MACRO source file.
.PG.B3.LM0
5.0##<INTERNAL <CHANGES
.b1.lm16.ts7,16.i-16
;^START OF ^VERSION 51
.i-16
;300		^TURN ON ^POLISH SWITCH
.i-16
;301		^ADD <ERRF FLAG TO SIGNAL NOT TO COLLAPSE LITERALS
.i-16
;302		^HANDLE <EXTERN<S CORRECTLY IF <PSECTS USED
.B1.i-16
;303		^HANDLE <EXP <CONST+EXTERN CORRECTLY (FULL WORD FIXUP)
.i-16
;304		^HANDLE <XWD <POLISH,POLISH CORRECTLY (HALF WORD FIXUPS)
.i-16
;305		^HANDLE SYMBOL TABLE FIXUPS CORRECTLY
.i-16
;306		^ADD <KL10 OPCODES
.i-16
;307		^REMOVE <F40 <UUO<S
.i-16
;310		^ADD <.IFN ^PSEUDO-OP, AND <OPCODE <ARG
.i-16
;311		^POLISH BUG FIXES, STACK LARGER IF ^POLISH (<DLM)
.i-16
;312		<.IF/.IFN - COMMA TO SEPARATE SYMBOLS, FIX BUGS (<DLM)
.i-16
;313		<MACRO <ARG<S - PASS LEADING TAB/SPACE, COUNT [] (<DLM)
.i-16
;314		^LIST BINARY FOR LITERALS IN LINE IF <LITLST (<DLM)
.i-16
;315		^SKIP TAB/SPACE AT END OF <MACRO <ARG<S (<DLM)
.i-16
;316		(^DELETED)
.i-16
;317		^ACCUMULATE ERROR FLAG DURING MULTI-LINE <LIT (<DLM)
.i-16
;316 - 421 IN ^VERSION 50^A
.i-16
;422		^IMPROVE ERROR MSG _& HANDLING IN LITERAL (<DLM)
.i-16
;423		^OPTIONAL LONG FILE NAME SUPPORT (<ASM)
.i-16
;424		^ADD <FLBLST DIRECTIVE (<DLM)
.i-16
;425		^ADD <UUOSYM SWITCH (<DLM)
.i-16
;426		^MAKE <MACRO NAME RECOGNIZED BEFORE SYMBOL IN <EXP IF <MACPRF (<DLM)
.i-16
;427		(^DELETED)
.i-16
;430		^MORE CONSISTENT HANDLING OF EXPRESSIONS AND STATEMENTS (<DLM)
.i-16
;431		^REMOVE ^EDIT 217, CAUSED BUGS AND LISTING SCREWUPS (<DLM)
.i-16
;432		<SFCOND DIRECTIVE TO SIMULATE <XLIST IN <IF<'S WHICH FAIL (<DLM)
.i-16
;433		^FLUSH LEADING AND TRAILING TABS _& SPACES IN <MACRO <ARG<S (<DLM)
.i-16
;434		^FIX BUG CAUSED BY CORE EXPANSION WHILE DUMPING <SYMTAB (<DLM)
.i-16
;435		^ALLOW <INTERN OF SYMBOL DECLARED AS <OPDEF (<DLM)
.i-16
;436		^BETTER HANDLING OF RELOCATION COUNT FOR ALL OPERATORS (<DLM)
.i-16
;437		<.PSECT ^PSEUDO-OPS REMOVED
.i-16
;^START OF ^VERSION 52
.i-16
;440		^TENEX SWITCH REMOVED
.i-16
;441		^ERROR FOR <NO <DIRECTIVE WHICH HAS NO LOGICAL OPPOSITE
.i-16
;442		^FIX LOSING OF FIRST CHARACTER AFTER TAPE ^PSEUDO-OP FOLLOWED BY AN <EOF
.i-16
;443		^FIX ^Q ERROR WITH 2 NESTED REPEATS ENDING ON THE SAME LINE
.i-16
;444		^HANDLE <SYM=_<Z <POLISH> CORRECTLY
.i-16
;445		^HANDLE <RUBOUT<S (177) IN <MACRO CALL ARGUMENT
.i-16
;446		^REMOVE : OR ! AFTER MULTIPLY DEFINED TAG WAS FOUND
.i-16
;447		^ALLOW <REL+REL AND <ABS-REL, THUS ASSUMING THEY ARE PART OF LARGER <EXP
.i-16
;450		^IF <MACMPD, <.DIRECTIVE <.ITABM HAS NO EFFECT.
.PG.i-16
;451		^ADDED ERROR MESSAGES <REL FILE <OPEN ERROR AND <LST FILE <OPEN ERROR FOR <TOPS16
.i-16
;452		^ALLOW ^POLISH IN AN <UNV FILE
.i-16
;453		^A-ERROR WHEN <ARG2 <ABR. OF <.IF/.IFN IS NOT UNIQUE
.i-16
;454		^BETTER HANDLING OF <UNV VERSION DIFFERENCES <KLUDGE FOR ^VERSION 4 STILL IN
.i-16
;455		^DON'T COLLAPSE LITERAL CONTAINING ^POLISH ON <PASS1
.i-16
;456		^FIX BUG WITH ^POLISH IN PHASE CODE
.i-16
;457 - 461 IN ^VERSION <50A
.i-16
;462		^BUG FIXES IN <OPDEF, <.CPU. VALUES
.i-16
;463		^ALLOW: <IFE ^A##/<IFN ^A## GIVING <F/T RESPECTIVELY WITHOUT ERROR.
.i-16
;464		HANDLE _<POINT N,POLISH,M> CORRECTLY.  NOTE: IN ANGLE-BRACKETS
.i-16
;465	(20036)	^IMPLEMENT "<%MCRSOC ^STATEMENT ^OUT ^_F ^ORDER <.COMMON [<SYMBOL]" MESSAGE (SAME AS <50A(430))
.i-16
;466	(^NONE)	^CLEAN UP UNIVERSAL <I/O ERROR MESSAGES (<501(431))
.i-16
;467	(20472)	^FIX SSPURIOUS "^^NO END STATEMENT"\\ ON <PASS2 (<50A(435))
.i-16
;470		^FIX DEFAULT <ARG READ IN FOR DEFINES IN <MACRO<S
.i-16
;471		^HANDLE ^^X=ASCIZ/ (MULTIPLE LINE TEXT)../\\  CORRECT
.i-16
;472		^HANDLE ^^X=_<MOVEI 1,[POLISH]>\\ CORRECTLY.  ^NOTE: <POL IN <LIT
.i-16
;473	(19585)	^REWORK ^EDIT 373 (^SAME AS <50A(425))
.i-16
;474	(<Q0390)	^COUNT PAGES CORRECTLY ON <PRGEND (<50A(433))
.i-16
;475	(20681)	^FIX LOST PHASE ERROR ON "<END" BY FORCING EARLY CHECK WHEN NECESSARY (<50A(436))
.i-16
;476	(20779)	^ALLOW <SFD<'S ON OUTPUT FILE SPECIFICATION (<50A(437))
.i-16
;477		^FIX BUG WITH LISTING OF TITLE LINES WHEN <XLIST IS IN EFFECT
.i-16
;500		<IFDEF/IFNDEF CHECKS FOR SYMBOL BEFORE <SYN/OPD/MAC WHEN BOTH EXIST
.i-16
;501		^ENLARGE <DEVBUF TO BLOCK 12--CAUSED PROBLEM WITH LONG FILE NAME <CREF
.i-16
;502		^FIX "^P" ERRORS WHEN SYMBOL FORWARD-REFERENCED ACROSS <LIT
.i-16
;503		^FIX <ILL.MEM.REF. DUE TO <UE ERROR WHILE SETTING-UP ^POLISH
.i-16
;504		^HANDLE "@" CORRECTLY WITH ^POLISH <FWF
.i-16
;505		^P-ERROR ONLY IF <VAR STARTING ADDRESS ON <PASS2 IS <.GT. <PASS1
.i-16
;506		^FIX <ILL-MEM-REF DUE TO CHANGE IN <MACRO <ARG HANDLING--GIVE <MACRO EXPANSION ERROR INSTEAD.
.i-16
;507		^MAKE QUOTES QUOTING CHARS IN <MACRO CALL ARGS, I.E., "[","("
.i-16
;510		^WHEN <.IF/.IFN <ARG1 APPEARS TWICE IN SYMBOL TABLE, MERGE THE FLAGS
.i-16
;511		^CHECK FOR A UNIVERSAL FILE WHICH IS REALLY NOT AN <UNV FILE
.i-16
;512		^REMOVE STICKY DEVICE FOR -16
.i-16
;513		^FIX BUG WITH PROGRAM BREAK WHEN <LIT-<COLLAPSE DIFFERENTLY BETWEEN THE TWO PASSES
.i-16
;514		^FIX BUG WITH ERROR COUNT WHEN A SYMBOL DECLARED <INTERNAL WAS NEVER REFERENCED
.PG.i-16
;515	(<Q00881)	^DON'T BOTHER WITH ^P-ERROR IN <VAR IF <VARCNT IS ZERO
.i-16
;516	(<Q00855)	^FIX BUG WITH TAGS IN NESTED LITERALS
.i-16
;517	(<Q00856)	^GET RID OF EXTRA <ALPHA<S AT THE END OF SWITCH
.i-16
;516		^ALLOW TAG FIXUP IN THE SCOP OF A LITERAL (NESTED <LIT<S)
.i-16
;521	(<Q00888)	^FIX LISTING OF <OPDEF<S IN <MACRO<S UNDER <SALL
.i-16
;522		^FIX BUG WITH <.DIRECT <FLBLST
.i-16
;523		^USE ONLY <RADIX-50 CHARS FOR PROGRAM NAME
.i-16
;524		^HANDLE [<P,PN_<CR-LF> AT COMMAND LEVEL
.i-16
;525		^CLEAR <RIM FLAGS AT <PROGEND
.i-16
;526	(<Q00917)	^HANDLE -1 RELOCATIONS DOING ^POLISH WITH OPERATORS +, -
.i-16
;527	(<Q00918)	^REPLACE <HALT WITH "^EXPRESSION ^PARSING ^PROBLEM" <ERR <MSG
.i-16
;530	(<Q00872)	^FIX LISTING BUG WITH COMMENT ^PSEUDO-OP
.i-16
;531	(<Q00880)	^FIX BUG WITH LISTING OF <MACRO CALL UNDER <XALL
.i-16
;532	(<Q00889)	^FIX <LABELOFFSET ERROR MESSAGE
.i-16
;533	(<Q00747)	^REMOVE CODE TO <LOOKUP/RENAME LISTING FILE BEFORE ENTERING A NEW ONE
.i-16
;534		^FIX ^Q-ERROR WHEN ENCOUNTERS A NULL CHAR BEFORE ] IN <LIT
.i-16
;535		^HANDLE <UNARY MINUS IN ^POLISH
.i-16
;536		^CLEAN UP
.i-16
;537		^SETS </U ON ALL FATAL ERRORS WHICH CONTINUE ASSEMBLY
.i-16
;540		^A-ERROR IF SYMBOL MISSING FROM LEFT OF =
.i-16
;541		^CALL <XCEEDS INSTEAD OF CALL <XCEED IN <LBLFIX
.i-16
;542		^BETTER HANDLING OF <SYN IN ^UNIVERSAL FILE
.i-16
;543		^WRITE <MACRO VERSION NUMBER INTO THE 2ND WORD OF A <UNV FILE
.i-16
;544		^REMOVE <OPCODE<S <PXCT(107) AND <SXCT(106).
.i-16
;545		^STORE THE FIRST ON <PASS1 ONLY IF PAGE 1.
.i-16
;546	(<Q1079)	^STOP LOOPING OF "^POLISH ^TOO ^COMPLEX" <MSG WHEN ^POLISH >17 WORDS.
.i-16
;547		^CHECK OPERATOR INDEX RANGE WHEN DOING ^POLISH
.i-16
;550		^FIX <SUBTTL AGAIN
.i-16
;551		^FIX ^POLISH WITH POINT
.i-16
;*****<END <OF <REVISION <HISTORY*****
.B2.lm0
6.0##<SUGGESTIONS
.B2
6.1##^SUGGESTIONS ^TO ^THE ^USERS
.b1.lm9.i-4
1.##^USERS ARE WARNED THAT THEY SHOULD BEGIN TO SEARCH <UUOSYM IN THEIR <MACRO PROGRAMS,
AS <CALLI<S WILL DISAPPEAR FROM <MACRO IN SOME FUTURE VERSION.
.b1.i-4
2.##^IF YOU FIND A WORKING <MACRO PROGRAM NO LONGER ASSEMBLES WITH <MACRO <V52, AND YOU
ARE GETTING BIZARRE ERRORS, SUCH AS "^NO <END ^STATEMENT ^ENCOUNTERED" OR A BUNCH
OF ^U- OR ^Q-ERRORS, TRY THE FOLLOWING TWO THINGS BEFORE ANYTHING ELSE:
.b1.lm13.i-4
A.##^PUT IN "<.DIRECTIVE <NO <MACMPD" AT THE BEGINNING OF YOUR PROGRAM.  ^THIS DIRECTIVE
TELLS <MACRO TO DO THE OLD MACRO-CALL ARGUMENT PROCESSING.
.PG.b1.i-4
B.##^LOOK FOR "UN-QUOTED", UN-MATCHED [,], (,) IN A MACRO CALL LINE.  ^WHEN YOU
FIND THEM, QUOTE THEM WITH _<#>, OR WHATEVER IS APPROPRIATE.
.B2.LM0
6.2##^SUGGESTIONS FROM THE ^USERS
.b1
^THE FOLLOWING IS A LIST OF SUGGESTIONS ACCUMULATED FROM VARIOUS SOURCES.  ^THE
APPEARANCE OF A SUGGESTED CHANGE IN THIS LIST DOES NOT IMPLY ANY COMMITMENT OR INTENT
ON THE PART OF <DEC TO IMPLEMENT ANY SUCH CHANGE.
.b1.lm9.i-4
1.##^USE A HAS TABLE INSTEAD OF BINARY SEARCH.  ^ADD A SWITCH TO SPECIFY THE HAS SIZE.
.b1.i-4
2.##^BETTER CORE MANAGEMENT SCHEME.
.b1.i-4
3.##^SEARCH <UUOSYM.
.b1.i-4
4.##^USE <MACTEN AND <JOBDAT.
.b1.i-4
5.##^ALLOW CURVY BRACKETS TO WORK THE SAME AS ANGLE BRACKETS _<#> FOR CONDITIONALS, <REPEAT<S, <IRP<S, ETC.
.b1.i-4
6.##^ADD AN ERROR FILE TO CONTAIN ALL ASSEMBLY ERRORS TO BE USED WITH </N SWITCH.
.b1.i-4
7.##^ALLOW THE LINE CONTINUATION CHARACTER (_^__) TO WORK OVER END-OF-MACRO, <-IRP, ETC.
.b1.i-4
8.##^USE MONITOR MESSAGE LEVELS (<JW.WFL...) FOR <?MCRXXX ERRORS.
.pg.lm0
.fg5.c
<APPENDIX
.b3
^^NEW MACRO CALL ARGUMENT HANDLING:\\
.br
=================================
.b2
^^I.##GENERAL FORMAT\\
.br
####--------------
.b1
^A <MACRO ^CALL HAS THE GENERAL FORMAT:
.b1.i5
(1)##^^NAME ARG1,ARG2,\\ETC.
.B1.I15
OR
.B1.I5
(2)##^^NAME (ARG1,ARG2,\\ETC.)
.b1
WHERE:
.ts15.b1.lm15.i-10
<NAME	IS THE NAME OF THE <MACRO BEING CALLED
.b1.i-10
<ARG1,ARG2,<ETC.
.br
IS THE ARGUMENT LIST.  ^THE ARGUMENTS IN THE ARGUMENT LIST ARE SEPARATED BY COMMAS.
^THE ARGUMENT LIST IS TERMINATED BY A <CR-LF OR A SEMICOLON IN FORM (1) AND
CLOSE PARENT, ), IN FORM (2)
.b1.lm0
^EXAMPLE:
.b1.lm20.ts20,37.i-15
<FOO <A,B,C	<FOO HAS 3 <ARG<S:	^A
.br
	^B
.br
	^C
.b1.lm0
^NOTE:##<FOO IS ASSUMED TO BE DEFINED AS A <MACRO AND IS USED
THROUGHOUT IN THE REMAINDER OF THIS WRITE-UP.
.PG.B3.LM0
^^II.##SPECIAL CHARACTERS\\
.br
#####------------------
.B3
1.0##^^THIS DISCUSSION APPLIES TO FORM 1 ONLY.\\
.B1
^THE FOLLOWING CHARACTERS HAVE SPECIAL MEANINGS WHEN THEY APPEAR IN THE <MACRO ^CALL LINE,
UNLESS THEY ARE "<QUOTED" BY THE ^SPECIAL ^QUOTING ^CHARACTERS.  ^THIS
RULE ALSO APPLIES TO QUOTING CHARACTERS THEMSELVES.
.b1.lm20.ts20.i-15
,#^COMMA	^DELIMITS AN ARGUMENT
.b1.i-15
<CR-LF	^TERMINATES AN ARGUMENT LIST
.b1.i-15
;#^SEMI-COLON	^TERMINATES AN ARGUMENT LIST AND STARTS THE COMMENT
.B1.LM0
^SPECIAL ^QUOTING ^CHARACTERS:
.b1.lm20.ts20.i-15
_<#>	^ANGLE ^BRACKETS
.br.i-15
(#)	^PARENTHESIS
.br.i-15
[#]	^SQUARE ^BRACKETS
.br.i-15
"#"	^QUOTE ^MARKS
.B1.LM0
^NOTE:##^SINGLE-^QUOTES ARE NOT SPECIAL QUOTING CHARACTERS.
.B1.LM9.I-5
1.1##^THE ^SPECIAL ^QUOTING ^CHARACTERS DO NOT DELIMIT ARGUMENTS.  ^THEIR FUNCTION
IS MERELY TO TELL THE <MACRO ASSEMBLER TO TREAT ALL CHARACTERS ENCLOSED AS REGULAR CHARACTERS.
.b1.i-5
1.2##^THE ^SPECIAL ^QUOTING ^CHARACTERS ARE ALWAYS PART OF THE ARGUMENT EXCEPT
FOR THE FOLLOWING EXCEPTION:
.B1.LM15.I-2
_.#^IF A _< IS ENCOUNTERED AS THE FIRST CHARACTER (INCLUDING SPACES) OF THE ARGUMENT LIST
OR AS THE FIRST CHARACTER AFTER AN UNQUOTED ^COMMA _<#> ARE TREATED AS
QUOTING CHARACTERS, BUT THEY ARE NOT INCLUDED AS PART OF THE ARGUMENT.
.B3.LM0
2.0##<FORM 2
.B1
^IN FORM 2, THE OUTERMOST (#) ARE NOT QUOTING CHARACTERS.  ^THEY ARE
ARGUMENT LIST DESIGNATORS.  ^IF THIS FORM IS USED, THE ONLY SPECIAL QUOTING
CHARACTERS ARE ANGLE BRACKETS, _<#>.  ^THEY FOLLOWED THE EXCEPTION RULE DESCRIBED IN 1.2.
^HANDLING OF ^FORM 2 HAS NOT CHANGED FROM THE PREVIOUS VERSION OF <MACRO.  ^MOST
OF THE EXAMPLES GIVEN IN THE REMAINING OF THIS DISCUSSION WILL BE USING ^FORM 1.
.PG.B3
3.0##^^WHY THE NEW FORM 1 HANDLING?\\
.B1
^PRIOR TO ^VERSION 52, THE ONLY QUOTING CHARACTERS WERE _<#>.  ^BY MAKING
_<#>, [#], (#), AND "#", QUOTING CHARACTERS, WE NOW CAN WRITE:
.b1.lm6.ts26,35.nj.nf
<FOO#_<[<MOVE#1,1		<FOO#[<MOVE#1,1
######<MOVE#2,2]>	AS	#####<MOVE#2,2]
.b1
<FOO#_<",">	AS	<FOO#","
.b1
<FOO#_<<A,_<Z#^B>>	AS	<FOO#<A,_<Z#^B>
.lm0.b1.f.j
^THIS WAY, WE DON'T NEED TO WRITE THE OUTERMOST _<#>.  ^A <MACRO <CALL LOOKS
MORE LIKE AN INSTRUCTION.  ^HOWEVER, WHEN WE WANT
THE QUOTING CHARACTERS TO BE TREATED AS REGULAR CHARACTERS, THEY MUST BE
QUOTED BY A PAIR OF DIFFERENT QUOTING CHARACTERS.
.lm0.pg
^^
III.##EXAMPLES OF USING SPECIAL QUOTING CHRACTERS:
.br
#####---------------------------------------------
.f.j.lm4.b1.i-4
1.##When you want Commas, Semi-colons, and CR-LF to be treated as regular characters:
.b1.lm4.ts26,43
FOO _<A,B>,C	FOO has 2 ARGs:	A,B
.br
		C
.lm26.f.j
The Comma quoted by _<#> is treated as a regular character. Because _< is the
first character, the first ARG is A,B not _<A,B>. _<#> are not part of ARG.
.b1.lm4.ts26,43
FOO C,_<A,B>	FOO has 2 ARGs:	C
.nj.nf
		A,B
.lm26.f.j
_<#> are not part of 2nd ARG, since _< is the first character after an unquoted comma.
.b1.lm4.f.j
FOO C_<A,B>	FOO has 1 ARG:	C_<A,B>
.br
	_<#> are part of the argument.
.b1.lm4.nj.nf
FOO#_<This is a
#####multi-line
.f.j.rm70.br.lm43.i-39
#####text argument>	FOO has 1 ARG:	All the characters in between _<#> including spaces and CR-LFs.
.lm4.ts26,43
	_<#> are not part of ARG.
.b2.lm4.i-4
2.##When you want a Special Quoting Character to be treated as
a regular character:
.lm4.b1.nj.nf.ts26,43
FOO#_<ASCIZ/[ is part
.f.j.br.lm43.ts26,43.i-39
#####of the text/>	FOO has 1 ARG:	All the characters in between _<#> including [.
.br.lm4
	_<#> are not part of ARG
.b1.ts26,43
FOO [MOVE A,1(B)
.br
#####JRST XYZ]	FOO has 1 ARG:	[...]
.br
	(#) are treated as regular characters.
.br
	[#] are part of ARG
.b1
FOO "["	FOO has 1 ARG:	"["
.br
	[ is treated as a regular character.
.br
	"#" are part of ARG
.b1
FOO _<">	FOO has 1 ARG:	"
.br
	" is treated as a regular character.
.br
	_<#> are not part of the ARG.
.pg.lm0
3.##Examples With (...)
.b1.lm4.ts26,43.nj.nf
FOO (A,B,C)	FOO has 3 ARGs:	A
		B
		C
.f.j.lm26
\\
^FORM 2 IS USED HERE.  (#) DESIGNATES THE <ARG
LIST AND THE ^COMMASDELIMITE THE ARGUMENTS.
^THIS CASE IS SAME AS <FOO <A,B,C^^
.b1.lm4.nj.nf.ts26,43
FOO A,(B,C)	( not the first char;
	FOO has 2 ARGs:	A
		(B,C)
	(#) are part of the ARg
.b1
FOO TABLE-1(AC)	FOO has 1 ARG:	TABLE-1(AC)
	(#) are part of ARg
.f.j.b1.lm43.ts26,43.i-39
FOO (?LENGTH >132)	FOO has 1 ARG:	all the
characters in between (#) including _<. (#) are not part of the ARG.
.b1.lm4.f.j.ts26,43.i-4
4.##Examples with _<...>
.b1.lm4.nj.nf
FOO _<A,B,C>	_< is the first char--
	FOO has 1 ARG:	A,B,C
	_<#> are not part of ARG
.b1
FOO A,_<B,C>	_< is not first char--
	FOO has 2 ARGs:	A
		_<B,C>
	_<#> are part of ARG
.b1
FOO _<_<POINT 7,0>>	FOO has 1 ARG:	_<POINT 7,0>
	The outer _<#> are not part of ARg.
.b1.lm4.f.j.i-4
5.##Examples with [...]
.b1.lm4.nj.nf
FOO [XWD 1,L1
#####XWD 2,L2]-1(AC)	FOO has 1 ARG:	[...]-1(AC)
	[#],(#) are all part of ARG
.b1.lm4.f.j.i-4
6.##Examples with "..."
.b1.lm4.nj.nf.ts26,43
FOO "(",0	FOO has 2 ARGs:	"("
		0
	"#" are part of ARG
.b1.lm4.nj.nf
FOO#"This is a
#####multi-line
.f.j.br.lm43.i-39
#####text argument"	FOO has 1 ARG:	all the characters enclosed by "#" including "#".
.PG.LM0
^^IV.##OTHER RULES FOR FORM 1\\
.BR
#####----------------------
.B1.LM9.I-4
1.##^NESTING
.B1
^ONLY ANOTHER _<#> MAY BE NESTED IN A _<#>.
.BR
^ONLY ANOTHER [#] MAY BE NESTED IN A [#].
.BR
^ONLY ANOTHER (#) MAY BE NESTED IN A (#).
.B1
^NO NESTING WITH ^QUOTE-MARKS.
.B1.I-4
2.##^ALL LEADING AND TRAILING SPACES AND TABS FOR EACH ARGUMENT ARE IGNORED UNLESS "^QUOTED".
.B1.I-4
3.##^AN UNMATCHED >, ), ], TERMINATES THE ARGUMENT LIST.
.B3.LM0
[^END OF <MCR52.DOC]
    mhTM