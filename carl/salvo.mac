	TITLE	SALVO	ORIGINAL NAME FOR BATTLESHIP
	SUBTTL	BY CARL A BALTRUNAS	Summer 1974, ..., Summer 1979!

	SEARCH	CARL,JOBDAT

	.DIRECTIVE	FLBLST	;LIST FIRST LINE OF BINARY ETC.


	PNT==P3		;BYTE POINTER
	APNT==P4	;AUX BYTE POINTER
	FLAG==13	;A FLAG FOR SPECIAL CASES
	AFLG==14	;AN AUX FLAG IF NEEDED

	SHIPS==15	;SHIPS FLAG LOCATION
	SUB==L		;SUBROUTINE CALLER IF NEEDED

	SALVOS=7	;THIS IS THE NUMBER OF SHOTS TO BE MADE
 
	VWHO==1
	VMAJOR==1
	VMINOR==0
	VEDIT==7
 
	LOC	.JBVER
	EXP	<VWHO>B2!<VMAJOR>B11!<VMINOR>B17!<VEDIT>B35
	RELOC
	Subttl	Revision History

Comment	|


		Revision History
		----------------

	Salvo was originally begun in the summer of 1974 as a project
	to help me learn MACRO-10.  Due to many things, and my avid
	dilligence in keeping backup copies on various different tapes
	and disk areas, I lost track of which backup copy was which.
	In September 1974, I had a version which worked except for 3
	small bugs.  Unfortunately, on October 1, I could not find it.

	Thus, Salvo sat on various dectapes and magtapes until 1976, at
	which time I spent a brief couple of weeks getting all the
	various versions on a single tape/disk area.  Again, the game
	sat around with no changes.

	In July 1979, the version which was dated [194] and [3B6] were
	revised and the interlock sections were re-written.  That was
	apparently all that the game needed.  It worked and works!!!!!

	To all who scoffed!!   "SALVO LIVES AGAIN" !!!!!

[ End Comment ] |
;Edit Zero, Release 1 -- Salvo.Mac  (SALVO.1-1) -- July 13, 1979.
;
;Program released on July 14,1979 as SALVO %1-1
;
;Edit 1	July 15,1979 -- Carl A Baltrunas
;
;	Added "!" and ";" commands in all command positions for the
;	ability to have comments.
;
;	Changed the calling interfaces so that more routines were
;	callable from more places.
;
;Edit 2	July 23,1979 -- Carl A Baltrunas
;
;	Fix type-ahead problem with interlock.
;
;Edit 3 July 24,1979 -- Carl A Baltrunas
;
;	Allow all 2nd half commands except shooting to work from all
;	three waiting points in part2.  (More Human engineering.)
;
;	FIX common routines to have the same calling interface.
;
;Edit 4 July 28,1979 -- Carl A Baltrunas
;
;	Change over AC definitions to use CARL.UNV
;	This required moving FLAG -- 10 > 13;  AFLG -- 13 > 14
;	and SHIPS -- 14 > 15.  Also changed was P1-P4 shifted to
;	allow T1-T4 instead of T1-T3, and moved PNT/APNT to P3/P4
;	positions.
;	Changed label BYE to BYENOW.
;
;Edit 5	August 23,1979 -- Carl A Baltrunas
;
;	Add "GAMES" variable to indicate that a game has started
;	and both players are shooting at each other.  Revise the
;	meaning of GAME to indicate "in building stage" and thus
;	keep better track of what's happening in ^C trap.
;
;Edit 6 August 23,1979 -- Carl A Baltrunas
;
;	Re-write the startup interface so that no races exist for
;	counting the number of players, and hopefully no problems
;	with waiting will occur.
;
;Edit 7 August 23,1979 -- Carl A Baltrunas
;
;	Re-write the command interface to use tables and common
;	branch points.
;
	ENTRY	SALVO
 
	TWOSEG
 
	RELOC 400000
 
MAXPLY:	2			;TWO PLAYERS AT PRESENT
PLAYER:	BLOCK	1		;SLOT HOLDS #OF PLAYERS PLAYING
PLAYIT:	BLOCK	1		;BLOCK HERE
SQUARE:	^D15			;SQUARE SIZE
INOUT:	BLOCK	1		;CONTAINS THE # OF THE PLAYER WHOSE TURN IT IS
SHOTS:	SALVOS			;THIS IS THE NUMBER OF SHOTS
	BLOCK	SALVOS		;THIS SETS UP THE BLOCK
HITS:	BLOCK	1		;HOLDS THE NUMBER OF HITS
SUNK:	BLOCK	1		;LOC TO HOLD NUMBER OF SUNKEN SHIPS
	BLOCK	SALVOS		;BLOCK OF SUNKEN SHIPS
GAME:	BLOCK	1		;SET SO CHECK TO SEE IF GAME IN PROGRESS
GAMES:	BLOCK	1		;[5] SET -1 IF ATTACK STARTED, ELSE 0
				;[5] CLEARED IF ANYONE EXITS!!!
WIN:	BLOCK	1		;PLACE FOR A WIN TO STAY

HOLE:	-1			;HOLDS A FLAG IF GAME BEGUN
INTERL:	-1			;-1 AT FIRST FOR AOSLE INTERLOCK
INTER2:	-1			;  DITTO SECOND WAIT STATE

STABLE:	PTLOC			;LOC FOR PTBOATS
	DTLOC			;LOC FOR DESTROYER
	CTLOC			;LOC FOR CRUIZER
	BTLOC			;LOC FOR BATTLESHIP
	ATLOC			;LOC FOR AIRCFT CARRIER

STABL2:	PTBT			;LOC FOR SHIPS
	DESTR			;LOC FOR DESTROYERS
	CRUIZ			;LOC FOR CRUISERS
	BATTLS			;LOC FOR BATTLE SHIPS
	AIRCFT			;LOC FOR AIR-CRAFT-CARRIERS
WAITS:	PUSHJ	P,WHERE		;GO & SEE WHERE YOU ARE
	OUTSTR	[ASCIZ\
All ships positioned\]		;TELL IT'S ALL DONE HERE
	SETOM	INOUT		;PLAYER # -1
	OUTSTR	[ASCIZ\
Please wait...\]
	AOS	PLAYIT		;INCREMENT THE PLAYER COUNT

WAIT:	MOVEI	T2,100		;GET 100 MS TO WAIT
	HIBER	T2,		;SLEEP AWHILE
	  JFCL			;IGNORE ERRORS
	MOVE	T1,PLAYER	;GET THE NUMBER OF PLAYERS
	CAIGE	T1,2		;MUST HAVE AT LEAST 2 TO PLAY ELSE WAIT
	  JRST	WAIT		; ... WAIT FOR SOMEONE ELSE TO COME ABOARD
	CAME	T1,PLAYIT	;SEE IF ENOUGH YET
	JRST	WAIT		;SLEEP AWHILE
	OUTSTR	[ASCIZ\GO!
\]				;HIT THE ROAD JACK
	SETOM	GAMES		;[5] LET BATTLE BE JOINED!

PLAY2:	MOVE	T1,MINE		;IF NOT FIRST TIME, MAKE SURE HAVE ID CARD
	CAMN	T1,INOUT	;HAVE I BEEN HERE ALREADY?
	  JRST	SHOOT		;YES--SKIP THIS ROT
	AOSLE	INTERL		;SEE IF ANYONE HERE?
	  JRST	PART2		;YES--NOT ME, SO GO AWAY
	SETOM	INTER2		;MAKE SURE IT IS SETUP RIGHT
	MOVEM	T1,INOUT	;REMEMBER I AM HERE
	OUTSTR	[ASCIZ\
It is now YOUR turn, You get \]	;PRINT FIRST PART
	MOVEI	T1,SALVOS	;GET SALVO FOR DIVISION
	PUSHJ	P,OUTDEC	;PRINT THE NUMBER
	OUTSTR	[ASCIZ\ shots
\]				;PRINT TURN MSG ON FIRST TIME ONLY
	MOVEI	P2,SALVOS	;GET NUMBER OF SHOTS TO MAKE
	MOVEI	P1,61		;GET NUMBER IN ASCII OF THIS SHOT
SHOOT:	OUTSTR	[ASCIZ\Shot #\]			;SETUP LEADER
	OUTCHR	P1		;PRINT THIS NUMBER
	OUTSTR	[ASCIZ\:  \]	;PRINT THE TRAILER
	PUSHJ	P,GETHV		;PUT H&V INTO HC & VC
	  JRST	SHOTRR		;GO TO SHOT ERROR HANDLER
	HRLZ	T1,HC		;GET H-CO.ORD INTO LEFT HALF
	HRR	T1,VC		;GET V-CO.ORD INTO RIGHT HALF
	MOVEM	T1,SHOTS(P2)	;PUT IT INTO RIGHT PLACE
	PUSHJ	P,BITSET	;SET THE BITS IN YOUR BOARD
	AOJ	P1,		;ADD ONE TO COUNT
	SOJG	P2,SHOOT	;LOOP @ SHOOTING GALLERY
	SUBI	P1,61		;SUBTRACT 61 FRON P1 TO GET 3
	SETZM	P1		;UNNEEDED BUT HELPS ON RESTART
	SETZM	INTER2		;CLEAR DONE FLAG
	SETOM	INOUT		;[2] MAKE SURE WE DON'T MESS UP
	SETOM	INTERL		;CLEAR INTERLOCK
	SETOM	WAITFR		;[3] SET TO WAIT FOR -1
	PUSHJ	P,WAIT2		;[3] GO AND WAIT FOR HIM TO FINISH
	OUTSTR	[ASCIZ\
You made \]			;SETUP BEGINNING
	MOVE	T1,HITS		;GET THE NUMBER OF HITS
	PUSHJ	P,OUTDEC	;AND PRINT IT
	OUTSTR	[ASCIZ\ Hits on the Enemy!
\]				;FINISH IT OFF
	SKIPN	T1,SUNK		;SEE IF ANY SHIPS WERE SUNK?
	JRST	PART2		;GO TO PART 2
	OUTSTR	[ASCIZ\
The following \]		;SETUP HEADER
	PUSHJ	P,OUTDEC	;PRINT IT
	OUTSTR	[ASCIZ\ ship(s) WERE SUNK:
\]				;TELL SOME WERE SUNK
	PUSHJ	P,SUNKTL	;GO TO TELL IT ALL
	SKIPE	WIN		;SKIP IF A WIN HERE
	JRST	PART2		;GO ON TO PART TWO OF THIS INSANITY
	OUTSTR	[ASCIZ\
You have obliterated the Enemy and have won the game!!
\]				;TELL HIM HE'S WON THE GAME
	JRST	BYEBYE
	SUBTTL	THE SECOND HALF OF THIS GAME

PART2:	OUTSTR	[ASCIZ\
It is now another player's turn - Please wait.
\]				;TELL IT'S THE OTHER ONE'S TURN

PART3:	SETZM	WAITFR		;[3] TELL WE'RE WAITING FOR 0
	PUSHJ	P,WAIT2		;[3] GO AND WAIT FOR IT TO FINISH

PART4:	SETZM	SUNK		;CLEAR THE SUNKEN FLAG
	SETZM	HITS		;CLEAR THE NUMBER OF HITS
	SETZM	WIN		;CLEAR THE WIN FLAG
	MOVEI	PNT,SALVOS	;GET THE NUMBER OF SHIPS/SHOTAT
PART5:	MOVE	P1,SHOTS(PNT)	;GET A SHOT
	MOVEI	P2,LOCLEN	;GET THE NUMBER OF SHIPS
PART6:	MOVEI	SUB,LOCTBL-1(P2);GET THE LOC TABLE
	PUSHJ	P,HELLO		;SEE IF ANY HITS/SINKS
	SOJG	P2,PART6	;LOOP ON THE SHIPS
	SOJG	PNT,PART5	;LOOP ON THE NUMBER OF SHOTS
	MOVEM	SHIPS,WIN	;IF THIS IS NON-ZERO WE'RE STILL ALIVE
	OUTSTR	[ASCIZ\
 
During the last attack, the enemy
scored \]			;SETUP HEADER
	MOVE	T1,HITS		;GET THE NUMBER OF HITS
	PUSHJ	P,OUTDEC	;PRINT IT
	OUTSTR	[ASCIZ\ Hits upon your fleet
\]				;PRINT THE TAIL
	SKIPN	T1,SUNK		;GET THE NUMBER SUNK
	 JRST	FIRED		;NONE--JUST SHOW WHERE FIRED
	PUSHJ	P,OUTDEC	;STILL RADIX 10
	OUTSTR	[ASCIZ\ SHIP(S) WERE SUNK
\]				;WHAT
	PUSHJ	P,SUNKTL	;GO & SEE WHAT SHIPS
FIRED:	OUTSTR	[ASCIZ\
His shots were fired at locations:
\]				;SETUP TO TELL WHERE
	MOVEI	CNT,SALVOS	;GET A 3 FOR THE NUMBER OF SHOTS
SHOTLP:	HLRZ	T1,SHOTS(CNT)	;GET THE H PART OF THE SHOT
	MOVEM	T1,HC		;PUT IT IN THE H POSITION
	PUSHJ	P,OUTDEC	;PRINT IT
	OUTCHR	["-"]		;PRINT A DASH
	HRRZ	T1,SHOTS(CNT)	;PRINT V PART NEXT
	MOVEM	T1,VC		;PUT IN THE VERTICAL POSITION
	PUSHJ	P,OUTDEC	;GOT IT DONE
	PUSHJ	P,SETBIT	;NOW SET THE BIT IN YOUR BOARD
	CAILE	CNT,1		;SEE IF LAST ONE?
	 OUTSTR	[ASCIZ\, \]	;PRINT A FILLER
	SOJG	CNT,SHOTLP	;LOOP TILL DONE
	OUTSTR	CRLF		;FINISH WITH A CRLF
	SKIPE	WIN		;SKIP IF SOMEBODY WON
	JRST	PLAY2		;VALIDATE YOURSELF WITH YOUR ID
	SETOM	INTER2		;SET THE INTERLOCK
	OUTSTR	[ASCIZ\
You have just been wiped off the face of the ocean!!!
All of your ships have been destroyed by the other player
	and he has WON the game !!!
 
 
\]				;TELL IT'S OVER
	JRST	BYEBYE
;	EXIT
	SUBTTL	WAITING & CHACKING UTILITIES

WAIT2:	INCHSL	T1		;ANYTHING TYPED?
	  JRST	WAIT3		;NO--SO SLEEP
	CAIL	T1,"A"+40	;[1] MAKE LC ==> UC
	CAILE	T1,"Z"+40	;[1]  ...
	  CAIA			;[1]  ...
	TRZ	T1,40		;[1]  ...
	PUSHJ	P,SHTCMD	;[1]  DO SOME COMMAND CHECKING
	JRST	WAIT2		;LOOP UNTIL NO COMMANDS

WAIT3:	SKIPN	GAMES		;[5] ACTIVELY FIGHTING?
	  JRST	QUITER		;[5] WE WERE-- SOMEONE LEFT.
	MOVEI	T1,200		;WAIT FOR 100 MS
	HIBER	T1,		; ...
	  JFCL			;IGNORE ERRORS
	MOVE	T1,WAITFR	;[3] GET WHAT WE'RE WAITING FOR
	CAME	T1,INTER2	;[3] DO THEY MATCH?
	  JRST	WAIT2		;[3] NO--WAIT AROUND SOME MORE
	POPJ	P,		;[3] YES-BYE
	SUBTTL	ROUTINE TO CHECK FOR HITS ON SHIPS

;HELLO	- HIT.
;
;	ROUTINE TO SEE IF A SHOT MADE A HOLE IN A SHIP
;
;CALL:
;	MOVEI	P1,<SHOT>	;IN THE FORM [HC,,VC]
;	MOVEI	P2,<SHIP #>	;VALUE FROM 1-N
;	MOVEI	SUB,<TABLE ADR>	;ADDRESS OF SHIP TABLE [-SLOTS,,ADDR]
;	PUSHJ	P,HELLO		;CALL
;	  <MISS RETURN>		;  ....MISSED ...
;	<SINK RETURN>		; IF THE SHOT SUNK THE SHIP
;
HELLO:	MOVEI	T1,1		;GET A BIT TO USE
	ROT	T1,(P2)		;SHIFT TO RIGHT POSITION
	MOVEM	T1,TESTS	;PUT THIS AWAY FOR A MOMENT
	TDNN	SHIPS,TESTS	;SEE IF OK HERE, SKIP IF NOT SUNK
	  POPJ	P,		;RETURN, ALREADY SUNK THIS ONE

	MOVE	T1,(SUB)	;COPY THE TABLE POINTER
	SETZM	T3		;FINISH SETUP
HELLO1:	CAMN	P1,(T1)		;SEE IF LOCATIONS MATCH
	JRST	[SETZM	(T1)		;CLEAR THE LOCATION
		AOS	HITS		;INCREMENT THE HITS
		MOVE	T1,(SUB)	;GET SHIP POINTER
	HELLO4:	ADD	T3,(T1)		;TOTAL THE LOCATIONS
		AOBJN	T1,HELLO4	;LOOP TILL ALL DONE
		JUMPN	T3,HELLO5	;IF ZERO, THE SHIP IS SUNK
		TDZ	SHIPS,TESTS	;GUESS WHAT -- YOU SUNK ONE
		AOS	T1,SUNK		;INCREMENT IT
		MOVE   T3,CHRTBL-1(P2)	;GET CORRECT SHIP CHARACTER
		MOVEM	T3,SUNK(T1)	;PUT IT AWAY
	HELLO5:	AOS	(P)		;SETUP SKIP
		POPJ	P,]		;RETURN
	AOBJN	T1,HELLO1	;LOOP UNTIL DONE
	POPJ	P,
	SUBTTL	ROUTINE TO SEE WHAT SHIPS ARE SUNK & TO PRIN THEM OUT

SUNKTL:	MOVE	CNT,SUNK	;GET NUMBER SUNK
SNKLP:	MOVE	T2,SUNK(CNT)	;GET WHAT CHAR SUNK
	MOVEI	T1,4		;GET 4 FOR LOOP
STBLP:	HLRZ	T3,SNKTBL(T1)	;SEE IF MATCH HERE NEXT
	CAMN	T2,T3		;WELL???
	PUSHJ	P,PRNTSK	;PRINT & SKIP RETURN
	SOJGE	T1,STBLP	;LOOP ON TABLE HERE
	SOJG	CNT,SNKLP	;LOOP ON SHIPS SUNK HERE
	POPJ	P,		;RETURN
 
PRNTSK:	HRRZ	SNKTBL(T1)	;GET LINE TO PRINT
	OUTSTR	@0		;PRINT IT
	POPJ	P,		;RETURN
	SUBTTL	TABLES FOR SHIP RECOVERY TYPE, ETC...
 
CHRTBL:	EXP "A","B","B","C","C","C","D","D","D","D","P","P","P","P","P"
 
LOCTBL:	XWD	-5,ATLOC
	XWD	-4,BTLOC
	XWD	-4,BTLOC+4
	XWD	-3,CTLOC
	XWD	-3,CTLOC+3
	XWD	-3,CTLOC+6
	XWD	-2,DTLOC
	XWD	-2,DTLOC+2
	XWD	-2,DTLOC+4
	XWD	-2,DTLOC+6
	XWD	-1,PTLOC
	XWD	-1,PTLOC+1
	XWD	-1,PTLOC+2
	XWD	-1,PTLOC+3
	XWD	-1,PTLOC+4
LOCLEN==.-LOCTBL		;LENGTH OF SHIPS LIST
 
SNKTBL:	"P",,PSHP
	"D",,DSHP
	"C",,CSHP
	"B",,BSHP
	"A",,ASHP
 
ASHP:	ASCIZ	\ Aircraft Carrier\
BSHP:	ASCIZ	\ Battleship\
CSHP:	ASCIZ	\ Cruiser\
DSHP:	ASCIZ	\ Destroyer\
PSHP:	ASCIZ	\ Pt-Boat\

SHOTRR:	PUSH	P,[SHOOT]		;REMEMBER WHERE TO GO
SHTCMD:	SETZ	AFLG,			;[3] MAKEUP DIFFERENCE ONCE ONLY
	MOVE	T2,[-TB2LEN,,TABLE2]	;[7] SETUP COMMAND LIST
	JRST	GOTCMD			;[7] USE COMMON COMMAND ROUTINE
	SUBTTL	ROUTINE TO OUTPUT A NUMBER IN ANY RADIX UP TO 10

OUTVER:	LDB	T1,[POINT 9,.JBVER,11]	;GET THE VERSION PART
	JUMPE	T1,MINVER		;NULL SO GO TO MINOR VERSION PART
	PUSHJ	P,OUTOCT		;GO TO OUTNUMBER ROUTINE
MINVER:	LDB	T1,[POINT 6,.JBVER,17]	;GET THE MINOR VERSION
	JUMPE	T1,.+3			;IF NONE SKIP THIS
	MOVEI	RADIX,^D26		;GET THE WEIRD RADIX
	PUSHJ	P,OUTNUM		;NOW PRINT THE NUMBER
..EDIT:	HRRZ	T1,.JBVER		;GET THE EDIT NUMBER
	JUMPE	T1,..WHO		;RETURN HERE
	OUTCHR	["("]
	PUSHJ	P,OUTOCT		;PRINT IN OCTAL
	OUTCHR	[")"]
..WHO:	LDB	T1,[POINT 3,.JBVER,2]	;GET THIS ONE
	JUMPE	T1,..RET		;NO PRINT IF HERE
	OUTCHR	["-"]			;PRINT THIS
	PUSHJ	P,OUTOCT		;PRINT THE NUMBER IF NONZERO
..RET:	POPJ	P,			;RETURN
 
OUTDEC:	SKIPA	RADIX,[^D10]		;GET DECIMAL RADIX
OUTOCT:	MOVEI	RADIX,10		;GET OCTAL RADIX
OUTNUM:	IDIV	T1,RADIX		;DIVIDE BY THE RADIX
	HRLM	T2,(P)			;PUT IT AWAY
	SKIPE	T1			;SKIP WHEN DONE
	PUSHJ	P,OUTNUM		;LOOP TILL DONE
	HLRZ	T2,(P)			;GET THE NUMBER BACK
	CAILE	T2,^D10			;SEE IF T2 IS LT 10 DECIMAL
	MOVEI	T2,7(T2)		;ADD 10 OCTAL SO 11='A'
	CAIN	RADIX,^D26		;SEE IF RADIX 26 FOR OUTVER
	PUSHJ	P,[CAIG	T2,^D10		;SEE IF LT OR EQ 10 DECIMAL
		     MOVEI T2,7(T2)	;ADD IN THE 7
		   MOVEI T2,11(T2)	;ADD IN THE REST
		   POPJ	P,]		;RETURN
	MOVEI	T2,60(T2)		;MAKE ASCII
	OUTCHR	T2			;PRINT IT
	POPJ	P,			;RETURN WHEN THROUGH
 
	SUBTTL	ENTRY MODULE TO START THE GAME OFF


SALVO:	RESET				;START ADRESS <RESET>
	SKPINL				;SKIP IF ^O AROUND
	JFCL				;NO-OP TO CATCH SKIPER
	MOVE	T1,[XWD T2,T2+1]	;GET SET FOT BLT
	SETZM	T2			;CLEAR T2
	BLT	T1,16			;CLEAR THE AS'S
	MOVE	T1,[ZCORE,,ZCORE+1]	;SETUP FOR BLT
	SETZM	ZCORE			;CLEAR
	BLT	T1,EZCORE-1		;CLEAR THE BOARDS TOO
	MOVE	T1,[XWD 0,10]		;GET A 10 OCTAL
	MOVEM	T1,CCINT		;PUT INTO CCINT FOR NOW
	MOVEI	T1,INTBLK		;GET INTERCEPT LOC
	MOVEM	T1,.JBINT		;PUT IT AWAY
	MOVE	T1,[XWD	3,BYENOW]	;GET LOCATION & LIST LENGTH
	MOVEM	T1,INTBLK		;PUT INTO LOWSEG
	MOVEI	T1,1B34			;GET A 2
	MOVEM	T1,INTBLK+1		;GET THIS THERE TO TRAP ^C
	MOVE	P,[IOWD 50,PDL]		;SETUP PUSHDOWN LIST POINTER
	MOVEI	SHIPS,177776		;GET 15 SHIPS I BIT APIECE
	SETZ	T1,			;GET A ZERO
	MOVE	T2,[SETUWP T1,0]	;SETUP LOCATION
	MOVEM	T2,SETINS		;PUT THIS INTO LOW SEG
	XCT	SETINS			;THIS SHOULD DO IT
	JRST	BADCAL			;SETUP IF BAD SET

SALVO0:	MOVEI	T1,200			;[6] HANG ON A SECOND...
	HIBER	T1,			;[6]   JUST TO KILL TIME AND MAKE
	  JFCL				;[6]   CODING THIS SECTION EASIER
	AOSLE	HOLE			;[6] SEE IF SOMEONE USING IT
	  JRST	SALVO0			;[6] YEP... WAIT AROUND A BIT
	MOVE	T1,PLAYER		;[6] GET THE NUMBER OF PLAYERS
	CAML	T1,MAXPLY		;[6] IF LESS THAN MAX...
	  JRST	BTLNMP			;[6]    OOPS..TOO MANY, BYE!
	AOJ	T1,			;[6]    OK, SO INCREMENT PLAYER #
	MOVEM	T1,MINE			;[6]    REMEMBER WHO I AM
	MOVEM	T1,PLAYER		;[6]	SETUP COUNTER
	MOVEM	T1,GAME			;[6]    ADD TO GAME COUNT
	SETOM	HOLE			;[6] DON'T LEAVE THE HOLE UNGUARDED

	OUTSTR	BGNMSG			;PRINT THE BEGINNING HEADER MESSAGE
	PUSHJ	P,OUTVER		;PRINT THE VERSION NUMBER
	OUTSTR	BGNMS2			;PRINT THE SECOND PART
	MOVE	T1,SQUARE		;GET THE SQUARE SIZE
	PUSHJ	P,OUTDEC		;PRINT THE NUMBER
	OUTSTR	[ASCIZ\ by \]		;PRINT THIS TOO
	MOVE	T1,SQUARE		;GET THE SIZE AGAIN
	PUSHJ	P,OUTDEC		;PRINT THE SQUARE SIZE AGAIN
	OUTSTR	BGNMS3			;PRINT THE 3RD PART

	MOVEI	T1,5			;PUT A FIVE IN COUNTER
BLDSHP:	MOVEM	T1,AIRCFT-1(T1)		;PUT THEM AWAY
	SOJG	T1,BLDSHP		;LOOP TILL DONE
	SUBTTL	MAIN SETUP COMMAND DECODER SECTION

PLAY:	SKIPN	GAME			;IF GAME OK, SKIP
	JRST	QUITER			;A QUITER HAS APPEARED
	SKPINL				;SKIP A CHR CAN BE INPUT
	  JFCL				;NO-OP TO CATCH ANY NON-SKIP
	OUTSTR	[ASCIZ\*\]		;GIVE NOTICE READY TO PLAY
 
GETCMD:	SETZ	KNT,			;ZAP THE COUNTER
	INCHWL	T1			;GET A CHR
	cail	t1,"a"			;is it from lowercase a
	caile	t1,"z"			;to lowercase z ???
	 caia				;no--so skip one
	trz	t1,40			;yes-make it upper case
	CAIE	T1," "			;[7] IS IT A SPACE OR
	CAIN	T1,"	"		;[7] A TAB?
	  JRST	GETCMD			;[7] YES--SO IGNORE LEADING CHARACTERS

	PUSH	P,[PLAY]		;GET READY TO CLEAN UP
	SETO	AFLG,			;[3]  DIFFERENCE ONCE ONLY (WHERE/FIND)
	MOVE	T2,[-TBLLEN,,TABLE]	;[7] PREPARE FOR THE DINNER PARTY
	JRST	GOTCMD			;[7] PERFORM COMMON COMMAND ROUTINE



GOTCMD:	CAIL	T1,12			;[7] LESS THAN LF?
	CAILE	T1,15			;[7] OR VT, FF, AND CR?
          CAIA				;[7] NONE OF THESE...
	 JRST	CLEAN			;[7] CLEAN UP

CHKCMD:	HLRZ	T3,(T2)			;[7] GET THE CHARACTER TO CHECK
	CAMN	T1,T3			;[7] CHECK FOR A MATCH!
	  JRST	XCTCMD			;[7] YES--GO DO THIS IMMEDIATELY
	AOBJN	T2,CHKCMD		;[7] NO---CHECK THE NEXT ONE
CLRMSG:	OUTSTR	[ASCIZ\
?BLTIIE Illegal Input Encountered.
Type H for help
\]					;PRINT AN ERROR MESSAGE

CLEAN:	INCHSL	T1			;GET A CHR
	  POPJ	P,			;RETURN WHEN NONE LEFT
	JRST	CLEAN			;GET ANOTHER

XCTCMD:	HRRZ	T2,(T2)			;[7] GET THE ADDRESS
	JRST	(T2)			;[7] GO TO IT
	SUBTTL	Command Tables

TABLE:	XWD	"P",PTBOAT		;[7] ARRANGE PT-BOATS
	XWD	"N",HOWNUM		;[7] SEE HOW MANY ARE LEFT
	XWD	"D",DESTRY		;[7] ARRANGE A DESTROYER
	XWD	"C",CRUZER		;[7] ARRANGE A CRUISER
	XWD	"B",BATTLE		;[7] ARRANGE A BATTLESHIP
	XWD	"R",RULER		;[7] TYPE THE RULES
	XWD	"W",WHERE		;[7] DISPLAY A MAP OF THE OCEAN
	XWD	"A",AIRBOT		;[7] ARRANGE THE AIRCRAFT-CARRIER
	XWD	"H",HELP		;[7] GIVE THE HELP MESSAGE
	XWD	"L",LONG		;[7] GIVE THE LONG HELP MESSAGE
	XWD	"S",SPECKS		;[7] LIST THE SHIP SPECIFICATIONS
	XWD	"!",CLEAN		;[7] COMMENT!
	XWD	";",CLEAN		;[7] COMMENT!
	XWD	"E",BYEBYE		;[7] EXIT FROM THE GAME

	TBLLEN==.-TABLE			;[7] LENGTH OF COMMAND TABLE

TABLE2:	XWD	"W",WHERE		;[7] WHERE ARE WE.
	XWD	"F",FIND		;[7] WHERE DID WE GO.
	XWD	"H",HELP2		;[7] HOW DID WE GET THERE
	XWD	"!",CLEAN		;[7] COMMENT!
	XWD	";",CLEAN		;[7] COMMENT!
	XWD	"R",RULER		;[7] TYPE THE RULES

	TB2LEN==.-TABLE2		;[7] LENGTH OF PART-2 COMMANDS
	SUBTTL	MISC. MSG REPORTS.


BTLNMP:	OUTSTR	[ASCIZ	\

?BTLNMP	No more Players for this game,
Please try again later, thank you.

\]
	EXIT


BADCAL:	OUTSTR	[ASCIZ\

?BTLNEP	Not enough access to play this game

\]
	EXIT			;TELL A FUNNY AND LEAVE

 
BGNMSG:	ASCIZ\
SALVO version %\
BGNMS2:	ASCIZ\ Orginal name of Battleship
 
You have an ocean \
BGNMS3:	ASCIZ\ in which to place your ships
and & 15 Ships - Good Luck!!
 
Type H for help:
\				;THAT'S THE NEW MESSAGE
TL	UTILITY TO GET A SET OF X-Y POINTS

;GETHV	Routine to read x and y co-ordinates from the terminal
;
;call:	PUSHJ	P,GETHV
;	  <ERROR>
;	<NORMAL>
;
;Uses FLAG, AFLG, T1, T2.  Returns X=HC, Y=VC
;

GETHV:	SETZB	FLAG,HC	;ZERO FLAGS
	SETZB	T2,VC		;ZERO FLAGS
	SETO	AFLG,		;ZERO OPERAND
CO.RD:	SETZ	T2,		;ZERO THE AC
CORD.:	INCHWL	T1		;GET A CHR
	CAIL	T1,"A"+40	;SEE IF IT IS A LC CHAR
	CAILE	T1,"Z"+40	; -----
	  CAIA			;NO--SO SKIP
	TRZ	T1,40		;YES--SO MAKE UPPER CASE
	CAIE	T1,15		;A CAR-RET?
	CAIN	T1,33		;IS IT AN ALTMODE
	JRST	BREAK		;THEY ALL GO HERE
	CAIE	T1,","		;A COMMA? BEST ONE
	CAIN	T1,"-"		;OR A HYPHEN?
	JRST	BREAK		;YES, A GOOD BREAK
	CAIE	T1,40		;A SPACE
	CAIN	T1,11		;OR A TAB?
	JRST	BREAK		;THEY'LL ALSO DO
	CAIE	T1,"."		;SEE IF A POINT
	CAIN	T1,"/"		;OR A SLASH
	JRST	SETPNT		;GO SET THE POINT
	CAIE	T1,7		;A CONTROL G
	CAIN	T1,12		;OR A LINE FEED?
	JRST	BREAK		;GO TO END OF BREAK
	CAIL	T1,60		;BETWEEN 0
	CAILE	T1,71		;AND 9?
	POPJ	P,		;NEVER!!!
	SUBI	T1,60		;MAKE IT NATURAL
	IMULI	T2,12		;YES, CONTINUE
	ADD	T2,T1		;ADD TO MULTIPLIED VALUE
	JRST	CORD.		;LOOP FOR ANOTHER
	SUBTTL	UTILITY TO CHECK SIZE & X OR Y TYPE OF POINT

;BREAK	Routine to flag a break character while reading X & Y
;	co-ordinates.  Puts x,y into correct memory location and
;	flags which direction you want the ship placed.
;
;called from GETHV, does the return for whatever routine calls it.
;Uses FLAG, AFLG, T1, T2.
;

BREAK:	JUMPL	FLAG,BRKVD	;JUMP IF VC ALREADY
	JUMPE	T2,CORD.	;NO-GO IF T2=0 MUST BE 1<= T2 <= SQUARE
	JUMPG	FLAG,BRKV	;JUMP IF HC ALREADY
	MOVEM	T2,HC		;PUT HC AWAY
	AOJA	FLAG,CO.RD	;GET NEXT ARG
BRKV:	MOVEM	T2,VC		;PUT VC AWAY
	SOJ	FLAG,		;SUBTRACT ONE FROM FLAG
	SOJA	FLAG,CO.RD	;SET FLAG-JUMP-NEXT ARG
SETPNT:	JUMPGE	AFLG,[OUTSTR	[ASCIZ\
%BTLDAI - Diagonals Are Illegal - Ships extend either
horizontally or vertically only.
\]
	JRST	SHPCHK]		;TRY AGAIN
	MOVE	AFLG,FLAG	;SET FLAG, ONE WAY OR ANOTHER
	JRST	CORD.		;GET ANOTHER-OR FINISH UP
BRKVD:	CAIN	T1,15		;WAS IT A CR
	INCHWL	T1		;YES, GET LINE-FEED
	MOVE	T1,SQUARE	;GET SQUARE SIZE
	CAML	T1,HC		;SEE IF TOO LARGE
	CAMGE	T1,VC		;DITTO
	POPJ	P,		;SET FOR BAD RETURN
CPOPJ:	AOS	(P)		;SETUP P FOR GOOD RETURN
	POPJ	P,		;RETURN
	SUBTTL	SOME ERROR REPORTING AREAS

AXERR:	OUTSTR	[ASCIZ\
?BTLLAO - Location Already Occupied
\]				;THAT'S THAT
	JRST	CLEAN		;RETURN -- THROUGH CLEAN
 
 
INERR:	OUTSTR	[ASCII\
?BTLIIE - Illegal Input Encountered
\]				;THAT'S THAT
	JRST	CLEAN		;DONE--NOW CLEAN IT UP
	SUBTTL	Ship checking and setting routines

CHPOST:	PUSHJ	P,CHKBIT	;GO CHECK THE BIT
	POPJ	P,		;RETURN ON ERROR
	AOS	(T3)		;INCREMENT THE RIGHT ONE
	SOJG	CNT,CHPOST	;LOOP UNTIL DONE
	SOS	(T3)		;DECREMENT BACK TO LAST LOC
	AOS	(P)		;INCREMENT RETURN ADDRESS
	POPJ	P,		;GIVE A GOOD RETURN
 
DEPOST:	PUSHJ	P,SETBIT	;GO & SET THE BIT
	HRL	T2,HC		;GET HORIZ LOC
	HRR	T2,VC		;GET VERT LOC
	MOVEM	T2,(P1)		;PUT IT AWAY
	AOJ	P1,		;INCREMENT LOC OF PLACE TO PUT SHIPS
	SOS	(T3)		;DECREMENT LOC-2 THE H OR V CO-ORD
	SOJG	CNT,DEPOST	;LOOP UNTIL DONE
	POPJ	P,		;RETURN
	SUBTTL	Bit checking and setting routines
 
CHKBIT:	MOVE	T1,SQUARE	;GET SQUARE DIMS
	CAML	T1,HC		;SEE IF HC IS > SQUARE SIZE
	CAMGE	T1,VC		;OR IF VC IS > SQUARE SIZE
	POPJ	P,		;YES, ONE OF THEM IS
	MOVE	T2,HC		;GET H-LOC
	MOVEI	T1,1		;GET A 1 IN BIT 35
	ROT	T1,(T2)		;ROTATE IT???
	MOVE	T2,VC		;GET VERTICAL LOC
	SOJ	T2,		;SUBTRACT ONE
	TDNE	T1,BOARD(T2)	;CHECK RIGHT LOC
	POPJ	P,		;NO, GIVE BAD RETURN
	AOS	(P)		;ADD ONE TO RETURN
	POPJ	P,		;RETURN
 
SETBIT:	MOVEI	T1,BOARD	;GET THE ADRESS FOR THE BOARD
	CAIA			;SKIP THE NEXT INSTRUCTION
BITSET:	MOVEI	T1,BOARD2	;GET THE ADRESS OF THE RIGHT BOARD
	HRRM	T1,BRDSET	;PUT THE ADDRESS WHERE IT BELONGS
	MOVE	T2,HC		;GET H-LOC
	MOVEI	T1,1		;GET A 1 IN BIT 35
	ROT	T1,(T2)		;ROTATE IT???
	MOVE	T2,VC		;GET VERTICAL LOC
	SOJ	T2,		;SUBTRACT ONE
BRDSET:	IORM	T1,BOARD(T2)	;SET BIT
	SETZB	T1,T2		;CLEAR AC'S (GOOD RETURN)
	POPJ	P,		;RETURN
 
CLRBIT:	MOVE	T2,HC		;GET HORIZ LOCATION
	MOVEI	T1,-2		;PUT A 0 IN BIT 35 ONLY
	ROT	T1,(T2)		;ROTATE IT
	MOVE	T2,VC		;GET VERT LOC
	SOJ	T2,		;SUBTRACT ONE
	ANDM	T1,BOARD(T2)	;CLEAR IT
	POPJ	P,		;RETURN
	SUBTTL	ROUTINE TO SETUP ANY SHIP IN THE LOT

AIRBOT:	AOJ	KNT,		;INCREMENT THE COUNT
BATTLE:	AOJ	KNT,		;INCREMENT THE COUNT
CRUZER:	AOJ	KNT,		;INCREMENT THE COUNT
DESTRY:	AOJ	KNT,		;INCREMENT THE COUNT
PTBOAT:	AOJ	KNT,		;INCREMENT THE COUNT
	MOVE	P2,STABL2-1(KNT);GET ADR WHERE # OF SHIPS @
	SKIPG	T1,(P2)		;GET THE NUMBER OF SHIPS
	  JRST	[OUTSTR	[ASCIZ\
%No\]				;PRINT HEADER
		MOVE	T1,KNT	;GET THE COUNT
		SOJ	T1,	;DECREMENT IT BY 1
		PUSHJ	P,PRNTSK;PRINT THE SHIP THERE
		OUTSTR	[ASCIZ\(s)  left
\]				;PRINT TRAILER
		JRST	CLEAN]	;FINISH UP & RETURN
	PUSHJ	P,GETHV		;GO & GET H & V
	  JRST	INERR		;JUMP ON ERR RETURN
	MOVEI	T3,HC		;GET LOC OF HC
	CAIN	AFLG,1		;SEE IF AFLG IS SET FOR VC
	  AOJ	T3,		;YES, INCREMENT T3 TO POINT AT VC
	MOVE	CNT,KNT		;SET THE COUNT TO NUMBER
	PUSHJ	P,CHPOST	;GO & CHECK ALL THE POINTS
	  JRST	AXERR		;GO TO ERROR IF ERR RET
	MOVE	CNT,KNT		;SET THE COUNT TO NUMBER
	SOS	T1,(P2)		;GET THE NEW VALUE
	IMUL	T1,KNT		;MULTIPLY IT BY NUMBER
	MOVE	P1,STABLE-1(KNT);GET LOCATION
	ADD	P1,T1		;ADD IN SAVE LOC
	PUSHJ	P,DEPOST	;GO TO IT
	OUTSTR	CRLF		;PRINT THE HEADER
	MOVE	T1,KNT		;GET THE ONE WE'RE USING HERE
	SOJ	T1,		;DECREMENT SO IT WORKS
	PUSHJ	P,PRNTSK	;PRINT THIS ONE
	OUTSTR	[ASCIZ\ Positioned
\]				;PRINT TRAILER & FALL THROUGH
	SUBTTL	SEE IF ANY SHIPS LEFT & IF SO POSITION IF NOT PART2

SHPCHK:	MOVE	T1,[-5,,AIRCFT]	;SETUP FOR QUICK LOOP
	SKIPE	(T1)		;ANY SHIPS LEFT
	  JRST	CLEAN		;YES--SO RETURN
	AOBJN	T1,SHPCHK+1	;NO---TRY NEXT TYPE
	JRST	WAITS		;IF HERE--MUST BE READY TO PLAY
	SUBTTL	ROUTINE TO TELL USER HOW MANY SHIPS LEFT TO POSITION

HOWNUM:	OUTSTR	[ASCIZ\
 
Ships yet to be positioned:
 
\]				;SETUP LISTER ROUTINE
	MOVE	P1,[-5,,AIRCFT]	;AOBJN POINTER TO LOOP WITH
HOWMOR:	SKIPN	T1,(P1)		;SKIP IF ANY OF THIS KIND LEFT
	  JRST	HOWLP		;NO--SO LOOP
	PUSHJ	P,OUTDEC	;PRINT HOW MANY ARE LEFT
	OUTSTR	[ASCIZ\	\]	;PRINT A TAB
	HLRE	T1,P1		;GET THE COUNT IN THE LOOP
	MOVNS	T1		;MAKE POSITIVE
	SOJ	T1,		;SUBTRACT 1
	PUSHJ	P,PRNTSK	;PRINT WHAT KIND OF SHIP IT IS
	OUTSTR	CRLF		;PRINT A CRLF
HOWLP:	AOBJN	P1,HOWMOR	;IF MORE SHIP TYPES, LIST THEM
	JRST	CLEAN		;ELSE RETURN
	SUBTTL	ROUTINES TO DISPLAY LOCATIONS OF SHIPS/HITS

FIND:	TDZA	T1,T1		;[3] SETZ T1, AND SKIP FOR FIND
WHERE:	SETO	T1,		;[3]  -1 FLAG FOR WHERE
	PUSH	P,P1		;SAVE THE COUNT OF SHOTS
	PUSH	P,P2		;SAVE THE SHOT COUNTER
	PUSH	P,BTEST+1(T1)	;[3] SAVE THE TEST INSTRUCTION
	PUSH	P,BPRINT+1(T1)	;[3] SAVE THE PRINT ROUTINE
	OUTSTR	[BYTE (7) 176,34,177,177,0];CLEAR THE SCREEN
	OUTSTR	[ASCIZ\
 
	Battleship locations
**\]				;A LITTLE HEADER FOR THE SIMPLE USER
	PUSHJ	P,STARLP	;PRINT THE TOP LINE
	OUTSTR	[ASCIZ\*
\]				;JUST THIS MUCH
	MOVE	CNT,SQUARE	;GET SQUARE SIZE
LINELP:	MOVE	T2,CNT		;GET CURRENT LINE
	IDIVI	T2,^D10		;DIVIDE BY 10
	ADDI	T3,60		;MAKE IT ASCII
	OUTCHR	T3		;PRINT IT
	OUTCHR	[40]		;PRINT A SPACE
	MOVEM	T3,LINNUM	;PUT IT INTO LINE NUMBER
	MOVE	T2,SQUARE	;GET SQUARE SIZE
	MOVEI	T1,2		;GET THE BIT TO TEST
	MOVEI	KNT,1		;GET FIRST NUMBER
BITLOP:	XCT	-1(P)		;[3] TDNE T1,BOARD/BOARD2 -1(CNT)
	XCT	(P)		;[3] PUSHJ P,ASTOR/ASTER   PRINT *'S
	OUTCHR	[40]		;PRINT A SPACE
	OUTCHR	[40]		;PRINT ANOTHERONE
	ROT	T1,1		;ROTATE ONE BIT
	AOJ	KNT,		;INCREMENT KOUNTER
	SOJG	T2,BITLOP	;LOOP UNTILL ALL DONE
	OUTCHR	LINNUM		;PRINT THE LINE NUMBER
	OUTSTR	CRLF		;PRINT A CRLF
	SOJG	CNT,LINELP	;LOOP ON LINE NUMBER
	OUTCHR	[52]		;PRINT A CHR
	OUTCHR	[52]		;PRINT A CHR
	PUSHJ	P,STARLP	;PRINT THE BOTTOM LINE
	OUTSTR	[ASCIZ\*
 
\]				;FINISH
	POP	P,(P)		;CLEAN OFF TOP OF
	POP	P,(P)		;STACK .. FIRST.
	POP	P,P2		;RETURN FIRST AC
	POP	P,P1		;SAVED AC RETURNED
	  JRST	CLEAN		;CLEAN UP ANY EXTRA AND GO

BTEST:	TDNE	T1,BOARD-1(CNT)	;SEE WHERE THE COUNTER IS
	TDNE	T1,BOARD2-1(CNT);SEE WHERE THE COUNTER IS

BPRINT:	PUSHJ	P,ASTOR		;PRINT THE * AND SHIP INFO
	PUSHJ	P,ASTER		;JUST PRINT * INFO
	SUBTTL	ROUTINES TO PRINT STARS AND SUCH FOR SHIP LOCATIONS

STARLP:	MOVN	T1,SQUARE		;GET SQUARE SIZE MINUS
TOPLOP:	MOVE	T2,SQUARE		;GET IT AGAIN
	AOJ	T2,			;INCREMENT IT BY ONE
	ADD	T2,T1			;GET A POSITIVE NUMBER
	IDIVI	T2,^D10			;DIVIDE BY 10
	ADDI	T3,60			;INCREMENT IT 60 TO MAKE ASCII
	OUTCHR	T3			;PRINT A NUMBER
	OUTCHR	[52]			;PRINT AN ASTERISK
	AOJL	T1,TOPLOP		;LOOP TILL DONE
	POPJ	P,			;RETURN


ASTER:	OUTCHR	[52]			;PRINT AN ASTERIK
	AOS	(P)			;MAKE A SKIP RETURN
	POPJ	P,			;RETURN
 
ASTOR:	EXCH	PNT,ASAVE		;EXCHANGE POINTER & SAVE IT
	PUSHJ	P,MCHECK		;[3] DO THE FIND IT ROUTINE
	OUTCHR	[52]			;ERROR RETURN PRINT A SPACE
	EXCH	PNT,ASAVE		;I DID SAY A POSS. OF SHIP LOSS.
	AOS	(P)			;FLIP PNT, BACK & INC RETURN
	POPJ	P,			;RETURN
 
MCHECK:	MOVEI	SUB,LOCLEN		;[3] GET THE NUMBER OF SHIPS
	HRLZ	P2,KNT			;GET H
	HRR	P2,CNT			;GET V
MLOOP:	MOVE	PNT,LOCTBL-1(SUB)	;[3] GET THE NEXT ITEM
MJUMP:	CAMN	P2,(PNT)		;[3] SEE IF MATCH
	  JRST	MPRINT			;[3] YES--SO PRINT THE CHARACTER
	AOBJN	PNT,MJUMP		;[3] LOOP UNTIL MATCH OR DONE
	SOJG	SUB,MLOOP		;[3] LOOP UNTIL DONE
	POPJ	P,			;[3] DONE!

MPRINT:	OUTCHR	CHRTBL-1(SUB)		;[3] PRINT THE SHIP TYPE
	AOS	(P)			;SKIP RETURN
	POPJ	P,			;RETURN GOOD
	SUBTTL	UTILITY MESSAGES FOR THE BEGINNER

LONG:	OUTSTR	LNGMSG		;PRINT THE LONG HELP MESSAGE
	JRST	CLEAN		;RETURN

LNGMSG:	ASCIZ\
Command Format is:
 
<CMD> or <CMD>#,# or <CMD>#.,# or <CMD>#,#.
 
<Whichever is most appropriate>
 
Where <CMD> is one of:	A B C D E H L N P R S W
 
A	To position Aircraft Carrier
B	To position Battle-Ship
C	To position Cruiser
D	To position Destroyer
E	To exit
H	To type a short HELP message
L	Type this message
N	To list number & type of ships left
P	To position Pt-Boats
R	To list rules
S	To list ship specifications
W	To display a board with ship locations on it
 
Note: <CMD>#,#. is used to extend a ship VERTICALLY instead of
   Horizontally. (Default for ship of more than one point is HORIZONTAL)
 
Examples:
 
H	Types a short HELP message
P1,1	Positions a Pt-Boat at location (1,1)
A3,5	Positions an Aircraft-Carrier horizontally starting at location
	(3,5) & filling locations (3,5),(4,5),(5,5),(6,5),(7,5)
C2,7.	Positions a Cruiser vertically (Note point "." position),
	starting at location (2,7) and filling (2,7),(2,8),(2,9)
W	Types a display board showing what positions have been used
 
 
\				;THAT WAS THE LONG MESSAGE
HELP:	OUTSTR	HLPMSG		;PRINT THE HELP MESSAGE
	JRST	CLEAN		;YES, RETURN

HLPMSG:	ASCIZ\
Commands are:
A	Position Aircraft Carrier
B	Position Battleship (2)
C	Position Cruiser (3)
D	Position Destroyer (4)
E	Exit
H	This message
L	Long HELP message
N	Number & type of ships left
P	Position Pt-Boat (5)
R	List rules
S	Ship specifications
W	Display used positions
!	Accept remainder of line as comment
;	Accept remainder of line as comment
 
\				;HOPEFULLY THE WHOLE SHORTIE


HELP2:	OUTSTR	[ASCIZ\
Commands are:
H	This message
F	Shots fired
R	The rules
W	Ship positions
#,#	Shoot at position #,#
! or 	;	Accept remainder of line as comment
\]					;TELL HIM
	JRST	CLEAN			;RETURN
SPECKS:	OUTSTR	SPCMSG		;TYPE THE SPECIFICATIONS MESSAGE
	JRST	CLEAN		;PRINT AN ASTERISK AND PLAY
 
SPCMSG:	ASCIZ\
 
Ship specifications
 
Either vertically or horizontally
DIAGONALS are illegal...
 
  SHIP		#-PLACES	#SHIPS
  ----		--------	-------
Aircraft Carr.	5 Places	(1)
Battleships	4 Places	(2)
Cruisers	3 Places	(3)
Destroyers	2 Places	(4)
Pt Boats	1 Place		(5)
 
 
\				;THAT'S THAT
RULER:	OUTSTR	RULES		;PRINT THE RULES
	JRST	CLEAN		;RETURN TO SETUP
 
RULES:	ASCIZ\
SALVO RULES:
 
There are two players each at his/her own console
each player starts the game by positioning his/her ships
using the appropriate comands (Type H for additional HELP)
 
After all ships are positioned for each player that player waits
for the other to finish positioning - Then the play begins
 
Each player is then allowed to make shots to attempt to sink the
other player's ships after which a report on damage & ships sunk is
processed by both players - Then it's the other player's turn
 
When one player has succedded in sinking all of the other player's
ships that player is declared the winner & the game is over
 
Type H for help with the commands at any level
Happy Hunting!!!
\				;THAT'S THE RULES
CRLF:	ASCIZ	\
\
TAB:	ASCIZ	\	\
	SUBTTL	ROUTINES TO TRAP ^C & HELP PLAYER TO QUIT THE GAME

QUITER:	OUTSTR	[ASCIZ\

?BTLPJQ	All the Players Have Quit

\]				;TELL ABOUT QUITING
	SETZM	PLAYER		;[6] MAKE SURE PLAYERS ARE GONE
BYEBYE:	SETZM	GAME		;THAT'S THE END
	SETZM	GAMES		;[5] CLEAR ACTIVE GAME COUNTER
	SOS	PLAYIT		;[6] DECREMENT PLAYER COUNT PROPERLY
	CLRBFI			;CLEAR BUFFER
	SKPINL			;  AND DEFEAT ANY ^O
	  JFCL
	EXIT			;A REAL BYE BYE
 
BYENOW:	PUSH	P,INTBLK+2	;GET PC LOC
	SETZM	INTBLK+2	;CLEAR/RE-ENABLE INTERRUPT
	SETZM	INTBLK+3	;GET THAT TOO
	SKIPN	GAME		;[5] IS THERE A GAME GOING ON?
	  JRST	BYEGAM		;[5] NO--MUST BE LEAVING NOW
	MOVEI	T1,[ASCIZ\
%WARNING: Please type 'E' to exit
\]				;GIVE ERROR MESSAGE
	SKIPE	GAMES		;[5] CHECK FOR BATTLE IN PROGRESS
	MOVEI	T1,[ASCIZ\
You are not allowed to quit at this time
Please wait until you have been properly DESTROYED!!!
\]
	OUTSTR	(T1)		;[5] PRINT THE APPROPRIATE MESSAGE
	SOS	CCINT		;INC CCINT
	SKIPE	CCINT		;SKIP IF = TO ZERO
	  POPJ	P,		;RETURN TO PREVIOUS SPOT
	HRLI	P,2		;GET 2 MORE FOR THE OTHER PLAYERS
	HLRM	P,CCINT		;PUT AWAY FOREVER
	OUTSTR	[ASCIZ	\

Oh Alright!!!  If you insist... you can quit this time.
Just don't go around making a habit of it.

\]
	POP	P,(P)		;ZAP THE STACK?
	JRST	BYEBYE		;GO BYE BYE

BYEGAM:	POP	P,(P)		;[5] WIPE THE PDL CLEAN HERE
	OUTSTR	[ASCIZ\

Apparently something happened... You are the only player, Bye!!!

\]
	JRST	BYEBYE
 
	XLIST			;LIT & VAR XLISTED HERE
	LIT
	VAR
	LIST			;RESUME NORMAL LISTING
	SUBTTL	THE LOW SEGMENT AREAS FOLLOW
	RELOC	0
 
ZCORE:
INTBLK:	BLOCK	1		;SPACE FOR INTERUPT ADR
	BLOCK	1		;SPACE FOR BITS & TRAP CODE
	BLOCK	1		;SPACE FOR PC
	BLOCK	1		;SPACE FOR INTERUPT CAUSE
SETINS:	BLOCK	0		;SPACE TO HOLD SETUWP INSTRUCTION
CCINT:	BLOCK	1		;SET TO 10
MINE:	BLOCK	1		;WHO AM I?
TESTS:	BLOCK	1		;LOAD IT
AIRCFT:	BLOCK	1		;AN ASCII 1
BATTLS:	BLOCK	1		;AN ASCII 2
CRUIZ:	BLOCK	1		;AN ASCII 3
DESTR:	BLOCK	1		;AN ASCII 4
PTBT:	BLOCK	1		;AN ASCII 5
HC:	BLOCK	1		;LOCATION FOR H-COORD.
VC:	BLOCK	1		;LOC FOR V-COORD.
BOARD:	BLOCK	^D36		;OWN BOARD TO BE MOVED TO HISEG LATER
BOARD2:	BLOCK	^D36		;OWN BOARD TO BE MOVED TO HISEG LATER

PTLOC:	BLOCK	5*1		;LOC'S FOR 5*1 PTBOATS
DTLOC:	BLOCK	4*2		;LOC FOR 4*2 DESTROYERS (8)
CTLOC:	BLOCK	3*3		;LOC FOR 3*3 CRUISERS (9)
BTLOC:	BLOCK	2*4		;LOC FOR 2*4 BATTLESHIPS (8)
ATLOC:	BLOCK	1*5		;LOC FOR 1*5 AIRCFT CARRIER
 
ASAVE:	BLOCK	1		;LOC FOR ADDIT. SAVE
LINNUM:	BLOCK	1		;SPACE FOR LINE NUMBER

WAITFR:	BLOCK	1		;HOLDS AN EVENT TO WAIT FOR
PDL:	BLOCK	50

EZCORE:
 
	RELOC
 
 
		END SALVO
    F@Ya