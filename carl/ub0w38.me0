Procedure Enter.Item
Begin

Fields	L.name as '20c', L.name.u as '20c', L.length as '4zn',
	Number.found as '4zn',
	Count.item as '4zn', Count.phones as '4zn',
	Validation as '4zn', Yes.or.no as '10c',
	Scratch.count as 'zn', Col.umn as 'zn',

	Cursor  as '3c' default @27+"&a",
	Hom.cur as '2c' default @27+"H",
	Clr.scr as '4c' default @27+"H"+@27+"J",
	Clr.eos as '2c' default @27+"J",
	Clr.eol as '2c' default @27+"K",
	Clr.1   as '9c' default @27+"&a1r0C"+@27+"K",
	Clr.2   as '9c' default @27+"&a2r0C"+@27+"K",
	Clr.3   as '9c' default @27+"&a3r0C"+@27+"K",
	Clr.4   as '9c' default @27+"&a4r0C"+@27+"K"

Begin

    Begin
	Let Cursor  = @27+"&a"
	Let Hom.cur = @27+"H"
	Let Clr.scr = @27+"H"+@27+"J"
	Let Clr.eos = @27+"J"
	Let Clr.eol = @27+"K"
	Let Clr.1   = @27+"&a1r0C"+@27+"K"
	Let Clr.2   = @27+"&a2r0C"+@27+"K"
	Let Clr.3   = @27+"&a3r0C"+@27+"K"
	Let Clr.4   = @27+"&a4r0C"+@27+"K"

    End


    Enter.your.name:
    Do Begin
	Let Validation = 0				% start with false   %
	Type Clr.scr, "Name: "	Accept L.name
	If L.name = default then finish Enter.your.name
	Let L.name.u = Upper.case(L.name)
	Let L.length = Length(L.name)

	Let scratch.count = 4				% print from line 4  %
	Let Col.umn = 0					% alternately 0 & 40 %
	Let Number.found = 0				% none found yet     %
	For each Name
	    If L.name.u = Upper.case(Substr(Last.name,1,L.length)) then
	    begin
		Add 1 to Number.found			% a partial match!!! %
		Let count.item = person.number		% remember the number%
	    end

	If Number.found > 1 then			% For more than one  %
	    For each Name				% Look through them  %
	     If L.name.u = Upper.case(Substr(Last.name,1,L.length)) then
	     begin					% and print matches  %
		If Col.umn = 0 then Add 1 to scratch.count
		Type Cursor, scratch.count, "r", Col.umn, "C", Clr.eol,
		    Person.number, ": ", Trim(First.Name), " "
		If Middle.name ne default then Type Trim(Middle.name), " "
		Type Trim(Last.Name)
		If Col.umn = 0 then Let Col.umn = 40 else Let Col.umn = 0
	    end

	If Number.found > 0 then do begin
	    If Number.found = 1 then begin
		Let person.number = count.item
		Type Cursor, scratch.count, "r0C", Clr.eol
	    end
	    else begin
		Type Clr.2, "Entry #: "
		Accept Person.number
	    end
	    If person.number ne default then
	    Select Name Via key then begin
		Type Clr.2, Person.number, ": ", Trim(First.Name), " "
		If Middle.name ne default then Type Trim(Middle.name), " "
		Type Trim(Last.Name), " - Correct? "
		Accept Yes.or.no
		If Upper.Case(Substr(Yes.or.no,1,1)) = "Y" then begin
		    Let count.item = person.number
		    Let Validation = 1
		    Let scratch.count = Length(First.name) + Length(Last.name)
			+ Length(Middle.name) + 9
		    Type Cursor, "2r", scratch.count, "C", Clr.eol
		end
		else Let Number.found = 0
	    end
	    else Type Cursor, "22r0C", Clr.eol, @7,@7,
		    "Illegal entry number:", person.number
	    Type Clr.4, Clr.3
	end while Validation ne 1 and person.number ne default
	    and Number.found > 0


	If Validation = 0 then begin
	    Type Clr.2, "New person? "	Accept Yes.or.no
	    If Upper.Case(Substr(Yes.or.no,1,1)) = "Y" then begin
		Select Largest Name then
		    Let count.item = person.number + 1
		    else Let count.item = 1
		If Substr(L.name,1,1) = Upper.case(Substr(L.name,1,1)) then
		    Let Last.name = L.name
		    else begin
			Type Clr.2, "Last name: "  Accept Last.name
		    end
		Type Clr.2, Trim(Last.name), ", First: "  Accept First.name
		Let scratch.count = Length(Last.name) + 2
		Type Cursor, "2r", scratch.count, "C", Clr.eol,
		     Trim(First.name), " Middle: "	Accept Middle.Name
		Let scratch.count = scratch.count + Length(First.name)
		Type Cursor, "2r", scratch.count, "C", Clr.eol
		If Middle.name ne default then Type ", ", Middle.name
		Let person.number = count.item
		Insert into Name
		Let validation = 1
	    end
	end  % done if Validation = 0 %

    % At this point						%
    %	If Validation = 1 we have a person.number in count.item	%
    %	If Validation = 0 we have decided no to go any further	%

	Making.calls:
	If Validation = 1 then begin	% Type all the known numbers %
	    Type Cursor, "3r0C", Clr.eos
	    Let person.number = count.item
	    Let count.phones = 0
	    Type Cursor, "5r0C", Clr.eol
	    For each Phone Via person.number begin
		Let count.phones = Telephone.count
		Type @CR, Trim(Telephone.Type), ": (", Telephone.area.code,
		") ", Telephone.Exchange, "-", Telephone.Number
		If Telephone.Extension ne default then
		    Type "  x ", Telephone.Extension
	    end
	    Do begin			% Insert new telephone numbers %
		Type Clr.3, "Area Code: "	Accept Telephone.area.code
		If Telephone.area.code = default then finish making.calls
		Type Clr.3, "(", Telephone.area.code, ") ", "Exchange: "
		Accept Telephone.Exchange
		Type Cursor, "3r6C", Clr.eol, Telephone.Exchange,
		      " Number: "	Accept Telephone.Number
		Type Cursor, "3r9C-", Clr.eol, Telephone.Number,
		     Clr.4, "Type: " Accept Telephone.Type
		Type Clr.4
		If Upper.case(Telephone.Type) = "WORK" then begin
		    Type Cursor, "3r14C", Clr.eol, " Extension: "
		    Accept Telephone.Extension
		    end
		    else Let Telephone.Extension = 0
		Add 1 to count.phones	Let Telephone.Count = count.phones
		Insert into Phone

		Let scratch.count = count.phones + 5
		Type Cursor, scratch.count, "r0C", Clr.eol,
		Trim(Telephone.Type), ": (", Telephone.area.code,
		") ", Telephone.Exchange, "-", Telephone.Number
		If Telephone.Extension ne default then
		    Type "  x ", Telephone.Extension

	    end while Telephone.area.code ne default
	end

	% add code for particular instances here %

    end while L.name ne default
end

End
