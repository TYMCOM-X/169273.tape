MCR50A.DOC -- Changes from MACRO %50(272) to MACRO %50A(432)      Page 1
GENERAL INFORMATION - MACRO.DOC AND MACRO.INF


1.0  GENERAL INFORMATION - MACRO.DOC AND MACRO.INF

     This file, MACRO.DOC, is internal  documentation  for  the  changes
from  MACRO  46(52)  to  MACRO 53B(1155A).  This includes known bugs and
deficiencies, with solutions  or  examples  of  work  arounds  for  some
problems.

     The file, MACRO.INF, is all of  the  external  changes  from  MACRO
46(52) to MACRO 53B(1155).

     NOTE:  The changes in this version of macro are to match changes in
DEC's  macros.  The Macro Assembler Reference Manual can be ordered form
DEC (order number AA-4159C-TM, or AA-C780C-TB).






2.0  KNOWN BUGS AND DEFICIENCIES

2.1  Problems For Which A Solution Is Known

     1.  UUOSYM.mac declares .JB41, .JBCST, .JBOPS, .JBREN and .JBVER to
         be  EXTERNAL  symbols.  This is inconsistent with C.mac in some
         circumstances.  If A-errors occur while  recompiling  a  source
         file   (HELPER,setsrc)   with  C,  the  user  has  one  of  two
         alternatives.   The first is to recompile without C  by  adding
         "SEARCH   MACTEN,uuosym"   to   the  beginning  of  the  source
         file.  The second is to delete  from  C.mac  the  line  "EXTERN
         .JB41,.JBCST,.JBOPS,.JBREN,.JBVER"  and  recompile  as  before.
         This problem will disappear  as  MACTEN  and  UUOSYM  gradually
         replace C in the users' search lists.

     2.  SOS fails to compile under MACRO 50A, as it does not know about
         the   KL  opcode  "EXTEND"  implemented  in  50A,  The  correct
         long-range fix is to change all references to  "EXTEND".   (SOS
         is  unsupported.)  To  recompile  the  source  the  user should
         manually replace the line "IFNDEF EXTEND,<EXTEND==1> in SOS.mac
         by  "EXTEND==1"  (or  "EXTEND==0"  if  desired).   It  is  also
         possible (but not recommended) to turn off the KL10 opcodes  in
         MACRO by recompiling MACRO.mac with KL10==0.

     3.  For LOGIN version 57 only:  LOGIN version 57 takes advantage of
         a  bug in MACRO fixed by edit 412, included in MACRO 50A.  As a
         result, LOGIN 57 will not load properly  after  compiling  with
         version  50A.   The correct fix to LOGIN is as follows:  Remove
         the TWOSEG pseudo-op from page 1  on  LGNUNV.   On  page  2  of
         LGNUNV, add a TWOSEG to the LGNDCL macro definition just before
         the RELOC 400000.  In LGNLOW, add a  TWOSEG  before  the  RELOC
         400000.   This  fix  is  included in LOGIN version 60, which is
         fully compatible with MACRO 50A.
MCR50A.DOC -- Changes from MACRO %50(272) to MACRO %50A(432)      Page 2
KNOWN BUGS AND DEFICIENCIES


     4.  For ALGOL version 6A only:  ALGCON, an ALGOL source file,  gets
         N-errors  because  MACRO  50A  flags  overflows  resulting from
         multiply and divide operations.  To get around this, insert the
         line  ".DIRECTIVE .OKOVL ;[BWR4] ALLOW * AND / OVERFLOW" at the
         beginning of ALGCON.mac.  In addition, a "KL-only  INSTRUCTION"
         error  message can result from executing ALGOL 6A compiled with
         MACRO 50A, since ALGOL 6A also did not know about the KL opcode
         "EXTEND".   To  get around this, compile using either MACRO 50A
         rebuilt with KL10 set to zero (in MACRO.mac) or  MACRO  version
         50.   (Version  50  will  also  not  trap  multiply  and divide
         overflow.) The proper edit, which  changes  all  references  to
         "EXTEND", appears in ALGOL version 7.  ALGOL version 7 is fully
         compatible with MACRO 50A.

     5.  BASICH, a component of BASIC, gets R-errors when assembled with
         MACRO  50A.   Edit  440, a two line patch to MACRO, fixes this.
         See the FILCOM below.  NUM, a component of COBOL, gets R-errors
         when  assembled with BIS set to zero (in INTERM.mac).  Edit 440
         fixes this case also.  
         file 1)        dsk:macro.bak   created: 1512 01-sept-1976
         file 2)        dsk:macro.cln   created: 1512 03-sept-1976
         
         1)1    title   macro %50a(437) 
         ****
         2)1    title   macro %50a(440) 
         2)4    ;440    fix "r" errors (with external symbols) caused by edit 324
         2)     ;*******************  end of revision history  *******************
         **************
         1)203          setzm   extpnt          ;[324] reset external pointers word
         1)             pushj   pp,srch5        ;load registers
         ****
         2)203          pushj   pp,srch5        ;load registers
         **************
         1)203          setzm   extpnt          ;[324] reset external pointers word
         ****
         2)203          tlne    arg,opdf        ;[440] if in opdef
         2)             setzm   extpnt          ;[324] reset external pointers word
         **************

     6.  MOVE, CMP and SPAC, components  of  LIBOL,  get  Q-errors  with
         MACRO  50A when BIS is set to one (in INTERM.mac).  LBLPRM.mac,
         which is searched  by  these  modules,  defines  some  extended
         opcodes  (also defined in MACRO 50A) improperly, leading to the
         confusion.   The  correct  long-range  fix  is  to  change  the
         extended   opcode   definitions   (in   LBLPRM)  from  halfword
         assignments to proper OPDEFS, and change  all  extended  opcode
         references  in  LIBOL  as  necessary  to  accomodate  this.   A
         short-term way-around is to change all references  to  extended
         opcodes  occurring  in  the opcode field (i.e.  [MOVSLJ,,0]) to
         proper opcodes (i.e.  [MOVSLJ]), thereby causing MACRO to  pull
         in  its  own  opcode  values, which are consistent.  It is also
         possible, but not recommended, to turn off the KL10 opcodes  in
         MACRO by recompiling MACRO.mac with KL10 set to zero.
MCR50A.DOC -- Changes from MACRO %50(272) to MACRO %50A(432)      Page 3
KNOWN BUGS AND DEFICIENCIES


     7.  Edit 415 caused SPROUT (a GALAXY  component)  to  compile  with
         phase errors.  Edit 441, a two line patch to MACRO, fixes this.
         See the FILCOM below.
         file 1)        dsk:macro.440   created: 1351 21-sept-1976
         file 2)        dsk:macro.cln   created: 1424 21-sept-1976
         
         1)1    title   macro %50a(440) 
         ****
         2)1    title   macro %50a(441) 
         2)4    ;441    fix "p" errors when symbol forward-referenced across lit
         2)     ;*******************  end of revision history  *******************
         **************
         1)38           jump2   stol22          ;yes, no search.  branch if pass2
         1)             addm    sdel,litcnt     ;pass one, update count
         ****
         2)38           trne    sx,erru         ;[441] yes, no search. if undf symbol on
         2)             jrst    stol22          ;[441] pass1, branch
         2)             jump2   stol22          ;[441] branch if pass2
         2)             addm    sdel,litcnt     ;pass one, update count
         **************

     8.  Page offsets are counted incorrectly on  PRGEND.  Specifically,
         the offset gets stuck at [PAGE#]-1.  Edit 433 (PCO 83, a 2 line
         patch) from MCR50B.pco fixes this.  QAR #00360

     9.  When too many lines occur in in a literal, "label+offset" given
         in  the  error  message  is  wrong,  as  the  offset  count  is
         reinitialized to -1.    Edit  402,  which  made  "label+offset"
         meaningful  in  literals  with labels, failed to take this case
         into  account.  A  temporary  fix  (until  full  label  use  is
         implemented  in  literals)  is  provided by edit 434 (PCO 84, a
         several line patch) from MCR50B.pco.   QAR #00591

    10.  A spurious "MCRNES NO END STATEMENT ENCOUNTERED ON INPUT  FILE"
         message  can occur on pass 2 when I/o flags are bombed during a
         call to  the  IOSET  routine.   This  problem  was  encountered
         assembling  SIMULA,  when  an IRP ended while a line containing
         XALL, SALL or .XCREF was being polished off.  Edit 435 (PCO 85,
         a 3 line patch) from MCR50B.pco fixes this.   SPR 20472

    11.  Phase errors discovered while checking the  start  of  the  VAR
         area  on  END  are  lost unless assembly of literals happens to
         follow.   %....P appears in the symbol table with  no  matching
         mnemonic  in  the  listing.  Edit  436  (PCO 86, a several line
         patch) from MCR50B.pco fixes this.  SPR 20681

    12.  SFDS are ignored on output file specifications.  Edit 437  (PCO
         88, a 12 line patch) from MCR50B.pco allows for the use of SFDS
         on output file specifications.  SPR 20779


MCR50A.DOC -- Changes from MACRO %50(272) to MACRO %50A(432)      Page 4
KNOWN BUGS AND DEFICIENCIES


2.2  Problems To Be Fixed In The Near Future


The following is a list of problems for which no solution  is  currently
known,  but  for  which  a solution is expected in the near future.  The
patches will be published in the DECSYSTEM-10 Software Dispatch as  they
become known.

     1.  Code in an IF1 conditional gets an extra line at the bottom  of
         each  page  in the list or cross reference of the program.  The
         line that MACRO puts out has a carriage  return,  but  no  line
         feed.

     2.  Missing page headers on some listing pages.

     3.  RIM10 stays set across PRGEND.

     4.  MACRO OPDEF DEVSIZ is not recognized by MACRO if used first  in
         a   program   inside   an   expression  of  the  type  "<devsiz
         1,>!200000".  A known way around is  to  search  UUOSYM.   (See
         suggestions, 6.0, for related suggestion.)

     5.  MACRO fails to notice  when  it  is  including  non-RADIX50-set
         characters in its six-character TITLE.

     6.  MACRO's floating point input routines do not agree  with  those
         of other compilers, FORTRAN in particular.


MCR50A.DOC -- Changes from MACRO %50(272) to MACRO %50A(432)      Page 5
KNOWN BUGS AND DEFICIENCIES


2.3  Problems Which Should Be Fixed In Some Future Version

     1.  The .IF pseudo-op will  be  completely  reworked  in  the  next
         development release.

     2.  Expressions of the type  "FOO-1(10)"  cause  LINK  to  generate
         different  values  depending  on  whether  FOO  is  INTERNAL or
         EXTERNAL.  The reason is that, in the latter case, LINK  thinks
         it   is   fixing   up  something  like  JRST  FOO  -1(10),  not
         EXP<FOO  -1(10)>,  and  indeed  cannot  tell  the   difference.
         Future  versions  of MACRO will have the capability to generate
         sufficient information to LINK to generate the needed fixup, as
         well  as  maintain  upward and downward compatibility with user
         and system programs.

     3.  Universals are still searched on defining occurances of  INTERN
         and EXTERN, leading to possibly conflicting definitions for the
         symbols specified.  Several approaches to or ways  around  this
         problem have been suggested.

     4.  Several  problems  spring  from   the   fact   that   currently
         end-of-line  must be forced out early for commented macro calls
         under XALL.  The next development release of MACRO will include
         extensive  changes  to  macro processing, and may along the way
         provide a means for withholding output  of  comment/end-of-line
         until  after  the  expansion,  thereby  eliminating  a range of
         listing and line-reference bugs.

     5.  MACRO's asterisk-level command scanner has incurred a long list
         of  suggestions and complaints, even the smallest of which must
         await a design-level reworking.  No plans currently  exist  for
         this, however.

     6.  Full use of labels in literals will be implemented in the  next
         development release of MACRO.


MCR50A.DOC -- Changes from MACRO %50(272) to MACRO %50A(432)      Page 6
INTERNAL CHANGES BETWEEN MACRO 50 AND MACRO 50A


3.0  INTERNAL CHANGES BETWEEN MACRO 50 AND MACRO 50A

Edits 367,376 and 415 were changes to the literal processor.  The effect
is  to  prevent  PASS 1 pooling of literals with errors in them when the
literals are deeper  than  the  first  level.   Because  the  space  for
literals  is  reserved on the first pass, when MACRO cannot ascertain if
literals with undefined (I.E.  forward) references can be combined, some
extra  space  is  reserved.   The  space used by the literal pool on the
first pass, but not on the second pass is  not  reclaimed  because  this
could  introduce  phase  errors.   Because MACRO 50A detects more PASS 1
errors in literals (such as U and O) which may go  away  in  the  second
pass,  programs  assembled by MACRO 50A may be several words longer than
the same programs compiled with MACRO 50.  There is no error introduced,
and program execution should be unaffected.



4.0  SUGGESTIONS

Users are warned that they should begin to search UUOSYM in their  MACRO
programs, as CALLIS will disappear from MACRO in some future version.



[End of MCR50A.DOC]
MCR52.doc -- Changes from V50A(432) to V52(551)                   Page 7
KNOWN BUGS AND DEFICIENCIES


5.0  KNOWN BUGS AND DEFICIENCIES

5.1  Problems For Which A Solution Is Known

     1.  For ALGOL V6A and V7:   U-  and  Q-errors  in  ALGDEC,  ALGEXP,
         ALGUTL  because  of  different  macro-call argument handling in
         MACRO V52.  The solution is to put < > around those macro  call
         arguments  that  contain  "un-quoted" and un-matched [,], (or).
         See FILCOMS below:

         FILE 1)        DSK:ALGUTL.MAC  CREATED: 1541 14-OCT-1976
         FILE 2)        DSK:ALGUTL.HLD  CREATED: 1440 14-OCT-1976
         
         1)15    IF <NDEL ELEMENT [:_] OR (NDEL ELEMENT [;(] AND LOOK ELEMENT [NT PROC])>
         1)                     TEST(E,T,.COLON);$
         ****
         2)15   IF NDEL ELEMENT [:_] OR (NDEL ELEMENT [;(] AND LOOK ELEMENT [NT PROC])
         2)                     TEST(E,T,.COLON);$
         **************
         1)17   IF <NOT ERRL AND (NDEL ELEMENT [: _] OR (NDEL ELEMENT [;(] AND LOOK EQ NONTYPE PROCEDURE))>
         1)                     TNGB(ERRL);$
         ****
         2)17   IF NOT ERRL AND (NDEL ELEMENT [: _] OR (NDEL ELEMENT [;(] AND LOOK EQ NONTYPE PROCEDURE))
         2)                     TNGB(ERRL);$
         **************
         1)19   IF <DEL ELEMENT [BEGIN DO ( [ PROCEDURE]>
         1)     EDIT (533)      ; SPR # 10-15076  COMPILER LOOPS ON ERROR
         ****
         2)19   IF DEL ELEMENT [BEGIN DO ( [ PROCEDURE]
         2)     EDIT (533)      ; SPR # 10-15076  COMPILER LOOPS ON ERROR
         **************
         1)23   IF <NDEL ELEMENT [ SEMICOLON (  ]>
         1)                     MOVE    T,NDEL;$
         ****
         2)23   IF NDEL ELEMENT [ SEMICOLON (  ]
         2)                     MOVE    T,NDEL;$
         **************
MCR52.doc -- Changes from V50A(432) to V52(551)                                                                   Page 8
KNOWN BUGS AND DEFICIENCIES


         FILE 1)        DSK:ALGEXP.MAC  CREATED: 1557 14-OCT-1976
         FILE 2)        DSK:ALGEXP.HLD  CREATED: 1558 14-OCT-1976
         
         1)13   IF <NDEL ELEMENT [NOT (]>
         1)                     MOVE    T,NDEL;$
         ****
         2)13   IF NDEL ELEMENT [NOT (]
         2)                     MOVE    T,NDEL;$
         **************
         1)19   IF <DEL = ')'> 
         1)                     DELEL(.RPAR);$
         ****
         2)19   IF DEL = ')' 
         2)                     DELEL(.RPAR);$
         **************
         1)45   IF <NOT(OLDEL=ACTUAL AND DEL ELEM [COMMA )]) AND DEL NE '_'>
         1)                     CAMN    DEL,ZASS;$
         ****
         2)45   IF NOT(OLDEL=ACTUAL AND DEL ELEM [COMMA )]) AND DEL NE '_'
         2)                     CAMN    DEL,ZASS;$
         **************
         1)47   IF <DEL = ')'>
         1)                     DELEL(.RPAR);$
         ****
         2)47   IF DEL = ')'
         2)                     DELEL(.RPAR);$
         **************


         FILE 1)        DSK:ALGDEC.MAC  CREATED: 1629 14-OCT-1976
         FILE 2)        DSK:ALGDEC.HLD  CREATED: 1610 14-OCT-1976
         
         1)22           IF LEXVAL<type> = STRING
         1)                             T.S (LEXVAL);$
         ****
         2)22           IF LEXVAL(TYPE> = STRING
         2)                             T.S (LEXVAL);$
         **************
MCR52.doc -- Changes from V50A(432) to V52(551)                   Page 9
KNOWN BUGS AND DEFICIENCIES


     2.  BASICH, a component of, BASIC gets  a  Q-error  when  assembled
         with  MACRO  52  on  a  line where an error message text is the
         argument of a MACRO call.

         MACRO 52 terminates the MACRO  argument  list  upon  seeing  an
         unmatched  >.   If  ignored,  the  message  will  be truncated.
         Enclose the error message in  ( )  to  indicate  >  and  <  ARE
         regular characters.  See FILCOM below:


         FILE 1) DSK:BASICH.MAC  CREATED: 1210 12-OCT-1976
         FILE 2) DSK:BASICH.BAK  CREATED: 2128 15-OCT-1974
         
         1)65   XFILER: FAIL    (%? STRING RECORD LENGTH > 132 OR  1%)
         1)     XFILR1: TLNN    C,F.QUOT
         ****
         2)65   XFILER: FAIL    %? STRING RECORD LENGTH > 132 OR  1%
         2)     XFILR1: TLNN    C,F.QUOT
         **************
         NOTE:  Items 3, 4, and 5, apply only to monitor versions  6.02A
         or earlier.

     3.  COMMON, a component of TOPS10  (V602A)  gets  2  N-errors  when
         assembled  with  MACRO  V52.  The errors occur in the following
         lines:

         A.  AXXVER==<BYTE(18) A00CLH(12) A00MVN-<1-
                      A00SVN/A00JVN>*<A00DLN/A00DLN > (6) A00SVN+<1-
                   0SVN/A00SVN>*A00DLN>

         B.  REPEAT Z1/Z2, <Z1==Z1-Z2>

             where Z2=0.

         MACRO V52  will  give  an  N-error  for  divide  checks.   Both
         N-errors  in COMMON can be ignored, since the assembled code is
         correct.

     4.  In FILUUO, a component of TOPS10 (V602A and  previous  versions
         only), the line

              AOS-1(p)

         will be assembled as 530000,,-1 since AOS will be treated as  a
         symbol  in  an  arithmetic  expression.  This is different from
         what is intended which is

              AOS        -1(P)

         correct the line so that a tab, rather  than  "-",  immediately
         follows  the  instruction  AOS.   The correct assembled code is
         530 00 0 17 777777.
MCR52.doc -- Changes from V50A(432) to V52(551)                  Page 10
KNOWN BUGS AND DEFICIENCIES


     5.  When loading TOPS10 REL modules generated by  MACRO  V52,  LINK
         gives error message:

              "MULTIPLY DEFIND GLOBAL SYMBOL WAKE, IN MODULE CLOCK1".

         WAKE is a UUO.  MACRO V52 makes it  global  and  WAKE  is  also
         defined  as  a  global  label  in CLOCK1.  The solution to this
         problem is to change the label WAKE  to  WAKEJ  (MCO  6318  for
         TOPS10 6.03).  Changes are required in two modules:

              CLOCK1 (near labels CKLCH1 and WAKE)

              UUOCON (near label MSLEEP)

         See FILCOMS:


         FILE 1) DSK:CLOCK1.MAC  CREATED: 1507 12-OCT-1976
         FILE 2) DSK:CLOCK1.HLD  CREATED: 0944 11-MAY-1976
         
         1)34           CAIE    T3,WAKEJ        ;IS THIS JOB SLEEPING?
         1)             SOJA    T2,CLKCH2       ;NO, LOOK AT NEXT ONE.
         ****
         2)34           CAIE    T3,WAKE         ;IS THIS JOB SLEEPING?
         2)             SOJA    T2,CLKCH2       ;NO, LOOK AT NEXT ONE.
         **************
         1)54   INTERNAL WAKEJ
         1)     EXTERNAL PJBSTS,SSQ,SLPQ
         1)     WAKEJ:   MOVE   T2,SSQ          ;SLEEP SATISFIED QUEUE CODE
         1)             MOVE    J,T1            ;JOB NO.
         ****
         2)54   INTERNAL WAKE
         2)     EXTERNAL PJBSTS,SSQ,SLPQ
         2)     WAKE:   MOVEI   T2,SSQ          ;SLEEP SATISFIED QUEUE CODE
         2)             MOVE    J,T1            ;JOB NO.
         **************
         
         FILE 1) DSK:UUOCON.MAC  CREATED: 1514 12-OCT-1976
         FILE 2) DSK:UUOCON.HLD  CREATED: 1057 27-JULY-1976
         
         1)28           HRLI    T1,WAKEJ##      ;ADR. IN RUNCSS WHEN JOB WAKES UP
         1)             MOVEI   T2,CLKR
         ****
         2)28           HRLI    T1,WAKE##       ;ADR. IN RUNCSS WHEN JOB WAKES UP
         2)             MOVEI   T2,CLKR
         **************
MCR52.doc -- Changes from V50A(432) to V52(551)                  Page 11
KNOWN BUGS AND DEFICIENCIES


     6.  LNKERR, a component of LINK V3A, gets a Q error when  assembled
         with  MACRO  V52.  Q-error appears on a line which has an extra
         ">" at the end.  This ">" character was there so that the older
         versions  of MACRO will assemble the line correctly.  The extra
         ">" is no longer needed.  The Q-error can be ignored, since the
         assembled code LNKERR is correct.

     7.  Very large programs, such as the TOPS-10 monitor, may not  load
         correctly  after being assembled with MACRO 52.  This is due to
         a bug in  LINK 3A  which  is  fixed  by  edit  572.   The  file
         LNK572.cor is a correction file for FED that will automatically
         install this edit in LINK 3A.  We recommend that this  edit  be
         installed  in  LINK 3A  before attempting to load monitors that
         have been assembled with MACRO 52.   Refer  to  LNK572.mac  for
         information  on  how to verify that edit 572 has been installed
         correctly.  For more information, see LNK572.pco.

     8.  For correct assembly of ALGOL V7:

         Add .DIRECTIVE .OKOVL at the beginning of ALGSTB.
         Add .DIRECTIVE NO MACMPD at the beginning of ALGDEC.

     9.  MAKLIB'S REL file patching facility may be used with REL  files
         produced  by  MACRO V52.  However, incorrect results will occur
         if any location whose contents is the result of a polish  fixup
         is  changed  by MAKLIB.  A future release of MAKLIB will remove
         this restriction.

    10.  A one line patch (edit 531) has altered the listings  of  macro
         expansions under XALL.  This edit allows two macro calls on the
         same line to be listed.  However, it has introduced the problem
         of a /80 listing embedded macro calls.  If this is not desired,
         remove the one line:

              TLZ IO,iomac

         at MAC23:  until a better patch is published for both cases.





5.2  Problems To Be Fixed In The Near Future

The following is a list of problems for which no solution  is  currently
known,  but  for  which  a solution is expected in the near future.  The
patches will be published in the DECSYSTEM-10 Software Dispatch as  they
become known.

     1.  Code in an IF1 conditional gets an extra line at the bottom  of
         each  page  in the list or cross reference of the program.  The
         line that MACRO puts out has a carriage  return,  but  no  line
         feed.
MCR52.doc -- Changes from V50A(432) to V52(551)                  Page 12
KNOWN BUGS AND DEFICIENCIES


     2.  MACRO'S floating point input routines do not agree  with  those
         of other compilers, FORTRAN in particular.





5.3  Problems Which Should Be Fixed In Some Future Version

     1.  Expressions of the type  "FOO-1(10)"  cause  LINK  to  generate
         different  values  depending  on  whether  FOO  is  INTERNAL or
         EXTERNAL.  The reason is that, in the latter case, LINK  thinks
         it  is  fixing  up  something like JRST FOO -1(10), not EXP<FOO
         -1(10)>,  and  indeed  cannot  tell  the  difference.    Future
         versions   of  MACRO  will  have  the  capability  to  generate
         sufficient information to LINK to generate the needed fixup, as
         well  as  maintain  upward and downward compatibility with user
         and system programs.

     2.  Handle polish block of greater than 17 words.

     3.  Universals are still searched on defining occurrences of INTERN
         and EXTERN, leading to possibly conflicting definitions for the
         symbols specified.  Several approaches to or ways  around  this
         problem have been suggested.





6.0  MCR53.DOC -- CHANGES FROM V52(551) TO V53(1120)

3.0  KNOWN BUGS AND DEFICIENCIES
*    1.  MACRO can't generate any Polish block  which  will  use  more
         than 17 words.
     2.  You can't forward reference a Polish symbol,
         should do:
              FOO=EXT##+1
                   .
                   .
                   .
              MOVE  1,FOO
     3.  A  Polish  OPDEF  is  treated  internally  as  a  full   word
         assignment.  As a result, AC and address may not be used with
         it.
     4.  MACRO's floating point input routines do not agree with those
         of other compilers, FORTRAN in particular.
     5.  MACRO will not assemble a line in PIP correctly:
               DISP   ),0
         Add angle  brackets  around  the  un-paired  close  paren  in
         PIP.MAC:
               DISP   <)>,0
     6.  MACRO will not assemble a line in RUNOFF correctly:
               MSG$   ..."
MCR53.DOC -- Changes from V52(551) to V53(1120)                  Page 13
MCR53.DOC -- CHANGES FROM V52(551) TO V53(1120)


         Delete the unpaired  quote  mark  at  the  end  of  the  line
         RUNOFF.MAC:
               MSG$   ...
     7.  MACRO prevents  the  TWOSEG  pseudo-op  from  working  across
         PRGEND.   LOGIN  57 took advantage of the bug.  Correct LOGIN
         sources as follows:  remove the TWOSEG pseudo-op from page  1
         of  LGNUNV.   On page 2 of LGNUNV, add a TWOSEG to the LGNDCL
         macro definition just before the RELOC  400000.   In  LGNLOW,
         add  a  TWOSEG before the RELOC 400000.  This fix is included
         in LOGIN version 60, which is fully compatible with  versions
         50A, 52, and 53 of MACRO.
     8.  MACRO currently will not  allow  pooling  of  literals  which
         contain labels.
     9.  If the right hand side  of  an  assignment  statement  is  an
         expression  containing  Polish,  angle-brackets must surround
         the expression.
     10. Expressions of the form
              <EXT  +1>B7
         generate a ?MCREPP error message.
     11. Incorrect CREF listings generated when:
              .zero loop of IRP is done.
              .references suppressed by XLIST inside macro expansion.
     12. Phase errors will be generated by MACRO when  assembling  the
         distributed MIC source.  MACRO allows macro calls to occur in
         the operand field of a source statement.  The sample  program
         below  shows  the  sequence of instructions in the MIC source
         which causes the phase errors to occur.
              SEARCH MACTEN
              JRST MACERR
              MACERR:
              END
         As  shown  above,  MIC.MAC   forward-references   MACERR,   a
         user-defined  label.   However,  MACERR  also  happens  to be
         defined in MACTEN as a macro.  Since MIC searches MACTEN, and
         since  macro  calls  are allowed in operand fields, the macro
         definition is used in assembling the statement "JRST  MACERR"
         in  pass  one.  This causes phase errors in pass two when the
         correct label definition is used.  Problem may  be  fixed  by
         changing the lable name MACERR so as not to conflict with the
         macro name.
     13. In SETSRC.MAC, MACRO encounters  a  forward  reference  of  a
         symbol  name  JSYS, and MACRO assembles in TOPS20 JSYS opcode
         instead of user label address.  By changing  the  label  name
         and  all  its  references in SETSRC, you will get the correct
         assembly.

MCR53.DOC -- Changes from V52(551) to V53(1120)                  Page 14
MCR53A.DOC -- CHANGES FROM V53(1120) TO V53A(1152)


7.0  MCR53A.DOC -- CHANGES FROM V53(1120) TO V53A(1152)

3.0 Known Bugs and Deficiencies

*    1.  MACRO can't generate any Polish block  which  will  use  more
         than 17 words.
     2.  You cannot forward reference a Polish symbol  of  other  than
         the form:  EXT##+k or EXT##-k
         instead, you should do the following:
              FOO=EXT1##+EXT2##
                   .
                   .
                   .
              MOVE  1,FOO
     3.  A  Polish  OPDEF  is  treated  internally  as  a  full   word
         assignment.  As a result, AC and address may not be used with
         it.
     4.  MACRO's floating point input routines do not agree with those
         of other compilers, FORTRAN in particular.
     5.  MACRO will not assemble a line in TOPS-10 PIP correctly.  The
         following represents edit 346 to the product:
         At DSPTAB + 12L:
               DISP   ),0
         Add angle brackets around  the  un-paired  close  parenthesis
         such as:
               DISP   <)>,0
     6.  MACRO will not assemble 2 lines in RUNOFF correctly:
         At FRCEND + 4L and FIN2 + 13L:
               MSG$   ARG1,ARG2,,....."
         Enclose the last macro argument in angle brackets, such as:
               MSG$   ARG1,ARG2,,<.....">
         or include the statement .DIRECTIVE NO MACMPD somewhere  near
         the beginning of the program.
     7.  MACRO currently will not  allow  pooling  of  literals  which
         contain labels.
     8.  If the right hand side  of  an  assignment  statement  is  an
         expression  containing  Polish,  angle-brackets must surround
         the expression.
     9. Incorrect CREF listings generated when:
              .zero loop of IRP is done.
              .references suppressed by XLIST inside macro expansion.
     10. Phase errors will be generated by MACRO when  assembling  the
         distributed  TOPS-10 MIC source.  MACRO allows macro calls to
         occur in the operand field of a source statement.  The sample
         program  below  shows the sequence of instructions in the MIC
         source which causes the phase errors to occur.
              SEARCH MACTEN
              JRST MACERR
              MACERR:
              END
         As  shown  above,  MIC.MAC   forward-references   MACERR,   a
         user-defined  label.   However,  MACERR  also  happens  to be
         defined in MACTEN as a macro.  Since MIC searches MACTEN, and
         since  macro  calls  are allowed in operand fields, the macro
MCR53.DOC -- Changes from V52(551) to V53(1120)                  Page 15
MCR53A.DOC -- CHANGES FROM V53(1120) TO V53A(1152)


         definition is used in assembling the statement "JRST  MACERR"
         in  pass  one.  This causes phase errors in pass two when the
         correct label definition is used.  Problem may  be  fixed  by
         changing the lable name MACERR so as not to conflict with the
         macro name.
     11. In TOPS-10 SETSRC.MAC, MACRO encounters a  forward  reference
         of  a  symbol  name  JSYS, and MACRO assembles in TOPS20 JSYS
         opcode instead of user label address.  The  following  change
         represents  edit  47  to  the  product,  which eliminates the
         problem.
         In macro CTAB, 6 lines down, the macro definition:
               DEFINE   CC (NAM,ADDR)<ADDR>
         should be changed to:
               DEFINE   CC (NAM,ADDR)<Z ADDR>
     12. Attempts to compile field image BACKRS.MAC to rebuild  BACKUP
         will  produce R errors.  These errors occur on erroneous BYTE
         statements that attempt to modify the high order bit of an 18
         bit  relocatable  quantity.   This  type  of  error  was  not
         detected by previous versions of MACRO.
         At FRSDTM + 0L:
                FRSDTM: BYTE (1)0 (17)FRSDAT (18)L$DATE ;LABEL CREATION
                        BYTE (1)1 (17)FRSDSD (18)L$DSTR ;DESTROY DATE
                        BYTE (1)0 (17)FRSSDT (18)S$DATE ;SAVE SET DATE
         Replace the 3 lines with:
                        FRDUM1==0B18+FRSDAT             ;[330]
                        FRDUM2==1B18+FRSDSD             ;[330]
                        FRDUM3==0B18+FRSSDT             ;[330]
                FRSDTM: BYTE (18)FRDUM1 (18)L$DATE      ;[330]LABEL CREATION
                        BYTE (18)FRDUM2 (18)L$DSTR      ;[330]DESTROY DATE
                        BYTE (18)FRDUM3 (18)S$DATE      ;[330]SAVE SET DATE
     13. The opcode field  of  an  instruction  must  evaluate  to  an
         absolute  quantity  at  compile  time.  Note that no error is
         generated if this condition is not met, to allow  for  OPDEFs
         which  contain  relocatables,  or  externals  in  the address
         portion of the instruction.
     14. Polish is not allowed an index field  (eg.   ADDR(POLISH)  ).
         Also,  externals  are  not  allowed in the index field if the
         expression evaluates to other than a zero in the  left  half.
         This  restriction  is imposed because there is no polish swap
         operator.  Note that the expression ( "OP  AC,POLISH(1B1)"  )
         falls  into  this  class  of  problems,  however,  it  is not
         currently flagged as an error.
     15. Error lines in macros under SALL do not list.  They  can  not
         be  listed  since the original source line is not around when
         the macro call line is finally listed.
     16. Long binary generating lines under XALL list only partially.
     17. Lines in an IRP will usually not be indeneted  properly  when
         LALL is in effect.
     18. Under SALL, the following example involving REPEAT  does  not
         list as expected.
                REPEAT 2,<MOVE
                        COUNT=0>
         The REPEAT is closed off before the last line is listed.
     19. A formfeed followed by another formfeed causes macro to  skip
MCR53.DOC -- Changes from V52(551) to V53(1120)                  Page 16
MCR53A.DOC -- CHANGES FROM V53(1120) TO V53A(1152)


         a page header.
     20. CREF reference line numbers can be  incorrect  for  variables
         seen  in XLISTed code.  In the following example, A is CREFed
         as being referenced on the line following LABEL.
                A=1
                DEFINE X,<XLIST
                A
                LIST>
         LABEL: X
                Z
     21. MACRO's  command  scanner  is  very  archiac,  and  does  not
         neccessarily conform to the currently accepted method of file
         specification scanning,  such  as  that  used  by  SCAN.   In
         particular, the command:
                FIL E.REL=FILE.MAC
         is accepted without error, and FILE.REL is created.  Also,  a
         single  filespec  will  cause the TOPS-20 version of MACRO to
         loop until it eventually runs out of core.
     22. The .DIRECTIVE .NOBIN does not work  properly  with  PRGENDed
         files, since the directive immediately closes the .REL file.
     23. .DIRECTIVEs MACPRF and .NOUUOS do not get  cleared  across  a
         PRGEND.
     24. MACRO is unable to PEEK ahead across the end of  macro  args,
         the  end  of  a  macro,  the  end  of an IRP, or the end of a
         REPEAT.  This means that constructs such as "==", "=:", "::",
         and others cannot be recognized across these limits.  This is
         related to not being able to continue  a  line  across  these
         boundaries.
     25. Either  "A=B##"  or  "A=EXP  B##"  should  generate  fullword
         Polish.   At  present,  the first case generates a right half
         external fixup, and the second  case  generates  bad  listing
         output and an incorrect .REL file.
     26. Polish used as  the  argument  to  a  B  shift  operator  may
         generate a bad .REL file, depending upon whether or not angle
         brackets surround the entire expression, such as:
                <<POLISH>B7*4>
     27. Characters that are not specified to be in MACRO's recognized
         character  set,  such as vertical bar, will be converted to a
         strange up-arrow character, if they are passed over  as  part
         of an unprocessed conditional.
     28. A macro which contains SALL and XLIST  will  cause  an  extra
         blank  line  to appear in the listing file, because both SALL
         and XLIST attempt to  finish  off  the  current  output  line
         before changing listing modes.
     29. An unary minus preceeding a relocatable expression such as:
                -<RELOC+2>
         generates garbage Polish.
     30. A Polish assignment statement  with  an  imbedded  assignment
         statement, such as:
                A=B##+<N=3>
         will not generate the proper Polish fixup block for symbol A.
     31. Phase errors can occur in a PSECTed program that has a symbol
         defined  as a Relocatable, and also as a MACRO/OPDEF/SYNONYM.
         This occurs because of the following:
MCR53.DOC -- Changes from V52(551) to V53(1120)                  Page 17
MCR53A.DOC -- CHANGES FROM V53(1120) TO V53A(1152)


         A. MACRO maintains a seperate symbol table  for  each  PSECT.
            This  is  done to keep EXTERNAL fixup chains seperate, and
            also for Relocatables since they may  be  referenced  from
            another PSECT.
         B. MACRO expects the two  definitions  for  the  same  symbol
            (Relocatable  and  MACRO/OPDEF/SYNONYM) to appear together
            in  the  same  symbol  table.   MACRO   frequently   makes
            decisions  concerning  the treatment of a symbol using the
            knowledge that both symbol definitions exist.
         C. In a PSECTed  program,  the  two  symbol  definitions  may
            actually  appear  in  different PSECT symbol tables.  This
            can  also  occur  differently  during  the   two   passes,
            depending  on  IF1  and  IF2  conditionals.   Also, if the
            MACRO/OPDEF/SYNONYM  is  defined  in  a   UNIVERSAL,   the
            situation   is  complicated  since  such  definitions  are
            usually entered into the symbol table for the Global PSECT
            when the symbol is referenced.

         Given the above,  it  is  possible  to  reference  the  wrong
         definition  of  a  symbol  during  pass  2  of  the assembly,
         generating a different amount  of  code  than  was  generated
         during pass 1, causing the phase errors.



8.0  INTERNAL EDITS -- VERSION 46(52)

;  53           Macros sometimes failed to assemble because closing  >
;               was being counted twice.
;  54           Not enough information is given if no END statement is
;               seen.  Fix, print latest label and increment.
;  55           Change default value of KI-10 switch so KI-10 op-codes
;               are generated.
;  56           Change all JOBDAT symbols to be of form .JBxxx.
;  57           Add new CALLIs 111 through 120.
;  60           Superceded by #63
;  61           Fix listing of comments after macro calls.
;  62           A too long subttl caused spurious errors.
;  63           Give a Q error if integer number overflowed  and  data
;               is lost.
;  64           Fix error in XWD global##, symbol
;  65           Output field was wrong when binary listed was  exactly
;               16 characters long.
;  66           Redefine the switch table now that there are more than
;               16 switches since switches T, W, and X would not work.
;  67           Fix default setting of form switch.
;  70           Help text was wrong /T wrong ang /W missing
;  71           Variables defined by # give phase error  with  PRGEND.
;               Fix, save more information.
;  72           PRGEND didn't turn off NOSYM, do so.
;  73           If the input file name has no extension remove  a  tab
;               from the subttl line.
;  74           Use  the  reenter  command  to  save   the   assembled
;               universal  files,  change the starting address so that
MACRO.DOC -- Changes from MACRO 46(52) to MACRO 47(113) Dec, 1971Page 18
INTERNAL EDITS -- VERSION 46(52)


;               they are preserved and exit.  This allows  a  user  to
;               save  a  version  of macro containing universal symbol
;               tables.  A new switch /U clears the  universal  tables
;               and restores the original starting address.
;  75           Add new suffixes K, M, and G  to  integer  numbers  so
;               that:
;                   1K = 1000
;                   1M = 100000
;                   1G = 1000000000
;  76           Add MTAPE UUO nmemonics so macro knows about MTAPEs as
;               well as CALLIs and TTCALLs.
;  77           Make ARRAY and INTEGER  (but  not  LVAR)  standard  by
;               removing  then  from  the  WFWSW  conditional.   These
;               pseudo-ops generate variables which behave like  those
;               generated  by  #.   INTEGER generates one location per
;               veriable, ARRAY generates as many as is  specified  by
;               ARRAY FOO[n] where n is an integer number.
;  100          Remove the  conditional  assembly  switch  SEG2SW  but
;               leave   the  code  generated  if  the  switch  was  on
;               (non-zero).
;  101, #102, #103    Externals in universal  files  are  not  handled
;               correctly.   Fix  is  to  copy  the  symbol  from  the
;               universal file, zset its value to 0, allocate 2  words
;               in free core for the value and the symbol name.  These
;               fixes also handle symbols with 36 bit values.
;  104          Remove UOUT30 since never used and save 2 words.
;  105          Renove RENTSW assembly switch bit leave code generated
;               if  the  switch  was  on  (non-zero).  This means that
;               HISEG and TWOSEG will always generate reentrant code.
;  106          Fix search logic so a  universal  file  can  never  be
;               referenced until it has been safely stored away.  This
;               fixes ill.  mem.  ref.  when universal tries to search
;               itself.
;  107          LVAR  is  not  needed  with  TWOSEG  so   remove   all
;               references  to  it.   This  means remove the remaining
;               code under WFWSW conditional.
;  110          Remove test for undefined symbol in INTERN code.  This
;               allows  forward  references to internals defined after
;               the  INTERN  pseudo-op  (only  happens  if  symbol  is
;               undefined on pass 1).
;  111          Remove FTDISK conditional but leave code  produced  if
;               it was on (non-zero), it only saved 23 locations.
;  112          Remove RUNSW conditional and all code produced  if  it
;               was  on (non-zero), all DECsystem-10 monitors can do a
;               RUN UUO.
;  113          Fix universal symbol which has 36 bit  value  flag  on
;               but  only a 18 bit value (this can happen if symbol is
;               redefined) so that 36 bit value flag is off.
MACRO.DOC -- Changes from V47(113) to V50(272)  Oct, 1974        Page 19
INTERNAL EDITS -- VERSION 47(113)


9.0  INTERNAL EDITS -- VERSION 47(113)

;  114  (6113)  Tidy up the symbol table listing, make all  columns  the
;               same  length  except on last page where last column will
;               be short.
;  115          Implement binary universal files.
;               Whenever  a  universal  file  is  assembled  the  symbol
;               definitions, opdefs, and macro definitions will be saved
;               in a binary file on the users area.  This file will have
;               file  name  the same as the program name (from universal
;               pseudo-op)  and  extension   .UNV.  Whenever  a   SEARCH
;               pseudo-op  is seen and the universal is not currently in
;               core a search is made on users area,  device  UNV:,  and
;               finally  SYS:  for  the  binary universal file.   If the
;               file is found it is read into core as if MACRO had  just
;               assembled  it.   Eventually a library of such files will
;               be available.
;               Add switch /U which if seen prevents the  writing  of  a
;               new  binary universal file, useful to test a new copy of
;               the parameter file in core without destroying  the  copy
;               on dsk.
;  116  (6272)  Byte (3)1 (7)1 (3)1 (1)1 (4)1 (18)1
;               Does not list  correctly,  it  gets  confused  with  the
;               output field for I/O instructions.  Fix, use a different
;               method to recognize I/O instructions.
;  117  (6321)  Fix for I.S.C.  not required by standard TOPS10.
;  120  (6245)  Test for forward references to  a  label  defined  in  a
;               literal  and flag with "U" error, also compatible common
;               arrays.
;               This was developed to test block  type  20  code  before
;               FORTRAN-10 was available, but should be of use to anyone
;               interfacing assembly code with FORTRAN.
;  122          Add pseudo-ops .REQUIRE and .REQUEST
;               They both have the syntax
;               .REQUEST DEV:FILE[PPN]
;               These two pseudo-ops generate the SAIL  block  types  16
;               and  17.   This  provides  a  means of specifying in the
;               source language other programs to  be  loaded  with  the
;               assembled  one  (e.g.   .REQUEST REL:HELPER) which would
;               load HELPER.REL from REL:.  The only  extension  allowed
;               is  .REL, the [PPN] is optional.  The only difference is
;               the .REQUEST loads the  file  in  library  search  mode,
;               whereas .REQUIRE does not.
;  123          Add ^! as the XOR operator and ^- as the NOT operator.
;  124  (6350)  Pass 1 IF tests (e.g.  IFN) do not produce "V" errors if
;               the condition is undefined.  Note, that this invalidates
;               many existing programs which  just  happen  to  assemble
;               correctly because the condition was assumed to be 0.  If
;               this proves to  be  serious  the  fix  will  be  removed
;               temporarily.
;               The patch is at
;               IF+4    TRNE   ER,ERRU
;                       TRO    ER,ERRV
;  125  (6483)  Print "X" errors on pass 1.
MACRO.DOC -- Changes from V47(113) to V50(272)  Oct, 1974        Page 20
INTERNAL EDITS -- VERSION 47(113)


;  126          Speedup (slightly) character handling by removing
;               "PUSHJ PP,BYPASS" and making it an inline macro (two words).
;  127          Free a flag bit for  polish  fixups  (future),  use  the
;               title  seen  bit, remember that a title has been seen by
;               TBUF+1 being non-zero.
;  130  (6482)  Make statements that generate more than  one  data  word
;               (e.g.  EXP 1,2,3) have CREF numbers on each line.
;  131  (6476)  Blanks at the end of a command string  cause  a  command
;               error  message.   Since  the  blanks  are  not required,
;               delete them.
;  132  (6477)  The @ command string default extension (.CCL) is applied
;               after  a  null  extension is  tried, this is incorrect.
;               Fix, try .CCL before null.
;  133  (6475)  Under  certain  circumstances  (SALL  must  be   on)   a
;               statement  does  not  list  if  it contains a macro call
;               which generates binary, but does list if nosting file in
;               the same way as = does.
;  136          Add a global symbol .CPU., which is put  in  the  user's
;               symbol  table  with  a value which reflects the CPU type
;               that MACRO is runing on.  This symbol can be  tested  by
;               IFN etc.  The values are:
;               1 = PDP-6, 2 = KA-10, 3 = KI-10
;  137  (6765)  If a macro is called with its arguments in ()  and  does
;               not  use all the arguments, then the extra arguments and
;               closing ")" are left around.  Fix, read and  throw  away
;               all characters up to the closing ")".
;               Also if the macro was called with args in "()", then  it
;               should not stop when it reaches ";" or end of line since
;               the terminating ")" has not been seen.   Fix,  read  all
;               characters  until  ")"  is  seen.   Note,  this  may  be
;               incompatible but usually generates errors.
;  140  (6708)  Allow  single  line  conditional  not  to  require   the
;               enclosing   angle  brackets.   If  the  first  non-blank
;               character after the comma is a left angle bracket  treat
;               as  currently and match brackets, if not assume a single
;               line conditional  and  assemble  if  true  or  treat  as
;               comment if false.
;  141  (6629)  Do not CREF (i.e.  put  in  CREF  table)  the  pseudo-op
;               .XCREF.
;  142  (6509)  Macro-10 does not count pages correctly in PRGEND  file,
;               it  also increments the page number on the symbol table.
;               The desired action is for the page number to  correspond
;               to  the  actual  number of form feeds in the input file,
;               this would make editing easier.
;               Fix, only increment the page number if a  form  feed  is
;               seen.  Count the symbol table pages as S-1, S-2 etc.
;  143  (6698)  Give a warning "Q" error if more that 18 bit values  are
;               used in XWD.
;  144          Be consistent about the end  of  line  characters,  make
;               them  be  LF,  FF, and VT only (not CR).  Also check for
;               free CR and give a "Q" error warning  (see  edit  #252).
;               This  is  useful since SOUP may have a problem with such
;               lines.
;  145          Make "Q" errors print as  warnings,  they  do  not  bump
MACRO.DOC -- Changes from V47(113) to V50(272)  Oct, 1974        Page 21
INTERNAL EDITS -- VERSION 47(113)


;               .JBERR  or  cause execution deletion (unless they happen
;               to be real errors).
;  146          Use HELPER to print the help text.  Put all the switches
;               in  file  MACRO.HLP and put it on DEVICE CODES INCLUDING
;               ALL THE SECOND UNITS, ADD THE NEW CALLI UUOs.
;  150  (6894)  Make the location counter on the listing file  show  the
;               phased  location  on  a  PHASE pseudo-op rather than the
;               current location.  This is the location where  the  code
;               should be when it is executed.
;  151  (ALC)   Add the FAIL compatible pseudo-ops LINK, LNKEND and ORG.
;               However  since  all  new  pseudo-ops  must  start with a
;               period they are .LINK, .LNKEND,  and  .ORG.   .LINK  and
;               .LNKEND  generate  rel block type 12 code.  .ORG is like
;               LOC and RELOC but takes the relocation of its argument.
;  152  (7063)  Superseded by #176
;  153  (6981)  Very long sequenced lines did not list correctly.
;  154  (7018)  Superseded by #205?
;  155  (7005)  Allow one label  per  literal  to  be  anywhere  in  the
;               literal  (not  just  the  first  word), but do not allow
;               forward references to the label.
;  156  (7116)  If a macro is defined in a universal and  referenced  in
;               another  program in the same file (separated by PRGEND),
;               the macro definition may get redefined on pass 2 in  the
;               universal file and cause errors.  Fix, if the definition
;               is in a universal file do not garbage collect it,  leave
;               the definition for pass 2 of the second file.
;  157  (7027)  List a blank line if it contains a sequence number.
;  160  (7078)  Garbage can get stored in the code  bits  of  a  RADIX50
;               word  if the pseudo-op is in a macro which terminates on
;               that line.  Fix, save the code bits  around  the  symbol
;               evaluation.
;  161  (7373)  The PAGE pseudo-op conflicts with the goals of edit #142
;               because  it  increments  the  page number without a form
;               feed being seen.  Fix, increment  the  page  number  sub
;               field rather than the page number.
;  162          Add SFD support.
;  163  (7435)  Superseded by #204
;  164          Add external expressions (same as FAIL).
;               All this code is under the feature  test  switch  POLISH
;               which is turned off in version 50.  The standard version
;               of LOADER can not load this code unless  the  FAILSW  is
;               turned on, LINK-10 however can load it.  .
;  165          Remove 0 listed on first line after PRGEND
;  167  (7463)  Allow !  after a symbol in INTERN and ENTRY to make  the
;               symbol suppressed to DDT.
;  170  (7638)  Macro-10 sometimes gets ILL MEM  REFS  assembling  large
;               PRGEND files (FORLIB).  The exact cause is not known but
;               bug always shows  up  when  the  top  location  in  core
;               contains junk.
;               Fix, always make sure top location is zero.
;  171  (8374)  If the expression (inside <>) after a  in a  macro  call
;               is  itself  a  macro,  macro-10 gets illegal UUO errors.
;               Fix, make this case illegal, give an "A" error.
;  173  (8264)  The synonym processor and the core  expander  both  save
MACRO.DOC -- Changes from V47(113) to V50(272)  Oct, 1974        Page 22
INTERNAL EDITS -- VERSION 47(113)


;               accs  in  the same temporary space.  The second argument
;               to a SYN may be a macro which cause core  expansion,  if
;               this  happens  the  accs are incorrectly restored.  Fix,
;               save SYN accs on the stack.
;  175  (8606)  Make   control   left-arrow   (ascii   37)   only   mean
;               continuation  line  if  it  occurs at the end of a line,
;               i.e.  next character is CR, LF, FF,  or  VT.   Otherwise
;               pass to program as ascii 37.
;  176  (8633)  Angle  brackets  in  comments   after   ;;    in   macro
;               definitions   are   not   handled   correctly,   this  a
;               complicated task in general.  Fix, strip out  all  other
;               characters between ;;  and end of line except for "<" or
;               ">".  Matching pairs are not removed.
;  201          Support DATE75 project.
;  202          Add pseudo-op .DIRECTIVE  which  takes  a  list  of  new
;               pseudo-ops  which  need no arguments, this saves filling
;               the opcode table with simple pseudo-ops such as MLON and
;               MLOFF.   Make  the  first such pseudo-op be .NOBIN which
;               gets rid of a REL file if one was requested, this is for
;               UNIVERSAL  files  which  need no REL file output.  Other
;               pseudo-ops will be added as required (see edits #206 and
;               #235).
;  203  (10071) Fix TWOSEG and PRGEND interaction so that files such  as
;               FORLIB and SCAN %4 can be loaded in one segment.
;  204  (11044) If a symbol  is  defined  in  a  universal  file  as  an
;               external  but  is never referenced, the flag SPTR is not
;               yet on, but PNTF is, and the routine INSRT3 t) Add  some
;               TENEX  features.   They are .ASSIGN pseudo-op (ASSIGN at
;               BBN) and the TENEX handling of tabs and spaces in  macro
;               calls.   Also  added were the TENEX opcodes (but not all
;               the JSYS's) (under  conditional  assembly  switch  TENEX
;               which is off in the DEC version).
;               The .ASSIGN pseudo-op has syntax
;               .ASSIGN SYM1,SYM2,INCR
;               The effect is to assign the value of SYM1  to  SYM2  and
;               then  to increment SYM1 by INCR.  This generates the REL
;               block type 100.
;               The BBN MACRO ignores spaces and  tabs  in  macro  calls
;               unless  they are enclosed in angle brackets, this is the
;               correct  action  but  is  incompatible   with   existing
;               software   and  may  cause  problems.   This  effect  is
;               controled by two arguments to the  .DIRECTIVE  pseudo-op
;               .ITABM  and  .XTABM  which  include  and exclude tabs in
;               macro calls respectively.  The standard is  .ITABM,  the
;               current DEC way, but this may change in the future.
;  207          If no end statement is found either because its  missing
;               or  more likely because of other errors, macro will give
;               a warning but dummy up an end and continue  to  pass  2.
;               This allows the creation of a listing file which usually
;               pin points the error.  Of course the  second  pass  will
;               generate many errors.
;  210          Allow the start address on the END statement  to  be  an
;               external,  this  requires LINK-10 version 1A to load the
;               code produced (see edit #244).
MACRO.DOC -- Changes from V47(113) to V50(272)  Oct, 1974        Page 23
INTERNAL EDITS -- VERSION 47(113)


;  211          Allow <> to be the same as [] in the file spec, this  is
;               for  future  compatibility.  Thus  a  directory  can  be
;               either [1,4] or <1,4>
;  212          Put all macro error messages in the  new  standard  form
;               (i.e.  that used by LINK-10).  The 3 letter nmemonic for
;               macro is MCR.
;  213          Put all errors in the CREF table, this makes  it  easier
;               to  find  them.   Currently the errors are listed in the
;               macro table and have the form %....x for all "x"  errors
;               etc.  This may be modified if CREF is changed.
;  214          Output type bit for MACRO in header block (type  6)  for
;               LINK-10  maps.  Note this adds one extra word to the rel
;               file so that all  FILCOMs  with  version  47  will  show
;               differences.
;  217  (9996)  Turn on SALL on macro call in  a  literal  so  that  the
;               macro expansion is not listed.
;  220  (9633)  Make .CREF and .XCREF apply to specific symbols.
;  221  (9508)  If the end of line character after a TAPE  pseudo-op  is
;               FF or VT, list it.
;  222  (9499)  More of #124
;  223  (10393) Fix the ill mem ref.  on END SYMBOL where  SYMBOL  is  a
;               macro call.
;  224  (S-033) Fix bug in decoding minor version number.
;  225  (11907) Fix a bug in redefining macro in a PRGEND.
;  226  (11929) More of edit #225 when a universal file has been read.
;  227  (S-034) Make the number of lines  per  page  2  larger.   Add  a
;               switch /nnL to give number of lines per page.
;  230          Don't search universal files  on  label  and  assignment
;               definitions.
;  231          Expand core to hold both copies of symbol table if  file
;               is a universal with prgends.
;  232          Add .TEXT pseudo-op to generate  ASCIZ  block  type  for
;               LINK-10.
;  233          Check for invalid argument to BLOCK pseudo-op  and  give
;               "A"  error.   Illegal  args  are floating point numbers,
;               negative numbers, etc.
;  234          Output the CPU time taken for the assembly  at  the  end
;               with the program break.
;  235          Add .DIRECTIVE KA10 and KI10 which set the corresponding
;               bit in the type 6 block.
;  236          Fix SALL/XLIST bug, make XALL only turn off SALL.
;  237  (12483) Give a  "U"  error  if  a  label  is  both  defined  and
;               referenced in the same literal.
;  240  (12631) Add enhancements to  edit  #115.   Allow  syntax  SEARCH
;               FOO(DSKB:BAR.ABC[123,456,SFD,LIST])
;               To look for universal FOO in core, and if not there look
;               for  it  on  device  DSKB:  [123,456,SFD,LIST] with file
;               name BAR.ABC, and copy it into core with name FOO.   The
;               default file spec is DSK:NAME.UNV.
;  241  (13033) Fix incorrect checking  of  acc  "C"  against  ASCII  at
;               STMNT2+13
;  242  (13034) save AC0 (and some others) at OUTPL1
;  243  (13402) Mak

MACRO.DOC -- Changes from V47(113) to V50(272)  Oct, 1974        Page 24
INTERNAL EDITS -- VERSION 47(113)


;  246  (13119) Write CREF file in default path
;  247  (12803) Flag questionable use of # and ## on same symbol
;  250  (13032) Clear more error bits on pass1 in multi-line literal
;  251          Fix the bug in PRGEND logic if a LIT statement  is  seen
;               before  the  END  such  that  the  program  break is now
;               correct.
;  252          Don't give a "Q" error if a free "CR" is found (see edit
;               #144).
;  253          If an error occurs on  pass1  in  a  multi-line  literal
;               garbage  will  be printed if previous comment was longer
;               than current one and a null is not found.   Fix,  put  a
;               null in buffer after end of line.
;  254          Use all the available space on 132 char.  lines for long
;               comment lines (uses 4 more characters now).
;  255          Fix the unary minus bug in edit #164, note this is still
;               not supported in version 50.
;  256  (13664) Handle special externals in universal  files  correctly,
;               these are definitions of form INTERN=EXTERN+CONSTANT
;  257          Count the number of lines used by a vertical tab so that
;               page overflow does not occur.
;  260          Fix a bug in edit #140 so that now junk before the first
;               comma or angle bracket is thrown away.
;  261          Handle SOS page marks correctly
;  262          Fix ill mem ref caused by missing right paren  in  macro
;               arg  list  (introduced  by  edit  #137).  Give the error
;               message
;               MISSING CLOSE PAREN IN ARG LIST FOR [MACRO]
;  263          Don't destroy ac RC if long line in ASCII pseudo-op
;  264          Fix bug in edit #175 which caused extra cr-lf.
;  265          New for MACRO version 51
;               Add .PSECT code under POLISH conditional
;               This code will NOT load with field image LINK-10
;               It will be fully documented in version 51
;  266          Fix loop caused by missing ")" with edit #240
;  267          Don't pass definition flag to CREF on ##
;  270          Double size of basic push down stack to 100
;  271          Add ".IF conditional", Form is:
;                   .IF SYMBOL ATTRIBUTE,<CODE>
;               where attribute is one of:
;                   SYMBOL, SYNONYM, MACRO, OPDEF, EXTERNAL, ENTRY,
;                   INTERNAL, GLOBAL, LOCAL, LABEL, ASSIGNMENT,
;                   ABSOLUTE, RELOCATABLE, LRELOCATABLE(LHS),
;                   RRELOCATABLE(RHS), NUMERIC
;  272          Loop caused by edit #260 if end of line is encountered.
;
;       MACRO %50 (272) released September 1975
MACRO.DOC -- Changes from V50(272) to V50A(432) Sept, 1975       Page 25
INTERNAL EDITS -- VERSION 50(272)


10.0  INTERNAL EDITS -- VERSION 50(272)

;  273          add bypass to fix error with ppn spec for .require & .request
;  274  (14734) fix problem with .if conditionals
;  275  (14723) fix spurious monret with sticky ppns
;  276  (14811) cause * and / to give n errors when they overflow
;  277          allow altmodes to terminate command strings again

;  edits 300 through 317 were used for macro 51

;  320  (3086)  fix mcrnes message in define after sixbit//
;  321  (3085)  fix literals not listing in macros and some bogus V errors
;               when not lall
;  322          change radix50 to give Q error on code not 74 bits
;  323  (14943) fix to make externals referenced in universals work
;  324  (14957) fix for e errors when opdef references external of same name
;  325  (15043) change 152 & 176 to not print angle brackets or 1 ; after ;;
;  326  (15218) change mcrnec message to give up assembly
;  327          fix the crlf's when lall is used in a macro under sall
;  330  (15277) correct value of symbol .cpu. for ka-10
;  331  (15279) correct output of .text blocks generating more than 18 words
;  332          correction to 325 when ;;> is end of macro
;  333  (15280)  is sometimes swallowed when not followed by ^! or ^-
;  334  (15293) default macro arguments are not saved in binary universals
;  335  (15406) scan .require,.request with file spec scanner, not getsym
;  336  (15485) clean up 323 to make it the same as published 256
;  337          fix edit 333 to make ^! ^- work again
;  340  (15682) check for forward defined entries before making undefined
;               externals
;  341          fix errors with default arguments
;  342  (15680) add portal opcode
;  343  (15683) don't search universals when defining intern,extern,etc
;  344          list move [cono] correctly
;  345  (16130) correct edit 335 to bypass extra tabs and spaces
;  346  (16130) prevent reloc from operating across prgend's
;  347  (16250) fix edits 325 and 332 to handle macros terminating
;               on the same line
;  350  (16471) edit 345 breaks scanning of .requ??? type item because
;               bypass macro eats first character of spec.
;  351  (16335) when an open angle bracket is missing after irpc,
;               don't crash while searching for it.
;  352  (16589) fix '[device] not available' error message typeout
;  353          remove edit 343
;  354  (16804) fix edit 351 to allow comma before open bracket in irp,irpc
;               add 'missing open bracket' error message for irp
;  355  (16878) check enough core allotted for universal files with prgend
;  356  (16883) give error message if unable to write universal file
;  357  (17041) fix edits 333,337 to make ^!,^- work in a macro
;  360  (16690) fix '[symbol] unassigned, defined as if external' error
;               message typeout
;  361  (17046) fix edits 351,354 to allow ) before open angle bracket
;  362          add .directives .okovl,.erovl to allow * or / overflow
;  363  (16988) insert undefined symbol preceded by unary minus in undefined
;               symbol table
MACRO.DOC -- Changes from V50(272) to V50A(432) Sept, 1975       Page 26
INTERNAL EDITS -- VERSION 50(272)


;  364  (17147) add separate 'universal version skew' error message
;  365  (17143) fix .cref,.xcref for multiply-entered symbols
;  366  (17256) fix handling of first level angle brackets inside macros
;  367  (16559) fix error handling in literals
;  370  (17387) fix .text flag handling
;  371  (16710) correct decrementing of macros defined in universals below 1
;  372  (17912) fix .xtabm for special cases
;  373  (17913) add error message for missing < in repeat
;  374  (17993) fix handling of relocatable arguments with L
;  375  (17994) fix previous edits to ^-  and ^! operators
;  376  (18280) correct edit 367, it broke errors in single line literals
;  377          add mcrpge (prgend error) mnemonic
;  400          preserve old .rel file and produce partial listing after
;               mrcnec or mrcpdl error
;  401          don't allow shift to delete relocation factor
;  402  (17904) fix "label + offset" for labels in literals
;  403          replace mcrewu,mcreru error messages with existing i/o
;               messages
;  404  (18768) fix check for ! after symbol in intern,extern,supress,etc.
;  405  (18282) check for default ppn such as [,nnnn] or [nnnn,]
;  406  (18894) don't allow semi-infinite loop in assignment statement
;  407          edit 401 is a good idea,but it broke old programs
;  410          general cleanup in preparation for release.
;  411  (18828) /n shouldn't supress %....x symbols in cref
;  412          clear hisnsw at prgend for next program
;  413          add .directive kl10, make it ok to have multiple cpus
;  414          add .directives .tcdon/.tcdoff for testing new link codes
;  415          supersede edits 367,376 for clarity
;  416  (0320)  fix - again. edits 375,333 superseded.
;  417  (0316)  edit 221 broke tape pseudo-op when eof follows
;  420  (0322)  reset title to ".main" at prgend
;  421  (0328)  clean up the .directive code, add .directive no
;  422  (0363)  fix default arg read-in for defines in macros
;  423          make .link pseudo-op read 3rd argument correctly.
;  424  (18893) check for illegal characters at asterisk level.
;  425  (19585) rework edit 373
;  426          clean up edits 351,354,361
;  427  (0390)  allow null extensions in source specifications
;  430  (20036) implement "%mcrsoc statement out of order .common
;               [symbol]" message
;  431          clean up universal i/o error messages
;  432          further cleanup for release
;
;       MACRO Version 50A release in fall, 1976
MACRO.DOC -- Changes from V50(272) to V50A(432) Sept, 1975       Page 27
INTERNAL EDITS -- VERSION 50(272)


10.1  Edit Interdependencies

Edits 353 and 407 remove edits 343 and 401  respectively,  due  in  each
case   to   incompatabilities   discovered   with  existing  system-  or
user-programs.

Edit 336 cleans up edit 323 to make it the same as published  edit  256.
Edit  323  attempted to fix ILL MEM REFs caused by referencing EXTERNALs
in UNIVERSALs, unaware that edit 256 which was somehow not installed  in
version 50(272) of MACRO-10, fixed this.

Edit 347 fixes edits 325 and 332 for a special case.

Edit 350 fixes errors caused by edits 335 and 345.

Edits 357 and 416 clean up edits 333 and 337,  which  did  not  cover  a
special case, and edit 375, which caused N-errors.

Edit 415 supersedes edits 367 and 376 for clarity.

Edit 425 expands edit 373 for conditionals.

Edit 426 cleans up edits 351,354 and 361, which  made  sections  of  the
macro  processing  code  unreadable.   Also,  a  special  case  which in
actuality was a user error is allowed  in  order  to  maintain  downward
compatability with user programs.

Edit 431 reworks edits 356 and 403 for standardization purposes.
MACRO.DOC -- Changes from V50A(432)/V51(300) to V52(551) Fall, 1976Page 28
INTERNAL EDITS -- VERSION 51(300) AND VERSION 50A(432)


11.0  INTERNAL EDITS -- VERSION 51(300) AND VERSION 50A(432)

;       Start of Version 51 (300)
;
;  300          Turn on Polish switch
;  301          Add ERRF flag to signal not to collapse literals
;  302          Handle EXTERNs correctly if PSECTS used
;  303          Handle EXP CONST+EXTERN correctly (full word fixup)
;  304          Handle XWD POLISH,POLISH correctly (half word fixups)
;  305          Handle symbol table fixups correctly
;  306          Add KL10 opcodes
;  307          Remove F40 UUOs
;  310          Add .IFN Pseudo-op, and OPCODE ARG
;  311          Polish bug fixes, stack larger if Polish (DLM)
;  312          .IF/.IFN - comma to separate symbols, fix bugs (DLM)
;  313          MACRO ARGs - pass leading tab/space, count [] (DLM)
;  314          List binary for literals in line if LITLST (DLM)
;  315          Skip tab/space at end of MACRO ARGs (DLM)
;  316          (Deleted)
;  317          Accumulate error flag during multi-line LIT (DLM)
;
;  316 - 421 in Version 50A
;
;  422          Improve error msg & handling in literal (DLM)
;  423          Optional long file name support (ASM)
;  424          Add FLBLST directive (DLM)
;  425          Add UUOSYM switch (DLM)
;  426          Make MACRO name recognized before symbol in EXP if 
;               MACPRF (DLM)
;  427          (Deleted)
;  430          More consistent handling of expressions and statements (DLM)
;  431          Remove Edit 217, caused bugs and listing screwups (DLM)
;  432          SFCOND directive to simulate XLIST in IF's which fail (DLM)
;  433          Flush leading and trailing tabs & spaces in MACRO ARGs (DLM)
;  434          Fix bug caused by core expansion while dumping SYMTAB (DLM)
;  435          Allow INTERN of symbol declared as OPDEF (DLM)
;  436          Better handling of relocation count for all operators (DLM)
;  437          .PSECT Pseudo-ops removed
;
;  Start of Version 52
;
;  440          Tenex switch removed
;  441          Error for NO DIRECTIVE which has no logical opposite
;  442          Fix losing of first character after tape Pseudo-op followed
;               by an EOF
;  443          Fix Q error with 2 nested repeats ending on the same line
;  444          Handle SYM=<Z POLISH> correctly
;  445          Handle RUBOUTs (177) in MACRO call argument
;  446          Remove : or ! after multiply defined tag was found
;  447          Allow REL+REL and ABS-REL, thus assuming they are part
;               of larger EXP
;  450          If MACMPD, .DIRECTIVE .ITABM has no effect.
;  451          Added error messages REL file OPEN error and LST file
;               OPEN error for TOPS16
MACRO.DOC -- Changes from V50A(432)/V51(300) to V52(551) Fall, 1976Page 29
INTERNAL EDITS -- VERSION 51(300) AND VERSION 50A(432)


;  452          Allow Polish in an UNV file
;  453          A-error when ARG2 ABR. of .IF/.IFN is not unique
;  454          Better handling of UNV version differences KLUDGE
;               FOR Version 4 still in
;  455          Don't collapse literal containing Polish on PASS1
;  456          Fix bug with Polish in phase code
;  457 - 461 in Version 50A
;  462          Bug fixes in OPDEF, .CPU. values
;  463          Allow: IFE A##/IFN A## giving F/T respectively without err.
;  464          handle <POINT N,POLISH,M> correctly.  note: in angle-brackets
;  465  (20036) Implement "%MCRSOC Statement Out of Order .COMMON [SYMBOL]"
;               message (same as 50A(430))
;  466  (None)  Clean up universal I/O error messages (501(431))
;  467  (20472) Fix sspurious "NO END STATEMENT" on PASS2 (50A(435))
;  470          Fix default ARG read in for defines in MACROs
;  471          Handle X=ASCIZ/ (MULTIPLE LINE TEXT)../  correct
;  472          Handle X=<MOVEI 1,[POLISH]> correctly.  Note: POL in LIT
;  473  (19585) Rework Edit 373 (Same as 50A(425))
;  474  (0390)  COUNT pages correctly on PRGEND (50A(433))
;  475  (20681) Fix lost phase error on "END" by forcing early check when
;               necessary (50A(436))
;  476  (20779) Allow SFD's on output file specification (50A(437))
;  477          Fix bug with listing of title lines when XLIST is in effect
;  500          IFDEF/IFNDEF checks for symbol before SYN/OPD/MAC when
;               both exist
;  501          Enlarge DEVBUF to block 12--caused problem with long
;               file name CREF
;  502          Fix "P" errors when symbol forward-referenced across LIT
;  503          Fix ILL.MEM.REF. due to UE error while setting-up Polish
;  504          Handle "@" correctly with Polish FWF
;  505          P-error only if VAR starting address on PASS2 is .GT. PASS1
;  506          Fix ILL-MEM-REF due to change in MACRO ARG handling--give
;               MACRO expansion error instead.
;  507          Make quotes quoting chars in MACRO call args, i.e., "[","("
;  510          When .IF/.IFN ARG1 appears twice in symbol table,
;               merge the flags
;  511          Check for a universal file which is really not an UNV file
;  512          Remove sticky device for -16
;  513          Fix bug with program break when LIT-collapse differently
;               between the two passes
;  514          Fix bug with error count when a symbol declared INTERNAL
;               WAS never referenced
;  515  (00881) DON'T bother with P-error in VAR if VARCNT is zero
;  516  (00855) FIX bug with tags in nested literals
;  517  (00856) GET rid of extra ALPHAs at the end of switch
;  516          Allow tag fixup in the scop of a literal (nested LITs)
;  521  (00888) FIX listing of OPDEFs in MACROs under SALL
;  522          Fix bug with .DIRECT FLBLST
;  523          Use only RADIX-50 chars for program name
;  524          Handle [P,PN <cr-lf> at command level
;  525          Clear RIM flags at PROGEND
;  526  (00917) HANDLE -1 relocations doing Polish with operators +, -
;  527  (00918) REPLACE HALT with "Expression Parsing Problem" ERR MSG
;  530  (00872) FIX listing bug with comment Pseudo-op
MACRO.DOC -- Changes from V50A(432)/V51(300) to V52(551) Fall, 1976Page 30
INTERNAL EDITS -- VERSION 51(300) AND VERSION 50A(432)


;  531  (00880) FIX bug with listing of MACRO call under XALL
;  532  (00889) FIX LABELOFFSET error message
;  533  (00747) REMOVE code to LOOKUP/RENAME listing file before
;               entering a new one
;  534          Fix Q-error when encounters a null char before ] in LIT
;  535          Handle UNARY minus in Polish
;  536          Clean up
;  537          Sets /U on all fatal errors which continue assembly
;  540          A-error if symbol missing from left of =
;  541          Call XCEEDS instead of call XCEED in LBLFIX
;  542          Better handling of SYN in Universal file
;  543          Write MACRO version number into the 2nd word of a UNV file
;  544          Remove OPCODEs PXCT(107) and SXCT(106).
;  545          Store the first on PASS1 only if page 1.
;  546  (1079)  STOP looping of "Polish Too Complex" MSG when
;               Polish >17 words.
;  547          Check operator index range when doing Polish
;  550          Fix SUBTTL again
;  551          Fix Polish with point
;  
;       MACRO version 52(551) release
;
MACRO.DOC -- Changes from V52(551) to V53(1020)                  Page 31
INTERNAL EDITS -- VERSION 52(551)


12.0  INTERNAL EDITS -- VERSION 52(551)

;START OF VERSION 53
;552                Don't search universals when processing label,foo##,end,
                    extern,opdef,assign,syn,integer,array,.common,& define.
;553      (22193)   Flag  non-sixbit  in  single-quote  strings   with
                    Q-error
;554      (10382)   Don't replace ^Z with LF unless input DEV is TTY
;555      (10202)   Warn user if code stored before .COMMON
;556      (22425)   Allow  leading  numeric  char  in   arguments   to
                    "SEARCH"
;557      (22491)   Generate -X (where X is relocatable) properly
;560      (22488)   Place all occurences of flags  'INASGN',  'INANGL'
                    under Polish Feature Test
;561      (22490)   Generate -1^!X (where X is relocatable) properly
;562      (22544)   Fix page offset after PRGEND
;563      (22495)   Fix ;;  comments listing when defined under LALL
;564      (22493)   Prevent "IO TO  UNASSIGNED  CHANNEL"  error  after
                    "?POLISH TOO COMPLEX" error message
;565      (22489)   Prevent terminal wait  after  PRGEND  after  being
                    detached or CCONTED
;566      (22498)   Remove Edit 531;  broke listing of embedded  macro
                    calls under XALL
;567      (22500)   Enhancement  EDIT/REQUEST   REL:HELPER,LC   SYMBOL
                    TYPES,U-LC MONTHS
;570      (10570)   Prevent E-errors  after  purge  of  UNDEF  or  EXT
                    symbol
;571      (22676)   Force  HISEG  to  start  on  page  boundary,   not
                    K-boundary
;572      (22748)   Replace Edit 556 by alternate  edit  accomplishing
                    same purpose
;573      (22321)   Fix LOC/RELOC in TWOSEG RELOC programs
;574      (22501)   Add "ILLEGAL SYNTAX  IN  MACRO  DEFINITION"  error
                    message
;575      (22492)   Put all PSECT-RELATED code under FTPSECT switch
;576      (22485)   Fix LABEL+OFFSET accross segments, and when OFFSET
                    > 1000
;577      (22187)   Fix listing of MACRO expansion with  errors  under
                    SALL

;Start of Version 53

;600                Turn on FTPSEC
;601                Fix tags in LIT used with PSECTs
;602                Allow .PSECT/.ENDPS in LIT
;603                Force expression evaluation in conditional.
;604                Comment out 1LINE @BOUT20+5 (needs re-work)
;605                Fix bug with wrong RELOC value for PSECT @%SWSG2+6
;606                E-error if FOO##=EXP @ASSIG3+6
;607                Generate a word of 0 for [SIXBIT\\] @SIXB20+
;610                Do expression of Polish symbols from UNV in  PASS2
                    @EVNUM+
;611                Alphabetize .IF/.IFN attribute table.
;612                Fix bug with "IOWD A##,FOO" when used with PSECT
MACRO.DOC -- Changes from V52(551) to V53(1020)                  Page 32
INTERNAL EDITS -- VERSION 52(551)


;613                Store current RADIX in CURADX and free  up  RX  as
                    FRR.
;614                Output "#" bin binary listing to  indicate  Polish
                    fixup.
;615                Output number of pages used instead.
;616                Don't  allow  Polish   for   "BLOCK"   &   "RELOC"
                    pseudo-ops.
;617                Don't make  LTAGF  symbols  externals  at  end  of
                    PASS1.
;620                Q-error if externals purged.
;621                Add .IF FOO,REFERENCED,<...>
;622                Fix bug with outputting "#"
;623                Allow expressions of externals and PSECT-SYMBOLS.
;624                Allow Polish with OPDEF
;625                Generate Polish FWF for [A##]
;626                Add .IF FOO,NEEDED,<...>
;627                Update KL instructions
;630                More on Edit 625 to check for  LH=0,INDIRECT,INEX,
                    & POLISH
;631                Generate a set of BLOCK23's before all the symbols
;632                (Same as 577)
;633                Output "#" and  "*"  for  assignments  and  symbol
                    tables.
;634                Allow "A FOO##+1(1)".
;635                Add special chars \' and \" in a macro call.
;636                Allow POLISH and INDEXing
;637                Don't do FWF for OPDEF A[B##]
;640                Save AC FR  on  stack  before  doing  exponent  in
                    number processing.
;641                Check for PSECT when doing FWF @OCTFW+
;642                Set PSECT index to 0 before generating BLOCK 5
;643                Fix bug with FOO##(1)
;644                Fix bug with EXP FOO##,FOO##,FOO##
;645                FWF for undefined symbol in operator field.
;646                Illegal to use PRGEND with PSECT, treat it as end
;647                Output PSECT INDEX in listing
;650      (22327)   Fix disappearing macro calls with FF under SALL
;651      (22226)   Fix variety of listing bugs tied to error-flagging
;652      (22999)   Fix "ENTRY FOO" where FOO is also an OPDEF
;653      (22497)   Flag "VERSION SKEW" if old-style UNV with SYN
;654                Fix typographical error in published Edit 564
;655      (22482)   Fix too many LINES/PAGE  with  XLIST  inside  SALL
                    MACRO
;656      (22499)   Fix "?ILL MEM REF"  while  expanding  macro  calls
                    embedded commas
;657      (Q1382)   Extend new MACRO ARG handling to  parenthesized  a
                    ARG string
;660      (23098)   Restore IFE/IFN A## handling to old (pre-52) way
;661      (22515)   Prevent ILL MEM REF on unclosed text in multi-line
                    assignment
;662                Simplify Edit 561
;663      (23170)   Fix lost  errors  in  PASS1  during  line  "IMAGE"
                    typeout
;664                Speed  and  efficiency  enhancements;    ROUTINES:
MACRO.DOC -- Changes from V52(551) to V53(1020)                  Page 33
INTERNAL EDITS -- VERSION 52(551)


                    GETCHR,PRINT,CHARAC,READ1A
;665      (23246)   Don't treat leading commas as semicolons
;666                Fix various bugs tied to "LABEL+OFFSET" typeout
;667                Fix bad ASCIZ in  LITERALS  (side-effect  of  Edit
                    661)
;670                Allow >NODDT of OPDEF  (i.e.,  .NODDT  PJRST,CALL,
                    etc.)
;671                Remove Edit 657 (i.e., take familiar path of least
                    resistance with regard to existing programs)
;672                Ignore redundant search ARGs,  add  "Search  Table
                    Overflow" error message
;673      (Q1286)   List CRLFs in parenthesized MACRO ARGs correctly
;674                Give E-error for external array name
;675                Handle INTERN of mixed ARG types correctly
;676                Prevent the use of argumens < 4 to /NNL
;677                Allow  .IF  EXPRESSION,QUALIFIER<CODE>   (omitting
                    comma)
;700                Alter "Core  Allocation  Problem"  error  message,
                    force   reallocation  unless  /U  (memory-resident
                    universals)
;701                Flag non-sixbit  in  SIXBIT  Pseudo-op  correctly,
                    terminating string
;702                Replace  MBR,MBC,MBI  messages  with   ISR,ISC,ISI
                    (syntax checks)
;703      (22939)   Handle comples forward REF of SYM where SYM=POLISH
                    correctly
;704                Fix  bad  CREF  output  when  listing  MACRO  ARGS
                    W/CRLFs and "\"
;705      (23527)   Fix ILL MEM REF with  IFX  <POLISH  SYMBOL>  (side
                    effect of 660)
;706      (22484)   Make    <LH,,POLISH>,<POLISH,,RH>,<POLISH,,POLISH>
                    work
;707                Fix bug with LITERAL PC when doing  PSECT  changes
                    at end.
;710                Get correct relocation when evaluating "!".
;711                Enter Psect-names as external symbols.
;712                Collapse 2 instructions into EXTRN2 routine
;713                Move no UNV search flag into AC FRR.
;714                Reset symbol table pointer when a  tag  has  other
                    use in DIFF PSECTs
;715                Search only current symbol table  in  looking  for
                    VARs.
;716                Reset REL1P pointer at pass initialization
;717                Bug fix with PSECT output format
;720                Flag .DIRECT no no ARG with Q-error
;721                Fix bug in Edit 573 with RELOC/RELOC/LOC/RELOC ARG
;722      (10945)   Flag IOWD A,B where A is RELOC with R-error
;723      (10929)   Fix truncating or garbling of long PRINTX text
;724      (23826)   Give  "UNASSIGNED"  error  message  for  undefined
                    symbols   with   unresolved   36BIT  values  (e.g.
                    B=B+1000000).
;725      (23588)   Don't  collapse  literals  which  contain  labels.
                    This  edit  should  be  removed when a facility is
                    added  to  update  label  values   after   literal
MACRO.DOC -- Changes from V52(551) to V53(1020)                  Page 34
INTERNAL EDITS -- VERSION 52(551)


                    pooling.
;726                Implement "LTL LITERAL TOO LONG" error message.
;727                Generate correct Polish for <POL>.
;730                Generate correct Polish for <IOWD POL,POL>
;731      BBN       Bug fix with GETCHR
;732                Include S-error in definition of errors.
;733      (24065)   Fix bad entry block  caused  by  bad  SEARCH/ENTRY
                    interaction
;734      (23987)   Handle negative relocation correctly with Polish
;735                Allow  forward-ref   of   tags   in   LIT(generate
                    10-blocks).
;736                Fixup SYMTAB  after  FORWARD-REF  to  USER-DEFINED
                    operator.  (MACRO,OPDEF,SYN)
;737                Fix bug with the new IOWD code.
;740                Check for non-referenced literal tags.
;741                A-error when LH-truncated with RELOC.
;742                VARF (TREF) used with LTAGF mean tag referenced.
;743                Suppress PASS1 IFX V-error.
;744      (Q2191)   Make sure LTGSW gets cleared each time.
;745                Check for SPTR before update in ASSIGN.
;746                Give ERRMSG when MRP points  to  0  due  to  MACRO
                    expansion ERR.
;747                Generate  correct  Polish  for  <E,,K>,<K,,E>,   &
                    <E,,E>.
;750                Fix bug with @POL(K).
;751                <Point K,POL,POL> to use ANGFP routines.
;752                Resolve edit 736 & 675 conflict in OPDEF handling.
;753      (18606)   Prevent extra line listing with FF inside repeat 0
                    or failing conditional.
;754      (22804)   Clear XLIST after END/PRGEND (doesn't affect lits,
                    etc.).
;755      (22442)   Output title ".MAIN" for untitled  PRGEND  modules
                    during RPG assembly.
;756      (24473)   Fix too few lines/listing-page with PRINTX.
;757(Removed)       Make sure ^- has  higher  precedence  over  binary
                    operators.
;760                Output binary on block statement in  a  long  line
                    inside MACRO.
;761      (Q2201)   Fix bug in EOUT that  generated  wrong  count  for
                    block 4.
;762      (Q2204)   E-error for BYTE (N)...POL...  where N .NE.  ^D36.
;763      (Q2211)   Generate block 22 with  symbol  table  instead  of
                    block 23.
;764                Check for internal OPDEF at INDEF.
;765      (Q2195)   Don't generate empty entry block.
;766                Same as 733.
;767      (Q2185)   Re-do calculation of RC in EVADR.
;770      (Q2210)   Fix bug with flagging  multiply  defined  tags  in
                    different PSECTS.
;771                Test for NOPSW at closing angle bracket.
;772                Fix bug with referencing Polish OPDEF.
;773                Replace edit 747
;774                Make LABEL+OFFSET hangling consistant.
;775      (Q2200)   Check CPU value before typeout of size info.
MACRO.DOC -- Changes from V52(551) to V53(1020)                  Page 35
INTERNAL EDITS -- VERSION 52(551)


;776                Don't do PSECT check for phased label.
;777                Allow BYTE(18) of Polish if half word aligned.
;1000               Add 2 cells  for  building  OPDEF  code  to  avoid
                    problem with nested literals.
;1001               Don't let  MACRO  expansions  change  LABEL+OFFSET
                    settings.
;1002     (Q2235)   Don't store UNV name until it's verified.
;1003     (24751)   Make FF list correctly (supersedes edit 753).
;1004               Minor source changes:  tabs in  long  line,  page,
                    etc.
;1005               Don't generate global request for a  symbol  where
                    symbol=UND.
;1006               Save INOPDF @SQBRK+  to  allow  literal  in  OPDEF
                    definition.
;1007               Give EPP message  due  to  typos  causing  illegal
                    Polish.
;1010               Add a word to differentiate <0,,POL> with <POL>
;1011     (Q2276)   Save INOPDEF @ANGLB+  to  allow  nested  <...>  in
                    OPDEF definition.
;1012               Recover EXTPNT if needed at OP3.
;1013               Move left Polish to  free  Polish  to  free  space
                    before storing the ptr in XWDANG.
;1014               Allow ENTRY, INTERN statements to appear in  diff.
                    PSECT then the tag.
;1015               Fix bug with setting  up  correct  MP  for  macros
                    nested in conditionals.
;1016               Define a relocatble PSECT bit for PSECTS  with  no
                    fixed origin.
;1017               Carry  undefined  bit  accross  assigment   during
                    pass1.
;1020               Modify block 22's and block  23's  and  add  block
                    24's.

;       Release of MACRO Version %53(1020)
MACRO.DOC -- Changes from V53(1020) to V53A(1152) Spring, 1978   Page 36
INTERNAL EDITS -- VERSION 53(1020)


13.0  INTERNAL EDITS -- VERSION 53(1020)

Start of version 53A

1021                When multiple .PSECT stmnts  exist  for  the  same
                    PSECT, origin need only be in one.
1022                In ARRAY pseudo op, allow UNV-searching of symbols
                    used in dimension argument.
1023                Correct     assembly     of      stmnts      like:
                    "FOO=IFNB <>,<BAR=5>".
1024                Some cleanup
1025                Don't go Polish calculating "REPEAT" count
1026                Fix bug caused by edit 1010 ( <POINT K,POL> )
1027                Make sure UOUT routine searches all  PSECT  symbol
                    tables.
1030                AC0 to AC2 in part of edit 1021; cause P-error  in
                    PSECT progam
1031                Turn off flag in RC to indicate undef  in  literal
                    in STOLIT 
1032      (25358)   Fix .XTABM with parenthesized macro call arg lists
1033      (25358)   Clear MACMPD  and  .XTABM/.ITABM  settings  across
                    passes
1034      (25555)   Fix fatal  errors  caused  by  bad  recovery  from
                    N-errors.
1035      (26078)   Fix OPDEF with TEXT  pseudo-ops  and  inside  lits
                    (rework edit 1000)
1036                Up CTLSIZ to 1000 characters
1037                Add code to use FORCEP for <POLISH>B<EXP> when not
                    in larger exp.
1040                Move embedded Polish into free  space  when  doing
                    POLPSH.
1041                Add .DIRECTIVE .NOUUO
1042                Calculate total symbol  count  before  turning  on
                    attribute  bits  (move  edit  1021 one instruction
                    lower and remove edit 1027)
1043                Change .DIRECTIVE .NOUUO to .DIRECTIVE .NOCALLIS
1044      (25015)   Fix bad load-time relocation  for  expressions  of
                    the   form   "A+B"  or  "A-B"  where  A  or  B  is
                    relocatable.
1045      (25581)   Preserve  symbol  characteristics  across   nested
                    assignments (e.g., A==:<B==2>)
1046      (11716)   Fix "ILL MEM REF" to addr 777777 due to bad  macro
                    call syntax
1047                Make expressions of the form  <A##,,POLISH>  where
                    POLISH is a Polish expression assemble correctly
1050                Fix   "?MCREPP"   error   during   processing   of
                    expressions  with  complex  external  left  halves
                    (e.g., <EXT##+1,,0>)
1051                Fix "?ILL MEM REF" after  "?MCREPP"  (expand  edit
                    1007)
1052      (26137)   Fix "?ILL MEM REF" with large PRGENDed files
1053                Generate X-error if exceeded max of created symbol
                    (..7777);   start  over  from  ..0000  rather than
                    creating ./0000
MACRO.DOC -- Changes from V53(1020) to V53A(1152) Spring, 1978   Page 37
INTERNAL EDITS -- VERSION 53(1020)


1054      (25910)   Give  unary  operators   precedence   over   shift
                    operators and logical operators.
1055      (26428)   Don't   generate    Polish    for    REL-ABS    in
                    single-segment, non-Hiseg, non-PSECT program.
1056      (25357)   Make   MACRO    more    flexible    in    handling
                    angle-bracketed   args   to  .IF/.IFN;   implement
                    "EXPRESSION" attribute.
1057      (12055)   Restore correct .PSECT/.ORG interaction in wake of
                    edit 573
1060      (25477)   Improve "?MCRPTC Polish too complex" error message
                    by  appending "for symbol xxxxxx" or "for location
                    xxxxxx"
1061      (25715)   Re-do  "Error  while   expanding"   error-trapping
                    (supersedes edits 1046,746)
1062      (25907)   Fix listing of LIT inside SALL macro expansion
1063      (25777)   Make .XCREF, .CREF work inside literals
1064      (25777)   Fix listing of LALL inside SALL macro
1065      (25777)   Make LALL, XALL, SALL, LIST,  XLIST,  .DIREC  work
                    inside literals (requires edit 1064)
1066      (25838)   Make macro observe the settings of  message  level
                    bits  during  error message typeout (see GETTAB 35
                    monitor table)
1067      (26529)   BYTE psuedo-op specifying externals on other  than
                    full  or  half word boundaries produces EPP errors
                    and ILL MEM REF.
1070      (26571)   Correctly indicate EXTERN/INTERN  conflicts  as  E
                    errors instead of P or A errors
1071      (26690)   Set Polish flag in correct half of FR  when  doing
                    forced right half Polish in angle brackets
1072      (26749)   List complete macro call  line  when  XALL  is  in
                    effect
1073      (26884)   Fix ?ILL  MEM  REF  and  E  errors  during  Polish
                    indexing
1074      (12239)   Force   pairing    of    LIT    brackets    within
                    .PSECT/.ENDPS.  Make END illegal within literal of
                    any PSECT, not just current.  Correct  error  msg.
                    tag offset if within nested lits with labels.
1075      (27082)   List comment on macro call line when  XALL  is  in
                    effect
1076      (27099)   Do not allow '@' in AC field, flag as questionable
1077                Allow right  justified  relocatables  to  be  gtr.
                    than  18  bits  for  BYTE.  Make BYTE allow Polish
                    symbols only for full and half words.
1100                Eliminate phase errors produced by edit 1074
1101                Fix   bad   Polish   for   expressions   involving
                    inter-PSECT  references of relocatables.  Addition
                    to edit 1040.
1102                Keep DDT suppress  bits  when  symbol  defined  as
                    internal has an external or Polish value
1103                Rework REL+ABS,  REL+REL,  REL-ABS,  REL-REL  code
                    added   by  edits  1044  and  1055  to  handle  RH
                    relocatables only
1104      (12505)   Do not  generate  Polish  FWF  when  doing  Polish
                    indexing
MACRO.DOC -- Changes from V53(1020) to V53A(1152) Spring, 1978   Page 38
INTERNAL EDITS -- VERSION 53(1020)


1105      (12506)   Make OP AC,-<POL> generate correct RH fixup
1106      (12637)   Do not generate fullword fixup unless external  is
                    of the form 0,,EXT
1107      (27389)   Do not allow Polish in index field, do  not  allow
                    externals  in  OP  code  index,  make psuedo-op in
                    index field work in all cases
1110                Generate correct Polish for V=EXT##+K  when  V  is
                    still  defined  by a special external pointer (not
                    yet defined in pass 2).  More of edit 703.
1111                Augment edit 1103 to generate less Polish.   Cases
                    improved   involve   negative   relocatables   and
                    relocatables  slightly  less  than   HMIN   (range
                    HMIN-400).
1112      (27167)   Expand .IF/.IFN feature by adding "NAME" attribute
                    indicating a single RADIX50 name (symbol) has been
                    passed as an argument.
1113      (27418)   Eliminate OPDEF processing inconsistencies
1114      (27388)   Add the swapped left half value of  the  index  to
                    the  Polish  generated  for statements of the form
                    'OPCODE AC,POLISH(LH,,RH)'
1115      (27544)   For DEC/EXP/OCT,  give  Q  error  for  unbracketed
                    expressions involving '@'.  Forces use of brackets
                    for full address calc.
1116                Fix inter-PSECT references to special pointers  of
                    externals  so  the  external  chain does not cross
                    PSECTs.
1117      (27728)   Make  .PSECT   handle   attribute   specifications
                    correctly
1120      (12962)   Reset RP and MP in the END code since macros  must
                    be completed
1121                Increase the number of extra (XTRA)  locations  to
                    save  for  PRGEND to 8 to prevent possible ILL MEM
                    REFs
1122      (27813)   Do not copy nulls into statement output buffer
1123      (27976)   Generate   Q   error   for   multiple    TITLEs/or
                    TITLE/UNIVERSAL  conflicts,  instead  of  M  error
                    during only pass 1
1124      (Q3051)   Increase .UNIV to 50.
1125      (Q3038)   Re-install macros for DIRECTIVE args and routines
1126      (Q3045)   Flag most assigments  involving  a  label  defined
                    within  a  literal  as L errors.  Label may not be
                    defined till end of pass 2.
1127      (Q3053)   Generate the desired ASCII string for  macro  call
                    arg  '\N  '  when  N  is  a symbol or expression -
                    broken by edit 137
1130                Reset assembly mode to  relocatable  (1)  at  pass
                    initialization.
1131                Remove edit 646, make PRGEND work with PSECTs
1132                Fix numerous PSECT bugs - PSECT FOO,1000  /  PSECT
                    FOO  loses  orig.   PSECT and LOC inconsistencies,
                    PSECT and PHASE inconsistencies.
1133      (Q3047)   Fix RSW3  to  properly  detect  when  the  listing
                    output buffer is full - handle tabs properly after
                    the 128 character limit
MACRO.DOC -- Changes from V53(1020) to V53A(1152) Spring, 1978   Page 39
INTERNAL EDITS -- VERSION 53(1020)


1134                Make LOCO stay in sync.  with LOCA during pass  1.
                    PSECTs nested within literals cause out-of-sync.
1135      (28104)   Do 'OP' processing instead of a  full  word  fixup
                    for cases such as 'OP## AC,ADDR'.  This and Polish
                    opcodes will not produce the proper code for  left
                    half externals.
1136                Clear PSECT nesting counter and other PSECT  items
                    at PRGEND, plus check for PRGEND inside literals
1137                Flag non-absolute PSECT origins as an 'A' error
1140                Edit 1123 broke 5  character  TITLEs  in  PRGENDed
                    files,  clear  out  2nd word of TITLE when loading
                    default TITLE of .MAIN.
1141      (Q3085)   For PRGENDed programs, print BREAK, CPU TIME, CORE
                    USED data for each program module.
1142      (Q3181)   Repeat the  eol  char.   if  a  terminating  angle
                    bracket is missing.
1143                SYN A,B will not cref B as defining occurance
1144                Save/clear/and restore cpu type over PRGENDs.
1145                Edit 1135 stopped generation of  full  word  fixup
                    for [FOO  ].
1146                Allow NUL:  as cref device.
1147                Edit 1113 caused the OPDEF in "EXP OPDEF  AC,ADDR"
                    to  be  processed  as  an  address, discarding the
                    remaining fields.
1150      (Q3261)   XLIST under SALL  puts  extra  characters  in  the
                    listing file.
1151                Do not output block 22's after the end  block  for
                    PRGEND.
1152      (Q3410)   Edit 1143 caused bad CREF data to be generated for
                    a SYN such as "SYN IFE,IF".
MACRO.DOC -- Changes from V53A(1152) to V53B(1155+)              Page 40
INTERNAL EDITS -- VERSION 53A(1152)


14.0  INTERNAL EDITS -- VERSION 53A(1152)

        Tymshare Revisions /CAB  30-Dec-81

[1] Put TYMSHARE's CALLI's etc into force under IFN TYMCOM conditionals.
    Print a message "?MCRTYM" about TYMSHARE features and to use MAC46.

        Installed DEC SPR's

1153-1155       From MCR53A.BWR were installed in DECMAC %53A(1152)

        Beginning of Version 53B

1156            Make sure a macro definition is an absolute value.
1161    28753   Allow macro to write out polish blocks (block type 11)
                that are more than 18 words long
1167            Edit 1151 broke more than one LIT in the last program
                of a prgended file.
1175            Make "E" errors only apply to line where error occurred
                and not the next binary producing line as well.
1204    29908   Test for inter-PSECT references involving special
                pointers with additive fixups that will not go Polish.
                These consist of LEFT,,0 where LEFT is non-zero.
1207    30103   Fixed skewed listing when BYTE or SIXBIT pseudo-ops are used
                in Psected programs.
1210    15019   Do not clobber the size of an ARRAY during pass 1 if the
                array is being made INTERNAL.
1212    15625   Fix handling of constants to give Q error in more cases
                of integer overflow.  Also fix code so that floating point
                numbers will not get erroneous Q error when part before
                decimal point is too large to fit in an integer.
1213            Fix edit 1204.
1214    30814   An incorrect feature test flag could allow KL symbols
                to be defined without KI symbols being defined.
1216            Make DEFINE A(B,,C) take a more severe error, so that
                the universal file writer will not be confused by a bad
                definition.

  ,-Q@i