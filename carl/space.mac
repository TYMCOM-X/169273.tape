	TITLE	SPACE -- DISK STORAGE ACCOUNTING PROGRAM  %2(45)
	SUBTTL	CLEMENTS/PFC		1-MAR-72


;***COPYRIGHT 1971, 1972, DIGITAL EQUIPMENT CORP., MAYNARD, MASS.***


;THIS PROGRAM ACCEPTS AN OPERATOR COMMAND.  BASED ON THIS, IT
;LOOKS AT THE UFD'S FOR EACH USER ON ONE OR ALL STRUCTURES AND
;PRINTS THEIR QUOTAS AND SPACE USED.  OPTIONALLY, IT WILL
;MAKE FACT.SYS ENTRIES (VIA DAEMON) OR SUBMIT BATCH JOBS
;TO RECOMPUTE THEIR QUOTAS.

	IFNDEF	%%C,<PRINTX	? .COMPILE C+SPACE,QUEUER%H,HELPER%H
		     PASS2
		     END>

.EDTR==0	;DEC DEV GRP
.MAJV==2	;MAJOR VERSION
.MINV==0	;MINOR VERSION
.EDIT==45	;EDIT NUMBER
LOC 137
EXP <.EDTR*1B2>+<.MAJV*1B11>+<.MINV*1B17>+.EDIT
RELOC
;AC'S
F=0
A=1
B=2
C=3
D=4
T=5
T1=6
T2=7
T3=10
N=11
N1=12
M=13
	;14,15 FREE
CH=16
P=17

;I/O CHANNELS

MFD==1
UFD==2
LST==3
CTL==4

DEFINE $MSG (A)<
	MOVEI	T,[ASCIZ \A\]
	PUSHJ	P,MSG
>

;FLAG AC BITS
L.TTY==(1B17)	;OUTPUT TO TTY
L.GOD==(1B16)	;RUNNING UNDER 1,2
L.BATC==(1B15)	;BATCH SWITCH
L.FACT==(1B14)	;FACT SWITCH
L.ARO==(1B13)	;ARROW SEEN ON INPUT
L.DSK==(1B12)	;PROCESS ALL STRUCTURES
L.BKT==(1B11)	;LEFT BRACKET SEEN ON INPUT
L.DOT==(1B10)	;DOT SEEN ON INPUT
L.ANY==(1B9)	;SOMETHING SEEN ON INPUT
L.DAER==(1B8)	;REPORTED DAEMON ERROR
L.TTL==(1B7)	;PRINTED HEADING LINE
L.TTLD==(1B6)	;PRINTED NAME OF THIS STRUCTURE
L.ISIN==(1B5)	;THIS USER IS LOGGED IN


FE.SPC==160	;FACT FILE ENTRY
DF.FCT==3	;DAEMON FACT FUNCTION
	SUBTTL	INITIALIZE

SPACE:	JFCL			;DEFEND AGAINST CCL RUN
	RESET
	MOVE	P,PDP
	MOVEI	F,0		;CLEAR FLAGS
	MOVX	T,%LDMFD
	GETTAB	T,
	  MOVE	T,[1,,1]
	MOVEM	T,MFDPPN
	HRROI	T,.GTPPN
	GETTAB	T,
	  JFCL
	MOVX	T1,%LDFFA
	GETTAB	T1,
	  MOVE	T1,[1,,2]
	MOVEM	T1,FFAPPN
	CAMN	T,T1
	TLO	F,L.GOD
	PUSHJ	P,COMAND
	MOVE	T,IDEV
	MOVE	T1,[1,,T]
	DSKCHR	T1,
	  JRST	NOTDSK
	TXNN	T1,DC.TYP
	TLO	F,L.DSK

	SETZB	A,D
	SKIPN	OFILE
	SKIPE	OEXT
	MOVSI	D,'DSK'
	SKIPE	OPPN
	MOVSI	D,'DSK'
	SKIPN	D
	MOVSI	D,'TTY'
	SKIPN	B,ODEV
	MOVE	B,D
	MOVSI	C,OHED
	OPEN	LST,A
	JRST	[OUTSTR [ASCIZ /? Output device not available/]
		JRST COMERR]
	DEVCHR	B,		;LIST DEVICE'S CHARACTERISTICS
	TXNE	B,DV.TTY
	TLO	F,L.TTY
	SKIPN	A,OFILE
	MOVE	A,['SPACE ']
	SKIPN	B,OEXT
	MOVSI	B,'TXT'
	HLLZS	B
	MOVEI	C,0
	MOVE	D,OPPN
	ENTER	LST,A
	  JRST	[OUTSTR [ASCIZ /? Can't write output file/]
		JRST COMERR]
	OUTBUF	LST,2
	MOVE	T,.JBFF
	MOVEM	T,SJBFF
	TLNE	F,L.TTY
	JRST	SKPTIT

	$MSG <
SPACE v>
	LDB	T,[POINT 9,.JBVER,11]
	SKIPE	T
	PUSHJ	P,OCTOUT
	LDB	T,[POINT 6,.JBVER,17]
	MOVEI	CH,100(T)
	SKIPE	T
	PUSHJ	P,TYO
	HRRZ	T,.JBVER
	JUMPE	T,V1
	MOVEI	CH,"("
	PUSHJ	P,TYO
	HRRZ	T,.JBVER
	PUSHJ	P,OCTOUT
	MOVEI	CH,")"
	PUSHJ	P,TYO
V1:	LDB	T,[POINT 3,.JBVER,2]
	JUMPE	T,V2
	MOVEI	CH,"-"
	PUSHJ	P,TYO
	LDB	T,[POINT 3,.JBVER,2]
	PUSHJ	P,OCTOUT
V2:	PUSHJ	P,TAB
	DATE	A,
	IDIVI	A,^D31
	MOVEI	T,1(B)
	PUSHJ	P,DECOUT
	IDIVI	A,^D12
	MOVE	C,MONTAB(B)
	MOVEI	D,0
	MOVEI	T,C
	PUSHJ	P,MSG
	MOVEI	T,100(A)
	PUSHJ	P,DECOUT
	PUSHJ	P,TAB
	MSTIME	A,
	IDIVI	A,^D60000
	IDIVI	A,^D60
	MOVEI	T,(A)
	PUSHJ	P,DECPR2
	PUSHJ	P,COLON
	MOVEI	T,(B)
	PUSHJ	P,DECPR2

	PUSHJ	P,TAB		;SPACE OVER SOME
	MOVSI	T,-5		;SET FOR 5 WORD LINE
SV1:	HRLZ	T1,T		;GET INDEX IN TABLE
	HRRI	T1,.GTCNF	;SET FOR CONFIGURATION TABLE
	GETTAB	T1,		;READ SYSTEM HEADER
	  MOVEI	T1,0		;(JUST IN CASE)
	MOVEM	T1,SYSHDR(T)	;SAVE FOR MESSAGE
	AOBJN	T,SV1		;LOOP UNTIL DONE
	SETZM	SYSHDR(T)	;CLEAR EXTRA WORD
	MOVEI	T,SYSHDR	;POINT TO MESSAGE
	PUSHJ	P,MSG		;TYPE IT TO USER

SKPTIT:	MOVX	A,%LDQUS	;QUE STR
	GETTAB	A,
	  MOVSI	A,'DSK'
	MOVEM	A,QSTR
	SETZM	TOTUSD
	SETZM	TOTFRE
	SETZM	STRUCT
	TLNE	F,L.DSK
	JRST	SPACEL
	MOVE	B,IDEV
	MOVEM	B,STRUCT
	JRST	SPC1
	SUBTTL	MAIN PROCESSING LOOP

SPACEL:	MOVE	B,STRUCT
	SYSSTR	B,
	  HALT	.+1
	MOVEM	B,STRUCT
	TLNE	F,L.DSK
	SKIPN	B
	JRST	EOSYS
SPC1:	MOVE	A,[XWD 3,IOB2]	;ARG TO DSKCHR
	MOVEM	B,IOB2		;STRUCTURE WANTED
	DSKCHR	A,
	  SETZB	A,IOB2+.DCFCT	;CLEAR ANSWER IF WE CANT GET IT
	LDB	T,[POINTR (A,DC.TYP)]
	CAIE	T,.DCTFS
NOTDSK:	JRST	[OUTSTR [ASCIZ /? Input device not a disk structure/]
		JRST COMERR]
	MOVE	A,IOB2+.DCFCT	;GET FREE ON STR
	MOVEM	A,STRTAL	;SAVE FOR TYPEOUT AND FACT
	SETZM	STRUSD
	TLNN	F,L.TTY
	PUSHJ	P,CRLF
	TLZ	F,L.TTLD	;CLEAR TITLE FOR STR FLAG
	MOVEI	A,.IODMP
	TXO	A,UU.PHS	;PHYSICAL STR
	MOVEI	C,0
	OPEN	UFD,A
	JRST	NOSTR
	SKIPE	T,IPPN
	JRST	NOPMFD
	OPEN	MFD,A
	  HALT	.
	MOVE	A,MFDPPN
	MOVSI	B,'UFD'
	MOVEI	C,0
	MOVE	D,MFDPPN
	LOOKUP	MFD,A
	  HALT	.
NOPMFD:	MOVE	A,SJBFF
	MOVEM	A,.JBFF
	TLNN	F,L.BATC
	JRST	CTL1		;DONT NEED CONTROL FILES
	MOVEI	A,0
	MOVE	B,QSTR
	MOVSI	C,CTLHED
	OPEN	CTL,A
	  JRST	CTL1
	MOVE	A,STRUCT
	LSH	A,-6
	TLO	A,'Q  '
	MOVEM	A,QFILN
	MOVSI	B,'CTL'
	MOVEI	C,0
	MOVE	D,FFAPPN
	ENTER	CTL,A
	  JRST	CTL1
	MOVEI	A,CTLM1
	PUSHJ	P,CTLMSG
	MOVE	A,[POINT 6,STRUCT]
CTLL1:	ILDB	CH,A
	JUMPE	CH,CTL2
	ADDI	CH,40
	PUSHJ	P,CTLTYO
	TLNE	A,770000
	JRST	CTLL1
CTL2:	MOVEI	A,CTLM2
	PUSHJ	P,CTLMSG
	RELEAS	CTL,
CTL1:
	SUBTTL	LOOP FOR EACH USER

	SKIPE	IPPN
	JRST	ONEUSR

ML:	IN	MFD,IOL
	  JRST	GOTBLK		;PROCEED IF OK
	STATZ	MFD,IO.EOF	;NO--CHECK FOR END OF FILE
	JRST	EOSTR
GOTBLK:	MOVSI	M,-200
LOOP:	HLRZ	T,IOB+1(M)
	CAIE	T,'UFD'
	JRST	NEXT
	MOVE	T,IOB(M)
ONEUSR:	MOVEM	T,USER
	MOVEM	T,IOB2+.RBNAM
	MOVSI	T,'UFD'
	MOVEM	T,IOB2+.RBEXT
	MOVE	T,MFDPPN
	MOVEM	T,IOB2+.RBPPN
	MOVEI	T,25
	MOVEM	T,IOB2
	LOOKUP	UFD,IOB2
	  JRST	NEXT
	CLOSE	UFD,CL.DAT!CL.ACS  ;THROW AWAY NAME BLOCKS, ETC.
	PUSHJ	P,DHEAD		;GO TYPE HEADER FOR THIS STR
	MOVE	T,IOB2+.RBNAM
	PUSHJ	P,PPNOUT
	PUSHJ	P,TAB
	MOVE	T,IOB2+.RBQTF
	PUSHJ	P,DECTAB
	MOVE	T,IOB2+.RBQTO
	PUSHJ	P,DECTAB
	MOVE	T,IOB2+.RBSTS	;GET FILE'S STATUS
	TRNE	T,RP.NDL	;CHECK FOR NON-RENAMEABLE FILE
	JRST	ISIN		;YES--NO INFO AVAILABLE
	MOVE	T,IOB2+.RBUSD
	PUSHJ	P,DECTAB
	MOVE	T,IOB2+.RBDEV
	PUSHJ	P,SIXOUT
	PUSHJ	P,TAB
	MOVSI	T,'OUT'
	SKIPL	IOB2+.RBSTS
	JRST	STATPT
	TLO	F,L.ISIN	;NOTE THAT USER IS LOGGED IN
	MOVX	T,%NSHJB
	GETTAB	T,
	  JFCL
	MOVE	N,T
STATL:	HRLZ	T,N
	HRRI	T,.GTPPN
	GETTAB	T,
	  SETOB	N,T
	CAMN	T,IOB2+.RBNAM
	JRST	STATP1
	SOJG	N,STATL
	TLNE	F,L.BATC
	PUSHJ	P,QJOB
	TLZ	F,L.ISIN	;NOT REALLY LOGGED IN SO CLEAR FLAG
	SKIPA	T,['RECOMP']
STATP1:	MOVSI	T,'IN '
STATPT:	MOVEM	T,INOURE	;SAVE FOR FACT FILE ITEM
	PUSHJ	P,SIXOUT
	MOVE	T,IOB2+.RBQTO
	TLNE	F,L.ISIN	;SEE IF GOING TO ISSUE DATE
	CAME	T,[377777,,777777]  ;NO--SEE IF GOING TO DO FREE
	PUSHJ	P,TAB		;YES--SPACE OVER TO IT
	CAMN	T,[377777,,777777]
	JRST	NOFREE
	SUB	T,IOB2+.RBUSD
	PUSHJ	P,DECOU5
NOFREE:	TLZE	F,L.ISIN	;SEE IF LOGGED IN
	JRST	ISIN		;YES--DON'T GIVE DATE
	PUSHJ	P,TAB		;SPACE OVER FOR DATE
	LDB	N,[POINTR (IOB2+.RBPRV,RB.CRD)]
	IDIVI	N,^D31*^D12	;GET DATE IN YEAR
	MOVE	N,N1		;POSITION IT
	IDIVI	N,^D31		;GET MONTH
	MOVE	N,MONTAB(N)	;GET ASCII OF MONTH AS -XXX-
	SUBI	N,2*<"-"-" ">	;CHANGE TO -XXXS  (S=SPACE)
	LSH	N,7		;CHANGE TO XXXS IN ASCIZ
	MOVEI	T,N		;POINT TO CODE
	PUSHJ	P,MSG		;TYPE IT
	MOVEI	T,1(N1)		;GET DAY IN MONTH
	PUSHJ	P,DECOUT	;TYPE IT IN DECIMAL
ISIN:	PUSHJ	P,CRLF
	TLNE	F,L.FACT
	PUSHJ	P,MAKFCT
	MOVE	N,IOB2+.RBSTS	;GET FILE'S STATUS
	TRNN	N,RP.NDL	;SEE IF NON-RENAMEABLE
	SKIPG	N,IOB2+.RBUSD
	MOVEI	N,0
	ADDM	N,TOTUSD
	ADDM	N,STRUSD
NEXT:	SKIPE	IPPN
	JRST	SPACEL
	AOBJN	M,.+1
	AOBJN	M,LOOP
	JRST	ML

EOSTR:	CLOSE	MFD,CL.ACS	;DONE WITH MFD
	RELEAS	MFD,
	RELEAS	UFD,
	$MSG <
Structure used total  >
	MOVE	T,STRUSD
	PUSHJ	P,DECOU5
	$MSG <
	  free        >
	MOVE	T,STRTAL
	ADDM	T,TOTFRE
	PUSHJ	P,DECOU5
	SETZB	T,T1		;CLEAR ACCUMULATION AND STR
EOS1:	SYSPHY	T1,		;GET NEXT UNIT
	  JRST	EOS2		;GIVE UP
	JUMPE	T1,EOS2		;DONE
	MOVEM	T1,IOB2		;SAVE FOR DSKCHR
	MOVE	T2,[7,,IOB2]	;POINT TO DSKCHR
	DSKCHR	T2,		;GET INFO
	  JRST	EOS1		;GIVE UP IF FAILS
	MOVE	T2,IOB2+.DCSNM	;GET STR NAME
	CAMN	T2,STRUCT	;SEE IF THIS STR
	ADD	T,IOB2+.DCUSZ	;YES--INCLUDE IT'S SIZE
	JRST	EOS1		;LOOP UNTIL DONE

EOS2:	JUMPE	T,EOST		;GIVE UP IF NO SPACE
	PUSH	P,T		;SAVE SPACE
	$MSG	<
	  system+lost >
	MOVE	T,(P)		;GET SPACE
	SUB	T,STRUSD	;SUBTRACT AMOUNT USED
	SUB	T,STRTAL	;AND AMOUNT FREE
	PUSHJ	P,DECOU5	;TYPE IT
	$MSG	<
	  total       >
	POP	P,T		;RESTORE TOTAL SPACE
	PUSHJ	P,DECOU5	;TYPE IT

EOST:	PUSHJ	P,CRLF
	JRST	SPACEL
EOSYS:	TLNN	F,L.DSK
	JRST	EOSY2
	$MSG <
Total used on all structures : >
	MOVE	T,TOTUSD
	PUSHJ	P,DECOUT
	SKIPE	IPPN
	JRST	EOSY1
	$MSG <
Total free on all structures : >
	MOVE	T,TOTFRE
	PUSHJ	P,DECOUT
EOSY1:	PUSHJ	P,CRLF
EOSY2:	PUSHJ	P,CRLF
	RELEAS	LST,		;CLOSE THE LISTING FILE
	JRST	SPACE		;RESTART THE PROGRAM

CTLMSG:	HRLI	A,440700
CTLML1:	ILDB	CH,A
	JUMPE	CH,CPOPJ
	PUSHJ	P,CTLTYO
	JRST	CTLML1

CTLTYO:	SOSG	CTLHED+2
	OUTPUT	CTL,
	IDPB	CH,CTLHED+1
	POPJ	P,


CTLM1:	ASCIZ	/;Dummy job submitted by SPACE
;  because your quota had not been recomputed.

.MOUNT /
CTLM2:	ASCIZ	/
.R QUOLST
/
	SUBTTL	SUBROUTINES

COLON:	MOVEI	CH,":"
	JRST	TYO
TAB:	MOVEI	CH,11
TYO:	SOSLE	OHED+2
	JRST	TYOOK
	OUT	LST,
	  SKIPA
	JRST	LSTERR
TYOOK:	IDPB	CH,OHED+1
	TLNN	F,L.TTY
	POPJ	P,
	CAIN	CH,12
	OUTPUT	LST,
CPOPJ:	POPJ	P,

LSTERR:	OUTSTR	[ASCIZ /? Output error on listing device
/]
	EXIT

MSG:	HRLI	T,440700
MSGL:	ILDB	CH,T
	JUMPE	CH,CPOPJ
	PUSHJ	P,TYO
	JRST	MSGL

CRLF:	JSP	T,MSG
	ASCIZ	/
/

MONTAB:	ASCII	/-Jan-/
	ASCII	/-Feb-/
	ASCII	/-Mar-/
	ASCII	/-Apr-/
	ASCII	/-May-/
	ASCII	/-Jun-/
	ASCII	/-Jul-/
	ASCII	/-Aug-/
	ASCII	/-Sep-/
	ASCII	/-Oct-/
	ASCII	/-Nov-/
	ASCII	/-Dec-/
NOSTR:	$MSG <? Can't access structure >
	MOVE	B,STRUCT
	PUSHJ	P,SIXOUT
	PUSHJ	P,CRLF
	JRST	SPACEL

MINUS:	MOVEI	CH,"-"
	JRST	TYO

DECPR2:	MOVEI	CH,"0"
	CAIG	T,11
	PUSHJ	P,TYO
DECOUT:	CAMN	T,[XWD 377777,777777]
	JRST	INFINI
	SKIPGE	T
	PUSHJ	P,MINUS
	MOVMS	T
	IDIVI	T,12
	HRLM	T1,(P)
	SKIPE	T
	PUSHJ	P,DECOUT
	HLRZ	CH,(P)
	ADDI	CH,"0"
	JRST	TYO

PPNOUT:	PUSH	P,T
	HLRZ	T,T
..Z==700000
REPEAT 5,<	TRNN T,..Z
	PUSHJ	P,BLANK
..Z==<..Z!<..Z_<-3>>>>
	HLRZ	T,(P)
	PUSHJ	P,OCTOUT
	MOVEI	CH,","
	PUSHJ	P,TYO
	HRRZ	T,(P)
	PUSHJ	P,OCTOUT
	POP	P,T
	POPJ	P,

OCTOUT:	SKIPGE	T
	PUSHJ	P,MINUS
	MOVMS	T
	IDIVI	T,10
	HRLM	T1,(P)
	SKIPE	T
	PUSHJ	P,OCTOUT
	HLRZ	CH,(P)
	ADDI	CH,"0"
	JRST	TYO

SIXOUT:	MOVE	T3,[XWD 440600,T]
SIXOUL:	ILDB	CH,T3
	JUMPE	CH,CPOPJ
	ADDI	CH,40
	PUSHJ	P,TYO
	TLNE	T3,770000
	JRST	SIXOUL
	POPJ	P,

BLANK:	MOVEI	CH,40
	JRST	TYO
DHEAD:	TLOE	F,L.TTLD	;SEE IF STR TITLE DONE YET
	POPJ	P,		;YES--RETURN
	SKIPN	IPPN		;SEE IF SINGLE USER
	PUSHJ	P,CRLF		;NO--SET IT OFF FROM PREVIOUS LINES
	PUSHJ	P,HEAD		;GIVE MASTER TITLE IF NEEDED
	MOVE	T,STRUCT	;GET STR NAME
	PUSHJ	P,SIXOUT	;TYPE IN SIXBIT
	SKIPN	IPPN		;IF MULTI-USER,
	PUSHJ	P,CRLF		;END LINE
	PJRST	CRLF		;GIVE A BLANK LINE

HEAD:	TLOE	F,L.TTL		;SEE IF MAIN TITLE ISSUED YET
	POPJ	P,		;YES--RETURN
	JSP	T,MSG
	ASCIZ	/
  Proj,Prog	Qta in	Qta out	Used	Unit	Login?	Free	Last In
/
DECTAB:	PUSH	P,T
	PUSHJ	P,DECOU5
	POP	P,T
	CAME	T,[377777,,777777]
	CAMG	T,[EXP ^D9999999]
	JRST	TAB
	JRST	BLANK

INFINI:	JSP	T,MSG
	ASCIZ	/+Infin/

QJOB:	MOVE	T,QFILN
	MOVEM	T,Q.FNAM
	MOVSI	T,'DSK'
	MOVEM	T,QSTRUC
	MOVEM	T,QSTR2
	MOVE	T,USER
	MOVEM	T,QUSER
	MOVEM	T,QUSR2
	MOVEM	T,QUSR3
	MOVE	A,[QSIZ,,QDATA]
	MOVEI	T,1
	MOVEM	T,QDATA+1
	PUSHJ	P,.QUEER##
	POPJ	P,

DECOU5:	MOVM	N1,T
	JUMPL	T,DECOX5
	CAIG	N1,^D9999
	PUSHJ	P,BLANK
DECOX5:	CAIG	N1,^D999
	PUSHJ	P,BLANK
	CAIG	N1,^D99
	PUSHJ	P,BLANK
	CAIG	N1,^D9
	PUSHJ	P,BLANK
	JRST	DECOUT
MAKFCT:	MOVEI	A,FE.SPC
	DPB	A,[POINT 9,FACTB,8]
	PJOB	A,
	DPB	A,[POINT 9,FACTB,17]
	MOVNI	A,1
	GETLCH	A
	MOVEI	T,(A)
	TXNE	A,GL.CTY
	MOVNI	T,1
	GETLIN	A,
	TLNN	A,-1
	MOVNI	T,2
	DPB	T,[POINT 12,FACTB,29]
	MOVEI	T,FACTBL
	DPB	T,[POINT 6,FACTB,35]
	MOVE	A,IOB2+.RBNAM	;USER'S PPN
	MOVEM	A,FACTB+1
	SETZM	FACTB+2
	MOVE	A,STRUCT
	MOVEM	A,FACTB+3
	MOVE	A,IOB2+.RBSTS
	TRNE	A,RP.NDL	;SEE IF NON-RENAMEABLE
	POPJ	P,		;YES--GIVE UP
	MOVEM	A,FACTB+4
	MOVE	A,IOB2+.RBQTF
	MOVEM	A,FACTB+5
	MOVE	A,IOB2+.RBQTO
	MOVEM	A,FACTB+6
	MOVE	A,IOB2+.RBQTR
	MOVEM	A,FACTB+7
	MOVE	A,IOB2+.RBUSD
	MOVEM	A,FACTB+10
	MOVE	A,STRTAL
	MOVEM	A,FACTB+11
	MOVE	A,INOURE
	MOVEM	A,FACTB+12
	MOVE	A,[FACTBL+1,,FACTH]
	DAEMON	A,
	  TLOE	F,L.DAER
	POPJ	P,
	$MSG	<
% DAEMON UUO failed
>
	POPJ	P,
QDATA:	0
	BYTE	(18) 0 (6) 0,0,1	;CREATE
	BYTE	(9) L.HED,L.1FI (18)2
	SIXBIT	/INP/
QUSER:	0
	SIXBIT	/SPACE/		;JOB NAME
	0		;SEQ
	1		;PRIOR
	0		;PDEV
	0		;START
	0		;CREA
	0		;AFTER
	0		;DEADLINE
	0		;CHARGE
	SIXBIT	/SYSTEM/
	SIXBIT	/ ADMIN/
	0		;.IDEP
	62000,,^D300	;LIMITS
	12,,0
	0,,0
QUSR3:	0
	0
	0
	0
	0
	0
L.HED==.-QDATA-1
L.1FIB==.
QSTRUC:	'DSK'
	1,,2
	0
	0
	0
	0
	0
Q.FNAM:	'SPACE '
Q.FEXT:	'CTL   '
	0
	1		;LINE NUMBER
	0,,111101
L.1FI==.-L.1FIB
L.2FIB==.
QSTR2:	0
QUSR2:	0
	0
	0
	0
	0
	0
Q.NAM2:	'SPACE '
Q.EXT2:	'LOG   '
	0
	1
	111301
L.2FI==.-L.2FIB
QEND:
QSIZ==QEND-QDATA

QUEUEN==0
QUEUEM==0
INTERN QUEUEN,QUEUEM
	SUBTTL	COMMAND ACQUISITION

COMAND:	SKPINL			;CLEAR ^O
	  JFCL
	OUTSTR	[ASCIZ /*/]
	SETZM	COMDAT
	MOVE	T,[COMDAT,,COMDAT+1]
	BLT	T,COMDX
	TLZ	F,L.ARO+L.ANY
COML1:	PUSHJ	P,FILSPC
COM2:	CAIN	CH,"/"
	JRST	SWITCH
	CAIE	CH,"="
	CAIN	CH,"_"
	JRST	ARROW
	CAIG	CH,33
	JRST	BREAK
COMERR:	CLRBFI
	OUTSTR	[ASCIZ .
? Type /HELP for help
.]
	JRST	SPACE
SWITCH:	PUSHJ	P,SIXBRD
	JUMPE	A,COMERR
	SETOB	B,N1
	TDNN	B,A
	JRST	SW2
	LSH	B,-6
	JRST	.-3
SW2:	MOVSI	N,-SWITCN
SW2A:	MOVE	C,SWTAB(N)
	TDZ	C,B
	CAMN	A,C
	JRST	SW1
SW3:	AOBJN	N,SW2A
	MOVEI	A,0
	JUMPL	N1,COMERR
	JUMPE	N1,HELP
	TDO	F,SWTAB1(N1)
	TLNN	F,L.GOD
	TLNN	F,L.FACT!L.BATC
	JRST	COM2
	OUTSTR	[ASCIZ /? Switch illegal unless logged in as [1,2]/]
	JRST	COMERR

SW1:	SKIPL	N1
	JRST	COMERR
	HRRZ	N1,N
	JRST	SW3

SWTAB:	SIXBIT	/HELP/
	SIXBIT	/BATCH/
	SIXBIT	/FACT/
SWITCN==.-SWTAB
SWTAB1:	0
	L.BATC,,0
	L.FACT,,0

HELP:	MOVE	A,['SPACE ']
	PUSHJ	P,.HELPR##
	JRST	SPACE
ARROW:	TLOE	F,L.ARO
	JRST	COMERR
	MOVE	T,DEV
	MOVEM	T,ODEV
	MOVE	T,FILE
	MOVEM	T,OFILE
	MOVE	T,EXT
	MOVEM	T,OEXT
	MOVE	T,PPN
	MOVEM	T,OPPN
	JRST	COML1

BREAK:	SKIPN	FILE
	SKIPE	EXT
	JRST	COMERR
	MOVE	T,PPN
	MOVEM	T,IPPN
	SKIPN	T,DEV
	MOVSI	T,'DSK'
	MOVEM	T,IDEV
	TLNN	F,L.ANY!L.ARO
	JRST	BREAK1
	POPJ	P,

BREAK1:	CAIE	CH,3
	CAIN	CH,32
	MONRT.
	JRST	COMAND
SIXBRD:	MOVEI	A,0
	MOVE	B,[440600,,A]
SIXBRL:	PUSHJ	P,TYI
	CAIG	CH,"Z"
	CAIGE	CH,"A"
	SKIPA
	JRST	SIXLTR
	CAIG	CH,"9"
	CAIGE	CH,"0"
	JRST	[SKIPE A
		TLO F,L.ANY
		POPJ P,]
SIXLTR:	SUBI	CH,40
	TLNE	B,770000
	IDPB	CH,B
	JRST	SIXBRL

TYI:	INCHWL	CH
	CAIE	CH,177
	CAIN	CH,15
	JRST	TYI
	JUMPE	CH,TYI
	CAIL	CH,175
	MOVEI	CH,33
	CAIG	CH,"Z"+40
	CAIGE	CH,"A"+40
	SKIPA
	SUBI	CH,40
	CAIE	CH,40
	CAIN	CH,11
	JRST	TYI
	POPJ	P,
FILSPC:	SETZM	FILE
	SETZM	DEV
	SETZM	EXT
	SETZM	PPN
	TLZ	F,L.BKT+L.DOT
FILSPL:	PUSHJ	P,SIXBRD
FILSP2:	CAIN	CH,":"
	JRST	CCOLON
	CAIN	CH,"."
	JRST	DOT
	CAIN	CH,"["
	JRST	BRAKET
FSTHRU:	TLZN	F,L.DOT
	JRST	FSTHR1
	HLLOM	A,EXT
	MOVEI	A,
FSTHR1:	SKIPN	A
	POPJ	P,
	SKIPE	FILE
	JRST	COMERR
	MOVEM	A,FILE
	POPJ	P,

DOT:	TLOE	F,L.DOT
	JRST	COMERR
	SKIPN	A
	JRST	FILSPL
	SKIPE	FILE
	JRST	COMERR
	MOVEM	A,FILE
	JRST	FILSPL

CCOLON:	SKIPE	A
	SKIPE	DEV
	JRST	COMERR
	MOVEM	A,DEV
	JRST	FILSPL
BRAKET:	SKIPE	PPN
	JRST	COMERR
	PUSHJ	P,FSTHRU
	PUSHJ	P,OCTIN
	JUMPE	N,COMERR
	TLNN	N,-1
	CAIE	CH,","
	JRST	COMERR
	HRLM	N,PPN
	PUSHJ	P,OCTIN
	TLNE	N,-1
	JRST	COMERR
	HRRM	N,PPN
	CAIN	CH,"]"
	PUSHJ	P,TYI
	TLO	F,L.ANY
	JRST	FILSP2

OCTIN:	SETZB	A,N
OCTINL:	PUSHJ	P,TYI
	CAIG	CH,"7"
	CAIGE	CH,"0"
	POPJ	P,
	LSH	N,3
	ADDI	N,-"0"(CH)
	JRST	OCTINL
PDP:	XWD	-60,PDL-1
PDL:	BLOCK	60
OHED:	BLOCK	3
STRUSD:	0
TOTUSD:	0
INOURE:	0			;SIXBIT IN OR OUT OR RECOMP
STRTAL:	0			;FREE ON STRUCTURE FROM DSKCHR
TOTFRE:	0			;TOTAL FREE ON ALL STRUCTURES
STRUCT:	SIXBIT	/STR/
USER:	XWD	10,16
IOL:	XWD	-200,IOB-1
	0
IOB2:	BLOCK	26
IOB:	BLOCK	200
FACTBL==13
FACTH:	EXP	DF.FCT		;FACT FUNCTION
FACTB:	BLOCK	FACTBL
CTLHED:	BLOCK	3
QSTR:	0
QFILN:	0
SJBFF:	0
FFAPPN:	0
MFDPPN:	0
SYSHDR:	BLOCK	6	;ROOM FOR SYSTEM HEADER LINE

COMDAT:
DEV:	0
FILE:	0
EXT:	0
PPN:	0
IDEV:	0
IPPN:	0
ODEV:	0
OFILE:	0
OEXT:	0
OPPN:	0
COMDX==.-1

	END	SPACE
   