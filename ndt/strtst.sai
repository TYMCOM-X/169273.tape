begin "More Strings"                       

require "(SAILIB)SAIL.DEF" source!file;
!get!module(STRINGS);

Own integer CvmByt, CvmChr, CvmIdx;
Own integer CvmChan;

Preset!with CvAsc("ABCDE"), CvAsc("FGHIJ"), CvAsc("KLMNO"),
	    CvAsc("PQRST"), CvAsc("UVWXY"), CvAsc("Z");
Own Integer Array Alphabet[1:6];


simple string procedure CvmAsc( integer Byte, Count );
! --------------------------------------------------------------;
! CvmAsc	Returns a string from an array of text pointed	;
!		to by Byte for a maximim length of Count.	;
! --------------------------------------------------------------;
If Count leq 0 then return( null ) else
begin "CvmArr"
    CvmByt_ If 0 neq !lh(Byte) then Byte else !Xwd( '440700, Byte );
    CvmChan_ StrOpn( Count );
    For CvmIdx_ 1 step 1 until Count
     do If ( CvmChr_ Ildb( CvmByt ) )
	 then begin print("[", cvmIdx, ":`", cvmChr & "']");
			 StrAch( CvmChan, CvmChr ); end
	 else begin print("[*]"); Done; end;
    Return( StrCls( CvmChan ) );	! "*" 2 to inf ?????????;
end "CvmArr";

integer a!start;
simple procedure set; a!start_ location(alphabet[1]);
	require set initialization;
string procedure do( integer Count ); 
return( CvmAsc(a!start, Count) );

procedure doit( integer Count ); 
Print( Crlf, count, "-> ", do(Count), crlf );

doit(0); doit(1); doit(25); doit(26); 
Print( CvmAsc( location(Alphabet[1]), 26 ), Crlf );
Print( CvmAsc( location(Alphabet[1]), 26 )[2 to inf], Crlf );

end;
