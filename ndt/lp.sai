begin "SAIL:hackmem.132	loop detector"

integer machineCOUNTER;	
		COMMENT number of calls on detector, 0 starts over;
safe integer array machineTABLE[0:35];	
		COMMENT lb.maxchk=binary log of max # calls made;

integer simple procedure machineLoopDetect( integer newval );
COMMENT return 0 = no loop yet, else loop size
;
start!code	define P='17,A=1,	 C='13,J='14;
		COMMENT C and J are work ACs;
		define !="comment";
		LABEL nxtent, return, nomatch, more0;
	MOVEI	J,access(machineTABLE[0]);
	MOVE	A,newval;
	MOVE	C,machineCOUNTER; ! count calls, get copy of count;
NXTENT:	JUMPE	C,NOMATCH;	! check table for 0 : floor( lb(c) );
	LSH	C,-1;
	CAME	A,(J);
	 AOBJP	J,NXTENT;
! MATCH;
	HLRZ	J,J;
	MOVNI	A,2;
	ASH	A,(J);		! calc - 2^(e+1) (inverted mask);
	SETCAM	A,J;		! save mask for low E+1 bits ***;
	ASH	A,-1;		! now get - 2^e;
	ADD	A,machineCOUNTER; ! add in counter [ A = C - 2^e ];
	AND	A,J;
	AOJA	A,RETURN;
NOMATCH:
	MOVEI	C,access(machineTABLE[0]);
	AOSA	J,machineCOUNTER; ! ac meanings switched since C is 0 ;
MORE0:	 LSH	J,-1;		! C counts low order zeroes in COUNTER;
	TRNN	J,1;
	 AOJA	C,MORE0;
	MOVEM	A,(C);
	MOVEI	A,0;		! return "no match yet";
RETURN:
end;
integer sailCOUNTER;
		COMMENT number of calls on detector, 0 starts over;
safe integer array sailTABLE[0:35];	
		COMMENT lb.maxchk=binary log of max # calls made;

integer simple procedure sailLoopDetect( integer newval );
COMMENT return 0 = no loop yet, else loop size
;
begin	integer index, temp;

temp := sailCounter lsh 1;
for index := 0 step 1 while (temp := temp lsh -1)
   do if newval = sailTable[index]
	then return( 1 + ( (sailCounter - (1 ash index)) 
			   land (1 ash (index+1)-1) ) );

sailCounter := sailCounter + 1;
temp := sailCounter;
for index := 0 step 1 while (temp := temp rot -1) > 0 do;
sailTable[index] := newVal;
return(0);
end;
integer maxTries, generator, i, v, res,sailRes;

simple integer procedure callGen;
return( if generator<0 then cvd(inchwl)
	else if generator=0 then 0 xor ran
	else generator * ran );

maxTries := 100; generator := -1; 
arrclr(sailTable,-1); arrclr(machineTable,-1); 
while true
   do begin "main loop"
	do begin
	   print("max Check (0=same, -1=>reset generator, -2=>stop): ");
	   if 0 < i := cvd(inchwl) then maxTries := i
	   else if i = -2 then done "main loop"
	   else if i = -1
	    then begin
		 print("generator (0=>0 XOR ran; +=>ran*N, -1=inpt: ");
		 if 0 leq (generator := cvd(inchwl))
		  then begin	string seed;
			print("seed (octal, null=no seed): '");
			if length(seed := inchwl) then ran(cvo(seed));
		       end
		 end
	   end
	 until i GEQ 0;
	sailCOUNTER := machineCOUNTER := 0;
	neednext for i := maxTries-1 step -1 until 0
	   do begin "value"
			procedure found( integer res; string name );
			print('15&'12, name, res,"-value loop seen at ",
				maxTries-i, "(value was ", v, ")" );
		v := callGen;
		res := machineLoopDetect( v );
		sailRes := sailLoopDetect( v );
		if sailres neq res
		 then begin
			print("?? machine and SAIL differ??");
			if res then found(res,"machine:");
			if sailRes then found(res,"machine:");
			if res=0
			 then begin
				print("Run out the machine version?");
				if "Y"=(inchwl+0) land '137
				 then do begin next "value"; 
					      v := callGen; end until
					res := machineLoopDetect( v );
				if res then found(res,"machine:");
			      end;
			if sailRes=0
			 then begin
				print("Run out the SAIL version?");
				if "Y"=(inchwl+0) land '137
				 then do begin next "value"; 
					      v := callGen; end until
					sailRes := sailLoopDetect( v );
				if sailRes then found(sailRes,"SAIL:");
			      end;
		      end
		 else if res then found(res,"found:");
		if res or sailRes then done;
	      end;
	if i < 0 then print("none");
	print("
Table:" );
	for i := arrinfo(sailTable,1) step 1 until arrinfo(sailTable,2)
	   do begin
		print( (if i mod 10 then " " else '15&'12), 
			sailTable[i] );
		if sailTable[i] neq machineTable[i]
		 then print("[m:", machineTable[i],"]");
	      end;
	arrclr(sailTable,-1); arrclr(machineTable,-1); 
	print("
");
	if generator < 0 then continue;
	print(" Also show the next N numbers: "); 
	for i := cvd(inchwl)-1 step -1 until 0
	   do print( callGen, (if i mod 10=0 then '15&'12 else " ") );
      end;
end;

