IFCR FALSE THENC
begin "procedure parameter bug"

recursive procedure hasProblem( string missive; procedure upRef );
begin "problem container"
	procedure doReference; print( " [", missive, "] " );
if missive = "F"
 then hasProblem( "argument from recursion", doReference )
 else upRef;
end "problem container";

procedure anything; print("{should not be called}");

hasProblem( "From the main Block", anything );

end "procedure parameter bug"
ENDC
begin "corrected procedure parameter bug"

integer simple procedure invoke( integer environment!procedure );
start!code  define lpsa='13, p='17; 
	external integer !invoke;
	pop p,lpsa; exch lpsa,(p); jrst !invoke; 
end;

integer simple procedure prWord(procedure toGrab);
	start!code  move 1,-1('17); hrl 1,'12; end;

recursive procedure hasProblem( string missive; integer procedureWord );
begin "problem container"
	procedure doReference; print( " [", missive, "] " );
if missive = "F"
 then hasProblem( "argument from recursion", prWord(doReference) )
 else invoke( procedureWord );
end "problem container";

procedure anything; print("{should not be called}");

hasProblem( "From the main Block", prword(anything) );

end "corrected procedure parameter bug"
ENTRY .INVOK
TITLE procal
?RF__12
?LPSA__13
?P__17
OPDEF err. [5b8]
DEFINE ERR(MS) <ERR. [ASCIZ /MS/]>
COMMENT 
DSCR .INVOK	call a parametric (Non-FORTRAN) procedure
CAL MOVE LPSA,[XWD ENVIRONMENT,PROCADDR]  PUSHJ P,.INVOK
RES The procedure at PROCADDR is called (assuming args already stacked)
	with RF set to allow successful "parent search"
SID RF may be temporarily mangled
DES if environment=0, SIMPLE or outer-block procedure assumed, just call
    otherwise environment is RF at the time of the actual/formal binding
	current RF is pushed (for first word of MSCP), RF is set to 
	"environment" (allows procedure to find its parent), and the 
	PUSH P,RF at the beginning of the procedure is avoided.
This added by SDD to fix terrible Procedure parameter bug!! 22-JUL-81


HERE(.INVOK)
	TLNN	LPSA,-1		;see if adjustment needed.
	 JRST	(LPSA)		;no problem with Simple or outer-block
				;procedures (they dont search static
				;linkages)
PSHRF:	PUSH	P,RF		;save true dynamic link
;lets just make sure we are going to a non-simple procedure
	SKIPA	RF,(LPSA)
CHKPRC:	 MOVE	RF,(RF)
	CAME	RF,PSHRF
	 JRST	NOTBEG
	HLRZ	RF,LPSA		;get RF that pointed to real procedure
	JRST	(LPSA)		;go to the procedure (it fixes RF)
NOTBEG:	TLC	RF,(<JRST>)	;slide past introductory JRSTs
	TLNN	RF,-1
	 JRST	CHKPRC
;not really a non-simple procedure???  ??what about DDT breakpoints??
	POP	P,RF
	ERR <Procedure parameter almost non-simple>
	JRST	(LPSA)
END

