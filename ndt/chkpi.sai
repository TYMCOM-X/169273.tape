begin "checkPi"
external long real procedure bfloat( integer h,l);
external long real procedure dfract( long real l);
external      real procedure dfint( long real l);
external real procedure setxp( real l; integer exponent );
external integer procedure intxp( real l );
require "slbmth" library;
simple integer procedure iFloor( long real lr ); return(dfint(lr));

procedure whichDigit( long real api );
begin	string piCopy;
	integer i, exact, approx, w,d;
	long real lr;
getformat(w,d); i_bbpp(18,api,-1); setformat(-6,0);
print(	cvos(ildb(i)), ",,", cvos(ildb(i)), " | ", 
	cvos(ildb(i)), ",,", cvos(ildb(i)), "  ='");
setformat(w,d);
print( iFloor(lr_api), "." );
for i_1 step 1 while 0 neq lr_ dfract(lr)
 do begin
	print( IFloor( lr_ 8*lr ) );
	if i mod 5 = 0 then print(" ");
      end;
piCopy_ "3110375524210264302151423063050";
for i_ 1 step 1 while length(piCopy)
   do if (exact_lop(piCopy)-"0") neq (approx_dfint(api))
	then begin
		print(" at ", i, ": ", approx, "<>", exact );
		return;
	      end
	 else api_ dfract(api) * 8;
print(" exact? ");
end;

define	!pi="3.1415926535897932384626433832795028841972@@0",
	twoPi="(2*pi)",
	oPi="( (0@@0 lor '202622077325) 
		lor ((0@@0 lor '021026430215) rot 36) )",
	prodPi="(((0@@0 lor '021026430215) rot 36) lor '202622077325)";

simple procedure pv(string name; long real v);
	begin print('15&'12, name ); whichDigit(v); end;
define pv!(x)="pv( cvps(x), x )";

long real dpi,opi1,opi2, bpi1, bpi2;
integer exponent;
string oPiStr;
print("Record file (null for no): ");
if length(opistr_inchwl) then setprint(opistr,"B");

opiStr_ "3110375524210264302151423063050";
dpi_!pi;
bpi1_ oPi; bpi2_prodPi;
opi1_ bfloat('311037552421,'026430215142 lsh -1) * b2exp(3-36-35);
opi2_ lop(oPiStr) - "0";
for exponent_ intxp(1.5)-3 step -3 until -72 
	do opi2_ opi2 + setxp(lop(oPiStr)-"0", exponent);
pv!(dpi  );
pv!(opi1 );
pv!(opi2 );
pv!(bpi1 );
pv!(bpi2 );
end "checkPi";

