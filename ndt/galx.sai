begin "empire"
define include(x)="require cvps(x) source!file";
define !="COMMENT";
let logical=boolean;

define DIMENSION="integer safe array";
define s.DIMENSION="string safe array";
let data=PRESET!WITH;

require "{}{}" delimiters;

!	PROGRAM EMPIRE
;
	INCLUDE (COMMON.GAL)
;
! was:	INCLUDE (COMJCH.GAL)
;
;	REAL CODDS
;!/JCH/;	integer MPHAZP
		,MPHAZC 
		! was: ,CODDS ;
		,JCYCLE
;
! ?	NAMELIST/PARMS/MPHAZP,MPHAZC,CODDS;
;	LOGICAL SPECAL
;	DIMENSION LOPMAX[1:15]
;DATA	 "M","N","A","T","V" ,"P","Y","C","L","H"
	,"J","1","R","DOG" ,"GOD",[4]0
	,0
	,"LO","NU","LI","TR" ,"AR","TA","PA","A1","A0","CO"
	,"Q0","Q","JE","EX","CP" ,"LP"
	;S.DIMENSION COMSCN[1:36]
 
;	IF not CHKTIM(DUM)		! It's prime time...;
	 then begin
		 PRINT(" EMPIRE can't be played during prime time")
;		CALL(0,"EXIT")
;	      end
 
;! 20	CALL MAXTIM(999999999)
;	print(" Enter terminal type (0 for help)>")
;
;	while 0 < (TTYPE_ cvd(inchwl)) < 5
	   do PRINT(" Enter the following codes for your terminal
 Hazeltine, code 1
 ADM, code 2
 TVI, code 3
 HP2621, code 4
")
integer	TTYPE, NCYCLE
,	MPHAZP, MPHAZC, CODDS		! SET UP JCH PARAMETERS;
,	NUM
;
external fortran procedure GAME( integer bool, number );
string orders;
define upto="step 1 until", downto="step 1 until"; 
let # = NEQ;
;
;	ttyup(true)
;	TTYPE :=TTYPE-1
;	NCYCLE :=1
! SET UP JCH PARAMETERS
;	MPHAZP := 5
;	MPHAZC := 5
;	CODDS := 0.5			! Init fight probability
;	GAME( FALSE, NUM)
! IF YOU SAVED THE GAME IN THE MIDDLE OF A MOVE, DO THE ENEMY MOVE NOW.
;	IF(NUM # 0) then GOTO l.680
;
! COMMAND LOOP STARTS HERE.
;l.80:	CALL YESSIR
;l.90:	ORDERS_ inchwl
;	IF((SPECAL) AND equ(ORDERS,"JE")) GOTO 460
;	for I=1 upto 20
	   do IF equ(ORDERS, COMSCN[I]) then done
!Usual nonprivileged commands (1st 20)
120	case i of begin "case"
! 130 M - start move
;	GOTO 580
;! 140	N - give computer free moves
	begin CURSOR(100)
	; STROUT('Number of free enemy moves:',12)
	;NCYCLE_ cvd(inchwl)
	;GOTO 690
 	end
;! 150	A - refresh screen (clear, move code will repaint screen)
;	begin CLEAR
	;JECTOR := -1
	;ISEC :=-1
	end
;! 160	T - block map printout
;	BLOCK(2)
;! 170	V - save game
	begin GAME("END",0) ; STROUT("Game saved.",1) end
;! 180	P - Print a given sector
;	SECTOR(2)
;! 190	Y is legal only in editing mode
;	DIREC
;! 200	C - start computer's move (skip player's)
;	GOTO 680
;! 210	L is legal only in editing mode
;	DIREC
;! 220	H - Unhelpful help
;	begin CLEAR; HELP; ISEC :=-1 end
;! 230	J - enter editing mode
;	begin MODE :=1; Z6 :=0; EDITM(Z6); end
;! 240	1 - does something strange
;	begin MODE :=0; JECTOR :=-1 end
;! 250	R - print round number
;	begin CURSOR(200)
	;CALL STROUT(' Round #',2)
	;print( MDATE, " ")		! 640 FORMAT('+',I4,1X$);
;! 270	DOG - removes godliness
;	PASS := FALSE
;! 280	GOD causes godliness
;	PASS := TRUE			! Make user privileged;
;ELSE	if pass then begin "Privileged" ! Privileged debugging commands
;
! in "case", "Privileged" ;
	end "case"
;	GOTO 80			! Just ask again
;			


	FOR I=21 upto 36
	   do IF equ(ORDERS, COMSCN[I]) then done
	GOTO 80
310	GOTO (320,330,340,350,360,370,380,390,410,420,440,450,460,480,
     +  490,500) I-20
	GOTO 80
 
510	FORMAT('+EXP VALUE:',I5$)
520	FORMAT(1X,8I4)
530	FORMAT(1X,5I6)
540	FORMAT(1X,10I5)
560	FORMAT(1X,10I7)
570	FORMAT(11I5)
 
!Next few commands dump useful arrays
320	TYPE 570, ((LOCI(I,J),J=1,11),I=1,10)
	begin integer i,j
	; stf(5)
	;for  i= 1 upto 10 
	   do begin print(crlf)
		;for  j= 1 upto 10 do print( loc(i,j) )
		end
	; rtf
	end
330	TYPE.a(4,NUMBER)
340	TYPE.a(4, LIMIT)
350	TYPE.a(6,TROOPT)
360	TYPE.a(5,ARMTOT)
370	TYPE.a(5,TARGET)
380	Print(crlf, " SUCCESS:", SUCCES, " FAILURE:", FAILUR )
390	CALL BLOCK(1)		! A1 - reference map block typeout;
410	CALL BLOCK(0)		! A0 - enemy map block typeout;
;! 420	CO - display CODE array
;	begin
	;I1_ cvd(inchwl); 
	;I2_ cvd(inchwl))
	;stf(7)
	;for j_i1 upto i1+i2 do print( CODE[J] )
	end
440	SECTOR(0)		! 440 Q0 - enemy sector display;
450	SECTOR(1)		! 450 Q - reference sector display;
;! 460	JE - not unlike Q0
;	ACCEPT 100,JECTOR
	JECTOR=IPHASE(JECTOR)
	CALL SECTOR(0)
	ISEC=JECTOR
	GOTO 80
 
!EX - explore direction
480	E=EXPL(DUMMY)
	TYPE 510,E
	GOTO 80
 
! CP = CHANGE PARAMETERS
490	CALL CURSOR(140)
	CALL STROUT('Namelist is PARMS',1)
	READ (16,PARMS)
	GO TO 80
 
! LP = LIST PARAMETERS
500	WRITE (16,PARMS)
	GO TO 80
 
510	FORMAT('+EXP VALUE:',I5$)
520	FORMAT(1X,8I4)
530	FORMAT(1X,5I6)
540	FORMAT(1X,10I5)
550	FORMAT(' SUCCESS:',I6,' FAILURE:',I6)
560	FORMAT(1X,10I7)
570	FORMAT(11I5)
* BEGIN MOVEMENT
********************
*USER MOVE
580	IF(MODE==0) GOTO 600
	IF (JECTOR # -1) GOTO 590	!Jump if position known
	CALL CLEAR			!Otherwise clear screen
	JECTOR = 0			!Set up for new sector display
	ISEC = -1
590	JECT=ISEC
	IF(ISEC<0) JECT=0
600	DO 605 I=1,QNPCS		!Set up MOVES for pieces
	MOVES(I) = 0
	IF (LOCS(I) == 0) GOTO 605	!Just look at pieces that exist
	DO 602 J=1,15			!Figure out what kind of piece it is
	IF ((I-1)>=CRALOC(J) .AND. (I-1)<(CRALOC(J)+LOPMAX(J))) GOTO 603
602	CONTINUE
603	MOVES(I) = NMOVE(J)		!Set up dist piece can move
	IF (J < 4) GOTO 605		!Done if army or fighter
	IF (H(I-QDES) <= (HITS(J)/2)) MOVES(I) = MOVES(I)/2  !Half speed if damaged
605	CONTINUE
!Repair docked ships.
	CALL SHIPFX(QDES,QHDES,3,3)
	CALL SHIPFX(QSUB,QHSUB,4,2)
	CALL SHIPFX(QTTR,QHTTR,5,3)
	CALL SHIPFX(QCRU,QHCRU,6,8)
	CALL SHIPFX(QCAR,QHCAR,7,8)
	CALL SHIPFX(QBAT,QHBAT,8,12)
 
!Loop here for each sector till no moves are left.
610	IF(MODE==0) GOTO 615
	JECTOR = MOD(JECT,8)
	LINE=KLINE(KI,JECTOR)
	IADJST=LINE+KI-300
615	CALL SHIPMV(QTTR,QHTTR,5,'T')
	CALL SHIPMV(QCAR,QHCAR,7,'C')
	CALL SHIPMV(QBAT,QHBAT,8,'B')
	CALL SHIPMV(QCRU,QHCRU,6,'R')
	CALL SHIPMV(QSUB,QHSUB,4,'S')
	CALL SHIPMV(QDES,QHDES,3,'D')
	CALL ARMYMV
	CALL FIGHMV
	IF(MODE==0) GOTO 630
	JECT = JECT + 1			!Next sector
	DO 620 I=1,QNPCS
620	IF (MOVES(I) > 0) GOTO 610	!Loop back if moves left
 
630	CONTINUE
C HARDWARE PRODUCTION
	DO 670 Y=1,70
	IF(OWNER(Y)#1)GOTO670
	CALL SENSOR(X(Y))
	IF ((PHASE(Y)>=1) .AND. (PHASE(Y)<=15)) GOTO 660
* BAD PHASE
	CALL CLEAR
	ISEC = -1			!Need new sector display later
	TYPE 650,X(Y)			!Display position
650	FORMAT(' LTR readout around city at',I5)
	I1 = MODE			!Save mode
	MODE = 0			!Use non-cursor mode
	CALL LTR(X(Y))			!Display city surroundings
	MODE = I1
	CALL STROUT('What do you order this city to produce? ',12)
	CALL PHASIN(Y)
	GOTO 670
660	IF(MDATE<FOUND(Y)) GOTO 670
	FOUND(Y)=MDATE+PHASE(Y)*MPHAZP
	CALL CURSOR(200)
	CALL STROUT('City #',10); CALL DECPRT(Y)
	CALL STROUT(' at',10); CALL DECPRT(X(Y))
	CALL STROUT(' has completed a',0)
	K=PHASE(Y)
	CALL PROD(HITS(K),X(Y),LIMIT(TIPE(K)),CRAHIT(K),CRALOC(K),
     +LOPMAX(K),AR2S,TIPE(K)+1,RANGE)
	CALL SLEEP(750)
670	CONTINUE
680	CONTINUE
 
 
!****************************
!COMPUTER MOVE
690
;for i_ 1 upto ncycle do begin "710"
	ARMCNT(ARMTOT,CODE,TARGET,LIMIT)
;!	CALL HERE('Troop t')
	;TROOPM(DUMMY)
;!	CALL HERE('Army')
	;ARMYEN(DUMMY)
;!	CALL HERE('Carrier')
	;CARIER
;!	CALL HERE('Battleship')
	;ENEMYM("8",12,QEHBAT,QEBAT,8)
;!	CALL HERE('Cruiser')
	;ENEMYM("6",8,QEHCRU,QECRU,6)
;!	CALL HERE('Submarine')
	;ENEMYM('4',2,QEHSUB,QESUB,4)
;!	CALL HERE('Destroyer')
	;ENEMYM('3',3,QEHDES,QEDES,3)
;!	CALL HERE('Fighter')
	;FIGHTR
	;JCYCLE:= NCYCLE-I
	;YESSIR
;! PRODUCTION OF ENEMY HARDWARE
	;CITYCT
	;CITYPH
	;for Y_1 upto 70 
	  do IF X[Y] # 0 AND OWNER[Y] = 2 then begin
		;SONAR (X[Y])
		;IF MDATE geq FOUND(Y) then begin
			;FOUND(Y)=MDATE+MPHAZC*PHASE(Y)
			;K :=PHASE(Y);
			;J :=0;
			;if k=1 then j := 1;
			PROD(HITS(K),X(Y),LIMIT(TIPE(K)+8),
			CRAHIT(K)+QEHDES, CRALOC(K)+QEBAS,LOPMAX(K),AR2S,J,RANG)
		end;	end
	;MDATE=MDATE+1
	;IF MDATE land 3=0 GAME ("END",0)
      end "710"
 
;NCYCLE:=1
	IF WIN=1 then GOTO 90
	IF WIN neq 2 then begin
		N:=0
		;for j_ 1 upto 70 do IF OWNER[J]=1 then N:=N+1
		;IF N geq 30 AND NUMBER[9] leq N div 2
		 then begin
			CLEAR
			;print("
 The computer acknowledges defeat. Do
 you wish to smash the rest of the enemy? ");
			;ORDERS_ INCHWL
			;IF equ(ORDERS, "NO") then call(0,"EXIT")
			;print("
 The enemy inadvertantly revealed its code used for
 receiving battle information. You can display what they've
 learned through the command 'JE', <CR><LF>, followed by the
 sector number.")
			;SPECAL= TRUE
			;WIN:=2
			;GOTO 80
		      end;
	      end;
	;IF NUMBER[9] leq 0 AND LIMIT[9] leq 0
	 then begin
		 CLEAR
		;print("
 The enemy is incapable of defeating you.
 You are free to rape the empire as you wish.
 There may be, however, remnants of the enemy fleet
 to be routed out and destroyed.")
	      end
	 else begin
		for I=1 upto 70 do IF OWNER[I]=1 then GOTO 90
		;for I=1 upto LIMIT(1) do IF LOCS[I] neq 0 then GOTO 90
		;CLEAR
		;print("
 You have been rendered incapable of
 defeating the rampaging enemy fascists! The
 empire is lost. If you have any ships left, you may
 attempt to harass enemy shipping.")
	      end
	;WIN:=1
	;GOTO 80
	END
	SUBROUTINE GAME(IZAP,NUM)
 
	INCLUDE 'COMMON.EMP/NOLIST'
 
	REAL RAN,C1
	LOGICAL IZAP
	REAL REEED(2)
	INTEGER MAPTMP(0:2)
 
	DATA PHAZE/'A','F','D','S','T','R','C','B',1,2,4,5,6,10,12,15/
	DATA (MAPTMP(I),I=0,2)/'.','+','*'/
	DATA (IARROW(I),I=0,9)/0,1,-99,-100,-101,-1,99,100,101,0/
preload!with	QARM,QFIG,QDES,QSUB,QTTR,QCRU,QCAR,QBAT
		,QEARM,QEFIG,QEDES,QESUB,QETTR,QECRU,QECAR,QEBAT;
	own safe INTEGER array IOTAB[1:16];
 
	IF IZAP GOTO 180
	;MODE:=1
	;ISEC:=-1
	;MSTIME(M)
	;SETRAN(M/2*2+1)
	;Z3=4
 
	;PASS:= FALSE			;! Assume non-privileged
	;IB := 1
	;TRMINT				;! Init TRMOP stuff
	;CLEAR
	;print( "
 EMPIRE, version 3-1
")
	;STROUT("Directions are in EMPIRE.HLP",1)
	;OPEN(UNIT=1,DEVICE='DSK',FILE='EMPIRE.DAT',ACCESS='SEQIN',ERR=130)
???
	TYPE 170
	READ(1) D
	READ(1) MAPS
	READ(1) TROOPT
	READ(1) LIMIT,MDATE,Z3,PAMELA,REEED
	READ(1) NUMBER
	READ(1) X,TARGET,FOUND,OWNER,PHASE
	for i_ 1 upto 16 do READ(IOTAB[I],LIMIT[I],I)
	READ(1) J1TS
	READ(1,END=450) NUM
	READ(1,END=450) LOCI
	READ(1,END=450) NSHIFT,FIPATH
  450	CLOSE(UNIT=1)
	TYPE  120,PAMELA,REEED
  120 FORMAT(' Ready to resume game terminated at ',A5,' on ',
     &2A5/)
	RETURN
  130	CONTINUE
C-----MAP SELECTION-------
	for I=1 upto 10 do c1 := ran
	;KILL:= C1 * 18
	;IFILE:= "X." & ("A"+kill)	;! Change the ext (x.a,x.b,...)
  140	OPEN(UNIT=1,DEVICE='FUN',FILE=IFILE,ACCESS='SEQIN')
	READ(1) D
C------- MAP FLIP AND KLIP------
	IF RAN > .5
	 then for i_ 0 step 5 until 145
		   do begin
			IX:=295-I
			;for J_ 1 step 1 until 5 do d[I+J] swap D[IX+J]
		      end
C-----CITY AND A-MAP INITIALIZATION--------
 7373	CALL INITIA
 	CLOSE(UNIT=1)
  203	FORMAT(I4)
  365	;C_ RAN * 70 + 1
	;ID_ RAN * 70 + 1
	;IF X[C]=0 or X[ID]=0 or X[C]=X[ID]
	 or EDGER[X[C]]=8 or EDGER[X[ID]]=8 
	 then GO TO 365
	;Z6_ X[ID]
	;print( Your city is at ', X[ID] )
	;CHANGE(Z6,"O",1)
	;CHANGE(X[C],"X",1)
	;SONAR(X[C])
	;SENSOR(Z6)
	;MODE_0
	;LTR(Z6)
	;MODE_1
	;STROUT("What do you demand that this city produce?",12)
	;OWNER[ID]=1
	;MDATE=0
	;PHASIN(ID)
	;MDATE=5
	;OWNER[C]=2
	;PHASE[C]=2
	;FOUND[C]=5
	;outchr('7);	! ring aa bell;
	;Z6=X[ID]
	;RETURN
 
 
  180	IF MODE=0 then print(
 A few moments please...
")
	;TIME(PAMELA)
	;DATE(REEED)
	OPEN(UNIT=1,FILE='EMPIRE.DAT',ACCESS='SEQOUT')
	WRITE(1) D
	WRITE(1) MAPS
	WRITE(1) TROOPT
	WRITE(1) LIMIT,MDATE,Z3,PAMELA,REEED
	WRITE(1) NUMBER
	WRITE(1) X,TARGET,FOUND,OWNER,PHASE
	DO 21 I=1,16
21	CALL WRITE(IOTAB(I),LIMIT(I),I)
	WRITE(1) J1TS
	WRITE(1) NUM
	WRITE(1) LOCI
	WRITE(1) NSHIFT,FIPATH
	CLOSE(UNIT=1)
	RETURN
	END
	SUBROUTINE READ(BEG,LIM,NUM)
	INCLUDE 'COMMON.EMP/NOLIST'
	INTEGER TARGET,AR2S,CODE,BEG
	DO 100 J=BEG+1,BEG+LIM
	READ (1) LOCS(J)		!Read position
	IF (NUM < 9) READ (1) STATUS(J)  !Status if player piece
	IF(NUM>8)READ(1)CODE(J-QEBAS)	!Code if enemy piece
	IF(NUM==9)READ(1)AR2S(J-QEBAS)	!Enemy army code
	IF(NUM==2)READ(1)RANGE(J-QFIG)	!Player fighter range
	IF(NUM==10)READ(1)RANG(J-QEFIG)	!Enemy fighter range
  100	CONTINUE
	RETURN
	END
	SUBROUTINE WRITE(BEG,LIM,NUM)
	INCLUDE 'COMMON.EMP/NOLIST'
	INTEGER TARGET,AR2S,CODE,BEG
	DO 100 J=BEG+1,BEG+LIM
	WRITE (1) LOCS(J)		!Write position
	IF (NUM < 9) WRITE (1) STATUS(J)  !Status if player piece
	IF(NUM>8)WRITE(1)CODE(J-QEBAS)	!Code if enemy piece
	IF(NUM==9)WRITE(1)AR2S(J-QEBAS)	!Enemy army code
	IF(NUM==2)WRITE(1)RANGE(J-QFIG)	!Player fighter range
	IF(NUM==10)WRITE(1)RANG(J-QEFIG)  !Enemy fighter range
  100	CONTINUE
	RETURN
	END
	INTEGER FUNCTION ARMJMP(Z6,AR2SC)
	INCLUDE 'COMMON.EMP/NOLIST'
 
! THIS SUBROUTINE DETERMINES WHETHER OR NOT AN ARMY SHOULD GET OFF
! THE TROOP TRANSPORT IT IS ON. 0=NO; 1=YES
 
	ARMJMP=0
	DO 100 I=1,8
  100	IF(D1(Z6+IARROW(I))#'.') GOTO 101	!NOT ALL SEA SURROUNDINGS
	RETURN
 
  101	IF(AR2SC==0) GOTO 103			!BEEN ON TROOP TRANSPORT
						!FOR A LONG TIME
	DO 102 I=1,8
	LOC=Z6+IARROW(I)
	IF(D1(LOC)=='.') GOTO 102
	IF(ORDER(LOC)#0) GOTO 102
	AB=A(1,LOC)
	IF((AB=='A').OR.(AB=='F')) GOTO 103	!Attack armies and fighters
	IF((AB=='*').OR.(AB=='O')) GOTO 103	!Ditto cities
	LOC=Z6+2*IARROW(I)			!Look two squares away
	AB=A(0,LOC)
	IF(AB==' ') GOTO 103			!Go exploring if unknown
  102	CONTINUE
	RETURN					!DON'T JUMP
  103	ARMJMP=1
	RETURN					!JUMP
	END
	SUBROUTINE ARMYEN(DUMMY)
	INCLUDE 'COMMON.EMP/NOLIST'
	DIMENSION OK(5)
	REAL RAN,C1
	LOGICAL SENSE
	DATA OK/'+',' ','O','5','*'/
 
* THIS SUBROUTINE HANDLES ENEMY ARMY MOVES
 
 3100	MONKEY=0
	NUMBER(1)=0
 
C START ARMY MOVE LOOP
	DO 3190 Y=1,LIMIT(9)
	Z6=LOCS(QEARM+Y)
	IF(Z6==0) GOTO 3190
D	IF(.NOT.PASS) GOTO 7005
D	CALL CURSOR(50)
D	CALL DECPRT(Y)
D	CALL CURSOR(60)
D	CALL DECPRT(NPATH)
D	NPATH=0
 7005	NUMBER(1)=NUMBER(1)+1
	Z7=Z6
	MONKEY=Y
	DIR=MOD(Y,2)*2-1		!SET DIR TO 1 OR -1
	SENSE = .FALSE.
	AB=A(1,Z6)		!SET AB=WHAT IS SHOWING WHERE THE ARMY IS
	IF((AB#'1').AND.(AB#'5').AND.(AB#'X')) GOTO 3101
 
* AGE AR2S
	IF((AR2S(Y)<=100).OR.(AR2S(Y)>1000)) AR2S(Y)=AR2S(Y)-1
	IF((AR2S(Y)<0).OR.(AR2S(Y)==1000)) AR2S(Y)=0
 
	IF(AB#'5') GOTO 3102
	IF(ARMJMP(Z6,AR2S(Y))==0) GOTO 3190
 
C MOVE SELECTION
3102	IFO=IFORM(CODE(Y))
	ILA=ILATT(CODE(Y))
 
* IF A PRIORITY MOVE EXISTS, PICK IT AND DON'T BOTHER SLUGGING
* THHROUGH CODE SELECTION AND MOVE SELECTION
	MOVE1=PRIORI(Z6,IFO,ILA,DIR,AB)
	IF(MOVE1#0) GOTO 3143
 
 
!IFO=0: MOVE IN CERTAIN DIRECTION, OR FOLLOW SHORE
!IFO=1: MOVE TOWARDS TARGET CITY
!IFO=2: MOVE TOWARDS AN ENEMY ARMY
!IFO=3: MOVE TOWARDS A TROOP TRANSPORT
 
	GOTO (10,11,12,13) IFO+1
 
   10	GOTO 100		!LOOK FOR TARGETS, LOCI, TT'S
 
   11	IF(A(1,ILA)=='X') GOTO 100	!CITY HAS BEEN CAPTURED
	GOTO 201			!MOVE
 
   12	IF(ILA==Z6) GOTO 100		!ARRIVED AT ENEMY CONCENTRATION
	GOTO 201			!MOVE
 
   13	IF(ILA>100) GOTO 100			!INVALID VALUE FOR ILA
	IF(CODE(ILA+QETTR-QEBAS)>=60000) GOTO 1030	!TT IS FULL
	IF(LOCS(ILA+QETTR)==0) GOTO 1030		!TT SUNK
	IF(H(ILA+QEHTTR)<3) GOTO 1030			!TT DAMAGED
	GOTO 202
 
* SELECT A NEW CODE
  100	CONTINUE
 
* LOOK FOR TARGET CITY
 1010	IA=INT(RAN(C1)*FLOAT(NUMBER(10))+1.0)
	IB=IA+NUMBER(10)
	DO 3122 IC=IA,IB
	I=IC
	IF(I>NUMBER(10)) I=I-NUMBER(10)
	IF(TARGET(I)==0) GOTO 3122
	IF(IDIST(Z6,TARGET(I))>20) GOTO 3122
	MOVE=PATH(Z6,TARGET(I),DIR,OK,FLAG)
	NPATH=NPATH+1
	IF(FLAG==0) GOTO 3122				!CAN'T GET TO IT
	IFO=1
	ILA=TARGET(I)
	GOTO 400					!MOVE
 3122	CONTINUE
 
* LOOK FOR AN ARMY THAT IS ON YOUR CONTINENT
	IF(LOCI(10,11)#0) LOCI(10,11)=0
	DO 101 I=1,10
	TEMP=INT(RAN(C1)*10.+2.)
	IF(LOCI(I,TEMP)==0) TEMP=2
	IF(LOCI(I,TEMP)==0) GOTO 101
	TEMP=LOCI(I,TEMP)
	MOVE=PATH(Z6,TEMP,DIR,OK,FLAG)
	NPATH=NPATH+1
	IF(FLAG==0) GOTO 101
	IFO=2
	ILA=TEMP
	GOTO 400
  101	CONTINUE
 
* LOOK FOR TT THAT IS SHORT OF ARMIES
 1030	IF(AR2S(Y)#0) GOTO 6000		!INELIGIBLE TO GET ON A TT
	IA=INT(RAN(C1)*FLOAT(LIMIT(13))+1.0)
	DO 3126 IC=IA,IA+LIMIT(13)
	I=IC
	IF(I>LIMIT(13)) I=I-LIMIT(13)
	IF(LOCS(QETTR+I)==0) GO TO 3126			!TT DOESN'T EXIST
	IF(H(QEHTTR+I)<3) GOTO 3126			!DAMAGED, I.E. UNSUITABLE
	IF(IABS(CODE(QETTR+I-QEBAS))>59999) GOTO 3126	!NOT TAKING ON ARMIES
	IF(IDIST(Z6,LOCS(QETTR+I))>25) GOTO 3126	!TOO FAR AWAY
	MOVE=MOV(Z6,LOCS(QETTR+I))
	IFO=3
	ILA=I
	CODE(QETTR+I-QEBAS)=IFORM(CODE(QETTR+I-QEBAS))*10000+Y
	GOTO 400
 3126	CONTINUE
 
* PICK A RANDOM DIRECTION (IFO=0)
 6000	IF((IFO==0).AND.(ILA#0)) GOTO 200	!IF ALREADY ASSIGNED DIRECTION
	IFO=0
	ILA=INT(RAN(C1)*8.+1.)
 
  200	MOVE=ILA
	I1=ICORR(MOVE-DIR*3)
	IF(A(1,Z6+IARROW(I1))#'+') MOVE=I1
	GOTO 400
  201	MOVE=PATH(Z6,ILA,DIR,OK,FLAG)
	NPATH=NPATH+1
	IF(FLAG==0) GOTO 6000
	GOTO 400
  202	MOVE=PATH(Z6,LOCS(ILA+QETTR),DIR,OK,FLAG)
	NPATH=NPATH+1
 
  400	DO 3137 I=0,7*DIR,DIR
	MOVE1=ICORR(MOVE+I)
	LOC=Z6+IARROW(MOVE1)
	AC=A(1,LOC)
	IF(AC#'5') GOTO 3132
	IF(AR2S(Y)#0) GOTO 3137
	NUMARM=0
	DO 4148 IZ=QETTR+1,LIMIT(13)+QETTR
 4148	IF(LOCS(IZ)==LOC) GOTO 4149
 4149	IF(H(QEHTTR-QETTR+IZ)<3) GOTO 3137
	DO 4177 IY=QEARM+1,LIMIT(9)+QEARM
	IF(LOCS(IY)==LOC) NUMARM=NUMARM+1
 4177	IF(NUMARM>=6) GOTO 3137
	GOTO 3143
 3132	IF((AC=='+').AND.(ORDER(LOC)==0)) GOTO 3143
 3137	CONTINUE
	MOVE1=0
 
 3143	IF(IFO==0) ILA=IABS(MOVE1)
	CODE(Y)=IFO*10000+ILA
	IB=CODE(Y)
	Z6=Z6+IARROW(MOVE1)
 
	AC=A(1,Z6)
	IF(AB#'5') GOTO 7000
	IF(AC=='5') GOTO 3104
	CODE(Y)=0
	AR2S(Y)=1020
	GOTO 7002
 7000	IF(D1(Z7)#'*') CALL CHANGE(Z7,D1(Z7),1)
	IF(AC#'5') GOTO 7002
	AR2S(Y)=100
	GOTO 3104
 7002	IF(AC=='+') GOTO 3105
	IF((AC=='X').OR.(AC=='.')) GOTO 3101
	IF(D1(Z6)#'*') GOTO 3106
	IF(RAN(C1)<.5) GOTO 3101
	DO 3110 I=1,70
 3110	IF(TARGET(I)==Z6) TARGET(I)=0
	DO 3113 I=1,LIMIT(9)
 3113	IF(CODE(I)==10000+Z6) CODE(I)=0
	DO 3114 I=1,100
 3114	IF(X(I)==Z6) GOTO 3115
 3115	OWNER(I)=2
	PHASE(I)=0
	IF(((AC=='O').OR.(AR2S(Y)>0)).AND.(EDGER(Z6)<8)) PHASE(I)=-1
	IF(AC#'O') GOTO 3109
	CALL CURSOR(200)
	CALL STROUT('City at',10); CALL DECPRT(Z6)
	CALL STROUT(' surrendered to the fascist hordes',1)
	CALL CHANGE(Z6,'X',1)
	CALL SENSOR(Z6)
	CALL SLEEP(750)		!Let the unfortunate one see the damage
	GOTO 3101
 3109	CALL CHANGE(',1)
	GOTO 3101
 7001	AR2S(Y)=100
	GOTO 3104
 3106	H1=1
	IF(Z7==Z6) GOTO 3104
	SENSE = .TRUE.
	OWN1='1'
	OWN2=AC
	H2=30
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0) GOTO 3101
	CALL CHANGE(Z6,D1(Z6),1)
	IF(A(1,Z6)=='.') GOTO 3101
 3105	CALL CHANGE(Z6,'1',1)
3104	LOCS(QEARM+Y) = Z6
	IF(SENSE) CALL SENSOR(Z6)
	GOTO 3108
3101	LOCS(QEARM+Y) = 0
	IF(AC#'X') GOTO 6310
	DO 6311 I=1,70
 6311	IF(X(I)==Z6) PHASE(I)=0
 6310	IF(SENSE) CALL SENSOR(Z6)
	IF(A(1,Z6)#'O') GOTO 3118
	CALL CURSOR(200)
	CALL STROUT('City at',10); CALL DECPRT(Z6)
	CALL STROUT(' repelled enemy invasion.',1)
	CALL SLEEP(750)
 3118	CODE(Y)=0
	AR2S(Y)=0
 3108 CALL SONAR(Z6)
 3190	CONTINUE
	LIMIT(9)=MONKEY
	RETURN
	END
	SUBROUTINE CARIER
* THIS SUBROUTINE COMPUTES AND EVALUATES ALL COMPUTER CARRIER MOVES
 
	INCLUDE 'COMMON.EMP/NOLIST'
	DIMENSION OK(5)
	REAL AGGR
	REAL RAN,C1
	LOGICAL SENSE
	DATA OK/'.',' ','O','*','X'/
 
	NUMBER(7)=0
	OWN1='7'
	MONKEY=0
 
* BEGIN LOOP
	DO 3000 Y=1,LIMIT(15)
	Z6=LOCS(QECAR+Y)
	IF(Z6==0) GOTO 3000
	DIR=MOD(Y,2)*2-1
	H1=H(QEHCAR+Y)
	IF(A(1,Z6)=='X') H1=H1+1
	IF(H1>8) H1=8
 
	DO 2501 TURN=1,2
	IF((TURN==2).AND.(H1<=4)) GOTO 3000	!MOVE AT 1/2 SPEED
	SENSE = .FALSE.
	N=0
	Z7=Z6
	AB=A(1,Z6)
	IF((AB#'7').AND.(AB#'X')) GOTO 503
 
C MOVE SELECTION
	IFO=IFORM(CODE(Y))
	ILA=ILATT(CODE(Y))
	IF(H1==8) GOTO 3002
	IFO=8
	ILA=IPORT(Z6)
	GOTO 7000
 
* IFO=7: RANDOM DIRECTION
* IFO=6: HEADING TOWARDS STATION
* IFO=8: DAMAGED
* IFO=9: STATIONED
 
* DOES A NEW CODE NEED TO BE SELETED? 6000:YES, 7000:NO
 3002	GOTO (6,7,8,9) IFO-5
	GOTO 6000
 
    6	GOTO 7000
 
    7	GOTO 6000
 
    8	IF(H1==8) 6000, 7000
 
    9	DO 10 I=1,70
	IF(TARGET(I)==0) GOTO 10
	IF((A(0,TARGET(I))=='O').AND.(IDIST(Z6,TARGET(I))<=10))
     & GOTO 7000
   10	CONTINUE
	DO 11 I=1,10
   11	IF(IDIST(LOCI(I,2))<=10) GOTO 7000
	GOTO 6000
 
* NEW CODE SELECTION
 
 6000	DO 6001 J=1,10
	IF(LOCI(J,2)==0) GOTO 6001
	LOC=LOCI(J,2)
	KDORK=0
	ID=500
	DO 6002 K=1,70
	IF(OWNER(K)#2) GOTO 6002
	IF(IDIST(X(K),LOC)>=ID) GOTO 6002
	ID=IDIST(X(K),LOC)
	IF(ID<10) GOTO 6001
	KDORK=X(K)
 6002	CONTINUE
	DO 6003 K=QECAR+1,QECAR+LIMIT(15)
	IS=LOCS(K)
	IF(IS==0) GOTO 6003
	IF(IDIST(IS,LOC)>=ID) GOTO 6003
	IF(MOD(IFORM(CODE(K-QECAR)),10)#9) GOTO 6003
	ID=IDIST(IS,LOC)
	IF(ID<10) GOTO 6001
	KDORK=IS
 6003	CONTINUE
	IF(KDORK==0) GOTO 6001
 6004	IF(IDIST(KDORK,LOC)<1) GOTO 6001
	LOC=LOC+IARROW(MOV(LOC,KDORK))
	IF(IDIST(KDORK,LOC)>19) GOTO 6004
	AGARB=A(0,LOC)
	IF((AGARB#' ').AND.(AGARB#'.')) GOTO 6004
	IFO=6
	ILA=LOC
	GOTO 7000
 6001	CONTINUE
 
* RANDOM DIRECTION SELECTION
	IF(IFO==7) GOTO 7000
	IFO=7
	KDORK=0
	ILA=INT(RAN(C1)*8.+1.)
 
* NOW PICK THE MOVE SPECIFIED BY IFO AND ILA
7000	IF(IFO==8) GOTO 7003
	IF(IFO#7) GOTO 7001
	MOVE=ILA; GOTO 7010
 7001	IF(IFO#6) GOTO 7002
	IF(ILA#Z6) GOTO 7003
	IFO=9
	GOTO 7002
 7003	MOVE=PATH(Z6,ILA,DIR,OK,FLAG)
	GOTO 7010
 7002	IF(Z6#ILA) MOVE=MOV(Z6,ILA)
	IF(Z6==ILA) MOVE=INT(RAN(C1)*8.+1.)
 
* MOVE CORRECTION
 7010	AGGR=0.
	IF((NUMBER(7)>30).AND.(MOD(IFO,10)#9)) AGGR=5.
	MOVE=MOVCOR(IFO,TURN,Z6,MOVE,H1,1,AGGR,'7',1.,DIR)
	IF((H1<8).AND.(AB=='X')) MOVE=0
	IF(IFO==7) ILA=IABS(MOVE)
	CODE(Y)=10000*IFO+ILA
 
C MOVE EVALUATION
	Z6=Z6+IARROW(IABS(MOVE))
	IF(D1(Z7)#'*') CALL CHANGE(Z7,D1(Z7),1)
	AB=A(1,Z6)
	IF(AB=='.') GOTO 700
	IF(AB=='X') GOTO 701
	IF((AB>='A').AND.(AB<='T')) GOTO 703
	TYPE 502,OWN1,Z6,AB
  502	FORMAT(' Enemy ',A1,' AT ',I4,' ran aground on ',A1)
  503	H1=0
	GOTO 815
  703 H2=30
	SENSE = .TRUE.
	OWN2=AB
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,'7',OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0) GOTO 815
  700 CALL CHANGE(Z6,OWN1,1)
701	LOCS(QECAR+Y) = Z6
	CALL CHITS(Y+QEHCAR,H1)
	IF(TURN==1) NUMBER(7)=NUMBER(7)+1
  815 N=0
	IF(SENSE) CALL SENSOR(Z6)
	DO 702 I=1,LIMIT(10)
	IF(Z7#LOCS(I+QEFIG)) GOTO 702
	N=N+1
	LOCS(I+QEFIG) = Z6
	IF (N>H1) LOCS(I+QEFIG) = 0	!Overload, fighter is sunk
  702 CONTINUE
	IF(H1<=0) GOTO 850
	MONKEY=Y
	GOTO 899
850	LOCS(Y+QECAR) = 0		!Carrier has sunk
	CODE(Y)=0
	CALL CHITS(QEHCAR+Y,0)
  899 CALL SONAR(Z6)
 2501 CONTINUE
 3000 CONTINUE
	LIMIT(15)=MONKEY
 2001 RETURN
	END
	SUBROUTINE CITYPH
	INCLUDE 'COMMON.EMP/NOLIST'
	INCLUDE 'COMJCH.EMP/NOLIST'
	DIMENSION PH(8),OVRPOP(0:15,2),OK(5)
	LOGICAL CROWD
	DATA PH/1,2,4,5,6,10,12,15/
	DATA OK/'+',' ','*','X','O'/
	DATA OVRPOP/
     & 9,    1,    2,9,    3,    4,    5,9,9,9,    6,9,    7,9,9,    8,
     & 0,QNARM,QNFIG,0,QNDES,QNSUB,QNTTR,0,0,0,QNCRU,0,QNCAR,0,0,QNBAT/
 
C NUMBER(1-8): #'S OF UNITS
C NUMBER(11-18): #'S OF CITIES WITH EACH PHASE
C NUMBER(9): # OF CITIES
C NUMBER(10): # OF TARGET CITIES
 
 
	DO 100 I=1,70
	IF(OWNER(I)#2) GOTO 100
	IF((PHASE(I)>0).AND.(FOUND(I)#MDATE+MPHAZC*PHASE(I)-1)) GOTO 100
	INT=PHASE(I)
	IF(PHASE(I)#-1) GOTO 102
	PHASE(I)=1
	GOTO 400
102	EDGE = EDGER(X(I))
 
* IF WE HAVE JUST MADE A FIGHTER, AND HAVE ONE CITY, MAKE SOMETHING ELSE
	IF((NUMBER(9)==1).AND.(PHASE(I)==2)) PHASE(I)=0
 
* IF WE HAVE A PHASE OF 0, MAKE SOMETHING!
	IF(PHASE(I)==0) GOTO 300
 
* IF CITY IS SURROUNDED BY ARMIES, MAKE SOMETHING ELSE
	CROWD=.FALSE.
	IF(PHASE(I)#1) GOTO 701
	DO 702 J=1,8
  702	IF(A(1,X(I)+IARROW(J))=='+') GOTO 701
	CROWD=.TRUE.
	GOTO 300
 
* IF CRAFT NUMBERS ARE GETTING GROSSLY LARGE, PRODUCE SOMETHING ELSE
  701	IF(NUMBER(OVRPOP(PHASE(I),1))>OVRPOP(PHASE(I),2)-10) GOTO 300
 
	IF(EDGE#8) GOTO 101
	IF((NUMBER(9)>1).AND.(PHASE(I)==1)) GOTO 600
	IF(NUMBER(9)>1) GOTO 100
	IF(NUMBER(5)<1) PHASE(I)=6
	IF(NUMBER(5)>0) PHASE(I)=1
	GOTO 100
 
  101	IF(PHASE(I)#1) GOTO 100
	N=0
	DO 503 J=QEARM+1,QEARM+LIMIT(9)
	Z=LOCS(J)
	IF((Z==0).OR.(IDIST(X(I),Z)>6)) GOTO 503
	IF(A(0,Z)=='5') GOTO 503
	MOVE=PATH(X(I),Z,1,OK,FLAG)
	IF(FLAG==0) GOTO 503
	N=N+1
  503	CONTINUE
	IF((N>5).AND.(NUMBER(11)>1)) GOTO 300
	GOTO 100
 
* SELECT A NEW PHASE FOR THE CITY
  300	CONTINUE
* IF THERE ARE ENEMY ARMIES ON THE CONTINENT, PRODUCE ARMIES!
	IF(EDGE==8) GOTO 600
	DO 500 J=1,10
	IF(LOCI(J,2)==0) GOTO 500
	MOVE=PATH(X(I),LOCI(J,2),1,OK,FLAG)
	IF(FLAG==0) GOTO 500
	PHASE(I)=1
	GOTO 400
  500	CONTINUE
 
  504	PHASE(I)=2
	IF(EDGE>0) GOTO 501			!IF NOT LANDLOCKED
	IF(NUMBER(1)<=3*NUMBER(2)) PHASE(I)=1	!IF SMALL # OF ARMIES
	GOTO 400
 
  501	PHASE(I)=1
	N=0
	DO 502 J=QEARM+1,QEARM+LIMIT(9)
	Z=LOCS(J)
	IF((Z==0).OR.(IDIST(X(I),Z)>6)) GOTO 502
	IF(A(0,Z)=='5') GOTO 502		!IF ON TROOP TRANSPORT
	MOVE=PATH(X(I),Z,1,OK,FLAG)
	IF(FLAG==0) GOTO 502
	N=N+1
  502	CONTINUE
	IF(N<3) GOTO 400
	PHASE(I)=2
	IF(NUMBER(2)<NUMBER(9)/2) GOTO 400
	GOTO 600
 
* SELECT A SHIP, GUARANTEING AT LEAST TWO CITIES PRODUCING TROOP TRANSPORTS
  600	PHASE(I)=PH(8)
	DO 601 J=8,4,-1
  601	IF(NUMBER(J+10)>=NUMBER(J+9)) PHASE(I)=PH(J-1)
	IF(NUMBER(17)==0) PHASE(I)=12
	IF(NUMBER(15)<2) PHASE(I)=6
	GOTO 400
 
  400	IF((NUMBER(9)>1).AND.(NUMBER(15)==0).AND.(EDGE>0)) PHASE(I)=6
	IF(INT==PHASE(I)) GOTO 100
	FOUND(I)=MPHAZC*PHASE(I)+MDATE
	CALL CITYCT(OWNER,NUMBER,PHASE)
  100	CONTINUE
	RETURN
	END
	SUBROUTINE ENEMYM(OWN1,HITMAX,CRAHIT,CRALOC,NUM)
	INCLUDE 'COMMON.EMP/NOLIST'
	DIMENSION OK(5),NSHPRF(4,6)
	REAL AGGR
	REAL RAN,C1
	LOGICAL SENSE
	DATA OK/'.',' ','O','*','X'/
 
* NSHPRF IS AN ARRAY WHICH IS REFERENCED TO DETERMINE
* WHETHER A CERTAIN SHIP (D=1,S=2,R=3,B=4) WANTS TO ATTACK
* ANOTHER CERTAIN TYPE OF SHIP. 1 MEANS YES, 0 MEANS NO.
* SECOND VARIABLE: 1=D,2=S,3=T,4=R,5=C,6=B
	DATA (NSHPRF(1,J),J=1,6)/1,1,1,0,0,0/	!DESTROYER
	DATA (NSHPRF(2,J),J=1,6)/1,1,1,1,1,1/	!SUBMARINE
	DATA (NSHPRF(3,J),J=1,6)/1,0,1,1,1,0/	!CRUISER
	DATA (NSHPRF(4,J),J=1,6)/1,1,1,1,1,1/	!BATTLESHIP
 
*THE FOLLOWING NUMBERS ARE IFO VARIABLES RELATING TO
* CERTAIN TYPES OF MOVEMENT (CODES)
C 7: RANDOM DIRECTION
C 3: CITY TARGET LOC.
C 4: TT# ESCORT
C 5: TARGET
C 8: DAMAGED
C 10: LOOK AT UNEXPLORED TERRITORY
	IF(NUM==3) NUMSHP=1
	IF(NUM==4) NUMSHP=2
	IF(NUM==6) NUMSHP=3
	IF(NUM==8) NUMSHP=4
 
	NUMBER(NUM)=0
	MONKEY=0
 
	DO 1000 Y=1,LIMIT(NUM+8)
	Z6=LOCS(Y+CRALOC)
	IF(Z6==0) GOTO 1000
	DIR=MOD(Y,2)*2-1
	H1=H(Y+CRAHIT)
	AB=A(1,Z6)
	IF(AB=='X') H1=H1+1
	IF(H1>HITMAX) H1=HITMAX
	NM = 2				!Assume 2 moves per round
	IF (NUMSHP==1) NM = 3		!Destroyers are a little faster
	IF (H1 <= (HITMAX/2)) NM = NM/2	!Half speed if damaged
	DO 2500 ITURN=1,NM
	SENSE = .FALSE.
	Z7=Z6
 
C MOVE SELECTION
	IFO=IFORM(CODE(Y+CRALOC-QEBAS))
	ILA=ILATT(CODE(Y+CRALOC-QEBAS))
* DOES A NEW CODE NEED TO BE SELECTED? 804:YES, 800:NO
	IF((IFO==8).AND.(H1==HITMAX)) IFO=0
	IF(IFO==8) GOTO 800
	IF(H1==HITMAX) GOTO 801
	IFO=8
	ILA=IPORT(Z6)
	GOTO 800
  801	GOTO (804,2,3,4,5,804,804,804,804,10) IFO
	GOTO 804
 
    2	GOTO 804
 
    3	IF(A(1,ILA)=='X') GOTO 804
	IF(IDIST(Z6,ILA)==1) 804,800
 
    4	IF(LOCS(QETTR+ILA)==0) GOTO 804
	IF(CODE(QETTR-QEBAS+ILA)<70000) 804,800
 
    5	IF(ILA#Z6) GOTO 800
	DO 52 I1=1,6
	DO 52 I2=1,5
	IF(TROOPT(I1,I2)#ILA) GOTO 52
	TROOPT(I1,I2)=0
   52	CONTINUE
	GOTO 804
 
   10	IF(A(0,ILA)#' ') 804,800
 
C NEW CODE SELECTION
* 5:TARGET
  804	ID=500
	DO 900 N=1,6
	IF(NSHPRF(NUMSHP,N)==0) GOTO 900
	DO 900 N2=1,5
	IF(TROOPT(N,N2)==0) GOTO 900
	IF(IDIST(Z6,TROOPT(N,N2))>=ID) GOTO 900
	ID=IDIST(Z6,TROOPT(N,N2))
	ILA=TROOPT(N,N2)
	IFO=5
  900	CONTINUE
	IF(ID#500) GOTO 800
  803	IF(RAN(C1)>.40) GOTO 808
C 3:CITY TARGET LOC.
	IA=INT(RAN(C1)*20.+1.)
	IB=IA+70
	DO 809 IC=IA,IB
	I=IC
	IF(I>70) I=IC-70
	IF(TARGET(I)==0) GOTO 809
	IF(A(1,TARGET(I))#'O') GOTO 809
	IF(EDGER(TARGET(I))==0) GOTO 809
	IFO=3
	ILA=TARGET(I)
	GOTO 800
  809	CONTINUE
C 4:TT# ESCORT
  808	IA=INT(RAN(C1)*FLOAT(LIMIT(13))+1.)
	IB=ILA+LIMIT(13)
	DO 811 IC=IA,IB
	I=IC
	IF(I>LIMIT(13)) I=IC-LIMIT(13)
	IF(LOCS(QETTR+I)==0) GOTO 811
	IF(CODE(QETTR-QEBAS+I)<90000) GOTO 811
	IFO=4
	ILA=I
	GOTO 800
  811	CONTINUE
 
* 10: EXPLORE
  814	I1=EXPL(DUMMY)
	IF(I1==0) GOTO 813
	ILA=I1
	IFO=10
	GOTO 800
 
* 1: RANDOM DIRECTION
  813	IF(IFO==7) GOTO 800
	ILA=INT(RAN(C1)*8.+1.)
	IFO=7
 
* MOVE CORRECTION
  800	IF(IFO==7) MOOV=ILA
	FLAG=1
	IF((IFO==8).OR.(IFO==3).OR.(IFO==5))
     & MOOV=PATH(Z6,ILA,DIR,OK,FLAG)
	IF(IFO==4) MOOV=PATH(Z6,LOCS(QETTR+ILA),DIR,OK,FLAG)
	IF(FLAG==0) GOTO 814
	IF(IFO==10) MOOV=PATH(Z6,ILA,DIR,OK,FLAG)
	IF(FLAG==0) GOTO 813
	IF(IFO#2) GOTO 812
	MOOV=0
	IF(IDIST(Z6,ILA)>4) MOOV=MOV(Z6,ILA)
	IF(IDIST(Z6,ILA)<4) MOOV=ICORR(MOV(Z6,ILA)-4)
  812	AGGR=0
	IS1=1
	IF(OWN1=='4') IS1=2
	MOOV=MOOV*DIR
	MOOV=MOVCOR(IFO,ITURN,Z6,MOOV,H1,IS1,AGGR,OWN1,1.,DIR)
	IF((H1<HITMAX).AND.(A(1,Z6)=='X')) MOOV=0
	IF(IFO==7) ILA=IABS(MOOV)
	CODE(Y+CRALOC-QEBAS)=10000*IFO+ILA
	MOOV=IABS(MOOV)
 
C MOVE EVALUATION
	Z6=Z6+IARROW(MOOV)
	IF(D1(Z7)#'*') CALL CHANGE(Z7,D1(Z7),1)
	A1=A(1,Z6)
	IF(A1=='.') GOTO 500
	IF(A1=='X') GOTO 501
	IF((A1>='A').AND.(A1<='T')) GOTO 503
	TYPE 502,OWN1,Z6,A1
  502 FORMAT(' Enemy ',A1,' AT ',I4,' ran aground on ',A1)
	GOTO 600
  503 H2=30
	SENSE = .TRUE.
	OWN2=A1
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0) GOTO 600
  500 CALL CHANGE(Z6,OWN1,1)
501	LOCS(Y+CRALOC) = Z6
	CALL CHITS(Y+CRAHIT,H1)
	IF(ITURN==1) NUMBER(NUM)=NUMBER(NUM)+1
	MONKEY=Y
	GOTO 999
 
600	LOCS(Y+CRALOC) = 0		!Piece ran aground...
	CODE(Y+CRALOC-QEBAS)=0
	CALL CHITS(Y+CRAHIT,0)
  999 CALL SONAR(Z6)
	IF(SENSE) CALL SENSOR(Z6)
	IF (LOCS(Y+CRALOC) == 0) GOTO 1000	!Abort move if destroyed
 2500	CONTINUE
 1000	CONTINUE
	LIMIT(NUM+8)=MONKEY
	RETURN
	END
	SUBROUTINE FIGHTR
	INCLUDE 'COMMON.EMP/NOLIST'
	LOGICAL SENSE
	REAL RAN,C1
 
C IFO=7: CITY LOCATION
C IFO=6: CARRIER #
C IFO=5: TARGET LOCATION
C IFO=4: TARGET LOCATION, KAMIKAZE MISSION
C IFO=3: DIRECTIONAL
C IFO=2: DIRECTIONAL, KAMIKAZE MISSION
	MONKEY=0
	NUMBER(2)=0
	DO 1000 Y=1,LIMIT(10)
	DO 1001 I1=1,Z3
	Z6=LOCS(QEFIG+Y)
	IF(Z6==0) GOTO 1000
	MONKEY=Y
	SENSE = .FALSE.
	Z7=Z6
	AB=A[1,Z6]
	for ia_1 upto 6 do for ib_1 upto 5
	   do IF TROOPT[IA,IB] = Z6 then TROOPT[IA,IB]_0
	IF((AB#'2').AND.(AB#'X').AND.(AB#'7')) GOTO 500
	IF((AB=='X').OR.(AB=='7')) RANG(Y)=Z3*5
	IF(RANG(Y)#0) GOTO 499
	CALL CHANGE(Z6,D1(Z6),1)
	GOTO 500
 
C MOVE SELECTION
  499	IF(ILATT(CODE(Y+QEFIG-QEBAS))==Z6) GOTO 201
	IFO=IFORM(CODE(Y+QEFIG-QEBAS))
	ILA=ILATT(CODE(Y+QEFIG-QEBAS))
 
* DOES A NEW CODE NEED TO BE SELECTED? 201:YES, 300:NO
	GOTO (201,2,3,4,5,6,7) IFO
	GOTO 201
 
    2	IF(RAN(C1)<.05) ILA=ICORR(ILA+1)
	IF(RANG(Y)>=10) GOTO 300
	DO 21 I=1,70
   21	IF((X(I)#0).AND.(IDIST(Z6,X(I))<=RANG(Y))) GOTO 22
	GOTO 300
   22	IFO=7
	ILA=X(I)
	GOTO 300
 
    3	IF(RAN(C1)<.1) ILA=ICORR(ILA+1)
	IF(RANG(Y)<=11) 201,300
 
    4	IF(ILA==Z6) 201, 300
 
    5	IF((ILA==Z6).OR.(RANG(Y)<=11)) 201, 300
 
    6	IF(Z6==LOCS(ILA+QECAR)) GOTO 201	!IF LANDED
	IF(LOCS(ILA+QECAR)==0) GOTO 201	!IF CARRIER DOESN'T EXIST
	IF(IDIST(Z6,LOCS(ILA+QECAR))>RANG(Y)) GOTO 300	!IF OUT OF RANG
	GOTO 201
 
    7	IF(Z6==ILA) GOTO 201			!IF LANDED
	IF(IDIST(Z6,ILA)>RANG(Y)) GOTO 300	!IF OUT OF RANG
 
* NEW CODE SELECTION
  201	ID=0
	IF(AB=='2') GOTO 253	!IF FIGHTER IS AIRBORNE
	ID=0
	GOTO 700	!FIRST OF ALL, LOOK FOR TROOP TRANSPORTS & SUBS
  702	FUEL=RANG(Y)	!NO CHOICE BUT BE KAMIKAZE
	GOTO 703	!START LOOKING FOR ENEMY TROOP TRANS.
  700	FUEL=RANG(Y)/2	!DO THIS SO CRAFT CAN RETURN TO REFUEL
	IF(RAN(C1)<.05) FUEL=RANG(Y)	!1 IN 20 IS KAMIKAZE
  703	ISHIPT=3	!ENEMY TROOP TRANSPORTS
*.................................
* LOOK FOR ENEMY TROOP TRANSPORTS, THEN SUBMARINES
  706	DO 704 I=1,5
	IF(TROOPT(ISHIPT,I)==0) GOTO 704
	IF(IDIST(Z6,TROOPT(ISHIPT,I))>FUEL) GOTO 704	!OUT OF RANG
	IFO=5
	IF(FUEL==RANG(Y)) IFO=4
	ILA=TROOPT(ISHIPT,I)
	GOTO 300	!PROCEED TO MOVE CORRECTION
  704	CONTINUE
	IF(ISHIPT==2) GOTO 900	!IF ALREADY LOOKED FOR SUBS
	ISHIPT=2; GOTO 706	!NOW LOOK FOR SUBS
  900	IF(ID==1000) GOTO 707	!IF NO REFUELING SPOT WITHIN RANG
	IF(RAN(C1)<.33) GOTO 707	!LOOK FOR ENEMY CONCENTRATIONS
	IF(RAN(C1)<.5) GOTO 253	!MOVE TOWARDS CITY OR CARRIER
*.....................................
* MOVE IN A RANDOM DIRECTION
  701	IFO=3
	DIR=ICORR(DIR+1)
	ILA=DIR
	IF(RAN(C1)<.1) IFO=2	!ONE OUT OF 20 WILL BE KAMIKAZE
	IF(NUM2<=2) IFO=3
	GOTO 300		!PROCEED TO MOVE CORRECTION
*.........................................
* MOVE TOWARD AN ENEMY CONCENTRATION WITHIN RANG
  707	DO 705 I=1,10
	DO 705 J=2,11
	IF(LOCI(I,J)==0) GOTO 705
	IF(IDIST(Z6,LOCI(I,J))>FUEL) GOTO 705	!IF OUT OF RANG
	IFO=5
	IF(FUEL==RANG(Y)) IFO=4	!KAMIKAZE
	ILA=LOCI(I,J)
	GOTO 300		!PROCEED TO MOVE CORRECTION
  705	CONTINUE
	IF(ID==1000) GOTO 701	!IF NO CITY OR CARRIER IS WITHIN RANG
*..................................
* NOW MOVE TOWARDS A CITY CLOSEST TO ENEMY CONCENTRATION
  253	IA=MOD(Y,10)+1
	DO 254 IB=IA,IA+9
	I=IB
	IF(I>10) I=I-10
	IF(LOCI(I,2)==0) GOTO 254
	LOC=LOCI(I,2)
	ID=IDIST(Z6,LOCI(I,2))
	GOTO 800
  254	CONTINUE
	LOC=EXPL(DUMMY)
  800	ID=1000
	IGARBG=INT(RAN(C1)*FLOAT(70+LIMIT(15))+1.)
	DO 255 ILOOP=IGARBG,IGARBG+70+LIMIT(15)
	IA=ILOOP
	IF(IA>70+LIMIT(15)) IA=IA-70-LIMIT(15)
	IF(IA>70) GOTO 256
	IF((OWNER(IA)#2).OR.(IDIST(Z6,X(IA))>RANG(Y))) GOTO 255
	IF(IDIST(X(IA),LOC)>=ID) GOTO 255
	IFO=7
	ILA=X(IA)
	ID=IDIST(X(IA),LOC)
	GOTO 255
  256	IB=IA-70
	IF(LOCS(QECAR+IB)==0) GOTO 255
	IF(IDIST(Z6,LOCS(QECAR+IB))>RANG(Y)) GOTO 255
	IF(IDIST(LOCS(QECAR+IB),LOC)>=ID) GOTO 255
	IF((RANG(Y)==20).AND.(IDIST(Z6,LOCS(QECAR+IB))>12)
     &.AND.(MOD(IFORM(CODE(QECAR-QEBAS+IB)),10)#9)) GOTO 255
	IFO=6
	ILA=IB
	ID=IDIST(LOCS(QECAR+IB),LOC)
  255	CONTINUE
	IF(ID==1000) GOTO 702
	GOTO 300
*..................................
* MOVE CORRECTION
  300	IZOT=0
	MOOV=0
	IF(ILA>100) IZOT=MOV(Z6,ILA)
	IF(ILA<10) IZOT=ILA
	IF(IFO==6) IZOT=MOV(Z6,LOCS(QECAR+ILA))
	IF((IFO<4).AND.(RAN(C1)<.05)) IZOT=ICORR(IZOT+1)
	DO 301 I=1,8
	AC=A(1,Z6+IARROW(I))
	IF((AC#'D').AND.(AC#'S').AND.(AC#'T')
     &.AND.(AC#'F').AND.(AC#'A')) GOTO 301
	MOOV=I
	GOTO 400
  301	CONTINUE
 
** LOOK FOR TERRITORY TO EXPLOR IN FRONT
	IF (RANG(Y)<=10) GOTO 303		!IF LOW ON FUEL
	IZOT2=IZOT				!STORE IZOT A MOMENT
	Z62=Z6+IARROW(ICORR(IZOT2+1))
	IF(ORDER(Z62)#0) GOTO 304		!IF ON THE EDGE OF THE MAP
	IF(A(0,Z62)==' ') IZOT=ICORR(IZOT2+1)	!IF Z62 IS UNEXPLORED
  304	Z62=Z6+IARROW(ICORR(IZOT2-1))		!TRY OTHER SIDE
	IF(ORDER(Z62)#0) GOTO 303		!IF ON THE EDGE OF THE MAP
	IF(A(0,Z62)==' ') IZOT=ICORR(IZOT2-1)	!IF Z62 IS UNEXPLORED
 
  303	DESTIN=ILA
	IF(IFO==6) DESTIN=LOCS(QECAR+ILA)
	ID=IZOT
	DO 302 I=0,7
	IZOT=ICORR(ID+I)
	NEWLOC=Z6+IARROW(IZOT)
	IF((IFO>3).AND.(IDIST(Z6,DESTIN)<=IDIST(NEWLOC,DESTIN)))
     & GOTO 302
	AC=A(1,NEWLOC)
	IF((((AC>='A').AND.(AC<='T')).OR.(AC=='X').OR.(AC=='.').OR.
     &(AC=='7').OR.(AC=='+')).AND.(ORDER(NEWLOC)==0))GOTO400
  302	CONTINUE
	IZOT=0
  400	CODE(QEFIG-QEBAS+Y)=10000*IFO+ILA
	IF(IFO<4) CODE(QEFIG-QEBAS+Y)=10000*IFO+IZOT
	IF(MOOV#0) IZOT=MOOV
	Z6=Z6+IARROW(IZOT)
 
C MOVE EVALUATION
	IF(AB=='2') CALL CHANGE(Z7,D1(Z7),1)
	AB=A(1,Z6)
	IF((AB=='.').OR.(AB=='+')) GOTO 600
	IF((AB=='X').OR.(AB=='7')) GOTO 601
	IF(D1(Z6)=='*') GOTO 500
	H2=30
	SENSE = .TRUE.
	H1=1
	OWN1='2'
	OWN2=AB
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0) GOTO 500
  600 CALL CHANGE(Z6,'2',1)
  601 RANG(Y)=RANG(Y)-1
	IF(I1==1) NUMBER(2)=NUMBER(2)+1
	LOCS(QEFIG+Y) = Z6
	CALL SONAR(Z6)
	IF(SENSE) CALL SENSOR(Z6)
	GOTO 1001
 
500	LOCS(QEFIG+Y) = 0		!Fighter was shot down in battle
	CALL SONAR(Z6)
	IF(SENSE) CALL SENSOR(Z6)
	GOTO 1000
 1001	CONTINUE
 1000	CONTINUE
	RETURN
	END
	FUNCTION MOVCOR(IFO,ITURN,Z6,MOVE,IH1,IS1,AGGR,OWN1,EXPLOR,DIR)
	INCLUDE 'COMMON.EMP/NOLIST'
	REAL BLAH,AGGR,EXPLOR
	REAL RAN,C1
 
* CHECK FOR IMPOSSIBLE CONDITION FOR MOVE
	IF((.NOT.PASS).OR.(IABS(MOVE)<=8)) GOTO 502
	CALL CLEAR
	TYPE 4034,OWN1,Z6,MOVE,IFO
 4034	FORMAT(1X,A1,' @ ',I4,' attempted ',G,' with IFO ',I4)
 
  502	MOVE=IABS(MOVE)
 
	IF(ITURN==1) BLAH=0.
	IF(BLAH<0.) MOVE=ICORR(I2+INT(RAN(C1)*3.)-1)
 
* CHECK FOR SOMETHING TO ATTACK, OR, SOMETHING TO RUN FROM
* BLAH<0: RUN
* BLAH>=0: ATTACK
	DO 100 IX=1,8
	I1=IX
	LOC=Z6+IARROW(I1)
	AB=A(1,LOC)
	IF(D1(LOC)#'.') GOTO 100
	IF((AB<'B').OR.(AB>'T')) GOTO 100	!IF SHIP OR PLANE, INVESTIGATE
	BLAH=ATTACK(OWN1,AB,IH1,AGGR)
	IF(BLAH>=0.) GOTO 402			!ATTACK IT
	GOTO 300				!RUN FROM IT
  100	CONTINUE
	I1=0				!NOTHING OF INTEREST HERE
	GOTO 400
 
* SELECT AN APPROPRIATE ESCAPE MOVE
  300	IS=INT(RAN(C1)*3.)
	DO 301 IN=1,8
	I2=IN
	IF((IS==0).OR.(IN>3)) GOTO 501
	IF(IS#1) GOTO 500
	IF(IN==1) I2=2
	IF(IN==2) I2=3
	IF(IN==3) I2=1
	GOTO 501
  500	IF(IN==1) I2=3
	IF(IN==2) I2=1
	IF(IN==3) I2=2
  501	I=IARROW(ISCAPE(I2,I1))+Z6
	IF((A(1,I)=='.').AND.(ORDER(I)==0)) GOTO 350
  301 CONTINUE
	I1=0
	GOTO 400
  350	I1=ISCAPE(I2,I1)
	IF(D1(I)#'.') CALL STROUT('ISCAPE error',1)
	GOTO 402
 
  400	IF(EXPLOR==0.) GOTO 405
	EXPMAX=0
	DO 404 IX=MOVE,MOVE+7
	I1=ICORR(IX)
	LOC1=Z6+IARROW(I1)
	IF(ORDER(LOC1)#0) GOTO 404
	IF(A(1,LOC1)#'.') GOTO 404
	NEXP=0
	IF(A(0,LOC1+IARROW(I1))==' ') NEXP=1
	IF(A(0,LOC1+IARROW(ICORR(I1-1)))==' ') NEXP=NEXP+1
	IF(A(0,LOC1+IARROW(ICORR(I1+1)))==' ') NEXP=NEXP+1
	IF(A(0,LOC1+IARROW(ICORR(I1+2)))==' ') NEXP=NEXP+1
	IF(A(0,LOC1+IARROW(ICORR(I1-2)))==' ') NEXP=NEXP+1
	IF(NEXP==5) GOTO 402
	IF(NEXP<=EXPMAX) GOTO 404
	EXPMAX=NEXP
	I11=I1
  404	CONTINUE
	I1=0
	IF(EXPMAX==0) GOTO 405
	I1=I11
	IF(D1(Z6+IARROW(I1))#'.') CALL STROUT('EXPLOR error',1)
	GOTO 402
  405	I2=MOVE
	LOC1=Z6+IARROW(MOVE)
	AB=A(1,LOC1)
	IF((AB=='.').AND.(ORDER(LOC1)==0)) GOTO 402
	M=MOVE
	IA=ICORR(M-DIR*3)
	IF(A(1,Z6+IARROW(IA))#'.') M=IA
	DO 401 I=0,7*DIR,DIR
	I2=ICORR(M+I)
	I3=Z6+IARROW(I2)
  401 IF((A(1,I3)=='.').AND.(ORDER(I3)==0)) GOTO 402
	I2=0
  402 IF(I1#0) I2=I1
	IF(((OWN1=='5').AND.(IFO#8)).OR.
     &(A(1,Z6+IARROW(MOVE))#'X')) MOVE=I2
	MOVCOR=MOVE
	IF(D1(Z6+IARROW(MOVE))=='+')CALL STROUT('ahem,ahem',1)
	RETURN
	END
	INTEGER FUNCTION PRIORI(Z6,IFO,ILA,DIR,AC)
	INCLUDE 'COMMON.EMP/NOLIST'
	DIMENSION PRIOR(7)
 
	CALL SET(PRIOR,7,0)
	EXPMAX=0
 
* NOW MAKE A GUESS AS TO WHAT THE MOVE WILL BE
	MOVE1=ILA
	IF(IFO#0) MOVE1=MOV(Z6,ILA)
	IF(IFO==3) MOVE1=MOV(Z6,LOCS(QETTR+ILA))
 
* NOW SEE IF ANY PRIORITY MOVES EXIST
	DO 100 I=0,7*DIR,DIR
	MOVE=ICORR(MOVE1+I)
	LOC=Z6+IARROW(MOVE)
	IF(ORDER(LOC)#0) GOTO 100
	AB=A(1,LOC)
 
* CHECK IF ARMY CAN ATTACK SOMETHING OVER WATER
	GROUND=D1(LOC)
	OK='YES'
	IF((AC=='5').AND.(GROUND=='.')) OK='NO'
 
	IF(AB=='O') PRIOR(1)=MOVE
	IF((AB=='T').AND.(OK=='YES')) PRIOR(3)=MOVE
	IF(AB=='*') PRIOR(2)=MOVE
	IF(AB=='A') PRIOR(5)=MOVE
	IF((AB=='S').AND.(OK=='YES')) PRIOR(6)=MOVE
	IF((IFO==0).AND.(AB>='A').AND.(AB<='T').AND.(OK=='YES'))
     & PRIOR(7)=MOVE
 
	IF(GROUND#'+') GOTO 100
	N=0
	IF(A(0,LOC+IARROW(ICORR(MOVE-2)))==' ') N=1
	IF(A(0,LOC+IARROW(ICORR(MOVE-1)))==' ') N=N+1
	IF(A(0,LOC+IARROW(MOVE))==' ') N=N+1
	IF(A(0,LOC+IARROW(ICORR(MOVE+1)))==' ') N=N+1
	IF(A(0,LOC+IARROW(ICORR(MOVE+2)))==' ') N=N+1
	IF(N<=EXPMAX) GOTO 100
	PRIOR(4)=MOVE
	EXPMAX=N
  100	CONTINUE
 
* NOW SELECT THE HIGHEST PRIORITY MOVE
	DO 200 I=1,7
  200	IF(PRIOR(I)#0) GOTO 300
	PRIORI=0
	RETURN
  300	PRIORI=PRIOR(I)
	RETURN
	END
	SUBROUTINE TROOPM(DUMMY)
	INCLUDE 'COMMON.EMP/NOLIST'
	REAL EXPLOR,AGGR
	REAL RAN,C1
	DIMENSION OK(5)
	LOGICAL SENSE
	DATA OK/'.',' ','O','*','X'/
* THIS SUBROUTINE HANDLES ENEMY TROOP TRANSPORT MOVES
 
	MONKEY=0
	NUMBER(5)=0
 
	DO 3200 Y=1,LIMIT(13)
	Z6=LOCS(QETTR+Y)
	IF(Z6==0) GOTO 3200
	MONKEY=Y
	DIR=MOD(Y,2)*2-1		!SET DIR TO 1 OR -1 CONSISTENTLY
	AB=A(1,Z6)
	H1=H(QEHTTR+Y)
	IF(AB=='X') H1=H1+1
	IF(H1>3)    H1=3
 
* NOW COMPUTE THE NUMBER OF ARMIES ABOARD THE TROOP TRANSPORT
	NUMARM=0
	DO 6003 I=1,LIMIT(9)
 6003	IF(Z6==LOCS(QEARM+I)) NUMARM=NUMARM+1
	IF(NUMARM>6) NUMARM=6		!6 IS MAX. # OF ARMIES ALLOWED
 
	DO 3195 ITURN=1,2
	SENSE = .FALSE.
	Z7=Z6
	AB=A(1,Z6)
	IF((ITURN==2).AND.(H1<=1)) GOTO 3200
C MOVE SELECTION
	IFO=IFORM(CODE(Y+QETTR-QEBAS))
	ILA=ILATT(CODE(Y+QETTR-QEBAS))
 
! 6000 IS THE STATEMENT # WHERE THE IFO AND ILA ARE
! PROCESSED TO COME UP WITH A MOVE, WHICH IS THEN FED THRU MOVCOR
! TO COME UP WITH A FINAL MOVE.
 
* TAKE CARE OF DAMAGED SHIPS OR JUST REPAIRED SHIPS.
* (DAMAGED SHIPS WILL HAVE AN IFO OF 8)
 
	IF(H1<3) GOTO 5998
	IF(IFO==8) IFO=0
	GOTO 6000
 5998	IFO=8
	IF((ILA==0).OR.(A(1,ILA)#'X')) ILA=IPORT(Z6)
	GOTO 3175
 
! IFO=10: MOVE TOWARD UNEXPLORED TERRITORY, LOCATION SPECIFIED BY ILA
! IFO=7: MOVE IN A CONSTANT DIRECTION SPECIFIED BY ILA
! IFO=9: MOVE TOWARD AN UNOWNED CITY SPECIFIED BY ILA
! IFO=0-6: ILA SPECIFIES LOCATION OF WHERE TO MOVE, EITHER
!	AN ARMY PRODUCING CITY OR AN ARMY LOOKING FOR A '5'.
!	IT COULD ALSO BE A DIRECTION. IFO IS THE # OF ARMIES ON
!	BOARD THE TROOP TRANSPORT.
 
 6000	IF(IFO<7) IFO=NUMARM
	IF(NUMARM==0) IFO=0
	IF((IFO==10).AND.(A(0,ILA)#' ')) GOTO 6020
	IF(IFO==10) GOTO 3175
	IF(IFO==7) GOTO 3173
	IF(IFO#9) GOTO 6300
 
* IFO=9
	DO 6009 I=1,70
 6009	IF(TARGET(I)==ILA) GOTO 3175
	IF((IDIST(Z6,ILA)<10).AND.(EDGER(ILA)<8)) GOTO 3175
!	IT SEEMS THAT IT'S TARGET IS NO LONGER ON THE HIT LIST,
!	MEANING IT WAS CAPTURED.
 
 6300	IF(IFO<=2) GOTO 6301
	IF(RAN(C1)<.2) GOTO 6020	!MOVE TOWARDS UNKNOWN TERRITORY
	GOTO 6011			!SELECT A TARGET
 
* SELECT AN ARMY PRODUCING CITY AND MOVE TOWARDS IT.
* PICK THE CLOSEST ONE.
 6301	IF((ILA<=500).AND.(LOCS(QEARM+ILA)#0)) GOTO 6002
	ID=500
	DO 6006 I=1,70
	IF((X(I)==0).OR.(OWNER(I)#2).OR.(PHASE(I)#1)) GOTO 6006
	IF(IDIST(Z6,X(I))>=ID) GOTO 6006
	I1=I
	ID=IDIST(Z6,X(I1))
	ILA=X(I1)
 6006	CONTINUE
	IF(ID#500) GOTO 3175
 
* SELECT A RANDOM TARGET CITY
 6011	IFO=9
	IA=INT(RAN(C1)*20.+1.)
	IB=IA+70
	DO 6007 IC=IA,IB
	I=IC
	IF(I>70) I=I-70
	IF(TARGET(I)==0) GOTO 6007
	ILA=TARGET(I)
	IF(EDGER(ILA)==0) GOTO 6007		!IF SURROUNDED BY LAND
	CALL DIST(Z6,ILA)
	GOTO 3175
 6007	CONTINUE
 
* MOVE TOWARDS UNKNOWN TERRITORY
 6020	IFO=10
	ILA=EXPL(DUMMY)
	IF(ILA==0) GOTO 6010
	CALL DIST(Z6,ILA)
	GOTO 3175
 
* MOVE IN SPECIFIED DIRECTION (ILA SPECIFIES WHICH)
 6010	IFO=7
	ILA=INT(RAN(C1)*8.+1.)
	GOTO 3173
 
* NOW PICK A MOVE ACCORDING TO IFO AND ILA
 6002	MOVE=0
	IF(IDIST(Z6,LOCS(QEARM+ILA))==1) GOTO 3176
	MOVE=MOV(Z6,LOCS(QEARM+ILA))
	GOTO 3174
 3175	MOVE=PATH(Z6,ILA,DIR,OK,FLAG)
	IF(FLAG==0) GOTO 6010
	GOTO 3174
 3173	MOVE=ILA
 3174	AGGR=FLOAT(-NUMARM)
	IF((NUMBER(5)>10).AND.(NUMARM==0)) AGGR=AGGR+2.
	EXPLOR=0.
	IF(IFO>6) EXPLOR=1.
	MOVE=MOVE*DIR
	MOVE=MOVCOR(IFO,ITURN,Z6,MOVE,H1,1,AGGR,'5',EXPLOR,DIR)
	MOVE=IABS(MOVE)
	IF(IFO==7) ILA=MOVE
 3176	CODE(QETTR-QEBAS+Y)=10000*IFO+ILA
	Z6=Z6+IARROW(MOVE)
 
	IF(D1(Z7)#'*') CALL CHANGE(Z7,D1(Z7),1)
	IF(A(1,Z6)=='.') GOTO 3201
	IF(A(1,Z6)=='X') GOTO 3202
	IF((A(1,Z6)=='+').OR.(D1(Z6)=='*')) GOTO 3203
	AB=A(1,Z6)
	SENSE = .TRUE.
	H2=30
	OWN1='5'
	OWN2=A(1,Z6)
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0) GOTO 3203
	IF(D1(Z6)=='+') GOTO 3203
	CALL CHITS(QEHTTR+Y,H1)
 3201 CALL CHANGE(Z6,'5',1)
3202	LOCS(QETTR+Y) = Z6
	IF(ITURN==1) NUMBER(5)=NUMBER(5)+1
	GOTO 3204
 
3203	LOCS(QETTR+Y) = 0		!Fell in battle (or ran aground)
	CALL CHITS(QEHTTR+Y,0)
 3204	N=0
	IF(SENSE) CALL SENSOR(Z6)
	DO 3205 U=QEARM+1,QEARM+LIMIT(9)
	IF(LOCS(U)#Z7) GOTO 3205
	N=N+1
	LOCS(U) = Z6			!Armies move with the transport
	IF (N>H1*2) LOCS(U) = 0		!Sink an army if overloaded
	IF(NUMARM>2*H1) NUMARM=2*H1
 3205	CONTINUE
	CALL SONAR(Z6)
 3195	CONTINUE
 3200	CONTINUE
	LIMIT(13)=MONKEY
	RETURN
	END
	SUBROUTINE ARMYMV
* THIS SUBROUTINE HANDLES USER ARMY MOVES
 
	INCLUDE 'COMMON.EMP/NOLIST'
	REAL RAN,C1
	LOGICAL POSCHK
 
	ITURN=1
	DO 1002 Y=1,LIMIT(1)
	Z6=LOCS(Y)
	IF(Z6==0) GOTO 1002
!Loop here for each move for this army.
100	IF (MOVES(Y+QARM) <= 0) GOTO 1002
	IF((MODE==1).AND.(.NOT. POSCHK(Z6))) GOTO 1002
	MOVES(Y+QARM) = MOVES(Y+QARM) - 1
	Z7=Z6
	AB=A(1,Z6)
	IF((STATUS(Y)#0).AND.(AB=='O')) GOTO 1050
	IF((AB=='A').OR.(AB=='T').OR.(AB=='O')) GOTO 1081
 1050	CALL CURSOR(200)
	CALL STROUT('Army #',10); CALL DECPRT(Y)
	CALL STROUT(' Destroyed.',1)
	LOCS(Y) = 0			!Kill army, e.g. on docked transport
	MOVES(Y+QARM) = 0
	GOTO 1002
 
 1081	IF(AB#'T') GOTO 1069
	DO 1300 I=1,8
 1300	IF(D1(Z6+IARROW(I))#'.') GOTO 1069
	GOTO 1002			!Army is on seabound transport, ignore
 
 1069	IF(STATUS(Y)==0) GOTO 1083	!Any special state?
	IF(STATUS(Y)#100) GOTO 1084	!Yes, random motion?
	Z6=Z6+IARROW(JIGGLE(Z6,Y))	!Yes, do it
	GOTO 1085
 
 1084	CALL STASIS(Z6,Y)		!Awaken piece if enemy near
6314	IF(STATUS(Y)==0) GOTO 1083	!Regular move if piece now awake
	IF((STATUS(Y)<100).OR.(STATUS(Y)>6108)) GOTO 1003  !Sentry duty
	IF(STATUS(Y)>6100) GOTO 1086	!Directional stasis
	IF(STATUS(Y)<=6000) GOTO 1089	!Move to specified place
	GOTO 1003			!?? assume sentry duty
 
 1089	Z6=Z6+IARROW(MOV(Z6,STATUS(Y)))
	GOTO 1087
 
 1086	Z6=Z6+IARROW(STATUS(Y)-6100)
 1087	AD=A(1,Z6)
	IF(((AD=='+').OR.(AD=='T')).AND.(ORDER(Z6)==0))GOTO 1085
	Z6=Z7
	CALL SECTOR(2)
	CALL STSOUT(STATUS(Y))
! Here for regular army move.
 1083	CALL SECTOR(2)
	CALL HEAD('A',Y,Z6)
	CALL LTR(Z6,ITURN)
 1640	CALL MVE('A',Y,1,Z6,Z7,DISAS,Z6-IADJST)
	CALL CURSOR(100) ; CALL STROUT('',1)
	IF(DISAS==-2) GOTO 6314		!JUST PUT INTO STASIS
 
 
* MOVE EVALUATION
 1085	IF((A(1,Z7)#'T').AND.(D1(Z7)#'*')) CALL CHANGE(Z7,D1(Z7),1)
	IF (Z6 == STATUS(Y)) STATUS(Y) = 0  !Wake up if reached destination
	AC=A(1,Z6)
	IF(AC=='T') GOTO 1006
	IF(DISAS==1)GOTO1001
	IF((A(1,Z7)#'T').OR.(D1(Z6)#'.')) GOTO 1007
	CALL CURSOR(100)
	CALL STROUT('You are incapable of attack while
     & on a transport.',1)
	CALL STROUT('Your army jumped into the briny and drowned.',1)
	GOTO 1001
 1007	IF((AC#'.').AND.(AC#'+')) GOTO 1004
	IF(AC#'.') GOTO 1010
	CALL CURSOR(100)
	CALL STROUT('Your army marched dutifully into the
     & sea and drowned.',1)
	GOTO 1001
 
 1010	CALL CHANGE(Z6,'A',1)
1006	LOCS(Y) = Z6
	GOTO 1003
 
1004	H1=1
	IF(D1(Z6)#'*') GOTO 1039
	DO 1200 IY=1,70
	IF(X(IY)#Z6) GOTO 1200
	IF(OWNER(IY)#1) GOTO 1070
	CALL CHANGE(Z6,'O',1)
	CALL CURSOR(100)
	CALL STROUT('Bastardo! You attacked your own city! Your',1)
	CALL STROUT('impertinent attacking army was liquidated.',1)
	GOTO 1001
 1070	IF(RAN(C1)<.5) GOTO 1071
	CALL CURSOR(100)
	CALL STROUT('Not vicious enough. The inhabitants have',1)
	CALL STROUT('vaporized your faltering army.',1)
	GOTO 1200
 1071	CALL CURSOR(0)
	CALL STROUT('City #',10); CALL DECPRT(IY)
	CALL STROUT(' has been subjugated!',1)
	CALL STROUT('The leaders of the resistance have been executed.',1)
	CALL STROUT('The army has been dispersed to enforce iron control
     +	.',1)
	CALL CHANGE(Z6,'O',1)
	PHASE(IY)=0
	N = OWNER(IY)
	OWNER(IY) = 1			!City is now ours
	IF (N # 2) GOTO 1200
	CALL SONAR(Z6)			!Enemy stronghold was captured
	DO 5944 I=1,70
	IF(TARGET(I)==Z6) GOTO 1200
	IF(TARGET(I)#0) GOTO 5944
	TARGET(I)=Z6			!Put on the hit list to get it back
	GOTO 1200
 5944	CONTINUE
 
 1200	CONTINUE
	GOTO 1001
 1039 OWN1='A'
	OWN2=AC
	H1=1
	H2=30
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0)GOTO1001
	AC = D1(Z6)			!Check base map at new army position
	IF (AC == '+') AC = 'A'		!If still land, keep army
	CALL CHANGE(Z6,AC,1)		!Change ref map
	IF((OWN2>='1').AND.(OWN2<='8')) CALL SONAR(Z6)
	IF (AC # 'A') GOTO 1007
	LOCS(Y) = Z6
	GOTO 1003
 
1001	LOCS(Y) = 0			!Player's army lost, kill it
	STATUS(Y) = 0
	MOVES(Y+QARM) = 0
 1003	IF(DISAS#1) CALL SENSOR(Z6)
	IF(DISAS==1) CALL SENSOR(Z7)
	GO TO 100		!Move again if moves left (there aren't)
 
 1002	CONTINUE
	RETURN
	END
	SUBROUTINE BLOCK(II)
	DOUBLE PRECISION TTY
	INTEGER ROW
	COMMON/MODE/MODE,JECTOR ,ISEC
	COMMON/G2/G2(100)
	ISEC=-1
	CALL CLEAR
	JECTOR=-1
	CALL STROUT(' Output file:',12)
	ACCEPT 601,TTY
! 601	FORMAT(U10)
  601	FORMAT(A10)
	CALL CLEAR
	IF(TTY=='') TTY='TTY'
	OPEN(UNIT=2,DEVICE=TTY,ACCESS='SEQOUT')
	DO 300 J=0,5900,100
	DO 400 K=100,1,-1
	AB=A(II,K+J)
  400	IF(AB#' ') GOTO 401
	GOTO 300
  401	DO 404 L=1,K
  404	G2(L)=A(II,J+L)
	WRITE(2,403) (G2(L),L=1,K)
  403	FORMAT(1X,100A1)
  300	CONTINUE
	CLOSE(UNIT=2)
	RETURN
	END
	SUBROUTINE FGHT(Z6,H1,H2,OWN1,OWN2)
	INCLUDE 'COMMON.EMP/NOLIST'
	INCLUDE 'COMJCH.EMP/NOLIST'
	REAL RAN,C1
 
!Fight a battle at Z6. H1 and H2 are the hits left for pieces
!OWN1 and OWN2. 1 is the attacker, 2 is the defender.
 
	REAL ODDS		!Attacker's hit if less than this
	ODDS = CODDS		!Assume player is attacking
	IF((OWN2<'A').OR.(OWN2>'T')) GOTO 200
	IF(MODE==1) CALL CURSOR(100)	!Computer is attacking, give message
	CALL IDEN(OWN2)
	CALL STROUT('is under attack at',10)
	CALL DECPRT(Z6)
	CALL STROUT('.',1)
	ODDS = 1. - CODDS
  200	CALL CURSOR(200)
	S1=1				!Normally one hit per exchange
	S2=1				! except subs fire torpedos
	IF((OWN1=='S').OR.(OWN1=='4')) S1=3
	IF((OWN2=='S').OR.(OWN2=='4')) S2=3
	IF(H2==0) GOTO 700
! Roll the dice and award a hit to someone.
702	IF (RAN(C1) <= ODDS) GOTO 700	!Jump if attacker's hit
	H1=H1-S2			!The defender got a hit in
	H=H2
	IF(H1>0) GOTO702		!Another round if attacker's still alive
	OWN=OWN1
	CALL IDEN(OWN)
	OWN=OWN2
	CALL STROUT('destroyed,',10)
	GOTO 799
700	H2 = H2 - S1			!The attacker got the hit
	H=H1
	IF(H2>0) GOTO702
	OWN=OWN2
	CALL IDEN(OWN)
	OWN=OWN1
	CALL STROUT('destroyed,',10)
  799	CALL IDEN(OWN)
	CALL STROUT('has',10)
	CALL DECPRT(H)
	CALL STROUT(' hits left.',2)
	IF(MODE==0) CALL STROUT('',1)
	CALL SLEEP(750)
	RETURN
	END
	SUBROUTINE FIGHMV
	INCLUDE 'COMMON.EMP/NOLIST'
 
	DO 2001 Y=1,LIMIT(2)
	LOC=QFIG+Y
	Z6=LOCS(LOC)
	IF(Z6==0) GOTO 2001
!Loop here to move this fighter.
100	IF (MOVES(LOC) <= 0) GOTO 2001
	IF((MODE==1).AND.(.NOT. POSCHK(Z6))) GOTO 2001
	MOVES(LOC) = MOVES(LOC) - 1
	AB=A(1,Z6)
 
* NOW CHECK TO SEE IF FIGHTER IS IN A CITY; IF IT IS CHANGE THE
* STASIS # OF THE FIGHTER TO THAT SPECIFIED BY FIPATH(I)
	IF(AB#'O') GOTO 2100		!IF FIGHTER NOT IN CITY
	DO 2101 I=1,70
 2101	IF(X(I)==Z6) GOTO 2102		!FIND CITY # OF CITY AT Z6
2102	STATUS(LOC) = FIPATH(I)		!Give fighter new directions
 
*     CHECK FOR FI DESTROYED ALONG WITH CARRIER
 2100	IF((AB=='C').OR.(AB=='F').OR.(AB=='O')) GOTO 2018
	CALL CURSOR(100)
	CALL STROUT('Fighter #',0); CALL DECPRT(Y)
	CALL STROUT(' destroyed.',1)
	GOTO 2009
 2018	Z7=Z6
	CALL STASIS(Z6,LOC)
 3000	IF(RANGE(Y)==0) GOTO 2048
	IF(STATUS(LOC)==0) GOTO 2540
	IF((STATUS(LOC)<101).OR.(STATUS(LOC)>6108)) GOTO 2041
	IF(STATUS(LOC)<=6000) GOTO 2042
	IF(STATUS(LOC)>6100) GOTO 2043
	GOTO 2041
 2042	Z6=Z6+IARROW(MOV(Z6,STATUS(LOC)))
	IF (Z6 == STATUS(LOC)) STATUS(LOC)=0	!Arrived at destination
	GOTO 2045
 2043	Z6=Z6+IARROW(STATUS(LOC)-6100)
 2045	AD=A(1,Z6)
	IF(ORDER(Z6)#0) GOTO 2046
	IF(RANGE(Y)==10) GOTO 2046
	IF((AD=='C').OR.(AD=='O')) GOTO 2041
	IF((AD=='+').OR.(AD=='.')) GOTO 2041
 2046	Z6=Z7
	CALL SECTOR(2)
	CALL STSOUT(STATUS(LOC))
 2540	CALL SECTOR(2)
	CALL LTR(Z6,1)
 2048	CALL HEAD('F',Y,Z6)
	CALL CURSOR(40)
	CALL STROUT('Range:',0)
	CALL DECPRT(RANGE(Y))
	CALL EOL
	IF(RANGE(Y)>0) GOTO 2011
	CALL CURSOR(100)
	CALL STROUT('Ran out of fuel and crashed.',1)
	IF((AB#'C').AND.(D1(Z6)#'*')) CALL CHANGE(Z6,D1(Z6),1)
	GOTO 2009
 2011	CALL MVE('F',LOC,1,Z6,Z7,DISAS,Z6-IADJST)
	CALL CURSOR(100) ; CALL STROUT('',1)
	IF(DISAS==-2) GOTO 3000
 
 
* MOVE EVALUATION
 
 2041	AC=A(1,Z6)
	RANGE(Y)=RANGE(Y)-1
	IF((AC=='O').OR.(AC=='C')) RANGE(Y)=20
	IF (Z7 == Z6) GOTO 2020		!Quit if fighter didn't move
	IF((AB#'C').AND.(D1(Z7)#'*')) CALL CHANGE(Z7,D1(Z7),1)
	IF(AC=='C') GOTO 2014
	IF(DISAS==1) GOTO 2009
	IF((AC#'.').AND.(AC#'+'))GOTO2004
	LOCS(LOC) = Z6
	CALL CHANGE(Z6,'F',1)
	GOTO 2010
 
 2004	IF(D1(Z6)#'*') GOTO 2005
	IF(AC#'O') GOTO 2006
 2014	CALL CURSOR(100)
	IF(STATUS(LOC)==0) CALL STROUT('Landing confirmed.',1)
	LOCS(LOC) = Z6
	GOTO2020
 2006	CALL CURSOR(100)
	CALL STROUT('Fighter shot down.',1)
2009	LOCS(LOC) = 0			!Fighter is dead
	GOTO2020
 
2005	H1 = 1
	OWN1='F'
	OWN2=AC
	H2=30
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0)GOTO2009
	LOCS(LOC) = Z6
	CALL CHANGE(Z6,'F',1)
	IF((OWN2>='1').AND.(OWN2<='8')) CALL SONAR(Z6)
 2010	CALL SENSOR(Z6)
	GO TO 100			!Try for another turn
 
 2020	IF(DISAS#1) CALL SENSOR(Z6)
	IF(DISAS==1) CALL SENSOR(Z7)
	MOVES(LOC) = 0			!Done with fighter, one way or another
 2001	CONTINUE
	RETURN
	END
	SUBROUTINE MVE(OWN1,NUM,N2,Z6,Z7,DISAS,JURSOR)
	INCLUDE 'COMMON.EMP/NOLIST'
	INCLUDE 'COMJCH.EMP/NOLIST'
	DIMENSION KBTBL(9),DIRTBL(9),KBFUDG(9),COMMAN(20)
	DATA KBTBL/'Q','W','E','A','D','Z','X','C',' '/
	DATA DIRTBL/6104,6103,6102,6105,6101,6106,6107,6108,0/
	DATA KBFUDG/-101,-100,-99,-1,1,99,100,101,0/
	DATA COMMAN/'S','R','I','K','O','L','F','G','P','H',
     &		    'Y','T','V','J','?',0,0,'U','N','+'/
 
	DISAS=0
  300	CALL ECHOFF
	CALL SECTOR(2)
	CALL CURSOR(JURSOR)
  301	E=GETCHX(E)
	CALL ECHOON
 
* MOVEMENT
	Z7=Z6
	CALL NDIREC(E)			!Convert keypad numerics to alphas
	DO 60 I=1,9
	IND=I
   60	IF (E==KBTBL(IND)) GOTO 61
	GOTO 62			!THEREFORE COMMAND IS NOT A MOVE
   61	Z6=Z6+KBFUDG(IND)
	GOTO 100
 
   62	END=15
	IF(PASS) END=20
	DO 302 I=1,END
  302	IF(E==COMMAN(I)) GOTO 303
	I=0
  303	GOTO (1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,300,300,18,19,10) I
	GOTO 300
 
*S: PUT TO SLEEP
    1	IF(A(1,Z6)=='O') RETURN
	STATUS(NUM) = 50		!Set to sentry duty
	RETURN
 
*R: RANDOM MOVEMENT
    2	IF(OWN1#'A') GOTO 300		!ONLY FOR ARMIES
	STATUS(NUM) = 100
	Z6=Z6+IARROW(JIGGLE(Z6,NUM))
	RETURN
 
*I: PUT IN DIRECTIONAL STASIS
    3	CALL ECHOFF
	E=GETCHX(E)
	CALL ECHOON
	CALL NDIREC(E)	! Make into alpha !
	DO 70 I=1,9
	IND=I
	IF (E == KBTBL(IND)) GOTO 21
   70	CONTINUE
	GOTO 22
21	STATUS(NUM) = DIRTBL(IND)
22	IF(STATUS(NUM)==0) GOTO 300
	DISAS=-2
	RETURN
 
*K: KILL STASIS NUMBERS ON TRANSPORT/CARRIER
    4	IF(OWN1#'T') GOTO 4093
	DO 4094 J=QARM+1,QARM+QNARM-1
4094	IF (LOCS(J)==Z6) STATUS(J) = 0
	GOTO 300
 4093	IF(OWN1#'C') GOTO 300
	DO 4095 J=QFIG+1,QFIG+QNFIG-1
4095	IF (LOCS(J)==Z6) STATUS(J) = 0
	GOTO 300
 
*O: CONCENTRATIONS
    5	CONTINUE
	GOTO 600
 
*L: SET UP CITY STASIS NUMBERS
   6	CALL DIREC
	GOTO 600
 
*F:
    7	CALL DIREC
	GOTO 600
 
*G: PUT T/C TO SLEEP
    8	IF((OWN1#'T').AND.(OWN1#'C')) GOTO 300
	STATUS(NUM) = 9997
	DISAS=-2
	RETURN
 
*P: SECTOR PRINTOUT
    9	ISEC=-1
	CALL SECTOR(2)
	GOTO 600
 
*H: GET HELP
   10	CALL CLEAR
	CALL HELP
	E=GETCHX(E)
	ISEC=-1
	GOTO 600
 
*Y: CHANGE PHASE OF A CITY
   11	CALL DIREC
	GOTO 600
 
*T: BLOCK PRINTOUT
   12	CALL CLEAR
	CALL BLOCK(2)
	ISEC=-1
	GOTO 600
 
*V: SAVE GAME
   13	CALL GAME(.TRUE.,NUM)
	GOTO 300
 
*J: PUT IN EDIT MODE
   14	CALL EDITM(Z6)
	IF(STATUS(NUM)==0) GOTO 300
	DISAS=-2
	RETURN
 
*?: HOW MANY HITS? LOADED?
   15	IF((OWN1=='A').OR.(OWN1=='F')) GOTO 300
	IB=H(N2)
	IF(MODE==1) CALL CURSOR(100)
	CALL DECPRT(IB)
	CALL STROUT(' hits left,',10)
	IF(OWN1=='S' .OR. OWN1=='D' .OR. OWN1=='R' .OR. OWN1=='B')
	1GO TO 300
	N=0
	DO 402 I=QARM+1,QARM+QNARM-1
  402	IF(LOCS(I)==Z6) N=N+1
	IF(N==0) GOTO 700
	CALL DECPRT(N)
	CALL STROUT(' armies aboard.',1)
	GOTO 600
  700	DO 405 I=1,QNFIG
  405	IF(LOCS(I+QFIG)==Z6) N=N+1
	IF(N==0) GOTO 666
	CALL DECPRT(N)
	CALL STROUT(' fighters aboard.',1)
	GOTO 600
  666	CONTINUE
	CALL STROUT('nothing aboard.',1)
	GOTO 600
 
*U: CALL REFERENCE MAP
   18	ISEC=-1
	CALL SECTOR(1)
	GOTO 600
 
*N: CALL ENEMY MAP
   19	ISEC=-1
	CALL SECTOR(0)
	GOTO 600
 
*+: BLOCK PRINT REF. MAP
   20	CALL CLEAR
	ISEC=-1
	CALL BLOCK(1)
	E=GETCHX(E)
	GOTO 600
 
  600	CALL LTR(Z6,2)
	GOTO 300
  100	IF(ORDER(Z6)==0) GOTO 50
	IF(MODE==1) CALL CURSOR(100)
	CALL STROUT('You cannot move onto the edge of the world.',1)
	CALL STROUT('Hard radiation prevails there. Move again.',1)
	Z6=Z7
	GOTO 600
   50	RETURN
	END
	SUBROUTINE SHIPFX(CRALOC,CRAHIT,NUM,HITMAX)
!Routine to repair docked ships before moving anything.
	INCLUDE 'COMMON.EMP/NOLIST'
 
	DO 500 Y=1,LIMIT(NUM)
	Z6 = LOCS(Y+CRALOC)
	IF (Z6 == 0) GOTO 500
	IF (A(1,Z6) # 'O') GOTO 500	!Ignore if not docked
	H1 = H(Y+CRAHIT)
	IF (H1 == HITMAX) GOTO 500	!Go on if fully fit
	H1 = H1 + 1			!else repair ship some
	CALL CHITS(Y+CRAHIT,H1)
500	CONTINUE
	RETURN
	END
	SUBROUTINE SHIPMV (CRALOC,CRAHIT,NUM,OWN1)
	INCLUDE 'COMMON.EMP/NOLIST'
 
	DO 2500 Y=1,LIMIT(NUM)
	LOC=CRALOC+Y
	Z6=LOCS(LOC)
	IF(Z6==0) GOTO 2500
	JIT=CRAHIT+Y
!Loop here to move this ship.
100	IF (MOVES(LOC) <= 0) GOTO 2500
	IF((MODE==1).AND.(.NOT. POSCHK(Z6))) GOTO 2500
	MOVES(LOC) = MOVES(LOC) - 1
	Z7=Z6
	AB=A(1,Z6)
	H1=H(JIT)
 
* CHECK TO SEE IF SHIP WAS DESTROYED (IF THE CITY IT WAS IN WAS CAPTURED).
	IF((AB==OWN1).OR.(AB=='O')) GOTO 4000
	CALL HEAD(OWN1,Y,Z6)
	CALL STROUT(' destroyed by enemy vandals.',1)
	CALL SLEEP(750)
	GOTO 2505
 
4000	CALL STASIS(Z6,LOC)
3000	IF (STATUS(LOC)==0) GOTO 2541
	IF((STATUS(LOC)#9997).OR.((OWN1#'T').AND.(OWN1#'C'))) GOTO 3001
	N=0
	NT=2
	IA=QARM+1
	IB=QARM+LIMIT(1)
	IF(OWN1#'C') GOTO 3003
	NT=1
	IA=QFIG+1
	IB=LIMIT(2)+QFIG
 3003	DO 3002 J=IA,IB
 3002	IF(LOCS(J)==Z6) N=N+1
	IF(N<NT*H1) GOTO 3001
	STATUS(LOC) = 0			!Wake if excess army/fighter
	GOTO 2541
 3001	IF((STATUS(LOC)<101).OR.(STATUS(LOC)>6108)) GOTO 2545
	IF(STATUS(LOC)<=6000) GOTO 2542
	IF(STATUS(LOC)>6100) GOTO 2543
	GOTO 2545
 2542	Z6=Z6+IARROW(MOV(Z6,STATUS(LOC)))
	IF (STATUS(LOC)==Z6) STATUS(LOC) = 0	!Reached destination
	GOTO 2544
 2543	Z6=Z6+IARROW(STATUS(LOC)-6100)
 2544	AD=A(1,Z6)
	IF(((AD=='.').OR.(AD=='O')).AND.(ORDER(Z6)==0)) GOTO 2545
	Z6=Z7
	CALL SECTOR(2)
	CALL CURSOR(100)
	CALL STSOUT(STATUS(LOC))
 2541	CALL SECTOR(2)
 2513	CALL LTR(Z6,ITURN)
	CALL SHEAD(OWN1,Y,Z6,JIT)
	CALL MVE(OWN1,LOC,JIT,Z6,Z7,DISAS,Z6-IADJST)
	CALL CURSOR(100)
	CALL STROUT('',1)
	IF(DISAS==-2) GOTO 3000
 
 
* MOVE EVALUATION
 2545	IF(D1(Z7)#'*') CALL CHANGE(Z7,D1(Z7),1)
	IF(DISAS==1) GOTO 2505
	AB=A(1,Z6)
	IF(AB#'O') GOTO 2511
	CALL CURSOR(100)
	CALL STROUT('Ship is docked.',1)
	GOTO 2512
 2511 IF((AB#'+').AND.(D1(Z6)#'*')) GOTO 2506
 2507	CALL CURSOR(200)
	CALL IDEN(OWN1)
	CALL STROUT('broke up on the shore.',1)
2505	LOCS(LOC) = 0
	STATUS(LOC) = 0
	MOVES(LOC) = 0
	IF(DISAS==1) CALL SENSOR(Z7)
	IF(DISAS#1) CALL SENSOR(Z6)
	H1=0
	GOTO 2533
 2506 IF(AB#'.') GOTO 2509
 2510 CALL CHANGE(Z6,OWN1,1)
2512	LOCS(LOC) = Z6
	CALL CHITS(JIT,H1)
	CALL SENSOR(Z6)
 2533	IF((OWN1#'T').AND.(OWN1#'C')) GOTO 100
	N=0
	NT = 2
	IA = QARM
	IB = LIMIT(1)
	IF (OWN1 # 'C') GOTO 2534
	NT = 1
	IA = QFIG
	IB = LIMIT(2)
 2534	DO 2535 I=IA+1,IA+IB
	IF(LOCS(I)#Z7) GOTO 2535
	LOCS(I) = Z6
	N=N+1
	IF(N<=NT*H1) GOTO 2535
	LOCS(I) = 0
	MOVES(I) = 0
	CALL CURSOR(100)
	IF(OWN1=='C') GOTO 2536
	CALL STROUT('army #',0)
	GOTO 2538
 2536	CALL STROUT('fighter #',0)
 2538	CALL DECPRT(I-IA)
	CALL STROUT(' was sunk.',1)
 2535	CONTINUE
	GOTO 100
 
 2509	H2=30
	OWN2=AB
	CALL FIND(OWN2,Z6,Z8,H2)
	CALL FGHT(Z6,H1,H2,OWN1,OWN2)
	CALL FIND(OWN2,Z6,Z8,H2)
	IF(H1<=0) GOTO 2505
	T1 = D1(Z6)			!Look at base map
	IF (T1 == '.') T1 = OWN1	!Ship is OK if still in the sea
	CALL CHANGE(Z6,T1,1)		!Change the ref map
	IF((OWN2>='1').AND.(OWN2<='8')) CALL SONAR(Z6)
	IF (T1 # OWN1) GOTO 2507
	GOTO 2512
 
 2500	CONTINUE
	RETURN
	END
	SUBROUTINE EDITM(Z5)
	INCLUDE 'COMMON.EMP/NOLIST'
	DIMENSION OK(5),COMM(30)
	DATA OK/'+',' ','O','5','*'/
	DATA COMM/'D','E','W','Q','A','Z','X','C','S',
     & 'Q','B','F','T','G','W','J',-1,-1,-1,'O','P','R','I','M','K','H',
     & 'S','?','Y','L'/
 
!Q: REFRESH SCREEN
!B: TYPE BEG
!F: TYPE END
!T: TRACE
!G: GO
!O: RETURN
!W: DIR=-DIR
 
	Z6=Z5
	WHTFLG=0
	MOVFLG=0
	OLDJ=JECTOR
	CALL SECTOR(2)
 1000	LINE=KLINE(KI,JECTOR)
	IADJST=LINE+KI-300
	IF(Z6==0) Z6=IADJST+1240
	DIR=1
  100	CALL CURSOR(Z6-IADJST)
	CALL ECHOFF
	E=GETCHX(E)
	Z7=Z6
	DO 101 I=1,8
  101	IF(E==COMM(I)) Z6=Z6+IARROW(I)
	IF(ORDER(Z6)==0) GOTO 1001
	Z6=Z7
	GOTO 2000
 1001	IF(Z6==Z7) GOTO 102
	GOTO 100
  102	DO 103 I=10,30
	J=I
  103	IF(E==COMM(I)) GOTO 104
	GOTO 2000
  104	IF(PASS) GOTO (10,11,12,13,14,16,17,18,19) J-9
	GOTO (15,21,22,23,24,25,26,27,28,29,30) J-19
	GOTO 2000
   10	ISEC=-1
	CALL SECTOR(0)
	GOTO 100
   11	BEG=Z6
	CALL OUTCHR("102)
	GOTO 100
   12	END=Z6
	CALL OUTCHR("105)
	GOTO 100
   13	FLAG=1000
	CALL ECHOON
	CALL PATH(BEG,END,DIR,OK,FLAG)
	CALL ECHOFF
	GOTO 100
   14	FLAG=1001
	CALL ECHOON
	CALL PATH(BEG,END,DIR,OK,FLAG)
	CALL ECHOFF
	GOTO 100
   15	CALL ECHOON
	JECTOR=OLDJ			!RESTORE SECTOR NUMBER
	CALL SECTOR(2)
	RETURN
   16	DIR=-DIR
	GOTO 100
   17	H2=30
	OWN2=A(1,Z6)
	CALL FIND(OWN2,Z6,Z8,H2)
	CODNUM=CODE(Z8-1500)
	CALL CURSOR(50)
	CALL STROUT(' Code:',2)
	TYPE 147,CODNUM
  147	FORMAT('+ ',I7,1X$)
	GOTO 100
   18	CONTINUE
   19	CONTINUE
   20	CONTINUE
	STOP
 
*P: PRINT OUT NEW SECTOR
   21	ISEC=-1
	CALL CURSOR(140)
	CALL STROUT(' New sector:',12)
	CALL ECHOON
	E=GETCHX(E)
	JECTOR=IPHASE(E)
	CALL SECTOR(2)
	ISEC=-1
	Z6=0
	GOTO 1000
 
*R: PRINT OUT THE ROUND NUMBER
   22	CALL CURSOR(200)
	CALL STROUT(' Round #',12)
	CALL DECPRT(MDATE)
	CALL EOL
	GOTO 100
 
*I: DIRECTIONAL STASIS
   23	AB=A(1,Z6)
	IF((AB<'A').OR.(AB>'T')) GOTO 2000
	E=GETCHX(E)
	DO 200 I=1,8
	J=I
  200	IF(COMM(I)==E) GOTO 201
	GOTO 2000
  201	IF(AB#'O') GOTO 202
	FIPATH(CITFND(Z6))=J+6100
	GOTO 100
  202	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	STATUS(MOVFLG) = J+6100
	GOTO 100
 
*M: SAY WE WANT TO MOVE TO A LOCATION
   24	AB=A(1,Z6)
	IF((AB<'A').OR.(AB>'T')) GOTO 2000
	IF(AB#'O') GOTO 301
	WHTFLG='CITY'
	MOVFLG=CITFND(Z6)
	GOTO 100
  301	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	WHTFLG='UNIT'
	GOTO 100
 
*K: WAKE UP
   25	AB=A(1,Z6)
	IF((AB<'A').OR.(AB>'T')) GOTO 2000
	IF(AB#'O') GOTO 401
	FIPATH(CITFND(Z6))=0
	GOTO 100
  401	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	STATUS(MOVFLG) = 0
	GOTO 100
 
*H: GO HERE
   26	IF(WHTFLG#'CITY') GOTO 501
	FIPATH(MOVFLG)=Z6
	GOTO 100
  501	IF(WHTFLG#'UNIT') GOTO 2000
	STATUS(MOVFLG) = Z6
	GOTO 100
 
*S: GOTO SLEEP
   27	AB=A(1,Z6)
	IF((AB<'A').OR.(AB>'T')) GOTO 2000
	IF(AB=='O') GOTO 2000
	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	STATUS(MOVFLG) = 50
	GOTO 100
 
*?: REQUEST INFO
   28	AB=A(1,Z6)
	IF((AB=='X').AND.(PASS)) GOTO 601
	IF((AB<'A').OR.(AB>'T')) GOTO 2000
	IF(AB=='O') GOTO 601
	IF((AB=='A').OR.(AB=='F')) GOTO 604
	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	CALL CURSOR(40)
	CALL STROUT(' Hits left:',10)
	CALL DECPRT(H(MOVFLG-QDES))
	CALL EOL
  604	CALL STSOUT(STATUS(MOVFLG))
	GOTO 100
  601	J=CITFND(Z6)
	CALL CURSOR(200)
	CALL STROUT(' Location:',10) ; CALL DECPRT(Z6)
	CALL STROUT('  Producing:',10)
	DO 602 I=1,8
  602	IF(PHASE(J)==PHAZE(I+8)) TYPE 603,PHAZE(I)
  603	FORMAT('+',A1,$)
	CALL STROUT('  Completion:',10) ; CALL DECPRT(FOUND(J))
	CALL STROUT('  Fpath:',10)
	IF(FIPATH(J)<100) CALL STROUT('SIT',0)
	IF((FIPATH(J)>100).AND.(FIPATH(J)<6000)) CALL DECPRT(FIPATH(J))
	IF(FIPATH(J)>6100) TYPE 603, COMM(FIPATH(J)-6100)
	CALL EOL
	GOTO 100
 
*Y: ENTER NEW PHASE
   29	AB=A(1,Z6)
	IF(AB#'O') GOTO 2000
	J=CITFND(Z6)
	CALL CURSOR(40)
	CALL STROUT('New production:',12)
	CALL PHASIN(J)
	GOTO 100
 
*L: SET ARMY TO MOVE AT RANDOM
   30	AB=A(1,Z6)
	IF(AB#'A') GOTO 2000
	H2=30
	CALL FIND(AB,Z6,MOVFLG,H2)
	STATUS(MOVFLG) = 100
	GOTO 100
 
 2000	CALL HUH
	GOTO 100
	END
	SUBROUTINE ARMCNT(ARMTOT,CODE,TARGET,LIMIT)
	IMPLICIT INTEGER (A-Z)
	INTEGER ARMTOT(1),CODE(1),TARGET(1),LIMIT(1)
	DO 200 I=1,20
  200	ARMTOT(I)=0
	DO 100 I=1,LIMIT(9)
	IF((CODE(I)<10000).OR.(CODE(I)>19999)) GOTO 100
	ILA=ILATT(CODE(I))
	DO 150 I2=1,20
  150	IF(TARGET(I2)==ILA) ARMTOT(I2)=ARMTOT(I2)+1
  100	CONTINUE
	RETURN
	END
	FUNCTION ATTACK(OWN1,OWN2,IH1,AGGR)
	H1=FLOAT(IH1)
	C1=COST(OWN1,H1)
	C2=COST(OWN2,0.)
	S1=1.
	S2=1.
	IF(OWN1=='4') S1=3.
	IF(OWN2=='S') S2=3.
	H2=HITS(OWN2)
	H1=IFIX((H1+S2-1.)/S2)
	H2=IFIX((H2+S1-1.)/S1)
	ATTACK=(C1+C2)*VICTRY(H1,H2)-C1+AGGR
	RETURN
	END
	SUBROUTINE CHANGE(Z6,TYPE,MAP)
	IMPLICIT INTEGER(A-Z)
	LOGICAL PASS
	COMMON/PASS/PASS
D	IF((Z6>=1).AND.(Z6<=6000)) GOTO 100
D	IF(PASS) TYPE 1598,Z6
D1598	FORMAT(' Change, Z6=',G)
D	RETURN
  100	CALL CHAMAP(Z6,TYPE,MAP)
	RETURN
	END
	SUBROUTINE CHITS(IB,NEW)
* PACKS HITS FROM 178 WORD ARRAY, WORDS ARE PACKED IN BASE 12
* J1TS IS THE ARRAY, IX IS WHICH ELEMENT IN THE ARRAY, IY IS THE
* POSITION OF THE DATA IN THE ARRAY ELEMENT
	INCLUDE 'COMMON.EMP/NOLIST'
	J=IB
D	IF((J>=1).AND.(J<=6000).AND.(NEW>=0).AND.(NEW<=12))
D    & GOTO 100
D	IF(PASS) TYPE 1598, IB, NEW
D1598	FORMAT(' CHITS(IB,NEW):',2G)
D	RETURN
  100	IX=(J+8)/9
	IY=MOD(J-1,9)
	IY=13^IY
	J1TS(IX)=NEW*IY+J1TS(IX)/(13*IY)*13*IY
     &+MOD(J1TS(IX),IY)
	RETURN
	END
	INTEGER FUNCTION CITFND(Z6)
	INCLUDE 'COMMON.EMP/NOLIST'
	DO 100 I=1,70
  100	IF(X(I)==Z6) GOTO 101
	IF(.NOT.PATH) RETURN
	CALL STROUT('CITFND error',2)
	RETURN
  101	CITFND=I
	RETURN
	END
	SUBROUTINE CITYCT
	INCLUDE 'COMMON.EMP/NOLIST'
	DIMENSION INDEX(15)
	DATA (INDEX(J),J=1,15)/11,12,0,13,14,15,0,0,0,16,0,17,0,0,18/
	NUMBER(9)=0
	DO 100 I=11,18
  100 NUMBER(I)=0
	DO 200 I=1,70
	IF(OWNER(I)#2) GOTO 200
	NUMBER(9)=NUMBER(9)+1
	IF(PHASE(I)==0) GOTO 200
	INDEXX=INDEX(PHASE(I))
	NUMBER(INDEXX)=NUMBER(INDEXX)+1
  200 CONTINUE
 
* NOW LET NUMBER(10)=LAST FILLED SLOT IN TARGET
	NUMBER(10)=1
	DO 300 I=70,1,-1
	J=I				!DO INDICES ARE NOT SAVED AFTER THE DO LOOP ENDS
  300	IF(TARGET(I)#0) GOTO 301
	RETURN
  301	NUMBER(10)=J
	RETURN
	END
	FUNCTION COST(OWN,H)
	REAL COSTAB(14),COSVAL(14)
	DATA COSVAL/1.,1.,2.,3.,2.,4.,3.,1.,4.,5.,6.,10.,14.,15./
	DATA COSTAB/'F','D','S','T','R','C','B',
     &		    '2','3','4','5','6','7','8'/
	DO 1 I=1,14
    1	IF(OWN==COSTAB(I))GO TO 2
	COST=0.
	RETURN
    2	COST=COSVAL(I)
	IF(I>=9)COST=COST-H
	RETURN
	END
	INTEGER FUNCTION D1(Z6)
	IMPLICIT INTEGER(A-Z)
	LOGICAL PASS
	COMMON/PASS/PASS
D	IF((Z6>=1).AND.(Z6<=6000)) GOTO 100
D	IF(PASS) TYPE 1598,Z6
D	D1='+'
D1598	FORMAT(' D1(Z6), Z6=',G)
D	RETURN
  100	D1=D1F(Z6)	!REPLACEMENT MACRO ROUTINE
	RETURN
	END
	SUBROUTINE DIREC
	CALL CURSOR(140)
	CALL STROUT('  Read the directions!',2)
	END
	SUBROUTINE DIST(Z6,ILA)
	INCLUDE 'COMMON.EMP/NOLIST'
* THIS SUBROUTINE SETS AR2S SO THAT THE ARMY WON'T GET
* OFF THE TROOP TRANSPORT PREMATURELY
 
	ID=2*IDIST(Z6,ILA)+1
	DO 6012 L=1+QEARM,LIMIT(9)+QEARM
 6012	IF(LOCS(L)==Z6) AR2S(L-QEARM)=ID
	RETURN
	END
	INTEGER FUNCTION EDGER(I)
	COMMON /IARROW/IARROW(0:9)
	EDGER=0
	DO 100 IA=1,8
100	IF (D1(I+IARROW(IA))=='.') EDGER = EDGER+1
	RETURN
	END
	INTEGER FUNCTION EXPL(DUMMY)
	INCLUDE 'COMMON.EMP/NOLIST'
	DATA STEP/37/,POSIT/65/,START/102/
 
! THIS SUBROUTINE SEARCHES FOR UNKNOWN TERRITORY AND RETURNS A VALUE
! IN EXPL.
 
	IF(FULL==2) GOTO 300
	BEGPOS=START
	GOTO 101
  100	IF((A(0,POSIT)==' ').AND.(ORDER(POSIT)==0)) GOTO 200
  101	POSIT=POSIT+STEP
	IF(POSIT<5900) GOTO 100
	START=START+1
	POSIT=START
	IF(START==BEGPOS+37) GOTO 300
	GOTO 100
  300	EXPL=0
	FULL=2
	RETURN
  200	EXPL=POSIT
	RETURN
	END
	FUNCTION FAC(X)
	FAC=1.0
	IF(X.LT.2)RETURN
	DO 1 I=2,INT(X)
1	FAC=FAC*FLOAT(I)
	RETURN
	END
	SUBROUTINE FIND(OWN,Z6,Z8,H2)
! Cross-reference subroutine. Finds data on whatever craft
! is at loc Z6. If H2=0, destroy the thing.
	INCLUDE	'COMMON.EMP/NOLIST'
 
	IF(H2>0)GOTO 1010
 
* NOW WE MUST DESTROY OWN
*  FIRST OF ALL, UPDATE TROOPT
	ISHP=0
	IF(OWN=='D') ISHP=1
	IF(OWN=='S') ISHP=2
	IF(OWN=='T') ISHP=3
	IF(OWN=='R') ISHP=4
	IF(OWN=='C') ISHP=5
	IF(OWN=='B') ISHP=6
	IF(ISHP==0) GOTO 3100
	DO 3000 Z=1,5
 3000	IF(TROOPT(ISHP,Z)==Z6) TROOPT(ISHP,Z)=0
 
*  NOW DESTROY THE CRAFT, SET LOCS(N)=0
 
 3100	IF(OWN#'C') GOTO 3001
	DO 1000 Z=1,QNFIG
	IF(LOCS(QFIG+Z)#Z6) GOTO1000
	LOCS(QFIG+Z) = 0
	MOVES(QFIG+Z) = 0
	IF(MODE==1) CALL CURSOR(300)
	TYPE 1002,Z
 1002	FORMAT('+Fighter #'I3' sunk.'$)
 1000	CONTINUE
 
 3001	IF(OWN#'T') GOTO 1006
	DO 1007 Z=QARM+1,QARM+QNARM-1
	IF(LOCS(Z)#Z6) GOTO 1007
	LOCS(Z) = 0
	MOVES(Z) = 0
	IF(MODE==1) CALL CURSOR(300)
	TYPE 1008,Z
 1008	FORMAT('+Army #'I3' sunk.'$)
 1007	CONTINUE
 
 1006	IF(OWN#'5') GOTO 1005
	DO 1009 Z=QEARM+1,QEARM+QNARM-1
1009	IF (LOCS(Z)==Z6) LOCS(Z) = 0
 
 1005	IF(OWN#'7') GOTO 1003
	DO 1004 Z=QEFIG+1,QEFIG+QNFIG-1
1004	IF (LOCS(Z)==Z6) LOCS(Z) = 0
 
1003	LOCS(Z8) = 0
	IF ((Z8-1) >= QEARM) GOTO 1020
	CALL SENSOR(Z6)
	MOVES(Z8) = 0
	RETURN
 
1020	CALL SONAR(Z6)
	RETURN
 
 1010	IF(H2==30) GOTO 1011
	IF((OWN=='A').OR.(OWN=='F').OR.(OWN=='1').OR.(OWN=='2'))
     & GOTO 1760
	IF((OWN>='A').AND.(OWN<='T')) CALL CHITS(Z8-QDES,H2)
	IF((OWN>='1').AND.(OWN<='8')) CALL CHITS(Z8-QEDES+QEHDES,H2)
	GOTO 1760
 1011	H2=0
	IA=QARM+1
	IF(OWN=='T') IA=QTTR+1
	IF(OWN=='C') IA=QCAR+1
	IF(OWN=='5') IA=QETTR+1
	IF(OWN=='7') IA=QECAR+1
	DO 1761 Z8=IA,QLMAX
 1761	IF(LOCS(Z8)==Z6) GOTO 1762
	IF(PASS) TYPE 1763
 1763	FORMAT(' ERROR IN SUB. FIND')
	GOTO 1760
 1762	IF((OWN=='A').OR.(OWN=='F').OR.(OWN=='1').OR.(OWN=='2'))
     &H2=1
	IF(H2==1) GOTO 1760
	IF((OWN>='A').AND.(OWN<='T')) H2=H(Z8-QDES)
	IF((OWN>='1').AND.(OWN<='8')) H2=H(Z8-QEDES+QEHDES)
 1760	RETURN
	END
	INTEGER FUNCTION H(IB)
	INCLUDE 'COMMON.EMP/NOLIST'
	J=IB
D	IF((J>=1).AND.(J<=1600)) GOTO 100
D	IF(PASS) TYPE 1598,J
D1598	FORMAT(' H(IB), IB=',G)
D	H=1
D	RETURN
  100	IX=(J+8)/9
	IY=MOD(J-1,9)
	IY=13^IY
	H=MOD(J1TS(IX),IY*13)/IY
	RETURN
	END
	SUBROUTINE HEAD(OWN1,Y,Z6)
	INCLUDE 'COMMON.EMP/NOLIST'
	CALL CURSOR(0)
	CALL IDEN(OWN1)
	CALL DECPRT(Y)
	CALL STROUT(' at',10)
	CALL DECPRT(Z6)
	CALL EOL
	IF(STATUS(Z6) .EQ. 0) CALL CURSOR(100) ; CALL EOL
	CALL CURSOR(200) ; CALL EOL
	RETURN
	END
	SUBROUTINE HERE(MSG)
	INCLUDE 'COMMON.EMP/NOLIST'
	DOUBLE PRECISION MSG
	IF(.NOT.PASS) RETURN
	CALL CURSOR(40)
	TYPE 100,MSG
  100	FORMAT('+',A10,$)
	RETURN
	END
	FUNCTION HITS(OWN)
	REAL A(8),B(8)
	DATA A/'A','F','D','S','T','R','C','B'/
	DATA B/1. , 1., 3., 2., 3., 8., 8., 12./
	HITS=0.0
	DO 1 I=1,8
	IF (OWN.EQ.A(I)) GOTO 2
1	CONTINUE
	RETURN
2	HITS=B(I)
	RETURN
	END
	SUBROUTINE HUH
	CALL CURSOR(40)
	CALL STROUT('  Huh?',2)
	END
	SUBROUTINE IDEN(OWN)
	COMMON/MODE/MODE,JECTOR ,ISEC
	IF((OWN>='1').AND.(OWN<='8')) CALL STROUT('Enemy',10)
	IF((OWN<='T').AND.(OWN>='A')) CALL STROUT('Your',10)
	IF((OWN=='A').OR.(OWN=='1')) GOTO 702
	IF((OWN=='F').OR.(OWN=='2')) GOTO 703
	IF((OWN=='D').OR.(OWN=='3')) GOTO 704
	IF((OWN=='S').OR.(OWN=='4')) GOTO 705
	IF((OWN=='T').OR.(OWN=='5')) GOTO 706
	IF((OWN=='R').OR.(OWN=='6')) GOTO 707
	IF((OWN=='C').OR.(OWN=='7')) GOTO 708
* THEN IT IS A BATTLESHIP!
	CALL STROUT('battleship',10)
	RETURN
  702	CALL STROUT('army',10)
	RETURN
  703	CALL STROUT('fighter',10)
	RETURN
  704	CALL STROUT('destroyer',10)
	RETURN
  705	CALL STROUT('submarine',10)
	RETURN
  706	CALL STROUT('troop transport',10)
	RETURN
  707	CALL STROUT('cruiser',10)
	RETURN
  708	CALL STROUT('aircraft carrier',10)
	RETURN
	END
	INTEGER FUNCTION IFORM(I)
	IFORM=IABS(I/10000)
	RETURN
	END
	INTEGER FUNCTION ILATT(I)
	ILATT=IABS(MOD(I,10000))
	RETURN
	END
	SUBROUTINE INITIA
	IMPLICIT INTEGER(A-Z)
	REAL RAN,C1
	INTEGER X(70),Z6,D(300)
	COMMON/X/X
	COMMON/MAP/MAPS(2574),D
	DO 10 I=1,6000
	P=D1F(I)
	CALL CHANGE(I,P,1)
	IF(P#'*') GOTO 10
	N1=INT(RAN(C1)*70.+1.)
	DO 100 N3=N1,N1+70
	N = N3
	IF (N>70) N = N-70
  100	IF(X(N)==0) GOTO 101
  101	X(N)=I
   10	CONTINUE
	RETURN
	END
	FUNCTION IPHASE(I)
	IA=(I-I/536870912*536870912)/4194304-48
	IF (IA==-16)GO TO 3786
	IPHASE=(I/536870912-48)*10+IA
	GO TO 3787
 3786 IPHASE=I/536870912-48
 3787 RETURN
	END
	FUNCTION IPORT(Z6)
	INTEGER Z6,X(70),EDGER
	REAL RAN,C1
	COMMON/IARROW/IARROW(0:9)
	COMMON /X/X
	IPORT=0
	ID=500
	DO 100 I=1,70
	IF(X(I)==0) GOTO 100
	IF((A(1,X(I))#'X').OR.(EDGER(Z6)==0)) GOTO 100
	IF(IDIST(X(I),Z6)>=ID) GOTO 100
	IPORT=X(I)
	ID=IDIST(X(I),Z6)
  100	CONTINUE
	IF(IPORT#0) RETURN
	IPORT=INT(RAN(C1)*5798.+102.)
	RETURN
	END
	FUNCTION ISCAPE(I,M)
*: I = # OF TIMES ONE HAS TRIED TO ESCAPE
*M: DIRECTION IN WHICH DANGER LIES
	INTEGER ITAB(8)
	LOGICAL PASS
	COMMON/PASS/PASS
	DATA ITAB/4,5,3,6,2,7,1,0/
	ISCAPE=ICORR(M+ITAB(I))
	RETURN
	END
	FUNCTION JIGGLE(Z6,NUM)
	INCLUDE 'COMMON.EMP/NOLIST'
	REAL RAN,C1
	INTEGER AB(9)
	DO 201 I=1,9
  201	AB(I)=A(1,Z6+IARROW(I))
	IF(AB(9)#'T') GOTO 200
	JIGGLE=0
	STATUS(NUM) = 0			!Wake to get on transport
	RETURN
 
  200	DO 100 I1=1,9
  100 IF((AB(I1)=='*').OR.(AB(I1)=='X')) GOTO 101
  101 DO 102 I2=1,9
  102 IF((AB(I2)>='1').AND.(AB(I2)<='8')) GOTO 103
  103 DO 104 I3=1,9
  104 IF(AB(I3)=='T') GOTO 105
  105 M1=INT(RAN(C1)*8.0+1.0)
	M2=M1+7
	DO 106 I4=M1,M2
	I5=ICORR(I4)
	I=Z6+IARROW(I5)
  106 IF((ORDER(I)==0).AND.(AB(I5)=='+')) GOTO 107
	I4=0
  107 M=I1
	IF(M==9) M=I3
	IF(M==9) M=I2
	IF(M==9) M=I5
	IF(I4==0) M=9
	JIGGLE=M
	RETURN
	END
	FUNCTION KLINE(KI,JECTOR)
	INTEGER FOO(0:3)
	DATA FOO/0,1300,2800,4000/
	KI=0
	IF(JECTOR>=4) KI=30
	INDEX=JECTOR
	IF(JECTOR>=4) INDEX=JECTOR-4
	KLINE=FOO(INDEX)
	RETURN
	END
	SUBROUTINE LTR(Z6,ITURN)
	REAL D2(0:2)
	INTEGER L6,Z6
	REAL G2(0:6)
	COMMON/MODE/MODE,JECTOR ,ISEC
	COMMON/IARROW/IARROW(0:9)
	IF (MODE # 1) GOTO 202		!Jump for just local display
	CALL SENSOR(Z6)			!Just do sensor scan
	RETURN
 
  202	IF(ITURN#1) GOTO 301
	DO 5000 I7=1,8
	I8=Z6+IARROW(I7)
 5000 IF(A(1,I8)#A(2,I8)) GOTO 5001
	GOTO 301
5001	CALL SENSOR(Z6)
  301 L6=Z6
	IF(L6<301) L6=L6+300-(L6-1)/100*100
	IF(L6>5700) L6=L6-(L6-1)/100*100+5600
	IF((L6-1)/100*100+97<L6) L6=97+(L6-1)/100*100
	IF((L6-1)/100*100+4>L6) L6=L6/100*100+4
	DO 500 I=-303,297,100
	DO 661 I9=0,6
  661 G2(I9)=A(2,L6+I+I9)
  500 TYPE 400, (G2(J),J=0,6)
  400 FORMAT(1X,7A1)
  201	CALL STROUT('',1)
	RETURN
	END
	SUBROUTINE NDIREC(J)
	INTEGER KBTBL(9), NKBTBL(9)
	DATA KBTBL/'Q','W','E','A','D','Z','X','C',' '/
	DATA NKBTBL /'7','8','9','4','6','1','2','3',' '/
	IF(J .EQ. '5') J = 'S'
	DO 20 I = 1,9
20	IF(J .EQ. NKBTBL(I)) J = KBTBL(I)
	RETURN
	END
	SUBROUTINE PHASIN(NUM)
	INCLUDE 'COMMON.EMP/NOLIST'
	INCLUDE 'COMJCH.EMP/NOLIST'
	CALL ECHOON
	E=GETCHX(E)
	DO 100 I=1,8
  100	IF(E==PHAZE(I)) GOTO 101
	CALL HUH
	RETURN
  101	PHASE(NUM)=PHAZE(I+8)
	FOUND(NUM)=MDATE+MPHAZP*PHASE(NUM)
	RETURN
	END
	LOGICAL FUNCTION POSCHK(Z6)
* DETERMINES IF Z6 IS IN CURRENT SECTOR SHOWING
	INTEGER Z6
	COMMON/MODE/MODE,JECTOR,ISEC
	IF (MODE == 1) GOTO 400
	POSCHK = .TRUE.			!Always if not screen mode
	RETURN
 
  400	JECT=JECTOR
	POSCHK=.FALSE.
	IY=(Z6-1)/100
	IX=Z6-IY*100
	IF (JECT > 3) GOTO 100
	IF (IX > 65) RETURN
	GOTO 300
 
100	IF (IX < 35) RETURN
	JECT = JECT-4
  300	IF((IY<JECT*15).OR.(IY>JECT*15+14)) RETURN
	POSCHK=.TRUE.
	RETURN
	END
	SUBROUTINE PROD(HITS,Z6,LIM,CRAHIT,CRALOC,LOPMAX,XAR2S,J,R)
	INCLUDE 'COMMON.EMP/NOLIST'
	INTEGER XAR2S(1),R(1)
 
	DO 100 I=CRALOC+1,LOPMAX+CRALOC
	IF(LOCS(I)#0) GOTO 100
	IF(I>LIM+CRALOC) LIM=I-CRALOC
	LOCS(I) = Z6
	IF(HITS>1) CALL CHITS(CRAHIT+I-CRALOC,HITS)
	IF (J>1) STATUS(I) = 0
	IF(J<2) CODE(I-QEBAS)=0
	IF(J==1) XAR2S(I-QEBAS)=0
	IF(CRALOC==QEFIG) R(I-QEFIG)=20
	IF(J==3) R(I-QFIG)=20
	GOTO(1,2,3,4,5,6,7,8,9) J
    1	RETURN
    2	CALL STROUT('n army',1)
	RETURN
    3	CALL STROUT(' fighter',1)
	RETURN
    4	CALL STROUT(' destroyer',1)
	RETURN
    5	CALL STROUT(' submarine',1)
	RETURN
    6	CALL STROUT(' troop transport',1)
	RETURN
    7	CALL STROUT(' cruiser',1)
	RETURN
    8	CALL STROUT(' aircraft carrier',1)
	RETURN
    9	CALL STROUT(' battleship!',1)
	RETURN
  100	CONTINUE
  200 RETURN
	END
	SUBROUTINE SECTOR(II)
	IMPLICIT INTEGER(A-Z)
	COMMON/MODE/MODE,JECTOR ,ISEC
	COMMON/G2/G2(100)
	IF(JECTOR==-1) GOTO 108
	IF(MODE#1) RETURN
	IF(ISEC==JECTOR) RETURN
	ISEC=JECTOR
	LINE=KLINE(KI,JECTOR)
	CALL SLEEP(750)		!wait momentarily first
	CALL CLEAR
	GOTO 691
  108	CALL STROUT('Sector?',12)
	JECTOR=GETCHX(JECTOR)
	JECTOR=IPHASE(JECTOR)
	IF((JECTOR<0).OR.(JECTOR>9)) JECTOR=0
	CALL CLEAR
	KI=0
	IF(JECTOR<5) GOTO 104; KI=30; JECTOR=JECTOR-5
  104	LINE=JECTOR*1000	!LINE=TOP LINE OF SECTOR
	JECTOR=-1		!LET MAIN KNOW THAT UPDATING SECTOR ISNT USED
  691	LINEFI=LINE+2000	!LINEFI=LINE AFTER LAST LINE OF SECTOR
	LINEC=LINE-100		!GET SET FOR LINE 205
  205	LINEC=LINEC+100		!GOTO NEXT LINE
	IF(LINEC>=LINEFI) GOTO 204 !CHECK FOR END OF SECTOR
	KSTART=KI+1		!IF LINE IS BROKEN, KSTART WILL BE MODIFIED
  206	DO 300 J=KSTART,KI+70	!KI ITSELF IS NOT IN SECTOR
	AB=A(II,J+LINEC)	!GET CHARACTER
  300	IF(AB#' ') GOTO 200	!FIND FIRST NON-BLANK SPOT
	GOTO 205		!NO CHARACTERS IN THIS LINE
  200	KINIT=J		!AB IS ALREADY CALCULATED
	G2(J)=AB		!AVOIDS REPITITION
	DO 201 J=KINIT+1,KI+70	!LOOK FOR BLANK CHARACTER
	AB=A(II,J+LINEC)	!GET CHARACTER
	IF(AB==' ') GOTO 202	!EXIT LOOP IF BLANK
  201	G2(J)=AB		!PUT CHAR. STRING IN AN ARRAY
  202	KFINAL=J-1			!SET END  OF CHAR. STRING
	CALL CURSOR(KINIT-LINE+LINEC-KI+300)	!POSITION CURSOR
	DO 10 J=KINIT,KFINAL
   10	CALL OUTCHR(LSH(G2(J),-29))	!PRINT OUT CHAR. STRING
	IF(KFINAL>=KI+70) GOTO 205		!NEXT LINE
	KSTART=KFINAL+1		!LOOK AT REST OF LINE
	GOTO 206
  204	KURSOR=2300
	DO 450 I=KI,KI+70,10
	CALL CURSOR(KURSOR)
	CALL DECPRT(I)
	KURSOR=KURSOR+10
  450	CONTINUE
 
	KURSOR=372
	DO 451 I=LINE/100,LINE/100+19,2
	CALL CURSOR(KURSOR)
	CALL DECPRT(I)
	KURSOR=KURSOR+200
  451	CONTINUE
 
	CALL CURSOR(0)		!SET CURSOR TO BEG. OF SCREEN
	RETURN
	END
	SUBROUTINE SENSOR(Z6)
 
!Perform a sensor scan about loc Z6.
 
	INTEGER Z6,ARROW(1:9)
	COMMON/MODE/MODE,JECTOR ,ISEC
	DATA (ARROW(J),J=1,9)/-101,-100,-99,-1,0,1,99,100,101/
	IBEFOR=-100
	DO 100 I=1,9
	I1=Z6+ARROW(I)
	AB=A(1,I1)
	IF(AB==A(2,I1)) GOTO 100
	CALL CHANGE(I1,AB,2)
	IF(JECTOR==-1) GOTO 100
	IF(ISEC==-1) GOTO 100
	LINE=KLINE(KI,ISEC)
	IY=(I1-1)/100*100
	IX=I1-IY
	IF((IY<LINE).OR.(IY>LINE+1900).OR.(IX<=KI).OR.(IX>KI+70))GOTO100
	I1=I1-LINE-KI
	IF(IBEFOR+1#I1) CALL CURSOR(I1+300)
	IBEFOR=I1
	CALL OUTCHR(LSH(AB,-29))
  100	CONTINUE
	RETURN
	END
	SUBROUTINE SHEAD(OWN1,Y,Z6,N2)

C	Outputs ship headings (hits left,stuff aboard)

	INCLUDE 'COMMON.EMP/NOLIST'
	INCLUDE 'COMJCH.EMP/NOLIST'
	CALL HEAD(OWN1,Y,Z6)
   15	IF((OWN1=='A').OR.(OWN1=='F')) GOTO 800
	IB=H(N2)
	IF(MODE==1) CALL CURSOR(100)
	CALL DECPRT(IB); CALL STROUT(' hits left',0)
	IF(OWN1=='S'.OR.OWN1=='D'.OR.OWN1=='R'.OR.OWN1=='B')GOTO 375
	CALL STROUT(',',10)
	N=0
	DO 402 I=QARM+1,QARM+QNARM-1
  402	IF(LOCS(I)==Z6) N=N+1
	IF(N==0) GOTO 700
	CALL DECPRT(N); CALL STROUT(' armies aboard.',1)
	GOTO 900
  700	DO 405 I=1,QNFIG
  405	IF(LOCS(I+QFIG)==Z6) N=N+1
	IF(N==0) GOTO 800
	CALL DECPRT(N); CALL STROUT(' fighters aboard.',1)
  900	RETURN
  800	CALL STROUT('nothing aboard.',1)
	RETURN
  375	CALL STROUT('.',1)
	RETURN
	END
	SUBROUTINE SONAR(Z6)
	INCLUDE 'COMMON.EMP/NOLIST'
	INCLUDE 'COMJCH.EMP/NOLIST'
	DIMENSION OK(5)
	DATA	OK/'+',' ','X','*','O'/
 
	DO 100 I=1,8
	LOCUS=Z6+IARROW(I)
	AB=A(1,LOCUS)
	IF(AB#A(0,LOCUS)) CALL CHANGE(LOCUS,AB,0)
	IF((AB#'*').AND.(AB#'O')) GOTO 200
	DO 300 I1=1,70
  300	IF(TARGET(I1)==LOCUS) GOTO 100
	DO 301 I1=1,70
  301	IF(TARGET(I1)==0) GOTO 302
  302	TARGET(I1)=LOCUS
	GOTO 100
  200	IF((AB<'A').OR.(AB>'T')) GOTO 100
	IF(AB#'A') GOTO 201
 
* WE MUST NOW FIGURE OUT IF THE ARMY IS A THREAT TO ANY OF THE COMPUTER'S
* CITIES, I.E. IF IT IS ON THE CONTINENT WITH ANY OF THEM. IF SO, PUT
* THE ARMY IN THE LOCI ARRAY. THE FIRST INDEX IS THE CONTINENT, THE
* SECOND IS THE NTH ARMY DISCOVERED ON THAT CONTINENT - 1. THE (N,1)
* ARGUMENT IS THE DATE OF THE LAST ARMY DISCOVERED ON THE
* NTH CONTINENT. THUS WE HAVE A MEANS OF DETERMINING THE AGE OF THE DATA
 
	DO 901 K=1,70
	IF((OWNER(K)#2).OR.(PHASE(K)==1)) GOTO 901
	IF(FOUND(K)#MDATE+MPHAZC*PHASE(K)-1) GOTO 901
	MOVE=PATH(X(K),LOCUS,1,OK,FLAG)
	IF(FLAG#0) PHASE(K)=-1			!City just finished something, make armies (panic)
  901	CONTINUE
 
	DO 903 K=1,10
	IF(LOCI(K,1)<MDATE+26) GOTO 903		!IF DATA IS NOT OLD
	DO 904 J=2,11
  904	LOCI(K,J)=0				!ZERO THAT LINE
  903	CONTINUE
 
	DO 902 K=1,10
	IF(LOCI(K,2)==0) GOTO 906
	MOVE=PATH(LOCUS,LOCI(K,2),1,OK,FLAG)
	IF(FLAG==0) GOTO 902
  906	LOCI(K,1)=MDATE
	DO 905 J=11,3,-1
  905	LOCI(K,J)=LOCI(K,J-1)			!SHIFT EVERYTHING UP THE ARRAY
	LOCI(K,2)=LOCUS
	GOTO 100
  902	CONTINUE
 
  201	ISHIPT=0
	IF(AB=='D') ISHIPT=1
	IF(AB=='S') ISHIPT=2
	IF(AB=='T') ISHIPT=3
	IF(AB=='R') ISHIPT=4
	IF(AB=='C') ISHIPT=5
	IF(AB=='B') ISHIPT=6
	IF(ISHIPT==0) GOTO 100
	DO 202 IB=1,4
  202	TROOPT(ISHIPT,IB)=TROOPT(ISHIPT,IB+1)
	TROOPT(ISHIPT,5)=LOCUS
  100	CONTINUE
	CALL CHANGE(Z6,A(1,Z6),0)
	RETURN
	END
	SUBROUTINE STASIS(Z6,LOC)
 
! Wake up piece if an enemy is near.
 
	INCLUDE 'COMMON.EMP/NOLIST'
	DO 100 I=1,8
	BLAH=A(1,Z6+IARROW(I))
  100	IF(((BLAH>='1').AND.(BLAH<='8')).OR.(BLAH=='X')) STATUS(LOC) = 0
	RETURN
	END
	SUBROUTINE STSOUT(MYCOD)
	INCLUDE 'COMMON.EMP/NOLIST'
	DOUBLE PRECISION FUNC
	DIMENSION COMM(6101:6108)
	DATA COMM/'D','E','W','Q','A','Z','X','C'/
	CALL CURSOR(100)
	CALL STROUT('Function:',10)
	IF(MYCOD<6100) GOTO 100
	DO 101 I=6101,6108
  101	IF(I==MYCOD) TYPE 102,COMM(I)
  102	FORMAT('+',A1,$)
	GOTO 203
  100	IF(MYCOD>100) GOTO 200
	FUNC='SENTRY'
	IF(MYCOD==0) FUNC='AWAKE'
	IF(MYCOD==100) FUNC='RANDOM'
  202	TYPE 201, FUNC
  201	FORMAT('+',A10,$)
	RETURN
  200	FUNC='FILL'
	IF(MYCOD==9997) GOTO 202
	CALL DECPRT(MYCOD)
  203	CALL EOL
	RETURN
	END
	FUNCTION VICTRY(H1,H2)
	SUM=0.0
	END=H1-1.
	R=H1+H2-1.
	DO 100 Y=0.,END
  100 SUM=SUM+1./(FAC(Y)*FAC(R-Y))
	VICTRY=SUM*FAC(R)*(.5^R)
	RETURN
	END
	SUBROUTINE YESSIR
	INCLUDE 'COMJCH.EMP/NOLIST'

	CALL CURSOR(0)
	IF (JCYCLE .GT. 0) GO TO 600
	CALL STROUT('Your orders? ',12)
	CALL CURSOR(14)
	RETURN
  600	CALL DECPRT(JCYCLE)
	CALL STROUT(' free enemy move',0)
	IF (JCYCLE .NE. 1) CALL STROUT('s',0)
	CALL STROUT(' remaining.',1)
	RETURN
	END
 &,k