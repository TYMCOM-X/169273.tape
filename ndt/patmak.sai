begin "foo"
require "{}{}" delimiters;
define !="comment";
DEFINE CL.ACS='10, CL.RST='40;


procedure Examples( simple procedure call );
begin	integer exp, low;
for exp_ '200 rot -9 step 1 rot -9 until '244 rot -9
  do for low_ exp + ('400 lsh 18) + 63 step -1
	 while low land ('400 lsh 18)
	   do call(low);
call(low_0); 
end;
simple procedure pCase( integer Index; real arg );
print(	(if index land 1 then "KIFIX [" else "FIXR [")
,	(if index land 2 then "-" else "+")
,	(case index lsh -2 of (" v ", "v.H", "v.*"))
,	"], v = 2^", ldb( point(8,arg,8) ) - '200, " * '.", 
	cvos( '000777777777 land 
		(case index lsh -2 of
		 (arg, arg xor '000377777777, arg xor '000252525252)) )
);

integer counter, chan; 
boolean writing;

simple procedure splat( reference real arg );
begin	own integer array results[0:11];
  start!code	define lpsa='14,temp='15;
	fixr	0,arg;
	kifix	1,arg;
	movn	temp,arg;
	fixr	2,temp;
	kifix	3,temp;
	hrloi	temp,'000377;
	xor	temp,arg;
	fixr	4,temp;
	kifix	5,temp;
	movn	temp,temp;
	fixr	6,temp;
	kifix	7,temp;
	move	temp,['000252525252];
	xor	temp,arg;
	fixr	8,temp;
	kifix	9,temp;
	movei	lpsa,results[0];
	blt	lpsa,results[9];
	movn	temp,temp;
	fixr	0,temp;
	kifix	1,temp;
	dmovem	0,results[10];
  end;
if writing
 then arryout( chan, results[0], 12)
 else begin	own integer array shouldBe[0:11];
		integer i;
	arryin( chan, shouldBe[0], 12 );
	for i_ 0 step 1 until 11
	   do if shouldBe[i] neq results[i]
		 then begin
			print( '15&'12 & " on " );
			pCase( i, arg );
			print( ", Error = '", 
				cvos( ShouldBe[i] xor results[i] ) );
		      end;
      end;
end;
simple procedure count( reference real arg );
	start!code aos counter; end;

boolean simple procedure confirm( string proposal );
begin	integer char;
print(proposal);
while true 
   do begin
	if (char_inchrw)='15 then char_ inchrw;	! read the coming LF;
	if char='30 or (char lor '40)="n" then return(false);
	if char='12 or char='33 or (char lor '40)="y" then return(true);
	if char="?" or (char lor '40)="h"
	 then print("Answer Y to confirm, or N to reject." & '15&'12,
			proposal )
	 else print("? ");
      end;
end;
boolean failed;

simple procedure setWrite;
while true
   do begin
	print(" Fixes to file: ");
	enter( chan, inchwl, failed );
	if failed then print("Enter failed.  ")
	 else begin	own safe integer array filDat[0:5];
		fileinfo(filDat);
		if confirm( if filDat[1] land 1 lsh 17
				then "[Old File] " else "[New File] " )
		 then return
		 else close( chan, cl.rst+cl.acs );
	      end;
      end;

simple procedure setRead;
while true
   do begin
	print(" Fixes to check on file: ");
	lookup( chan, inchwl, failed );
	if not failed then return
      end;

print("Go "); counter_ 0; Examples(count); print(counter); 
writing_ not Confirm("[Check KIFIX / FIXR] ");

open( chan_ getchan, "DSK",'10014, 
	(if writing then 0 else 4), (if writing then 4 else 0),
	0,0,0 );
if writing then setWrite else setRead;
Examples( splat );
release(chan);
end;

