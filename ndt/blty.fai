ENTRY	BLOAT
TITLE	BLOAT
EXTERNAL .INVOK	;SAIL: call a procedure parameter (from AC=TEMP)
EXTERNAL TREE.0	;the tree to interpret the bit stream from

OPDEF err. [5b8];SAIL: error opcode
C.LNUM__200	; character code for line number
?Z__0	; current input word	[or [?repeat count?],,repeat char]
?A__1	; input aobjn pointer	[input byte pointer]
?B__2	; -valid bit count in Z
?bs1__3	; ?xwd? (POINT size,) , bytes-per-word
?D__4	; current tree position

?CNT__5	; output free space count (bytes)
?OBP__6	; output byte pointer
?MSK__7	; ?? mask to test for repeat code (+C.LNUM for 7-bitters)
?OBC__10 ;nuber of remaining "output pseudo-bytes"

?TEMP__14; various values (a temp really) eg: working repeat count
?P__17	;push-down stack

SAVBLK:	BLOCK 4
define sav.in <
	MOVEM	OBC,@-5(P)	;save number of pending pseudo-bytes
	DMOVEM	CNT,SAVBLK	;CNT: output free space count (bytes)
				;OBP: output byte pointer
	DMOVEM	bs1,SAVBLK+2	;bs1: POINT size, bytes-per-word
				;D: current tree position
				;MSK: f(bs1)
>
define res.in <
	MOVE	OBC,@-5(P)	;recover number of pending pseudo-bytes
	DMOVE	CNT,SAVBLK	;CNT: output free space count (bytes)
				;OBP: output byte pointer
	DMOVE	bs1,SAVBLK+2	;bs1: POINT size, bytes-per-word
				;D: current tree position
	MOVE	MSK,MSKTAB(bs1) ;MSK: mask for repeat code (+C.LNUM:7's)
>
define sav.out <
	DMOVEM	Z,SAVBLK	;Z: input word [or rpt count,,rpt char]
				;A: input aobjn pointer
	DMOVEM	B,SAVBLK+2	;B: -valid bit count in Z
				;bs1: POINT size, bytes-per-word
				;MSK: f(bs1)
	MOVEM	OBC,@-5(P)	;OBC: number of pending pseudo-bytes
>
define res.out <
	DMOVE	B,SAVBLK+2	;B: -valid bit count in Z
				;bs1: POINT size, bytes-per-word
	HLRE	CNT,A		;CNT: -byte count
	IMULI	CNT,(bs1)	;=-words * bytes-per-word
	MOVE	OBP,bs1		;get byte-pointer left set up
	HRRI	OBP,(A)		;and complete the byte pointer
				;OBP: output byte pointer
	MOVE	MSK,MSKTAB(bs1) ;MSK: mask for repeat code (+C.LNUM:7's)
	DMOVE	Z,SAVBLK	;Z: input word [or rpt count,,rpt char]
				;A: input aobjn pointer
	MOVE	OBC,@-5(P)	;OBC: number of pending pseudo-bytes
>

BYPTAB:	POINT	6,6		;points to beg-of-word, eff=bytes/word
	POINT	7,5
	POINT	9,4

MSKTAB__.-4		;indexed by bytes/word. yields non-char mask
	003000	;4 bytes/word [9-bitter]
	003600	;5 bytes/word [7-bitter; include line number bit]
	003700	;6 bytes/word [6-bitter]
BLOAT:	;int_ BLOAT( tot.Ibytes,
	;		input.AOBJN.pointer, more.in.procedure,
	;		output.AOBJN.pointer, more.out.procedure )
	SKIPG	OBC,@-5(P)	;get number of "output pseudo-bytes"
	 JRST	[JUMPE	OBC,NICERT	;precisely 0 bytes
		 ERR. 1,[ASCIZ "Negative byte count?"]
		 MOVEI	A,0
		 JRST	RET.A]
	HLRE	bs1,tree.0
	MOVM	bs1,bs1
	CAIL	bs1,=8
	 XORI	bs1,1
	SUBI	bs1,6
	CAIG	bs1,2
	 JUMPGE	bs1,GOTCOD
ER.ARG:	ERR. 1,[ASCIZ "BLOAT: Illegal code value"]
	MOVEI	A,1
	JRST	RET.A

ER.IBG:	ERR. 1,[ASCIZ "Cannot start input"]
	MOVEI	A,2
	JRST	RET.A

ER.OBG:	ERR. 1,[ASCIZ "Cannot start output"]
	MOVEI	A,3
	JRST	RET.A

ER.ORM:	ERR.	1,[ASCIZ "short on output room"]
	MOVEI	A,4
	JRST	RET.A

ER.IRM:	ERR.	1,[ASCIZ "short on input room"]
	MOVEI	A,5
	JRST	RET.A

GOTCOD:	MOVE	bs1,BYPTAB(bs1)
	SKIPN	A,-4(P)			;input AOBJN pointer
	 JRST	[sav.in
		 MOVE	TEMP,-3(P)	;where to get more input
		 PUSHJ	P,.INVOK	;call the passed routine
		 res.in
		 JUMPGE	A,ER.IBG
		 JRST	.+1]
	sav.out
	SKIPL	A,-2(P)	;output AOBJN pointer 
	 PUSHJ	P,[MOVE	TEMP,-1-1(P)	;where to get more output room
		   JRST	.INVOK]		;call the passed routine
	res.out			;also sets up MSK, changes AOBJN to ptrs
	JUMPGE	CNT,ER.ORM
	MOVE	D,TREE.0	;start at the top of the tree
	JUMPG	OBC,BLKTOP

NICERT:	MOVEM	OBC,@-5(P)
RET.A:	SUB	P,[XWD 7,7]
	JRST	@6(P)
MOVLFT:	HRRE	D,TREE.0(D)
	JUMPL	D,ISSPEC
	AOJL	B,SHFTGO
	AOBJP	A,BLKRED
SHFTGO:	LSH	Z,1
INDXGO:	JUMPL	Z,MOVLFT
	HLRE	D,TREE.0(D)
	JUMPL	D,ISSPEC
	AOJL	B,SHFTGO
	AOBJN	A,BLKTOP
BLKRED:	sav.in
	MOVE	TEMP,-3(P)	;where to get more input
	PUSHJ	P,.INVOK	;call the passed routine
	res.in
	JUMPGE	A,ER.IRM
BLKTOP:	MOVE	Z,(A)		;get a chunk of input bits
	HRROI	B,-=36		;and a count of how many there are
	JRST	INDXGO

ISSPEC:	TRNE	D,(MSK)		;non-character?
	 JRST	REPOUT		;yes, a repetition count or line num bit
	AOJLE	CNT,DEPOGO
	sav.out
	MOVE	TEMP,-1(P)	;where to get more output room
	PUSHJ	P,.INVOK	;call the passed routine
	res.out
	AOJG	CNT,ER.ORM

DEPOGO:	IDPB	D,OBP
TOPGO:	SOJLE	OBC,NICERT
	MOVE	D,TREE.0	;zoom to start at the top of the tree
	AOJL	B,SHFTGO
	AOBJN	A,BLKTOP
	JRST	BLKRED

REPOUT:	MOVEI	TEMP,1
	TRNN	D,177		;was it for line number bit?
	 JRST	[IORM	TEMP,(OBP) ;yes, set it and go
		 JRST	TOPGO]
	MOVNI	D,1(D)
	ASH	TEMP,(D)
	LDB	Z,OBP
REPMOR:	AOJLE	CNT,RDEPGO
REPRED:	HRLI	Z,(TEMP)
	sav.out
	MOVE	TEMP,-1(P)	;where to get more output room
	PUSHJ	P,.INVOK	;call the passed routine
	res.out
	HLRZ	TEMP,Z
	AOJG	CNT,ER.ORM

RDEPGO:	IDPB	Z,OBP
	SOJG	TEMP,REPMOR
	MOVE	Z,(A)
	LSH	Z,=36(B)
	JRST	TOPGO
END
