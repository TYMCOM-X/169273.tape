module UUOSYM= !
begin


bind ?.AXI8C=#0;    ! input char [wait/bka/img]
bind ?.AXI8S=#1;    ! input char [skip/bka/img]
bind ?.AXI8B=#2;    ! input char [wait/img]
bind ?.AXO8=#3;    ! output char [IMG]
bind ?.AXO8I=#4;    ! output char [IMG/IMM]
bind ?.AXPTR=#5;    ! output string [PTR]
bind ?.AXCBI=#6;    ! clear input buffer
bind ?.AXCBO=#7;    ! clear output buffer
bind ?.AXSIC=#10;    ! skip if char
bind ?.AXLDE=#11;    ! leave deferred echo mode
bind ?.AXSYB=#12;    ! send yellow ball
bind ?.AXS8B=#13;    ! set image break char
bind ?.AXCRD=#14;    ! r/s compute-CR-delay bit
bind ?.AXIBR=#15;    ! r/s input baud rate
bind ?.AXOBR=#16;    ! r/s output baud rate
bind ?.AXEP=#17;    ! r/s even-parity bit
bind ?.AXHD=#20;    ! r/s half-duplex bit
bind ?.AXPA=#21;    ! r/s parameter A
bind ?.AXPB=#22;    ! r/s parameter B
bind ?.AXPC=#23;    ! r/s parameter C
bind ?.AXHNX=#24;    ! r/s host-no-XON bit
bind ?.AXNTE=#25;    ! r/s no HT/VT/FF bit
bind ?.AXTBK=#26;    ! r/s tabs-as-breaks bit
bind ?.AXWID=#27;    ! r/s line width
bind ?.AXFC1=#30;    ! r/s filler class 1
bind ?.AXFC2=#31;    ! r/s filler class 2
bind ?.AXSFS=#32;    ! set port file status bits (obsolescent)
bind ?.AXSI=#33;    ! simulate input
bind ?.AXEBM=#34;    ! enter block i/o mode
bind ?.AXIBW=#35;    ! input block and wait
bind ?.AXIBS=#36;    ! input block and skip
bind ?.AXOB=#37;    ! block output
bind ?.AXTBI=#40;    ! terminate block input
bind ?.AXTBO=#41;    ! terminate block output
bind ?.AXLBM=#42;    ! leave block i/o mode
bind ?.AXSLV=#43;    ! slave command port
bind ?.AXICW=#44;    ! input char [wait/bka]
bind ?.AXICS=#45;    ! input char [skip/bka]
bind ?.AXIWL=#46;    ! input char [wait]
bind ?.AXISL=#47;    ! input char [skip]
bind ?.AXSIL=#50;    ! skip if break char
bind ?.AXOCI=#51;    ! output char [IMM]
bind ?.AXOST=#52;    ! output string [STR]
bind ?.AXRMX=#53;    ! r/s remote-XON bit
bind ?.AXRBS=#54;    ! r/s remote-BS-echo bit
bind ?.AXRVX=#55;    ! r/s reverse-XON bit
bind ?.AXTYP=#56;    ! r/s terminal type
bind ?.AXBS=#57;    ! r/s BS-for-char-delete bit
bind ?.AXHNG=#60;    ! send hangup
bind ?.AXPSM=#61;    ! read port-status msg
bind ?.AXERA=#62;    ! r/s Erase-for-char-delete bit
bind ?.AXEDE=#63;    ! r/s force deferred-echo bit
bind ?.AXCFS=#64;    ! change port file status bits
bind ?.AXLCO=#65;    ! r/s Lower-case-output bit
bind ?.AXBBP=#66;    ! r/s backspace break/punctuation bit
bind ?.AXOPC=#67;    ! output string [PTR+count]
bind ?.AXSOB=#70;    ! send orange ball
bind ?.CHREL=#0;    ! release device
bind ?.CHCLS=#1;    ! close a file
bind ?.CHOPT=#2;    ! output from channel
bind ?.CHIPT=#3;    ! input from channel
bind ?.CHLK=#4;    ! select file for input
bind ?.CHENT=#5;    ! select file for output
bind ?.CHUSI=#6;    ! set file pointer by block
bind ?.CHUSO=#7;    ! set file position by block
bind ?.CHUGF=#10;    ! read disk file position
bind ?.CHREN=#11;    ! rename or delete a file
bind ?.CHMTA=#12;    ! perform magtape functions
bind ?.CHOPN=#13;    ! Open a Channel
bind ?.CHIN=#14;    ! input from channel
bind ?.CHOUT=#15;    ! output from channel
bind ?.CHSS=#16;    ! set file status bits
bind ?.CHGS=#17;    ! read file status bits
bind ?.CHSZ=#20;    ! skip if file status bits clear
bind ?.CHSO=#21;    ! skip if file status bits set
bind ?.CHIBF=#22;    ! create input buffer ring
bind ?.CHOBF=#23;    ! create output buffer ring
bind ?.CHSK=#24;    ! seek to current page
bind ?.CHWT=#25;    ! wait until device inactive
bind ?.CHMBF=#26;    ! move buffers
bind ?.CHFSI=#27;    ! set file pointer by block
bind ?.CHFSO=#30;    ! set file position by block
bind ?.CHPSI=#31;    ! set file pointer by page
bind ?.CHPSO=#32;    ! set file position by page
bind ?.CHUFD=#33;    ! read UFD
bind ?.CHMGN=#34;    ! manipulate update-interlock bit
bind ?.CHMFP=#35;    ! map file pages
bind ?.CHDFP=#36;    ! delete file page
bind ?.CHXFP=#37;    ! exchange file pages
bind ?.CHCFP=#40;    ! create file page
bind ?.CHMEN=#41;    ! select file for multi-update output
bind ?.CHVRB=#42;    ! validate RIB
bind ?.CHSMP=#43;    ! super-map file pages
bind ?.CHFFI=#44;    ! Find First Interesting Page
bind ?.CHFTR=#45;    ! Truncate File
bind ?.FOJMP=#0;    ! gate jump to frame
bind ?.FOCFM=#1;    ! create frame
bind ?.FORVA=#2;    ! read frame virtual address
bind ?.FOWVA=#3;    ! write frame virtual address
bind ?.FOSAA=#4;    ! start frame at absolute address
bind ?.FOHLT=#5;    ! halt frame
bind ?.FORPC=#6;    ! Read Frame PC
bind ?.FOREP=#7;    ! VREPLC to/from another frame
bind ?.FOVRM=#10;    ! VREMOV in another frame
bind ?.FOVCL=#11;    ! VCLEAR in another frame
bind ?.FOCFH=#12;    ! Create Handle
bind ?.FODFH=#13;    ! Destroy Handle
bind ?.FOCLR=#14;    ! Clear a Frame
bind ?.FORSI=#15;    ! Read Standard Access Rights Info
bind ?.FORAR=#16;    ! Read Handle Access Rights
bind ?.FORER=#17;    ! Read Handle Effective Rights
bind ?.FOSMF=#20;    ! Set Max Frame Rights
bind ?.FOCHR=#21;    ! Change Handle Rights
bind ?.FOSVA=#22;    ! start frame at vector address
bind ?.FOHST=#23;    ! Read Halt Status Block
bind ?.FOGFT=#24;    ! Graft Frame Subtree
bind ?.FOCON=#25;    ! continue frame
bind ?.FOGIN=#26;    ! Gate-jump Initialization
bind ?.FOVCH=#27;    ! Validate Child Rights
bind ?.FOCAR=#30;    ! Read Child Access Rights
bind ?.FOCER=#31;    ! Read Child Effective Rights
bind ?.FOGET=#32;    ! Setup frame core image from file
bind ?.FORUN=#33;    ! RUN program in frame
bind ?.FOSAV=#34;    ! SAVE frame core image on file
bind ?.FOSSA=#35;    ! SAVE frame core image on SHR file

bind ?.WSRBM=#0;    ! read working set bits
bind ?.WSRNG=#1;    ! add/remove pages from working set
bind ?.WSSTL=#2;    ! set WSLIM
bind ?.WSRSZ=#3;    ! read WSSIZ
bind ?.WSRLM=#4;    ! read WSLIM
bind ?.WSRMX=#5;    ! read WSMAX
bind ?.RFRBM=#0;    ! Read refbits
bind ?.RFSBM=#1;    ! Set refbits from bitmap
bind ?.RFRNG=#2;    ! set refbits by range
bind ?.XCSAV=#0;    ! save charging data
bind ?.XCRSC=#1;    ! read saved charges
bind ?.XCRCC=#2;    ! read current charges
bind ?.XCSET=#4;    ! set charges
bind ?.XCTRN=#5;    ! write transaction charges
bind ?.XCTCC=#6;    ! Write TRU Component Checkpoint


















bind ?.TCRFS=#0;    ! get free space count
bind ?.TCRRF=#1;    ! read TMPCOR file
bind ?.TCRDF=#2;    ! delete TMPCOR file
bind ?.TCRWF=#3;    ! write TMPCOR file
bind ?.TCRRD=#4;    ! read TMPCOR directory
bind ?.TCRDD=#5;    ! clear TMPCOR directory
bind ?.STTYO=#0;    ! OUTSTR to OPR terminal
bind ?.STSTA=#1;    ! set STATES
bind ?.STFAR=#2;    ! finish auto-restart
bind ?.STTIM=#3;    ! set time
bind ?.STDAT=#4;    ! set date
bind ?.STWAT=#6;    ! set WATCH bits
bind ?.STBST=#11;    ! Set/Read BOOTS command string
bind ?.STRES=#12;    ! Read/Set RESTART bits


%%%  FRAME PRIVILEGE (JBTPRV) BITS  %%%

bind ?JP.1UU=#1;    ! unused
bind ?JP.NAT=#1;    ! * no attach at login
bind ?JP.DST=#1;    ! * daylight savings applies
bind ?JP.ZON=#37;    ! * applicable time zone
bind ?JP.2UU=#77;    ! unused
bind ?JP.COR=#177;    ! * max core for frame
bind ?JP.EXO=#1;    ! execute only program
bind ?JP.DOP=#3;    ! * disconnect options
bind ?.JPLOG=#0;    ! Logout on disconnect
bind ?.JPDET=#1;    ! Detach on disconnect
bind ?.JPCON=#2;    ! Continue on disconnect
bind ?.JPDTO=#3;    ! Detach (15 min timeout)
bind ?JP.TYM=#1;    ! Tymshare proprietary
bind ?JP.ASV=#1;    ! Account supervisor
bind ?JP.MAL=#1;    ! Mail-waiting
bind ?JP.XOG=#1;    ! Execute only get
bind ?JP.3UU=#1;    ! unused
bind ?JP.RCM=#1;    ! * Restricted command mode.
bind ?JP.MOD=#3;    ! * monitor mode
bind ?.JPMPD=#0;    ! PDP-10 mode
bind ?.JPMXE=#1;    ! XEXEC mode
bind ?.JPMXJ=#2;    ! XEXECJ (Japan)  mode
bind ?.JPMSU=#3;    ! SUDS mode
bind ?JP.CRM=#177;    ! Maximum value for JP.COR


%%%  FRAME LICENSE BITS  %%%

bind ?LC.WC=#1;    ! Write Core (POKE UUO)
bind ?LC.RC=#1;    ! Read Core (VPEEK UUO)
bind ?LC.OP=#1;    ! Operator (SETUUO UUO)
bind ?LC.SY=#1;    ! SYSTAT (read protected GETTAB tables)
bind ?LC.GD=#1;    ! Get Devices
bind ?LC.TD=#1;    ! Transfer Devices (REASSI UUO)
bind ?LC.ST=#1;    ! Manipulate Structures
bind ?LC.HF=#1;    ! Home Files
bind ?LC.JL=#1;    ! Priviledged System Program
bind ?LC.AC=#1;    ! Auxiliary Circuits
bind ?LC.XC=#1;    ! XCHARG (adjust charges using the XCHARG UUO)
bind ?LC.RPS=#3;    ! read priviledges (a field)
bind ?.LCRP=#1;    ! read project
bind ?.LCRF=#2;    ! read files
bind ?.LCRA=#3;    ! read absolute
bind ?LC.WPS=#3;    ! write priviledges (a field)
bind ?.LCWP=#1;    ! write project
bind ?.LCWF=#2;    ! write files
bind ?.LCWA=#3;    ! write absolute


%%%  FRAME STATUS BITS  %%%

bind ?JB.RUN=#1;    ! Frame is runnable
bind ?JB.CMW=#1;    ! Waiting to execute command
bind ?JB.MRQ=#1;    ! Waiting for page(s)
bind ?JB.JNA=#1;    ! Frame number assigned
bind ?JB.JER=#1;    ! Monitor detected error
bind ?JB.ESC=#1;    ! Escape seen in command mode
bind ?JB.WSC=#37;    ! Wait state code
bind ?JB.LOG=#1;    ! * Frame is logged in
bind ?JB.JRQ=#1;    ! Frame must be requeued
bind ?JB.JAC=#1;    ! Frame can't be stopped
bind ?JB.WAK=#1;    ! WAKE pending
bind ?JB.JA2=#1;    ! * Frame shouldn't be stopped.
bind ?JB.UTR=#1;    ! Trap to user on UUO exit.
bind ?JB.DCN=#1;    ! Waiting for oper action.
bind ?JB.PRF=#1;    ! Frame Prereferenced a page.
bind ?JB.SIP=#1;    ! Swap-in in progress.
bind ?JB.SCP=#1;    ! Swapper has taken pages.


%%%  WATCH BIT DEFINITIONS  %%%

bind ?ST.WDY=#1;    ! time-of-day
bind ?ST.WRN=#1;    ! run time (TRUs)
bind ?ST.WWT=#1;    ! wait time
bind ?ST.WDR=#1;    ! disk reads (blocks)
bind ?ST.WDW=#1;    ! disk writes (blocks)


%%%  FRAME DESCRIPTOR FORMAT  %%%

bind ?FD.ABS=#0;    ! absolute type FD
bind ?FD.FAM=#1;    ! family type FD
bind ?FM.CHL=#0;    ! child subtype
bind ?FM.PAR=#1;    ! parent subtype
bind ?FD.OTF=#2;    ! "other" frame
bind ?FD.CRH=#3;    ! created handle type FD
bind ?CH.FRM=#0;    ! frame handle subtype
bind ?CH.PRO=#1;    ! process handle subtype
bind ?CH.LIC=#2;    ! license handle subtype
bind ?FD.SLF=#7;    ! self


%%%  MAP MANIPULATION RIGHTS  %%%

bind ?.ARRDM=#0;    ! Read Map
bind ?.ARCHM=#1;    ! Change Map


%%%  VIRTUAL MEMORY DATA MANIPULATION RIGHTS  %%%

bind ?.ARRAC=#2;    ! Read ACs
bind ?.ARWAC=#3;    ! Write ACs
bind ?.ARVAR=#4;    ! Read VM data
bind ?.ARVAW=#5;    ! Write VM data


%%%  FRAME CONTROL RIGHTS  %%%

bind ?.ARHLT=#6;    ! Halt frame
bind ?.ARSTP=#7;    ! Stop frame
bind ?.ARHNG=#10;    ! Hang frame
bind ?.ARCLR=#11;    ! Clear frame and release devices
bind ?.ARSVA=#12;    ! Start at Vector Address
bind ?.ARSAA=#13;    ! Start at Arbitrary Address
bind ?.ARRVA=#14;    ! Restart at Vector Address
bind ?.ARRAA=#15;    ! Restart at Arbitrary Address


%%%  READ FRAME STATUS RIGHTS  %%%

bind ?.ARRUN=#16;    ! Read User Name
bind ?.ARRDS=#17;    ! Read Frame State
bind ?.ARRAD=#20;    ! Read Accounting Data
bind ?.ARRFI=#21;    ! Read Frame Information
bind ?.ARRPI=#22;    ! Read Process Info


%%%  ACCESS RIGHTS CONTROL RIGHTS  %%%

bind ?.ARSMF=#23;    ! Set Max Frame Rights


%%%  WAKEUP RIGHTS  %%%

bind ?.ARWAK=#24;    ! Do Wake UUO on frame


%%%  TTY ATTACHING AND DETACHING RIGHTS  %%%

bind ?.ARATT=#25;    ! Attach Port
bind ?.ARDET=#26;    ! Take Port away (Detach)


%%%  FRAME TREE GRAFTING RIGHTS  %%%

bind ?.ARTKP=#27;    ! Take parent away from frame
bind ?.ARGVP=#30;    ! Give parent to frame
bind ?.ARGVC=#31;    ! Give child to frame


%%%  FRMOP STANDARD ERROR CODES  %%%

bind ?FENOH%=#1;    ! no handle in slot
bind ?FEBDI%=#2;    ! Bad (nonmatching) universal ID number
bind ?FENRT%=#3;    ! no rights to do operation
bind ?FEBDF%=#4;    ! bad frame number
bind ?FENLC%=#5;    ! not enough license
bind ?FEUND%=#6;    ! undefined frame descriptor type
bind ?FENCH%=#7;    ! not a child
bind ?FECLP%=#10;    ! cannot lock context pages
bind ?FEBAR%=#11;    ! bad access rights code
bind ?FENPR%=#12;    ! no parent
bind ?FEBFD%=#13;    ! bad family dispatch type
bind ?FEBDH%=#14;    ! bad handle index number in FD
bind ?FEBFN%=#15;    ! bad FRMOP function code
bind ?FEADB%=#16;    ! address bad
bind ?FEIOE%=#17;    ! page I/O error
bind ?FEALR%=#20;    ! already running
bind ?FEALH%=#21;    ! already halted
bind ?FECSJ%=#22;    ! cannot stop frame with JACCT set
bind ?FEFHE%=#23;    ! handle descriptor expected, not given
bind ?FEFHU%=#24;    ! handle (index) already used
bind ?FENFH%=#25;    ! no frame handle indices left
bind ?FEBCN%=#26;    ! bad count
bind ?FEBTN%=#27;    ! bad table number
bind ?FEBHT%=#30;    ! bad handle type
bind ?FECCH%=#31;    ! can't create handle (access failure)
bind ?FEBSV%=#32;    ! bad start vector offset
bind ?FECII%=#33;    ! cannot make child its own inferior in frame tree
bind ?FECCF%=#34;    ! cannot continue frame
bind ?FECFJ%=#35;    ! cannot do frame jump
bind ?FEREM%=#36;    ! rights exceed maximum


%%%  .FOCFM ERROR CODES  %%%

bind ?CF.NRD=#0;    ! no disk room
bind ?CF.FCE=#1;    ! frame capacity exceeded
bind ?CF.BAL=#2;    ! bad arg no license
bind ?CF.DDB=#3;    ! cannot create command port DDB


%%%  SYSTEM START VECTOR INDICIES  %%%

bind ?SV.NSA=-#1;    ! normal start address (as found in .JBSA)
bind ?SV.CCL=-#2;    ! CCL start address (normal plus one)
bind ?SV.REN=-#3;    ! REENTER start address (as found in .JBREN)
bind ?SV.DDT=-#4;    ! DDT start address (as found in .JBDDT)
bind ?SV.CON=-#5;    ! CONTINUE start address


%%%  HALT STATUS CLASSES & TYPES  %%%

bind ?HC.MEM=#0;    ! Memory Violations
bind ?HT.PCO=#0;    ! PC Out of Bounds
bind ?HT.IMR=#1;    ! Illegal Memory Reference
bind ?HT.WRV=#2;    ! Write Violation
bind ?HT.ADC=#3;    ! Address Check for Device X
bind ?HT.IMU=#4;    ! Ill Mem Ref in UUO
bind ?HT.IIA=#5;    ! Illegal Interrupt Address
bind ?HT.ABK=#6;    ! Address Break
bind ?HT.POV=#7;    ! PDL Overflow
bind ?HC.SYS=#1;    ! System-Related Errors
bind ?HT.PIO=#0;    ! Page I/O Error
bind ?HT.DFL=#1;    ! Disk Full during copy of .PRCW page
bind ?HT.PHE=#2;    ! Paging Hardware Error
bind ?HT.TPL=#3;    ! Too many Pages Locked, Cannot handle fault
bind ?HT.CIO=#4;    ! Context Page I/O Error
bind ?HT.PAR=#5;    ! Parity Error(s). All Core Removed
bind ?HC.DEV=#2;    ! Device Related Errors
bind ?HT.OCI=#0;    ! Output device Cannot Input
bind ?HT.ICO=#1;    ! Input device Cannot Output
bind ?HT.IDM=#2;    ! Illegal Data Mode for device X
bind ?HT.IUC=#3;    ! I/O to Unassigned Channel
bind ?HT.HDV=#4;    ! Hung Device
bind ?HT.DOP=#5;    ! Device X OPR action requested
bind ?HC.ILL=#3;    ! Illegal Instruction Traps
bind ?HT.ILU=#0;    ! Illegal UUO
bind ?HT.UUE=#1;    ! UUO error
bind ?HT.ILI=#2;    ! Illegal Instruction
bind ?HT.HLT=#3;    ! Halt
bind ?HC.EXI=#4;    ! Frame Exits
bind ?HT.EXI=#0;    ! Exit
bind ?HT.EX1=#1;    ! Exit 1,
bind ?HT.FEX=#2;    ! Fail Exit
bind ?HT.TLE=#3;    ! Time Limit Exceeded
bind ?HT.JSU=#4;    ! filename setup
bind ?HT.JSV=#5;    ! filename saved
bind ?HT.FCL=#6;    ! frame cleared
bind ?HC.RUN=#5;    ! RUN,RUNSEG & GETSEG UUO errors
bind ?HT.TRE=#0;    ! Transmission Error
bind ?HT.PGN=#1;    ! N Pages Required
bind ?HT.DNA=#2;    ! Device Not Available
bind ?HT.FNF=#3;    ! filename.ext not found
bind ?HT.NSF=#4;    ! Not a Save File
bind ?HT.EUF=#5;    ! filename.ext Attempted Enter UUO Failed
bind ?HT.CAN=#6;    ! Core Argument Not specified (magtape only)
bind ?HT.MHB=#7;    ! Magtape Hiseg Format Bad
bind ?HT.RMF=#10;    ! Remap UUO Fatal error
bind ?HT.MGF=#11;    ! Magtape GET failure
bind ?HT.NSA=#12;    ! No Start Address


%%%  .FORSI ITEM NUMBERS  %%%

bind ?.SREXO=#0;    ! max frame rights for execute-only
bind ?.SRLIC=#1;    ! max frame rights for process with license
bind ?.SRALL=#2;    ! all rights defined by monitor
bind ?.SRRCL=#3;    ! AR conferred by Read Core (RC)
bind ?.SRSYL=#4;    ! AR comferred by Systat (SY)
bind ?.SRTYM=#5;    ! AR conferred by JP.TYM priviledge
bind ?.SRAUN=#6;    ! AR conferred by having same AUN
bind ?.SRJLL=#7;    ! AR conferred by Jacct (JL)
bind ?.SRWCL=#10;    ! AR conferred by Write Core (WC)


%%%  JOB DATA AREA LOCATIONS  %%%

bind ?.JBUUO=#40;    ! LUUO storage location
bind ?.JB41=#41;    ! LUUO instruction location
bind ?.JBREL=#44;    ! (Obsolescent) highest relative loc
bind ?.JBBLT=#45;    ! Loader BLT locations 45-47
bind ?.JBMUU=#66;    ! MUUO stored here on INTADR MUUO-trapping
bind ?.JBHCU=#72;    ! Highest-channel-used stored here
bind ?.JBDDT=#74;    ! DDT entry loc
bind ?.JBJDA=#75;    ! Begin Array of channel-in-use flags
bind ?.JBCNK=#102;    ! CHAIN temporary locs 102-110
bind ?.JBCN6=#106;    ! more CHAIN temporary locs 106-113
bind ?.JBPFI=#114;    ! (Obsolete) lower limit for I/O
bind ?.JBHRL=#115;    ! (Obsolescent) Hiseg length and ending loc
bind ?.JBSYM=#116;    ! Symbol-table pointer stored here
bind ?.JBUSY=#117;    ! Undefined-symbols table pointer
bind ?.JBSA=#120;    ! Start Address of loaded program
bind ?.JBFF=#121;    ! First Free loc for buffered I/O to use
bind ?.JBREN=#124;    ! REENTER command address stored here
bind ?.JBAPR=#125;    ! APRENB transfer address stored here
bind ?.JBCNI=#126;    ! APRENB simulated CONI word location
bind ?.JBTPC=#127;    ! APRENB trap PC loc
bind ?.JBOPC=#130;    ! Old PC loc set by DDT,START etc.
bind ?.JBCHN=#131;    ! loaded FORTRAN program information
bind ?.JBCOR=#133;    ! loc of last non-zero data in core image
bind ?.JBCST=#136;    ! For Customer Use
bind ?.JBVER=#137;    ! Version number
bind ?.JBDA=#140;    ! First loc available to user program


%%%  VESTIGIAL JOB DATA AREA LOCATIONS  %%%

bind ?.JBHSA=#0;    ! copy of .JBSA
bind ?.JBH41=#1;    ! copy of .JB41
bind ?.JBHCR=#2;    ! copy of .JBCOR
bind ?.JBHRN=#3;    ! .JBHRL,.JBREN restore word
bind ?.JBHNM=#5;    ! hiseg name
bind ?.JBHSM=#6;    ! pointer to hiseg symbol-table
bind ?.JBHGA=#7;    ! (Obsolete)
bind ?.JBHDA=#  ! first loc of hiseg available to user


%%%  PAGE PROTECTION CODES  %%%

bind ?.PRRO=#1;    ! read-only
bind ?.PRCW=#2;    ! Copy-on-Write
bind ?.PRRW=#3;    ! Read-Write


%%%  VCREAT ERROR CODES  %%%

bind ?CRBCN%=#0;    ! count = 0
bind ?CRBVP%=#1;    ! bad page number
bind ?CRBPR%=#2;    ! bad protection
bind ?CREXV%=#3;    ! page already exists
bind ?CRLIM%=#5;    ! exceeded existing page limit
bind ?CRDFL%=#6;    ! disk full


%%%  VPROT ERROR CODES  %%%

bind ?PTBCN%=#0;    ! count = 0
bind ?PTBVP%=#1;    ! bad page
bind ?PTBPR%=#2;    ! bad protection
bind ?PTNVP%=#4;    ! page does not exist
bind ?PTPRF%=#5;    ! protection failure (only lookup access


%%%  WSCTL ERROR CODES  %%%

bind ?WSBCN%=#0;    ! count = 0
bind ?WSBVP%=#1;    ! bad virtual page


bind ?WSNVP%=#4;    ! virtual page does not exist
bind ?WSBFN%=#5;    ! illegal function code
bind ?WSCTL%=#6;    ! count too large
bind ?WSEWL%=#7;    ! exceeded working set size limit
bind ?WSLGM%=#10;    ! attempt to set limit over  max
bind ?WSLL3%=#11;    ! attempt to set limit under 3 pages


%%%  PREREF ERROR CODES  %%%

bind ?PRBVP%=#1;    ! bad page
bind ?PRNVP%=#4;    ! page does not exist
bind ?PRNIW%=#5;    ! page not in working set


%%%  BLTPAG ERROR CODES  %%%

bind ?BUCBB%=#0;    ! can't BLT backwards
bind ?BUNWP%=#1;    ! data not all within one page
bind ?BUCLP%=#2;    ! can't lock dest. page


%%%  PERSET ERROR CODES  %%%

bind ?PEBCN%=#0;    ! bad count
bind ?PEBVP%=#1;    ! bad page
bind ?PENVP%=#4;    ! nonexistent page


%%%  PGESTS WORD  %%%

bind ?EI.VAL=#1;    ! information is valid
bind ?EI.PAR=#1;    ! parity error on dirty page
bind ?EI.OER=#1;    ! output error
bind ?EI.DER=#1;    ! device error
bind ?EI.DTE=#1;    ! data error


%%%  VALPAG ERROR CODES  %%%

bind ?VLBCN%=#0;    ! bad count
bind ?VLBVP%=#1;    ! bad page
bind ?VLNVP%=#4;    ! page does not exist
bind ?VLIOE%=#5;    ! i/o error occurred


%%%  PAGE FAULT WORD  %%%

bind ?FI.VAL=#1;    ! this word contains valid data
bind ?FI.SAL=#1;    ! WSSIZ = WSLIM at time of fault
bind ?FI.VPN=#777;    ! Virtual Page number


%%%  PGISTS WORD  %%%

bind ?II.ADR=#777777;    ! virtual address
bind ?II.PFW=#777777;    ! soft page fail word


%%%  PGRSTS WORD  %%%

bind ?RI.VAL=#1;    ! information is valid
bind ?RI.ADR=#777777;    ! virtual address


%%%  REFBIT ERROR CODES  %%%

bind ?RFBCN%=#0;    ! bad count
bind ?RFBVP%=#1;    ! bad page number
bind ?RFBFN%=#5;    ! bad function


%%%  PAGE STATUS WORD  %%%

bind ?PS.UWS=#1;    ! in user working set
bind ?PS.REF=#1;    ! has been referenced
bind ?PS.MXW=#1;    ! maximally-writable
bind ?PS.SUP=#1;    ! super-mapped
bind ?PS.DDE=#3;    ! swap device error has occurred
bind ?PS.FIL=#1;    ! was a file-page (when mapped)
bind ?PS.CPR=#7;    ! current protection





%%%  PAGSTS ERROR CODE  %%%

bind ?PSBVP%=#1;    ! bad page


%%%  VPGFIL ERROR CODES  %%%

bind ?PFBVP%=#1;    ! bad vp number
bind ?PFNEX%=#4;    ! non-existent vp
bind ?PFNFP%=#6;    ! not file page


%%%  STANDARD PAGING ERROR CODES  %%%

bind ?FLCTG%=#0;    ! virtual page count = 0
bind ?FLDVR%=#1;    ! Destination virtual page out of range
bind ?FLCPU%=#2;    ! current prot undefined
bind ?FLVEX%=#4;    ! virtual page exists
bind ?FLNEX%=#4;    ! page doesn't exist
bind ?FLSVR%=#5;    ! source VP out-of-range
bind ?FLPHP%=#6;    ! past highest page
bind ?FLFPZ%=#7;    ! a specified file page number is = 0
bind ?FLCOR%=#10;    ! caller's .PVCOR size limit will be exceeded
bind ?FLRBE%=#11;    ! RIB error
bind ?FLBDS%=#12;    ! bad SAT
bind ?FLCPL%=#13;    ! specified prot cannot be set for the VP
bind ?FLLKC%=#14;    ! file is LOOKUP only, cannot be mapped
bind ?FLHOL%=#16;    ! file page which must exist is a hole
bind ?FLNHL%=#16;    ! no hole at specified file page
bind ?FLSNM%=#17;    ! structure name bad
bind ?FLOPE%=#20;    ! i/o error on validation write of page
bind ?FLSAM%=#21;    ! same source and destination page numbers
bind ?FLNML%=#22;    ! file already selected
bind ?FLNOF%=#23;    ! no file selected
bind ?FLNWT%=#24;    ! no write allowed
bind ?FLAQA%=#25;    ! disk full or user's quota exceeded
bind ?FLCTL%=#26;    ! (not returned to user programs)
bind ?FLIPE%=#27;    ! (not returned to user programs)
bind ?FLNTF%=#30;    ! no page of desired kind found
bind ?FLNIM%=#31;    ! function not implemented
bind ?FLLGE%=#32;    ! suppress error logging not allowed
bind ?FLNSP%=#33;    ! (obsolete)


%%%  FILE STATUS BITS  %%%

bind ?IO.IMP=#1;    ! improper mode
bind ?IO.DER=#1;    ! device error
bind ?IO.DTE=#1;    ! data error
bind ?IO.BKT=#1;    ! block too large
bind ?IO.ERR=#17;    ! error bit mask
bind ?IO.EOF=#1;    ! end of file
bind ?IO.ACT=#1;    ! device is active
bind ?IO.EVP=#1;    ! (FTA: only) even parity
bind ?IO.BK2=#1;    ! (TTY: only) break-on-punctuation bit
bind ?IO.NEE=#1;    ! (TTY: only) no-escape-echo bit
bind ?IO.NEC=#1;    ! (TTY: only) no-echo bit
bind ?IO.DEN=#3;    ! (FTA: only) recording density
bind ?IO.FCS=#1;    ! (TTY: only) full-character-set bit
bind ?IO.SYN=#1;    ! synchronous i/o
bind ?IO.UWC=#1;    ! user supplied word count
bind ?IO.MOD=#77;    ! data mode mask


%%%  DATA MODES  %%%

bind ?.IOASC=#0;    ! ASCII
bind ?.IOASL=#1;    ! ASCII line
bind ?.IOKAT=#2;    ! Katakana
bind ?.IOIMG=#10;    ! Image
bind ?.IOIBN=#13;    ! Image Binary
bind ?.IOBIN=#14;    ! Binary
bind ?.IODPR=#16;    ! Dump Records
bind ?.IODMP=#17;    ! Dump


%%%  DEVICE CHARACTERISTIC WORD  %%%

bind ?DV.DSK=#1;    ! is a disk
bind ?DV.CDR=#1;    ! is a card reader
bind ?DV.LPT=#1;    ! is a line printer
bind ?DV.TTA=#1;    ! is a frame's command port
bind ?DV.NZP=#1;    ! do not zap circuit on a RESET
bind ?DV.1UU=#1;    ! unused
bind ?DV.2UU=#1;    ! unused
bind ?DV.3UU=#1;    ! unused
bind ?DV.PTP=#1;    ! is a paper tape punch
bind ?DV.PTR=#1;    ! is a paper tape reader
bind ?DV.4UU=#1;    ! unused
bind ?DV.AVL=#1;    ! is available to this frame
bind ?DV.MTA=#1;    ! is a magtape
bind ?DV.TTY=#1;    ! is a terminal or aux circuit
bind ?DV.DIR=#1;    ! has a directory
bind ?DV.IN=#1;    ! input possible
bind ?DV.OUT=#1;    ! output possible
bind ?DV.ASG=#1;    ! assigned by console
bind ?DV.ASP=#1;    ! assigned by program
bind ?DV.DMP=#1;    ! dump mode legal
bind ?DV.DPR=#1;    ! dump records mode legal
bind ?DV.BIN=#1;    ! binary mode legal
bind ?DV.IBN=#1;    ! image binary mode legal
bind ?DV.IMG=#1;    ! image mode legal
bind ?DV.KAT=#1;    ! katakana mode legal
bind ?DV.ASL=#1;    ! ascii line mode legal
bind ?DV.ASC=#1;    ! ascii mode legal


%%%  SYSDVF FUNCTION CODES  %%%

bind ?.SDDDN=#0;    ! Non-port/disk
bind ?.SDDDA=#1;    ! All
bind ?.SDUNI=#2;    ! Unit DDBs
bind ?.SDSTR=#3;    ! STR DDBs
bind ?.SDFTA=#4;    ! Mag Tape DDBs


%%%  FILE PROTECTION CODES  %%%

bind ?FP.NO=#7;    ! No access.
bind ?FP.LK=#6;    ! Lookup access.
bind ?FP.RUN=#5;    ! Run access.
bind ?FP.RD=#4;    ! Read access.
bind ?FP.AP=#3;    ! Append access.
bind ?FP.UPD=#2;    ! Update access.
bind ?FP.CP=#1;    ! Change-protection access.
bind ?FP.ALL=#0;    ! All access.


%%%  DIRECTORY PROTECTION BITS  %%%

bind ?DP.LK=#4;    ! Lookup access.
bind ?DP.CR=#2;    ! New files access.
bind ?DP.RD=#1;    ! Read access.


%%%  EXTENDED LOOKUP BLOCK LOCATIONS  %%%

bind ?.RBPPN=#1;    ! PPN of UFD to search
bind ?.RBNAM=#2;    ! SIXBIT /filename/
bind ?.RBEXT=#3;    ! SIXBIT /extension/
bind ?.RBPRV=#4;    ! Priviledge word
bind ?.RBSIZ=#5;    ! File size in words
bind ?.RBVER=#6;    ! Version (not used by monitor)
bind ?.RBFUT=#7;    ! (not used by monitor)
bind ?.RBEST=#10;    ! Estimated file size (in blocks)
bind ?.RBALC=#11;    ! Allocated storage (in blocks)
bind ?.RBPOS=#12;    ! (not used)
bind ?.RBFT1=#13;    ! (not used)
bind ?.RBLIC=#14;    ! File license word
bind ?.RBMTA=#15;    ! (not used)
bind ?.RBDEV=#16;    ! zero
bind ?.RBSTS=#17;    ! File status bits
bind ?.RBELB=#20;    ! Error logical block
bind ?.RBXT1=#21;    ! zero
bind ?.RBQTF=#22;    ! Logged-in disk quota
bind ?.RBQTO=#23;    ! Logged-out disk quota
bind ?.RBMXA=#24;    ! 
bind ?.RBUSD=#25;    ! 
bind ?.RBAUT=#26;    ! Author (last writer's) PPN
bind ?.RBUNM=#27;    ! Username (SIXBIT)
bind ?.RBTRU=#31;    ! unused
bind ?.RBXT2=#32;    ! unused
bind ?.RBALP=#33;    ! Allocated pages
bind ?.RBSNM=#34;    ! number of spare RIBs
bind ?.RBPJC=#35;    ! Project-code block
bind ?.RBPID=#40;    ! Processor ID


%%%  FILE SELECTION ERROR CODES  %%%

bind ?.ERFNF=#0;    ! File Not Found.
bind ?.ERIPP=#1;    ! Incorrect PPN.
bind ?.ERPRT=#2;    ! Protection failure.
bind ?.ERFBM=#3;    ! File being modified.
bind ?.ERAEF=#4;    ! Already existing file.
bind ?.ERISU=#5;    ! Illegal Sequence of UUOs.
bind ?.ERTRN=#6;    ! Transmission error.
bind ?.ERNSF=#7;    ! Not a saved file.
bind ?.ERNEC=#10;    ! Not enough core.
bind ?.ERDNA=#11;    ! Device not available.
bind ?.ERNSD=#12;    ! No such device.
bind ?.ERILU=#13;    ! (never happens)
bind ?.ERNRM=#14;    ! No room.
bind ?.ERWLK=#15;    ! (never happens)
bind ?.ERNET=#16;    ! Not enough table space.
bind ?.ERPOA=#17;    ! (never happens)
bind ?.ERBNF=#20;    ! (never happens)
bind ?.ERNTR=#21;    ! (never happens)
bind ?.ERLKM=#22;    ! (never happens)


%%%  DSKCHR STATUS BITS  %%%

bind ?DC.OFL=#1;    ! unit offline
bind ?DC.HWP=#1;    ! unit hardware write-protected
bind ?DC.USF=#1;    ! unit unsafe
bind ?DC.MSB=#1;    ! unit has multiple SAT blocks
bind ?DC.TYP=#7;    ! type of name passed to DSKCHR
bind ?.DCTDS=#0;    ! generic DSK
bind ?.DCTFS=#2;    ! file structure
bind ?.DCTUF=#3;    ! unit within structure
bind ?.DCTCN=#4;    ! controller class
bind ?.DCTCC=#5;    ! controller within class
bind ?.DCTPU=#6;    ! unit within controller
bind ?DC.DCN=#7;    ! data channel number
bind ?DC.CNT=#77;    ! controller type
bind ?.DCCDR=#0;    ! FH  drum
bind ?.DCCFH=#1;    ! fixed-head disk
bind ?.DCCDP=#2;    ! DP  disk pack (RP01,RP02)
bind ?.DCCMD=#3;    ! mass disk
bind ?.DCCBP=#4;    ! BP  big pack (IBM 3330)
bind ?DC.CNN=#7;    ! controller number
bind ?DC.UNT=#3;    ! unit type
bind ?.DCUBU=#0;    ! Burroughs disk
bind ?.DCBBR=#1;    ! Bryant drum
bind ?.DCUD1=#0;    ! RP01
bind ?.DCUD2=#1;    ! RP02
bind ?.DCUDP=#0;    ! dual positioner
bind ?.DCUSP=#1;    ! single positioner
bind ?.DCUM1=#0;    ! 3330 Model I
bind ?.DCUM2=#1;    ! 3330 Model II
bind ?DC.UNN=#7;    ! unit number within controller


%%%  GOBSTR ERROR CODES  %%%

bind ?DFGIF%=#3;    ! addr+2 is not in search list
bind ?DFGPP%=#6;    ! frame and PPN do not agree
bind ?DFGNP%=#10;    ! No license
bind ?DFGLN%=#12;    ! Bad length for list


%%%  STRUUO FUNCTION CODES  %%%

bind ?.FSSRC=#0;    ! Define new search list for frame
bind ?.FSDSL=#1;    ! Define new search list
bind ?.FSDEF=#2;    ! Define new file structure.
bind ?.FSRDF=#3;    ! Redefine file structure.
bind ?.FSLOK=#4;    ! Lock file structure.
bind ?.FSREM=#5;    ! Remove file structure.
bind ?.FSULK=#6;    ! Test/Set UFD interlock.
bind ?.FSUCL=#7;    ! Clear UFD interlock.
bind ?.FSETS=#10;    ! Simulate hard errors.
bind ?.FSRRL=#11;    ! Read/reset log for 3330's.


%%%  STRUUO ERROR CODES  %%%

bind ?FSILF%=#0;    ! Illegal function code
bind ?FSSNF%=#1;    ! Structure not found
bind ?FSSSA%=#2;    ! Structure single access only
bind ?FSILE%=#3;    ! Illegal list entry
bind ?FSTME%=#4;    ! Too many entries in list
bind ?FSUNA%=#5;    ! Unit not available
bind ?FSPPN%=#6;    ! PPN doesn't match
bind ?FSMCN%=#7;    ! Mount count greater then 1
bind ?FSNPV%=#10;    ! No license
bind ?FSFSA%=#11;    ! Structure already exists
bind ?FSILL%=#12;    ! Bad list length
bind ?FSUNC%=#13;    ! Unable to complete UUO
bind ?FSNFS%=#14;    ! System full of structures
bind ?FSNCS%=#15;    ! No free core
bind ?FSUNF%=#16;    ! Illegal unit
bind ?FSRSL%=#17;    ! File structure repeated in list


%%%  CREAUX CONTROL BITS  %%%

bind ?CX.NZP=#1;    ! don't zap on RESET


%%%  RETACH ERROR CODES  %%%

bind ?RTSAC%=#1;    ! insufficient access rights to source frame
bind ?RTSNX%=#2;    ! source frame does not exist
bind ?RTTAC%=#3;    ! insufficient access rights  to target frame
bind ?RTTNX%=#4;    ! target frame does not exist
bind ?RTSNA%=#5;    ! specified port not attached to source frame
bind ?RTTAT%=#6;    ! target frame already has port attached
bind ?RTSCP%=#7;    ! forced command already pending on port
bind ?RTAUX%=#10;    ! attaching aux circuit as command port
bind ?RTNRM%=#11;    ! no room for new port DDB


%%%  CREAUX ERROR CODES (LEFT HALF)  %%%

bind ?CXSUP%=#0;    ! supervisor error code in right half
bind ?CX2AX%=#1;    ! too many circuits without Auxiliary Circuit (AC)
bind ?CXLOG%=#2;    ! not your username without Auxiliary Circuit (AC)
bind ?CXDCB%=#3;    ! no room in monitor
bind ?CXNRR%=#4;    ! supervisor did not respond
bind ?CXNRL%=#5;    ! supervisor did not respond
bind ?CXNCH%=#6;    ! supervisor did not supply a circuit
bind ?CXERR%=#7;    ! supervisor error from original request


%%%  CREAUX ERROR CODES (RIGHT HALF)  %%%

bind ?CXSFE%=#1;    ! format error
bind ?CXSBU%=#2;    ! user not in mud
bind ?CXSBM%=#3;    ! bad mud
bind ?CXSHU%=#4;    ! host unavailable
bind ?CXSDF%=#5;    ! downline load or dialout request failure
bind ?CXSTO%=#6;    ! timeout
bind ?CXSAB%=#7;    ! access barred
bind ?CXSIS%=#10;    ! error in ISIS
bind ?CXSLQ%=#11;    ! long queue in supervisor


%%%  PORT EVENT-STATUS BITS  %%%

bind ?LXRESC=#1;    ! escape seen
bind ?LXROBS=#1;    ! orange ball seen
bind ?LXRPSS=#1;    ! port status message seen
bind ?LXRICL=#1;    ! input characters lost
bind ?LXROCL=#1;    ! output characters lost
bind ?LXRCHR=#1;    ! character seen
bind ?LXRBRK=#1;    ! break condition seen
bind ?LXRYBS=#1;    ! yellow ball seen
bind ?LXRGOB=#1;    ! character gobbler seen


%%%  LINE CHARACTERISTICS WORD  %%%

bind ?LC.ECS=#1;    ! "command line" exists,will be thrown away
bind ?LC.PSS=#1;    ! ** a port status message has been seen
bind ?LC.OBS=#1;    ! ** an orange ball has been seen
bind ?LC.HDX=#1;    ! * half duplex
bind ?LC.ESC=#1;    ! ** an escape has been seen
bind ?LC.CRD=#1;    ! * compute carriage return delay (not LF)
bind ?LC.DFR=#1;    ! in deferred echo mode
bind ?LC.NOP=#1;    ! suppress output bit
bind ?LC.NFC=#1;    ! * no free carriage return
bind ?LC.BRK=#1;    ! input buffer contains a break character
bind ?LC.AXC=#1;    ! auxiliary circuit
bind ?LC.NCM=#1;    ! * no case mapping
bind ?LC.HHT=#1;    ! * hardware horizontal tabs
bind ?LC.LCP=#1;    ! local-copy (e.g. 2741) device
bind ?LC.PTM=#1;    ! * paper tape mode
bind ?LC.HFF=#1;    ! * hardware VT/FF
bind ?LC.PNO=#777777;    ! port number


%%%  MTAPE FUNCTIONS  %%%

bind ?.MTWAT=#0;    ! wait for i/o completion
bind ?.MTREW=#1;    ! rewind
bind ?.MTEOF=#3;    ! write tape mark
bind ?.MTSKR=#6;    ! skip forward 1 record
bind ?.MTBSR=#7;    ! backspace 1 record
bind ?.MTEOT=#10;    ! go to logical end of tape
bind ?.MTUNL=#11;    ! rewind and unload
bind ?.MTBLK=#13;    ! erase gap
bind ?.MTSKF=#16;    ! skip forward 1 file
bind ?.MTBSF=#17;    ! backspace 1 file
bind ?.MTDEC=#100;    ! set DEC 9-track mode
bind ?.MTIC0=#101;    ! set IBM 9-track mode, byte adjust 0
bind ?.MTIC1=#102;    ! set IBM 9-track mode, byte adjust 1
bind ?.MTIC2=#103;    ! set IBM 9-track mode, byte adjust 2
bind ?.MTIC3=#104;    ! set IBM 9-track mode, byte adjust 3
bind ?.MT7E0=#201;    ! set special 7-track mode, byte adjust 0
bind ?.MT7E1=#202;    ! set special 7-track mode, byte adjust 1
bind ?.MT7E2=#203;    ! set special 7-track mode, byte adjust 2
bind ?.MT7E3=#204;    ! set special 7-track mode, byte adjust 3


%%%  UGETF FUNCTION CODES  %%%

bind ?.UGCNT=#0;    ! return byte/word count of last input
bind ?.UGSEN=#1;    ! return drive sense data
bind ?.UGSTS=#2;    ! return drive status data
bind ?MT.PRO=#1;    ! write protected
bind ?MT.TAB=#3;    ! TU A & B
bind ?MT.LDP=#1;    ! load point
bind ?MT.EOT=#1;    ! end of tape indicator
bind ?MT.IBM=#1;    ! IBM compatible unit
bind ?MT.7TR=#1;    ! 7 track capability
bind ?MT6250=#1;    ! 6250 bpi capability
bind ?MT1600=#1;    ! 1600 bpi
bind ?MT800=#1;    ! 800 bpi
bind ?MT556=#1;    ! 556 bpi
bind ?MT200=#1;    ! 200 bpi


%%%  APRENB INTERRUPT BITS  %%%

bind ?AP.REN=#1;    ! Repetitive enable
bind ?CN.POV=#1;    ! Stack Overflow or Underflow
bind ?AP.POV=#1;    ! Stack Overflow or Underflow
bind ?CN.UUO=#1;    ! UUO or ill ins
bind ?AP.UUO=#1;    ! UUO or ill ins
bind ?CN.BRK=#1;    ! Break character
bind ?AP.BRK=#1;    ! Break character
bind ?CN.ILM=#1;    ! Ill mem ref
bind ?AP.ILM=#1;    ! Ill mem ref
bind ?CN.CHR=#1;    ! Character
bind ?AP.CHR=#1;    ! Character
bind ?CN.ESC=#1;    ! Escape (ctrl-C)
bind ?AP.ESC=#1;    ! Escape (ctrl-C)
bind ?CN.CLK=#1;    ! Clock tick
bind ?AP.CLK=#1;    ! Clock tick
bind ?CN.FOV=#1;    ! Floating overflow
bind ?AP.FOV=#1;    ! Floating overflow
bind ?CN.HNG=#1;    ! Hung device
bind ?AP.HNG=#1;    ! Hung device
bind ?CN.AOV=#1;    ! Integer overflow
bind ?AP.AOV=#1;    ! Integer overflow


%%%  PORT INTERRUPT CAUSE CODES  %%%

bind ?.IAESC=#0;    ! Receipt of an escape.
bind ?.IACHR=#1;    ! Receipt of a character.
bind ?.IABRK=#2;    ! Receipt of a break character.
bind ?.IAIOW=#3;    ! Potential I/O wait
bind ?.IAROM=#4;    ! Room for more output characters.
bind ?.IALOS=#5;    ! Characters lost on input.
bind ?.IAORG=#6;    ! Receipt of an orange ball.
bind ?.IAZAP=#7;    ! Receipt of a circuit zapper.
bind ?.IAPSS=#10;    ! Port Status msg seen
bind ?.IAYEL=#11;    ! Receipt of Yellow Ball.
bind ?.IAGOB=#12;    ! Receipt of Character Gobbler.


%%%  GENERAL INTERRUPT CAUSE CODES  %%%

bind ?.IAUUO=#0;    ! UUO or illegal instruction
bind ?.IACLK=#1;    ! Clock tick while running
bind ?.IAILM=#2;    ! Ill mem ref
bind ?.IAHNG=#3;    ! Hung device
bind ?.IATIM=#4;    ! SETTIM timer interrupt
bind ?.IADEV=#5;    ! Device error
bind ?.IAWAK=#6;    ! Wake UUO for this frame
bind ?.IAFEL=#7;    ! Page fault (WS=WSL)
bind ?.IAFLL=#10;    ! Page fault (WSWSL)
bind ?.IAREF=#11;    ! Reference-bit trap
bind ?.IAERR=#12;    ! Paging I/O error
bind ?.IANTQ=#13;    ! Notice to quit (sys going down)
bind ?.IAFEX=#14;    ! Frame exit in child


%%%  INTRMT ERROR CODES  %%%

bind ?IRBCH%=#1;    ! bad I/O channel
bind ?IRBDR%=#5;    ! bad interrupt reason
bind ?IRBIC%=#6;    ! bad interrupt channel number
bind ?IRNIS%=#7;    ! no INTADR system in effect.


%%%  CLUB INTERLOCK STATUS FLAGS  %%%

bind ?CB.NML=#1;    ! last interlock release was normal
bind ?CB.EVI=#2;    ! Ever Interlocked


%%%  CLUB FACILITY STANDARD ERROR CODES  %%%

bind ?CBVPR%=#1;    ! VP number out of legal range
bind ?CBNEX%=#2;    ! VP does not exist (has no disk page mapped)
bind ?CBINC%=#3;    ! Caller already in a club for this VP
bind ?CBIDO%=#4;    ! Club ID number overflow
bind ?CBNIC%=#5;    ! Not in Club (from UUOs requiring club membership)
bind ?CBVPM%=#6;    ! VP mismatch
bind ?CBHIL%=#7;    ! Have Interlock,cannot perform UUO at this time
bind ?CBAIL%=#10;    ! Attempted to get Interlock, but it was busy
bind ?CBNIL%=#11;    ! No Interlock
bind ?CBCNT%=#12;    ! Requested count of club members is 0
bind ?CBNFC%=#13;    ! Not First Class
bind ?CBJNI%=#14;    ! Frame Not In your club,can't get info on it


%%%  GETTAB TABLE NUMBERS  %%%

bind ?.GTFTR=-#54;    ! frame tree information
bind ?.GTUID=-#53;    ! Universal ID
bind ?.GTPNO=-#52;    ! Program Number
bind ?.GTSPW=-#51;    ! double precision pages-to-WS*size
bind ?.GTPWS=-#50;    ! pages to working-set
bind ?.GTMPC=-#47;    ! pages mapped/created
bind ?.GTMCY=-#46;    ! double precision microcycles
bind ?.GTKCM=-#45;    ! double precision K-core microcycles
bind ?.GTTRU=-#44;    ! double precision TRUs * 10^4
bind ?.GTTR2=-#43;    ! high order TRUs * 10^4
bind ?.GTMC2=-#42;    ! high order microcycles
bind ?.GTBIO=-#41;    ! block IO chars transmitted
bind ?.GTBET=-#40;    ! BIO elapsed time (sec)
bind ?.GTSOK=-#37;    ! TYMCHG TRUs * 10^4
bind ?.GTLNK=-#36;    ! debugging tables


bind ?.GTERN=-#33;    ! ENTER + RENAME count
bind ?.GTLPS=-#32;    ! tty input line position
bind ?.GTMOD=-#31;    ! tty mode (GETSTS info)
bind ?.GTLIM=-#30;    ! time limit (TRUs * 10^4)
bind ?.GTLIN=-#27;    ! TTY: name in SIXBIT (lh)=0 if detached
bind ?.GTJOB=-#26;    ! frame who owns this port
bind ?.GTFPN=-#25;    ! File Proj-prog Number
bind ?.GTLOG=-#24;    ! LDBLOG info (Table 18-7b)
bind ?.GTAUN=-#23;    ! Accounting User Number
bind ?.GTUNM=-#22;    ! user name (1-6) SIXBIT
bind ?.GTUN1=-#21;    ! user name (7-12) SIXBIT
bind ?.GTLIC=-#20;    ! license word


bind ?.GTMC1=-#15;    ! low order microcycles
bind ?.GTKM2=-#14;    ! high order K-core microcycles
bind ?.GTBCS=-#13;    ! K-core break chars
bind ?.GTCNK=-#12;    ! attach time (sec)
bind ?.GTELP=-#11;    ! K-core seconds
bind ?.GTCOT=-#10;    ! characters output
bind ?.GTCIN=-#7;    ! characters input
bind ?.GTSOT=-#6;    ! K-core DSK blocks out
bind ?.GTSIN=-#5;    ! K-core DSK blocks in
bind ?.GTSRN=-#4;    ! K-core ENTER + RENAME
bind ?.GTSLK=-#3;    ! K-core LOOKUP
bind ?.GTDLK=-#2;    ! LOOKUP count

bind ?.GTSTS=#0;    ! Status Bits (Table 2-7 )

bind ?.GTPPN=#2;    ! Project Programmer Number
bind ?.GTNAM=#3;    ! SIXBIT user program name
bind ?.GTTR1=#4;    ! low order TRUs * 10^4
bind ?.GTKM1=#5;    ! low order K-core microcycles
bind ?.GTPRV=#6;    ! Privilege Bits (Table 2-3 )
bind ?.GTSWP=#7;    ! swapper status bits
bind ?.GTTTY=#10;    ! address of TTY DDB
bind ?.GTCNF=#11;    ! config data (Table 18-7 )
bind ?.GTNSW=#12;    ! nonswap data (Table 18-8c)


bind ?.GTODP=#15;    ! ONCE-time disk parameters (Table 18-9 )
bind ?.GTLVD=#16;    ! level-D disk (Table 18-8b)
bind ?.GTRCT=#17;    ! DSK blocks in
bind ?.GTWCT=#20;    ! DSK blocks out


bind ?.GTSLF=#23;    ! GETTAB table addresses

bind ?.GTWSC=#25;    ! wait states (Table 18-10 )




%%%  .GTCNF ITEMS  %%%

bind ?.CNFG0=#0;    ! System Name (in ASCII)
bind ?.CNDT0=#5;    ! System Date (in ASCII)
bind ?.CNTAP=#7;    ! System Device Name (in SIXBIT)
bind ?.CNTIM=#10;    ! jiffies since midnight GMT
bind ?.CNDAT=#11;    ! days since 1 January 1964 GMT
bind ?.CNSIZ=#12;    ! words used by monitor
bind ?.CNOPR=#13;    ! operator console name (in SIXBIT)
bind ?.CNDEV=#14;    ! lh = address of first DDB
bind ?.CNNJB=#15;    ! largest possible frame number+1
bind ?.CNSTS=#17;    ! states word
bind ?.CNSER=#20;    ! cpu serial number
bind ?.CNNSM=#21;    ! memory cycle time (in nanoseconds)
bind ?.CNFRE=#22;    ! freecore bit map AOBJN pointer
bind ?.CNLOC=#23;    ! address of first freecore
bind ?.CNPTS=#24;    ! number of ports
bind ?.CNLGO=#25;    ! LOGOUT program name (in SIXBIT)
bind ?.CNJPS=#26;    ! jiffies per second
bind ?.CNJPM=#27;    ! jiffies per minute
bind ?.CNJPH=#30;    ! jiffies per hour
bind ?.CNHGH=#31;    ! highest addressible block in core
bind ?.CNHFD=#32;    ! Snoopy facility buffer size,,beginning loc
bind ?.CNSYS=#33;    ! system number
bind ?.CNFCW=#34;    ! freecore words allocated
bind ?.CNSCC=#35;    ! Soft Crash Countdown in seconds
bind ?.CNS30=#36;    ! XWD SAV30,NUMTAB  info for crash analysis


%%%  .GTLOG BITS (GETTAB -24)  %%%

bind ?LG.ZAP=#1;    ! a zapper has been received on this port
bind ?LG.GON=#1;    ! this port is gone
bind ?LG.HDX=#1;    ! this port is half-duplex
bind ?LG.NAX=#1;    ! 1 if this port is not an aux circuit
bind ?LG.TID=#17;    ! terminal identifier code
bind ?LG.ND1=#77;    ! high-order 6 bits of the originating node number
bind ?LG.ND2=#77;    ! low-order 6 bits of the originating node number
bind ?LG.PORT=#0;    ! TYMNET port number                         177B35


%%%  .GTLVD (GETTAB 16) ITEMS  %%%

bind ?.LDMFD=#0;    ! MFD PPN [1,1]
bind ?.LDSYS=#1;    ! SYS PPN [1,4]
bind ?.LDFSF=#2;    ! FAILSAFE PPN  (obsolete)
bind ?.LDHLP=#3;    ! HELP PPN (obsolete)
bind ?.LDSPL=#4;    ! SPOOL PPN (obsolete)
bind ?.LDDRB=#5;    ! directory block pointers
bind ?.LDSTR=#6;    ! (obsolete)
bind ?.LDUNI=#7;    ! unit data block pointers
bind ?.LDSWP=#10;    ! (unused)
bind ?.LDCBN=#11;    ! number of file system core blocks
bind ?.LDSTP=#12;    ! standard file protection
bind ?.LDUFP=#13;    ! standard directory protection
bind ?.LDRPC=#14;    ! number of RIB PCBs
bind ?.LDSPC=#15;    ! number of SAT PCBs
bind ?.LDQST=#16;    ! sixbit name of fastest STR
bind ?.LDACT=#17;    ! accounting program PPN [6,270]
bind ?.LDCRS=#20;    ! (obsolete)
bind ?.LDLKB=#21;    ! longest meaningful LOOKUP block size


%%%  .GTNSW ITEMS (GETTAB 12)  %%%

bind ?.NSCMX=#10;    ! maximum CORE request + 1
bind ?.NSCTL=#12;    ! # free core blocks left
bind ?.NSUPT=#15;    ! uptime (in jiffies)
bind ?.NSHJB=#20;    ! highest frame number currently assigned
bind ?.NSCLW=#21;    ! (obsolete) words cleared by CLRCOR
bind ?.NSLST=#22;    ! lost time (in jiffies)
bind ?.NSMMS=#23;    ! physical memory size (in words)
bind ?.NSTPE=#24;    ! # parity errors
bind ?.NSSPE=#25;    ! # spurious parity errors
bind ?.NSCPE=#26;    ! # oper cont from parity errors
bind ?.NSMPA=#27;    ! addr of last parity error
bind ?.NSMPW=#30;    ! contents of that word
bind ?.NSMPP=#31;    ! PC at the time of that error
bind ?.NSNUL=#34;    ! null time (tics)
bind ?.NSNMN=#35;    ! null time during the last minute (tics)
bind ?.NSALR=#36;    ! alarm (unhappy msg) bits
bind ?.NSMWM=#37;    ! monitor WS max size
bind ?.NSUID=#40;    ! latest UID issued (SYSUID)
bind ?.NSSTM=#41;    ! uptime of latest SCNSER cycle
bind ?.NSMXT=#42;    ! max time between SCNSER cycles


%%%  .GTODP ITEMS (ONCE DISK PARAMETERS)  %%%

bind ?.ODSWH=#0;    ! highest block for swapping (obsolete)
bind ?.ODSWK=#1;    ! K of disk words for swapping (obsolete)
bind ?.ODPRT=#2;    ! in-core protect mult (tics/page)
bind ?.ODPRA=#3;    ! in-core protect offset (tics)
bind ?.ODMXP=#4;    ! max value for ICPT function
bind ?.ODDCT=#5;    ! action code for DSKCLN


%%%  WAIT STATE CODES  %%%





























%%%  SETABK CONTROL BITS  %%%

bind ?AB.FET=#1;    ! break on instruction-fetch
bind ?AB.RED=#1;    ! break on reads
bind ?AB.WRT=#1;    ! break on writes
bind ?AB.USR=#1;    ! 0=monitor, 1=user address


end;
  n