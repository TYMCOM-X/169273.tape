.calliDef +72,HIBER,|wait for event|;
.b!ex
	MOVE	ac, [bits,,time]
	HIBER	ac,
	  error return
	normal return
.!sag
where <bits> = '0 for ms, '1 for sec, '2 for min time units,
+ '10 to return if a character arrives
+ '20 to return if a break character arrives (see !IABRK, {TabRef TINASS})
+ '40 to return when output is complete
+ '100 + port # in bits 0-8 if not command port
+ '200 to return on {CalliRef WAKE}
+ '400 to return on frame exit in "child" frames
.e!ex
Let <port> be c(<bits> bits 0-1) if the '100 bit
of <bits> is set, the command port otherwise,
taking the error return if a port is specified
and does not belong to the frame
or if the command port is specified and the frame
is running detached.

If <time> is specified in milliseconds,
convert if to jiffies,
rounding up (1 ms becomes 1 jiffy, not 0);
if it is specified in seconds or minutes,
and is greater than 2^16-1, set it to
2^16-1.

Note, however that if the  time specified will cause a clock interval
to be reached before the total specified time units have expired, the
wakeup will occur when the clock interval is reached, not at the
expiration of the time interval.  For example, if the time specified
is 60 seconds and the current time is 1:3:45, the wakeup will occur at
1:4:00, not 1:4:45.


Wait until one of the specified events occurs,
then skip-return.

The sleep time is only kept in jiffies,
and it is less accurate than that,
since it may take several seconds for an awakened frame
to be rescheduled.

An "output complete" HIBER sends a yellow ball
and waits for an orange ball to come back.
Since balls can be lost,
a sleep time should always be specified
(as a timeout).

HIBER uses software interrupt channel 36, a fact not
normally visible to any program.  This is a channel on which
interrupt causes cannot directly be assigned with
TINASS or INTASS.  However TINASS or INTASS can report
that a certain cause was previously assigned on
channel 36 if that cause was previously among the
<bits> in a HIBER.

If a HIBER is executed which has <bits> which
specify conditions on a port for which a TINASS has already
enabled interrupts, then the HIBER <bits> are ignored and
the interrupts remain as they were.  However, if the HIBER
has bits for WAKE or Frame Exit in child, and if these
conditions were previously enabled via INTASS, then 
the channel assignments for those conditions are lost and
the HIBER interrupt assignment is put in force.
.endSec HIBER:
