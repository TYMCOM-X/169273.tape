******NOTE****** THE FOLLOWING WILL NOT MATCH CONTROL CHARACTERS
		&ALPHABET BREAK(' ') SPAN(' ') REM . NOSPACES
		BR = BREAK(' ') @FIN SPAN(' ') SPAN(NOSPACES) RPOS(0)
		COLUMNS = 4
		ROWS = 7
		MAXLINES = 6
		WIDTH = 132 / COLUMNS
		NAMES = ROWS * COLUMNS
		ALPHAS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
		NULL =
		CRLF = ASCII(15) ASCII(12)
		DEFINE('OPT(ARG)')
		DEFINE('PAGE(ARG,NLINES)')
		DEFINE('PARSE(STRING,LINE)')
+								:(START)

*
*
*
PARSE		STRING = TRIM(STRING)
		PARSE = IDENT(STRING) LINE			:S(RETURN)
		STRING BREAK(';') . TEMP ';' =			:S(SIZE.CHECK)
		TEMP = STRING
		STRING =
SIZE.CHECK	FIN = GE(WIDTH,SIZE(TEMP)) SIZE(TEMP)		:S(SET.ITEM)
		TEMP	BR					:F(WIDTH.BREAK)
		GE(WIDTH,FIN)					:S(SET.ITEM)
		TEMP LEN(WIDTH) . TEMP1
		TEMP1	BR					:S(SET.ITEM)
WIDTH.BREAK	TTY = "[PHNCBL Cant Break Line '" temp string "']"
		FIN = WIDTH
SET.ITEM	TEMP LEN(FIN) . THIS.LINE OPT(SPAN(' ')) =
		PLINES<LINE> = RPAD(PLINES<LINE>,WIDTH * I) THIS.LINE
		GT(LINE,MAXLINES)				:S(DONT.INC)
		LINE = LINE + 1
DONT.INC	IDENT(TEMP)					:F(SIZE.CHECK)
		PARSE = IDENT(STRING) LINE			:S(RETURN)F(PARSE)
*
*
OPT		OPT = ARG ! NULL				:(RETURN)
*
*
PAGE		DSKOUT = IDENT(ARG,0)	CRLF	CRLF
+			 LPAD('Personal Telephone Directory',47) CRLF
		PAGE = LT(ARG + NLINES,55)  ARG + NLINES	:S(RETURN)
		DSKOUT = ASCII(14)
		PAGE = 1
		DSKOUT = CRLF CRLF LPAD('Personal Telephone Directory',47) CRLF
+								:(RETURN)
*
*

START		TTY = '[PHNEPF	Enter phone filename]'
		FILESPEC = TTY
		FILE(FILESPEC)					:F(TRYDFT)
		INPUT(.DSKIN,FILESPEC)				:S(OKFILE)
TRYDFT		FILE("PHONE.NUM")				:F(START)
		INPUT(.DSKIN,"PHONE.NUM")			:F(START)
OKFILE		OUTPUT(.DSKOUT,"ADDRES.LST")
		ENTRIES = 0
		LIST = TABLE()
LOOP		ELEMENT = DSKIN					:F(NOW.SORT)
		ENTRIES = ENTRIES + 1
		ELEMENT BREAK('@') '@' BREAK('@') '@' (BREAK('@') . PHONE)
+								:F(PHNBDE)
		ELEMENT	'@' = ' @'
		ELEMENT LEN(1) . FIRST
		ALPHAS FIRST					:S<2>
		FIRST = '.'
		$('LEN.' FIRST) = $('LEN.' FIRST) + 1
		LIST<ELEMENT> =	PHONE				:(LOOP)

NOW.SORT	PHONE.LIST = SORT(LIST)
		PROTOTYPE(PHONE.LIST) BREAK(',') . SIZE
		PAGER	= 0
		COUNT	= 1
		LAST	=
		PLINES = ARRAY(MAXLINES)
LIST.IT		PHONE.LIST<COUNT,1> LEN(1) . FIRST
		ALPHAS FIRST					:S<2>
		FIRST = '.'
		LETTERCOUNT = $('LEN.' FIRST)
PRINT1		J = 0
PRINT		K = 1
C.LOOP		PLINES<K> =
		K = LT(K,MAXLINES) K + 1			:S(C.LOOP)
		I = 0
LOOP1		GT(I * ROWS + J + 1,LETTERCOUNT)		:S(SKIP)
		PHONE.LIST<COUNT + I * ROWS + J,1> BREAK('@') . PERSON '@'
+			BREAK('@') . ADDRESS '@' BREAK('@') . PHONE '@'
		LIN.NO = PARSE(PERSON,1)
		LIN.NO = PARSE(ADDRESS,LIN.NO)
		LIN.NO = PARSE('Phone: ' PHONE,LIN.NO)

		TTY = GT(LIN.NO - 1,MAXLINES) '%PHNTML Too Many Lines ' PERSON

		I = LT(I,COLUMNS - 1) I + 1			:S(LOOP1)
SKIP		K = 1
PLOOP		DSKOUT = PLINES<K>
		K = LT(K,MAXLINES) K + 1			:S(PLOOP)
		DSKOUT = CRLF
		J = LT(J,ROWS - 1) J + 1			:S(PRINT)
		DSKOUT = ASCII(14)
		LETTERCOUNT = GT(LETTERCOUNT,NAMES) LETTERCOUNT - NAMES
+								:F(NEXT)
		COUNT = COUNT + NAMES				:(PRINT1)
NEXT		COUNT = COUNT + LETTERCOUNT
		LE(COUNT,SIZE)					:S(LIST.IT)F(DONE)
PHNBDE		TTY = '%PHNBDE Bad data for Entry: ' ENTRIES	:(LOOP)
DONE		TTY = '[PHNNOE Number of entries: ' ENTRIES ' ]'
END
